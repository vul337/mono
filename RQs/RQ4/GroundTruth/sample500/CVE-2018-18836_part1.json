{
  "cve_id": "CVE-2018-18836",
  "cwe_ids": [
    "CWE-113",
    "CWE-116",
    "CWE-94",
    "CWE-200"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "netdata",
  "commit_msg": "fixed vulnerabilities identified by red4sec.com (#4521)",
  "commit_hash": "92327c9ec211bd1616315abcb255861b130b97ca",
  "git_url": "https://github.com/netdata/netdata/commit/92327c9ec211bd1616315abcb255861b130b97ca",
  "file_path": "libnetdata/url/url.c",
  "func_name": "url_decode_r",
  "func_before": "char *url_decode_r(char *to, char *url, size_t size) {\n    char *s = url,           // source\n         *d = to,            // destination\n         *e = &to[size - 1]; // destination end\n\n    while(*s && d < e) {\n        if(unlikely(*s == '%')) {\n            if(likely(s[1] && s[2])) {\n                *d++ = from_hex(s[1]) << 4 | from_hex(s[2]);\n                s += 2;\n            }\n        }\n        else if(unlikely(*s == '+'))\n            *d++ = ' ';\n\n        else\n            *d++ = *s;\n\n        s++;\n    }\n\n    *d = '\\0';\n\n    return to;\n}",
  "abstract_func_before": "char *url_decode_r(char *VAR_0, char *VAR_1, size_t VAR_2) {\n    char *VAR_3 = VAR_1,           /* COMMENT_0 */\n         *VAR_4 = VAR_0,            /* COMMENT_1 */\n         *VAR_5 = &VAR_0[VAR_2 - 1]; /* COMMENT_2 */\n\n    while(*VAR_3 && VAR_4 < VAR_5) {\n        if(unlikely(*VAR_3 == '%')) {\n            if(likely(VAR_3[1] && VAR_3[2])) {\n                *VAR_4++ = from_hex(VAR_3[1]) << 4 | from_hex(VAR_3[2]);\n                VAR_3 += 2;\n            }\n        }\n        else if(unlikely(*VAR_3 == '+'))\n            *VAR_4++ = ' ';\n\n        else\n            *VAR_4++ = *VAR_3;\n\n        VAR_3++;\n    }\n\n    *VAR_4 = '\\0';\n\n    return VAR_0;\n}",
  "func_graph_path_before": "netdata/92327c9ec211bd1616315abcb255861b130b97ca/url.c/vul/before/0.json",
  "func": "char *url_decode_r(char *to, char *url, size_t size) {\n    char *s = url,           // source\n         *d = to,            // destination\n         *e = &to[size - 1]; // destination end\n\n    while(*s && d < e) {\n        if(unlikely(*s == '%')) {\n            if(likely(s[1] && s[2])) {\n                char t = from_hex(s[1]) << 4 | from_hex(s[2]);\n                // avoid HTTP header injection\n                *d++ = (char)((isprint(t))? t : ' ');\n                s += 2;\n            }\n        }\n        else if(unlikely(*s == '+'))\n            *d++ = ' ';\n\n        else\n            *d++ = *s;\n\n        s++;\n    }\n\n    *d = '\\0';\n\n    return to;\n}",
  "abstract_func": "char *url_decode_r(char *VAR_0, char *VAR_1, size_t VAR_2) {\n    char *VAR_3 = VAR_1,           /* COMMENT_0 */\n         *VAR_4 = VAR_0,            /* COMMENT_1 */\n         *VAR_5 = &VAR_0[VAR_2 - 1]; /* COMMENT_2 */\n\n    while(*VAR_3 && VAR_4 < VAR_5) {\n        if(unlikely(*VAR_3 == '%')) {\n            if(likely(VAR_3[1] && VAR_3[2])) {\n                char VAR_6 = from_hex(VAR_3[1]) << 4 | from_hex(VAR_3[2]);\n                /* COMMENT_3 */\n                *VAR_4++ = (char)((isprint(VAR_6))? VAR_6 : ' ');\n                VAR_3 += 2;\n            }\n        }\n        else if(unlikely(*VAR_3 == '+'))\n            *VAR_4++ = ' ';\n\n        else\n            *VAR_4++ = *VAR_3;\n\n        VAR_3++;\n    }\n\n    *VAR_4 = '\\0';\n\n    return VAR_0;\n}",
  "func_graph_path": "netdata/92327c9ec211bd1616315abcb255861b130b97ca/url.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,7 +6,9 @@\n     while(*s && d < e) {\n         if(unlikely(*s == '%')) {\n             if(likely(s[1] && s[2])) {\n-                *d++ = from_hex(s[1]) << 4 | from_hex(s[2]);\n+                char t = from_hex(s[1]) << 4 | from_hex(s[2]);\n+                // avoid HTTP header injection\n+                *d++ = (char)((isprint(t))? t : ' ');\n                 s += 2;\n             }\n         }",
  "diff_line_info": {
    "deleted_lines": [
      "                *d++ = from_hex(s[1]) << 4 | from_hex(s[2]);"
    ],
    "added_lines": [
      "                char t = from_hex(s[1]) << 4 | from_hex(s[2]);",
      "                // avoid HTTP header injection",
      "                *d++ = (char)((isprint(t))? t : ' ');"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/netdata/netdata/pull/4521",
  "description": {
    "pr_info": {
      "title": "fixed vulnerabilities identified by red4sec.com",
      "number": 4521
    },
    "comment": [
      "##### Summary\r\n<!--- Describe the change below, including rationale and design decisions -->\r\n\r\nI received an email by Red4Sec.com that identified 4 security issues on the netdata web server:\r\n\r\n1. HTTP header injection (make the web server return a specific HTTP header)\r\n2. LOG injection (make the web server log a line at its logs)\r\n3. JSON injection (make the web server return a JSON response)\r\n4. Full Path Disclosure\r\n\r\nThis PR fixes the 3 first of them.\r\n\r\nThe 4th one is intentional.\r\n\r\n<!--- HINT: Include \"Fixes #nnn\" if you are fixing an existing issue -->\r\n\r\n##### Component Name\r\n<!--- Write the short name of the module or plugin below -->\r\n\r\ncore/webserver\r\n\r\n##### Additional Information\r\n<!--- Include additional information to help people understand the change here -->\r\n<!--- A step-by-step reproduction of the problem is helpful if there is no related issue -->\r\n\r\n<!--- Paste log output below, e.g. before and after your change -->\r\n```paste below\r\n\r\n```\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0\n\nThe commit explicitly addresses security vulnerabilities by fixing issues related to HTTP header injection, LOG injection, and JSON injection. The code changes implement input validation to prevent these attacks, confirming it's a security fix."
}