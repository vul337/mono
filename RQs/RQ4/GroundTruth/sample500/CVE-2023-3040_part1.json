{
  "cve_id": "CVE-2023-3040",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "cloudflare/lua-resty-json",
  "commit_msg": "Fix out-of-bounds read in debug dump_obj function\n\nThe read of `reverse_nesting_order` was unconditional regardless\nof whether the object was really a composite object or not.",
  "commit_hash": "3ef9492bd3a44d9e51301d6adc3cd1789c8f534a",
  "git_url": "https://github.com/cloudflare/lua-resty-json/commit/3ef9492bd3a44d9e51301d6adc3cd1789c8f534a",
  "file_path": "parser.c",
  "func_name": "dump_obj",
  "func_before": "void __attribute__((cold))\ndump_obj(FILE* f, obj_t* obj) {\n    if (!obj) {\n        fprintf(f, \"null\\n\");\n        return;\n    }\n\n    obj_ty_t type = obj->obj_ty;\n    if (type <= OT_LAST_PRIMITIVE) {\n        dump_primitive_obj(f, obj);\n        fputc('\\n', f);\n    }\n\n    obj_composite_t* cobj = (obj_composite_t*)(void*)obj;\n    for (; cobj; cobj = cobj->reverse_nesting_order) {\n        dump_composite_obj(f, cobj);\n    }\n}",
  "abstract_func_before": "void __attribute__((VAR_0))\ndump_obj(FILE* VAR_1, obj_t* VAR_2) {\n    if (!VAR_2) {\n        fprintf(VAR_1, \"null\\n\");\n        return;\n    }\n\n    obj_ty_t VAR_3 = VAR_2->obj_ty;\n    if (VAR_3 <= VAR_4) {\n        dump_primitive_obj(VAR_1, VAR_2);\n        fputc('\\n', VAR_1);\n    }\n\n    obj_composite_t* VAR_5 = (obj_composite_t*)(void*)VAR_2;\n    for (; VAR_5; VAR_5 = VAR_5->reverse_nesting_order) {\n        dump_composite_obj(VAR_1, VAR_5);\n    }\n}",
  "func_graph_path_before": "cloudflare/lua-resty-json/3ef9492bd3a44d9e51301d6adc3cd1789c8f534a/parser.c/vul/before/0.json",
  "func": "void __attribute__((cold))\ndump_obj(FILE* f, obj_t* obj) {\n    if (!obj) {\n        fprintf(f, \"null\\n\");\n        return;\n    }\n\n    obj_ty_t type = obj->obj_ty;\n    if (type <= OT_LAST_PRIMITIVE) {\n        dump_primitive_obj(f, obj);\n        fputc('\\n', f);\n    } else {\n        obj_composite_t* cobj = (obj_composite_t*)(void*)obj;\n        for (; cobj; cobj = cobj->reverse_nesting_order) {\n            dump_composite_obj(f, cobj);\n        }\n    }\n}",
  "abstract_func": "void __attribute__((VAR_0))\ndump_obj(FILE* VAR_1, obj_t* VAR_2) {\n    if (!VAR_2) {\n        fprintf(VAR_1, \"null\\n\");\n        return;\n    }\n\n    obj_ty_t VAR_3 = VAR_2->obj_ty;\n    if (VAR_3 <= VAR_4) {\n        dump_primitive_obj(VAR_1, VAR_2);\n        fputc('\\n', VAR_1);\n    } else {\n        obj_composite_t* VAR_5 = (obj_composite_t*)(void*)VAR_2;\n        for (; VAR_5; VAR_5 = VAR_5->reverse_nesting_order) {\n            dump_composite_obj(VAR_1, VAR_5);\n        }\n    }\n}",
  "func_graph_path": "cloudflare/lua-resty-json/3ef9492bd3a44d9e51301d6adc3cd1789c8f534a/parser.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -9,10 +9,10 @@\n     if (type <= OT_LAST_PRIMITIVE) {\n         dump_primitive_obj(f, obj);\n         fputc('\\n', f);\n-    }\n-\n-    obj_composite_t* cobj = (obj_composite_t*)(void*)obj;\n-    for (; cobj; cobj = cobj->reverse_nesting_order) {\n-        dump_composite_obj(f, cobj);\n+    } else {\n+        obj_composite_t* cobj = (obj_composite_t*)(void*)obj;\n+        for (; cobj; cobj = cobj->reverse_nesting_order) {\n+            dump_composite_obj(f, cobj);\n+        }\n     }\n }",
  "diff_line_info": {
    "deleted_lines": [
      "    }",
      "",
      "    obj_composite_t* cobj = (obj_composite_t*)(void*)obj;",
      "    for (; cobj; cobj = cobj->reverse_nesting_order) {",
      "        dump_composite_obj(f, cobj);"
    ],
    "added_lines": [
      "    } else {",
      "        obj_composite_t* cobj = (obj_composite_t*)(void*)obj;",
      "        for (; cobj; cobj = cobj->reverse_nesting_order) {",
      "            dump_composite_obj(f, cobj);",
      "        }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/cloudflare/lua-resty-json/pull/14",
  "description": {
    "pr_info": {
      "title": "Fix out-of-bounds read in debug dump_obj function",
      "number": 14
    },
    "comment": [
      "The read of `reverse_nesting_order` was unconditional regardless of whether the object was really a composite object or not."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}