{
  "cve_id": "CVE-2020-24621",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "openmrs/openmrs-module-htmlformentry",
  "commit_msg": "HTML-730: Do not allow loading arbitrary files",
  "commit_hash": "458597984050461f1c88e4e3a403bf2b060f0844",
  "git_url": "https://github.com/openmrs/openmrs-module-htmlformentry/commit/458597984050461f1c88e4e3a403bf2b060f0844",
  "file_path": "omod/src/main/java/org/openmrs/module/htmlformentry/web/controller/HtmlFormFromFileController.java",
  "func_name": "handleRequest",
  "func_before": "@RequestMapping(\"/module/htmlformentry/htmlFormFromFile.form\")\n\tpublic void handleRequest(Model model, @RequestParam(value = \"filePath\", required = false) String filePath,\n\t        @RequestParam(value = \"patientId\", required = false) Integer pId,\n\t        @RequestParam(value = \"isFileUpload\", required = false) boolean isFileUpload, HttpServletRequest request)\n\t        throws Exception {\n\t\t\n\t\tContext.requirePrivilege(\"Manage Forms\");\n\t\t\n\t\tif (log.isDebugEnabled())\n\t\t\tlog.debug(\"In reference data...\");\n\t\t\n\t\tmodel.addAttribute(\"previewHtml\", \"\");\n\t\tString message = \"\";\n\t\tFile f = null;\n\t\ttry {\n\t\t\tif (isFileUpload) {\n\t\t\t\tMultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;\n\t\t\t\tMultipartFile multipartFile = multipartRequest.getFile(\"htmlFormFile\");\n\t\t\t\tif (multipartFile != null) {\n\t\t\t\t\t//use the same file for the logged in user\n\t\t\t\t\tf = new File(SystemUtils.JAVA_IO_TMPDIR,\n\t\t\t\t\t        TEMP_HTML_FORM_FILE_PREFIX + Context.getAuthenticatedUser().getSystemId());\n\t\t\t\t\tif (!f.exists())\n\t\t\t\t\t\tf.createNewFile();\n\t\t\t\t\t\n\t\t\t\t\tfilePath = f.getAbsolutePath();\n\t\t\t\t\tFileOutputStream fileOut = new FileOutputStream(f);\n\t\t\t\t\tIOUtils.copy(multipartFile.getInputStream(), fileOut);\n\t\t\t\t\tfileOut.close();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (StringUtils.hasText(filePath)) {\n\t\t\t\t\tf = new File(filePath);\n\t\t\t\t} else {\n\t\t\t\t\tmessage = \"You must specify a file path to preview from file\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (f != null && f.exists() && f.canRead()) {\n\t\t\t\tmodel.addAttribute(\"filePath\", filePath);\n\t\t\t\t\n\t\t\t\tStringWriter writer = new StringWriter();\n\t\t\t\tIOUtils.copy(new FileInputStream(f), writer, \"UTF-8\");\n\t\t\t\tString xml = writer.toString();\n\t\t\t\t\n\t\t\t\tPatient p = null;\n\t\t\t\tif (pId != null) {\n\t\t\t\t\tp = Context.getPatientService().getPatient(pId);\n\t\t\t\t} else {\n\t\t\t\t\tp = HtmlFormEntryUtil.getFakePerson();\n\t\t\t\t}\n\t\t\t\tHtmlForm fakeForm = new HtmlForm();\n\t\t\t\tfakeForm.setXmlData(xml);\n\t\t\t\tFormEntrySession fes = new FormEntrySession(p, null, Mode.ENTER, fakeForm, request.getSession());\n\t\t\t\tString html = fes.getHtmlToDisplay();\n\t\t\t\tif (fes.getFieldAccessorJavascript() != null) {\n\t\t\t\t\thtml += \"<script>\" + fes.getFieldAccessorJavascript() + \"</script>\";\n\t\t\t\t}\n\t\t\t\tmodel.addAttribute(\"previewHtml\", html);\n\t\t\t\t//clear the error message\n\t\t\t\tmessage = \"\";\n\t\t\t} else {\n\t\t\t\tmessage = \"Please specify a valid file path or select a valid file.\";\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(\"An error occurred while loading the html.\", e);\n\t\t\tmessage = \"An error occurred while loading the html. \" + e.getMessage();\n\t\t}\n\t\t\n\t\tmodel.addAttribute(\"message\", message);\n\t\tmodel.addAttribute(\"isFileUpload\", isFileUpload);\n\t}",
  "abstract_func_before": "@RequestMapping(\"/module/htmlformentry/htmlFormFromFile.form\")\n\tpublic void handleRequest(Model VAR_0, @RequestParam(VAR_1 = \"filePath\", VAR_2 = false) String VAR_3,\n\t        @RequestParam(VAR_1 = \"patientId\", VAR_2 = false) Integer VAR_4,\n\t        @RequestParam(VAR_1 = \"isFileUpload\", VAR_2 = false) boolean VAR_5, HttpServletRequest VAR_6)\n\t        throws Exception {\n\t\t\n\t\tVAR_7.requirePrivilege(\"Manage Forms\");\n\t\t\n\t\tif (VAR_8.isDebugEnabled())\n\t\t\tVAR_8.debug(\"In reference data...\");\n\t\t\n\t\tVAR_0.addAttribute(\"previewHtml\", \"\");\n\t\tString VAR_9 = \"\";\n\t\tFile VAR_10 = null;\n\t\ttry {\n\t\t\tif (VAR_5) {\n\t\t\t\tMultipartHttpServletRequest VAR_11 = (MultipartHttpServletRequest) VAR_6;\n\t\t\t\tMultipartFile VAR_12 = VAR_11.getFile(\"htmlFormFile\");\n\t\t\t\tif (VAR_12 != null) {\n\t\t\t\t\t/* COMMENT_0 */\n\t\t\t\t\tVAR_10 = new File(VAR_13.JAVA_IO_TMPDIR,\n\t\t\t\t\t        VAR_14 + VAR_7.getAuthenticatedUser().getSystemId());\n\t\t\t\t\tif (!VAR_10.exists())\n\t\t\t\t\t\tVAR_10.createNewFile();\n\t\t\t\t\t\n\t\t\t\t\tVAR_3 = VAR_10.getAbsolutePath();\n\t\t\t\t\tFileOutputStream VAR_15 = new FileOutputStream(VAR_10);\n\t\t\t\t\tVAR_16.copy(VAR_12.getInputStream(), VAR_15);\n\t\t\t\t\tVAR_15.close();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (VAR_17.hasText(VAR_3)) {\n\t\t\t\t\tVAR_10 = new File(VAR_3);\n\t\t\t\t} else {\n\t\t\t\t\tVAR_9 = \"You must specify a file path to preview from file\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (VAR_10 != null && VAR_10.exists() && VAR_10.canRead()) {\n\t\t\t\tVAR_0.addAttribute(\"filePath\", VAR_3);\n\t\t\t\t\n\t\t\t\tStringWriter VAR_18 = new StringWriter();\n\t\t\t\tVAR_16.copy(new FileInputStream(VAR_10), VAR_18, \"UTF-8\");\n\t\t\t\tString VAR_19 = VAR_18.toString();\n\t\t\t\t\n\t\t\t\tPatient VAR_20 = null;\n\t\t\t\tif (VAR_4 != null) {\n\t\t\t\t\tVAR_20 = VAR_7.getPatientService().getPatient(VAR_4);\n\t\t\t\t} else {\n\t\t\t\t\tVAR_20 = VAR_21.getFakePerson();\n\t\t\t\t}\n\t\t\t\tHtmlForm VAR_22 = new HtmlForm();\n\t\t\t\tVAR_22.setXmlData(VAR_19);\n\t\t\t\tFormEntrySession VAR_23 = new FormEntrySession(VAR_20, null, VAR_24.ENTER, VAR_22, VAR_6.getSession());\n\t\t\t\tString VAR_25 = VAR_23.getHtmlToDisplay();\n\t\t\t\tif (VAR_23.getFieldAccessorJavascript() != null) {\n\t\t\t\t\tVAR_25 += \"<script>\" + VAR_23.getFieldAccessorJavascript() + \"</script>\";\n\t\t\t\t}\n\t\t\t\tVAR_0.addAttribute(\"previewHtml\", VAR_25);\n\t\t\t\t/* COMMENT_1 */\n\t\t\t\tVAR_9 = \"\";\n\t\t\t} else {\n\t\t\t\tVAR_9 = \"Please specify a valid file path or select a valid file.\";\n\t\t\t}\n\t\t}\n\t\tcatch (Exception VAR_26) {\n\t\t\tVAR_8.error(\"An error occurred while loading the html.\", VAR_26);\n\t\t\tVAR_9 = \"An error occurred while loading the html. \" + VAR_26.getMessage();\n\t\t}\n\t\t\n\t\tVAR_0.addAttribute(\"message\", VAR_9);\n\t\tVAR_0.addAttribute(\"isFileUpload\", VAR_5);\n\t}",
  "func_graph_path_before": "openmrs/openmrs-module-htmlformentry/458597984050461f1c88e4e3a403bf2b060f0844/HtmlFormFromFileController.java/vul/before/0.json",
  "func": "@RequestMapping(\"/module/htmlformentry/htmlFormFromFile.form\")\n\tpublic void handleRequest(Model model, @RequestParam(value = \"filePath\", required = false) String filePath,\n\t        @RequestParam(value = \"patientId\", required = false) Integer pId,\n\t        @RequestParam(value = \"isFileUpload\", required = false) boolean isFileUpload, HttpServletRequest request)\n\t        throws Exception {\n\t\t\n\t\tContext.requirePrivilege(\"Manage Forms\");\n\t\t\n\t\tif (log.isDebugEnabled())\n\t\t\tlog.debug(\"In reference data...\");\n\t\t\n\t\tmodel.addAttribute(\"previewHtml\", \"\");\n\t\tString message;\n\t\tFile f = null;\n\t\ttry {\n\t\t\tif (isFileUpload) {\n\t\t\t\tMultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;\n\t\t\t\tMultipartFile multipartFile = multipartRequest.getFile(\"htmlFormFile\");\n\t\t\t\tif (multipartFile != null) {\n\t\t\t\t\t// use an unpredictable file name\n\t\t\t\t\tf = File.createTempFile(TEMP_HTML_FORM_FILE_PREFIX, \".tmp\");\n\t\t\t\t\tf.deleteOnExit();\n\t\t\t\t\t\n\t\t\t\t\tfilePath = f.getAbsolutePath();\n\t\t\t\t\tFileOutputStream fileOut = new FileOutputStream(f);\n\t\t\t\t\tIOUtils.copy(multipartFile.getInputStream(), fileOut);\n\t\t\t\t\tfileOut.close();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (StringUtils.hasText(filePath)) {\n\t\t\t\t\tf = new File(filePath);\n\t\t\t\t\t// prevent reading  a file via an absolute path or path traversal\n\t\t\t\t\tif (f.isAbsolute() || !FilenameUtils.normalize(filePath).equals(filePath)) {\n\t\t\t\t\t\tf = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (f != null && f.exists() && f.canRead()) {\n\t\t\t\tmodel.addAttribute(\"filePath\", filePath);\n\t\t\t\t\n\t\t\t\tStringWriter writer = new StringWriter();\n\t\t\t\tIOUtils.copy(new FileInputStream(f), writer, \"UTF-8\");\n\t\t\t\tString xml = writer.toString();\n\t\t\t\t\n\t\t\t\t// validate file is actually xml\n\t\t\t\tHtmlFormEntryUtil.stringToDocument(xml);\n\t\t\t\t\n\t\t\t\tPatient p;\n\t\t\t\tif (pId != null) {\n\t\t\t\t\tp = Context.getPatientService().getPatient(pId);\n\t\t\t\t} else {\n\t\t\t\t\tp = HtmlFormEntryUtil.getFakePerson();\n\t\t\t\t}\n\t\t\t\tHtmlForm fakeForm = new HtmlForm();\n\t\t\t\tfakeForm.setXmlData(xml);\n\t\t\t\tFormEntrySession fes = new FormEntrySession(p, null, Mode.ENTER, fakeForm, request.getSession());\n\t\t\t\tString html = fes.getHtmlToDisplay();\n\t\t\t\tif (fes.getFieldAccessorJavascript() != null) {\n\t\t\t\t\thtml += \"<script>\" + fes.getFieldAccessorJavascript() + \"</script>\";\n\t\t\t\t}\n\t\t\t\tmodel.addAttribute(\"previewHtml\", html);\n\t\t\t\t//clear the error message\n\t\t\t\tmessage = \"\";\n\t\t\t} else {\n\t\t\t\tmessage = \"Please specify a valid file path or select a valid file.\";\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tlog.error(\"An error occurred while loading the html.\", e);\n\t\t\tmessage = \"An error occurred while loading the html. \" + e.getMessage();\n\t\t}\n\t\t\n\t\tmodel.addAttribute(\"message\", message);\n\t\tmodel.addAttribute(\"isFileUpload\", isFileUpload);\n\t}",
  "abstract_func": "@RequestMapping(\"/module/htmlformentry/htmlFormFromFile.form\")\n\tpublic void handleRequest(Model VAR_0, @RequestParam(VAR_1 = \"filePath\", VAR_2 = false) String VAR_3,\n\t        @RequestParam(VAR_1 = \"patientId\", VAR_2 = false) Integer VAR_4,\n\t        @RequestParam(VAR_1 = \"isFileUpload\", VAR_2 = false) boolean VAR_5, HttpServletRequest VAR_6)\n\t        throws Exception {\n\t\t\n\t\tVAR_7.requirePrivilege(\"Manage Forms\");\n\t\t\n\t\tif (VAR_8.isDebugEnabled())\n\t\t\tVAR_8.debug(\"In reference data...\");\n\t\t\n\t\tVAR_0.addAttribute(\"previewHtml\", \"\");\n\t\tString VAR_9;\n\t\tFile VAR_10 = null;\n\t\ttry {\n\t\t\tif (VAR_5) {\n\t\t\t\tMultipartHttpServletRequest VAR_11 = (MultipartHttpServletRequest) VAR_6;\n\t\t\t\tMultipartFile VAR_12 = VAR_11.getFile(\"htmlFormFile\");\n\t\t\t\tif (VAR_12 != null) {\n\t\t\t\t\t/* COMMENT_0 */\n\t\t\t\t\tVAR_10 = VAR_13.createTempFile(VAR_14, \".tmp\");\n\t\t\t\t\tVAR_10.deleteOnExit();\n\t\t\t\t\t\n\t\t\t\t\tVAR_3 = VAR_10.getAbsolutePath();\n\t\t\t\t\tFileOutputStream VAR_15 = new FileOutputStream(VAR_10);\n\t\t\t\t\tVAR_16.copy(VAR_12.getInputStream(), VAR_15);\n\t\t\t\t\tVAR_15.close();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (VAR_17.hasText(VAR_3)) {\n\t\t\t\t\tVAR_10 = new File(VAR_3);\n\t\t\t\t\t/* COMMENT_1 */\n\t\t\t\t\tif (VAR_10.isAbsolute() || !VAR_18.normalize(VAR_3).equals(VAR_3)) {\n\t\t\t\t\t\tVAR_10 = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (VAR_10 != null && VAR_10.exists() && VAR_10.canRead()) {\n\t\t\t\tVAR_0.addAttribute(\"filePath\", VAR_3);\n\t\t\t\t\n\t\t\t\tStringWriter VAR_19 = new StringWriter();\n\t\t\t\tVAR_16.copy(new FileInputStream(VAR_10), VAR_19, \"UTF-8\");\n\t\t\t\tString VAR_20 = VAR_19.toString();\n\t\t\t\t\n\t\t\t\t/* COMMENT_2 */\n\t\t\t\tVAR_21.stringToDocument(VAR_20);\n\t\t\t\t\n\t\t\t\tPatient VAR_22;\n\t\t\t\tif (VAR_4 != null) {\n\t\t\t\t\tVAR_22 = VAR_7.getPatientService().getPatient(VAR_4);\n\t\t\t\t} else {\n\t\t\t\t\tVAR_22 = VAR_21.getFakePerson();\n\t\t\t\t}\n\t\t\t\tHtmlForm VAR_23 = new HtmlForm();\n\t\t\t\tVAR_23.setXmlData(VAR_20);\n\t\t\t\tFormEntrySession VAR_24 = new FormEntrySession(VAR_22, null, VAR_25.ENTER, VAR_23, VAR_6.getSession());\n\t\t\t\tString VAR_26 = VAR_24.getHtmlToDisplay();\n\t\t\t\tif (VAR_24.getFieldAccessorJavascript() != null) {\n\t\t\t\t\tVAR_26 += \"<script>\" + VAR_24.getFieldAccessorJavascript() + \"</script>\";\n\t\t\t\t}\n\t\t\t\tVAR_0.addAttribute(\"previewHtml\", VAR_26);\n\t\t\t\t/* COMMENT_3 */\n\t\t\t\tVAR_9 = \"\";\n\t\t\t} else {\n\t\t\t\tVAR_9 = \"Please specify a valid file path or select a valid file.\";\n\t\t\t}\n\t\t}\n\t\tcatch (Exception VAR_27) {\n\t\t\tVAR_8.error(\"An error occurred while loading the html.\", VAR_27);\n\t\t\tVAR_9 = \"An error occurred while loading the html. \" + VAR_27.getMessage();\n\t\t}\n\t\t\n\t\tVAR_0.addAttribute(\"message\", VAR_9);\n\t\tVAR_0.addAttribute(\"isFileUpload\", VAR_5);\n\t}",
  "func_graph_path": "openmrs/openmrs-module-htmlformentry/458597984050461f1c88e4e3a403bf2b060f0844/HtmlFormFromFileController.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -10,18 +10,16 @@\n \t\t\tlog.debug(\"In reference data...\");\n \t\t\n \t\tmodel.addAttribute(\"previewHtml\", \"\");\n-\t\tString message = \"\";\n+\t\tString message;\n \t\tFile f = null;\n \t\ttry {\n \t\t\tif (isFileUpload) {\n \t\t\t\tMultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;\n \t\t\t\tMultipartFile multipartFile = multipartRequest.getFile(\"htmlFormFile\");\n \t\t\t\tif (multipartFile != null) {\n-\t\t\t\t\t//use the same file for the logged in user\n-\t\t\t\t\tf = new File(SystemUtils.JAVA_IO_TMPDIR,\n-\t\t\t\t\t        TEMP_HTML_FORM_FILE_PREFIX + Context.getAuthenticatedUser().getSystemId());\n-\t\t\t\t\tif (!f.exists())\n-\t\t\t\t\t\tf.createNewFile();\n+\t\t\t\t\t// use an unpredictable file name\n+\t\t\t\t\tf = File.createTempFile(TEMP_HTML_FORM_FILE_PREFIX, \".tmp\");\n+\t\t\t\t\tf.deleteOnExit();\n \t\t\t\t\t\n \t\t\t\t\tfilePath = f.getAbsolutePath();\n \t\t\t\t\tFileOutputStream fileOut = new FileOutputStream(f);\n@@ -31,8 +29,10 @@\n \t\t\t} else {\n \t\t\t\tif (StringUtils.hasText(filePath)) {\n \t\t\t\t\tf = new File(filePath);\n-\t\t\t\t} else {\n-\t\t\t\t\tmessage = \"You must specify a file path to preview from file\";\n+\t\t\t\t\t// prevent reading  a file via an absolute path or path traversal\n+\t\t\t\t\tif (f.isAbsolute() || !FilenameUtils.normalize(filePath).equals(filePath)) {\n+\t\t\t\t\t\tf = null;\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t\t\n@@ -43,7 +43,10 @@\n \t\t\t\tIOUtils.copy(new FileInputStream(f), writer, \"UTF-8\");\n \t\t\t\tString xml = writer.toString();\n \t\t\t\t\n-\t\t\t\tPatient p = null;\n+\t\t\t\t// validate file is actually xml\n+\t\t\t\tHtmlFormEntryUtil.stringToDocument(xml);\n+\t\t\t\t\n+\t\t\t\tPatient p;\n \t\t\t\tif (pId != null) {\n \t\t\t\t\tp = Context.getPatientService().getPatient(pId);\n \t\t\t\t} else {",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tString message = \"\";",
      "\t\t\t\t\t//use the same file for the logged in user",
      "\t\t\t\t\tf = new File(SystemUtils.JAVA_IO_TMPDIR,",
      "\t\t\t\t\t        TEMP_HTML_FORM_FILE_PREFIX + Context.getAuthenticatedUser().getSystemId());",
      "\t\t\t\t\tif (!f.exists())",
      "\t\t\t\t\t\tf.createNewFile();",
      "\t\t\t\t} else {",
      "\t\t\t\t\tmessage = \"You must specify a file path to preview from file\";",
      "\t\t\t\tPatient p = null;"
    ],
    "added_lines": [
      "\t\tString message;",
      "\t\t\t\t\t// use an unpredictable file name",
      "\t\t\t\t\tf = File.createTempFile(TEMP_HTML_FORM_FILE_PREFIX, \".tmp\");",
      "\t\t\t\t\tf.deleteOnExit();",
      "\t\t\t\t\t// prevent reading  a file via an absolute path or path traversal",
      "\t\t\t\t\tif (f.isAbsolute() || !FilenameUtils.normalize(filePath).equals(filePath)) {",
      "\t\t\t\t\t\tf = null;",
      "\t\t\t\t\t}",
      "\t\t\t\t// validate file is actually xml",
      "\t\t\t\tHtmlFormEntryUtil.stringToDocument(xml);",
      "\t\t\t\t",
      "\t\t\t\tPatient p;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/openmrs/openmrs-module-htmlformentry/pull/178",
  "description": {
    "pr_info": {
      "title": "HTML-730: Do not allow loading arbitrary files",
      "number": 178
    },
    "comment": [
      "<!--- Add a pull request title above in this format -->\r\n<!--- real example: 'HTML-671 Current Status in the Module Information page shows the binary values' -->\r\n<!--- 'HTML-JiraIssueNumber JiraIssueTitle' -->\r\n## Description of what I changed\r\n<!--- Describe your changes in detail -->\r\n<!--- It can simply be your commit message, which you must have -->\r\nThis prevents the load of files via absolute paths or path traversal.\r\n\r\n## Issue I worked on\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- Want a new feature or change? Discuss it in an issue first -->\r\n<!--- Found a bug? Point us to the issue/or create one so we can reproduce it -->\r\n<!--- Just add the issue number at the end: -->\r\nsee https://issues.openmrs.org/browse/HTML-730\r\n\r\n## Checklist: I completed these to help reviewers :)\r\n<!--- Put an `x` in the box if you did the task -->\r\n<!--- If you forgot a task please follow the instructions below -->\r\n- [x] My pull request only contains **ONE single commit**\r\n(the number above, next to the 'Commits' tab is 1).\r\n\r\n  No? -> [read here](https://wiki.openmrs.org/display/docs/Pull+Request+Tips) on how to squash multiple commits into one\r\n\r\n- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.\r\n\r\n  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`\r\n\r\n- x ] I have **added tests** to cover my changes. (If you refactored\r\n  existing code that was well tested you do not have to add tests)\r\n\r\n  No? -> write tests and add them to this commit `git add . && git commit --amend`\r\n\r\n- [x] I ran `mvn clean package` right before creating this pull request and\r\n  added all formatting changes to my commit.\r\n\r\n  No? -> execute above command\r\n\r\n- [x] All new and existing **tests passed**.\r\n\r\n  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\r\n\r\n- [x] My pull request is **based on the latest changes** of the master branch.\r\n\r\n  No? Unsure? -> execute command `git pull --rebase upstream master`\r\n\r\n",
      "How did u make it to push and run two travis at the same time. Some advise because it seems intresting and good idea",
      "@sherrif10 It's actually caused by the repository configuration in Travis and the fact that I'm developing this on a branch of the HTMLFormEntry module, so one of those Travis builds kicks off because I updated the branch and the other because I updated the PR.",
      "@ibacher Sounds great however it seems not to be advised to someone , thanks"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95  \n\nThe patch addresses a security issue by preventing file loading via absolute paths or path traversal, made evident by the commit message and code modifications that enhance file handling security.\n\n**Confidence Score Explanation:**  \nThe confidence score is 0.95 because the commit clearly targets a security vulnerability, and the code changes align perfectly with the described intent to prevent file traversal attacks. All indicators are strongly consistent, leaving little room for ambiguity.\n\n**Answer:**  \nFinal Classification: Security Vulnerability Fix; Confidence: 0.95"
}