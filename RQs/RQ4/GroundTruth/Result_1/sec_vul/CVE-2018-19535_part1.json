{
  "cve_id": "CVE-2018-19535",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "Exiv2/exiv2",
  "commit_msg": "Fix more issues in PngChunk::readRawProfile",
  "commit_hash": "cf3ba049a2792ec2a4a877e343f5dd9654da53dc",
  "git_url": "https://github.com/Exiv2/exiv2/commit/cf3ba049a2792ec2a4a877e343f5dd9654da53dc",
  "file_path": "src/pngchunk_int.cpp",
  "func_name": "PngChunk::readRawProfile",
  "func_before": "DataBuf PngChunk::readRawProfile(const DataBuf& text,bool iTXt)\n    {\n        DataBuf                 info;\n        register long           i;\n        register unsigned char *dp;\n        const char             *sp;\n        unsigned int            nibbles;\n        long                    length;\n        unsigned char           unhex[103]={0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,1, 2,3,4,5,6,7,8,9,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,10,11,12,\n                                            13,14,15};\n        if (text.size_ == 0) {\n            return DataBuf();\n        }\n\n        if ( iTXt ) {\n            info.alloc(text.size_);\n            ::memcpy(info.pData_,text.pData_,text.size_);\n            return  info;\n        }\n\n\n        sp = (char*)text.pData_+1;\n        int pointerPos = 1;\n\n        // Look for newline\n        while (*sp != '\\n' && pointerPos < (text.size_ - 1))\n        {\n            sp++;\n            pointerPos++;\n        }\n\n        if (pointerPos == (text.size_ - 1))\n        {\n            return DataBuf();\n        }\n\n        // Look for length\n\n        while (*sp == '\\0' || *sp == ' ' || *sp == '\\n')\n            sp++;\n\n        length = (long) atol(sp);\n\n        while (*sp != ' ' && *sp != '\\n')\n            sp++;\n\n        // Allocate space\n\n        if (length == 0)\n        {\n#ifdef DEBUG\n            std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: invalid profile length\\n\";\n#endif\n        }\n\n        info.alloc(length);\n\n        if (info.size_ != length)\n        {\n#ifdef DEBUG\n            std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: cannot allocate memory\\n\";\n#endif\n            return DataBuf();\n        }\n\n        // Copy profile, skipping white space and column 1 \"=\" signs\n\n        dp      = (unsigned char*)info.pData_;\n        nibbles = length * 2;\n\n        for (i = 0; i < (long) nibbles; i++)\n        {\n            while (*sp < '0' || (*sp > '9' && *sp < 'a') || *sp > 'f')\n            {\n                if (*sp == '\\0')\n                {\n#ifdef DEBUG\n                    std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: ran out of data\\n\";\n#endif\n                    return DataBuf();\n                }\n\n                sp++;\n            }\n\n            if (i%2 == 0)\n                *dp = (unsigned char) (16*unhex[(int) *sp++]);\n            else\n                (*dp++) += unhex[(int) *sp++];\n        }\n\n        return info;\n\n    }",
  "abstract_func_before": "DataBuf PngChunk::readRawProfile(const DataBuf& VAR_0,bool VAR_1)\n    {\n        DataBuf                 VAR_2;\n        register long           VAR_3;\n        register unsigned char *VAR_4;\n        const char             *VAR_5;\n        unsigned int            VAR_6;\n        long                    VAR_7;\n        unsigned char           VAR_8[103]={0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,1, 2,3,4,5,6,7,8,9,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,10,11,12,\n                                            13,14,15};\n        if (VAR_0.size_ == 0) {\n            return DataBuf();\n        }\n\n        if ( VAR_1 ) {\n            VAR_2.alloc(VAR_0.size_);\n            ::memcpy(VAR_2.pData_,VAR_0.pData_,VAR_0.size_);\n            return  VAR_2;\n        }\n\n\n        VAR_5 = (char*)VAR_0.pData_+1;\n        int VAR_9 = 1;\n\n        /* COMMENT_0 */\n        while (*VAR_5 != '\\n' && VAR_9 < (VAR_0.size_ - 1))\n        {\n            VAR_5++;\n            VAR_9++;\n        }\n\n        if (VAR_9 == (VAR_0.size_ - 1))\n        {\n            return DataBuf();\n        }\n\n        /* COMMENT_1 */\n\n        while (*VAR_5 == '\\0' || *VAR_5 == ' ' || *VAR_5 == '\\n')\n            VAR_5++;\n\n        VAR_7 = (long) atol(VAR_5);\n\n        while (*VAR_5 != ' ' && *VAR_5 != '\\n')\n            VAR_5++;\n\n        /* COMMENT_2 */\n\n        if (VAR_7 == 0)\n        {\n#ifdef VAR_10\n            std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: invalid profile length\\n\";\n#endif\n        }\n\n        VAR_2.alloc(VAR_7);\n\n        if (VAR_2.size_ != VAR_7)\n        {\n#ifdef VAR_10\n            std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: cannot allocate memory\\n\";\n#endif\n            return DataBuf();\n        }\n\n        /* COMMENT_3 */\n\n        VAR_4      = (unsigned char*)VAR_2.pData_;\n        VAR_6 = VAR_7 * 2;\n\n        for (VAR_3 = 0; VAR_3 < (long) VAR_6; VAR_3++)\n        {\n            while (*VAR_5 < '0' || (*VAR_5 > '9' && *VAR_5 < 'a') || *VAR_5 > 'f')\n            {\n                if (*VAR_5 == '\\0')\n                {\n#ifdef VAR_10\n                    std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: ran out of data\\n\";\n#endif\n                    return DataBuf();\n                }\n\n                VAR_5++;\n            }\n\n            if (VAR_3%2 == 0)\n                *VAR_4 = (unsigned char) (16*VAR_8[(int) *VAR_5++]);\n            else\n                (*VAR_4++) += VAR_8[(int) *VAR_5++];\n        }\n\n        return VAR_2;\n\n    }",
  "func_graph_path_before": "Exiv2/exiv2/cf3ba049a2792ec2a4a877e343f5dd9654da53dc/pngchunk_int.cpp/vul/before/0.json",
  "func": "DataBuf PngChunk::readRawProfile(const DataBuf& text,bool iTXt)\n    {\n        DataBuf                 info;\n        unsigned char           unhex[103]={0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,1, 2,3,4,5,6,7,8,9,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,10,11,12,\n                                            13,14,15};\n        if (text.size_ == 0) {\n            return DataBuf();\n        }\n\n        if ( iTXt ) {\n            info.alloc(text.size_);\n            ::memcpy(info.pData_,text.pData_,text.size_);\n            return  info;\n        }\n\n        const char *sp = (char*)text.pData_+1;\n        int pointerPos = 1;\n\n        // Look for newline\n        while (*sp != '\\n' && pointerPos < (text.size_ - 1))\n        {\n            sp++;\n            pointerPos++;\n        }\n\n        // Look for length\n        while ((*sp == '\\0' || *sp == ' ' || *sp == '\\n') && pointerPos < (text.size_ - 1))\n        {\n            sp++;\n            pointerPos++;\n        }\n\n        if (pointerPos == (text.size_ - 1))\n        {\n            return DataBuf();\n        }\n\n        long length = (long) atol(sp);\n\n        while (*sp != ' ' && *sp != '\\n' && pointerPos < (text.size_ - 1))\n        {\n            sp++;\n            pointerPos++;\n        }\n\n        if (pointerPos == (text.size_ - 1))\n        {\n            return DataBuf();\n        }\n\n        // Allocate space\n\n        if (length == 0)\n        {\n#ifdef DEBUG\n            std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: invalid profile length\\n\";\n#endif\n        }\n\n        info.alloc(length);\n\n        if (info.size_ != length)\n        {\n#ifdef DEBUG\n            std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: cannot allocate memory\\n\";\n#endif\n            return DataBuf();\n        }\n\n        // Copy profile, skipping white space and column 1 \"=\" signs\n\n        unsigned char *dp = (unsigned char*)info.pData_;\n        unsigned int nibbles = length * 2;\n\n        for (long i = 0; i < (long) nibbles; i++)\n        {\n            while (*sp < '0' || (*sp > '9' && *sp < 'a') || *sp > 'f')\n            {\n                if (*sp == '\\0')\n                {\n#ifdef DEBUG\n                    std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: ran out of data\\n\";\n#endif\n                    return DataBuf();\n                }\n\n                sp++;\n            }\n\n            if (i%2 == 0)\n                *dp = (unsigned char) (16*unhex[(int) *sp++]);\n            else\n                (*dp++) += unhex[(int) *sp++];\n        }\n\n        return info;\n\n    }",
  "abstract_func": "DataBuf PngChunk::readRawProfile(const DataBuf& VAR_0,bool VAR_1)\n    {\n        DataBuf                 VAR_2;\n        unsigned char           VAR_3[103]={0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,1, 2,3,4,5,6,7,8,9,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                            0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,10,11,12,\n                                            13,14,15};\n        if (VAR_0.size_ == 0) {\n            return DataBuf();\n        }\n\n        if ( VAR_1 ) {\n            VAR_2.alloc(VAR_0.size_);\n            ::memcpy(VAR_2.pData_,VAR_0.pData_,VAR_0.size_);\n            return  VAR_2;\n        }\n\n        const char *VAR_4 = (char*)VAR_0.pData_+1;\n        int VAR_5 = 1;\n\n        /* COMMENT_0 */\n        while (*VAR_4 != '\\n' && VAR_5 < (VAR_0.size_ - 1))\n        {\n            VAR_4++;\n            VAR_5++;\n        }\n\n        /* COMMENT_1 */\n        while ((*VAR_4 == '\\0' || *VAR_4 == ' ' || *VAR_4 == '\\n') && VAR_5 < (VAR_0.size_ - 1))\n        {\n            VAR_4++;\n            VAR_5++;\n        }\n\n        if (VAR_5 == (VAR_0.size_ - 1))\n        {\n            return DataBuf();\n        }\n\n        long VAR_6 = (long) atol(VAR_4);\n\n        while (*VAR_4 != ' ' && *VAR_4 != '\\n' && VAR_5 < (VAR_0.size_ - 1))\n        {\n            VAR_4++;\n            VAR_5++;\n        }\n\n        if (VAR_5 == (VAR_0.size_ - 1))\n        {\n            return DataBuf();\n        }\n\n        /* COMMENT_2 */\n\n        if (VAR_6 == 0)\n        {\n#ifdef VAR_7\n            std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: invalid profile length\\n\";\n#endif\n        }\n\n        VAR_2.alloc(VAR_6);\n\n        if (VAR_2.size_ != VAR_6)\n        {\n#ifdef VAR_7\n            std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: cannot allocate memory\\n\";\n#endif\n            return DataBuf();\n        }\n\n        /* COMMENT_3 */\n\n        unsigned char *VAR_8 = (unsigned char*)VAR_2.pData_;\n        unsigned int VAR_9 = VAR_6 * 2;\n\n        for (long VAR_10 = 0; VAR_10 < (long) VAR_9; VAR_10++)\n        {\n            while (*VAR_4 < '0' || (*VAR_4 > '9' && *VAR_4 < 'a') || *VAR_4 > 'f')\n            {\n                if (*VAR_4 == '\\0')\n                {\n#ifdef VAR_7\n                    std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: ran out of data\\n\";\n#endif\n                    return DataBuf();\n                }\n\n                VAR_4++;\n            }\n\n            if (VAR_10%2 == 0)\n                *VAR_8 = (unsigned char) (16*VAR_3[(int) *VAR_4++]);\n            else\n                (*VAR_8++) += VAR_3[(int) *VAR_4++];\n        }\n\n        return VAR_2;\n\n    }",
  "func_graph_path": "Exiv2/exiv2/cf3ba049a2792ec2a4a877e343f5dd9654da53dc/pngchunk_int.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,11 +1,6 @@\n DataBuf PngChunk::readRawProfile(const DataBuf& text,bool iTXt)\n     {\n         DataBuf                 info;\n-        register long           i;\n-        register unsigned char *dp;\n-        const char             *sp;\n-        unsigned int            nibbles;\n-        long                    length;\n         unsigned char           unhex[103]={0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                             0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\n                                             0,0,0,0,0,0,0,0,0,1, 2,3,4,5,6,7,8,9,0,0,\n@@ -22,12 +17,18 @@\n             return  info;\n         }\n \n-\n-        sp = (char*)text.pData_+1;\n+        const char *sp = (char*)text.pData_+1;\n         int pointerPos = 1;\n \n         // Look for newline\n         while (*sp != '\\n' && pointerPos < (text.size_ - 1))\n+        {\n+            sp++;\n+            pointerPos++;\n+        }\n+\n+        // Look for length\n+        while ((*sp == '\\0' || *sp == ' ' || *sp == '\\n') && pointerPos < (text.size_ - 1))\n         {\n             sp++;\n             pointerPos++;\n@@ -38,15 +39,18 @@\n             return DataBuf();\n         }\n \n-        // Look for length\n+        long length = (long) atol(sp);\n \n-        while (*sp == '\\0' || *sp == ' ' || *sp == '\\n')\n+        while (*sp != ' ' && *sp != '\\n' && pointerPos < (text.size_ - 1))\n+        {\n             sp++;\n+            pointerPos++;\n+        }\n \n-        length = (long) atol(sp);\n-\n-        while (*sp != ' ' && *sp != '\\n')\n-            sp++;\n+        if (pointerPos == (text.size_ - 1))\n+        {\n+            return DataBuf();\n+        }\n \n         // Allocate space\n \n@@ -69,10 +73,10 @@\n \n         // Copy profile, skipping white space and column 1 \"=\" signs\n \n-        dp      = (unsigned char*)info.pData_;\n-        nibbles = length * 2;\n+        unsigned char *dp = (unsigned char*)info.pData_;\n+        unsigned int nibbles = length * 2;\n \n-        for (i = 0; i < (long) nibbles; i++)\n+        for (long i = 0; i < (long) nibbles; i++)\n         {\n             while (*sp < '0' || (*sp > '9' && *sp < 'a') || *sp > 'f')\n             {",
  "diff_line_info": {
    "deleted_lines": [
      "        register long           i;",
      "        register unsigned char *dp;",
      "        const char             *sp;",
      "        unsigned int            nibbles;",
      "        long                    length;",
      "",
      "        sp = (char*)text.pData_+1;",
      "        // Look for length",
      "        while (*sp == '\\0' || *sp == ' ' || *sp == '\\n')",
      "        length = (long) atol(sp);",
      "",
      "        while (*sp != ' ' && *sp != '\\n')",
      "            sp++;",
      "        dp      = (unsigned char*)info.pData_;",
      "        nibbles = length * 2;",
      "        for (i = 0; i < (long) nibbles; i++)"
    ],
    "added_lines": [
      "        const char *sp = (char*)text.pData_+1;",
      "        {",
      "            sp++;",
      "            pointerPos++;",
      "        }",
      "",
      "        // Look for length",
      "        while ((*sp == '\\0' || *sp == ' ' || *sp == '\\n') && pointerPos < (text.size_ - 1))",
      "        long length = (long) atol(sp);",
      "        while (*sp != ' ' && *sp != '\\n' && pointerPos < (text.size_ - 1))",
      "        {",
      "            pointerPos++;",
      "        }",
      "        if (pointerPos == (text.size_ - 1))",
      "        {",
      "            return DataBuf();",
      "        }",
      "        unsigned char *dp = (unsigned char*)info.pData_;",
      "        unsigned int nibbles = length * 2;",
      "        for (long i = 0; i < (long) nibbles; i++)"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Exiv2/exiv2/pull/430",
  "description": {
    "pr_info": {
      "title": "Fix Issue #428",
      "number": 430
    },
    "comment": [
      "This should fix the problem described in #428. It also adds a new regression test to reproduce the issue.",
      "# [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/430?src=pr&el=h1) Report\n> Merging [#430](https://codecov.io/gh/Exiv2/exiv2/pull/430?src=pr&el=desc) into [master](https://codecov.io/gh/Exiv2/exiv2/commit/dce05ac48859540c4f50a3fc7a66cda6a3e56162?src=pr&el=desc) will **increase** coverage by `0.07%`.\n> The diff coverage is `94.44%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/430/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/430?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #430      +/-   ##\n==========================================\n+ Coverage   62.02%   62.09%   +0.07%     \n==========================================\n  Files         149      149              \n  Lines       20456    20465       +9     \n==========================================\n+ Hits        12687    12708      +21     \n+ Misses       7769     7757      -12\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/430?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [src/pngchunk\\_int.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/430/diff?src=pr&el=tree#diff-c3JjL3BuZ2NodW5rX2ludC5jcHA=) | `89.88% <94.44%> (+4.8%)` | :arrow_up: |\n| [src/pngimage.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/430/diff?src=pr&el=tree#diff-c3JjL3BuZ2ltYWdlLmNwcA==) | `90.63% <0%> (+0.3%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/430?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/430?src=pr&el=footer). Last update [dce05ac...cfc7a1c](https://codecov.io/gh/Exiv2/exiv2/pull/430?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Thanks for doing this, @piponazo \r\n\r\nI'll review your changes this evening.  My head is full of the MinGW/setMsg() puzzle at the moment (#421)  And I'm working in the garden as well.  Beautiful sunny day.",
      "Apologies for not getting to this on Monday, Luis.  I was exhausted (and delighted) by solving the MinGW/setMsg/GCC8.2.0 issue (#421).  I've reproduced #428 and will work on it later today (Tuesday).  First priority is to review this PR.\r\n\r\nThanks for working on this.\r\n\r\nMy old friend Gaylord lives in California and yesterday was his 80th birthday.  I've known him for 40 years and went to visit him 2 weeks ago.  We didn't go to California for his birthday party yesterday, however we had a little cake and candles on the patio.  Life is good when retired!  https://clanmills.com/2018/September/\r\n\r\n![dsc_8694](https://user-images.githubusercontent.com/529982/45031261-482e6700-b046-11e8-816d-4790e8e721dc.jpg)\r\n",
      "There's something not quite right about this.  I've download the POCs:\r\n```\r\n1148 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ ls -salt ~/Downloads/*.png\r\n4 -rw-r--r--+ 1 rmills staff  188 Sep  4 13:09 /Users/rmills/Downloads/hbo_pngchunk_int.cpp-674_2.png\r\n4 -rw-r--r--+ 1 rmills staff 2598 Sep  4 13:09 /Users/rmills/Downloads/hbo_pngchunk_int.cpp-674_1.png\r\n4 -rw-r--r--+ 1 rmills staff  456 Sep  4 13:08 /Users/rmills/Downloads/hbo_pngchunk_int.cpp-643_2.png\r\n4 -rw-r--r--+ 1 rmills staff 1651 Sep  4 13:07 /Users/rmills/Downloads/hbo_pngchunk_int.cpp-643_1.png\r\n4 -rw-r--r--+ 1 rmills staff  188 Sep  4 13:05 /Users/rmills/Downloads/hbo_pngchunk_int.cpp-645_2.png\r\n4 -rw-r--r--+ 1 rmills staff  512 Sep  4 13:05 /Users/rmills/Downloads/hbo_pngchunk_int.cpp-645_1.png\r\n1149 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $\r\n```\r\nWhen I apply your patch, I see:\r\n```\r\nfor i in $(ls ~/Downloads/*.png|sort); do echo ---- $i ---- ; bin/exiv2 --verbose $i 2>&1 | grep SUMMARY ; echo '' ; done\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-643_1.png ----\r\nSUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64+0x52534) in wrap_atol\r\n\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-643_2.png ----\r\n\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-645_1.png ----\r\n\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-645_2.png ----\r\n\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-674_1.png ----\r\nSUMMARY: AddressSanitizer: heap-buffer-overflow (libexiv2.26.dylib:x86_64+0x1256594) in Exiv2::Internal::PngChunk::readRawProfile(Exiv2::DataBuf const&, bool)\r\n\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-674_2.png ----\r\nSUMMARY: AddressSanitizer: heap-buffer-overflow (libexiv2.26.dylib:x86_64+0x1256594) in Exiv2::Internal::PngChunk::readRawProfile(Exiv2::DataBuf const&, bool)\r\n\r\n1148 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ \r\n```\r\n\r\nYour patch is a step in the right direction.  The code is cavalier in galloping forward without checking that it is reading within the buffer.  `atol()` can also gallop, so I've added `const char* startOfLength;` and delayed `atol()` until I feel safe.\r\n\r\nHaving decoded the length, the code gallops decoding hex/nibbles without bothering to test if the buffer has 2*length bytes.  I've added `const char* endOfLength` to know the first byte following the length string.  When we calculate `nibbles = 2*length`, I test it for sanity.\r\n\r\nLike you, I think the code needs a major review and the schedule doesn't permit this at the moment.\r\n\r\nI've put my modified version of  PngChunk::readRawProfile() which includes the fixes that I've mentioned.  This seems to fix the 6 POCs provided in #428 \r\n\r\n```\r\n1197 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ for i in $(ls ~/Downloads/*.png|sort); do echo ---- $i ---- ; bin/exiv2 --verbose $i ; echo '' ; done\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-643_1.png ----\r\nFile 1/1: /Users/rmills/Downloads/hbo_pngchunk_int.cpp-643_1.png\r\nExiv2 exception in print action for file /Users/rmills/Downloads/hbo_pngchunk_int.cpp-643_1.png:\r\nFailed to read image data\r\n\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-643_2.png ----\r\nFile 1/1: /Users/rmills/Downloads/hbo_pngchunk_int.cpp-643_2.png\r\nExiv2 exception in print action for file /Users/rmills/Downloads/hbo_pngchunk_int.cpp-643_2.png:\r\nFailed to read image data\r\n\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-645_1.png ----\r\nFile 1/1: /Users/rmills/Downloads/hbo_pngchunk_int.cpp-645_1.png\r\nExiv2 exception in print action for file /Users/rmills/Downloads/hbo_pngchunk_int.cpp-645_1.png:\r\nFailed to read image data\r\n\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-645_2.png ----\r\nFile 1/1: /Users/rmills/Downloads/hbo_pngchunk_int.cpp-645_2.png\r\nExiv2 exception in print action for file /Users/rmills/Downloads/hbo_pngchunk_int.cpp-645_2.png:\r\nFailed to read image data\r\n\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-674_1.png ----\r\nFile 1/1: /Users/rmills/Downloads/hbo_pngchunk_int.cpp-674_1.png\r\nExiv2 exception in print action for file /Users/rmills/Downloads/hbo_pngchunk_int.cpp-674_1.png:\r\nFailed to read image data\r\n\r\n---- /Users/rmills/Downloads/hbo_pngchunk_int.cpp-674_2.png ----\r\nFile 1/1: /Users/rmills/Downloads/hbo_pngchunk_int.cpp-674_2.png\r\nExiv2 exception in print action for file /Users/rmills/Downloads/hbo_pngchunk_int.cpp-674_2.png:\r\nFailed to read image data\r\n\r\n1198 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ \r\n```\r\n\r\n```\r\n        DataBuf PngChunk::readRawProfile(const DataBuf& text,bool iTXt)\r\n        {\r\n            DataBuf                 info;\r\n            unsigned char           unhex[103]={0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\r\n                0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\r\n                0,0,0,0,0,0,0,0,0,1, 2,3,4,5,6,7,8,9,0,0,\r\n                0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,\r\n                0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,10,11,12,\r\n                13,14,15};\r\n            if (text.size_ == 0) {\r\n                return DataBuf();\r\n            }\r\n\r\n            if ( iTXt ) {\r\n                info.alloc(text.size_);\r\n                ::memcpy(info.pData_,text.pData_,text.size_);\r\n                return  info;\r\n            }\r\n\r\n            const char *sp = (char*)text.pData_+1;\r\n            int pointerPos = 1;\r\n\r\n            // Look for newline\r\n            while (*sp != '\\n' && pointerPos < (text.size_ - 1))\r\n            {\r\n                sp++;\r\n                pointerPos++;\r\n            }\r\n            if (pointerPos == (text.size_ - 1))\r\n            {\r\n                return DataBuf();\r\n            }\r\n\r\n            // Look for length\r\n            while ((*sp == '\\0' || *sp == ' ' || *sp == '\\n') && pointerPos < (text.size_ - 1))\r\n            {\r\n                sp++;\r\n                pointerPos++;\r\n            }\r\n            if (pointerPos == (text.size_ - 1))\r\n            {\r\n                return DataBuf();\r\n            }\r\n\r\n            const char* startOfLength = sp;\r\n            while (*sp != ' ' && *sp != '\\n' && pointerPos < (text.size_ - 1))\r\n            {\r\n                sp++;\r\n                pointerPos++;\r\n            }\r\n            const char* endOfLength = sp;\r\n\r\n            if (pointerPos == (text.size_ - 1))\r\n            {\r\n                return DataBuf();\r\n            }\r\n            long length = (long) atol(startOfLength);\r\n\r\n            // Allocate space\r\n\r\n            if (length == 0)\r\n            {\r\n#ifdef DEBUG\r\n                std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: invalid profile length\\n\";\r\n#endif\r\n            }\r\n\r\n            info.alloc(length);\r\n\r\n            if (info.size_ != length)\r\n            {\r\n#ifdef DEBUG\r\n                std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: cannot allocate memory\\n\";\r\n#endif\r\n                return DataBuf();\r\n            }\r\n\r\n            // Copy profile, skipping white space and column 1 \"=\" signs\r\n\r\n            unsigned char *dp = (unsigned char*)info.pData_;\r\n            unsigned int nibbles = length * 2;\r\n            if ( (Exiv2::byte*)endOfLength + nibbles > info.pData_+info.size_ ) {\r\n#ifdef DEBUG\r\n            \tstd::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: nibble count overflow\\n\";\r\n#endif\r\n                return DataBuf();\r\n            }\r\n\r\n            for (long i = 0; i < (long) nibbles; i++)\r\n            {\r\n                while (*sp < '0' || (*sp > '9' && *sp < 'a') || *sp > 'f')\r\n                {\r\n                    if (*sp == '\\0')\r\n                    {\r\n#ifdef DEBUG\r\n                        std::cerr << \"Exiv2::PngChunk::readRawProfile: Unable To Copy Raw Profile: ran out of data\\n\";\r\n#endif\r\n                        return DataBuf();\r\n                    }\r\n\r\n                    sp++;\r\n                }\r\n\r\n                if (i%2 == 0)\r\n                    *dp = (unsigned char) (16*unhex[(int) *sp++]);\r\n                else\r\n                    (*dp++) += unhex[(int) *sp++];\r\n            }\r\n\r\n            return info;\r\n\r\n        } // PngChunk::readRawProfile\r\n```",
      "Great! Thanks @clanmills for the help. I'll include your changes and push them to the branch, so that we can see if the CI is also happy with the changes ;)",
      "Ups, it seems that those changes break other tests @clanmills. You can see the issues here:\r\nhttps://travis-ci.org/piponazo/exiv2/builds/424764668\r\n\r\nI'll revert the latest commits to make the CI green again.",
      "Oh, that's a surprise.  The test suite is passing on my machine.\r\n\r\nYou've done the right thing to revert this.  I will revisit this and update you tomorrow.",
      "Apologies.  I built and tested the wrong code on my machine yesterday.  I've reproduced the test errors being reported.  Somehow this has broken icc-test.sh.  I'll debug and fix it tomorrow.\r\n\r\nCuriously, test the ASAN build has revealed something in stringto-test.sh and preview-test.sh and I'll also investigate that tomorrow and if necessary open new issues to address those matters. ",
      "I know what's wrong with this and I'll fix it later.  The option -iC (insert ICC profile) is causing the loss of Exif and IPTC metadata.\r\n```\r\n1301 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ cp ../test/data/ReaganSmallPng.png ReaganSmallPng.png \r\n1302 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ bin/exiv2 -pS ReaganSmallPng.png \r\nSTRUCTURE OF PNG FILE: ReaganSmallPng.png\r\n address | chunk |  length | data                           | checksum\r\n       8 | IHDR  |      13 | ............                   | 0x8cf910c3\r\n      33 | zTXt  |    8648 | Raw profile type exif..x...Wv$ | 0xca41f34d <--- EXIF Metadata\r\n    8693 | zTXt  |     632 | Raw profile type iptc..x..T[.. | 0xa2860459 <--- IPTC Metadata\r\n    9337 | iTXt  |    7117 | XML:com.adobe.xmp.....<?xpacke | 0x2ff025b8 <--- XMP Metadata\r\n   16466 | gAMA  |       4 | ....                           | 0x0bfc6105\r\n   16482 | bKGD  |       6 | ......                         | 0xa0bda793\r\n   16500 | pHYs  |       9 | ...#...#.                      | 0x78a53f76\r\n   16521 | tIME  |       7 | ......#                        | 0xdf7f5bbd\r\n   16540 | zTXt  |     278 | Comment..x.}..n.@....O..5..h.. | 0xdb1dfff5\r\n   16830 | IDAT  |    8192 | x...i.$.u%v....Gdd...U..X.`0.9 | 0x96dc2ed9\r\n   25034 | IDAT  |    8192 | df..\"..1L...0...j....`F.&.yf.. | 0xbfeb3575\r\n   33238 | IDAT  |    8192 | K-N.t.ENL.R..q](jm...sN..U.+.. | 0xe249a922\r\n   41442 | IDAT  |    8192 | >..?.Nw..iN......xE....z..[..} | 0x054b9d1e\r\n   49646 | IDAT  |    7066 | ...q.B...2*@..#....T....h..v.. | 0x327f1e3e\r\n   56724 | IEND  |       0 |                                | 0xae426082\r\n1304 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ bin/exiv2 -pC ../test/data/ReaganLargePng.png > ReaganSmallPng.icc \r\n1305 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ dir Re*\r\n-rw-r--r--+ 1 rmills staff 1.6M Sep  6 09:54 ReaganSmallPng.icc  <--- Extracted ICC profile\r\n-rw-r--r--+ 1 rmills staff  56K Sep  6 09:52 ReaganSmallPng.png\r\n1306 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ bin/exiv2 -iC --verbose ReaganSmallPng.png \r\nFile 1/1: ReaganSmallPng.png\r\n1307 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ bin/exiv2 -pS ReaganSmallPng.png \r\nSTRUCTURE OF PNG FILE: ReaganSmallPng.png\r\n address | chunk |  length | data                           | checksum\r\n       8 | IHDR  |      13 | ............                   | 0x8cf910c3\r\n      33 | iCCP  | 1159185 | ICC PROFILE..x...uP.[..9@.HB.D | 0x4a90a7d7 <--- Inserted ICC profile\r\n                                                                         <---  lost EXIF and IPTC\r\n 1159230 | iTXt  |    7117 | XML:com.adobe.xmp.....<?xpacke | 0x2ff025b8 <--- XMP Metadata \r\n 1166359 | gAMA  |       4 | ....                           | 0x0bfc6105\r\n 1166375 | bKGD  |       6 | ......                         | 0xa0bda793\r\n 1166393 | pHYs  |       9 | ...#...#.                      | 0x78a53f76\r\n 1166414 | tIME  |       7 | ......#                        | 0xdf7f5bbd\r\n 1166433 | zTXt  |     278 | Comment..x.}..n.@....O..5..h.. | 0xdb1dfff5\r\n 1166723 | IDAT  |    8192 | x...i.$.u%v....Gdd...U..X.`0.9 | 0x96dc2ed9\r\n 1174927 | IDAT  |    8192 | df..\"..1L...0...j....`F.&.yf.. | 0xbfeb3575\r\n 1183131 | IDAT  |    8192 | K-N.t.ENL.R..q](jm...sN..U.+.. | 0xe249a922\r\n 1191335 | IDAT  |    8192 | >..?.Nw..iN......xE....z..[..} | 0x054b9d1e\r\n 1199539 | IDAT  |    7066 | ...q.B...2*@..#....T....h..v.. | 0x327f1e3e\r\n 1206617 | IEND  |       0 |                                | 0xae426082\r\n1308 rmills@rmillsmm:~/gnu/github/exiv2/exiv2/build $ \r\n```",
      "I'm making steady progress with this.  More difficult than expected.\r\n\r\nI've identified what's causing stringto-test to fail (when built for ASAN) and I'll open a different issue (with patch).\r\n\r\nI want to continue painting the summer house today and hope to finish this issue this evening.",
      "More challenges:\r\n\r\n1) There's another ASAN address issue in     `src/iptc.cpp int IptcParser::decode()`  \r\nI don't believe I have time to work on that until Sunday afternoon.\r\n\r\n2) There's also something incorrect about CMake/setting the ASAN switches with:\r\n```\r\n$ cmake .. -G Xcode -DEXIV2_TEAM_USE_SANITIZERS=On\r\n```\r\nIf I build without `-DEXIV2_TEAM_USE_SANITIZERS=On`, I can enable them from the Xcode gui.\r\n\r\nI've found this article (although I don't know if this is true)  https://stackoverflow.com/questions/44320465/whats-the-proper-way-to-enable-addresssanitizer-in-cmake-that-works-in-xcode  I suspect we'll need something similar to the following which was added to `src/CMakeLists.txt:`\r\n```\r\n1624 rmills@rmillsmm:~/gnu/github/exiv2/exiv2 $ nl -b a src/CMakeLists.txt | grep -i xcode \r\n   315\t        XCODE_ATTRIBUTE_GCC_GENERATE_DEBUGGING_SYMBOLS[variant=Debug] \"YES\"\r\n1625 rmills@rmillsmm:~/gnu/github/exiv2/exiv2 $ \r\n```",
      "@clanmills we added the `XCODE_ATTRIBUTE_GCC_GENERATE_DEBUGGING_SYMBOLS` configuration into `src/CMakeLists.txt`few months ago. \r\n\r\nIf the investigation you are doing is going to take long, I propose to merge the branch in the current status so that we have at least few fixes for 0.27 RC1. We can investigate the other issues later.",
      "Oh, I know you added `XCODE_ATTRIBUTE_GCC_GENERATE_DEBUGGING_SYMBOLS`.  My suspicion is that we need something similar to enable ASAN to build/debug correctly from the Xcode IDE.\r\n\r\nI'll fix the ASAN issues in `IptcParser::decode()` and `PngChunk::readRawProfile()` and get #428 closed.\r\n\r\nI'll open a new issue about `stringto-test.cpp`.",
      "Thanks for your help! :+1: "
    ]
  },
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch modifies the `PngChunk::readRawProfile` function to address buffer overflow issues. The code changes include adding checks for buffer boundaries and ensuring proper handling of length parsing, which prevents unauthorized access and data compromise. The commit comments mention fixing issues detected by AddressSanitizer, indicating a security vulnerability.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 0.95"
}