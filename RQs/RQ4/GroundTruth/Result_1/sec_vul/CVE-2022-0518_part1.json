{
  "cve_id": "CVE-2022-0518",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix oobread segfault in java arith8.class ##crash\n\n* Reported by Cen Zhang via huntr.dev",
  "commit_hash": "9650e3c352f675687bf6c6f65ff2c4a3d0e288fa",
  "git_url": "https://github.com/radareorg/radare2/commit/9650e3c352f675687bf6c6f65ff2c4a3d0e288fa",
  "file_path": "shlr/java/class.c",
  "func_name": "r_bin_java_inner_classes_attr_new",
  "func_before": "R_API RBinJavaAttrInfo *r_bin_java_inner_classes_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n\tRBinJavaClassesAttribute *icattr;\n\tRBinJavaAttrInfo *attr = NULL;\n\tRBinJavaCPTypeObj *obj;\n\tut32 i = 0;\n\tut64 offset = 0, curpos;\n\tattr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n\toffset += 6;\n\tif (attr == NULL) {\n\t\t// TODO eprintf\n\t\treturn attr;\n\t}\n\tattr->type = R_BIN_JAVA_ATTR_TYPE_INNER_CLASSES_ATTR;\n\tattr->info.inner_classes_attr.number_of_classes = R_BIN_JAVA_USHORT (buffer, offset);\n\toffset += 2;\n\tattr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);\n\tfor (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {\n\t\tcurpos = buf_offset + offset;\n\t\tif (offset + 8 > sz) {\n\t\t\teprintf (\"Invalid amount of inner classes\\n\");\n\t\t\tbreak;\n\t\t}\n\t\ticattr = R_NEW0 (RBinJavaClassesAttribute);\n\t\tif (!icattr) {\n\t\t\tbreak;\n\t\t}\n\t\ticattr->inner_class_info_idx = R_BIN_JAVA_USHORT (buffer, offset);\n\t\toffset += 2;\n\t\ticattr->outer_class_info_idx = R_BIN_JAVA_USHORT (buffer, offset);\n\t\toffset += 2;\n\t\ticattr->inner_name_idx = R_BIN_JAVA_USHORT (buffer, offset);\n\t\toffset += 2;\n\t\ticattr->inner_class_access_flags = R_BIN_JAVA_USHORT (buffer, offset);\n\t\toffset += 2;\n\t\ticattr->flags_str = retrieve_class_method_access_string (icattr->inner_class_access_flags);\n\t\ticattr->file_offset = curpos;\n\t\ticattr->size = 8;\n\n\t\tobj = r_bin_java_get_item_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, icattr->inner_name_idx);\n\t\tif (obj == NULL) {\n\t\t\teprintf (\"BINCPLIS IS HULL %d\\n\", icattr->inner_name_idx);\n\t\t}\n\t\ticattr->name = r_bin_java_get_item_name_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, obj);\n\t\tif (!icattr->name) {\n\t\t\tobj = r_bin_java_get_item_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, icattr->inner_class_info_idx);\n\t\t\tif (!obj) {\n\t\t\t\teprintf (\"BINCPLIST IS NULL %d\\n\", icattr->inner_class_info_idx);\n\t\t\t}\n\t\t\ticattr->name = r_bin_java_get_item_name_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, obj);\n\t\t\tif (!icattr->name) {\n\t\t\t\ticattr->name = r_str_dup (NULL, \"NULL\");\n\t\t\t\teprintf (\"r_bin_java_inner_classes_attr: Unable to find the name for %d index.\\n\", icattr->inner_name_idx);\n\t\t\t\tfree (icattr);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tIFDBG eprintf(\"r_bin_java_inner_classes_attr: Inner class name %d is %s.\\n\", icattr->inner_name_idx, icattr->name);\n\t\tr_list_append (attr->info.inner_classes_attr.classes, (void *) icattr);\n\t}\n\tattr->size = offset;\n\t// IFDBG r_bin_java_print_inner_classes_attr_summary(attr);\n\treturn attr;\n}",
  "abstract_func_before": "R_API RBinJavaAttrInfo *r_bin_java_inner_classes_attr_new(RBinJavaObj *VAR_0, ut8 *VAR_1, ut64 VAR_2, ut64 VAR_3) {\n\tRBinJavaClassesAttribute *VAR_4;\n\tRBinJavaAttrInfo *VAR_5 = NULL;\n\tRBinJavaCPTypeObj *VAR_6;\n\tut32 VAR_7 = 0;\n\tut64 VAR_8 = 0, VAR_9;\n\tVAR_5 = r_bin_java_default_attr_new (VAR_0, VAR_1, VAR_2, VAR_3);\n\tVAR_8 += 6;\n\tif (VAR_5 == NULL) {\n\t\t/* COMMENT_0 */\n\t\treturn VAR_5;\n\t}\n\tVAR_5->type = VAR_10;\n\tVAR_5->info.inner_classes_attr.number_of_classes = R_BIN_JAVA_USHORT (VAR_1, VAR_8);\n\tVAR_8 += 2;\n\tVAR_5->info.inner_classes_attr.classes = r_list_newf (VAR_11);\n\tfor (VAR_7 = 0; VAR_7 < VAR_5->info.inner_classes_attr.number_of_classes; VAR_7++) {\n\t\tVAR_9 = VAR_3 + VAR_8;\n\t\tif (VAR_8 + 8 > VAR_2) {\n\t\t\teprintf (\"Invalid amount of inner classes\\n\");\n\t\t\tbreak;\n\t\t}\n\t\tVAR_4 = R_NEW0 (RBinJavaClassesAttribute);\n\t\tif (!VAR_4) {\n\t\t\tbreak;\n\t\t}\n\t\tVAR_4->inner_class_info_idx = R_BIN_JAVA_USHORT (VAR_1, VAR_8);\n\t\tVAR_8 += 2;\n\t\tVAR_4->outer_class_info_idx = R_BIN_JAVA_USHORT (VAR_1, VAR_8);\n\t\tVAR_8 += 2;\n\t\tVAR_4->inner_name_idx = R_BIN_JAVA_USHORT (VAR_1, VAR_8);\n\t\tVAR_8 += 2;\n\t\tVAR_4->inner_class_access_flags = R_BIN_JAVA_USHORT (VAR_1, VAR_8);\n\t\tVAR_8 += 2;\n\t\tVAR_4->flags_str = retrieve_class_method_access_string (VAR_4->inner_class_access_flags);\n\t\tVAR_4->file_offset = VAR_9;\n\t\tVAR_4->size = 8;\n\n\t\tVAR_6 = r_bin_java_get_item_from_bin_cp_list (VAR_12, VAR_4->inner_name_idx);\n\t\tif (VAR_6 == NULL) {\n\t\t\teprintf (\"BINCPLIS IS HULL %d\\n\", VAR_4->inner_name_idx);\n\t\t}\n\t\tVAR_4->name = r_bin_java_get_item_name_from_bin_cp_list (VAR_12, VAR_6);\n\t\tif (!VAR_4->name) {\n\t\t\tVAR_6 = r_bin_java_get_item_from_bin_cp_list (VAR_12, VAR_4->inner_class_info_idx);\n\t\t\tif (!VAR_6) {\n\t\t\t\teprintf (\"BINCPLIST IS NULL %d\\n\", VAR_4->inner_class_info_idx);\n\t\t\t}\n\t\t\tVAR_4->name = r_bin_java_get_item_name_from_bin_cp_list (VAR_12, VAR_6);\n\t\t\tif (!VAR_4->name) {\n\t\t\t\tVAR_4->name = r_str_dup (NULL, \"NULL\");\n\t\t\t\teprintf (\"r_bin_java_inner_classes_attr: Unable to find the name for %d index.\\n\", VAR_4->inner_name_idx);\n\t\t\t\tfree (VAR_4);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tIFDBG VAR_13(\"r_bin_java_inner_classes_attr: Inner class name %d is %s.\\n\", VAR_4->inner_name_idx, VAR_4->name);\n\t\tr_list_append (VAR_5->info.inner_classes_attr.classes, (void *) VAR_4);\n\t}\n\tVAR_5->size = VAR_8;\n\t/* COMMENT_1 */\n\treturn VAR_5;\n}",
  "func_graph_path_before": null,
  "func": "R_API RBinJavaAttrInfo *r_bin_java_inner_classes_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n\tRBinJavaClassesAttribute *icattr;\n\tRBinJavaAttrInfo *attr = NULL;\n\tRBinJavaCPTypeObj *obj;\n\tut32 i = 0;\n\tut64 offset = 0, curpos;\n\tattr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n\toffset += 6;\n\tif (buf_offset + offset + 8 > sz) {\n\t\teprintf (\"Invalid amount of inner classes\\n\");\n\t\treturn NULL;\n\t}\n\tif (attr == NULL) {\n\t\t// TODO eprintf\n\t\treturn attr;\n\t}\n\tattr->type = R_BIN_JAVA_ATTR_TYPE_INNER_CLASSES_ATTR;\n\tattr->info.inner_classes_attr.number_of_classes = R_BIN_JAVA_USHORT (buffer, offset);\n\toffset += 2;\n\tattr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);\n\tfor (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {\n\t\tcurpos = buf_offset + offset;\n\t\tif (buf_offset + offset + 8 > sz) {\n\t\t\teprintf (\"Invalid amount of inner classes\\n\");\n\t\t\tbreak;\n\t\t}\n\t\ticattr = R_NEW0 (RBinJavaClassesAttribute);\n\t\tif (!icattr) {\n\t\t\tbreak;\n\t\t}\n\t\ticattr->inner_class_info_idx = R_BIN_JAVA_USHORT (buffer, offset);\n\t\toffset += 2;\n\t\ticattr->outer_class_info_idx = R_BIN_JAVA_USHORT (buffer, offset);\n\t\toffset += 2;\n\t\ticattr->inner_name_idx = R_BIN_JAVA_USHORT (buffer, offset);\n\t\toffset += 2;\n\t\ticattr->inner_class_access_flags = R_BIN_JAVA_USHORT (buffer, offset);\n\t\toffset += 2;\n\t\ticattr->flags_str = retrieve_class_method_access_string (icattr->inner_class_access_flags);\n\t\ticattr->file_offset = curpos;\n\t\ticattr->size = 8;\n\n\t\tobj = r_bin_java_get_item_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, icattr->inner_name_idx);\n\t\tif (obj == NULL) {\n\t\t\teprintf (\"BINCPLIS IS HULL %d\\n\", icattr->inner_name_idx);\n\t\t}\n\t\ticattr->name = r_bin_java_get_item_name_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, obj);\n\t\tif (!icattr->name) {\n\t\t\tobj = r_bin_java_get_item_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, icattr->inner_class_info_idx);\n\t\t\tif (!obj) {\n\t\t\t\teprintf (\"BINCPLIST IS NULL %d\\n\", icattr->inner_class_info_idx);\n\t\t\t}\n\t\t\ticattr->name = r_bin_java_get_item_name_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, obj);\n\t\t\tif (!icattr->name) {\n\t\t\t\ticattr->name = r_str_dup (NULL, \"NULL\");\n\t\t\t\teprintf (\"r_bin_java_inner_classes_attr: Unable to find the name for %d index.\\n\", icattr->inner_name_idx);\n\t\t\t\tfree (icattr);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tIFDBG eprintf(\"r_bin_java_inner_classes_attr: Inner class name %d is %s.\\n\", icattr->inner_name_idx, icattr->name);\n\t\tr_list_append (attr->info.inner_classes_attr.classes, (void *) icattr);\n\t}\n\tattr->size = offset;\n\t// IFDBG r_bin_java_print_inner_classes_attr_summary(attr);\n\treturn attr;\n}",
  "abstract_func": "R_API RBinJavaAttrInfo *r_bin_java_inner_classes_attr_new(RBinJavaObj *VAR_0, ut8 *VAR_1, ut64 VAR_2, ut64 VAR_3) {\n\tRBinJavaClassesAttribute *VAR_4;\n\tRBinJavaAttrInfo *VAR_5 = NULL;\n\tRBinJavaCPTypeObj *VAR_6;\n\tut32 VAR_7 = 0;\n\tut64 VAR_8 = 0, VAR_9;\n\tVAR_5 = r_bin_java_default_attr_new (VAR_0, VAR_1, VAR_2, VAR_3);\n\tVAR_8 += 6;\n\tif (VAR_3 + VAR_8 + 8 > VAR_2) {\n\t\teprintf (\"Invalid amount of inner classes\\n\");\n\t\treturn NULL;\n\t}\n\tif (VAR_5 == NULL) {\n\t\t/* COMMENT_0 */\n\t\treturn VAR_5;\n\t}\n\tVAR_5->type = VAR_10;\n\tVAR_5->info.inner_classes_attr.number_of_classes = R_BIN_JAVA_USHORT (VAR_1, VAR_8);\n\tVAR_8 += 2;\n\tVAR_5->info.inner_classes_attr.classes = r_list_newf (VAR_11);\n\tfor (VAR_7 = 0; VAR_7 < VAR_5->info.inner_classes_attr.number_of_classes; VAR_7++) {\n\t\tVAR_9 = VAR_3 + VAR_8;\n\t\tif (VAR_3 + VAR_8 + 8 > VAR_2) {\n\t\t\teprintf (\"Invalid amount of inner classes\\n\");\n\t\t\tbreak;\n\t\t}\n\t\tVAR_4 = R_NEW0 (RBinJavaClassesAttribute);\n\t\tif (!VAR_4) {\n\t\t\tbreak;\n\t\t}\n\t\tVAR_4->inner_class_info_idx = R_BIN_JAVA_USHORT (VAR_1, VAR_8);\n\t\tVAR_8 += 2;\n\t\tVAR_4->outer_class_info_idx = R_BIN_JAVA_USHORT (VAR_1, VAR_8);\n\t\tVAR_8 += 2;\n\t\tVAR_4->inner_name_idx = R_BIN_JAVA_USHORT (VAR_1, VAR_8);\n\t\tVAR_8 += 2;\n\t\tVAR_4->inner_class_access_flags = R_BIN_JAVA_USHORT (VAR_1, VAR_8);\n\t\tVAR_8 += 2;\n\t\tVAR_4->flags_str = retrieve_class_method_access_string (VAR_4->inner_class_access_flags);\n\t\tVAR_4->file_offset = VAR_9;\n\t\tVAR_4->size = 8;\n\n\t\tVAR_6 = r_bin_java_get_item_from_bin_cp_list (VAR_12, VAR_4->inner_name_idx);\n\t\tif (VAR_6 == NULL) {\n\t\t\teprintf (\"BINCPLIS IS HULL %d\\n\", VAR_4->inner_name_idx);\n\t\t}\n\t\tVAR_4->name = r_bin_java_get_item_name_from_bin_cp_list (VAR_12, VAR_6);\n\t\tif (!VAR_4->name) {\n\t\t\tVAR_6 = r_bin_java_get_item_from_bin_cp_list (VAR_12, VAR_4->inner_class_info_idx);\n\t\t\tif (!VAR_6) {\n\t\t\t\teprintf (\"BINCPLIST IS NULL %d\\n\", VAR_4->inner_class_info_idx);\n\t\t\t}\n\t\t\tVAR_4->name = r_bin_java_get_item_name_from_bin_cp_list (VAR_12, VAR_6);\n\t\t\tif (!VAR_4->name) {\n\t\t\t\tVAR_4->name = r_str_dup (NULL, \"NULL\");\n\t\t\t\teprintf (\"r_bin_java_inner_classes_attr: Unable to find the name for %d index.\\n\", VAR_4->inner_name_idx);\n\t\t\t\tfree (VAR_4);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tIFDBG VAR_13(\"r_bin_java_inner_classes_attr: Inner class name %d is %s.\\n\", VAR_4->inner_name_idx, VAR_4->name);\n\t\tr_list_append (VAR_5->info.inner_classes_attr.classes, (void *) VAR_4);\n\t}\n\tVAR_5->size = VAR_8;\n\t/* COMMENT_1 */\n\treturn VAR_5;\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,6 +6,10 @@\n \tut64 offset = 0, curpos;\n \tattr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n \toffset += 6;\n+\tif (buf_offset + offset + 8 > sz) {\n+\t\teprintf (\"Invalid amount of inner classes\\n\");\n+\t\treturn NULL;\n+\t}\n \tif (attr == NULL) {\n \t\t// TODO eprintf\n \t\treturn attr;\n@@ -16,7 +20,7 @@\n \tattr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);\n \tfor (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {\n \t\tcurpos = buf_offset + offset;\n-\t\tif (offset + 8 > sz) {\n+\t\tif (buf_offset + offset + 8 > sz) {\n \t\t\teprintf (\"Invalid amount of inner classes\\n\");\n \t\t\tbreak;\n \t\t}",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tif (offset + 8 > sz) {"
    ],
    "added_lines": [
      "\tif (buf_offset + offset + 8 > sz) {",
      "\t\teprintf (\"Invalid amount of inner classes\\n\");",
      "\t\treturn NULL;",
      "\t}",
      "\t\tif (buf_offset + offset + 8 > sz) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/19669",
  "description": {
    "pr_info": {
      "title": "Huntr fixes",
      "number": 19669
    },
    "comment": [
      "<!-- Please read the contributing guidelines:\r\n* https://github.com/radareorg/radare2/blob/master/DEVELOPERS.md\r\nIn short:\r\n* PR title must be capitalized, concise and use ##tags\r\n* Follow the coding style, add tests and documentation if necessary\r\n-->\r\n\r\n**Checklist**\r\n\r\n- [ ] Closing issues: #issue\r\n- [x] Mark this if you consider it ready to merge\r\n- [ ] I've added tests (optional)\r\n- [ ] I wrote some lines in the [radare2book](https://github.com/radareorg/radare2book)\r\n\r\n**Description**\r\n\r\n<!-- Explain the **details** to understand the purpose of this contribution, with enough information to help us understand better the changes. -->\r\n"
    ]
  },
  "Bug Filter": "**\nSecurity Vulnerability Fix\n\n**Confidence Score:**\n1.0",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "\n\n**Analysis:**\n\nThe patch addresses an out-of-bounds read vulnerability in the Java inner classes attribute parsing. The code introduces a buffer overflow check to prevent a segmentation fault, which could be exploited to cause a crash or potentially read sensitive data.\n\n**Final Classification:**\nSecurity Vulnerability Fix\n\n**Confidence Score:**\n1.0"
}