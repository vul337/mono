{
  "cve_id": "CVE-2022-2414",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
  "cvss_is_v3": true,
  "repo_name": "dogtagpki/pki",
  "commit_msg": "Disable access to external entities when parsing XML\n\nThis reduces the vulnerability of XML parsers to XXE (XML external\nentity) injection.\n\nThe best way to prevent XXE is to stop using XML altogether, which we do\nplan to do. Until that happens I consider it worthwhile to tighten the\nsecurity here though.",
  "commit_hash": "16deffdf7548e305507982e246eb9fd1eac414fd",
  "git_url": "https://github.com/dogtagpki/pki/commit/16deffdf7548e305507982e246eb9fd1eac414fd",
  "file_path": "base/util/src/main/java/com/netscape/cmsutil/xml/XMLObject.java",
  "func_name": "toByteArray",
  "func_before": "public byte[] toByteArray() throws TransformerConfigurationException, TransformerException {\n        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n        TransformerFactory tranFactory = TransformerFactory.newInstance();\n        Transformer aTransformer = tranFactory.newTransformer();\n        Source src = new DOMSource(mDoc);\n        Result dest = new StreamResult(bos);\n        aTransformer.transform(src, dest);\n        return bos.toByteArray();\n    }",
  "abstract_func_before": "public byte[] toByteArray() throws TransformerConfigurationException, TransformerException {\n        ByteArrayOutputStream VAR_0 = new ByteArrayOutputStream();\n        TransformerFactory VAR_1 = VAR_2.newInstance();\n        Transformer VAR_3 = VAR_1.newTransformer();\n        Source VAR_4 = new DOMSource(VAR_5);\n        Result VAR_6 = new StreamResult(VAR_0);\n        VAR_3.transform(VAR_4, VAR_6);\n        return VAR_0.toByteArray();\n    }",
  "func_graph_path_before": "dogtagpki/pki/16deffdf7548e305507982e246eb9fd1eac414fd/XMLObject.java/vul/before/1.json",
  "func": "public byte[] toByteArray() throws TransformerConfigurationException, TransformerException {\n        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n        TransformerFactory tranFactory = TransformerFactory.newInstance();\n        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");\n        Transformer aTransformer = tranFactory.newTransformer();\n        Source src = new DOMSource(mDoc);\n        Result dest = new StreamResult(bos);\n        aTransformer.transform(src, dest);\n        return bos.toByteArray();\n    }",
  "abstract_func": "public byte[] toByteArray() throws TransformerConfigurationException, TransformerException {\n        ByteArrayOutputStream VAR_0 = new ByteArrayOutputStream();\n        TransformerFactory VAR_1 = VAR_2.newInstance();\n        VAR_1.setAttribute(VAR_3.ACCESS_EXTERNAL_DTD, \"\");\n        VAR_1.setAttribute(VAR_3.ACCESS_EXTERNAL_STYLESHEET, \"\");\n        Transformer VAR_4 = VAR_1.newTransformer();\n        Source VAR_5 = new DOMSource(VAR_6);\n        Result VAR_7 = new StreamResult(VAR_0);\n        VAR_4.transform(VAR_5, VAR_7);\n        return VAR_0.toByteArray();\n    }",
  "func_graph_path": "dogtagpki/pki/16deffdf7548e305507982e246eb9fd1eac414fd/XMLObject.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,8 @@\n public byte[] toByteArray() throws TransformerConfigurationException, TransformerException {\n         ByteArrayOutputStream bos = new ByteArrayOutputStream();\n         TransformerFactory tranFactory = TransformerFactory.newInstance();\n+        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");\n         Transformer aTransformer = tranFactory.newTransformer();\n         Source src = new DOMSource(mDoc);\n         Result dest = new StreamResult(bos);",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");",
      "        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/dogtagpki/pki/pull/4021",
  "description": {
    "pr_info": {
      "title": "Disable access to external entities when parsing XML",
      "number": 4021
    },
    "comment": [
      "This reduces the vulnerability of XML parsers to XXE (XML external\r\nentity) injection.\r\n\r\nThe best way to prevent XXE is to stop using XML altogether, which we do\r\nplan to do. Until that happens I consider it worthwhile to tighten the\r\nsecurity here though.",
      "I considered making a class similar to `JSONSerializer` but it felt like too much work for deprecated code, that is actively marked for removal. Therefore I just added in the necessary updates per-instantiation.",
      "It's a shame that Sonar doesn't work on PRs (yet) because then we could have checked that I caught them all.",
      "Thanks @edewata !"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix\nConfidence Score: 1.0",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "\n\n**Final Output:**\nAnalysis: The patch modifies the XML parsing process to disable access to external entities, specifically to mitigate XXE vulnerabilities. The code changes set attributes to empty strings, preventing external DTD and stylesheet access. The commit message and comments confirm this is a security fix.\nFinal Classification: Security Vulnerability Fix\nConfidence Score: 1.0"
}