{
  "cve_id": "CVE-2023-1495",
  "cwe_ids": [
    "CWE-89"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "getrebuild/rebuild",
  "commit_msg": "H5 sync2 (#595)\n\n* style: 目录样式gh\r\n\r\n* style: J_new\r\n\r\n* feat: advListFilterTabs\r\n\r\n* feat: nav-copyto\r\n\r\n* enh: 助记码全拼\r\n\r\n* enh: 地图搜索选点\r\n\r\n* enh: topnav\r\n\r\n* list pn\r\n\r\n* .form-line.v33\r\n\r\n* open TAG\r\n\r\n* KVS addShutdownHook\r\n\r\n* fix: #594\r\n\r\n---------\r\n\r\nCo-authored-by: devezhao <zhaofang123@gmail.com>",
  "commit_hash": "c9474f84e5f376dd2ade2078e3039961a9425da7",
  "git_url": "https://github.com/getrebuild/rebuild/commit/c9474f84e5f376dd2ade2078e3039961a9425da7",
  "file_path": "src/main/java/com/rebuild/web/project/ProjectTaskController.java",
  "func_name": "taskList",
  "func_before": "@RequestMapping(\"tasks/list\")\n    public JSON taskList(HttpServletRequest request) {\n        final ID user = getRequestUser(request);\n        final ID projectId = getIdParameterNotNull(request, \"project\");\n        final String planKey = getParameterNotNull(request, \"plan\");\n\n        String queryWhere = \"(\" + buildCustomPlanSql(planKey, projectId) + \")\";\n\n        // 关键词搜索\n        String search = getParameter(request, \"search\");\n        if (StringUtils.isNotBlank(search)) {\n            queryWhere += \" and taskName like '%\" + StringEscapeUtils.escapeSql(search) + \"%'\";\n        }\n\n        // 高级查询\n        JSON advFilter = ServletUtils.getRequestJson(request);\n        if (advFilter != null) {\n            String filterSql = new AdvFilterParser((JSONObject) advFilter).toSqlWhere();\n            if (filterSql != null) {\n                queryWhere += \" and (\" + filterSql + \")\";\n            }\n        }\n\n        int pageNo = getIntParameter(request, \"pageNo\", 1);\n        int pageSize = getIntParameter(request, \"pageSize\", 40);\n\n        int count = -1;\n        if (pageNo == 1) {\n            String countSql = \"select count(taskId) from ProjectTask where \" + queryWhere;\n            Object[] count2 = Application.createQueryNoFilter(countSql).unique();\n            count = ObjectUtils.toInt(count2[0]);\n\n            if (count == 0) {\n                return NO_TASKS;\n            }\n        }\n\n        queryWhere += \" order by \" +  buildQuerySort(request);\n\n        ConfigBean project = ProjectManager.instance.getProject(projectId, user);\n        JSONArray alist = queryCardDatas(project, user, queryWhere, new int[] { pageSize, pageNo * pageSize - pageSize });\n\n        return JSONUtils.toJSONObject(\n                new String[] { \"count\", \"tasks\" },\n                new Object[] { count, alist });\n    }",
  "abstract_func_before": "@RequestMapping(\"tasks/list\")\n    public JSON taskList(HttpServletRequest VAR_0) {\n        final ID VAR_1 = getRequestUser(VAR_0);\n        final ID VAR_2 = getIdParameterNotNull(VAR_0, \"project\");\n        final String VAR_3 = getParameterNotNull(VAR_0, \"plan\");\n\n        String VAR_4 = \"(\" + buildCustomPlanSql(VAR_3, VAR_2) + \")\";\n\n        /* COMMENT_0 */\n        String VAR_5 = getParameter(VAR_0, \"search\");\n        if (VAR_6.isNotBlank(VAR_5)) {\n            VAR_4 += \" and taskName like '%\" + VAR_7.escapeSql(VAR_5) + \"%'\";\n        }\n\n        /* COMMENT_1 */\n        JSON VAR_8 = VAR_9.getRequestJson(VAR_0);\n        if (VAR_8 != null) {\n            String VAR_10 = new AdvFilterParser((JSONObject) VAR_8).toSqlWhere();\n            if (VAR_10 != null) {\n                VAR_4 += \" and (\" + VAR_10 + \")\";\n            }\n        }\n\n        int VAR_11 = getIntParameter(VAR_0, \"pageNo\", 1);\n        int VAR_12 = getIntParameter(VAR_0, \"pageSize\", 40);\n\n        int VAR_13 = -1;\n        if (VAR_11 == 1) {\n            String VAR_14 = \"select count(taskId) from ProjectTask where \" + VAR_4;\n            Object[] VAR_15 = VAR_16.createQueryNoFilter(VAR_14).unique();\n            VAR_13 = VAR_17.toInt(VAR_15[0]);\n\n            if (VAR_13 == 0) {\n                return VAR_18;\n            }\n        }\n\n        VAR_4 += \" order by \" +  buildQuerySort(VAR_0);\n\n        ConfigBean VAR_19 = VAR_20.instance.getProject(VAR_2, VAR_1);\n        JSONArray VAR_21 = queryCardDatas(VAR_19, VAR_1, VAR_4, new int[] { VAR_12, VAR_11 * VAR_12 - VAR_12 });\n\n        return VAR_22.toJSONObject(\n                new String[] { \"count\", \"tasks\" },\n                new Object[] { VAR_13, VAR_21 });\n    }",
  "func_graph_path_before": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/ProjectTaskController.java/vul/before/0.json",
  "func": "@RequestMapping(\"tasks/list\")\n    public JSON taskList(HttpServletRequest request) {\n        final ID user = getRequestUser(request);\n        final ID projectId = getIdParameterNotNull(request, \"project\");\n        final String planKey = getParameterNotNull(request, \"plan\");\n\n        String queryWhere = \"(\" + buildCustomPlanSql(planKey, projectId) + \")\";\n\n        // 关键词搜索\n        String search = getParameter(request, \"search\");\n        if (StringUtils.isNotBlank(search)) {\n            queryWhere += \" and taskName like '%\" + CommonsUtils.escapeSql(search) + \"%'\";\n        }\n\n        // 高级查询\n        JSON advFilter = ServletUtils.getRequestJson(request);\n        if (advFilter != null) {\n            String filterSql = new AdvFilterParser((JSONObject) advFilter).toSqlWhere();\n            if (filterSql != null) {\n                queryWhere += \" and (\" + filterSql + \")\";\n            }\n        }\n\n        int pageNo = getIntParameter(request, \"pageNo\", 1);\n        int pageSize = getIntParameter(request, \"pageSize\", 40);\n\n        int count = -1;\n        if (pageNo == 1) {\n            String countSql = \"select count(taskId) from ProjectTask where \" + queryWhere;\n            Object[] count2 = Application.createQueryNoFilter(countSql).unique();\n            count = ObjectUtils.toInt(count2[0]);\n\n            if (count == 0) {\n                return NO_TASKS;\n            }\n        }\n\n        queryWhere += \" order by \" +  buildQuerySort(request);\n\n        ConfigBean project = ProjectManager.instance.getProject(projectId, user);\n        JSONArray alist = queryCardDatas(project, user, queryWhere, new int[] { pageSize, pageNo * pageSize - pageSize });\n\n        return JSONUtils.toJSONObject(\n                new String[] { \"count\", \"tasks\" },\n                new Object[] { count, alist });\n    }",
  "abstract_func": "@RequestMapping(\"tasks/list\")\n    public JSON taskList(HttpServletRequest VAR_0) {\n        final ID VAR_1 = getRequestUser(VAR_0);\n        final ID VAR_2 = getIdParameterNotNull(VAR_0, \"project\");\n        final String VAR_3 = getParameterNotNull(VAR_0, \"plan\");\n\n        String VAR_4 = \"(\" + buildCustomPlanSql(VAR_3, VAR_2) + \")\";\n\n        /* COMMENT_0 */\n        String VAR_5 = getParameter(VAR_0, \"search\");\n        if (VAR_6.isNotBlank(VAR_5)) {\n            VAR_4 += \" and taskName like '%\" + VAR_7.escapeSql(VAR_5) + \"%'\";\n        }\n\n        /* COMMENT_1 */\n        JSON VAR_8 = VAR_9.getRequestJson(VAR_0);\n        if (VAR_8 != null) {\n            String VAR_10 = new AdvFilterParser((JSONObject) VAR_8).toSqlWhere();\n            if (VAR_10 != null) {\n                VAR_4 += \" and (\" + VAR_10 + \")\";\n            }\n        }\n\n        int VAR_11 = getIntParameter(VAR_0, \"pageNo\", 1);\n        int VAR_12 = getIntParameter(VAR_0, \"pageSize\", 40);\n\n        int VAR_13 = -1;\n        if (VAR_11 == 1) {\n            String VAR_14 = \"select count(taskId) from ProjectTask where \" + VAR_4;\n            Object[] VAR_15 = VAR_16.createQueryNoFilter(VAR_14).unique();\n            VAR_13 = VAR_17.toInt(VAR_15[0]);\n\n            if (VAR_13 == 0) {\n                return VAR_18;\n            }\n        }\n\n        VAR_4 += \" order by \" +  buildQuerySort(VAR_0);\n\n        ConfigBean VAR_19 = VAR_20.instance.getProject(VAR_2, VAR_1);\n        JSONArray VAR_21 = queryCardDatas(VAR_19, VAR_1, VAR_4, new int[] { VAR_12, VAR_11 * VAR_12 - VAR_12 });\n\n        return VAR_22.toJSONObject(\n                new String[] { \"count\", \"tasks\" },\n                new Object[] { VAR_13, VAR_21 });\n    }",
  "func_graph_path": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/ProjectTaskController.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -9,7 +9,7 @@\n         // 关键词搜索\n         String search = getParameter(request, \"search\");\n         if (StringUtils.isNotBlank(search)) {\n-            queryWhere += \" and taskName like '%\" + StringEscapeUtils.escapeSql(search) + \"%'\";\n+            queryWhere += \" and taskName like '%\" + CommonsUtils.escapeSql(search) + \"%'\";\n         }\n \n         // 高级查询",
  "diff_line_info": {
    "deleted_lines": [
      "            queryWhere += \" and taskName like '%\" + StringEscapeUtils.escapeSql(search) + \"%'\";"
    ],
    "added_lines": [
      "            queryWhere += \" and taskName like '%\" + CommonsUtils.escapeSql(search) + \"%'\";"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/getrebuild/rebuild/pull/595",
  "description": {
    "pr_info": {
      "title": "H5 sync2",
      "number": 595
    },
    "comment": [
      "Most styles:\r\n1. Nav copy\r\n2. Arrow for form line \r\n3. Quick-code full-pinyin\r\n4. Open Tag of field\r\n5. feat: `advListFilterTabs` (boss-key)\r\n6. Map search\r\n7. feat: Can input page-no on list\r\n8. CVE fix"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 0.9",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\nThe patch addresses a security vulnerability by fixing SQL escaping to prevent injection attacks, as indicated by the mention of a CVE fix.\n\n**Final Output:**\n\nAnalysis: The patch modifies SQL escaping to prevent potential SQL injection, as suggested by the CVE fix reference.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 0.9"
}