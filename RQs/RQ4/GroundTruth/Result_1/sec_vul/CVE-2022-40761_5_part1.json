{
  "cve_id": "CVE-2022-40761",
  "cwe_ids": [
    "CWE-1284"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "Samsung/mTower",
  "commit_msg": "Fixed CVE-2022-40761\n\nSigned-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>",
  "commit_hash": "c5f30c70e48786e1aef8c815f35e406a6c4fb3ae",
  "git_url": "https://github.com/Samsung/mTower/commit/c5f30c70e48786e1aef8c815f35e406a6c4fb3ae",
  "file_path": "crypto/libtomcrypt/src/tee_ltc_provider.c",
  "func_name": "crypto_aes_gcm_alloc_ctx",
  "func_before": "TEE_Result crypto_aes_gcm_alloc_ctx(void **ctx_ret)\n{\n\tstruct tee_gcm_state *ctx = calloc(1, sizeof(*ctx));\n\n\tif (!ctx)\n\t\treturn TEE_ERROR_OUT_OF_MEMORY;\n\n\t*ctx_ret = ctx;\n\treturn TEE_SUCCESS;\n}",
  "abstract_func_before": "TEE_Result crypto_aes_gcm_alloc_ctx(void **VAR_0)\n{\n\tstruct tee_gcm_state *VAR_1 = calloc(1, sizeof(*VAR_1));\n\n\tif (!VAR_1)\n\t\treturn VAR_2;\n\n\t*VAR_0 = VAR_1;\n\treturn VAR_3;\n}",
  "func_graph_path_before": "Samsung/mTower/c5f30c70e48786e1aef8c815f35e406a6c4fb3ae/tee_ltc_provider.c/vul/before/2.json",
  "func": "TEE_Result crypto_aes_gcm_alloc_ctx(void **ctx_ret)\n{\n\tstruct tee_gcm_state *ctx =  TEE_Malloc(sizeof(*ctx), TEE_MALLOC_FILL_ZERO);\n\t// struct tee_gcm_state *ctx = calloc(1, sizeof(*ctx));\n\n\tif (!ctx)\n\t\treturn TEE_ERROR_OUT_OF_MEMORY;\n\n\t*ctx_ret = ctx;\n\treturn TEE_SUCCESS;\n}",
  "abstract_func": "TEE_Result crypto_aes_gcm_alloc_ctx(void **VAR_0)\n{\n\tstruct tee_gcm_state *VAR_1 =  TEE_Malloc(sizeof(*VAR_1), VAR_2);\n\t/* COMMENT_0 */\n\n\tif (!VAR_1)\n\t\treturn VAR_3;\n\n\t*VAR_0 = VAR_1;\n\treturn VAR_4;\n}",
  "func_graph_path": "Samsung/mTower/c5f30c70e48786e1aef8c815f35e406a6c4fb3ae/tee_ltc_provider.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,7 @@\n TEE_Result crypto_aes_gcm_alloc_ctx(void **ctx_ret)\n {\n-\tstruct tee_gcm_state *ctx = calloc(1, sizeof(*ctx));\n+\tstruct tee_gcm_state *ctx =  TEE_Malloc(sizeof(*ctx), TEE_MALLOC_FILL_ZERO);\n+\t// struct tee_gcm_state *ctx = calloc(1, sizeof(*ctx));\n \n \tif (!ctx)\n \t\treturn TEE_ERROR_OUT_OF_MEMORY;",
  "diff_line_info": {
    "deleted_lines": [
      "\tstruct tee_gcm_state *ctx = calloc(1, sizeof(*ctx));"
    ],
    "added_lines": [
      "\tstruct tee_gcm_state *ctx =  TEE_Malloc(sizeof(*ctx), TEE_MALLOC_FILL_ZERO);",
      "\t// struct tee_gcm_state *ctx = calloc(1, sizeof(*ctx));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Samsung/mTower/pull/88",
  "description": {
    "pr_info": {
      "title": "Fixed CVE-2022-40761",
      "number": 88
    },
    "comment": [
      "Signed-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>\r\n\r\n\r\nFixes #83\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] My code follows the style guidelines of this project\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [ ] Any dependent changes have been merged and published in downstream modules"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\nThe patch addresses a security vulnerability by replacing a memory allocation function to prevent data exposure, as indicated by the CVE reference and code changes.\n\n**Final Output:**\nAnalysis: The patch fixes a security vulnerability (CVE-2022-40761) by replacing calloc with a secure memory allocation function to prevent data leakage.\nFinal Classification: Security Vulnerability Fix\nConfidence Score: 0.95"
}