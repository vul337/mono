{
  "cve_id": "CVE-2019-15477",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "jooby-project/jooby",
  "commit_msg": "Avoiding possible XSS attack through the default error handler. See jooby-project/jooby#1366",
  "commit_hash": "34856a738829d8fedca4ed27bd6ff413af87186f",
  "git_url": "https://github.com/jooby-project/jooby/commit/34856a738829d8fedca4ed27bd6ff413af87186f",
  "file_path": "jooby/src/main/java/org/jooby/internal/RouteImpl.java",
  "func_name": "notFound",
  "func_before": "public static RouteWithFilter notFound(final String method, final String path) {\n    return new FallbackRoute(\"404\", method, path, MediaType.ALL, (req, rsp, chain) -> {\n      if (!rsp.status().isPresent()) {\n        throw new Err(Status.NOT_FOUND, req.path(true));\n      }\n    });\n  }",
  "abstract_func_before": "public static RouteWithFilter notFound(final String VAR_0, final String VAR_1) {\n    return new FallbackRoute(\"404\", VAR_0, VAR_1, VAR_2.ALL, (VAR_3, VAR_4, VAR_5) -> {\n      if (!VAR_4.status().isPresent()) {\n        throw new Err(VAR_6.NOT_FOUND, VAR_3.path(true));\n      }\n    });\n  }",
  "func_graph_path_before": "jooby-project/jooby/34856a738829d8fedca4ed27bd6ff413af87186f/RouteImpl.java/vul/before/0.json",
  "func": "public static RouteWithFilter notFound(final String method, final String path) {\n    return new FallbackRoute(\"404\", method, path, MediaType.ALL, (req, rsp, chain) -> {\n      if (!rsp.status().isPresent()) {\n        throw new Err(Status.NOT_FOUND, req.path());\n      }\n    });\n  }",
  "abstract_func": "public static RouteWithFilter notFound(final String VAR_0, final String VAR_1) {\n    return new FallbackRoute(\"404\", VAR_0, VAR_1, VAR_2.ALL, (VAR_3, VAR_4, VAR_5) -> {\n      if (!VAR_4.status().isPresent()) {\n        throw new Err(VAR_6.NOT_FOUND, VAR_3.path());\n      }\n    });\n  }",
  "func_graph_path": "jooby-project/jooby/34856a738829d8fedca4ed27bd6ff413af87186f/RouteImpl.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,7 @@\n public static RouteWithFilter notFound(final String method, final String path) {\n     return new FallbackRoute(\"404\", method, path, MediaType.ALL, (req, rsp, chain) -> {\n       if (!rsp.status().isPresent()) {\n-        throw new Err(Status.NOT_FOUND, req.path(true));\n+        throw new Err(Status.NOT_FOUND, req.path());\n       }\n     });\n   }",
  "diff_line_info": {
    "deleted_lines": [
      "        throw new Err(Status.NOT_FOUND, req.path(true));"
    ],
    "added_lines": [
      "        throw new Err(Status.NOT_FOUND, req.path());"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/jooby-project/jooby/pull/1368",
  "description": {
    "pr_info": {
      "title": "Avoiding possible XSS attack through the default error handler",
      "number": 1368
    },
    "comment": [
      "@jknack  Please review, especially the test case. I'm not familiar with it, i'm not sure if this line is correct:\r\n\r\n`expect(env.xss(\"html\")).andReturn(HtmlEscapers.htmlEscaper()::escape);`",
      "I modified the test case very slightly so `org.jooby.DefaultErrHandlerTest#checkErr` now works with a local copy of the map."
    ]
  },
  "Bug Filter": "** Security Vulnerability Fix  \n**Confidence Score:** 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Analysis:**\nThe commit addresses a potential XSS vulnerability by modifying how the error handler processes the request path, ensuring proper escaping to prevent script injection.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence Score:** 0.95"
}