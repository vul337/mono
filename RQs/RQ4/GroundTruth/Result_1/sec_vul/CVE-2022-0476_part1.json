{
  "cve_id": "CVE-2022-0476",
  "cwe_ids": [
    "CWE-400"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix DoS in the minidump parser ##crash\n\n* Reported by lazymio via huntr.dev\n* Reproducer: mdmp-dos",
  "commit_hash": "27fe8031782d3a06c3998eaa94354867864f9f1b",
  "git_url": "https://github.com/radareorg/radare2/commit/27fe8031782d3a06c3998eaa94354867864f9f1b",
  "file_path": "libr/bin/format/mdmp/mdmp.c",
  "func_name": "read_module",
  "func_before": "static void read_module(RBuffer *b, ut64 addr, struct minidump_module *module) {\n\tst64 o_addr = r_buf_seek (b, 0, R_BUF_CUR);\n\tr_buf_seek (b, addr, R_BUF_SET);\n\tmodule->base_of_image = r_buf_read_le64 (b);\n\tmodule->size_of_image = r_buf_read_le32 (b);\n\tmodule->check_sum = r_buf_read_le32 (b);\n\tmodule->time_date_stamp = r_buf_read_le32 (b);\n\tmodule->module_name_rva = r_buf_read_le32 (b);\n\tmodule->version_info.dw_signature = r_buf_read_le32 (b);\n\tmodule->version_info.dw_struc_version = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_version_ms = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_version_ls = r_buf_read_le32 (b);\n\tmodule->version_info.dw_product_version_ms = r_buf_read_le32 (b);\n\tmodule->version_info.dw_product_version_ls = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_flags_mask = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_flags = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_os = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_type = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_subtype = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_date_ms = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_date_ls = r_buf_read_le32 (b);\n\tmodule->cv_record.data_size = r_buf_read_le32 (b);\n\tmodule->cv_record.rva = r_buf_read_le32 (b);\n\tmodule->misc_record.data_size = r_buf_read_le32 (b);\n\tmodule->misc_record.rva = r_buf_read_le32 (b);\n\tmodule->reserved_0 = r_buf_read_le64 (b);\n\tmodule->reserved_1 = r_buf_read_le64 (b);\n\tr_buf_seek (b, o_addr, R_BUF_SET);\n}",
  "abstract_func_before": "static void read_module(RBuffer *VAR_0, ut64 VAR_1, struct minidump_module *VAR_2) {\n\tst64 VAR_3 = r_buf_seek (VAR_0, 0, VAR_4);\n\tr_buf_seek (VAR_0, VAR_1, VAR_5);\n\tVAR_2->base_of_image = r_buf_read_le64 (VAR_0);\n\tVAR_2->size_of_image = r_buf_read_le32 (VAR_0);\n\tVAR_2->check_sum = r_buf_read_le32 (VAR_0);\n\tVAR_2->time_date_stamp = r_buf_read_le32 (VAR_0);\n\tVAR_2->module_name_rva = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_signature = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_struc_version = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_file_version_ms = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_file_version_ls = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_product_version_ms = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_product_version_ls = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_file_flags_mask = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_file_flags = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_file_os = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_file_type = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_file_subtype = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_file_date_ms = r_buf_read_le32 (VAR_0);\n\tVAR_2->version_info.dw_file_date_ls = r_buf_read_le32 (VAR_0);\n\tVAR_2->cv_record.data_size = r_buf_read_le32 (VAR_0);\n\tVAR_2->cv_record.rva = r_buf_read_le32 (VAR_0);\n\tVAR_2->misc_record.data_size = r_buf_read_le32 (VAR_0);\n\tVAR_2->misc_record.rva = r_buf_read_le32 (VAR_0);\n\tVAR_2->reserved_0 = r_buf_read_le64 (VAR_0);\n\tVAR_2->reserved_1 = r_buf_read_le64 (VAR_0);\n\tr_buf_seek (VAR_0, VAR_3, VAR_5);\n}",
  "func_graph_path_before": "radareorg/radare2/27fe8031782d3a06c3998eaa94354867864f9f1b/mdmp.c/vul/before/0.json",
  "func": "static struct minidump_module *read_module(RBuffer *b, ut64 addr) {\n\tst64 o_addr = r_buf_seek (b, 0, R_BUF_CUR);\n\tif (r_buf_seek (b, addr, R_BUF_SET) == -1) {\n\t\treturn NULL;\n\t}\n\tstruct minidump_module *module = R_NEW0 (struct minidump_module);\n\tif (!module) {\n\t\treturn NULL;\n\t}\n\tmodule->base_of_image = r_buf_read_le64 (b);\n\tmodule->size_of_image = r_buf_read_le32 (b);\n\tmodule->check_sum = r_buf_read_le32 (b);\n\tmodule->time_date_stamp = r_buf_read_le32 (b);\n\tmodule->module_name_rva = r_buf_read_le32 (b);\n\tmodule->version_info.dw_signature = r_buf_read_le32 (b);\n\tmodule->version_info.dw_struc_version = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_version_ms = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_version_ls = r_buf_read_le32 (b);\n\tmodule->version_info.dw_product_version_ms = r_buf_read_le32 (b);\n\tmodule->version_info.dw_product_version_ls = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_flags_mask = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_flags = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_os = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_type = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_subtype = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_date_ms = r_buf_read_le32 (b);\n\tmodule->version_info.dw_file_date_ls = r_buf_read_le32 (b);\n\tmodule->cv_record.data_size = r_buf_read_le32 (b);\n\tmodule->cv_record.rva = r_buf_read_le32 (b);\n\tmodule->misc_record.data_size = r_buf_read_le32 (b);\n\tmodule->misc_record.rva = r_buf_read_le32 (b);\n\tmodule->reserved_0 = r_buf_read_le64 (b);\n\tmodule->reserved_1 = r_buf_read_le64 (b);\n\tr_buf_seek (b, o_addr, R_BUF_SET);\n\treturn module;\n}",
  "abstract_func": "static struct minidump_module *read_module(RBuffer *VAR_0, ut64 VAR_1) {\n\tst64 VAR_2 = r_buf_seek (VAR_0, 0, VAR_3);\n\tif (r_buf_seek (VAR_0, VAR_1, VAR_4) == -1) {\n\t\treturn NULL;\n\t}\n\tstruct minidump_module *VAR_5 = R_NEW0 (struct minidump_module);\n\tif (!VAR_5) {\n\t\treturn NULL;\n\t}\n\tVAR_5->base_of_image = r_buf_read_le64 (VAR_0);\n\tVAR_5->size_of_image = r_buf_read_le32 (VAR_0);\n\tVAR_5->check_sum = r_buf_read_le32 (VAR_0);\n\tVAR_5->time_date_stamp = r_buf_read_le32 (VAR_0);\n\tVAR_5->module_name_rva = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_signature = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_struc_version = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_file_version_ms = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_file_version_ls = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_product_version_ms = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_product_version_ls = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_file_flags_mask = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_file_flags = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_file_os = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_file_type = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_file_subtype = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_file_date_ms = r_buf_read_le32 (VAR_0);\n\tVAR_5->version_info.dw_file_date_ls = r_buf_read_le32 (VAR_0);\n\tVAR_5->cv_record.data_size = r_buf_read_le32 (VAR_0);\n\tVAR_5->cv_record.rva = r_buf_read_le32 (VAR_0);\n\tVAR_5->misc_record.data_size = r_buf_read_le32 (VAR_0);\n\tVAR_5->misc_record.rva = r_buf_read_le32 (VAR_0);\n\tVAR_5->reserved_0 = r_buf_read_le64 (VAR_0);\n\tVAR_5->reserved_1 = r_buf_read_le64 (VAR_0);\n\tr_buf_seek (VAR_0, VAR_2, VAR_4);\n\treturn VAR_5;\n}",
  "func_graph_path": "radareorg/radare2/27fe8031782d3a06c3998eaa94354867864f9f1b/mdmp.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,12 @@\n-static void read_module(RBuffer *b, ut64 addr, struct minidump_module *module) {\n+static struct minidump_module *read_module(RBuffer *b, ut64 addr) {\n \tst64 o_addr = r_buf_seek (b, 0, R_BUF_CUR);\n-\tr_buf_seek (b, addr, R_BUF_SET);\n+\tif (r_buf_seek (b, addr, R_BUF_SET) == -1) {\n+\t\treturn NULL;\n+\t}\n+\tstruct minidump_module *module = R_NEW0 (struct minidump_module);\n+\tif (!module) {\n+\t\treturn NULL;\n+\t}\n \tmodule->base_of_image = r_buf_read_le64 (b);\n \tmodule->size_of_image = r_buf_read_le32 (b);\n \tmodule->check_sum = r_buf_read_le32 (b);\n@@ -26,4 +32,5 @@\n \tmodule->reserved_0 = r_buf_read_le64 (b);\n \tmodule->reserved_1 = r_buf_read_le64 (b);\n \tr_buf_seek (b, o_addr, R_BUF_SET);\n+\treturn module;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "static void read_module(RBuffer *b, ut64 addr, struct minidump_module *module) {",
      "\tr_buf_seek (b, addr, R_BUF_SET);"
    ],
    "added_lines": [
      "static struct minidump_module *read_module(RBuffer *b, ut64 addr) {",
      "\tif (r_buf_seek (b, addr, R_BUF_SET) == -1) {",
      "\t\treturn NULL;",
      "\t}",
      "\tstruct minidump_module *module = R_NEW0 (struct minidump_module);",
      "\tif (!module) {",
      "\t\treturn NULL;",
      "\t}",
      "\treturn module;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/19744",
  "description": {
    "pr_info": {
      "title": "Fix DoS in the minidump parser ##crash",
      "number": 19744
    },
    "comment": [
      "* Reported by lazymio via huntr.dev\r\n* Reproducer: mdmp-dos\r\n\r\n<!--\r\nRead https://github.com/radareorg/radare2/blob/master/DEVELOPERS.md\r\n* PR title must be capitalized, concise and use ##tags\r\n* If the PR is fixing a ticket use 'Fix #1234 - ..' in the commit message\r\n* Follow the coding style, add tests and documentation if necessary\r\n-->\r\n\r\n- [ ] Mark this if you consider it ready to merge\r\n- [ ] I've added tests (optional)\r\n- [ ] I wrote some lines in the [book](https://github.com/radareorg/radare2book) (optional)\r\n\r\n**Description**\r\n\r\n<!-- explain your changes if necessary -->\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: Step 1: The commit message indicates a fix for a DoS vulnerability in the minidump parser, supported by the code changes which add error handling to prevent crashes.\n\nStep 2: The code changes address potential crashes due to unhandled errors, which could be exploited for a DoS attack, impacting availability.\n\nStep 3: Not applicable since the fix is security-related.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 0.95"
}