{
  "cve_id": "CVE-2022-39308",
  "cwe_ids": [
    "CWE-697"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
  "cvss_is_v3": true,
  "repo_name": "gocd",
  "commit_msg": "Access Token APIs  (#5797)\n\n* Define a AuthTokenSqlMapDao to store and retrieve token information from DB\r\n\r\n* Introduce Auth Token API to manage auth tokens\r\n\r\n* Store the hashed token instead of storing the raw value\r\n\r\n* Some tests\r\n\r\n* Store information of the user who has created the auth token\r\n\r\n* Use SHA-256 instead of MD5 for hashing token value\r\n\r\n* Change username data type from VARCHAR to VARCHAR_IGNORECASE\r\n\r\n* Introduce AuthTokenMother to create authToken in tests\r\n\r\n* Fix auth token controller specs\r\n\r\n* Remove unused class variable from test\r\n\r\n* Introduce auth token index endpoint to fetch all the tokens belonging to me\r\n\r\n* Add extra attributes to auth token\r\n* Salt Id\r\n* Salt Value\r\n* Auth Config Id\r\n* Revoked At\r\n\r\n* Add support for revoking access tokens\r\nAdd a method to validate and fetch access token object provided access token\r\n\r\n* Rename controller package and module\r\n\r\n* rename service and dao\r\n\r\n* Rename auth token package\r\n\r\n* Rename rules under url rewrite\r\n\r\n* Renamed few more occurences of auth token to acccess tokens",
  "commit_hash": "236d4baf92e6607f2841c151c855adcc477238b8",
  "git_url": "https://github.com/gocd/gocd/commit/236d4baf92e6607f2841c151c855adcc477238b8",
  "file_path": "server/src/test-shared/java/com/thoughtworks/go/server/dao/DatabaseAccessHelper.java",
  "func_name": "initialize",
  "func_before": "private void initialize(DataSource dataSource) throws AmbiguousTableNameException {\n        databaseTester = new DataSourceDatabaseTester(dataSource);\n        databaseTester.setSetUpOperation(DatabaseOperation.CLEAN_INSERT);\n        databaseTester.setTearDownOperation(DatabaseOperation.DELETE_ALL);\n        DefaultDataSet dataSet = new DefaultDataSet();\n        dataSet.addTable(new DefaultTable(\"agents\"));\n\n        dataSet.addTable(new DefaultTable(\"pipelines\"));\n        dataSet.addTable(new DefaultTable(\"pipelinestates\"));\n        dataSet.addTable(new DefaultTable(\"materials\"));\n        dataSet.addTable(new DefaultTable(\"modifications\"));\n        dataSet.addTable(new DefaultTable(\"pipelineMaterialRevisions\"));\n        dataSet.addTable(new DefaultTable(\"modifiedFiles\"));\n\n        dataSet.addTable(new DefaultTable(\"notificationfilters\"));\n        dataSet.addTable(new DefaultTable(\"users\"));\n        dataSet.addTable(new DefaultTable(\"artifactPropertiesGenerator\"));\n        dataSet.addTable(new DefaultTable(\"stages\"));\n        dataSet.addTable(new DefaultTable(\"pipelineLabelCounts\"));\n        dataSet.addTable(new DefaultTable(\"environmentVariables\"));\n        dataSet.addTable(new DefaultTable(\"properties\"));\n        dataSet.addTable(new DefaultTable(\"artifactPlans\"));\n        dataSet.addTable(new DefaultTable(\"buildStateTransitions\"));\n        dataSet.addTable(new DefaultTable(\"resources\"));\n        dataSet.addTable(new DefaultTable(\"builds\"));\n\n        dataSet.addTable(new DefaultTable(\"stageArtifactCleanupProhibited\"));\n        dataSet.addTable(new DefaultTable(\"serverBackups\"));\n        dataSet.addTable(new DefaultTable(\"jobAgentMetadata\"));\n        dataSet.addTable(new DefaultTable(\"DataSharingSettings\"));\n        dataSet.addTable(new DefaultTable(\"UsageDataReporting\"));\n\n        databaseTester.setDataSet(dataSet);\n    }",
  "abstract_func_before": "private void initialize(DataSource VAR_0) throws AmbiguousTableNameException {\n        VAR_1 = new DataSourceDatabaseTester(VAR_0);\n        VAR_1.setSetUpOperation(VAR_2.CLEAN_INSERT);\n        VAR_1.setTearDownOperation(VAR_2.DELETE_ALL);\n        DefaultDataSet VAR_3 = new DefaultDataSet();\n        VAR_3.addTable(new DefaultTable(\"agents\"));\n\n        VAR_3.addTable(new DefaultTable(\"pipelines\"));\n        VAR_3.addTable(new DefaultTable(\"pipelinestates\"));\n        VAR_3.addTable(new DefaultTable(\"materials\"));\n        VAR_3.addTable(new DefaultTable(\"modifications\"));\n        VAR_3.addTable(new DefaultTable(\"pipelineMaterialRevisions\"));\n        VAR_3.addTable(new DefaultTable(\"modifiedFiles\"));\n\n        VAR_3.addTable(new DefaultTable(\"notificationfilters\"));\n        VAR_3.addTable(new DefaultTable(\"users\"));\n        VAR_3.addTable(new DefaultTable(\"artifactPropertiesGenerator\"));\n        VAR_3.addTable(new DefaultTable(\"stages\"));\n        VAR_3.addTable(new DefaultTable(\"pipelineLabelCounts\"));\n        VAR_3.addTable(new DefaultTable(\"environmentVariables\"));\n        VAR_3.addTable(new DefaultTable(\"properties\"));\n        VAR_3.addTable(new DefaultTable(\"artifactPlans\"));\n        VAR_3.addTable(new DefaultTable(\"buildStateTransitions\"));\n        VAR_3.addTable(new DefaultTable(\"resources\"));\n        VAR_3.addTable(new DefaultTable(\"builds\"));\n\n        VAR_3.addTable(new DefaultTable(\"stageArtifactCleanupProhibited\"));\n        VAR_3.addTable(new DefaultTable(\"serverBackups\"));\n        VAR_3.addTable(new DefaultTable(\"jobAgentMetadata\"));\n        VAR_3.addTable(new DefaultTable(\"DataSharingSettings\"));\n        VAR_3.addTable(new DefaultTable(\"UsageDataReporting\"));\n\n        VAR_1.setDataSet(VAR_3);\n    }",
  "func_graph_path_before": "gocd/236d4baf92e6607f2841c151c855adcc477238b8/DatabaseAccessHelper.java/vul/before/0.json",
  "func": "private void initialize(DataSource dataSource) throws AmbiguousTableNameException {\n        databaseTester = new DataSourceDatabaseTester(dataSource);\n        databaseTester.setSetUpOperation(DatabaseOperation.CLEAN_INSERT);\n        databaseTester.setTearDownOperation(DatabaseOperation.DELETE_ALL);\n        DefaultDataSet dataSet = new DefaultDataSet();\n        dataSet.addTable(new DefaultTable(\"agents\"));\n\n        dataSet.addTable(new DefaultTable(\"pipelines\"));\n        dataSet.addTable(new DefaultTable(\"pipelinestates\"));\n        dataSet.addTable(new DefaultTable(\"materials\"));\n        dataSet.addTable(new DefaultTable(\"modifications\"));\n        dataSet.addTable(new DefaultTable(\"pipelineMaterialRevisions\"));\n        dataSet.addTable(new DefaultTable(\"modifiedFiles\"));\n\n        dataSet.addTable(new DefaultTable(\"notificationfilters\"));\n        dataSet.addTable(new DefaultTable(\"users\"));\n        dataSet.addTable(new DefaultTable(\"artifactPropertiesGenerator\"));\n        dataSet.addTable(new DefaultTable(\"stages\"));\n        dataSet.addTable(new DefaultTable(\"pipelineLabelCounts\"));\n        dataSet.addTable(new DefaultTable(\"environmentVariables\"));\n        dataSet.addTable(new DefaultTable(\"properties\"));\n        dataSet.addTable(new DefaultTable(\"artifactPlans\"));\n        dataSet.addTable(new DefaultTable(\"buildStateTransitions\"));\n        dataSet.addTable(new DefaultTable(\"resources\"));\n        dataSet.addTable(new DefaultTable(\"builds\"));\n\n        dataSet.addTable(new DefaultTable(\"stageArtifactCleanupProhibited\"));\n        dataSet.addTable(new DefaultTable(\"serverBackups\"));\n        dataSet.addTable(new DefaultTable(\"jobAgentMetadata\"));\n        dataSet.addTable(new DefaultTable(\"DataSharingSettings\"));\n        dataSet.addTable(new DefaultTable(\"UsageDataReporting\"));\n        dataSet.addTable(new DefaultTable(\"AccessToken\"));\n\n        databaseTester.setDataSet(dataSet);\n    }",
  "abstract_func": "private void initialize(DataSource VAR_0) throws AmbiguousTableNameException {\n        VAR_1 = new DataSourceDatabaseTester(VAR_0);\n        VAR_1.setSetUpOperation(VAR_2.CLEAN_INSERT);\n        VAR_1.setTearDownOperation(VAR_2.DELETE_ALL);\n        DefaultDataSet VAR_3 = new DefaultDataSet();\n        VAR_3.addTable(new DefaultTable(\"agents\"));\n\n        VAR_3.addTable(new DefaultTable(\"pipelines\"));\n        VAR_3.addTable(new DefaultTable(\"pipelinestates\"));\n        VAR_3.addTable(new DefaultTable(\"materials\"));\n        VAR_3.addTable(new DefaultTable(\"modifications\"));\n        VAR_3.addTable(new DefaultTable(\"pipelineMaterialRevisions\"));\n        VAR_3.addTable(new DefaultTable(\"modifiedFiles\"));\n\n        VAR_3.addTable(new DefaultTable(\"notificationfilters\"));\n        VAR_3.addTable(new DefaultTable(\"users\"));\n        VAR_3.addTable(new DefaultTable(\"artifactPropertiesGenerator\"));\n        VAR_3.addTable(new DefaultTable(\"stages\"));\n        VAR_3.addTable(new DefaultTable(\"pipelineLabelCounts\"));\n        VAR_3.addTable(new DefaultTable(\"environmentVariables\"));\n        VAR_3.addTable(new DefaultTable(\"properties\"));\n        VAR_3.addTable(new DefaultTable(\"artifactPlans\"));\n        VAR_3.addTable(new DefaultTable(\"buildStateTransitions\"));\n        VAR_3.addTable(new DefaultTable(\"resources\"));\n        VAR_3.addTable(new DefaultTable(\"builds\"));\n\n        VAR_3.addTable(new DefaultTable(\"stageArtifactCleanupProhibited\"));\n        VAR_3.addTable(new DefaultTable(\"serverBackups\"));\n        VAR_3.addTable(new DefaultTable(\"jobAgentMetadata\"));\n        VAR_3.addTable(new DefaultTable(\"DataSharingSettings\"));\n        VAR_3.addTable(new DefaultTable(\"UsageDataReporting\"));\n        VAR_3.addTable(new DefaultTable(\"AccessToken\"));\n\n        VAR_1.setDataSet(VAR_3);\n    }",
  "func_graph_path": "gocd/236d4baf92e6607f2841c151c855adcc477238b8/DatabaseAccessHelper.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -29,6 +29,7 @@\n         dataSet.addTable(new DefaultTable(\"jobAgentMetadata\"));\n         dataSet.addTable(new DefaultTable(\"DataSharingSettings\"));\n         dataSet.addTable(new DefaultTable(\"UsageDataReporting\"));\n+        dataSet.addTable(new DefaultTable(\"AccessToken\"));\n \n         databaseTester.setDataSet(dataSet);\n     }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        dataSet.addTable(new DefaultTable(\"AccessToken\"));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/gocd/gocd/pull/5797",
  "description": {
    "pr_info": {
      "title": "Access Token APIs ",
      "number": 5797
    },
    "comment": [
      "issue link: #5354 \r\n\r\n### Add API endpoints to -\r\n1. generate a token\r\n2. get a token by name(without a token value)\r\n2. list all tokens\r\n3. Revoke a token for the user by token name\r\n\r\n**Note:** Deletion of the token is not required as the token usage information is useful for audit purpose"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis:\nThe patch introduces new access token APIs, including features for generating, retrieving, listing, and revoking tokens. It enhances security by storing hashed tokens using SHA-256 and modifies the database schema. These changes are proactive security improvements rather than fixes for existing vulnerabilities.\n\nFinal Classification: Defect Remediation & Feature Upgrades\n\nConfidence Score: 0.8"
}