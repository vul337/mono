{
  "cve_id": "CVE-2021-33391",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "htacg/tidy-html5",
  "commit_msg": "Fixes #946 by refactoring the recursion into a loop with a heap-based stack.",
  "commit_hash": "efa61528aa500a1efbd2768121820742d3bb709b",
  "git_url": "https://github.com/htacg/tidy-html5/commit/efa61528aa500a1efbd2768121820742d3bb709b",
  "file_path": "src/gdoc.c",
  "func_name": "CleanNode",
  "func_before": "static void CleanNode( TidyDocImpl* doc, Node *node )\n{\n    Node *child, *next;\n\n    if (node->content)\n    {\n        for (child = node->content; child != NULL; child = next)\n        {\n            next = child->next;\n\n            if (TY_(nodeIsElement)(child))\n            {\n                if (nodeIsSTYLE(child))\n                    TY_(DiscardElement)(doc, child);\n                if (nodeIsP(child) && !child->content)\n                    TY_(DiscardElement)(doc, child);\n                else if (nodeIsSPAN(child))\n                    DiscardContainer( doc, child, &next);\n                else if (nodeIsA(child) && !child->content)\n                 {\n                    AttVal *id = TY_(GetAttrByName)( child, \"name\" );\n                    /* Recent Google Docs is using \"id\" instead of \"name\" in\n                    ** the exported html.\n                    */\n                    if (!id)\n                        id = TY_(GetAttrByName)( child, \"id\" );\n\n                    if (id)\n                        TY_(RepairAttrValue)( doc, child->parent, \"id\", id->value );\n\n                    TY_(DiscardElement)(doc, child);\n                }\n                else\n                {\n                    if (child->attributes)\n                        TY_(DropAttrByName)( doc, child, \"class\" );\n\n                    CleanNode(doc, child);\n                }\n            }\n        }\n    }\n}",
  "abstract_func_before": "static void CleanNode( TidyDocImpl* VAR_0, Node *VAR_1 )\n{\n    Node *VAR_2, *VAR_3;\n\n    if (VAR_1->content)\n    {\n        for (VAR_2 = VAR_1->content; VAR_2 != NULL; VAR_2 = VAR_3)\n        {\n            VAR_3 = VAR_2->next;\n\n            if (TY_(VAR_4)(VAR_2))\n            {\n                if (nodeIsSTYLE(VAR_2))\n                    TY_(VAR_5)(VAR_0, VAR_2);\n                if (nodeIsP(VAR_2) && !VAR_2->content)\n                    TY_(VAR_5)(VAR_0, VAR_2);\n                else if (nodeIsSPAN(VAR_2))\n                    DiscardContainer( VAR_0, VAR_2, &VAR_3);\n                else if (nodeIsA(VAR_2) && !VAR_2->content)\n                 {\n                    AttVal *VAR_6 = TY_(VAR_7)( VAR_2, \"name\" );\n                    /* COMMENT_0 */\n                                         \n                      \n                    if (!VAR_6)\n                        VAR_6 = TY_(VAR_7)( VAR_2, \"id\" );\n\n                    if (VAR_6)\n                        TY_(VAR_8)( VAR_0, VAR_2->parent, \"id\", VAR_6->value );\n\n                    TY_(VAR_5)(VAR_0, VAR_2);\n                }\n                else\n                {\n                    if (VAR_2->attributes)\n                        TY_(VAR_9)( VAR_0, VAR_2, \"class\" );\n\n                    CleanNode(VAR_0, VAR_2);\n                }\n            }\n        }\n    }\n}",
  "func_graph_path_before": "htacg/tidy-html5/efa61528aa500a1efbd2768121820742d3bb709b/gdoc.c/vul/before/0.json",
  "func": "static void CleanNode( TidyDocImpl* doc, Node *node )\n{\n    Stack *stack = TY_(newStack)(doc, 16);\n    Node *child, *next;\n\n    if ( (child = node->content) )\n    {\n        while (child)\n        {\n            next = child->next;\n            \n            if (TY_(nodeIsElement)(child))\n            {\n                if (nodeIsSTYLE(child))\n                    TY_(DiscardElement)(doc, child);\n                if (nodeIsP(child) && !child->content)\n                    TY_(DiscardElement)(doc, child);\n                else if (nodeIsSPAN(child))\n                    DiscardContainer( doc, child, &next);\n                else if (nodeIsA(child) && !child->content)\n                 {\n                    AttVal *id = TY_(GetAttrByName)( child, \"name\" );\n                    /* Recent Google Docs is using \"id\" instead of \"name\" in\n                    ** the exported html.\n                    */\n                    if (!id)\n                        id = TY_(GetAttrByName)( child, \"id\" );\n\n                    if (id)\n                        TY_(RepairAttrValue)( doc, child->parent, \"id\", id->value );\n\n                    TY_(DiscardElement)(doc, child);\n                }\n                else\n                {\n                    if (child->attributes)\n                        TY_(DropAttrByName)( doc, child, \"class\" );\n\n                    TY_(push)(stack,next);\n                    child = child->content;\n                    continue;\n                }\n            }\n            child = next ? next : TY_(pop)(stack);\n        }\n        TY_(freeStack)(stack);\n    }\n}",
  "abstract_func": "static void CleanNode( TidyDocImpl* VAR_0, Node *VAR_1 )\n{\n    Stack *VAR_2 = TY_(VAR_3)(VAR_0, 16);\n    Node *VAR_4, *VAR_5;\n\n    if ( (VAR_4 = VAR_1->content) )\n    {\n        while (VAR_4)\n        {\n            VAR_5 = VAR_4->next;\n            \n            if (TY_(VAR_6)(VAR_4))\n            {\n                if (nodeIsSTYLE(VAR_4))\n                    TY_(VAR_7)(VAR_0, VAR_4);\n                if (nodeIsP(VAR_4) && !VAR_4->content)\n                    TY_(VAR_7)(VAR_0, VAR_4);\n                else if (nodeIsSPAN(VAR_4))\n                    DiscardContainer( VAR_0, VAR_4, &VAR_5);\n                else if (nodeIsA(VAR_4) && !VAR_4->content)\n                 {\n                    AttVal *VAR_8 = TY_(VAR_9)( VAR_4, \"name\" );\n                    /* COMMENT_0 */\n                                         \n                      \n                    if (!VAR_8)\n                        VAR_8 = TY_(VAR_9)( VAR_4, \"id\" );\n\n                    if (VAR_8)\n                        TY_(VAR_10)( VAR_0, VAR_4->parent, \"id\", VAR_8->value );\n\n                    TY_(VAR_7)(VAR_0, VAR_4);\n                }\n                else\n                {\n                    if (VAR_4->attributes)\n                        TY_(VAR_11)( VAR_0, VAR_4, \"class\" );\n\n                    TY_(VAR_12)(VAR_2,VAR_5);\n                    VAR_4 = VAR_4->content;\n                    continue;\n                }\n            }\n            VAR_4 = VAR_5 ? VAR_5 : TY_(VAR_13)(VAR_2);\n        }\n        TY_(VAR_14)(VAR_2);\n    }\n}",
  "func_graph_path": "htacg/tidy-html5/efa61528aa500a1efbd2768121820742d3bb709b/gdoc.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,13 +1,14 @@\n static void CleanNode( TidyDocImpl* doc, Node *node )\n {\n+    Stack *stack = TY_(newStack)(doc, 16);\n     Node *child, *next;\n \n-    if (node->content)\n+    if ( (child = node->content) )\n     {\n-        for (child = node->content; child != NULL; child = next)\n+        while (child)\n         {\n             next = child->next;\n-\n+            \n             if (TY_(nodeIsElement)(child))\n             {\n                 if (nodeIsSTYLE(child))\n@@ -35,9 +36,13 @@\n                     if (child->attributes)\n                         TY_(DropAttrByName)( doc, child, \"class\" );\n \n-                    CleanNode(doc, child);\n+                    TY_(push)(stack,next);\n+                    child = child->content;\n+                    continue;\n                 }\n             }\n+            child = next ? next : TY_(pop)(stack);\n         }\n+        TY_(freeStack)(stack);\n     }\n }",
  "diff_line_info": {
    "deleted_lines": [
      "    if (node->content)",
      "        for (child = node->content; child != NULL; child = next)",
      "",
      "                    CleanNode(doc, child);"
    ],
    "added_lines": [
      "    Stack *stack = TY_(newStack)(doc, 16);",
      "    if ( (child = node->content) )",
      "        while (child)",
      "            ",
      "                    TY_(push)(stack,next);",
      "                    child = child->content;",
      "                    continue;",
      "            child = next ? next : TY_(pop)(stack);",
      "        TY_(freeStack)(stack);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/htacg/tidy-html5/pull/984",
  "description": {
    "pr_info": {
      "title": "Fixes #946",
      "number": 984
    },
    "comment": [
      "by refactoring the recursion into a loop with a heap-based stack.\r\n\r\nBump version.\r\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\nThe patch refactors a recursive function into an iterative one using a heap-based stack to prevent stack overflow. This addresses a potential crash but doesn't fix a security vulnerability.\n\n**Final Output:**\nAnalysis: The patch replaces recursion with an iterative approach using a stack to prevent stack overflow, fixing a potential crash. While it could mitigate a DoS, it's not classified as a security fix without evidence of exploitability.\nFinal Classification: Defect Remediation & Feature Upgrades\nConfidence Score: 0.95\n\n**Final Output:**\nAnalysis: The patch refactors a recursive function into an iterative approach using a heap-based stack, preventing stack overflow and potential crashes. It doesn't address a security vulnerability but fixes a functional defect.\nFinal Classification: Defect Remediation & Feature Upgrades\nConfidence Score: 0.95"
}