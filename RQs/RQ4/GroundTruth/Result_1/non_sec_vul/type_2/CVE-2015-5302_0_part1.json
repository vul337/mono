{
  "cve_id": "CVE-2015-5302",
  "cwe_ids": [
    "CWE-200"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "abrt/libreport",
  "commit_msg": "wizard: fix save users changes after reviewing dump dir files\n\nIf the user reviewed the dump dir's files during reporting the crash, the\nchanges was thrown away and original data was passed to the bugzilla bug\nreport.\n\nreport-gtk saves the first text view buffer and then reloads data from the\nreported problem directory, which causes that the changes made to those text\nviews are thrown away.\n\nFunction save_text_if_changed(), except of saving text, also reload the files\nfrom dump dir and update gui state from the dump dir. The commit moves the\nreloading and updating gui functions away from this function.\n\nRelated to rhbz#1270235\n\nSigned-off-by: Matej Habrnal <mhabrnal@redhat.com>",
  "commit_hash": "257578a23d1537a2d235aaa2b1488ee4f818e360",
  "git_url": "https://github.com/abrt/libreport/commit/257578a23d1537a2d235aaa2b1488ee4f818e360",
  "file_path": "src/gui-wizard-gtk/wizard.c",
  "func_name": "tv_details_row_activated",
  "func_before": "static void tv_details_row_activated(\n                        GtkTreeView       *tree_view,\n                        GtkTreePath       *tree_path_UNUSED,\n                        GtkTreeViewColumn *column,\n                        gpointer           user_data)\n{\n    gchar *item_name;\n    struct problem_item *item = get_current_problem_item_or_NULL(tree_view, &item_name);\n    if (!item || !(item->flags & CD_FLAG_TXT))\n        goto ret;\n    if (!strchr(item->content, '\\n')) /* one line? */\n        goto ret; /* yes */\n\n    gint exitcode;\n    gchar *arg[3];\n    arg[0] = (char *) \"xdg-open\";\n    arg[1] = concat_path_file(g_dump_dir_name, item_name);\n    arg[2] = NULL;\n\n    const gboolean spawn_ret = g_spawn_sync(NULL, arg, NULL,\n                                 G_SPAWN_SEARCH_PATH | G_SPAWN_STDOUT_TO_DEV_NULL,\n                                 NULL, NULL, NULL, NULL, &exitcode, NULL);\n\n    if (spawn_ret == FALSE || exitcode != EXIT_SUCCESS)\n    {\n        GtkWidget *dialog = gtk_dialog_new_with_buttons(_(\"View/edit a text file\"),\n            GTK_WINDOW(g_wnd_assistant),\n            GTK_DIALOG_MODAL | GTK_DIALOG_DESTROY_WITH_PARENT,\n            NULL, NULL);\n        GtkWidget *vbox = gtk_dialog_get_content_area(GTK_DIALOG(dialog));\n        GtkWidget *scrolled = gtk_scrolled_window_new(NULL, NULL);\n        GtkWidget *textview = gtk_text_view_new();\n\n        gtk_dialog_add_button(GTK_DIALOG(dialog), _(\"_Save\"), GTK_RESPONSE_OK);\n        gtk_dialog_add_button(GTK_DIALOG(dialog), _(\"_Cancel\"), GTK_RESPONSE_CANCEL);\n\n        gtk_box_pack_start(GTK_BOX(vbox), scrolled, TRUE, TRUE, 0);\n        gtk_widget_set_size_request(scrolled, 640, 480);\n        gtk_widget_show(scrolled);\n\n#if ((GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION < 7) || (GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION == 7 && GTK_MICRO_VERSION < 8))\n        /* http://developer.gnome.org/gtk3/unstable/GtkScrolledWindow.html#gtk-scrolled-window-add-with-viewport */\n        /* gtk_scrolled_window_add_with_viewport has been deprecated since version 3.8 and should not be used in newly-written code. */\n        gtk_scrolled_window_add_with_viewport(GTK_SCROLLED_WINDOW(scrolled), textview);\n#else\n        /* gtk_container_add() will now automatically add a GtkViewport if the child doesn't implement GtkScrollable. */\n        gtk_container_add(GTK_CONTAINER(scrolled), textview);\n#endif\n\n        gtk_widget_show(textview);\n\n        load_text_to_text_view(GTK_TEXT_VIEW(textview), item_name);\n\n        if (gtk_dialog_run(GTK_DIALOG(dialog)) == GTK_RESPONSE_OK)\n            save_text_from_text_view(GTK_TEXT_VIEW(textview), item_name);\n\n        gtk_widget_destroy(textview);\n        gtk_widget_destroy(scrolled);\n        gtk_widget_destroy(dialog);\n    }\n\n    free(arg[1]);\n ret:\n    g_free(item_name);\n}",
  "abstract_func_before": "static void tv_details_row_activated(\n                        GtkTreeView       *VAR_0,\n                        GtkTreePath       *VAR_1,\n                        GtkTreeViewColumn *VAR_2,\n                        gpointer           VAR_3)\n{\n    gchar *VAR_4;\n    struct problem_item *VAR_5 = get_current_problem_item_or_NULL(VAR_0, &VAR_4);\n    if (!VAR_5 || !(VAR_5->flags & VAR_6))\n        goto ret;\n    if (!strchr(VAR_5->content, '\\n')) /* COMMENT_0 */\n        goto ret; /* COMMENT_1 */\n\n    gint VAR_7;\n    gchar *VAR_8[3];\n    VAR_8[0] = (char *) \"xdg-open\";\n    VAR_8[1] = concat_path_file(VAR_9, VAR_4);\n    VAR_8[2] = NULL;\n\n    const gboolean VAR_10 = g_spawn_sync(NULL, VAR_8, NULL,\n                                 VAR_11 | VAR_12,\n                                 NULL, NULL, NULL, NULL, &VAR_7, NULL);\n\n    if (VAR_10 == FALSE || VAR_7 != VAR_13)\n    {\n        GtkWidget *VAR_14 = gtk_dialog_new_with_buttons(_(\"View/edit a text file\"),\n            GTK_WINDOW(VAR_15),\n            VAR_16 | VAR_17,\n            NULL, NULL);\n        GtkWidget *VAR_18 = gtk_dialog_get_content_area(GTK_DIALOG(VAR_14));\n        GtkWidget *VAR_19 = gtk_scrolled_window_new(NULL, NULL);\n        GtkWidget *VAR_20 = gtk_text_view_new();\n\n        gtk_dialog_add_button(GTK_DIALOG(VAR_14), _(\"_Save\"), VAR_21);\n        gtk_dialog_add_button(GTK_DIALOG(VAR_14), _(\"_Cancel\"), VAR_22);\n\n        gtk_box_pack_start(GTK_BOX(VAR_18), VAR_19, TRUE, TRUE, 0);\n        gtk_widget_set_size_request(VAR_19, 640, 480);\n        gtk_widget_show(VAR_19);\n\n#if ((VAR_23 == 3 && VAR_24 < 7) || (VAR_23 == 3 && VAR_24 == 7 && VAR_25 < 8))\n        /* COMMENT_2 */\n        /* COMMENT_3 */\n        gtk_scrolled_window_add_with_viewport(GTK_SCROLLED_WINDOW(VAR_19), VAR_20);\n#else\n        /* COMMENT_4 */\n        gtk_container_add(GTK_CONTAINER(VAR_19), VAR_20);\n#endif\n\n        gtk_widget_show(VAR_20);\n\n        load_text_to_text_view(GTK_TEXT_VIEW(VAR_20), VAR_4);\n\n        if (gtk_dialog_run(GTK_DIALOG(VAR_14)) == VAR_21)\n            save_text_from_text_view(GTK_TEXT_VIEW(VAR_20), VAR_4);\n\n        gtk_widget_destroy(VAR_20);\n        gtk_widget_destroy(VAR_19);\n        gtk_widget_destroy(VAR_14);\n    }\n\n    free(VAR_8[1]);\n ret:\n    g_free(VAR_4);\n}",
  "func_graph_path_before": "abrt/libreport/257578a23d1537a2d235aaa2b1488ee4f818e360/wizard.c/vul/before/1.json",
  "func": "static void tv_details_row_activated(\n                        GtkTreeView       *tree_view,\n                        GtkTreePath       *tree_path_UNUSED,\n                        GtkTreeViewColumn *column,\n                        gpointer           user_data)\n{\n    gchar *item_name;\n    struct problem_item *item = get_current_problem_item_or_NULL(tree_view, &item_name);\n    if (!item || !(item->flags & CD_FLAG_TXT))\n        goto ret;\n    if (!strchr(item->content, '\\n')) /* one line? */\n        goto ret; /* yes */\n\n    gint exitcode;\n    gchar *arg[3];\n    arg[0] = (char *) \"xdg-open\";\n    arg[1] = concat_path_file(g_dump_dir_name, item_name);\n    arg[2] = NULL;\n\n    const gboolean spawn_ret = g_spawn_sync(NULL, arg, NULL,\n                                 G_SPAWN_SEARCH_PATH | G_SPAWN_STDOUT_TO_DEV_NULL,\n                                 NULL, NULL, NULL, NULL, &exitcode, NULL);\n\n    if (spawn_ret == FALSE || exitcode != EXIT_SUCCESS)\n    {\n        GtkWidget *dialog = gtk_dialog_new_with_buttons(_(\"View/edit a text file\"),\n            GTK_WINDOW(g_wnd_assistant),\n            GTK_DIALOG_MODAL | GTK_DIALOG_DESTROY_WITH_PARENT,\n            NULL, NULL);\n        GtkWidget *vbox = gtk_dialog_get_content_area(GTK_DIALOG(dialog));\n        GtkWidget *scrolled = gtk_scrolled_window_new(NULL, NULL);\n        GtkWidget *textview = gtk_text_view_new();\n\n        gtk_dialog_add_button(GTK_DIALOG(dialog), _(\"_Save\"), GTK_RESPONSE_OK);\n        gtk_dialog_add_button(GTK_DIALOG(dialog), _(\"_Cancel\"), GTK_RESPONSE_CANCEL);\n\n        gtk_box_pack_start(GTK_BOX(vbox), scrolled, TRUE, TRUE, 0);\n        gtk_widget_set_size_request(scrolled, 640, 480);\n        gtk_widget_show(scrolled);\n\n#if ((GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION < 7) || (GTK_MAJOR_VERSION == 3 && GTK_MINOR_VERSION == 7 && GTK_MICRO_VERSION < 8))\n        /* http://developer.gnome.org/gtk3/unstable/GtkScrolledWindow.html#gtk-scrolled-window-add-with-viewport */\n        /* gtk_scrolled_window_add_with_viewport has been deprecated since version 3.8 and should not be used in newly-written code. */\n        gtk_scrolled_window_add_with_viewport(GTK_SCROLLED_WINDOW(scrolled), textview);\n#else\n        /* gtk_container_add() will now automatically add a GtkViewport if the child doesn't implement GtkScrollable. */\n        gtk_container_add(GTK_CONTAINER(scrolled), textview);\n#endif\n\n        gtk_widget_show(textview);\n\n        load_text_to_text_view(GTK_TEXT_VIEW(textview), item_name);\n\n        if (gtk_dialog_run(GTK_DIALOG(dialog)) == GTK_RESPONSE_OK)\n        {\n            save_text_from_text_view(GTK_TEXT_VIEW(textview), item_name);\n            problem_data_reload_from_dump_dir();\n            update_gui_state_from_problem_data(/* don't update selected event */ 0);\n        }\n\n        gtk_widget_destroy(textview);\n        gtk_widget_destroy(scrolled);\n        gtk_widget_destroy(dialog);\n    }\n\n    free(arg[1]);\n ret:\n    g_free(item_name);\n}",
  "abstract_func": "static void tv_details_row_activated(\n                        GtkTreeView       *VAR_0,\n                        GtkTreePath       *VAR_1,\n                        GtkTreeViewColumn *VAR_2,\n                        gpointer           VAR_3)\n{\n    gchar *VAR_4;\n    struct problem_item *VAR_5 = get_current_problem_item_or_NULL(VAR_0, &VAR_4);\n    if (!VAR_5 || !(VAR_5->flags & VAR_6))\n        goto ret;\n    if (!strchr(VAR_5->content, '\\n')) /* COMMENT_0 */\n        goto ret; /* COMMENT_1 */\n\n    gint VAR_7;\n    gchar *VAR_8[3];\n    VAR_8[0] = (char *) \"xdg-open\";\n    VAR_8[1] = concat_path_file(VAR_9, VAR_4);\n    VAR_8[2] = NULL;\n\n    const gboolean VAR_10 = g_spawn_sync(NULL, VAR_8, NULL,\n                                 VAR_11 | VAR_12,\n                                 NULL, NULL, NULL, NULL, &VAR_7, NULL);\n\n    if (VAR_10 == FALSE || VAR_7 != VAR_13)\n    {\n        GtkWidget *VAR_14 = gtk_dialog_new_with_buttons(_(\"View/edit a text file\"),\n            GTK_WINDOW(VAR_15),\n            VAR_16 | VAR_17,\n            NULL, NULL);\n        GtkWidget *VAR_18 = gtk_dialog_get_content_area(GTK_DIALOG(VAR_14));\n        GtkWidget *VAR_19 = gtk_scrolled_window_new(NULL, NULL);\n        GtkWidget *VAR_20 = gtk_text_view_new();\n\n        gtk_dialog_add_button(GTK_DIALOG(VAR_14), _(\"_Save\"), VAR_21);\n        gtk_dialog_add_button(GTK_DIALOG(VAR_14), _(\"_Cancel\"), VAR_22);\n\n        gtk_box_pack_start(GTK_BOX(VAR_18), VAR_19, TRUE, TRUE, 0);\n        gtk_widget_set_size_request(VAR_19, 640, 480);\n        gtk_widget_show(VAR_19);\n\n#if ((VAR_23 == 3 && VAR_24 < 7) || (VAR_23 == 3 && VAR_24 == 7 && VAR_25 < 8))\n        /* COMMENT_2 */\n        /* COMMENT_3 */\n        gtk_scrolled_window_add_with_viewport(GTK_SCROLLED_WINDOW(VAR_19), VAR_20);\n#else\n        /* COMMENT_4 */\n        gtk_container_add(GTK_CONTAINER(VAR_19), VAR_20);\n#endif\n\n        gtk_widget_show(VAR_20);\n\n        load_text_to_text_view(GTK_TEXT_VIEW(VAR_20), VAR_4);\n\n        if (gtk_dialog_run(GTK_DIALOG(VAR_14)) == VAR_21)\n        {\n            save_text_from_text_view(GTK_TEXT_VIEW(VAR_20), VAR_4);\n            problem_data_reload_from_dump_dir();\n            update_gui_state_from_problem_data(/* COMMENT_5 */ 0);\n        }\n\n        gtk_widget_destroy(VAR_20);\n        gtk_widget_destroy(VAR_19);\n        gtk_widget_destroy(VAR_14);\n    }\n\n    free(VAR_8[1]);\n ret:\n    g_free(VAR_4);\n}",
  "func_graph_path": "abrt/libreport/257578a23d1537a2d235aaa2b1488ee4f818e360/wizard.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -52,7 +52,11 @@\n         load_text_to_text_view(GTK_TEXT_VIEW(textview), item_name);\n \n         if (gtk_dialog_run(GTK_DIALOG(dialog)) == GTK_RESPONSE_OK)\n+        {\n             save_text_from_text_view(GTK_TEXT_VIEW(textview), item_name);\n+            problem_data_reload_from_dump_dir();\n+            update_gui_state_from_problem_data(/* don't update selected event */ 0);\n+        }\n \n         gtk_widget_destroy(textview);\n         gtk_widget_destroy(scrolled);",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        {",
      "            problem_data_reload_from_dump_dir();",
      "            update_gui_state_from_problem_data(/* don't update selected event */ 0);",
      "        }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/abrt/libreport/pull/385",
  "description": {
    "pr_info": {
      "title": "wizard: fix save users changes after reviewing dump dir files",
      "number": 385
    },
    "comment": [
      "If the user reviewed the dump dir's files during reporting the crash, the\nchanges was thrown away and original data was passed to the bugzilla bug\nreport.\n\nreport-gtk saves the first text view buffer and then reloads data from the\nreported problem directory, which causes that the changes made to those text\nviews are thrown away.\n\nThis commit fixes the security issue described above.\n\nRelated to rhbz#1270235\n\nSigned-off-by: Matej Habrnal mhabrnal@redhat.com\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\nThe patch addresses a bug where user changes were discarded due to an unintended data reload, not a security vulnerability. The changes ensure that user input is saved correctly.\n\n**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence Score:** 0.9"
}