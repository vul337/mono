{
  "cve_id": "CVE-2018-14345",
  "cwe_ids": [
    "CWE-287",
    "CWE-613"
  ],
  "cvss_vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "sddm",
  "commit_msg": "Fix authentication when reusing an existing session\n\n- Check the success value before unlocking the session\n- Don't attempt to use the nonexistant \"sddm-check\" PAM service",
  "commit_hash": "147cec383892d143b5e02daa70f1e7def50f5d98",
  "git_url": "https://github.com/sddm/sddm/commit/147cec383892d143b5e02daa70f1e7def50f5d98",
  "file_path": "src/helper/backend/PamBackend.cpp",
  "func_name": "PamBackend::start",
  "func_before": "bool PamBackend::start(const QString &user) {\n        bool result;\n\n        QString service = QStringLiteral(\"sddm\");\n\n        if (user == QStringLiteral(\"sddm\") && m_greeter)\n            service = QStringLiteral(\"sddm-greeter\");\n        else if (m_app->session()->path().isEmpty())\n            service = QStringLiteral(\"sddm-check\");\n        else if (m_autologin)\n            service = QStringLiteral(\"sddm-autologin\");\n        result = m_pam->start(service, user);\n\n        if (!result)\n            m_app->error(m_pam->errorString(), Auth::ERROR_INTERNAL);\n\n        return result;\n    }",
  "abstract_func_before": "bool PamBackend::start(const QString &VAR_0) {\n        bool VAR_1;\n\n        QString VAR_2 = QStringLiteral(\"sddm\");\n\n        if (VAR_0 == QStringLiteral(\"sddm\") && VAR_3)\n            VAR_2 = QStringLiteral(\"sddm-greeter\");\n        else if (VAR_4->session()->path().isEmpty())\n            VAR_2 = QStringLiteral(\"sddm-check\");\n        else if (VAR_5)\n            VAR_2 = QStringLiteral(\"sddm-autologin\");\n        VAR_1 = VAR_6->start(VAR_2, VAR_0);\n\n        if (!VAR_1)\n            VAR_4->error(VAR_6->errorString(), Auth::ERROR_INTERNAL);\n\n        return VAR_1;\n    }",
  "func_graph_path_before": "sddm/147cec383892d143b5e02daa70f1e7def50f5d98/PamBackend.cpp/vul/before/0.json",
  "func": "bool PamBackend::start(const QString &user) {\n        bool result;\n\n        QString service = QStringLiteral(\"sddm\");\n\n        if (user == QStringLiteral(\"sddm\") && m_greeter)\n            service = QStringLiteral(\"sddm-greeter\");\n        else if (m_autologin)\n            service = QStringLiteral(\"sddm-autologin\");\n        result = m_pam->start(service, user);\n\n        if (!result)\n            m_app->error(m_pam->errorString(), Auth::ERROR_INTERNAL);\n\n        return result;\n    }",
  "abstract_func": "bool PamBackend::start(const QString &VAR_0) {\n        bool VAR_1;\n\n        QString VAR_2 = QStringLiteral(\"sddm\");\n\n        if (VAR_0 == QStringLiteral(\"sddm\") && VAR_3)\n            VAR_2 = QStringLiteral(\"sddm-greeter\");\n        else if (VAR_4)\n            VAR_2 = QStringLiteral(\"sddm-autologin\");\n        VAR_1 = VAR_5->start(VAR_2, VAR_0);\n\n        if (!VAR_1)\n            VAR_6->error(VAR_5->errorString(), Auth::ERROR_INTERNAL);\n\n        return VAR_1;\n    }",
  "func_graph_path": "sddm/147cec383892d143b5e02daa70f1e7def50f5d98/PamBackend.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -5,8 +5,6 @@\n \n         if (user == QStringLiteral(\"sddm\") && m_greeter)\n             service = QStringLiteral(\"sddm-greeter\");\n-        else if (m_app->session()->path().isEmpty())\n-            service = QStringLiteral(\"sddm-check\");\n         else if (m_autologin)\n             service = QStringLiteral(\"sddm-autologin\");\n         result = m_pam->start(service, user);",
  "diff_line_info": {
    "deleted_lines": [
      "        else if (m_app->session()->path().isEmpty())",
      "            service = QStringLiteral(\"sddm-check\");"
    ],
    "added_lines": []
  },
  "is_vul": true,
  "pr_url": "https://github.com/sddm/sddm/pull/1050",
  "description": {
    "pr_info": {
      "title": "Fix authentication when reusing an existing session",
      "number": 1050
    },
    "comment": [
      "- Check the success value before unlocking the session\r\n- Don't attempt to use the nonexistant \"sddm-check\" PAM service"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis:\n- The patch removes the use of a non-existent PAM service and checks authentication success before unlocking sessions, addressing potential authentication issues.\n\nFinal Classification: Defect Remediation & Feature Upgrades\n\nConfidence Score: 0.8\n\n**Step-by-Step Explanation:**\n\n1. **Patch Analysis**: The changes fix authentication issues by removing an invalid PAM service and ensuring proper session unlocking after successful authentication.\n\n2. **Security Assessment**: While authentication is a security area, the fix addresses incorrect service usage and success checks without evidence of an exploitable security flaw.\n\n3. **Classification**: The changes are bug fixes for incorrect behavior, not security vulnerabilities.\n\n4. **Confidence**: Moderate confidence due to clear bug fix intent without explicit security implications."
}