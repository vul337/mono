{
  "cve_id": "CVE-2020-36434",
  "cwe_ids": [
    "CWE-415"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "FillZpp/sys-info-rs",
  "commit_msg": "Make Disk Info Thread-Safe on Linux",
  "commit_hash": "4fda8b6a5ffbea03d05fcfc0a89594e6ca495fc7",
  "git_url": "https://github.com/FillZpp/sys-info-rs/commit/4fda8b6a5ffbea03d05fcfc0a89594e6ca495fc7",
  "file_path": "c/linux.c",
  "func_name": "seen_before",
  "func_before": "struct nlist * seen_before(const char *name)\n{\n\tstruct nlist *found=0, *np;\n\tunsigned int hashval;\n\n\t/* lookup */\n\thashval=DFhash(name);\n\tfor (np=DFhashvector[hashval]; np; np=np->next) {\n\t\tif (!strcmp(name,np->name)) {\n\t\t\tfound=np;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!found) {    /* not found */\n\t\tnp = (struct nlist *) malloc(sizeof(*np));\n\t\tif (!np || !(np->name = (char *) strdup(name)))\n\t\t\treturn NULL;\n\t\tnp->next = DFhashvector[hashval];\n\t\tDFhashvector[hashval] = np;\n\t\treturn NULL;\n\t}\n\telse /* found name */\n\t\treturn found;\n}",
  "abstract_func_before": "struct nlist * seen_before(const char *VAR_0)\n{\n\tstruct nlist *VAR_1=0, *VAR_2;\n\tunsigned int VAR_3;\n\n\t/* COMMENT_0 */\n\tVAR_3=DFhash(VAR_0);\n\tfor (VAR_2=VAR_4[VAR_3]; VAR_2; VAR_2=VAR_2->next) {\n\t\tif (!strcmp(VAR_0,VAR_2->name)) {\n\t\t\tVAR_1=VAR_2;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!VAR_1) {    /* COMMENT_1 */\n\t\tVAR_2 = (struct nlist *) malloc(sizeof(*VAR_2));\n\t\tif (!VAR_2 || !(VAR_2->name = (char *) strdup(VAR_0)))\n\t\t\treturn NULL;\n\t\tVAR_2->next = VAR_4[VAR_3];\n\t\tVAR_4[VAR_3] = VAR_2;\n\t\treturn NULL;\n\t}\n\telse /* COMMENT_2 */\n\t\treturn VAR_1;\n}",
  "func_graph_path_before": "FillZpp/sys-info-rs/4fda8b6a5ffbea03d05fcfc0a89594e6ca495fc7/linux.c/vul/before/2.json",
  "func": "struct nlist * seen_before(struct nlist **DFhashvector, const char *name)\n{\n\tstruct nlist *found=0, *np;\n\tunsigned int hashval;\n\n\t/* lookup */\n\thashval=DFhash(name);\n\tfor (np=DFhashvector[hashval]; np; np=np->next) {\n\t\tif (!strcmp(name,np->name)) {\n\t\t\tfound=np;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!found) {    /* not found */\n\t\tnp = (struct nlist *) malloc(sizeof(*np));\n\t\tif (!np || !(np->name = (char *) strdup(name)))\n\t\t\treturn NULL;\n\t\tnp->next = DFhashvector[hashval];\n\t\tDFhashvector[hashval] = np;\n\t\treturn NULL;\n\t}\n\telse /* found name */\n\t\treturn found;\n}",
  "abstract_func": "struct nlist * seen_before(struct nlist **VAR_0, const char *VAR_1)\n{\n\tstruct nlist *VAR_2=0, *VAR_3;\n\tunsigned int VAR_4;\n\n\t/* COMMENT_0 */\n\tVAR_4=DFhash(VAR_1);\n\tfor (VAR_3=VAR_0[VAR_4]; VAR_3; VAR_3=VAR_3->next) {\n\t\tif (!strcmp(VAR_1,VAR_3->name)) {\n\t\t\tVAR_2=VAR_3;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!VAR_2) {    /* COMMENT_1 */\n\t\tVAR_3 = (struct nlist *) malloc(sizeof(*VAR_3));\n\t\tif (!VAR_3 || !(VAR_3->name = (char *) strdup(VAR_1)))\n\t\t\treturn NULL;\n\t\tVAR_3->next = VAR_0[VAR_4];\n\t\tVAR_0[VAR_4] = VAR_3;\n\t\treturn NULL;\n\t}\n\telse /* COMMENT_2 */\n\t\treturn VAR_2;\n}",
  "func_graph_path": "FillZpp/sys-info-rs/4fda8b6a5ffbea03d05fcfc0a89594e6ca495fc7/linux.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,4 @@\n-struct nlist * seen_before(const char *name)\n+struct nlist * seen_before(struct nlist **DFhashvector, const char *name)\n {\n \tstruct nlist *found=0, *np;\n \tunsigned int hashval;",
  "diff_line_info": {
    "deleted_lines": [
      "struct nlist * seen_before(const char *name)"
    ],
    "added_lines": [
      "struct nlist * seen_before(struct nlist **DFhashvector, const char *name)"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/FillZpp/sys-info-rs/pull/84",
  "description": {
    "pr_info": {
      "title": "Make Disk Info Thread-Safe on Linux",
      "number": 84
    },
    "comment": [
      "Closes #63\r\n\r\nPass the `DFhashvector` around as an argument instead of using a global variable.\r\n\r\npossible alternatives: a lock"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis:\nThe patch modifies the function 'seen_before' to pass 'DFhashvector' as an argument instead of using a global variable, addressing a thread-safety issue in disk info handling on Linux. This change aims to prevent race conditions and data corruption in multi-threaded environments.\n\nFinal Classification: Defect Remediation & Feature Upgrades\n\nConfidence Score: 0.8"
}