{
  "cve_id": "CVE-2016-10210",
  "cwe_ids": [
    "CWE-476"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "VirusTotal/yara",
  "commit_msg": "re_lexer: Make reading escape sequences more robust (#586)\n\n* Add test for issue #503\r\n\r\n* re_lexer: Make reading escape sequences more robust\r\n\r\nThis commit fixes parsing incomplete escape sequences at the end of a\r\nregular expression and parsing things like \\xxy (invalid hex digits)\r\nwhich before were silently turned into (char)255.\r\n\r\nClose #503\r\n\r\n* Update re_lexer.c",
  "commit_hash": "3119b232c9c453c98d8fa8b6ae4e37ba18117cd4",
  "git_url": "https://github.com/VirusTotal/yara/commit/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4",
  "file_path": "libyara/re_lexer.c",
  "func_name": "re_yylex_init_extra",
  "func_before": "int re_yylex_init_extra(YY_EXTRA_TYPE yy_user_defined,yyscan_t* ptr_yy_globals )\n\n{\n    struct yyguts_t dummy_yyguts;\n\n    re_yyset_extra (yy_user_defined, &dummy_yyguts);\n\n    if (ptr_yy_globals == NULL){\n        errno = EINVAL;\n        return 1;\n    }\n\t\n    *ptr_yy_globals = (yyscan_t) re_yyalloc ( sizeof( struct yyguts_t ), &dummy_yyguts );\n\t\n    if (*ptr_yy_globals == NULL){\n        errno = ENOMEM;\n        return 1;\n    }\n    \n    /* By setting to 0xAA, we expose bugs in\n    yy_init_globals. Leave at 0x00 for releases. */\n    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));\n    \n    re_yyset_extra (yy_user_defined, *ptr_yy_globals);\n    \n    return yy_init_globals ( *ptr_yy_globals );\n}",
  "abstract_func_before": "int re_yylex_init_extra(YY_EXTRA_TYPE VAR_0,yyscan_t* VAR_1 )\n\n{\n    struct yyguts_t VAR_2;\n\n    re_yyset_extra (VAR_0, &VAR_2);\n\n    if (VAR_1 == NULL){\n        VAR_3 = VAR_4;\n        return 1;\n    }\n\t\n    *VAR_1 = (yyscan_t) re_yyalloc ( sizeof( struct yyguts_t ), &VAR_2 );\n\t\n    if (*VAR_1 == NULL){\n        VAR_3 = VAR_5;\n        return 1;\n    }\n    \n    /* COMMENT_0 */\n                                                   \n    memset(*VAR_1,0x00,sizeof(struct yyguts_t));\n    \n    re_yyset_extra (VAR_0, *VAR_1);\n    \n    return yy_init_globals ( *VAR_1 );\n}",
  "func_graph_path_before": "VirusTotal/yara/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4/re_lexer.c/vul/before/2.json",
  "func": "int re_yylex_init_extra(YY_EXTRA_TYPE yy_user_defined,yyscan_t* ptr_yy_globals )\n\n{\n    struct yyguts_t dummy_yyguts;\n\n    re_yyset_extra (yy_user_defined, &dummy_yyguts);\n\n    if (ptr_yy_globals == NULL){\n        errno = EINVAL;\n        return 1;\n    }\n\n    *ptr_yy_globals = (yyscan_t) re_yyalloc ( sizeof( struct yyguts_t ), &dummy_yyguts );\n\n    if (*ptr_yy_globals == NULL){\n        errno = ENOMEM;\n        return 1;\n    }\n\n    /* By setting to 0xAA, we expose bugs in\n    yy_init_globals. Leave at 0x00 for releases. */\n    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));\n\n    re_yyset_extra (yy_user_defined, *ptr_yy_globals);\n\n    return yy_init_globals ( *ptr_yy_globals );\n}",
  "abstract_func": "int re_yylex_init_extra(YY_EXTRA_TYPE VAR_0,yyscan_t* VAR_1 )\n\n{\n    struct yyguts_t VAR_2;\n\n    re_yyset_extra (VAR_0, &VAR_2);\n\n    if (VAR_1 == NULL){\n        VAR_3 = VAR_4;\n        return 1;\n    }\n\n    *VAR_1 = (yyscan_t) re_yyalloc ( sizeof( struct yyguts_t ), &VAR_2 );\n\n    if (*VAR_1 == NULL){\n        VAR_3 = VAR_5;\n        return 1;\n    }\n\n    /* COMMENT_0 */\n                                                   \n    memset(*VAR_1,0x00,sizeof(struct yyguts_t));\n\n    re_yyset_extra (VAR_0, *VAR_1);\n\n    return yy_init_globals ( *VAR_1 );\n}",
  "func_graph_path": "VirusTotal/yara/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4/re_lexer.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -9,19 +9,19 @@\n         errno = EINVAL;\n         return 1;\n     }\n-\t\n+\n     *ptr_yy_globals = (yyscan_t) re_yyalloc ( sizeof( struct yyguts_t ), &dummy_yyguts );\n-\t\n+\n     if (*ptr_yy_globals == NULL){\n         errno = ENOMEM;\n         return 1;\n     }\n-    \n+\n     /* By setting to 0xAA, we expose bugs in\n     yy_init_globals. Leave at 0x00 for releases. */\n     memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));\n-    \n+\n     re_yyset_extra (yy_user_defined, *ptr_yy_globals);\n-    \n+\n     return yy_init_globals ( *ptr_yy_globals );\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\t",
      "\t",
      "    ",
      "    ",
      "    "
    ],
    "added_lines": [
      "",
      "",
      "",
      "",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/VirusTotal/yara/pull/586",
  "description": {
    "pr_info": {
      "title": "re_lexer: Make reading escape sequences more robust",
      "number": 586
    },
    "comment": [
      "This is actually more like the easy way out. As I mentioned in #503, one might want to change the `yr_re_parse_*` functions to accept a SIZED_STRING argument and use `yy_scan_bytes` instead."
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "The commit addresses a bug in parsing escape sequences, enhancing robustness. It's a non-security fix, classified under defect remediation. **Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.8"
}