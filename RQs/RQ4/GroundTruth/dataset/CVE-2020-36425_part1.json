{
  "cve_id": "CVE-2020-36425",
  "cwe_ids": [
    "CWE-295"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "Mbed-TLS/mbedtls",
  "commit_msg": "Always revoke certificate on CRL\n\nRFC5280 does not state that the `revocationDate` should be checked.\n\nIn addition, when no time source is available (i.e., when MBEDTLS_HAVE_TIME_DATE is not defined), `mbedtls_x509_time_is_past` always returns 0. This results in the CRL not being checked at all.\n\nhttps://tools.ietf.org/html/rfc5280\nSigned-off-by: Raoul Strackx <raoul.strackx@fortanix.com>",
  "commit_hash": "a4e86141f1451e8097f85a823a4426e1c1cfdf7c",
  "git_url": "https://github.com/Mbed-TLS/mbedtls/commit/a4e86141f1451e8097f85a823a4426e1c1cfdf7c",
  "file_path": "library/x509_crt.c",
  "func_name": "mbedtls_x509_crt_is_revoked",
  "func_before": "int mbedtls_x509_crt_is_revoked( const mbedtls_x509_crt *crt, const mbedtls_x509_crl *crl )\n{\n    const mbedtls_x509_crl_entry *cur = &crl->entry;\n\n    while( cur != NULL && cur->serial.len != 0 )\n    {\n        if( crt->serial.len == cur->serial.len &&\n            memcmp( crt->serial.p, cur->serial.p, crt->serial.len ) == 0 )\n        {\n            if( mbedtls_x509_time_is_past( &cur->revocation_date ) )\n                return( 1 );\n        }\n\n        cur = cur->next;\n    }\n\n    return( 0 );\n}",
  "abstract_func_before": "int mbedtls_x509_crt_is_revoked( const mbedtls_x509_crt *VAR_0, const mbedtls_x509_crl *VAR_1 )\n{\n    const mbedtls_x509_crl_entry *VAR_2 = &VAR_1->entry;\n\n    while( VAR_2 != NULL && VAR_2->serial.len != 0 )\n    {\n        if( VAR_0->serial.len == VAR_2->serial.len &&\n            memcmp( VAR_0->serial.p, VAR_2->serial.p, VAR_0->serial.len ) == 0 )\n        {\n            if( mbedtls_x509_time_is_past( &VAR_2->revocation_date ) )\n                return( 1 );\n        }\n\n        VAR_2 = VAR_2->next;\n    }\n\n    return( 0 );\n}",
  "func_graph_path_before": "Mbed-TLS/mbedtls/a4e86141f1451e8097f85a823a4426e1c1cfdf7c/x509_crt.c/vul/before/0.json",
  "func": "int mbedtls_x509_crt_is_revoked( const mbedtls_x509_crt *crt, const mbedtls_x509_crl *crl )\n{\n    const mbedtls_x509_crl_entry *cur = &crl->entry;\n\n    while( cur != NULL && cur->serial.len != 0 )\n    {\n        if( crt->serial.len == cur->serial.len &&\n            memcmp( crt->serial.p, cur->serial.p, crt->serial.len ) == 0 )\n        {\n            return( 1 );\n        }\n\n        cur = cur->next;\n    }\n\n    return( 0 );\n}",
  "abstract_func": "int mbedtls_x509_crt_is_revoked( const mbedtls_x509_crt *VAR_0, const mbedtls_x509_crl *VAR_1 )\n{\n    const mbedtls_x509_crl_entry *VAR_2 = &VAR_1->entry;\n\n    while( VAR_2 != NULL && VAR_2->serial.len != 0 )\n    {\n        if( VAR_0->serial.len == VAR_2->serial.len &&\n            memcmp( VAR_0->serial.p, VAR_2->serial.p, VAR_0->serial.len ) == 0 )\n        {\n            return( 1 );\n        }\n\n        VAR_2 = VAR_2->next;\n    }\n\n    return( 0 );\n}",
  "func_graph_path": "Mbed-TLS/mbedtls/a4e86141f1451e8097f85a823a4426e1c1cfdf7c/x509_crt.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,8 +7,7 @@\n         if( crt->serial.len == cur->serial.len &&\n             memcmp( crt->serial.p, cur->serial.p, crt->serial.len ) == 0 )\n         {\n-            if( mbedtls_x509_time_is_past( &cur->revocation_date ) )\n-                return( 1 );\n+            return( 1 );\n         }\n \n         cur = cur->next;",
  "diff_line_info": {
    "deleted_lines": [
      "            if( mbedtls_x509_time_is_past( &cur->revocation_date ) )",
      "                return( 1 );"
    ],
    "added_lines": [
      "            return( 1 );"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Mbed-TLS/mbedtls/pull/3433",
  "description": {
    "pr_info": {
      "title": "Always revoke certificate on CRL",
      "number": 3433
    },
    "comment": [
      "## Description\r\n\r\nAlways revoke certificate on CRL\r\n    \r\nRFC5280 (https://tools.ietf.org/html/rfc5280) does not state that the `revocationDate` should be checked.\r\n    \r\nIn addition, when no time source is available (i.e., when MBEDTLS_HAVE_TIME_DATE is not defined), `mbedtls_x509_time_is_past` always returns 0. This results in the CRL not being checked at all.\r\n\r\n## Status\r\n**READY**\r\n\r\n## Requires Backporting\r\nYes \r\n\r\n- [x] 2.16 - #3562 \r\n- [x] 2.7 - #3561 \r\n\r\n## Todos\r\n\r\n- [x] Tests\r\n- [x] Changelog updated\r\n\r\nFix https://github.com/ARMmbed/mbedtls/issues/3340\r\n",
      "Thanks for your contribution! I agree with your assessment: I looked at all instances of \"revocationDate\" in  RFC 5280 and it never says that it should be checked. Moreover, point (j) on [page 95](https://tools.ietf.org/html/rfc5280#page-95) says to marked as revoked as soon as issuer name and serial number match. It looks like this field is more informational (a bit like the optional \"reason\" field.) Also, from a security perspective, if the certificate ended up on a CRL, it shouldn't be trusted regardless of the revocation date, especially considering the local clock can't always be trusted.\r\n\r\nThe new behaviour should come with a test. Please generate a CRL with a revocation date in the far future (to make sure it's still in the future in a few years) for one of our existing certificate and add a test for verifying this certificate with that CRL using the function `x509_verify` in `tests/suites/test_suite_x509parse.data`. The generated CRL file should live in `tests/data_files` and its generation method documented in `tests/data_files/Makefile`. In order to obtain a revocation date in the future, you might need to use the `faketime` utility (see examples in that Makefile). Feel free to ask for help on testing if needed, we're aware that out test system is not always intuitive first time you touch it.\r\n\r\nSince this changes the observable behaviour, it deserves an entry in our ChangeLog, I'd say under `Bugfix` as the current behaviour isn't in accordance to the standard. Can you write one? See [https://github.com/ARMmbed/mbedtls/blob/development/ChangeLog.d/00README.md](the ChangeLog README).\r\n\r\nFinally, can you add a Signed-Off-By line to your commit message, ton indicate that you agree with our [licensing terms](https://github.com/ARMmbed/mbedtls#license)?\r\n",
      "@mpg could you send me the output of CI? Running the tests locally doesn't give me much insight. There are failed tests, but those fail on the development branch too.",
      "One of the tests that fail is:\r\n\r\nclient:\r\n```\r\n../programs/ssl/ssl_client2 server_port=14928 server_addr=127.0.0.1 force_version=tls1_2 ca_file=none auth_mode=none crt_file=none key_file=none force_ciphersuite=TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256\r\n                                                                                                                                                                                                                                             \r\n  . Seeding the random number generator... ok                                                                                                                                                                                                \r\n  . Loading the CA root certificate ... ok (0 skipped)                                                                                                                                                                                       \r\n  . Loading the client cert. and key... ok (key type: invalid PK)                                                                                                                                                                            \r\n  . Connecting to tcp/127.0.0.1/14928... ok                                                                                                                                                                                                  \r\n  . Setting up the SSL/TLS structure... ok                                                                                                                                                                                                   \r\n  . Performing the SSL/TLS handshake... failed                                                                                                                                                                                               \r\n  ! mbedtls_ssl_handshake returned -0x7780                                                                                                                                                                                                   \r\n                                                                                                                                                                                                                                             \r\nLast error was: -0x7780 - SSL - A fatal alert message was received from our peer                                                                                                                                                             \r\n                                                                                                                                                                                                                                             \r\nEXIT: 1                                                                                                                                                                                                                                      \r\nEXIT: 1\r\n```\r\n\r\nserver:\r\n```\r\ngnutls-serv -p 14928 --http  --disable-client-cert --x509certfile data_files/server5.crt --x509keyfile data_files/server5.key --priority NORMAL:+AES-256-CCM-8:+AES-128-CCM-8:+ARCFOUR-128:+NULL:+MD5:+PSK:+DHE-PSK:+ECDHE-PSK:+RSA-PSK:-VERS-TLS-ALL:+VERS-TLS1.2                                                                                                                                                                                                                        \r\nHTTP Server listening on IPv4 0.0.0.0 port 14928...done\r\nHTTP Server listening on IPv6 :: port 14928...done                                                                                                                                                                                           \r\nNo certificates found!                                                                                                                                                                                                                       \r\nSet static Diffie-Hellman parameters, consider --dhparams.                                                                                                                                                                                   \r\n                                                                                                                                                                                                                                             \r\n* Accepted connection from IPv4 127.0.0.1 port 51090 on Wed Jul  1 13:45:09 2020                                                                                                                                                             \r\n- Description: (TLS1.2)-(ECDHE-ECDSA-SECP521R1)-(AES-128-CBC)-(SHA1)                                                                                                                                                                         \r\n- Session ID: 3A:1B:0B:91:85:1B:B3:D2:D3:CA:5B:83:6B:AD:8C:B0:35:4A:21:01:72:E6:F5:B3:65:73:0D:F0:E0:C6:D3:21                                                                                                                                \r\n- Given server name[1]: localhost                                                                                                                                                                                                            \r\n- Ephemeral EC Diffie-Hellman parameters                                                                                                                                                                                                     \r\n - Using curve: SECP521R1                                                                                                                                                                                                                    \r\n - Curve size: 528 bits                                                                                                                                                                                                                      \r\n- Version: TLS1.2\r\n- Key Exchange: ECDHE-ECDSA\r\n- Server Signature: ECDSA-SHA512\r\n- Cipher: AES-128-CBC\r\n- MAC: SHA1\r\n- Compression: NULL\r\n- Options: extended master secret, safe renegotiation, EtM,\r\n- Channel binding 'tls-unique': 0c25dc0a33cd9291f2a8d0e0\r\nNo certificates found!\r\n\r\n* Accepted connection from IPv4 127.0.0.1 port 51092 on Wed Jul  1 13:45:09 2020\r\n- Description: (TLS1.2)-(ECDHE-ECDSA-SECP521R1)-(AES-256-CBC)-(SHA1)\r\n- Session ID: 6F:38:69:0F:4D:1E:24:32:B2:1A:F6:E3:51:86:B9:1E:23:87:83:27:D3:A5:2A:26:29:6B:61:3B:FB:D6:60:39\r\n- Given server name[1]: localhost\r\n- Ephemeral EC Diffie-Hellman parameters\r\n - Using curve: SECP521R1\r\n - Curve size: 528 bits\r\n- Version: TLS1.2\r\n- Key Exchange: ECDHE-ECDSA\r\n- Server Signature: ECDSA-SHA512\r\n- Cipher: AES-256-CBC\r\n- MAC: SHA1\r\n- Compression: NULL\r\n- Options: extended master secret, safe renegotiation, EtM,\r\n- Channel binding 'tls-unique': f2fe159ed656e501fe4a5b85\r\nError in handshake\r\n```",
      "You don't need to do anything else to pass CI.\r\n\r\n* Travis passed.\r\n* `pr-head` had a single test case failure which is in a DTLS test where an unexpected resend happened. This can happen if the OS drops a UDP packet, which is rare but possible. So that's as good as a pass.\r\n* `pr-merge` passed with an older version of `development`, and didn't run with the latest version due to the \"needs work\" label. I've kicked a new run, should be over in an hour or so.\r\n* Mbed OS jobs are failing due to an unrelated change on the Mbed OS side. We're ignoring Mbed OS CI results until that's fixed.\r\n\r\nIf you're getting failures with interoperability tests locally, it's probably because you're using different versions of OpenSSL and GnuTLS. Different tests need different versions because older versions lack some features or have bugs, and newer versions have removed some obsolete features. The docker image in `tests/docker` should work.\r\n",
      "Oh that nice! Thanks for the fast reply!",
      "Could this get a second review, please?",
      "Hi, I am looking at this as the second reviewer and I have a question related to the first added test (with MBEDTLS_HAVE_TIME_DATE enabled). I was expecting that if I reverted the change in library/x509_crt.c (restoring the check of the revocation date) the test would fail. I tried but the test is passing (I've compiled the library and the tests with the default config and run the unit tests). What am I missing? ",
      "The failures on Travis can be ignored, they're an instance of https://github.com/ARMmbed/mbedtls/issues/3520 and unrelated to this PR - the Mbed OS failures can also be ignored for similar reasons.\r\n\r\nSo this PR is all good, I think now's a good time to start preparing backports.",
      "Thanks for your help!\r\n\r\nWho would be backporting the patch?",
      "Well, if you're willing to do it, that would be much appreciated. It would involve raising two new PRs, one targeting mbedtls-2.16, the other targeting mbedtls-2.7, with the same content as this one (usually `git cherry-pick` is helpful for that), and then linking to those in this PR's description.\r\n\r\nOtherwise, we can handle it ourselves, but that may be a bit slower as that means involving more people on our side (1 for creating the PRs, 2 for reviewing them, while if you can create the PRs, the 2 reviewers who approved the original can usually review the backports pretty quickly).\r\n\r\nJust let us know.",
      "Sure I can do that.",
      "Backported as #3561 and #3562 ",
      "Unfortunately, there's a conflict. It's a simple add/add conflict, but it prevents merging. Please either merge with the latest state of the `development` branch or rebase on top of `development`.\r\n",
      "Thanks. Please resolve the similar conflict in the backports as well.",
      "Sorry for the late response. Merge conflicts have been resolved"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}