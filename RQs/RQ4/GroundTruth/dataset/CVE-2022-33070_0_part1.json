{
  "cve_id": "CVE-2022-33070",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "protobuf-c",
  "commit_msg": "Only shift unsigned values to avoid implementation-specific behavior.\nThis converts the arithmetic shifts to logical shifts.\nIt is based in part on a stackoverflow answer by John Schultz,\nhttps://stackoverflow.com/questions/4533076/google-protocol-buffers-zigzag-encoding",
  "commit_hash": "6e389ce2c34355d36009a8fb1666bed29fa2d4f4",
  "git_url": "https://github.com/protobuf-c/protobuf-c/commit/6e389ce2c34355d36009a8fb1666bed29fa2d4f4",
  "file_path": "protobuf-c/protobuf-c.c",
  "func_name": "unzigzag32",
  "func_before": "static inline int32_t\nunzigzag32(uint32_t v)\n{\n\t// Note:  Using unsigned types prevents undefined behavior\n\treturn (int32_t)((v >> 1) ^ (~(v & 1) + 1));\n}",
  "abstract_func_before": "static inline int32_t\nunzigzag32(uint32_t VAR_0)\n{\n\t/* COMMENT_0 */\n\treturn (int32_t)((VAR_0 >> 1) ^ (~(VAR_0 & 1) + 1));\n}",
  "func_graph_path_before": "protobuf-c/6e389ce2c34355d36009a8fb1666bed29fa2d4f4/protobuf-c.c/vul/before/1.json",
  "func": "static inline int32_t\nunzigzag32(uint32_t v)\n{\n\t// Note:  Using unsigned types prevents undefined behavior\n\treturn (int32_t)((v >> 1) ^ -(v & 1));\n}",
  "abstract_func": "static inline int32_t\nunzigzag32(uint32_t VAR_0)\n{\n\t/* COMMENT_0 */\n\treturn (int32_t)((VAR_0 >> 1) ^ -(VAR_0 & 1));\n}",
  "func_graph_path": "protobuf-c/6e389ce2c34355d36009a8fb1666bed29fa2d4f4/protobuf-c.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,5 +2,5 @@\n unzigzag32(uint32_t v)\n {\n \t// Note:  Using unsigned types prevents undefined behavior\n-\treturn (int32_t)((v >> 1) ^ (~(v & 1) + 1));\n+\treturn (int32_t)((v >> 1) ^ -(v & 1));\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\treturn (int32_t)((v >> 1) ^ (~(v & 1) + 1));"
    ],
    "added_lines": [
      "\treturn (int32_t)((v >> 1) ^ -(v & 1));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/protobuf-c/protobuf-c/pull/508",
  "description": {
    "pr_info": {
      "title": "Only shift unsigned values to avoid implementation-specific behavior.",
      "number": 508
    },
    "comment": [
      "This converts the arithmetic shifts to logical shifts and fixes issue #506.\r\nIt is based in part on a stackoverflow answer by John Schultz,\r\nhttps://stackoverflow.com/questions/4533076/google-protocol-buffers-zigzag-encoding"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "The patch fixes a bug by converting arithmetic shifts to logical shifts to avoid undefined behavior, ensuring consistent code execution. It doesn't address a security issue.\n\n**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.8\n\n**Step-by-Step Explanation:**\n\n1. **Input Analysis:** The commit and vulnerability description focus on correcting shifts for consistency, not security.\n2. **Consistency Check:** Code changes match the commit message, fixing shift operations.\n3. **Purpose Evaluation:** The fix corrects undefined behavior, improving core logic without security implications.\n4. **Assessment:** No security risk or exploit is addressed.\n5. **Classification:** Fits as a defect remediation.\n6. **Confidence:** High (0.8) as the change aims to fix correctness, not security.\n\n**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.8"
}