{
  "cve_id": "CVE-2023-43654",
  "cwe_ids": [
    "CWE-918"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "pytorch/serve",
  "commit_msg": "Issue warning about allowed_urls when default value is used",
  "commit_hash": "391bdec3348e30de173fbb7c7277970e0b53c8ad",
  "git_url": "https://github.com/pytorch/serve/commit/391bdec3348e30de173fbb7c7277970e0b53c8ad",
  "file_path": "frontend/server/src/main/java/org/pytorch/serve/util/ConfigManager.java",
  "func_name": "getAllowedUrls",
  "func_before": "public List<String> getAllowedUrls() {\n        String allowedURL = prop.getProperty(TS_ALLOWED_URLS, \"file://.*|http(s)?://.*\");\n        return Arrays.asList(allowedURL.split(\",\"));\n    }",
  "abstract_func_before": "public List<String> getAllowedUrls() {\n        String VAR_0 = VAR_1.getProperty(VAR_2, \"file://.*|http(s)?://.*\");\n        return VAR_3.asList(VAR_0.split(\",\"));\n    }",
  "func_graph_path_before": "pytorch/serve/391bdec3348e30de173fbb7c7277970e0b53c8ad/ConfigManager.java/vul/before/0.json",
  "func": "public List<String> getAllowedUrls() {\n        String allowedURL = prop.getProperty(TS_ALLOWED_URLS, DEFAULT_TS_ALLOWED_URLS);\n        return Arrays.asList(allowedURL.split(\",\"));\n    }",
  "abstract_func": "public List<String> getAllowedUrls() {\n        String VAR_0 = VAR_1.getProperty(VAR_2, VAR_3);\n        return VAR_4.asList(VAR_0.split(\",\"));\n    }",
  "func_graph_path": "pytorch/serve/391bdec3348e30de173fbb7c7277970e0b53c8ad/ConfigManager.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,4 @@\n public List<String> getAllowedUrls() {\n-        String allowedURL = prop.getProperty(TS_ALLOWED_URLS, \"file://.*|http(s)?://.*\");\n+        String allowedURL = prop.getProperty(TS_ALLOWED_URLS, DEFAULT_TS_ALLOWED_URLS);\n         return Arrays.asList(allowedURL.split(\",\"));\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "        String allowedURL = prop.getProperty(TS_ALLOWED_URLS, \"file://.*|http(s)?://.*\");"
    ],
    "added_lines": [
      "        String allowedURL = prop.getProperty(TS_ALLOWED_URLS, DEFAULT_TS_ALLOWED_URLS);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/pytorch/serve/pull/2534",
  "description": {
    "pr_info": {
      "title": "Issue warning about allowed_urls when default value is used",
      "number": 2534
    },
    "comment": [
      "## Description\r\nIssue warning about `allowed_urls` when default value is used.\r\nThe default value is `file://.*|http(s)?://.*`\r\n\r\nFixes #2531\r\n\r\n## Feature/Issue validation/testing\r\n- Without `allowed_urls` configured\r\n```\r\n$ torchserve --ncs --start --model-store model_store                                     \r\n$ WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.\r\n2023-08-22T11:29:05,267 [WARN ] main org.pytorch.serve.util.ConfigManager - Your torchserve instance can access any URL to load models. When deploying to production, make sure to limit the set of allowed_urls in config.properties\r\n2023-08-22T11:29:05,271 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...\r\n..........\r\n```\r\n\r\n- With `allowed_urls` configured\r\n```\r\n$ cat custom_config.properties                                                           \r\nallowed_urls=\"https://torchserve.pytorch.org/mar_files/.*\"\r\n$ torchserve --ncs --start --model-store model_store --ts-config custom_config.properties\r\n$ WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.\r\n2023-08-22T11:31:58,644 [INFO ] main org.pytorch.serve.servingsdk.impl.PluginsManager - Initializing plugins manager...\r\n```",
      "## [Codecov](https://app.codecov.io/gh/pytorch/serve/pull/2534?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pytorch) Report\n> Merging [#2534](https://app.codecov.io/gh/pytorch/serve/pull/2534?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pytorch) (e5c3c99) into [master](https://app.codecov.io/gh/pytorch/serve/commit/58eb2d2c79cf1cf711abf9ffea5678420a5ff65a?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pytorch) (58eb2d2) will **increase** coverage by `0.08%`.\n> The diff coverage is `n/a`.\n\n> :exclamation: Current head e5c3c99 differs from pull request most recent head 391bdec. Consider uploading reports for the commit 391bdec to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #2534      +/-   ##\n==========================================\n+ Coverage   72.77%   72.85%   +0.08%     \n==========================================\n  Files          78       78              \n  Lines        3695     3695              \n  Branches       58       58              \n==========================================\n+ Hits         2689     2692       +3     \n+ Misses       1002      999       -3     \n  Partials        4        4              \n```\n\n\n[see 1 file with indirect coverage changes](https://app.codecov.io/gh/pytorch/serve/pull/2534/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pytorch)\n\n:mega: Weâ€™re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pytorch)\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.8\n\nStep-by-Step Explanation:\n\n1. **Commit Message Analysis**: The message indicates issuing a warning about the default allowed URLs, suggesting a configuration advisory.\n\n2. **Vulnerability Description**: It describes a warning when using defaults, not a fix for an exploit.\n\n3. **Code Diff**: Uses a constant for the default URL, a code improvement.\n\n4. **No Security Fix Indicators**: Lacks security keywords, no exploit being patched.\n\n5. **Classification**: Enhances configuration guidance, hence Defect Remediation & Feature Upgrades.\n\n6. **Confidence**: High because changes align with improved configuration handling, though not a security patch."
}