{
  "cve_id": "CVE-2020-12762",
  "cwe_ids": [
    "CWE-190",
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "json-c",
  "commit_msg": "Protect array_list_del_idx against size_t overflow.\n\nIf the assignment of stop overflows due to idx and count being\nlarger than SIZE_T_MAX in sum, out of boundary access could happen.\n\nIt takes invalid usage of this function for this to happen, but\nI decided to add this check so array_list_del_idx is as safe against\nbad usage as the other arraylist functions.",
  "commit_hash": "099016b7e8d70a6d5dd814e788bba08d33d48426",
  "git_url": "https://github.com/json-c/json-c/commit/099016b7e8d70a6d5dd814e788bba08d33d48426",
  "file_path": "arraylist.c",
  "func_name": "array_list_del_idx",
  "func_before": "int array_list_del_idx(struct array_list *arr, size_t idx, size_t count)\n{\n\tsize_t i, stop;\n\n\tstop = idx + count;\n\tif (idx >= arr->length || stop > arr->length)\n\t\treturn -1;\n\tfor (i = idx; i < stop; ++i)\n\t{\n\t\tif (arr->array[i])\n\t\t\tarr->free_fn(arr->array[i]);\n\t}\n\tmemmove(arr->array + idx, arr->array + stop, (arr->length - stop) * sizeof(void *));\n\tarr->length -= count;\n\treturn 0;\n}",
  "abstract_func_before": "int array_list_del_idx(struct array_list *VAR_0, size_t VAR_1, size_t VAR_2)\n{\n\tsize_t VAR_3, VAR_4;\n\n\tVAR_4 = VAR_1 + VAR_2;\n\tif (VAR_1 >= VAR_0->length || VAR_4 > VAR_0->length)\n\t\treturn -1;\n\tfor (VAR_3 = VAR_1; VAR_3 < VAR_4; ++VAR_3)\n\t{\n\t\tif (VAR_0->array[VAR_3])\n\t\t\tVAR_0->free_fn(VAR_0->array[VAR_3]);\n\t}\n\tmemmove(VAR_0->array + VAR_1, VAR_0->array + VAR_4, (VAR_0->length - VAR_4) * sizeof(void *));\n\tVAR_0->length -= VAR_2;\n\treturn 0;\n}",
  "func_graph_path_before": "json-c/099016b7e8d70a6d5dd814e788bba08d33d48426/arraylist.c/vul/before/0.json",
  "func": "int array_list_del_idx(struct array_list *arr, size_t idx, size_t count)\n{\n\tsize_t i, stop;\n\n\t/* Avoid overflow in calculation with large indices. */\n\tif (idx > SIZE_T_MAX - count)\n\t\treturn -1;\n\tstop = idx + count;\n\tif (idx >= arr->length || stop > arr->length)\n\t\treturn -1;\n\tfor (i = idx; i < stop; ++i)\n\t{\n\t\tif (arr->array[i])\n\t\t\tarr->free_fn(arr->array[i]);\n\t}\n\tmemmove(arr->array + idx, arr->array + stop, (arr->length - stop) * sizeof(void *));\n\tarr->length -= count;\n\treturn 0;\n}",
  "abstract_func": "int array_list_del_idx(struct array_list *VAR_0, size_t VAR_1, size_t VAR_2)\n{\n\tsize_t VAR_3, VAR_4;\n\n\t/* COMMENT_0 */\n\tif (VAR_1 > VAR_5 - VAR_2)\n\t\treturn -1;\n\tVAR_4 = VAR_1 + VAR_2;\n\tif (VAR_1 >= VAR_0->length || VAR_4 > VAR_0->length)\n\t\treturn -1;\n\tfor (VAR_3 = VAR_1; VAR_3 < VAR_4; ++VAR_3)\n\t{\n\t\tif (VAR_0->array[VAR_3])\n\t\t\tVAR_0->free_fn(VAR_0->array[VAR_3]);\n\t}\n\tmemmove(VAR_0->array + VAR_1, VAR_0->array + VAR_4, (VAR_0->length - VAR_4) * sizeof(void *));\n\tVAR_0->length -= VAR_2;\n\treturn 0;\n}",
  "func_graph_path": "json-c/099016b7e8d70a6d5dd814e788bba08d33d48426/arraylist.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,6 +2,9 @@\n {\n \tsize_t i, stop;\n \n+\t/* Avoid overflow in calculation with large indices. */\n+\tif (idx > SIZE_T_MAX - count)\n+\t\treturn -1;\n \tstop = idx + count;\n \tif (idx >= arr->length || stop > arr->length)\n \t\treturn -1;",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\t/* Avoid overflow in calculation with large indices. */",
      "\tif (idx > SIZE_T_MAX - count)",
      "\t\treturn -1;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/json-c/json-c/pull/592",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/json-c/json-c/pull/592: 403 Client Error: Forbidden for url: https://api.github.com/repos/json-c/json-c/pulls/592",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.99,
  "Bug Filter Response": "The patch addresses a potential buffer overflow in the array_list_del_idx function by adding a check to prevent size_t overflow, which could lead to out-of-bounds access. This is a direct fix for the security vulnerability described. \n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.99"
}