{
  "cve_id": "CVE-2021-4284",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
  "cvss_is_v3": true,
  "repo_name": "openmrs/openmrs-module-htmlformentryui",
  "commit_msg": "Ra 1424:  escapeJs is vulnerable to XSS attacks  (#51)\n\n* RA-1424: escapeJs vulnerable to XSS\r\n\r\n* RA-1424: escapeJs vulnerable to XSS",
  "commit_hash": "811990972ea07649ae33c4b56c61c3b520895f07",
  "git_url": "https://github.com/openmrs/openmrs-module-htmlformentryui/commit/811990972ea07649ae33c4b56c61c3b520895f07",
  "file_path": "omod/src/main/java/org/openmrs/module/htmlformentryui/page/controller/htmlform/ViewEncounterWithHtmlFormPageController.java",
  "func_name": "get",
  "func_before": "public void get(@RequestParam(\"encounter\") Encounter encounter,\n\t        @RequestParam(value = \"showPatientHeader\", defaultValue = \"true\") boolean showPatientHeader,\n\t        @RequestParam(value = \"returnUrl\", required = false) String returnUrl,\n\t        @RequestParam(value = \"returnLabel\", required = false) String returnLabel,\n\t        @RequestParam(value = \"editStyle\", defaultValue = \"standard\") String editStyle,\n\t        @InjectBeans PatientDomainWrapper patient,\n\t        @SpringBean(\"htmlFormEntryService\") HtmlFormEntryService htmlFormEntryService,\n\t        @SpringBean(\"adminService\") AdministrationService administrationService, UiUtils ui, PageModel model) {\n\t\t\n\t\tpatient.setPatient(encounter.getPatient());\n\t\t\n\t\tString customPrintProvider = administrationService.getGlobalProperty(\"htmlformentryui.customPrintProvider\");\n\t\tString customPrintPageName = administrationService.getGlobalProperty(\"htmlformentryui.customPrintPageName\");\n\t\tString customPrintTarget = administrationService.getGlobalProperty(\"htmlformentryui.customPrintTarget\");\n\t\t\n\t\tmodel.addAttribute(\"customPrintProvider\", customPrintProvider);\n\t\tmodel.addAttribute(\"customPrintPageName\", customPrintPageName);\n\t\tmodel.addAttribute(\"customPrintTarget\", customPrintTarget);\n\t\t\n\t\tif (StringUtils.isEmpty(returnUrl)) {\n\t\t\treturnUrl = ui.pageLink(\"coreapps\", \"patientdashboard/patientDashboard\",\n\t\t\t    SimpleObject.create(\"patientId\", patient.getId()));\n\t\t}\n\t\tif (StringUtils.isEmpty(returnLabel)) {\n\t\t\treturnLabel = ui.escapeJs(ui.format(patient.getPatient()));\n\t\t}\n\t\t\n\t\tmodel.addAttribute(\"patient\", patient);\n\t\tmodel.addAttribute(\"visit\", encounter.getVisit());\n\t\tmodel.addAttribute(\"encounter\", encounter);\n\t\tmodel.addAttribute(\"returnUrl\", returnUrl);\n\t\tmodel.addAttribute(\"returnLabel\", returnLabel);\n\t\tmodel.addAttribute(\"editStyle\", fixCase(editStyle));\n\t\tmodel.addAttribute(\"showPatientHeader\", showPatientHeader);\n\t\t\n\t\tHtmlForm htmlForm = htmlFormEntryService.getHtmlFormByForm(encounter.getForm());\n\t\tif (htmlForm == null) {\n\t\t\tthrow new IllegalArgumentException(\"encounter.form is not an HTML Form: \" + encounter.getForm());\n\t\t}\n\t\tmodel.addAttribute(\"htmlForm\", htmlForm);\n\t}",
  "abstract_func_before": "public void get(@RequestParam(\"encounter\") Encounter VAR_0,\n\t        @RequestParam(VAR_1 = \"showPatientHeader\", VAR_2 = \"true\") boolean VAR_3,\n\t        @RequestParam(VAR_1 = \"returnUrl\", VAR_4 = false) String VAR_5,\n\t        @RequestParam(VAR_1 = \"returnLabel\", VAR_4 = false) String VAR_6,\n\t        @RequestParam(VAR_1 = \"editStyle\", VAR_2 = \"standard\") String VAR_7,\n\t        @InjectBeans PatientDomainWrapper VAR_8,\n\t        @SpringBean(\"htmlFormEntryService\") HtmlFormEntryService VAR_9,\n\t        @SpringBean(\"adminService\") AdministrationService VAR_10, UiUtils VAR_11, PageModel VAR_12) {\n\t\t\n\t\tVAR_8.setPatient(VAR_0.getPatient());\n\t\t\n\t\tString VAR_13 = VAR_10.getGlobalProperty(\"htmlformentryui.customPrintProvider\");\n\t\tString VAR_14 = VAR_10.getGlobalProperty(\"htmlformentryui.customPrintPageName\");\n\t\tString VAR_15 = VAR_10.getGlobalProperty(\"htmlformentryui.customPrintTarget\");\n\t\t\n\t\tVAR_12.addAttribute(\"customPrintProvider\", VAR_13);\n\t\tVAR_12.addAttribute(\"customPrintPageName\", VAR_14);\n\t\tVAR_12.addAttribute(\"customPrintTarget\", VAR_15);\n\t\t\n\t\tif (VAR_16.isEmpty(VAR_5)) {\n\t\t\tVAR_5 = VAR_11.pageLink(\"coreapps\", \"patientdashboard/patientDashboard\",\n\t\t\t    VAR_17.create(\"patientId\", VAR_8.getId()));\n\t\t}\n\t\tif (VAR_16.isEmpty(VAR_6)) {\n\t\t\tVAR_6 = VAR_11.escapeJs(VAR_11.format(VAR_8.getPatient()));\n\t\t}\n\t\t\n\t\tVAR_12.addAttribute(\"patient\", VAR_8);\n\t\tVAR_12.addAttribute(\"visit\", VAR_0.getVisit());\n\t\tVAR_12.addAttribute(\"encounter\", VAR_0);\n\t\tVAR_12.addAttribute(\"returnUrl\", VAR_5);\n\t\tVAR_12.addAttribute(\"returnLabel\", VAR_6);\n\t\tVAR_12.addAttribute(\"editStyle\", fixCase(VAR_7));\n\t\tVAR_12.addAttribute(\"showPatientHeader\", VAR_3);\n\t\t\n\t\tHtmlForm VAR_18 = VAR_9.getHtmlFormByForm(VAR_0.getForm());\n\t\tif (VAR_18 == null) {\n\t\t\tthrow new IllegalArgumentException(\"encounter.form is not an HTML Form: \" + VAR_0.getForm());\n\t\t}\n\t\tVAR_12.addAttribute(\"htmlForm\", VAR_18);\n\t}",
  "func_graph_path_before": "openmrs/openmrs-module-htmlformentryui/811990972ea07649ae33c4b56c61c3b520895f07/ViewEncounterWithHtmlFormPageController.java/vul/before/0.json",
  "func": "public void get(@RequestParam(\"encounter\") Encounter encounter,\n\t        @RequestParam(value = \"showPatientHeader\", defaultValue = \"true\") boolean showPatientHeader,\n\t        @RequestParam(value = \"returnUrl\", required = false) String returnUrl,\n\t        @RequestParam(value = \"returnLabel\", required = false) String returnLabel,\n\t        @RequestParam(value = \"editStyle\", defaultValue = \"standard\") String editStyle,\n\t        @InjectBeans PatientDomainWrapper patient,\n\t        @SpringBean(\"htmlFormEntryService\") HtmlFormEntryService htmlFormEntryService,\n\t        @SpringBean(\"adminService\") AdministrationService administrationService, UiUtils ui, PageModel model) {\n\t\t\n\t\tpatient.setPatient(encounter.getPatient());\n\t\t\n\t\tString customPrintProvider = administrationService.getGlobalProperty(\"htmlformentryui.customPrintProvider\");\n\t\tString customPrintPageName = administrationService.getGlobalProperty(\"htmlformentryui.customPrintPageName\");\n\t\tString customPrintTarget = administrationService.getGlobalProperty(\"htmlformentryui.customPrintTarget\");\n\t\t\n\t\tmodel.addAttribute(\"customPrintProvider\", customPrintProvider);\n\t\tmodel.addAttribute(\"customPrintPageName\", customPrintPageName);\n\t\tmodel.addAttribute(\"customPrintTarget\", customPrintTarget);\n\t\t\n\t\tif (StringUtils.isEmpty(returnUrl)) {\n\t\t\treturnUrl = ui.pageLink(\"coreapps\", \"patientdashboard/patientDashboard\",\n\t\t\t    SimpleObject.create(\"patientId\", patient.getId()));\n\t\t}\n\t\tif (StringUtils.isEmpty(returnLabel)) {\n\t\t\treturnLabel = ui.encodeJavaScript(ui.format(patient.getPatient()));\n\t\t}\n\t\t\n\t\tmodel.addAttribute(\"patient\", patient);\n\t\tmodel.addAttribute(\"visit\", encounter.getVisit());\n\t\tmodel.addAttribute(\"encounter\", encounter);\n\t\tmodel.addAttribute(\"returnUrl\", returnUrl);\n\t\tmodel.addAttribute(\"returnLabel\", returnLabel);\n\t\tmodel.addAttribute(\"editStyle\", fixCase(editStyle));\n\t\tmodel.addAttribute(\"showPatientHeader\", showPatientHeader);\n\t\t\n\t\tHtmlForm htmlForm = htmlFormEntryService.getHtmlFormByForm(encounter.getForm());\n\t\tif (htmlForm == null) {\n\t\t\tthrow new IllegalArgumentException(\"encounter.form is not an HTML Form: \" + encounter.getForm());\n\t\t}\n\t\tmodel.addAttribute(\"htmlForm\", htmlForm);\n\t}",
  "abstract_func": "public void get(@RequestParam(\"encounter\") Encounter VAR_0,\n\t        @RequestParam(VAR_1 = \"showPatientHeader\", VAR_2 = \"true\") boolean VAR_3,\n\t        @RequestParam(VAR_1 = \"returnUrl\", VAR_4 = false) String VAR_5,\n\t        @RequestParam(VAR_1 = \"returnLabel\", VAR_4 = false) String VAR_6,\n\t        @RequestParam(VAR_1 = \"editStyle\", VAR_2 = \"standard\") String VAR_7,\n\t        @InjectBeans PatientDomainWrapper VAR_8,\n\t        @SpringBean(\"htmlFormEntryService\") HtmlFormEntryService VAR_9,\n\t        @SpringBean(\"adminService\") AdministrationService VAR_10, UiUtils VAR_11, PageModel VAR_12) {\n\t\t\n\t\tVAR_8.setPatient(VAR_0.getPatient());\n\t\t\n\t\tString VAR_13 = VAR_10.getGlobalProperty(\"htmlformentryui.customPrintProvider\");\n\t\tString VAR_14 = VAR_10.getGlobalProperty(\"htmlformentryui.customPrintPageName\");\n\t\tString VAR_15 = VAR_10.getGlobalProperty(\"htmlformentryui.customPrintTarget\");\n\t\t\n\t\tVAR_12.addAttribute(\"customPrintProvider\", VAR_13);\n\t\tVAR_12.addAttribute(\"customPrintPageName\", VAR_14);\n\t\tVAR_12.addAttribute(\"customPrintTarget\", VAR_15);\n\t\t\n\t\tif (VAR_16.isEmpty(VAR_5)) {\n\t\t\tVAR_5 = VAR_11.pageLink(\"coreapps\", \"patientdashboard/patientDashboard\",\n\t\t\t    VAR_17.create(\"patientId\", VAR_8.getId()));\n\t\t}\n\t\tif (VAR_16.isEmpty(VAR_6)) {\n\t\t\tVAR_6 = VAR_11.encodeJavaScript(VAR_11.format(VAR_8.getPatient()));\n\t\t}\n\t\t\n\t\tVAR_12.addAttribute(\"patient\", VAR_8);\n\t\tVAR_12.addAttribute(\"visit\", VAR_0.getVisit());\n\t\tVAR_12.addAttribute(\"encounter\", VAR_0);\n\t\tVAR_12.addAttribute(\"returnUrl\", VAR_5);\n\t\tVAR_12.addAttribute(\"returnLabel\", VAR_6);\n\t\tVAR_12.addAttribute(\"editStyle\", fixCase(VAR_7));\n\t\tVAR_12.addAttribute(\"showPatientHeader\", VAR_3);\n\t\t\n\t\tHtmlForm VAR_18 = VAR_9.getHtmlFormByForm(VAR_0.getForm());\n\t\tif (VAR_18 == null) {\n\t\t\tthrow new IllegalArgumentException(\"encounter.form is not an HTML Form: \" + VAR_0.getForm());\n\t\t}\n\t\tVAR_12.addAttribute(\"htmlForm\", VAR_18);\n\t}",
  "func_graph_path": "openmrs/openmrs-module-htmlformentryui/811990972ea07649ae33c4b56c61c3b520895f07/ViewEncounterWithHtmlFormPageController.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -22,7 +22,7 @@\n \t\t\t    SimpleObject.create(\"patientId\", patient.getId()));\n \t\t}\n \t\tif (StringUtils.isEmpty(returnLabel)) {\n-\t\t\treturnLabel = ui.escapeJs(ui.format(patient.getPatient()));\n+\t\t\treturnLabel = ui.encodeJavaScript(ui.format(patient.getPatient()));\n \t\t}\n \t\t\n \t\tmodel.addAttribute(\"patient\", patient);",
  "diff_line_info": {
    "deleted_lines": [
      "\t\t\treturnLabel = ui.escapeJs(ui.format(patient.getPatient()));"
    ],
    "added_lines": [
      "\t\t\treturnLabel = ui.encodeJavaScript(ui.format(patient.getPatient()));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/openmrs/openmrs-module-htmlformentryui/pull/51",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/openmrs/openmrs-module-htmlformentryui/pull/51: 403 Client Error: Forbidden for url: https://api.github.com/repos/openmrs/openmrs-module-htmlformentryui/pulls/51",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95\n\nStep-by-step explanation:\n- The commit directly addresses an XSS vulnerability, evident from the message and code change.\n- Replacing `escapeJs` with `encodeJavaScript` suggests proper handling of escaping to prevent script injection.\n- Confidence is high due to clear alignment between commit message and code modification.\n\n**Final Output:** **Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}