{
  "cve_id": "CVE-2017-1000215",
  "cwe_ids": [
    "CWE-78"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "xrootd",
  "commit_msg": "secgsi: do not build/package libXrdSecgsiGMAPLDAP-4.so\n\nThe way the LDAP query is implemented may represent a security threat.\nAny related building and packaging reference is removed.\nThe code is left in place (for the time being) to remind its functionality\nin the case a sanitized version is required.",
  "commit_hash": "befa2e627a5a33a38c92db3e57c07d8246a24acf",
  "git_url": "https://github.com/xrootd/xrootd/commit/befa2e627a5a33a38c92db3e57c07d8246a24acf",
  "file_path": "src/XrdCl/XrdClDefaultEnv.cc",
  "func_name": "DefaultEnv::Initialize",
  "func_before": "void DefaultEnv::Initialize()\n  {\n    sLog           = new Log();\n    SetUpLog();\n\n    sEnv           = new DefaultEnv();\n    sForkHandler   = new ForkHandler();\n    sFileTimer     = new FileTimer();\n    sPlugInManager = new PlugInManager();\n\n    sPlugInManager->ProcessEnvironmentSettings();\n    sForkHandler->RegisterFileTimer( sFileTimer );\n\n    //--------------------------------------------------------------------------\n    // MacOSX library loading is completely moronic. We cannot dlopen a library\n    // from a thread other than a main thread, so we-pre dlopen all the\n    // libraries that we may potentially want.\n    //--------------------------------------------------------------------------\n#ifdef __APPLE__\n    char *errBuff = new char[1024];\n\n    const char *libs[] =\n    {\n      \"libXrdSeckrb5.so\",\n      \"libXrdSecgsi.so\",\n      \"libXrdSecgsiAuthzVO.so\",\n      \"libXrdSecgsiGMAPDN.so\",\n      \"libXrdSecgsiGMAPLDAP.so\",\n      \"libXrdSecpwd.so\",\n      \"libXrdSecsss.so\",\n      \"libXrdSecunix.so\",\n      0\n    };\n\n    for( int i = 0; libs[i]; ++i )\n    {\n      sLog->Debug( UtilityMsg, \"Attempting to pre-load: %s\", libs[i] );\n      bool ok = XrdOucPreload( libs[i], errBuff, 1024 );\n      if( !ok )\n        sLog->Error( UtilityMsg, \"Unable to pre-load %s: %s\", libs[i], errBuff );\n    }\n    delete [] errBuff;\n#endif\n  }",
  "abstract_func_before": "void DefaultEnv::Initialize()\n  {\n    VAR_0           = new Log();\n    SetUpLog();\n\n    VAR_1           = new DefaultEnv();\n    VAR_2   = new ForkHandler();\n    VAR_3     = new FileTimer();\n    VAR_4 = new PlugInManager();\n\n    VAR_4->ProcessEnvironmentSettings();\n    VAR_2->RegisterFileTimer( VAR_3 );\n\n    /* COMMENT_0 */\n    /* COMMENT_1 */\n    /* COMMENT_2 */\n    /* COMMENT_3 */\n    /* COMMENT_0 */\n#ifdef VAR_5\n    char *VAR_6 = new char[1024];\n\n    const char *VAR_7[] =\n    {\n      \"libXrdSeckrb5.so\",\n      \"libXrdSecgsi.so\",\n      \"libXrdSecgsiAuthzVO.so\",\n      \"libXrdSecgsiGMAPDN.so\",\n      \"libXrdSecgsiGMAPLDAP.so\",\n      \"libXrdSecpwd.so\",\n      \"libXrdSecsss.so\",\n      \"libXrdSecunix.so\",\n      0\n    };\n\n    for( int VAR_8 = 0; VAR_7[VAR_8]; ++VAR_8 )\n    {\n      VAR_0->Debug( VAR_9, \"Attempting to pre-load: %s\", VAR_7[VAR_8] );\n      bool VAR_10 = XrdOucPreload( VAR_7[VAR_8], VAR_6, 1024 );\n      if( !VAR_10 )\n        VAR_0->Error( VAR_9, \"Unable to pre-load %s: %s\", VAR_7[VAR_8], VAR_6 );\n    }\n    delete [] VAR_6;\n#endif\n  }",
  "func_graph_path_before": "xrootd/befa2e627a5a33a38c92db3e57c07d8246a24acf/XrdClDefaultEnv.cc/vul/before/0.json",
  "func": "void DefaultEnv::Initialize()\n  {\n    sLog           = new Log();\n    SetUpLog();\n\n    sEnv           = new DefaultEnv();\n    sForkHandler   = new ForkHandler();\n    sFileTimer     = new FileTimer();\n    sPlugInManager = new PlugInManager();\n\n    sPlugInManager->ProcessEnvironmentSettings();\n    sForkHandler->RegisterFileTimer( sFileTimer );\n\n    //--------------------------------------------------------------------------\n    // MacOSX library loading is completely moronic. We cannot dlopen a library\n    // from a thread other than a main thread, so we-pre dlopen all the\n    // libraries that we may potentially want.\n    //--------------------------------------------------------------------------\n#ifdef __APPLE__\n    char *errBuff = new char[1024];\n\n    const char *libs[] =\n    {\n      \"libXrdSeckrb5.so\",\n      \"libXrdSecgsi.so\",\n      \"libXrdSecgsiAuthzVO.so\",\n      \"libXrdSecgsiGMAPDN.so\",\n      \"libXrdSecpwd.so\",\n      \"libXrdSecsss.so\",\n      \"libXrdSecunix.so\",\n      0\n    };\n\n    for( int i = 0; libs[i]; ++i )\n    {\n      sLog->Debug( UtilityMsg, \"Attempting to pre-load: %s\", libs[i] );\n      bool ok = XrdOucPreload( libs[i], errBuff, 1024 );\n      if( !ok )\n        sLog->Error( UtilityMsg, \"Unable to pre-load %s: %s\", libs[i], errBuff );\n    }\n    delete [] errBuff;\n#endif\n  }",
  "abstract_func": "void DefaultEnv::Initialize()\n  {\n    VAR_0           = new Log();\n    SetUpLog();\n\n    VAR_1           = new DefaultEnv();\n    VAR_2   = new ForkHandler();\n    VAR_3     = new FileTimer();\n    VAR_4 = new PlugInManager();\n\n    VAR_4->ProcessEnvironmentSettings();\n    VAR_2->RegisterFileTimer( VAR_3 );\n\n    /* COMMENT_0 */\n    /* COMMENT_1 */\n    /* COMMENT_2 */\n    /* COMMENT_3 */\n    /* COMMENT_0 */\n#ifdef VAR_5\n    char *VAR_6 = new char[1024];\n\n    const char *VAR_7[] =\n    {\n      \"libXrdSeckrb5.so\",\n      \"libXrdSecgsi.so\",\n      \"libXrdSecgsiAuthzVO.so\",\n      \"libXrdSecgsiGMAPDN.so\",\n      \"libXrdSecpwd.so\",\n      \"libXrdSecsss.so\",\n      \"libXrdSecunix.so\",\n      0\n    };\n\n    for( int VAR_8 = 0; VAR_7[VAR_8]; ++VAR_8 )\n    {\n      VAR_0->Debug( VAR_9, \"Attempting to pre-load: %s\", VAR_7[VAR_8] );\n      bool VAR_10 = XrdOucPreload( VAR_7[VAR_8], VAR_6, 1024 );\n      if( !VAR_10 )\n        VAR_0->Error( VAR_9, \"Unable to pre-load %s: %s\", VAR_7[VAR_8], VAR_6 );\n    }\n    delete [] VAR_6;\n#endif\n  }",
  "func_graph_path": "xrootd/befa2e627a5a33a38c92db3e57c07d8246a24acf/XrdClDefaultEnv.cc/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -25,7 +25,6 @@\n       \"libXrdSecgsi.so\",\n       \"libXrdSecgsiAuthzVO.so\",\n       \"libXrdSecgsiGMAPDN.so\",\n-      \"libXrdSecgsiGMAPLDAP.so\",\n       \"libXrdSecpwd.so\",\n       \"libXrdSecsss.so\",\n       \"libXrdSecunix.so\",",
  "diff_line_info": {
    "deleted_lines": [
      "      \"libXrdSecgsiGMAPLDAP.so\","
    ],
    "added_lines": []
  },
  "is_vul": true,
  "pr_url": "https://github.com/xrootd/xrootd/pull/509",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/xrootd/xrootd/pull/509: 403 Client Error: Forbidden for url: https://api.github.com/repos/xrootd/xrootd/pulls/509",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}