{
  "cve_id": "CVE-2023-3894",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "FasterXML/jackson-dataformats-text",
  "commit_msg": "reorder code",
  "commit_hash": "20a209387931dba31e1a027b74976911c3df39fe",
  "git_url": "https://github.com/FasterXML/jackson-dataformats-text/commit/20a209387931dba31e1a027b74976911c3df39fe",
  "file_path": "toml/src/main/java/com/fasterxml/jackson/dataformat/toml/Parser.java",
  "func_name": "parse",
  "func_before": "public static ObjectNode parse(\n            final TomlFactory tomlFactory,\n            final IOContext ioContext,\n            final Reader reader\n    ) throws IOException {\n        final TomlFactory factory = tomlFactory == null ? new TomlFactory() : tomlFactory;\n        Parser parser = new Parser(factory, ioContext,\n                new TomlStreamReadException.ErrorContext(ioContext.contentReference(), null),\n                factory.getFormatParserFeatures(), reader);\n        try {\n            return parser.parse();\n        } finally {\n            if (factory.isEnabled(TomlReadFeature.VALIDATE_NESTING_DEPTH) && parser.getNestingDepth() > 0) {\n                throw new IOException(\"Nesting Depth is non-zero after parsing TOML\");\n            }\n            parser.lexer.releaseBuffers();\n        }\n    }",
  "abstract_func_before": "public static ObjectNode parse(\n            final TomlFactory VAR_0,\n            final IOContext VAR_1,\n            final Reader VAR_2\n    ) throws IOException {\n        final TomlFactory VAR_3 = VAR_0 == null ? new TomlFactory() : VAR_0;\n        Parser VAR_4 = new Parser(VAR_3, VAR_1,\n                new TomlStreamReadException.ErrorContext(VAR_1.contentReference(), null),\n                VAR_3.getFormatParserFeatures(), VAR_2);\n        try {\n            return VAR_4.parse();\n        } finally {\n            if (VAR_3.isEnabled(VAR_5.VALIDATE_NESTING_DEPTH) && VAR_4.getNestingDepth() > 0) {\n                throw new IOException(\"Nesting Depth is non-zero after parsing TOML\");\n            }\n            VAR_4.lexer.releaseBuffers();\n        }\n    }",
  "func_graph_path_before": "FasterXML/jackson-dataformats-text/20a209387931dba31e1a027b74976911c3df39fe/Parser.java/vul/before/0.json",
  "func": "public static ObjectNode parse(\n            final TomlFactory tomlFactory,\n            final IOContext ioContext,\n            final Reader reader\n    ) throws IOException {\n        final TomlFactory factory = tomlFactory == null ? new TomlFactory() : tomlFactory;\n        Parser parser = new Parser(factory, ioContext,\n                new TomlStreamReadException.ErrorContext(ioContext.contentReference(), null),\n                factory.getFormatParserFeatures(), reader);\n        try {\n            final ObjectNode node = parser.parse();\n            if (factory.isEnabled(TomlReadFeature.VALIDATE_NESTING_DEPTH) && parser.getNestingDepth() > 0) {\n                throw new IOException(\"Nesting Depth is non-zero after parsing TOML\");\n            }\n            return node;\n        } finally {\n            parser.lexer.releaseBuffers();\n        }\n    }",
  "abstract_func": "public static ObjectNode parse(\n            final TomlFactory VAR_0,\n            final IOContext VAR_1,\n            final Reader VAR_2\n    ) throws IOException {\n        final TomlFactory VAR_3 = VAR_0 == null ? new TomlFactory() : VAR_0;\n        Parser VAR_4 = new Parser(VAR_3, VAR_1,\n                new TomlStreamReadException.ErrorContext(VAR_1.contentReference(), null),\n                VAR_3.getFormatParserFeatures(), VAR_2);\n        try {\n            final ObjectNode VAR_5 = VAR_4.parse();\n            if (VAR_3.isEnabled(VAR_6.VALIDATE_NESTING_DEPTH) && VAR_4.getNestingDepth() > 0) {\n                throw new IOException(\"Nesting Depth is non-zero after parsing TOML\");\n            }\n            return VAR_5;\n        } finally {\n            VAR_4.lexer.releaseBuffers();\n        }\n    }",
  "func_graph_path": "FasterXML/jackson-dataformats-text/20a209387931dba31e1a027b74976911c3df39fe/Parser.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -8,11 +8,12 @@\n                 new TomlStreamReadException.ErrorContext(ioContext.contentReference(), null),\n                 factory.getFormatParserFeatures(), reader);\n         try {\n-            return parser.parse();\n-        } finally {\n+            final ObjectNode node = parser.parse();\n             if (factory.isEnabled(TomlReadFeature.VALIDATE_NESTING_DEPTH) && parser.getNestingDepth() > 0) {\n                 throw new IOException(\"Nesting Depth is non-zero after parsing TOML\");\n             }\n+            return node;\n+        } finally {\n             parser.lexer.releaseBuffers();\n         }\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "            return parser.parse();",
      "        } finally {"
    ],
    "added_lines": [
      "            final ObjectNode node = parser.parse();",
      "            return node;",
      "        } finally {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/FasterXML/jackson-dataformats-text/pull/398",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/FasterXML/jackson-dataformats-text/pull/398: 403 Client Error: Forbidden for url: https://api.github.com/repos/FasterXML/jackson-dataformats-text/pulls/398",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades;  \n**Confidence:** 0.9"
}