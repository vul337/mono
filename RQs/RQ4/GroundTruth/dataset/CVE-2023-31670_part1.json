{
  "cve_id": "CVE-2023-31670",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "WebAssembly/wabt",
  "commit_msg": "BinaryReader/BinaryReaderIR: add safety checks for missing end markers",
  "commit_hash": "1b3105a132b925a1d300c2f03b3cd213875ffca8",
  "git_url": "https://github.com/WebAssembly/wabt/commit/1b3105a132b925a1d300c2f03b3cd213875ffca8",
  "file_path": "src/binary-reader.cc",
  "func_name": "BinaryReader::ReadInitExpr",
  "func_before": "Result BinaryReader::ReadInitExpr(Index index) {\n  // Read instructions until END opcode is reached.\n  return ReadInstructions(/*stop_on_end=*/true, read_end_, NULL);\n}",
  "abstract_func_before": "Result BinaryReader::ReadInitExpr(Index VAR_0) {\n  /* COMMENT_0 */\n  return ReadInstructions(/* COMMENT_1 */true, VAR_1, NULL);\n}",
  "func_graph_path_before": "WebAssembly/wabt/1b3105a132b925a1d300c2f03b3cd213875ffca8/binary-reader.cc/vul/before/0.json",
  "func": "Result BinaryReader::ReadInitExpr(Index index) {\n  // Read instructions until END opcode is reached.\n  Opcode final_opcode(Opcode::Invalid);\n  CHECK_RESULT(\n      ReadInstructions(/*stop_on_end=*/true, read_end_, &final_opcode));\n  ERROR_UNLESS(state_.offset <= read_end_,\n               \"init expression longer than given size\");\n  ERROR_UNLESS(final_opcode == Opcode::End,\n               \"init expression must end with END opcode\");\n  return Result::Ok;\n}",
  "abstract_func": "Result BinaryReader::ReadInitExpr(Index VAR_0) {\n  /* COMMENT_0 */\n  Opcode final_opcode(Opcode::Invalid);\n  CHECK_RESULT(\n      ReadInstructions(/* COMMENT_1 */true, VAR_1, &VAR_2));\n  ERROR_UNLESS(VAR_3.offset <= VAR_1,\n               \"init expression longer than given size\");\n  ERROR_UNLESS(VAR_2 == Opcode::End,\n               \"init expression must end with END opcode\");\n  return Result::Ok;\n}",
  "func_graph_path": "WebAssembly/wabt/1b3105a132b925a1d300c2f03b3cd213875ffca8/binary-reader.cc/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,11 @@\n Result BinaryReader::ReadInitExpr(Index index) {\n   // Read instructions until END opcode is reached.\n-  return ReadInstructions(/*stop_on_end=*/true, read_end_, NULL);\n+  Opcode final_opcode(Opcode::Invalid);\n+  CHECK_RESULT(\n+      ReadInstructions(/*stop_on_end=*/true, read_end_, &final_opcode));\n+  ERROR_UNLESS(state_.offset <= read_end_,\n+               \"init expression longer than given size\");\n+  ERROR_UNLESS(final_opcode == Opcode::End,\n+               \"init expression must end with END opcode\");\n+  return Result::Ok;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "  return ReadInstructions(/*stop_on_end=*/true, read_end_, NULL);"
    ],
    "added_lines": [
      "  Opcode final_opcode(Opcode::Invalid);",
      "  CHECK_RESULT(",
      "      ReadInstructions(/*stop_on_end=*/true, read_end_, &final_opcode));",
      "  ERROR_UNLESS(state_.offset <= read_end_,",
      "               \"init expression longer than given size\");",
      "  ERROR_UNLESS(final_opcode == Opcode::End,",
      "               \"init expression must end with END opcode\");",
      "  return Result::Ok;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/WebAssembly/wabt/pull/2218",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/WebAssembly/wabt/pull/2218: 403 Client Error: Forbidden for url: https://api.github.com/repos/WebAssembly/wabt/pulls/2218",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "Final Classification: Defect Remediation & Feature Upgrades; Confidence: 0.8\n\n**Step-by-Step Explanation:**\n\n1. **Input Analysis:** The commit message suggests adding safety checks, which could relate to security but isn't explicitly stated. The vulnerability description details the addition of checks to prevent crashes and mentions a related issue. The code diff modifies BinaryReader::ReadInitExpr by adding checks for proper ending opcodes.\n\n2. **Purpose Evaluation:** The changes fix a bug causing crashes with missing end markers. This is a bug fix rather than a security fix.\n\n3. **Security Assessment:** While it prevents crashes, there's no indication of an external exploit or security breach being fixed. Thus, it's not classified as a security vulnerability fix.\n\n4. **Classification:** The patch falls under defect remediation as it addresses a non-security bug.\n\n5. **Confidence Score:** High confidence because the intent is clear, but the lack of security terms reduces it slightly.\n\n**Final Output:**  \n**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.8"
}