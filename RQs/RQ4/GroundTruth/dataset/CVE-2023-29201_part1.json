{
  "cve_id": "CVE-2023-29201",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "xwiki/xwiki-commons",
  "commit_msg": "XCOMMONS-1680: Filter Html attributes in restricted mode based on a whitelist\n\n* Add a SanitizerFilter that checks namespaces and filters elements\n  based on the HTMLElementSanitizer",
  "commit_hash": "b11eae9d82cb53f32962056b5faa73f3720c6182",
  "git_url": "https://github.com/xwiki/xwiki-commons/commit/b11eae9d82cb53f32962056b5faa73f3720c6182",
  "file_path": "xwiki-commons-core/xwiki-commons-xml/src/main/java/org/xwiki/xml/internal/html/DefaultHTMLCleaner.java",
  "func_name": "getDefaultConfiguration",
  "func_before": "@Override\n    public HTMLCleanerConfiguration getDefaultConfiguration()\n    {\n        HTMLCleanerConfiguration configuration = new DefaultHTMLCleanerConfiguration();\n        configuration.setFilters(Arrays.asList(\n            this.controlFilter,\n            this.bodyFilter,\n            this.listItemFilter,\n            this.listFilter,\n            this.fontFilter,\n            this.attributeFilter,\n            this.linkFilter));\n        return configuration;\n    }",
  "abstract_func_before": "@Override\n    public HTMLCleanerConfiguration getDefaultConfiguration()\n    {\n        HTMLCleanerConfiguration VAR_0 = new DefaultHTMLCleanerConfiguration();\n        VAR_0.setFilters(VAR_1.asList(\n            this.controlFilter,\n            this.bodyFilter,\n            this.listItemFilter,\n            this.listFilter,\n            this.fontFilter,\n            this.attributeFilter,\n            this.linkFilter));\n        return VAR_0;\n    }",
  "func_graph_path_before": "xwiki/xwiki-commons/b11eae9d82cb53f32962056b5faa73f3720c6182/DefaultHTMLCleaner.java/vul/before/0.json",
  "func": "@Override\n    public HTMLCleanerConfiguration getDefaultConfiguration()\n    {\n        HTMLCleanerConfiguration configuration = new DefaultHTMLCleanerConfiguration();\n        configuration.setFilters(Arrays.asList(\n            this.controlFilter,\n            this.bodyFilter,\n            this.listItemFilter,\n            this.listFilter,\n            this.fontFilter,\n            this.attributeFilter,\n            this.linkFilter,\n            this.sanitizerFilter));\n        return configuration;\n    }",
  "abstract_func": "@Override\n    public HTMLCleanerConfiguration getDefaultConfiguration()\n    {\n        HTMLCleanerConfiguration VAR_0 = new DefaultHTMLCleanerConfiguration();\n        VAR_0.setFilters(VAR_1.asList(\n            this.controlFilter,\n            this.bodyFilter,\n            this.listItemFilter,\n            this.listFilter,\n            this.fontFilter,\n            this.attributeFilter,\n            this.linkFilter,\n            this.sanitizerFilter));\n        return VAR_0;\n    }",
  "func_graph_path": "xwiki/xwiki-commons/b11eae9d82cb53f32962056b5faa73f3720c6182/DefaultHTMLCleaner.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -9,6 +9,7 @@\n             this.listFilter,\n             this.fontFilter,\n             this.attributeFilter,\n-            this.linkFilter));\n+            this.linkFilter,\n+            this.sanitizerFilter));\n         return configuration;\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "            this.linkFilter));"
    ],
    "added_lines": [
      "            this.linkFilter,",
      "            this.sanitizerFilter));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/xwiki/xwiki-commons/pull/170",
  "description": {
    "pr_info": {
      "title": "XCOMMONS-2426: Provide a component for filtering safe HTML elements and attributes",
      "number": 170
    },
    "comment": [
      "* Add an interface and three implementations for an HTML element sanitizer.\r\n* Let the default implementation dispatch to the different implementations depending on a configuration.\r\n* Add tests.\r\n\r\nJira issue: https://jira.xwiki.org/browse/XCOMMONS-2426",
      "I've addressed all comments. For my taste this is still lacking a few more tests in particular with the new configuration options but feel free to have a look at the changes already.",
      "I've just pushed a rebase on the current master version and also an extension of the code to also allow SVG and MathML attributes and implemented [XCOMMONS-1680](https://jira.xwiki.org/browse/XCOMMONS-1680) based on this. I'll probably just change whole pull request to be about XCOMMONS-1680 and then just close XCOMMONS-2426 as implemented by XCOMMONS-1680. Further, I've decided to drop the \"permissive\" sanitizer option as I don't think this is maintainable. With the added configuration options, admins should be able to allow whatever attribute or element they need (and if they can't, we can add further options). I would still like to have more tests but I hope the remaining parts are already quite okay. \r\n\r\nI'm wondering if the sanitizer filter should force the secure sanitizer or if not, if it shouldn't check namespaces when the insecure sanitizer is used. Alternatively, we could also move the namespace check into the sanitizer but this is really quite specific to `HTMLCleaner` I think as in other cases you might also already have existing namespace information."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}