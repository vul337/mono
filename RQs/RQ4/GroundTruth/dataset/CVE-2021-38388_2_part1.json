{
  "cve_id": "CVE-2021-38388",
  "cwe_ids": [
    "CWE-862"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "line/centraldogma",
  "commit_msg": "Address the comment by @ikhoon",
  "commit_hash": "e83b558ef9eaa44f71b7d9236bdec9f68c85b8bd",
  "git_url": "https://github.com/line/centraldogma/commit/e83b558ef9eaa44f71b7d9236bdec9f68c85b8bd",
  "file_path": "server/src/main/java/com/linecorp/centraldogma/server/internal/api/ContentServiceV1.java",
  "func_name": "push",
  "func_before": "@Post(\"/projects/{projectName}/repos/{repoName}/contents\")\n    @RequiresWritePermission\n    public CompletableFuture<PushResultDto> push(\n            @Param @Default(\"-1\") String revision,\n            Repository repository,\n            Author author,\n            CommitMessageDto commitMessage,\n            @RequestConverter(ChangesRequestConverter.class) Iterable<Change<?>> changes) {\n        checkMirrorLocalRepo(repository, changes);\n\n        final long commitTimeMillis = System.currentTimeMillis();\n        return push(commitTimeMillis, author, repository, new Revision(revision), commitMessage, changes)\n                .toCompletableFuture()\n                .thenApply(rrev -> convert(rrev, commitTimeMillis));\n    }",
  "abstract_func_before": "@Post(\"/projects/{projectName}/repos/{repoName}/contents\")\n    @RequiresWritePermission\n    public CompletableFuture<PushResultDto> push(\n            @Param @Default(\"-1\") String VAR_0,\n            Repository VAR_1,\n            Author VAR_2,\n            CommitMessageDto VAR_3,\n            @RequestConverter(ChangesRequestConverter.class) Iterable<Change<?>> VAR_4) {\n        checkMirrorLocalRepo(VAR_1, VAR_4);\n\n        final long VAR_5 = VAR_6.currentTimeMillis();\n        return push(VAR_5, VAR_2, VAR_1, new Revision(VAR_0), VAR_3, VAR_4)\n                .toCompletableFuture()\n                .thenApply(VAR_7 -> convert(VAR_7, VAR_5));\n    }",
  "func_graph_path_before": "line/centraldogma/e83b558ef9eaa44f71b7d9236bdec9f68c85b8bd/ContentServiceV1.java/vul/before/1.json",
  "func": "@Post(\"/projects/{projectName}/repos/{repoName}/contents\")\n    @RequiresWritePermission\n    public CompletableFuture<PushResultDto> push(\n            @Param @Default(\"-1\") String revision,\n            Repository repository,\n            Author author,\n            CommitMessageDto commitMessage,\n            @RequestConverter(ChangesRequestConverter.class) Iterable<Change<?>> changes) {\n        checkMirrorLocalRepo(repository.name(), changes);\n\n        final long commitTimeMillis = System.currentTimeMillis();\n        return push(commitTimeMillis, author, repository, new Revision(revision), commitMessage, changes)\n                .toCompletableFuture()\n                .thenApply(rrev -> convert(rrev, commitTimeMillis));\n    }",
  "abstract_func": "@Post(\"/projects/{projectName}/repos/{repoName}/contents\")\n    @RequiresWritePermission\n    public CompletableFuture<PushResultDto> push(\n            @Param @Default(\"-1\") String VAR_0,\n            Repository VAR_1,\n            Author VAR_2,\n            CommitMessageDto VAR_3,\n            @RequestConverter(ChangesRequestConverter.class) Iterable<Change<?>> VAR_4) {\n        checkMirrorLocalRepo(VAR_1.name(), VAR_4);\n\n        final long VAR_5 = VAR_6.currentTimeMillis();\n        return push(VAR_5, VAR_2, VAR_1, new Revision(VAR_0), VAR_3, VAR_4)\n                .toCompletableFuture()\n                .thenApply(VAR_7 -> convert(VAR_7, VAR_5));\n    }",
  "func_graph_path": "line/centraldogma/e83b558ef9eaa44f71b7d9236bdec9f68c85b8bd/ContentServiceV1.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,7 +6,7 @@\n             Author author,\n             CommitMessageDto commitMessage,\n             @RequestConverter(ChangesRequestConverter.class) Iterable<Change<?>> changes) {\n-        checkMirrorLocalRepo(repository, changes);\n+        checkMirrorLocalRepo(repository.name(), changes);\n \n         final long commitTimeMillis = System.currentTimeMillis();\n         return push(commitTimeMillis, author, repository, new Revision(revision), commitMessage, changes)",
  "diff_line_info": {
    "deleted_lines": [
      "        checkMirrorLocalRepo(repository, changes);"
    ],
    "added_lines": [
      "        checkMirrorLocalRepo(repository.name(), changes);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/line/centraldogma/pull/621",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/line/centraldogma/pull/621: 403 Client Error: Forbidden for url: https://api.github.com/repos/line/centraldogma/pulls/621",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9  \n\nThe changes are clearly aimed at preventing a security incident by prohibiting mirroring to internal repositories. The code diff shows a relevant check being added. There's a strong alignment between the description and the code change."
}