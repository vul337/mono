{
  "cve_id": "CVE-2019-3804",
  "cwe_ids": [
    "CWE-909"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "cockpit-project/cockpit",
  "commit_msg": "ws: Fix bug parsing invalid base64 headers\n\nThe len parameter to g_base64_decode_inplace() is a inout\r\nparameter, and needs to be initialized. Lets just use\r\nthe simpler g_base64_decode() function. This fixes a segfault.\r\n\r\nCloses #10819",
  "commit_hash": "c51f6177576d7e12",
  "git_url": "https://github.com/cockpit-project/cockpit/commit/c51f6177576d7e12614c64d316cf0b67addd17c9",
  "file_path": "src/ws/cockpitauth.c",
  "func_name": "base64_decode_string",
  "func_before": "static char *\nbase64_decode_string (const char *enc)\n{\n  if (enc == NULL)\n    return NULL;\n\n  char *dec = g_strdup (enc);\n  gsize len;\n  g_base64_decode_inplace (dec, &len);\n  dec[len] = '\\0';\n  return dec;\n}",
  "abstract_func_before": "static char *\nbase64_decode_string (const char *VAR_0)\n{\n  if (VAR_0 == NULL)\n    return NULL;\n\n  char *VAR_1 = g_strdup (VAR_0);\n  gsize VAR_2;\n  g_base64_decode_inplace (VAR_1, &VAR_2);\n  VAR_1[VAR_2] = '\\0';\n  return VAR_1;\n}",
  "func_graph_path_before": "cockpit-project/cockpit/c51f6177576d7e12/cockpitauth.c/vul/before/0.json",
  "func": "static gchar *\nbase64_decode_string (const char *enc)\n{\n  gchar *dec;\n  gsize len;\n\n  if (enc == NULL)\n    return NULL;\n\n  dec = (gchar *)g_base64_decode (enc, &len);\n  if (dec)\n    dec[len] = '\\0';\n\n  return dec;\n}",
  "abstract_func": "static gchar *\nbase64_decode_string (const char *VAR_0)\n{\n  gchar *VAR_1;\n  gsize VAR_2;\n\n  if (VAR_0 == NULL)\n    return NULL;\n\n  VAR_1 = (gchar *)g_base64_decode (VAR_0, &VAR_2);\n  if (VAR_1)\n    VAR_1[VAR_2] = '\\0';\n\n  return VAR_1;\n}",
  "func_graph_path": "cockpit-project/cockpit/c51f6177576d7e12/cockpitauth.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,12 +1,15 @@\n-static char *\n+static gchar *\n base64_decode_string (const char *enc)\n {\n+  gchar *dec;\n+  gsize len;\n+\n   if (enc == NULL)\n     return NULL;\n \n-  char *dec = g_strdup (enc);\n-  gsize len;\n-  g_base64_decode_inplace (dec, &len);\n-  dec[len] = '\\0';\n+  dec = (gchar *)g_base64_decode (enc, &len);\n+  if (dec)\n+    dec[len] = '\\0';\n+\n   return dec;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "static char *",
      "  char *dec = g_strdup (enc);",
      "  gsize len;",
      "  g_base64_decode_inplace (dec, &len);",
      "  dec[len] = '\\0';"
    ],
    "added_lines": [
      "static gchar *",
      "  gchar *dec;",
      "  gsize len;",
      "",
      "  dec = (gchar *)g_base64_decode (enc, &len);",
      "  if (dec)",
      "    dec[len] = '\\0';",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/cockpit-project/cockpit/pull/10819",
  "description": {
    "pr_info": {
      "title": "ws: Fix bug parsing invalid base64 headers",
      "number": 10819
    },
    "comment": [
      "The len parameter to g_base64_decode_inplace() is a inout\r\nparameter, and needs to be initialized. Lets just use\r\nthe simpler g_base64_decode() function. This fixes a segfault."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "The patch addresses a segfault caused by improper handling of base64 headers. This is a security issue because it can result in a Denial of Service (DoS) if triggered by malicious input.\n\n**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}