{
  "cve_id": "CVE-2023-52284",
  "cwe_ids": [
    "CWE-415"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "bytecodealliance/wasm-micro-runtime",
  "commit_msg": "Fix loader push_pop_frame_ref_offset",
  "commit_hash": "b2e668c08414c421718f73366c6c2222684eb828",
  "git_url": "https://github.com/bytecodealliance/wasm-micro-runtime/commit/b2e668c08414c421718f73366c6c2222684eb828",
  "file_path": "core/iwasm/interpreter/wasm_mini_loader.c",
  "func_name": "wasm_loader_push_pop_frame_ref_offset",
  "func_before": "static bool\nwasm_loader_push_pop_frame_ref_offset(WASMLoaderContext *ctx, uint8 pop_cnt,\n                                      uint8 type_push, uint8 type_pop,\n                                      bool disable_emit, int16 operand_offset,\n                                      char *error_buf, uint32 error_buf_size)\n{\n    if (!wasm_loader_push_pop_frame_offset(ctx, pop_cnt, type_push, type_pop,\n                                           disable_emit, operand_offset,\n                                           error_buf, error_buf_size))\n        return false;\n    if (!wasm_loader_push_pop_frame_ref(ctx, pop_cnt, type_push, type_pop,\n                                        error_buf, error_buf_size))\n        return false;\n\n    return true;\n}",
  "abstract_func_before": "static bool\nwasm_loader_push_pop_frame_ref_offset(WASMLoaderContext *VAR_0, uint8 VAR_1,\n                                      uint8 VAR_2, uint8 VAR_3,\n                                      bool VAR_4, int16 VAR_5,\n                                      char *VAR_6, uint32 VAR_7)\n{\n    if (!wasm_loader_push_pop_frame_offset(VAR_0, VAR_1, VAR_2, VAR_3,\n                                           VAR_4, VAR_5,\n                                           VAR_6, VAR_7))\n        return false;\n    if (!wasm_loader_push_pop_frame_ref(VAR_0, VAR_1, VAR_2, VAR_3,\n                                        VAR_6, VAR_7))\n        return false;\n\n    return true;\n}",
  "func_graph_path_before": "bytecodealliance/wasm-micro-runtime/b2e668c08414c421718f73366c6c2222684eb828/wasm_mini_loader.c/vul/before/0.json",
  "func": "static bool\nwasm_loader_push_pop_frame_ref_offset(WASMLoaderContext *ctx, uint8 pop_cnt,\n                                      uint8 type_push, uint8 type_pop,\n                                      bool disable_emit, int16 operand_offset,\n                                      char *error_buf, uint32 error_buf_size)\n{\n    uint8 i;\n\n    for (i = 0; i < pop_cnt; i++) {\n        if (!wasm_loader_pop_frame_offset(ctx, type_pop, error_buf,\n                                          error_buf_size))\n            return false;\n\n        if (!wasm_loader_pop_frame_ref(ctx, type_pop, error_buf,\n                                       error_buf_size))\n            return false;\n    }\n\n    if (!wasm_loader_push_frame_offset(ctx, type_push, disable_emit,\n                                       operand_offset, error_buf,\n                                       error_buf_size))\n        return false;\n\n    if (!wasm_loader_push_frame_ref(ctx, type_push, error_buf, error_buf_size))\n        return false;\n\n    return true;\n}",
  "abstract_func": "static bool\nwasm_loader_push_pop_frame_ref_offset(WASMLoaderContext *VAR_0, uint8 VAR_1,\n                                      uint8 VAR_2, uint8 VAR_3,\n                                      bool VAR_4, int16 VAR_5,\n                                      char *VAR_6, uint32 VAR_7)\n{\n    uint8 VAR_8;\n\n    for (VAR_8 = 0; VAR_8 < VAR_1; VAR_8++) {\n        if (!wasm_loader_pop_frame_offset(VAR_0, VAR_3, VAR_6,\n                                          VAR_7))\n            return false;\n\n        if (!wasm_loader_pop_frame_ref(VAR_0, VAR_3, VAR_6,\n                                       VAR_7))\n            return false;\n    }\n\n    if (!wasm_loader_push_frame_offset(VAR_0, VAR_2, VAR_4,\n                                       VAR_5, VAR_6,\n                                       VAR_7))\n        return false;\n\n    if (!wasm_loader_push_frame_ref(VAR_0, VAR_2, VAR_6, VAR_7))\n        return false;\n\n    return true;\n}",
  "func_graph_path": "bytecodealliance/wasm-micro-runtime/b2e668c08414c421718f73366c6c2222684eb828/wasm_mini_loader.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,12 +4,24 @@\n                                       bool disable_emit, int16 operand_offset,\n                                       char *error_buf, uint32 error_buf_size)\n {\n-    if (!wasm_loader_push_pop_frame_offset(ctx, pop_cnt, type_push, type_pop,\n-                                           disable_emit, operand_offset,\n-                                           error_buf, error_buf_size))\n+    uint8 i;\n+\n+    for (i = 0; i < pop_cnt; i++) {\n+        if (!wasm_loader_pop_frame_offset(ctx, type_pop, error_buf,\n+                                          error_buf_size))\n+            return false;\n+\n+        if (!wasm_loader_pop_frame_ref(ctx, type_pop, error_buf,\n+                                       error_buf_size))\n+            return false;\n+    }\n+\n+    if (!wasm_loader_push_frame_offset(ctx, type_push, disable_emit,\n+                                       operand_offset, error_buf,\n+                                       error_buf_size))\n         return false;\n-    if (!wasm_loader_push_pop_frame_ref(ctx, pop_cnt, type_push, type_pop,\n-                                        error_buf, error_buf_size))\n+\n+    if (!wasm_loader_push_frame_ref(ctx, type_push, error_buf, error_buf_size))\n         return false;\n \n     return true;",
  "diff_line_info": {
    "deleted_lines": [
      "    if (!wasm_loader_push_pop_frame_offset(ctx, pop_cnt, type_push, type_pop,",
      "                                           disable_emit, operand_offset,",
      "                                           error_buf, error_buf_size))",
      "    if (!wasm_loader_push_pop_frame_ref(ctx, pop_cnt, type_push, type_pop,",
      "                                        error_buf, error_buf_size))"
    ],
    "added_lines": [
      "    uint8 i;",
      "",
      "    for (i = 0; i < pop_cnt; i++) {",
      "        if (!wasm_loader_pop_frame_offset(ctx, type_pop, error_buf,",
      "                                          error_buf_size))",
      "            return false;",
      "",
      "        if (!wasm_loader_pop_frame_ref(ctx, type_pop, error_buf,",
      "                                       error_buf_size))",
      "            return false;",
      "    }",
      "",
      "    if (!wasm_loader_push_frame_offset(ctx, type_push, disable_emit,",
      "                                       operand_offset, error_buf,",
      "                                       error_buf_size))",
      "",
      "    if (!wasm_loader_push_frame_ref(ctx, type_push, error_buf, error_buf_size))"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/bytecodealliance/wasm-micro-runtime/pull/2590",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/bytecodealliance/wasm-micro-runtime/pull/2590: 403 Client Error: Forbidden for url: https://api.github.com/repos/bytecodealliance/wasm-micro-runtime/pulls/2590",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "The patch addresses a situation where the stack offset could underflow, which is a security issue. The changes correct the stack operations to prevent such underflows.\n\n**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9"
}