{
  "cve_id": "CVE-2014-4172",
  "cwe_ids": [
    "CWE-74"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "apereo/java-cas-client",
  "commit_msg": "CASC-228 URL Encode Paramaters Passed to Server via Validate\n\nProblem: We currently don't pass encoded values to the server, possibly resolving in parsing/extraction errors.\nSolution: URL Encode all values instead of just the service url.\n\nQA Notes: Added unit test.",
  "commit_hash": "ae37092100c8eaec610dab6d83e5e05a8ee58814",
  "git_url": "https://github.com/apereo/java-cas-client/commit/ae37092100c8eaec610dab6d83e5e05a8ee58814",
  "file_path": "cas-client-core/src/main/java/org/jasig/cas/client/validation/AbstractUrlBasedTicketValidator.java",
  "func_name": "constructValidationUrl",
  "func_before": "protected final String constructValidationUrl(final String ticket, final String serviceUrl) {\n        final Map<String, String> urlParameters = new HashMap<String, String>();\n\n        logger.debug(\"Placing URL parameters in map.\");\n        urlParameters.put(\"ticket\", ticket);\n        urlParameters.put(\"service\", encodeUrl(serviceUrl));\n\n        if (this.renew) {\n            urlParameters.put(\"renew\", \"true\");\n        }\n\n        logger.debug(\"Calling template URL attribute map.\");\n        populateUrlAttributeMap(urlParameters);\n\n        logger.debug(\"Loading custom parameters from configuration.\");\n        if (this.customParameters != null) {\n            urlParameters.putAll(this.customParameters);\n        }\n\n        final String suffix = getUrlSuffix();\n        final StringBuilder buffer = new StringBuilder(urlParameters.size() * 10 + this.casServerUrlPrefix.length()\n                + suffix.length() + 1);\n\n        int i = 0;\n\n        buffer.append(this.casServerUrlPrefix);\n        if (!this.casServerUrlPrefix.endsWith(\"/\")) {\n            buffer.append(\"/\");\n        }\n        buffer.append(suffix);\n\n        for (Map.Entry<String, String> entry : urlParameters.entrySet()) {\n            final String key = entry.getKey();\n            final String value = entry.getValue();\n\n            if (value != null) {\n                buffer.append(i++ == 0 ? \"?\" : \"&\");\n                buffer.append(key);\n                buffer.append(\"=\");\n                buffer.append(value);\n            }\n        }\n\n        return buffer.toString();\n\n    }",
  "abstract_func_before": "protected final String constructValidationUrl(final String VAR_0, final String VAR_1) {\n        final Map<String, String> VAR_2 = new HashMap<String, String>();\n\n        VAR_3.debug(\"Placing URL parameters in map.\");\n        VAR_2.put(\"ticket\", VAR_0);\n        VAR_2.put(\"service\", encodeUrl(VAR_1));\n\n        if (this.renew) {\n            VAR_2.put(\"renew\", \"true\");\n        }\n\n        VAR_3.debug(\"Calling template URL attribute map.\");\n        populateUrlAttributeMap(VAR_2);\n\n        VAR_3.debug(\"Loading custom parameters from configuration.\");\n        if (this.customParameters != null) {\n            VAR_2.putAll(this.customParameters);\n        }\n\n        final String VAR_4 = getUrlSuffix();\n        final StringBuilder VAR_5 = new StringBuilder(VAR_2.size() * 10 + this.casServerUrlPrefix.length()\n                + VAR_4.length() + 1);\n\n        int VAR_6 = 0;\n\n        VAR_5.append(this.casServerUrlPrefix);\n        if (!this.casServerUrlPrefix.endsWith(\"/\")) {\n            VAR_5.append(\"/\");\n        }\n        VAR_5.append(VAR_4);\n\n        for (Map.Entry<String, String> VAR_7 : VAR_2.entrySet()) {\n            final String VAR_8 = VAR_7.getKey();\n            final String VAR_9 = VAR_7.getValue();\n\n            if (VAR_9 != null) {\n                VAR_5.append(VAR_6++ == 0 ? \"?\" : \"&\");\n                VAR_5.append(VAR_8);\n                VAR_5.append(\"=\");\n                VAR_5.append(VAR_9);\n            }\n        }\n\n        return VAR_5.toString();\n\n    }",
  "func_graph_path_before": "apereo/java-cas-client/ae37092100c8eaec610dab6d83e5e05a8ee58814/AbstractUrlBasedTicketValidator.java/vul/before/0.json",
  "func": "protected final String constructValidationUrl(final String ticket, final String serviceUrl) {\n        final Map<String, String> urlParameters = new HashMap<String, String>();\n\n        logger.debug(\"Placing URL parameters in map.\");\n        urlParameters.put(\"ticket\", ticket);\n        urlParameters.put(\"service\", serviceUrl);\n\n        if (this.renew) {\n            urlParameters.put(\"renew\", \"true\");\n        }\n\n        logger.debug(\"Calling template URL attribute map.\");\n        populateUrlAttributeMap(urlParameters);\n\n        logger.debug(\"Loading custom parameters from configuration.\");\n        if (this.customParameters != null) {\n            urlParameters.putAll(this.customParameters);\n        }\n\n        final String suffix = getUrlSuffix();\n        final StringBuilder buffer = new StringBuilder(urlParameters.size() * 10 + this.casServerUrlPrefix.length()\n                + suffix.length() + 1);\n\n        int i = 0;\n\n        buffer.append(this.casServerUrlPrefix);\n        if (!this.casServerUrlPrefix.endsWith(\"/\")) {\n            buffer.append(\"/\");\n        }\n        buffer.append(suffix);\n\n        for (Map.Entry<String, String> entry : urlParameters.entrySet()) {\n            final String key = entry.getKey();\n            final String value = entry.getValue();\n\n            if (value != null) {\n                buffer.append(i++ == 0 ? \"?\" : \"&\");\n                buffer.append(key);\n                buffer.append(\"=\");\n                final String encodedValue = encodeUrl(value);\n                buffer.append(encodedValue);\n            }\n        }\n\n        return buffer.toString();\n\n    }",
  "abstract_func": "protected final String constructValidationUrl(final String VAR_0, final String VAR_1) {\n        final Map<String, String> VAR_2 = new HashMap<String, String>();\n\n        VAR_3.debug(\"Placing URL parameters in map.\");\n        VAR_2.put(\"ticket\", VAR_0);\n        VAR_2.put(\"service\", VAR_1);\n\n        if (this.renew) {\n            VAR_2.put(\"renew\", \"true\");\n        }\n\n        VAR_3.debug(\"Calling template URL attribute map.\");\n        populateUrlAttributeMap(VAR_2);\n\n        VAR_3.debug(\"Loading custom parameters from configuration.\");\n        if (this.customParameters != null) {\n            VAR_2.putAll(this.customParameters);\n        }\n\n        final String VAR_4 = getUrlSuffix();\n        final StringBuilder VAR_5 = new StringBuilder(VAR_2.size() * 10 + this.casServerUrlPrefix.length()\n                + VAR_4.length() + 1);\n\n        int VAR_6 = 0;\n\n        VAR_5.append(this.casServerUrlPrefix);\n        if (!this.casServerUrlPrefix.endsWith(\"/\")) {\n            VAR_5.append(\"/\");\n        }\n        VAR_5.append(VAR_4);\n\n        for (Map.Entry<String, String> VAR_7 : VAR_2.entrySet()) {\n            final String VAR_8 = VAR_7.getKey();\n            final String VAR_9 = VAR_7.getValue();\n\n            if (VAR_9 != null) {\n                VAR_5.append(VAR_6++ == 0 ? \"?\" : \"&\");\n                VAR_5.append(VAR_8);\n                VAR_5.append(\"=\");\n                final String VAR_10 = encodeUrl(VAR_9);\n                VAR_5.append(VAR_10);\n            }\n        }\n\n        return VAR_5.toString();\n\n    }",
  "func_graph_path": "apereo/java-cas-client/ae37092100c8eaec610dab6d83e5e05a8ee58814/AbstractUrlBasedTicketValidator.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,7 +3,7 @@\n \n         logger.debug(\"Placing URL parameters in map.\");\n         urlParameters.put(\"ticket\", ticket);\n-        urlParameters.put(\"service\", encodeUrl(serviceUrl));\n+        urlParameters.put(\"service\", serviceUrl);\n \n         if (this.renew) {\n             urlParameters.put(\"renew\", \"true\");\n@@ -37,7 +37,8 @@\n                 buffer.append(i++ == 0 ? \"?\" : \"&\");\n                 buffer.append(key);\n                 buffer.append(\"=\");\n-                buffer.append(value);\n+                final String encodedValue = encodeUrl(value);\n+                buffer.append(encodedValue);\n             }\n         }\n ",
  "diff_line_info": {
    "deleted_lines": [
      "        urlParameters.put(\"service\", encodeUrl(serviceUrl));",
      "                buffer.append(value);"
    ],
    "added_lines": [
      "        urlParameters.put(\"service\", serviceUrl);",
      "                final String encodedValue = encodeUrl(value);",
      "                buffer.append(encodedValue);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/apereo/java-cas-client/pull/73",
  "description": {
    "pr_info": {
      "title": "CASC-228 URL Encode Paramaters Passed to Server via Validate",
      "number": 73
    },
    "comment": [
      "Problem: We currently don't pass encoded values to the server, possibly resulting in parsing/extraction errors.\nSolution: URL Encode all values instead of just the service url.\n\nQA Notes: Added unit test.\n",
      ":+1: \n",
      "+1\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.95  \n\nThe patch addresses a functional issue by ensuring proper URL encoding of parameters, preventing server-side parsing errors. The change is consistent with the commit message and includes unit tests, confirming it's a defect fix rather than a security vulnerability."
}