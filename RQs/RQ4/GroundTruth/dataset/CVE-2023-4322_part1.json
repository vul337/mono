{
  "cve_id": "CVE-2023-4322",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix 1byte heap oobread in the brainfuck disassembler\n\n* https://huntr.dev/bounties/06e2484c-d6f1-4497-af67-26549be9fffd/\n* Kudos to @7resp4ss for reporting",
  "commit_hash": "ba919adb74ac368bf76b150a00347ded78b572dd",
  "git_url": "https://github.com/radareorg/radare2/commit/ba919adb74ac368bf76b150a00347ded78b572dd",
  "file_path": "libr/arch/p/bf/plugin.c",
  "func_name": "getid",
  "func_before": "static int getid(char ch) {\n\tconst char *keys = \"[]<>+-,.\";\n\tconst char *cidx = strchr (keys, ch);\n\treturn cidx? cidx - keys + 1: 0;\n}",
  "abstract_func_before": "static int getid(char VAR_0) {\n\tconst char *VAR_1 = \"[]<>+-,.\";\n\tconst char *VAR_2 = strchr (VAR_1, VAR_0);\n\treturn VAR_2? VAR_2 - VAR_1 + 1: 0;\n}",
  "func_graph_path_before": "radareorg/radare2/ba919adb74ac368bf76b150a00347ded78b572dd/plugin.c/vul/before/0.json",
  "func": "static int getid(char ch) {\n\tconst char *const keys = \"[]<>+-,.\";\n\tconst char *const cidx = strchr (keys, ch);\n\treturn cidx? cidx - keys + 1: 0;\n}",
  "abstract_func": "static int getid(char VAR_0) {\n\tconst char *const VAR_1 = \"[]<>+-,.\";\n\tconst char *const VAR_2 = strchr (VAR_1, VAR_0);\n\treturn VAR_2? VAR_2 - VAR_1 + 1: 0;\n}",
  "func_graph_path": "radareorg/radare2/ba919adb74ac368bf76b150a00347ded78b572dd/plugin.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,5 @@\n static int getid(char ch) {\n-\tconst char *keys = \"[]<>+-,.\";\n-\tconst char *cidx = strchr (keys, ch);\n+\tconst char *const keys = \"[]<>+-,.\";\n+\tconst char *const cidx = strchr (keys, ch);\n \treturn cidx? cidx - keys + 1: 0;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\tconst char *keys = \"[]<>+-,.\";",
      "\tconst char *cidx = strchr (keys, ch);"
    ],
    "added_lines": [
      "\tconst char *const keys = \"[]<>+-,.\";",
      "\tconst char *const cidx = strchr (keys, ch);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/22154",
  "description": {
    "pr_info": {
      "title": "Fix 1byte heap oobread in the brainfuck disassembler",
      "number": 22154
    },
    "comment": [
      "* https://huntr.dev/bounties/06e2484c-d6f1-4497-af67-26549be9fffd/\r\n* Kudos to @7resp4ss for reporting\r\n\r\n<!--\r\nRead https://github.com/radareorg/radare2/blob/master/DEVELOPERS.md\r\n* PR title must be capitalized, concise and use ##tags\r\n* If the PR is fixing a ticket use 'Fix #1234 - ..' in the commit message\r\n* Follow the coding style, add tests and documentation if necessary\r\n-->\r\n\r\n- [ ] Mark this if you consider it ready to merge\r\n- [ ] I've added tests (optional)\r\n- [ ] I wrote some lines in the [book](https://github.com/radareorg/radare2book) (optional)\r\n\r\n**Description**\r\n\r\n<!-- explain your changes if necessary -->\r\n\r\n**Copilot**\r\n\r\n<!--\r\ncopilot:all\r\n-->\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "The commit addresses a heap out-of-bounds read vulnerability in the brainfuck disassembler, shown by the commit message and linked security bounty. Although the code change is minor, the context indicates it's part of a security fix.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}