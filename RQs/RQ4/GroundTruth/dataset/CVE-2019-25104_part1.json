{
  "cve_id": "CVE-2019-25104",
  "cwe_ids": [
    "CWE-404"
  ],
  "cvss_vector": "AV:A/AC:L/Au:S/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "rtcwcoop",
  "commit_msg": "fixed exploit where server crash by spamming team command\n\n********************\nERROR: G_Alloc: failed on allocation of 27248 bytes\n********************\n----- Server Shutdown (Server crashed: G_Alloc: failed on allocation of 27248 bytes) -----\n\nreplaced G_Alloc -> trap_Alloc\n\nanyway POOLSIZE for G_Alloc will fill up quickly just changing team in game menu",
  "commit_hash": "f2cd18bc2e1cbca8c4b78bee9c392272bd5f42ac",
  "git_url": "https://github.com/rtcwcoop/rtcwcoop/commit/f2cd18bc2e1cbca8c4b78bee9c392272bd5f42ac",
  "file_path": "code/game/ai_cast_script.c",
  "func_name": "AICast_ScriptParse",
  "func_before": "void AICast_ScriptParse( cast_state_t *cs ) {\n\tgentity_t   *ent;\n\tchar        *pScript;\n\tchar        *token;\n\tqboolean wantName;\n\tqboolean inScript;\n\tint eventNum;\n\tint numEventItems;\n\tcast_script_event_t *curEvent;\n\tchar params[MAX_QPATH];\n\tcast_script_stack_action_t  *action;\n\tint i;\n\tint bracketLevel;\n\tqboolean buildScript;       //----(SA)\tadded\n\n\tif ( !level.scriptAI ) {\n\t\treturn;\n\t}\n\n\tent = &g_entities[cs->entityNum];\n\tif ( !ent->aiName ) {\n\t\treturn;\n\t}\n\n\tbuildScript = qtrue;\n\n\tpScript = level.scriptAI;\n\twantName = qtrue;\n\tinScript = qfalse;\n\tCOM_BeginParseSession( \"AICast_ScriptParse\" );\n\tbracketLevel = 0;\n\tnumEventItems = 0;\n\n\tmemset( cast_temp_events, 0, sizeof( cast_temp_events ) );\n\n\twhile ( 1 )\n\t{\n\t\ttoken = COM_Parse( &pScript );\n\n\t\tif ( !token[0] ) {\n\t\t\tif ( !wantName ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t// end of script\n\t\tif ( token[0] == '}' ) {\n\t\t\tif ( inScript ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( wantName ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' found, but not expected.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t\twantName = qtrue;\n\t\t} else if ( token[0] == '{' )    {\n\t\t\tif ( wantName ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '{' found, NAME expected.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t} else if ( wantName )   {\n\t\t\tif ( !Q_strcasecmp( ent->aiName, token ) ) {\n\t\t\t\tinScript = qtrue;\n\t\t\t\tnumEventItems = 0;\n\t\t\t}\n\t\t\twantName = qfalse;\n\t\t} else if ( inScript )   {\n\t\t\tif ( !Q_strcasecmp( token, \"attributes\" ) ) {\n\t\t\t\t// read in all the attributes\n\t\t\t\tAICast_CheckLevelAttributes( cs, ent, &pScript );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\teventNum = AICast_EventForString( token );\n\t\t\tif ( eventNum < 0 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown event: %s.\\n\", COM_GetCurrentParseLine(), token );\n\t\t\t}\n\t\t\tif ( numEventItems >= MAX_SCRIPT_EVENTS ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): MAX_SCRIPT_EVENTS reached (%d)\\n\", COM_GetCurrentParseLine(), MAX_SCRIPT_EVENTS );\n\t\t\t}\n\n\t\t\t// if this is a \"friendlysightcorpse\" event, then disable corpse vis sharing\n\t\t\tif ( !Q_stricmp( token, \"friendlysightcorpse\" ) ) {\n\t\t\t\tcs->aiFlags &= ~AIFL_CORPSESIGHTING;\n\t\t\t}\n\n\t\t\tcurEvent = &cast_temp_events[numEventItems];\n\t\t\tcurEvent->eventNum = eventNum;\n\t\t\tmemset( params, 0, sizeof( params ) );\n\n\t\t\t// parse any event params before the start of this event's actions\n\t\t\twhile ( ( token = COM_Parse( &pScript ) ) && ( token[0] != '{' ) )\n\t\t\t{\n\t\t\t\tif ( !token[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t}\n\n\t\t\t\tif ( eventNum == 13 ) {   // statechange event, check params\n\t\t\t\t\tif ( strlen( token ) > 1 ) {\n\t\t\t\t\t\tif ( BG_IndexForString( token, animStateStr, qtrue ) < 0 ) {\n\t\t\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown state type '%s'.\\n\", COM_GetCurrentParseLine(), token );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( strlen( params ) ) { // add a space between each param\n\t\t\t\t\tQ_strcat( params, sizeof( params ), \" \" );\n\t\t\t\t}\n\t\t\t\tQ_strcat( params, sizeof( params ), token );\n\t\t\t}\n\n\t\t\tif ( strlen( params ) ) { // copy the params into the event\n\t\t\t\tcurEvent->params = G_Alloc( strlen( params ) + 1 );\n\t\t\t\tQ_strncpyz( curEvent->params, params, strlen( params ) + 1 );\n\t\t\t}\n\n\t\t\t// parse the actions for this event\n\t\t\twhile ( ( token = COM_Parse( &pScript ) ) && ( token[0] != '}' ) )\n\t\t\t{\n\t\t\t\tif ( !token[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t}\n\n\t\t\t\taction = AICast_ActionForString( cs, token );\n\t\t\t\tif ( !action ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown action: %s.\\n\", COM_GetCurrentParseLine(), token );\n\t\t\t\t}\n\n\t\t\t\tcurEvent->stack.items[curEvent->stack.numItems].action = action;\n\n\t\t\t\tmemset( params, 0, sizeof( params ) );\n\t\t\t\ttoken = COM_ParseExt( &pScript, qfalse );\n\t\t\t\tfor ( i = 0; token[0]; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( strlen( params ) ) { // add a space between each param\n\t\t\t\t\t\tQ_strcat( params, sizeof( params ), \" \" );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( i == 0 ) {\n\t\t\t\t\t\t// Special case: playsound's need to be cached on startup to prevent in-game pauses\n\t\t\t\t\t\tif ( !Q_stricmp( action->actionString, \"playsound\" ) ) {\n\t\t\t\t\t\t\tG_SoundIndex( token );\n\t\t\t\t\t\t}\n\n//----(SA)\tadded a bit more\n\t\t\t\t\t\tif (    buildScript && (\n\t\t\t\t\t\t\t\t\t!Q_stricmp( action->actionString, \"mu_start\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( action->actionString, \"mu_play\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( action->actionString, \"mu_queue\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( action->actionString, \"startcam\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( action->actionString, \"startcamblack\" ) )\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif ( strlen( token ) ) { // we know there's a [0], but don't know if it's '0'\n\t\t\t\t\t\t\t\ttrap_SendServerCommand( cs->entityNum, va( \"addToBuild %s\\n\", token ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( !Q_stricmp( action->actionString, \"giveweapon\" ) ) { // register weapon for client pre-loading\n\t\t\t\t\t\t\tgitem_t *weap = BG_FindItem2( token );    // (SA) FIXME: rats, need to fix this for weapon names with spaces: 'mauser rifle'\n//\t\t\t\t\t\t\tif(weap)\n\t\t\t\t\t\t\tRegisterItem( weap );   // don't be nice, just do it.  if it can't find it, you'll bomb out to the error menu\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// need to get this for callvote nextmap\n\t\t\t\t\t\tif ( !Q_stricmp( action->actionString, \"changelevel\" ) ) {\n\t\t\t\t\t\t\tQ_strncpyz( level.nextMap, token, sizeof( level.nextMap ) );\n\t\t\t\t\t\t\ttrap_Cvar_Set( \"nextmap\", level.nextMap );\n\t\t\t\t\t\t}\n//----(SA)\tend\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( strrchr( token,' ' ) ) { // need to wrap this param in quotes since it has more than one word\n\t\t\t\t\t\tQ_strcat( params, sizeof( params ), \"\\\"\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tQ_strcat( params, sizeof( params ), token );\n\n\t\t\t\t\tif ( strrchr( token,' ' ) ) { // need to wrap this param in quotes since it has more than one word\n\t\t\t\t\t\tQ_strcat( params, sizeof( params ), \"\\\"\" );\n\t\t\t\t\t}\n\n\t\t\t\t\ttoken = COM_ParseExt( &pScript, qfalse );\n\t\t\t\t}\n\n\t\t\t\tif ( strlen( params ) ) { // copy the params into the event\n\t\t\t\t\tcurEvent->stack.items[curEvent->stack.numItems].params = G_Alloc( strlen( params ) + 1 );\n\t\t\t\t\tQ_strncpyz( curEvent->stack.items[curEvent->stack.numItems].params, params, strlen( params ) + 1 );\n\t\t\t\t}\n\n\t\t\t\tcurEvent->stack.numItems++;\n\n\t\t\t\tif ( curEvent->stack.numItems >= AICAST_MAX_SCRIPT_STACK_ITEMS ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(): script exceeded MAX_SCRIPT_ITEMS (%d), line %d\\n\", AICAST_MAX_SCRIPT_STACK_ITEMS, COM_GetCurrentParseLine() );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnumEventItems++;\n\t\t} else    // skip this character completely\n\t\t{\n\n\t\t\twhile ( ( token = COM_Parse( &pScript ) ) )\n\t\t\t{\n\t\t\t\tif ( !token[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t} else if ( token[0] == '{' ) {\n\t\t\t\t\tbracketLevel++;\n\t\t\t\t} else if ( token[0] == '}' ) {\n\t\t\t\t\tif ( !--bracketLevel ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// alloc and copy the events into the cast_state_t for this cast\n\tif ( numEventItems > 0 ) {\n\t\tcs->castScriptEvents = G_Alloc( sizeof( cast_script_event_t ) * numEventItems );\n\t\tmemcpy( cs->castScriptEvents, cast_temp_events, sizeof( cast_script_event_t ) * numEventItems );\n\t\tcs->numCastScriptEvents = numEventItems;\n\n\t\tcs->castScriptStatus.castScriptEventIndex = -1;\n\t}\n}",
  "abstract_func_before": "void AICast_ScriptParse( cast_state_t *VAR_0 ) {\n\tgentity_t   *VAR_1;\n\tchar        *VAR_2;\n\tchar        *VAR_3;\n\tqboolean VAR_4;\n\tqboolean VAR_5;\n\tint VAR_6;\n\tint VAR_7;\n\tcast_script_event_t *VAR_8;\n\tchar VAR_9[VAR_10];\n\tcast_script_stack_action_t  *VAR_11;\n\tint VAR_12;\n\tint VAR_13;\n\tqboolean VAR_14;       /* COMMENT_0 */\n\n\tif ( !VAR_15.scriptAI ) {\n\t\treturn;\n\t}\n\n\tVAR_1 = &VAR_16[VAR_0->entityNum];\n\tif ( !VAR_1->aiName ) {\n\t\treturn;\n\t}\n\n\tVAR_14 = VAR_17;\n\n\tVAR_2 = VAR_15.scriptAI;\n\tVAR_4 = VAR_17;\n\tVAR_5 = VAR_18;\n\tCOM_BeginParseSession( \"AICast_ScriptParse\" );\n\tVAR_13 = 0;\n\tVAR_7 = 0;\n\n\tmemset( VAR_19, 0, sizeof( VAR_19 ) );\n\n\twhile ( 1 )\n\t{\n\t\tVAR_3 = COM_Parse( &VAR_2 );\n\n\t\tif ( !VAR_3[0] ) {\n\t\t\tif ( !VAR_4 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t/* COMMENT_1 */\n\t\tif ( VAR_3[0] == '}' ) {\n\t\t\tif ( VAR_5 ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( VAR_4 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' found, but not expected.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t\tVAR_4 = VAR_17;\n\t\t} else if ( VAR_3[0] == '{' )    {\n\t\t\tif ( VAR_4 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '{' found, NAME expected.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t} else if ( VAR_4 )   {\n\t\t\tif ( !Q_strcasecmp( VAR_1->aiName, VAR_3 ) ) {\n\t\t\t\tVAR_5 = VAR_17;\n\t\t\t\tVAR_7 = 0;\n\t\t\t}\n\t\t\tVAR_4 = VAR_18;\n\t\t} else if ( VAR_5 )   {\n\t\t\tif ( !Q_strcasecmp( VAR_3, \"attributes\" ) ) {\n\t\t\t\t/* COMMENT_2 */\n\t\t\t\tAICast_CheckLevelAttributes( VAR_0, VAR_1, &VAR_2 );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tVAR_6 = AICast_EventForString( VAR_3 );\n\t\t\tif ( VAR_6 < 0 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown event: %s.\\n\", COM_GetCurrentParseLine(), VAR_3 );\n\t\t\t}\n\t\t\tif ( VAR_7 >= VAR_20 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): MAX_SCRIPT_EVENTS reached (%d)\\n\", COM_GetCurrentParseLine(), VAR_20 );\n\t\t\t}\n\n\t\t\t/* COMMENT_3 */\n\t\t\tif ( !Q_stricmp( VAR_3, \"friendlysightcorpse\" ) ) {\n\t\t\t\tVAR_0->aiFlags &= ~VAR_21;\n\t\t\t}\n\n\t\t\tVAR_8 = &VAR_19[VAR_7];\n\t\t\tVAR_8->eventNum = VAR_6;\n\t\t\tmemset( VAR_9, 0, sizeof( VAR_9 ) );\n\n\t\t\t/* COMMENT_4 */\n\t\t\twhile ( ( VAR_3 = COM_Parse( &VAR_2 ) ) && ( VAR_3[0] != '{' ) )\n\t\t\t{\n\t\t\t\tif ( !VAR_3[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t}\n\n\t\t\t\tif ( VAR_6 == 13 ) {   /* COMMENT_5 */\n\t\t\t\t\tif ( strlen( VAR_3 ) > 1 ) {\n\t\t\t\t\t\tif ( BG_IndexForString( VAR_3, VAR_22, VAR_17 ) < 0 ) {\n\t\t\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown state type '%s'.\\n\", COM_GetCurrentParseLine(), VAR_3 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( strlen( VAR_9 ) ) { /* COMMENT_6 */\n\t\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), \" \" );\n\t\t\t\t}\n\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), VAR_3 );\n\t\t\t}\n\n\t\t\tif ( strlen( VAR_9 ) ) { /* COMMENT_7 */\n\t\t\t\tVAR_8->params = G_Alloc( strlen( VAR_9 ) + 1 );\n\t\t\t\tQ_strncpyz( VAR_8->params, VAR_9, strlen( VAR_9 ) + 1 );\n\t\t\t}\n\n\t\t\t/* COMMENT_8 */\n\t\t\twhile ( ( VAR_3 = COM_Parse( &VAR_2 ) ) && ( VAR_3[0] != '}' ) )\n\t\t\t{\n\t\t\t\tif ( !VAR_3[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t}\n\n\t\t\t\tVAR_11 = AICast_ActionForString( VAR_0, VAR_3 );\n\t\t\t\tif ( !VAR_11 ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown action: %s.\\n\", COM_GetCurrentParseLine(), VAR_3 );\n\t\t\t\t}\n\n\t\t\t\tVAR_8->stack.items[VAR_8->stack.numItems].action = VAR_11;\n\n\t\t\t\tmemset( VAR_9, 0, sizeof( VAR_9 ) );\n\t\t\t\tVAR_3 = COM_ParseExt( &VAR_2, VAR_18 );\n\t\t\t\tfor ( VAR_12 = 0; VAR_3[0]; VAR_12++ )\n\t\t\t\t{\n\t\t\t\t\tif ( strlen( VAR_9 ) ) { /* COMMENT_6 */\n\t\t\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), \" \" );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( VAR_12 == 0 ) {\n\t\t\t\t\t\t/* COMMENT_9 */\n\t\t\t\t\t\tif ( !Q_stricmp( VAR_11->actionString, \"playsound\" ) ) {\n\t\t\t\t\t\t\tG_SoundIndex( VAR_3 );\n\t\t\t\t\t\t}\n\n/* COMMENT_10 */\n\t\t\t\t\t\tif (    VAR_14 && (\n\t\t\t\t\t\t\t\t\t!Q_stricmp( VAR_11->actionString, \"mu_start\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( VAR_11->actionString, \"mu_play\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( VAR_11->actionString, \"mu_queue\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( VAR_11->actionString, \"startcam\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( VAR_11->actionString, \"startcamblack\" ) )\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif ( strlen( VAR_3 ) ) { /* COMMENT_11 */\n\t\t\t\t\t\t\t\ttrap_SendServerCommand( VAR_0->entityNum, va( \"addToBuild %s\\n\", VAR_3 ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( !Q_stricmp( VAR_11->actionString, \"giveweapon\" ) ) { /* COMMENT_12 */\n\t\t\t\t\t\t\tgitem_t *VAR_23 = BG_FindItem2( VAR_3 );    /* COMMENT_13 */\n/* COMMENT_14 */\n\t\t\t\t\t\t\tRegisterItem( VAR_23 );   /* COMMENT_15 */\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* COMMENT_16 */\n\t\t\t\t\t\tif ( !Q_stricmp( VAR_11->actionString, \"changelevel\" ) ) {\n\t\t\t\t\t\t\tQ_strncpyz( VAR_15.nextMap, VAR_3, sizeof( VAR_15.nextMap ) );\n\t\t\t\t\t\t\ttrap_Cvar_Set( \"nextmap\", VAR_15.nextMap );\n\t\t\t\t\t\t}\n/* COMMENT_17 */\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( strrchr( VAR_3,' ' ) ) { /* COMMENT_18 */\n\t\t\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), \"\\\"\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), VAR_3 );\n\n\t\t\t\t\tif ( strrchr( VAR_3,' ' ) ) { /* COMMENT_18 */\n\t\t\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), \"\\\"\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tVAR_3 = COM_ParseExt( &VAR_2, VAR_18 );\n\t\t\t\t}\n\n\t\t\t\tif ( strlen( VAR_9 ) ) { /* COMMENT_7 */\n\t\t\t\t\tVAR_8->stack.items[VAR_8->stack.numItems].params = G_Alloc( strlen( VAR_9 ) + 1 );\n\t\t\t\t\tQ_strncpyz( VAR_8->stack.items[VAR_8->stack.numItems].params, VAR_9, strlen( VAR_9 ) + 1 );\n\t\t\t\t}\n\n\t\t\t\tVAR_8->stack.numItems++;\n\n\t\t\t\tif ( VAR_8->stack.numItems >= VAR_24 ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(): script exceeded MAX_SCRIPT_ITEMS (%d), line %d\\n\", VAR_24, COM_GetCurrentParseLine() );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tVAR_7++;\n\t\t} else    /* COMMENT_19 */\n\t\t{\n\n\t\t\twhile ( ( VAR_3 = COM_Parse( &VAR_2 ) ) )\n\t\t\t{\n\t\t\t\tif ( !VAR_3[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t} else if ( VAR_3[0] == '{' ) {\n\t\t\t\t\tVAR_13++;\n\t\t\t\t} else if ( VAR_3[0] == '}' ) {\n\t\t\t\t\tif ( !--VAR_13 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/* COMMENT_20 */\n\tif ( VAR_7 > 0 ) {\n\t\tVAR_0->castScriptEvents = G_Alloc( sizeof( cast_script_event_t ) * VAR_7 );\n\t\tmemcpy( VAR_0->castScriptEvents, VAR_19, sizeof( cast_script_event_t ) * VAR_7 );\n\t\tVAR_0->numCastScriptEvents = VAR_7;\n\n\t\tVAR_0->castScriptStatus.castScriptEventIndex = -1;\n\t}\n}",
  "func_graph_path_before": "rtcwcoop/f2cd18bc2e1cbca8c4b78bee9c392272bd5f42ac/ai_cast_script.c/vul/before/0.json",
  "func": "void AICast_ScriptParse( cast_state_t *cs ) {\n\tgentity_t   *ent;\n\tchar        *pScript;\n\tchar        *token;\n\tqboolean wantName;\n\tqboolean inScript;\n\tint eventNum;\n\tint numEventItems;\n\tcast_script_event_t *curEvent;\n\tchar params[MAX_QPATH];\n\tcast_script_stack_action_t  *action;\n\tint i;\n\tint bracketLevel;\n\tqboolean buildScript;       //----(SA)\tadded\n\n\tif ( !level.scriptAI ) {\n\t\treturn;\n\t}\n\n\tent = &g_entities[cs->entityNum];\n\tif ( !ent->aiName ) {\n\t\treturn;\n\t}\n\n\tbuildScript = qtrue;\n\n\tpScript = level.scriptAI;\n\twantName = qtrue;\n\tinScript = qfalse;\n\tCOM_BeginParseSession( \"AICast_ScriptParse\" );\n\tbracketLevel = 0;\n\tnumEventItems = 0;\n\n\tmemset( cast_temp_events, 0, sizeof( cast_temp_events ) );\n\n\twhile ( 1 )\n\t{\n\t\ttoken = COM_Parse( &pScript );\n\n\t\tif ( !token[0] ) {\n\t\t\tif ( !wantName ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t// end of script\n\t\tif ( token[0] == '}' ) {\n\t\t\tif ( inScript ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( wantName ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' found, but not expected.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t\twantName = qtrue;\n\t\t} else if ( token[0] == '{' )    {\n\t\t\tif ( wantName ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '{' found, NAME expected.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t} else if ( wantName )   {\n\t\t\tif ( !Q_strcasecmp( ent->aiName, token ) ) {\n\t\t\t\tinScript = qtrue;\n\t\t\t\tnumEventItems = 0;\n\t\t\t}\n\t\t\twantName = qfalse;\n\t\t} else if ( inScript )   {\n\t\t\tif ( !Q_strcasecmp( token, \"attributes\" ) ) {\n\t\t\t\t// read in all the attributes\n\t\t\t\tAICast_CheckLevelAttributes( cs, ent, &pScript );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\teventNum = AICast_EventForString( token );\n\t\t\tif ( eventNum < 0 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown event: %s.\\n\", COM_GetCurrentParseLine(), token );\n\t\t\t}\n\t\t\tif ( numEventItems >= MAX_SCRIPT_EVENTS ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): MAX_SCRIPT_EVENTS reached (%d)\\n\", COM_GetCurrentParseLine(), MAX_SCRIPT_EVENTS );\n\t\t\t}\n\n\t\t\t// if this is a \"friendlysightcorpse\" event, then disable corpse vis sharing\n\t\t\tif ( !Q_stricmp( token, \"friendlysightcorpse\" ) ) {\n\t\t\t\tcs->aiFlags &= ~AIFL_CORPSESIGHTING;\n\t\t\t}\n\n\t\t\tcurEvent = &cast_temp_events[numEventItems];\n\t\t\tcurEvent->eventNum = eventNum;\n\t\t\tmemset( params, 0, sizeof( params ) );\n\n\t\t\t// parse any event params before the start of this event's actions\n\t\t\twhile ( ( token = COM_Parse( &pScript ) ) && ( token[0] != '{' ) )\n\t\t\t{\n\t\t\t\tif ( !token[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t}\n\n\t\t\t\tif ( eventNum == 13 ) {   // statechange event, check params\n\t\t\t\t\tif ( strlen( token ) > 1 ) {\n\t\t\t\t\t\tif ( BG_IndexForString( token, animStateStr, qtrue ) < 0 ) {\n\t\t\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown state type '%s'.\\n\", COM_GetCurrentParseLine(), token );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( strlen( params ) ) { // add a space between each param\n\t\t\t\t\tQ_strcat( params, sizeof( params ), \" \" );\n\t\t\t\t}\n\t\t\t\tQ_strcat( params, sizeof( params ), token );\n\t\t\t}\n\n\t\t\tif ( strlen( params ) ) { // copy the params into the event\n\t\t\t\tcurEvent->params = trap_Alloc( strlen( params ) + 1 );\n\t\t\t\tQ_strncpyz( curEvent->params, params, strlen( params ) + 1 );\n\t\t\t}\n\n\t\t\t// parse the actions for this event\n\t\t\twhile ( ( token = COM_Parse( &pScript ) ) && ( token[0] != '}' ) )\n\t\t\t{\n\t\t\t\tif ( !token[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t}\n\n\t\t\t\taction = AICast_ActionForString( cs, token );\n\t\t\t\tif ( !action ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown action: %s.\\n\", COM_GetCurrentParseLine(), token );\n\t\t\t\t}\n\n\t\t\t\tcurEvent->stack.items[curEvent->stack.numItems].action = action;\n\n\t\t\t\tmemset( params, 0, sizeof( params ) );\n\t\t\t\ttoken = COM_ParseExt( &pScript, qfalse );\n\t\t\t\tfor ( i = 0; token[0]; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( strlen( params ) ) { // add a space between each param\n\t\t\t\t\t\tQ_strcat( params, sizeof( params ), \" \" );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( i == 0 ) {\n\t\t\t\t\t\t// Special case: playsound's need to be cached on startup to prevent in-game pauses\n\t\t\t\t\t\tif ( !Q_stricmp( action->actionString, \"playsound\" ) ) {\n\t\t\t\t\t\t\tG_SoundIndex( token );\n\t\t\t\t\t\t}\n\n//----(SA)\tadded a bit more\n\t\t\t\t\t\tif (    buildScript && (\n\t\t\t\t\t\t\t\t\t!Q_stricmp( action->actionString, \"mu_start\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( action->actionString, \"mu_play\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( action->actionString, \"mu_queue\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( action->actionString, \"startcam\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( action->actionString, \"startcamblack\" ) )\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif ( strlen( token ) ) { // we know there's a [0], but don't know if it's '0'\n\t\t\t\t\t\t\t\ttrap_SendServerCommand( cs->entityNum, va( \"addToBuild %s\\n\", token ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( !Q_stricmp( action->actionString, \"giveweapon\" ) ) { // register weapon for client pre-loading\n\t\t\t\t\t\t\tgitem_t *weap = BG_FindItem2( token );    // (SA) FIXME: rats, need to fix this for weapon names with spaces: 'mauser rifle'\n//\t\t\t\t\t\t\tif(weap)\n\t\t\t\t\t\t\tRegisterItem( weap );   // don't be nice, just do it.  if it can't find it, you'll bomb out to the error menu\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// need to get this for callvote nextmap\n\t\t\t\t\t\tif ( !Q_stricmp( action->actionString, \"changelevel\" ) ) {\n\t\t\t\t\t\t\tQ_strncpyz( level.nextMap, token, sizeof( level.nextMap ) );\n\t\t\t\t\t\t\ttrap_Cvar_Set( \"nextmap\", level.nextMap );\n\t\t\t\t\t\t}\n//----(SA)\tend\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( strrchr( token,' ' ) ) { // need to wrap this param in quotes since it has more than one word\n\t\t\t\t\t\tQ_strcat( params, sizeof( params ), \"\\\"\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tQ_strcat( params, sizeof( params ), token );\n\n\t\t\t\t\tif ( strrchr( token,' ' ) ) { // need to wrap this param in quotes since it has more than one word\n\t\t\t\t\t\tQ_strcat( params, sizeof( params ), \"\\\"\" );\n\t\t\t\t\t}\n\n\t\t\t\t\ttoken = COM_ParseExt( &pScript, qfalse );\n\t\t\t\t}\n\n\t\t\t\tif ( strlen( params ) ) { // copy the params into the event\n\t\t\t\t\tcurEvent->stack.items[curEvent->stack.numItems].params = trap_Alloc( strlen( params ) + 1 );\n\t\t\t\t\tQ_strncpyz( curEvent->stack.items[curEvent->stack.numItems].params, params, strlen( params ) + 1 );\n\t\t\t\t}\n\n\t\t\t\tcurEvent->stack.numItems++;\n\n\t\t\t\tif ( curEvent->stack.numItems >= AICAST_MAX_SCRIPT_STACK_ITEMS ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(): script exceeded MAX_SCRIPT_ITEMS (%d), line %d\\n\", AICAST_MAX_SCRIPT_STACK_ITEMS, COM_GetCurrentParseLine() );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnumEventItems++;\n\t\t} else    // skip this character completely\n\t\t{\n\n\t\t\twhile ( ( token = COM_Parse( &pScript ) ) )\n\t\t\t{\n\t\t\t\tif ( !token[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t} else if ( token[0] == '{' ) {\n\t\t\t\t\tbracketLevel++;\n\t\t\t\t} else if ( token[0] == '}' ) {\n\t\t\t\t\tif ( !--bracketLevel ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// alloc and copy the events into the cast_state_t for this cast\n\tif ( numEventItems > 0 ) {\n\t\tcs->castScriptEvents = trap_Alloc( sizeof( cast_script_event_t ) * numEventItems );\n\t\tmemcpy( cs->castScriptEvents, cast_temp_events, sizeof( cast_script_event_t ) * numEventItems );\n\t\tcs->numCastScriptEvents = numEventItems;\n\n\t\tcs->castScriptStatus.castScriptEventIndex = -1;\n\t}\n}",
  "abstract_func": "void AICast_ScriptParse( cast_state_t *VAR_0 ) {\n\tgentity_t   *VAR_1;\n\tchar        *VAR_2;\n\tchar        *VAR_3;\n\tqboolean VAR_4;\n\tqboolean VAR_5;\n\tint VAR_6;\n\tint VAR_7;\n\tcast_script_event_t *VAR_8;\n\tchar VAR_9[VAR_10];\n\tcast_script_stack_action_t  *VAR_11;\n\tint VAR_12;\n\tint VAR_13;\n\tqboolean VAR_14;       /* COMMENT_0 */\n\n\tif ( !VAR_15.scriptAI ) {\n\t\treturn;\n\t}\n\n\tVAR_1 = &VAR_16[VAR_0->entityNum];\n\tif ( !VAR_1->aiName ) {\n\t\treturn;\n\t}\n\n\tVAR_14 = VAR_17;\n\n\tVAR_2 = VAR_15.scriptAI;\n\tVAR_4 = VAR_17;\n\tVAR_5 = VAR_18;\n\tCOM_BeginParseSession( \"AICast_ScriptParse\" );\n\tVAR_13 = 0;\n\tVAR_7 = 0;\n\n\tmemset( VAR_19, 0, sizeof( VAR_19 ) );\n\n\twhile ( 1 )\n\t{\n\t\tVAR_3 = COM_Parse( &VAR_2 );\n\n\t\tif ( !VAR_3[0] ) {\n\t\t\tif ( !VAR_4 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t/* COMMENT_1 */\n\t\tif ( VAR_3[0] == '}' ) {\n\t\t\tif ( VAR_5 ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( VAR_4 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' found, but not expected.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t\tVAR_4 = VAR_17;\n\t\t} else if ( VAR_3[0] == '{' )    {\n\t\t\tif ( VAR_4 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '{' found, NAME expected.\\n\", COM_GetCurrentParseLine() );\n\t\t\t}\n\t\t} else if ( VAR_4 )   {\n\t\t\tif ( !Q_strcasecmp( VAR_1->aiName, VAR_3 ) ) {\n\t\t\t\tVAR_5 = VAR_17;\n\t\t\t\tVAR_7 = 0;\n\t\t\t}\n\t\t\tVAR_4 = VAR_18;\n\t\t} else if ( VAR_5 )   {\n\t\t\tif ( !Q_strcasecmp( VAR_3, \"attributes\" ) ) {\n\t\t\t\t/* COMMENT_2 */\n\t\t\t\tAICast_CheckLevelAttributes( VAR_0, VAR_1, &VAR_2 );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tVAR_6 = AICast_EventForString( VAR_3 );\n\t\t\tif ( VAR_6 < 0 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown event: %s.\\n\", COM_GetCurrentParseLine(), VAR_3 );\n\t\t\t}\n\t\t\tif ( VAR_7 >= VAR_20 ) {\n\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): MAX_SCRIPT_EVENTS reached (%d)\\n\", COM_GetCurrentParseLine(), VAR_20 );\n\t\t\t}\n\n\t\t\t/* COMMENT_3 */\n\t\t\tif ( !Q_stricmp( VAR_3, \"friendlysightcorpse\" ) ) {\n\t\t\t\tVAR_0->aiFlags &= ~VAR_21;\n\t\t\t}\n\n\t\t\tVAR_8 = &VAR_19[VAR_7];\n\t\t\tVAR_8->eventNum = VAR_6;\n\t\t\tmemset( VAR_9, 0, sizeof( VAR_9 ) );\n\n\t\t\t/* COMMENT_4 */\n\t\t\twhile ( ( VAR_3 = COM_Parse( &VAR_2 ) ) && ( VAR_3[0] != '{' ) )\n\t\t\t{\n\t\t\t\tif ( !VAR_3[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t}\n\n\t\t\t\tif ( VAR_6 == 13 ) {   /* COMMENT_5 */\n\t\t\t\t\tif ( strlen( VAR_3 ) > 1 ) {\n\t\t\t\t\t\tif ( BG_IndexForString( VAR_3, VAR_22, VAR_17 ) < 0 ) {\n\t\t\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown state type '%s'.\\n\", COM_GetCurrentParseLine(), VAR_3 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( strlen( VAR_9 ) ) { /* COMMENT_6 */\n\t\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), \" \" );\n\t\t\t\t}\n\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), VAR_3 );\n\t\t\t}\n\n\t\t\tif ( strlen( VAR_9 ) ) { /* COMMENT_7 */\n\t\t\t\tVAR_8->params = trap_Alloc( strlen( VAR_9 ) + 1 );\n\t\t\t\tQ_strncpyz( VAR_8->params, VAR_9, strlen( VAR_9 ) + 1 );\n\t\t\t}\n\n\t\t\t/* COMMENT_8 */\n\t\t\twhile ( ( VAR_3 = COM_Parse( &VAR_2 ) ) && ( VAR_3[0] != '}' ) )\n\t\t\t{\n\t\t\t\tif ( !VAR_3[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t}\n\n\t\t\t\tVAR_11 = AICast_ActionForString( VAR_0, VAR_3 );\n\t\t\t\tif ( !VAR_11 ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): unknown action: %s.\\n\", COM_GetCurrentParseLine(), VAR_3 );\n\t\t\t\t}\n\n\t\t\t\tVAR_8->stack.items[VAR_8->stack.numItems].action = VAR_11;\n\n\t\t\t\tmemset( VAR_9, 0, sizeof( VAR_9 ) );\n\t\t\t\tVAR_3 = COM_ParseExt( &VAR_2, VAR_18 );\n\t\t\t\tfor ( VAR_12 = 0; VAR_3[0]; VAR_12++ )\n\t\t\t\t{\n\t\t\t\t\tif ( strlen( VAR_9 ) ) { /* COMMENT_6 */\n\t\t\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), \" \" );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( VAR_12 == 0 ) {\n\t\t\t\t\t\t/* COMMENT_9 */\n\t\t\t\t\t\tif ( !Q_stricmp( VAR_11->actionString, \"playsound\" ) ) {\n\t\t\t\t\t\t\tG_SoundIndex( VAR_3 );\n\t\t\t\t\t\t}\n\n/* COMMENT_10 */\n\t\t\t\t\t\tif (    VAR_14 && (\n\t\t\t\t\t\t\t\t\t!Q_stricmp( VAR_11->actionString, \"mu_start\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( VAR_11->actionString, \"mu_play\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( VAR_11->actionString, \"mu_queue\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( VAR_11->actionString, \"startcam\" ) ||\n\t\t\t\t\t\t\t\t\t!Q_stricmp( VAR_11->actionString, \"startcamblack\" ) )\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif ( strlen( VAR_3 ) ) { /* COMMENT_11 */\n\t\t\t\t\t\t\t\ttrap_SendServerCommand( VAR_0->entityNum, va( \"addToBuild %s\\n\", VAR_3 ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( !Q_stricmp( VAR_11->actionString, \"giveweapon\" ) ) { /* COMMENT_12 */\n\t\t\t\t\t\t\tgitem_t *VAR_23 = BG_FindItem2( VAR_3 );    /* COMMENT_13 */\n/* COMMENT_14 */\n\t\t\t\t\t\t\tRegisterItem( VAR_23 );   /* COMMENT_15 */\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* COMMENT_16 */\n\t\t\t\t\t\tif ( !Q_stricmp( VAR_11->actionString, \"changelevel\" ) ) {\n\t\t\t\t\t\t\tQ_strncpyz( VAR_15.nextMap, VAR_3, sizeof( VAR_15.nextMap ) );\n\t\t\t\t\t\t\ttrap_Cvar_Set( \"nextmap\", VAR_15.nextMap );\n\t\t\t\t\t\t}\n/* COMMENT_17 */\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( strrchr( VAR_3,' ' ) ) { /* COMMENT_18 */\n\t\t\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), \"\\\"\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), VAR_3 );\n\n\t\t\t\t\tif ( strrchr( VAR_3,' ' ) ) { /* COMMENT_18 */\n\t\t\t\t\t\tQ_strcat( VAR_9, sizeof( VAR_9 ), \"\\\"\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tVAR_3 = COM_ParseExt( &VAR_2, VAR_18 );\n\t\t\t\t}\n\n\t\t\t\tif ( strlen( VAR_9 ) ) { /* COMMENT_7 */\n\t\t\t\t\tVAR_8->stack.items[VAR_8->stack.numItems].params = trap_Alloc( strlen( VAR_9 ) + 1 );\n\t\t\t\t\tQ_strncpyz( VAR_8->stack.items[VAR_8->stack.numItems].params, VAR_9, strlen( VAR_9 ) + 1 );\n\t\t\t\t}\n\n\t\t\t\tVAR_8->stack.numItems++;\n\n\t\t\t\tif ( VAR_8->stack.numItems >= VAR_24 ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(): script exceeded MAX_SCRIPT_ITEMS (%d), line %d\\n\", VAR_24, COM_GetCurrentParseLine() );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tVAR_7++;\n\t\t} else    /* COMMENT_19 */\n\t\t{\n\n\t\t\twhile ( ( VAR_3 = COM_Parse( &VAR_2 ) ) )\n\t\t\t{\n\t\t\t\tif ( !VAR_3[0] ) {\n\t\t\t\t\tG_Error( \"AICast_ScriptParse(), Error (line %d): '}' expected, end of script found.\\n\", COM_GetCurrentParseLine() );\n\t\t\t\t} else if ( VAR_3[0] == '{' ) {\n\t\t\t\t\tVAR_13++;\n\t\t\t\t} else if ( VAR_3[0] == '}' ) {\n\t\t\t\t\tif ( !--VAR_13 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/* COMMENT_20 */\n\tif ( VAR_7 > 0 ) {\n\t\tVAR_0->castScriptEvents = trap_Alloc( sizeof( cast_script_event_t ) * VAR_7 );\n\t\tmemcpy( VAR_0->castScriptEvents, VAR_19, sizeof( cast_script_event_t ) * VAR_7 );\n\t\tVAR_0->numCastScriptEvents = VAR_7;\n\n\t\tVAR_0->castScriptStatus.castScriptEventIndex = -1;\n\t}\n}",
  "func_graph_path": "rtcwcoop/f2cd18bc2e1cbca8c4b78bee9c392272bd5f42ac/ai_cast_script.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -108,7 +108,7 @@\n \t\t\t}\n \n \t\t\tif ( strlen( params ) ) { // copy the params into the event\n-\t\t\t\tcurEvent->params = G_Alloc( strlen( params ) + 1 );\n+\t\t\t\tcurEvent->params = trap_Alloc( strlen( params ) + 1 );\n \t\t\t\tQ_strncpyz( curEvent->params, params, strlen( params ) + 1 );\n \t\t\t}\n \n@@ -181,7 +181,7 @@\n \t\t\t\t}\n \n \t\t\t\tif ( strlen( params ) ) { // copy the params into the event\n-\t\t\t\t\tcurEvent->stack.items[curEvent->stack.numItems].params = G_Alloc( strlen( params ) + 1 );\n+\t\t\t\t\tcurEvent->stack.items[curEvent->stack.numItems].params = trap_Alloc( strlen( params ) + 1 );\n \t\t\t\t\tQ_strncpyz( curEvent->stack.items[curEvent->stack.numItems].params, params, strlen( params ) + 1 );\n \t\t\t\t}\n \n@@ -213,7 +213,7 @@\n \n \t// alloc and copy the events into the cast_state_t for this cast\n \tif ( numEventItems > 0 ) {\n-\t\tcs->castScriptEvents = G_Alloc( sizeof( cast_script_event_t ) * numEventItems );\n+\t\tcs->castScriptEvents = trap_Alloc( sizeof( cast_script_event_t ) * numEventItems );\n \t\tmemcpy( cs->castScriptEvents, cast_temp_events, sizeof( cast_script_event_t ) * numEventItems );\n \t\tcs->numCastScriptEvents = numEventItems;\n ",
  "diff_line_info": {
    "deleted_lines": [
      "\t\t\t\tcurEvent->params = G_Alloc( strlen( params ) + 1 );",
      "\t\t\t\t\tcurEvent->stack.items[curEvent->stack.numItems].params = G_Alloc( strlen( params ) + 1 );",
      "\t\tcs->castScriptEvents = G_Alloc( sizeof( cast_script_event_t ) * numEventItems );"
    ],
    "added_lines": [
      "\t\t\t\tcurEvent->params = trap_Alloc( strlen( params ) + 1 );",
      "\t\t\t\t\tcurEvent->stack.items[curEvent->stack.numItems].params = trap_Alloc( strlen( params ) + 1 );",
      "\t\tcs->castScriptEvents = trap_Alloc( sizeof( cast_script_event_t ) * numEventItems );"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/rtcwcoop/rtcwcoop/pull/45",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/rtcwcoop/rtcwcoop/pull/45: 403 Client Error: Forbidden for url: https://api.github.com/repos/rtcwcoop/rtcwcoop/pulls/45",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "The patch addresses a security exploit causing server crashes through excessive memory allocation. The fix replaces G_Alloc with trap_Alloc, likely improving memory management to prevent crashes.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}