{
  "cve_id": "CVE-2021-28167",
  "cwe_ids": [
    "CWE-909"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "eclipse-openj9/openj9",
  "commit_msg": "Correctly load/initialize classes when using ConstantPool\n\n- do not load classes in the \"ifLoaded\" calls\n- never intitialize classes in the natives\n- do not update the constant pool when querying from the natives\n\nFixes: #12016\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>",
  "commit_hash": "840f3af31a5b8d2d395d9367c826ed756e380fb9",
  "git_url": "https://github.com/eclipse-openj9/openj9/commit/840f3af31a5b8d2d395d9367c826ed756e380fb9",
  "file_path": "runtime/vm/resolvesupport.cpp",
  "func_name": "resolveSpecialSplitMethodRef",
  "func_before": "J9Method *   \nresolveSpecialSplitMethodRef(J9VMThread *vmStruct, J9ConstantPool *ramCP, UDATA splitTableIndex, UDATA resolveFlags)\n{\n\tU_16 cpIndex = *(U_16 *)(J9ROMCLASS_SPECIALSPLITMETHODREFINDEXES(ramCP->ramClass->romClass) + splitTableIndex);\n\tJ9Method *method = ramCP->ramClass->specialSplitMethodTable[splitTableIndex];\n\t\n\tif (method == (J9Method*)vmStruct->javaVM->initialMethods.initialSpecialMethod) {\n\t\tmethod = resolveSpecialMethodRefInto(vmStruct, ramCP, cpIndex, resolveFlags, NULL);\n\n\t\tif (NULL != method) {\n\t\t\tramCP->ramClass->specialSplitMethodTable[splitTableIndex] = method;\n\t\t}\n\t}\n\treturn method;\n}",
  "abstract_func_before": "J9Method *   \nresolveSpecialSplitMethodRef(J9VMThread *VAR_0, J9ConstantPool *VAR_1, UDATA VAR_2, UDATA VAR_3)\n{\n\tU_16 VAR_4 = *(U_16 *)(J9ROMCLASS_SPECIALSPLITMETHODREFINDEXES(VAR_1->ramClass->romClass) + VAR_2);\n\tJ9Method *VAR_5 = VAR_1->ramClass->specialSplitMethodTable[VAR_2];\n\t\n\tif (VAR_5 == (J9Method*)VAR_0->javaVM->initialMethods.initialSpecialMethod) {\n\t\tVAR_5 = resolveSpecialMethodRefInto(VAR_0, VAR_1, VAR_4, VAR_3, NULL);\n\n\t\tif (NULL != VAR_5) {\n\t\t\tVAR_1->ramClass->specialSplitMethodTable[VAR_2] = VAR_5;\n\t\t}\n\t}\n\treturn VAR_5;\n}",
  "func_graph_path_before": "eclipse-openj9/openj9/840f3af31a5b8d2d395d9367c826ed756e380fb9/resolvesupport.cpp/vul/before/0.json",
  "func": "J9Method *   \nresolveSpecialSplitMethodRef(J9VMThread *vmStruct, J9ConstantPool *ramCP, UDATA splitTableIndex, UDATA resolveFlags)\n{\n\tU_16 cpIndex = *(U_16 *)(J9ROMCLASS_SPECIALSPLITMETHODREFINDEXES(ramCP->ramClass->romClass) + splitTableIndex);\n\tJ9Method *method = ramCP->ramClass->specialSplitMethodTable[splitTableIndex];\n\t\n\tif (method == (J9Method*)vmStruct->javaVM->initialMethods.initialSpecialMethod) {\n\t\tmethod = resolveSpecialMethodRefInto(vmStruct, ramCP, cpIndex, resolveFlags, NULL);\n\n\t\tif ((NULL != method) && J9_ARE_NO_BITS_SET(resolveFlags, J9_RESOLVE_FLAG_NO_CP_UPDATE)) {\n\t\t\tramCP->ramClass->specialSplitMethodTable[splitTableIndex] = method;\n\t\t}\n\t}\n\treturn method;\n}",
  "abstract_func": "J9Method *   \nresolveSpecialSplitMethodRef(J9VMThread *VAR_0, J9ConstantPool *VAR_1, UDATA VAR_2, UDATA VAR_3)\n{\n\tU_16 VAR_4 = *(U_16 *)(J9ROMCLASS_SPECIALSPLITMETHODREFINDEXES(VAR_1->ramClass->romClass) + VAR_2);\n\tJ9Method *VAR_5 = VAR_1->ramClass->specialSplitMethodTable[VAR_2];\n\t\n\tif (VAR_5 == (J9Method*)VAR_0->javaVM->initialMethods.initialSpecialMethod) {\n\t\tVAR_5 = resolveSpecialMethodRefInto(VAR_0, VAR_1, VAR_4, VAR_3, NULL);\n\n\t\tif ((NULL != VAR_5) && J9_ARE_NO_BITS_SET(VAR_3, VAR_6)) {\n\t\t\tVAR_1->ramClass->specialSplitMethodTable[VAR_2] = VAR_5;\n\t\t}\n\t}\n\treturn VAR_5;\n}",
  "func_graph_path": "eclipse-openj9/openj9/840f3af31a5b8d2d395d9367c826ed756e380fb9/resolvesupport.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,7 +7,7 @@\n \tif (method == (J9Method*)vmStruct->javaVM->initialMethods.initialSpecialMethod) {\n \t\tmethod = resolveSpecialMethodRefInto(vmStruct, ramCP, cpIndex, resolveFlags, NULL);\n \n-\t\tif (NULL != method) {\n+\t\tif ((NULL != method) && J9_ARE_NO_BITS_SET(resolveFlags, J9_RESOLVE_FLAG_NO_CP_UPDATE)) {\n \t\t\tramCP->ramClass->specialSplitMethodTable[splitTableIndex] = method;\n \t\t}\n \t}",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tif (NULL != method) {"
    ],
    "added_lines": [
      "\t\tif ((NULL != method) && J9_ARE_NO_BITS_SET(resolveFlags, J9_RESOLVE_FLAG_NO_CP_UPDATE)) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/eclipse-openj9/openj9/pull/12148",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/eclipse-openj9/openj9/pull/12148: 403 Client Error: Forbidden for url: https://api.github.com/repos/eclipse-openj9/openj9/pulls/12148",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.9"
}