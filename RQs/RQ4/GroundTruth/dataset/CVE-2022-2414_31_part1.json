{
  "cve_id": "CVE-2022-2414",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
  "cvss_is_v3": true,
  "repo_name": "dogtagpki/pki",
  "commit_msg": "Disable access to external entities when parsing XML\n\nThis reduces the vulnerability of XML parsers to XXE (XML external\nentity) injection.\n\nThe best way to prevent XXE is to stop using XML altogether, which we do\nplan to do. Until that happens I consider it worthwhile to tighten the\nsecurity here though.",
  "commit_hash": "16deffdf7548e305507982e246eb9fd1eac414fd",
  "git_url": "https://github.com/dogtagpki/pki/commit/16deffdf7548e305507982e246eb9fd1eac414fd",
  "file_path": "base/common/src/main/java/com/netscape/certsrv/key/KeyRequestInfoCollection.java",
  "func_name": "toXML",
  "func_before": "public String toXML() throws Exception {\n\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        DocumentBuilder builder = factory.newDocumentBuilder();\n        Document document = builder.newDocument();\n\n        Element element = toDOM(document);\n        document.appendChild(element);\n\n        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n        Transformer transformer = transformerFactory.newTransformer();\n        transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n        transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n\n        DOMSource domSource = new DOMSource(document);\n        StringWriter sw = new StringWriter();\n        StreamResult streamResult = new StreamResult(sw);\n        transformer.transform(domSource, streamResult);\n\n        return sw.toString();\n    }",
  "abstract_func_before": "public String toXML() throws Exception {\n\n        DocumentBuilderFactory VAR_0 = VAR_1.newInstance();\n        DocumentBuilder VAR_2 = VAR_0.newDocumentBuilder();\n        Document VAR_3 = VAR_2.newDocument();\n\n        Element VAR_4 = toDOM(VAR_3);\n        VAR_3.appendChild(VAR_4);\n\n        TransformerFactory VAR_5 = VAR_6.newInstance();\n        Transformer VAR_7 = VAR_5.newTransformer();\n        VAR_7.setOutputProperty(VAR_8.INDENT, \"yes\");\n        VAR_7.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n\n        DOMSource VAR_9 = new DOMSource(VAR_3);\n        StringWriter VAR_10 = new StringWriter();\n        StreamResult VAR_11 = new StreamResult(VAR_10);\n        VAR_7.transform(VAR_9, VAR_11);\n\n        return VAR_10.toString();\n    }",
  "func_graph_path_before": "dogtagpki/pki/16deffdf7548e305507982e246eb9fd1eac414fd/KeyRequestInfoCollection.java/vul/before/0.json",
  "func": "public String toXML() throws Exception {\n\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        DocumentBuilder builder = factory.newDocumentBuilder();\n        Document document = builder.newDocument();\n\n        Element element = toDOM(document);\n        document.appendChild(element);\n\n        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");\n        Transformer transformer = transformerFactory.newTransformer();\n        transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n        transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n\n        DOMSource domSource = new DOMSource(document);\n        StringWriter sw = new StringWriter();\n        StreamResult streamResult = new StreamResult(sw);\n        transformer.transform(domSource, streamResult);\n\n        return sw.toString();\n    }",
  "abstract_func": "public String toXML() throws Exception {\n\n        DocumentBuilderFactory VAR_0 = VAR_1.newInstance();\n        DocumentBuilder VAR_2 = VAR_0.newDocumentBuilder();\n        Document VAR_3 = VAR_2.newDocument();\n\n        Element VAR_4 = toDOM(VAR_3);\n        VAR_3.appendChild(VAR_4);\n\n        TransformerFactory VAR_5 = VAR_6.newInstance();\n        VAR_5.setAttribute(VAR_7.ACCESS_EXTERNAL_DTD, \"\");\n        VAR_5.setAttribute(VAR_7.ACCESS_EXTERNAL_STYLESHEET, \"\");\n        Transformer VAR_8 = VAR_5.newTransformer();\n        VAR_8.setOutputProperty(VAR_9.INDENT, \"yes\");\n        VAR_8.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n\n        DOMSource VAR_10 = new DOMSource(VAR_3);\n        StringWriter VAR_11 = new StringWriter();\n        StreamResult VAR_12 = new StreamResult(VAR_11);\n        VAR_8.transform(VAR_10, VAR_12);\n\n        return VAR_11.toString();\n    }",
  "func_graph_path": "dogtagpki/pki/16deffdf7548e305507982e246eb9fd1eac414fd/KeyRequestInfoCollection.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -8,6 +8,8 @@\n         document.appendChild(element);\n \n         TransformerFactory transformerFactory = TransformerFactory.newInstance();\n+        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");\n         Transformer transformer = transformerFactory.newTransformer();\n         transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n         transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");",
      "        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/dogtagpki/pki/pull/4021",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/dogtagpki/pki/pull/4021: 403 Client Error: Forbidden for url: https://api.github.com/repos/dogtagpki/pki/pulls/4021",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "The commit message explicitly addresses a security vulnerability related to XML external entity (XXE) injection. The code changes disable access to external DTDs and stylesheets, which are standard measures to mitigate XXE attacks. There's no indication of non-security purposes.\n\n**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}