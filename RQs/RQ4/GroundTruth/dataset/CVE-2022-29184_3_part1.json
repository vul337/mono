{
  "cve_id": "CVE-2022-29184",
  "cwe_ids": [
    "CWE-77"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "gocd",
  "commit_msg": "Improve escaping of arguments when constructing Hg command calls",
  "commit_hash": "37d35115db2ada2190173f9413cfe1bc6c295ecb",
  "git_url": "https://github.com/gocd/gocd/commit/37d35115db2ada2190173f9413cfe1bc6c295ecb",
  "file_path": "domain/src/main/java/com/thoughtworks/go/domain/materials/mercurial/HgCommand.java",
  "func_name": "modificationsSince",
  "func_before": "public List<Modification> modificationsSince(Revision revision) {\n        InMemoryStreamConsumer consumer = inMemoryConsumer();\n        bombUnless(pull(consumer), \"Failed to run hg pull command: \" + consumer.getAllOutput());\n        CommandLine hg = hg(\"log\",\n                \"-r\", \"tip:\" + revision.getRevision(),\n                \"-b\", branch,\n                \"--style\", templatePath());\n        return new HgModificationSplitter(execute(hg)).filterOutRevision(revision);\n    }",
  "abstract_func_before": "public List<Modification> modificationsSince(Revision VAR_0) {\n        InMemoryStreamConsumer VAR_1 = inMemoryConsumer();\n        bombUnless(pull(VAR_1), \"Failed to run hg pull command: \" + VAR_1.getAllOutput());\n        CommandLine VAR_2 = hg(\"log\",\n                \"-r\", \"tip:\" + VAR_0.getRevision(),\n                \"-b\", VAR_3,\n                \"--style\", templatePath());\n        return new HgModificationSplitter(execute(VAR_2)).filterOutRevision(VAR_0);\n    }",
  "func_graph_path_before": "gocd/37d35115db2ada2190173f9413cfe1bc6c295ecb/HgCommand.java/vul/before/4.json",
  "func": "public List<Modification> modificationsSince(Revision revision) {\n        InMemoryStreamConsumer consumer = inMemoryConsumer();\n        bombUnless(pull(consumer), \"Failed to run hg pull command: \" + consumer.getAllOutput());\n        CommandLine hg = hg(\"log\", \"-r\", \"tip:\" + revision.getRevision(), branchArg(), \"--style\", templatePath());\n        return new HgModificationSplitter(execute(hg)).filterOutRevision(revision);\n    }",
  "abstract_func": "public List<Modification> modificationsSince(Revision VAR_0) {\n        InMemoryStreamConsumer VAR_1 = inMemoryConsumer();\n        bombUnless(pull(VAR_1), \"Failed to run hg pull command: \" + VAR_1.getAllOutput());\n        CommandLine VAR_2 = hg(\"log\", \"-r\", \"tip:\" + VAR_0.getRevision(), branchArg(), \"--style\", templatePath());\n        return new HgModificationSplitter(execute(VAR_2)).filterOutRevision(VAR_0);\n    }",
  "func_graph_path": "gocd/37d35115db2ada2190173f9413cfe1bc6c295ecb/HgCommand.java/vul/after/4.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,9 +1,6 @@\n public List<Modification> modificationsSince(Revision revision) {\n         InMemoryStreamConsumer consumer = inMemoryConsumer();\n         bombUnless(pull(consumer), \"Failed to run hg pull command: \" + consumer.getAllOutput());\n-        CommandLine hg = hg(\"log\",\n-                \"-r\", \"tip:\" + revision.getRevision(),\n-                \"-b\", branch,\n-                \"--style\", templatePath());\n+        CommandLine hg = hg(\"log\", \"-r\", \"tip:\" + revision.getRevision(), branchArg(), \"--style\", templatePath());\n         return new HgModificationSplitter(execute(hg)).filterOutRevision(revision);\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "        CommandLine hg = hg(\"log\",",
      "                \"-r\", \"tip:\" + revision.getRevision(),",
      "                \"-b\", branch,",
      "                \"--style\", templatePath());"
    ],
    "added_lines": [
      "        CommandLine hg = hg(\"log\", \"-r\", \"tip:\" + revision.getRevision(), branchArg(), \"--style\", templatePath());"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/gocd/gocd/pull/10240",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/gocd/gocd/pull/10240: 403 Client Error: Forbidden for url: https://api.github.com/repos/gocd/gocd/pulls/10240",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95\n\n**Step-by-Step Explanation:**\n\n1. **Input Analysis:** The commit message and vulnerability description both emphasize improving the escaping of arguments in Hg command construction, indicating a focus on secure argument handling.\n\n2. **Consistency Check:** The code diff reflects this by replacing direct argument passing with a helper method, ensuring proper escaping as described.\n\n3. **Purpose Evaluation:** The change modifies core functionality to handle command arguments securely, addressing a potential security risk.\n\n4. **Security Assessment:** The fix addresses improper escaping, preventing command injection, which is a security vulnerability.\n\n5. **Confidence Scoring:** High confidence due to clear alignment between commit description and code changes, indicating a definite security fix."
}