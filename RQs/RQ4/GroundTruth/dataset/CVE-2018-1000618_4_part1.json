{
  "cve_id": "CVE-2018-1000618",
  "cwe_ids": [
    "CWE-674"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "EOSIO/eos",
  "commit_msg": "Add limit to recursion",
  "commit_hash": "cf7209e703e6d3f7a5413e0cb1fe88a4d8e4b38d",
  "git_url": "https://github.com/EOSIO/eos/commit/cf7209e703e6d3f7a5413e0cb1fe88a4d8e4b38d",
  "file_path": "libraries/chain/include/eosio/chain/abi_serializer.hpp",
  "func_name": "add_static_variant",
  "func_before": "add_static_variant( mutable_variant_object& o, Resolver& r)\n               :obj_mvo(o), resolver(r){}",
  "abstract_func_before": "add_static_variant( mutable_variant_object& VAR_0, Resolver& VAR_1)\n               :obj_mvo(VAR_0), resolver(VAR_1){}",
  "func_graph_path_before": null,
  "func": "add_static_variant( mutable_variant_object& o, Resolver& r, size_t recursion_depth)\n               :obj_mvo(o), resolver(r), recursion_depth(recursion_depth){}",
  "abstract_func": "add_static_variant( mutable_variant_object& VAR_0, Resolver& VAR_1, size_t VAR_2)\n               :obj_mvo(VAR_0), resolver(VAR_1), recursion_depth(VAR_2){}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,2 +1,2 @@\n-add_static_variant( mutable_variant_object& o, Resolver& r)\n-               :obj_mvo(o), resolver(r){}\n+add_static_variant( mutable_variant_object& o, Resolver& r, size_t recursion_depth)\n+               :obj_mvo(o), resolver(r), recursion_depth(recursion_depth){}",
  "diff_line_info": {
    "deleted_lines": [
      "add_static_variant( mutable_variant_object& o, Resolver& r)",
      "               :obj_mvo(o), resolver(r){}"
    ],
    "added_lines": [
      "add_static_variant( mutable_variant_object& o, Resolver& r, size_t recursion_depth)",
      "               :obj_mvo(o), resolver(r), recursion_depth(recursion_depth){}"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/EOSIO/eos/pull/4112",
  "description": {
    "pr_info": {
      "title": "Pretty print transactions",
      "number": 4112
    },
    "comment": [
      "Enhanced the abi_serializer to be able to deserialize transactions even if they have invalid abi set on the contract. So even with invalid abi the transaction can still be pretty-printed. In the case of invalid abi the action data is left in hex since there is no way to deserialize it. This allows indexers like the mongodb plugin to serialize the parts of transaction that are serializable without the user provided abi.\r\n\r\nI suspect this will fix issue #4111 that was just submitted.",
      "@heifner My issue is still there. [issue#4111](https://github.com/EOSIO/eos/issues/4111)\r\nThis is the error I'm getting:\r\nInvalid packed transaction\r\npivot != std::string::npos: No delimiter in string, cannot determine type: EOSK59ovuuemzcGX1QKATF4pEVg2AmUT2rjQAH8MrC52SpmBZ59YPVYMFYTBg7XNgCDQcX18vMyDsjEp4SbyDnkcUvruZ94BX\r\nFailed to deserialize variant",
      "This is the command I'm using and getting error:\r\ncleos -H node1.eosphere.io --wallet-host localhost --wallet-port 8888 set contract eosuser build/contracts/eosio.token -p eosuser\r\n\r\nGetting same error for every contract\r\n\r\ncleos version client: 15953cc1\r\n\r\nPlease, help me to fix this.\r\nThanks",
      "@heifner The problem is coming from here /eos/libraries/fc/src/crypto/signature.cpp:\r\n const auto pivot = base58str.find('_');\r\n      FC_ASSERT(pivot != std::string::npos, \"No delimiter in string, cannot determine type: ${str}\", (\"str\", base58str));\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "Final Classification: Security Vulnerability Fix; Confidence: 0.9\n\n**Step-by-Step Explanation:**\n1. The commit message refers to limiting recursion, which is a common security fix.\n2. The code diff shows adding a recursion depth parameter, preventing potential stack overflows.\n3. The vulnerability description mentions handling invalid ABI, impacting security.\n4. Though noCVE/CWE is cited, the changes address a potential exploit, making it a security fix.\n\n**Answer:**  \n**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9"
}