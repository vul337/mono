{
  "cve_id": "CVE-2018-14568",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "OISF/suricata",
  "commit_msg": "stream: support RST getting lost/ignored\n\nIn case of a valid RST on a SYN, the state is switched to 'TCP_CLOSED'.\nHowever, the target of the RST may not have received it, or may not\nhave accepted it. Also, the RST may have been injected, so the supposed\nsender may not actually be aware of the RST that was sent in it's name.\n\nIn this case the previous behavior was to switch the state to CLOSED and\naccept no further TCP updates or stream reassembly.\n\nThis patch changes this. It still switches the state to CLOSED, as this\nis by far the most likely to be correct. However, it will reconsider\nthe state if the receiver continues to talk.\n\nTo do this on each state change the previous state will be recorded in\nTcpSession::pstate. If a non-RST packet is received after a RST, this\nTcpSession::pstate is used to try to continue the conversation.\n\nIf the (supposed) sender of the RST is also continueing the conversation\nas normal, it's highly likely it didn't send the RST. In this case\na stream event is generated.\n\nTicket: #2501\n\nReported-By: Kirill Shipulin",
  "commit_hash": "843d0b7a10bb45627f94764a6c5d468a24143345",
  "git_url": "https://github.com/OISF/suricata/commit/843d0b7a10bb45627f94764a6c5d468a24143345",
  "file_path": "src/stream-tcp.c",
  "func_name": "StreamTcpPacketSetState",
  "func_before": "static void StreamTcpPacketSetState(Packet *p, TcpSession *ssn,\n                                           uint8_t state)\n{\n    if (state == ssn->state || PKT_IS_PSEUDOPKT(p))\n        return;\n\n    ssn->state = state;\n\n    /* update the flow state */\n    switch(ssn->state) {\n        case TCP_ESTABLISHED:\n        case TCP_FIN_WAIT1:\n        case TCP_FIN_WAIT2:\n        case TCP_CLOSING:\n        case TCP_CLOSE_WAIT:\n            FlowUpdateState(p->flow, FLOW_STATE_ESTABLISHED);\n            break;\n        case TCP_LAST_ACK:\n        case TCP_TIME_WAIT:\n        case TCP_CLOSED:\n            FlowUpdateState(p->flow, FLOW_STATE_CLOSED);\n            break;\n    }\n}",
  "abstract_func_before": "static void StreamTcpPacketSetState(Packet *VAR_0, TcpSession *VAR_1,\n                                           uint8_t VAR_2)\n{\n    if (VAR_2 == VAR_1->state || PKT_IS_PSEUDOPKT(VAR_0))\n        return;\n\n    VAR_1->state = VAR_2;\n\n    /* COMMENT_0 */\n    switch(VAR_1->state) {\n        case VAR_3:\n        case VAR_4:\n        case VAR_5:\n        case VAR_6:\n        case VAR_7:\n            FlowUpdateState(VAR_0->flow, VAR_8);\n            break;\n        case VAR_9:\n        case VAR_10:\n        case VAR_11:\n            FlowUpdateState(VAR_0->flow, VAR_12);\n            break;\n    }\n}",
  "func_graph_path_before": "OISF/suricata/843d0b7a10bb45627f94764a6c5d468a24143345/stream-tcp.c/vul/before/2.json",
  "func": "static void StreamTcpPacketSetState(Packet *p, TcpSession *ssn,\n                                           uint8_t state)\n{\n    if (state == ssn->state || PKT_IS_PSEUDOPKT(p))\n        return;\n\n    ssn->pstate = ssn->state;\n    ssn->state = state;\n\n    /* update the flow state */\n    switch(ssn->state) {\n        case TCP_ESTABLISHED:\n        case TCP_FIN_WAIT1:\n        case TCP_FIN_WAIT2:\n        case TCP_CLOSING:\n        case TCP_CLOSE_WAIT:\n            FlowUpdateState(p->flow, FLOW_STATE_ESTABLISHED);\n            break;\n        case TCP_LAST_ACK:\n        case TCP_TIME_WAIT:\n        case TCP_CLOSED:\n            FlowUpdateState(p->flow, FLOW_STATE_CLOSED);\n            break;\n    }\n}",
  "abstract_func": "static void StreamTcpPacketSetState(Packet *VAR_0, TcpSession *VAR_1,\n                                           uint8_t VAR_2)\n{\n    if (VAR_2 == VAR_1->state || PKT_IS_PSEUDOPKT(VAR_0))\n        return;\n\n    VAR_1->pstate = VAR_1->state;\n    VAR_1->state = VAR_2;\n\n    /* COMMENT_0 */\n    switch(VAR_1->state) {\n        case VAR_3:\n        case VAR_4:\n        case VAR_5:\n        case VAR_6:\n        case VAR_7:\n            FlowUpdateState(VAR_0->flow, VAR_8);\n            break;\n        case VAR_9:\n        case VAR_10:\n        case VAR_11:\n            FlowUpdateState(VAR_0->flow, VAR_12);\n            break;\n    }\n}",
  "func_graph_path": "OISF/suricata/843d0b7a10bb45627f94764a6c5d468a24143345/stream-tcp.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,6 +4,7 @@\n     if (state == ssn->state || PKT_IS_PSEUDOPKT(p))\n         return;\n \n+    ssn->pstate = ssn->state;\n     ssn->state = state;\n \n     /* update the flow state */",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "    ssn->pstate = ssn->state;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/OISF/suricata/pull/3428",
  "description": {
    "pr_info": {
      "title": "Next/20180718/v5",
      "number": 3428
    },
    "comment": [
      "Describe changes:\r\n- #3422\r\n- #3427\r\n- fixes for the tickets below\r\n\r\nTickets:\r\nhttps://redmine.openinfosecfoundation.org/issues/2542\r\nhttps://redmine.openinfosecfoundation.org/issues/2543\r\nhttps://redmine.openinfosecfoundation.org/issues/2501\r\n\r\n[PRScript](https://redmine.openinfosecfoundation.org/projects/suricata/wiki/PRscript) output (if applicable):\r\n- PR victorjulien-pcap: https://buildbot.openinfosecfoundation.org/builders/victorjulien-pcap/builds/152\r\n- PR victorjulien: https://buildbot.openinfosecfoundation.org/builders/victorjulien/builds/154\r\n\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.7"
}