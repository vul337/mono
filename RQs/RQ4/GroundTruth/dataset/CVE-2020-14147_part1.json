{
  "cve_id": "CVE-2020-14147",
  "cwe_ids": [
    "CWE-190",
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "redis",
  "commit_msg": "[FIX] revisit CVE-2015-8080 vulnerability",
  "commit_hash": "ef764dde1cca2f25d00686673d1bc89448819571",
  "git_url": "https://github.com/redis/redis/commit/ef764dde1cca2f25d00686673d1bc89448819571",
  "file_path": "deps/lua/src/lua_struct.c",
  "func_name": "getnum",
  "func_before": "static int getnum (const char **fmt, int df) {\n  if (!isdigit(**fmt))  /* no number? */\n    return df;  /* return default value */\n  else {\n    int a = 0;\n    do {\n      a = a*10 + *((*fmt)++) - '0';\n    } while (isdigit(**fmt));\n    return a;\n  }\n}",
  "abstract_func_before": "static int getnum (const char **VAR_0, int VAR_1) {\n  if (!isdigit(**VAR_0))  /* COMMENT_0 */\n    return VAR_1;  /* COMMENT_1 */\n  else {\n    int VAR_2 = 0;\n    do {\n      VAR_2 = VAR_2*10 + *((*VAR_0)++) - '0';\n    } while (isdigit(**VAR_0));\n    return VAR_2;\n  }\n}",
  "func_graph_path_before": "redis/ef764dde1cca2f25d00686673d1bc89448819571/lua_struct.c/vul/before/0.json",
  "func": "static int getnum (lua_State *L, const char **fmt, int df) {\n  if (!isdigit(**fmt))  /* no number? */\n    return df;  /* return default value */\n  else {\n    int a = 0;\n    do {\n      if (a > (INT_MAX / 10) || a * 10 > (INT_MAX - (**fmt - '0')))\n        luaL_error(L, \"integral size overflow\");\n      a = a*10 + *((*fmt)++) - '0';\n    } while (isdigit(**fmt));\n    return a;\n  }\n}",
  "abstract_func": "static int getnum (lua_State *VAR_0, const char **VAR_1, int VAR_2) {\n  if (!isdigit(**VAR_1))  /* COMMENT_0 */\n    return VAR_2;  /* COMMENT_1 */\n  else {\n    int VAR_3 = 0;\n    do {\n      if (VAR_3 > (VAR_4 / 10) || VAR_3 * 10 > (VAR_4 - (**VAR_1 - '0')))\n        luaL_error(VAR_0, \"integral size overflow\");\n      VAR_3 = VAR_3*10 + *((*VAR_1)++) - '0';\n    } while (isdigit(**VAR_1));\n    return VAR_3;\n  }\n}",
  "func_graph_path": "redis/ef764dde1cca2f25d00686673d1bc89448819571/lua_struct.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,9 +1,11 @@\n-static int getnum (const char **fmt, int df) {\n+static int getnum (lua_State *L, const char **fmt, int df) {\n   if (!isdigit(**fmt))  /* no number? */\n     return df;  /* return default value */\n   else {\n     int a = 0;\n     do {\n+      if (a > (INT_MAX / 10) || a * 10 > (INT_MAX - (**fmt - '0')))\n+        luaL_error(L, \"integral size overflow\");\n       a = a*10 + *((*fmt)++) - '0';\n     } while (isdigit(**fmt));\n     return a;",
  "diff_line_info": {
    "deleted_lines": [
      "static int getnum (const char **fmt, int df) {"
    ],
    "added_lines": [
      "static int getnum (lua_State *L, const char **fmt, int df) {",
      "      if (a > (INT_MAX / 10) || a * 10 > (INT_MAX - (**fmt - '0')))",
      "        luaL_error(L, \"integral size overflow\");"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/redis/redis/pull/6875",
  "description": {
    "pr_info": {
      "title": "[FIX] revisit CVE-2015-8080 vulnerability",
      "number": 6875
    },
    "comment": [
      "Hi,\r\n\r\nWe discovered that the CVE-2015-8080 vulnerability revisited in the latest version of Redis (5.0.7).\r\n - Initial issue number: **#2855**\r\n - Initial fix commit: **3a47c8cfb85af1b69cccf30eaaa690e4a23ab20a** (Dec. 2015)\r\n\r\nThe vulnerability is from the Lua source code that you already patched in Dec. 2015. \r\nHowever, as a result of the Lua update in May 2018 (commit: 1eb08bcd4634ae42ec45e8284923ac048beaa4c3), the vulnerability patch was removed during the update process.\r\n\r\nAs a result, we successfully reproduce the vulnerability in the latest stable version of Redis using simple PoC provided in issue #2855.\r\n\r\nPlease reflect it after confirmation.\r\nThank you.",
      "Thanks! I'm backporting the fix in the Redis 5 branch."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}