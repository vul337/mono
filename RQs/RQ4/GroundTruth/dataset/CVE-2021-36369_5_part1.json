{
  "cve_id": "CVE-2021-36369",
  "cwe_ids": [
    "CWE-287"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
  "cvss_is_v3": true,
  "repo_name": "mkj/dropbear",
  "commit_msg": "added option to disable trivial auth methods",
  "commit_hash": "7c2e8fcd0d162d2ba9fac116f96a5e82ac77f11c",
  "git_url": "https://github.com/mkj/dropbear/commit/7c2e8fcd0d162d2ba9fac116f96a5e82ac77f11c",
  "file_path": "cli-runopts.c",
  "func_name": "add_extendedopt",
  "func_before": "static void add_extendedopt(const char* origstr) {\n\tconst char *optstr = origstr;\n\n\tif (strcmp(origstr, \"help\") == 0) {\n\t\tdropbear_log(LOG_INFO, \"Available options:\\n\"\n#if DROPBEAR_CLI_ANYTCPFWD\n\t\t\t\"\\tExitOnForwardFailure\\n\"\n#endif\n#ifndef DISABLE_SYSLOG\n\t\t\t\"\\tUseSyslog\\n\"\n#endif\n\t\t\t\"\\tPort\\n\"\n\t\t);\n\t\texit(EXIT_SUCCESS);\n\t}\n\n#if DROPBEAR_CLI_ANYTCPFWD\n\tif (match_extendedopt(&optstr, \"ExitOnForwardFailure\") == DROPBEAR_SUCCESS) {\n\t\tcli_opts.exit_on_fwd_failure = parse_flag_value(optstr);\n\t\treturn;\n\t}\n#endif\n\n#ifndef DISABLE_SYSLOG\n\tif (match_extendedopt(&optstr, \"UseSyslog\") == DROPBEAR_SUCCESS) {\n\t\topts.usingsyslog = parse_flag_value(optstr);\n\t\treturn;\n\t}\n#endif\n\n\tif (match_extendedopt(&optstr, \"Port\") == DROPBEAR_SUCCESS) {\n\t\tcli_opts.remoteport = optstr;\n\t\treturn;\n\t}\n\n\tdropbear_log(LOG_WARNING, \"Ignoring unknown configuration option '%s'\", origstr);\n}",
  "abstract_func_before": "static void add_extendedopt(const char* VAR_0) {\n\tconst char *VAR_1 = VAR_0;\n\n\tif (strcmp(VAR_0, \"help\") == 0) {\n\t\tdropbear_log(VAR_2, \"Available options:\\n\"\n#if VAR_3\n\t\t\t\"\\tExitOnForwardFailure\\n\"\n#endif\n#ifndef VAR_4\n\t\t\t\"\\tUseSyslog\\n\"\n#endif\n\t\t\t\"\\tPort\\n\"\n\t\t);\n\t\texit(VAR_5);\n\t}\n\n#if VAR_3\n\tif (match_extendedopt(&VAR_1, \"ExitOnForwardFailure\") == VAR_6) {\n\t\tVAR_7.exit_on_fwd_failure = parse_flag_value(VAR_1);\n\t\treturn;\n\t}\n#endif\n\n#ifndef VAR_4\n\tif (match_extendedopt(&VAR_1, \"UseSyslog\") == VAR_6) {\n\t\tVAR_8.usingsyslog = parse_flag_value(VAR_1);\n\t\treturn;\n\t}\n#endif\n\n\tif (match_extendedopt(&VAR_1, \"Port\") == VAR_6) {\n\t\tVAR_7.remoteport = VAR_1;\n\t\treturn;\n\t}\n\n\tdropbear_log(VAR_9, \"Ignoring unknown configuration option '%s'\", VAR_0);\n}",
  "func_graph_path_before": "mkj/dropbear/7c2e8fcd0d162d2ba9fac116f96a5e82ac77f11c/cli-runopts.c/vul/before/0.json",
  "func": "static void add_extendedopt(const char* origstr) {\n\tconst char *optstr = origstr;\n\n\tif (strcmp(origstr, \"help\") == 0) {\n\t\tdropbear_log(LOG_INFO, \"Available options:\\n\"\n#if DROPBEAR_CLI_ANYTCPFWD\n\t\t\t\"\\tExitOnForwardFailure\\n\"\n#endif\n\t\t\t\"\\tExitOnTrivialAuth\\n\"\n#ifndef DISABLE_SYSLOG\n\t\t\t\"\\tUseSyslog\\n\"\n#endif\n\t\t\t\"\\tPort\\n\"\n\t\t);\n\t\texit(EXIT_SUCCESS);\n\t}\n\n#if DROPBEAR_CLI_ANYTCPFWD\n\tif (match_extendedopt(&optstr, \"ExitOnForwardFailure\") == DROPBEAR_SUCCESS) {\n\t\tcli_opts.exit_on_fwd_failure = parse_flag_value(optstr);\n\t\treturn;\n\t}\n#endif\n\n#ifndef DISABLE_SYSLOG\n\tif (match_extendedopt(&optstr, \"UseSyslog\") == DROPBEAR_SUCCESS) {\n\t\topts.usingsyslog = parse_flag_value(optstr);\n\t\treturn;\n\t}\n#endif\n\n\tif (match_extendedopt(&optstr, \"Port\") == DROPBEAR_SUCCESS) {\n\t\tcli_opts.remoteport = optstr;\n\t\treturn;\n\t}\n\n\tif (match_extendedopt(&optstr, \"ExitOnTrivialAuth\") == DROPBEAR_SUCCESS) {\n\t\tcli_opts.exit_on_trivial_auth = parse_flag_value(optstr);\n\t\treturn;\n\t}\n\n\tdropbear_log(LOG_WARNING, \"Ignoring unknown configuration option '%s'\", origstr);\n}",
  "abstract_func": "static void add_extendedopt(const char* VAR_0) {\n\tconst char *VAR_1 = VAR_0;\n\n\tif (strcmp(VAR_0, \"help\") == 0) {\n\t\tdropbear_log(VAR_2, \"Available options:\\n\"\n#if VAR_3\n\t\t\t\"\\tExitOnForwardFailure\\n\"\n#endif\n\t\t\t\"\\tExitOnTrivialAuth\\n\"\n#ifndef VAR_4\n\t\t\t\"\\tUseSyslog\\n\"\n#endif\n\t\t\t\"\\tPort\\n\"\n\t\t);\n\t\texit(VAR_5);\n\t}\n\n#if VAR_3\n\tif (match_extendedopt(&VAR_1, \"ExitOnForwardFailure\") == VAR_6) {\n\t\tVAR_7.exit_on_fwd_failure = parse_flag_value(VAR_1);\n\t\treturn;\n\t}\n#endif\n\n#ifndef VAR_4\n\tif (match_extendedopt(&VAR_1, \"UseSyslog\") == VAR_6) {\n\t\tVAR_8.usingsyslog = parse_flag_value(VAR_1);\n\t\treturn;\n\t}\n#endif\n\n\tif (match_extendedopt(&VAR_1, \"Port\") == VAR_6) {\n\t\tVAR_7.remoteport = VAR_1;\n\t\treturn;\n\t}\n\n\tif (match_extendedopt(&VAR_1, \"ExitOnTrivialAuth\") == VAR_6) {\n\t\tVAR_7.exit_on_trivial_auth = parse_flag_value(VAR_1);\n\t\treturn;\n\t}\n\n\tdropbear_log(VAR_9, \"Ignoring unknown configuration option '%s'\", VAR_0);\n}",
  "func_graph_path": "mkj/dropbear/7c2e8fcd0d162d2ba9fac116f96a5e82ac77f11c/cli-runopts.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,6 +6,7 @@\n #if DROPBEAR_CLI_ANYTCPFWD\n \t\t\t\"\\tExitOnForwardFailure\\n\"\n #endif\n+\t\t\t\"\\tExitOnTrivialAuth\\n\"\n #ifndef DISABLE_SYSLOG\n \t\t\t\"\\tUseSyslog\\n\"\n #endif\n@@ -33,5 +34,10 @@\n \t\treturn;\n \t}\n \n+\tif (match_extendedopt(&optstr, \"ExitOnTrivialAuth\") == DROPBEAR_SUCCESS) {\n+\t\tcli_opts.exit_on_trivial_auth = parse_flag_value(optstr);\n+\t\treturn;\n+\t}\n+\n \tdropbear_log(LOG_WARNING, \"Ignoring unknown configuration option '%s'\", origstr);\n }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\t\t\t\"\\tExitOnTrivialAuth\\n\"",
      "\tif (match_extendedopt(&optstr, \"ExitOnTrivialAuth\") == DROPBEAR_SUCCESS) {",
      "\t\tcli_opts.exit_on_trivial_auth = parse_flag_value(optstr);",
      "\t\treturn;",
      "\t}",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/mkj/dropbear/pull/128",
  "description": {
    "pr_info": {
      "title": "added option to disable trivial auth methods",
      "number": 128
    },
    "comment": [
      "I have added an option ``-o ExitOnTrivialAuth=yes`` to disable trivial authentications as discussed in our mails",
      "I have renamed to argument to ``-o DisableTrivialAuth=yes`` to match OpenSSH's parameter",
      "Would you merge this pull request, because we are planning to create a CVE and I think this should be mitigated before we publish a full disclosure. ",
      "Hello, we are planning to release information about trivial succes authentication. Do you need help with merging the pull requests and creating the new release?"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.6,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.6\n\n**Step-by-Step Explanation:**\n\n1. **Input Analysis:** The commit introduces an option to disable trivial authentication methods, which are potentially insecure.\n2. **Consistency Check:** The code changes align with the commit message, adding a new option and handling it appropriately.\n3. **Purpose Evaluation:** The change aims to enhance security by allowing the disabling of trivial auth methods, modifying core authentication logic.\n4. **Security Assessment:** While it doesn't reference aCVE/CWE, disabling trivial auth could mitigate security risks, thus being a security fix.\n5. **Confidence Scoring:** Assigned 0.6 because the intent is security-related, but without a specific vulnerability reference.\n\n**Decision:** The patch addresses a potential security risk by adding an option to disable insecure auth methods, qualifying it as a security fix despite the lack of explicit CVE reference."
}