{
  "cve_id": "CVE-2021-25939",
  "cwe_ids": [
    "CWE-918"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "arangodb",
  "commit_msg": "[APM-78] Disable installation from remote URL (#15292) (#15343)\n\n* [APM-78] Disable installation from remote URL (#15292)\r\n\r\n* Update CHANGELOG\r\n\r\n* Fix clang-format\r\n\r\nCo-authored-by: Vadim <vadim@arangodb.com>",
  "commit_hash": "d7b35a6884c6b2802d34d79fb2a79fb2c9ec2175",
  "git_url": "https://github.com/arangodb/arangodb/commit/d7b35a6884c6b2802d34d79fb2a79fb2c9ec2175",
  "file_path": "arangod/V8Server/v8-actions.cpp",
  "func_name": "TRI_InitV8ServerUtils",
  "func_before": "void TRI_InitV8ServerUtils(v8::Isolate* isolate) {\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_CLUSTER_API_JWT_POLICY\"),\n      JS_ClusterApiJwtPolicy, true);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_IS_FOXX_API_DISABLED\"),\n      JS_IsFoxxApiDisabled, true);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_IS_FOXX_STORE_DISABLED\"),\n      JS_IsFoxxStoreDisabled, true);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_RUN_IN_RESTRICTED_CONTEXT\"),\n      JS_RunInRestrictedContext, true);\n\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_CREATE_HOTBACKUP\"),\n      JS_CreateHotbackup);\n\n  // debugging functions\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_DEBUG_CLEAR_FAILAT\"),\n      JS_DebugClearFailAt);\n\n#ifdef ARANGODB_ENABLE_FAILURE_TESTS\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_DEBUG_TERMINATE\"),\n      JS_DebugTerminate);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_DEBUG_SET_FAILAT\"),\n      JS_DebugSetFailAt);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_DEBUG_REMOVE_FAILAT\"),\n      JS_DebugRemoveFailAt);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_DEBUG_SHOULD_FAILAT\"),\n      JS_DebugShouldFailAt);\n#endif\n\n  // poll interval for Foxx queues\n  TRI_GET_GLOBALS();\n  FoxxFeature& foxxFeature = v8g->_server.getFeature<FoxxFeature>();\n\n  isolate->GetCurrentContext()\n      ->Global()\n      ->DefineOwnProperty(\n          TRI_IGETC, TRI_V8_ASCII_STRING(isolate, \"FOXX_QUEUES_POLL_INTERVAL\"),\n          v8::Number::New(isolate, foxxFeature.pollInterval()), v8::ReadOnly)\n      .FromMaybe(false);  // ignore result\n\n  isolate->GetCurrentContext()\n      ->Global()\n      ->DefineOwnProperty(\n          TRI_IGETC,\n          TRI_V8_ASCII_STRING(isolate, \"FOXX_STARTUP_WAIT_FOR_SELF_HEAL\"),\n          v8::Boolean::New(isolate, foxxFeature.startupWaitForSelfHeal()),\n          v8::ReadOnly)\n      .FromMaybe(false);  // ignore result\n}",
  "abstract_func_before": "void TRI_InitV8ServerUtils(v8::Isolate* VAR_0) {\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_CLUSTER_API_JWT_POLICY\"),\n      VAR_1, true);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_IS_FOXX_API_DISABLED\"),\n      VAR_2, true);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_IS_FOXX_STORE_DISABLED\"),\n      VAR_3, true);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_RUN_IN_RESTRICTED_CONTEXT\"),\n      VAR_4, true);\n\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_CREATE_HOTBACKUP\"),\n      VAR_5);\n\n  /* COMMENT_0 */\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_DEBUG_CLEAR_FAILAT\"),\n      VAR_6);\n\n#ifdef VAR_7\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_DEBUG_TERMINATE\"),\n      VAR_8);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_DEBUG_SET_FAILAT\"),\n      VAR_9);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_DEBUG_REMOVE_FAILAT\"),\n      VAR_10);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_DEBUG_SHOULD_FAILAT\"),\n      VAR_11);\n#endif\n\n  /* COMMENT_1 */\n  TRI_GET_GLOBALS();\n  FoxxFeature& VAR_12 = VAR_13->_server.getFeature<FoxxFeature>();\n\n  VAR_0->GetCurrentContext()\n      ->Global()\n      ->DefineOwnProperty(\n          VAR_14, TRI_V8_ASCII_STRING(VAR_0, \"FOXX_QUEUES_POLL_INTERVAL\"),\n          v8::Number::New(VAR_0, VAR_12.pollInterval()), v8::ReadOnly)\n      .FromMaybe(false);  /* COMMENT_2 */\n\n  VAR_0->GetCurrentContext()\n      ->Global()\n      ->DefineOwnProperty(\n          VAR_14,\n          TRI_V8_ASCII_STRING(VAR_0, \"FOXX_STARTUP_WAIT_FOR_SELF_HEAL\"),\n          v8::Boolean::New(VAR_0, VAR_12.startupWaitForSelfHeal()),\n          v8::ReadOnly)\n      .FromMaybe(false);  /* COMMENT_2 */\n}",
  "func_graph_path_before": "arangodb/d7b35a6884c6b2802d34d79fb2a79fb2c9ec2175/v8-actions.cpp/vul/before/0.json",
  "func": "void TRI_InitV8ServerUtils(v8::Isolate* isolate) {\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_CLUSTER_API_JWT_POLICY\"),\n      JS_ClusterApiJwtPolicy, true);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_IS_FOXX_API_DISABLED\"),\n      JS_IsFoxxApiDisabled, true);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_IS_FOXX_STORE_DISABLED\"),\n      JS_IsFoxxStoreDisabled, true);\n  TRI_AddGlobalFunctionVocbase(\n      isolate,\n      TRI_V8_ASCII_STRING(isolate, \"SYS_FOXX_ALLOW_INSTALL_FROM_REMOTE\"),\n      JS_FoxxAllowInstallFromRemote, true);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_RUN_IN_RESTRICTED_CONTEXT\"),\n      JS_RunInRestrictedContext, true);\n\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_CREATE_HOTBACKUP\"),\n      JS_CreateHotbackup);\n\n  // debugging functions\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_DEBUG_CLEAR_FAILAT\"),\n      JS_DebugClearFailAt);\n\n#ifdef ARANGODB_ENABLE_FAILURE_TESTS\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_DEBUG_TERMINATE\"),\n      JS_DebugTerminate);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_DEBUG_SET_FAILAT\"),\n      JS_DebugSetFailAt);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_DEBUG_REMOVE_FAILAT\"),\n      JS_DebugRemoveFailAt);\n  TRI_AddGlobalFunctionVocbase(\n      isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_DEBUG_SHOULD_FAILAT\"),\n      JS_DebugShouldFailAt);\n#endif\n\n  // poll interval for Foxx queues\n  TRI_GET_GLOBALS();\n  FoxxFeature& foxxFeature = v8g->_server.getFeature<FoxxFeature>();\n\n  isolate->GetCurrentContext()\n      ->Global()\n      ->DefineOwnProperty(\n          TRI_IGETC, TRI_V8_ASCII_STRING(isolate, \"FOXX_QUEUES_POLL_INTERVAL\"),\n          v8::Number::New(isolate, foxxFeature.pollInterval()), v8::ReadOnly)\n      .FromMaybe(false);  // ignore result\n\n  isolate->GetCurrentContext()\n      ->Global()\n      ->DefineOwnProperty(\n          TRI_IGETC,\n          TRI_V8_ASCII_STRING(isolate, \"FOXX_STARTUP_WAIT_FOR_SELF_HEAL\"),\n          v8::Boolean::New(isolate, foxxFeature.startupWaitForSelfHeal()),\n          v8::ReadOnly)\n      .FromMaybe(false);  // ignore result\n}",
  "abstract_func": "void TRI_InitV8ServerUtils(v8::Isolate* VAR_0) {\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_CLUSTER_API_JWT_POLICY\"),\n      VAR_1, true);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_IS_FOXX_API_DISABLED\"),\n      VAR_2, true);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_IS_FOXX_STORE_DISABLED\"),\n      VAR_3, true);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0,\n      TRI_V8_ASCII_STRING(VAR_0, \"SYS_FOXX_ALLOW_INSTALL_FROM_REMOTE\"),\n      VAR_4, true);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_RUN_IN_RESTRICTED_CONTEXT\"),\n      VAR_5, true);\n\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_CREATE_HOTBACKUP\"),\n      VAR_6);\n\n  /* COMMENT_0 */\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_DEBUG_CLEAR_FAILAT\"),\n      VAR_7);\n\n#ifdef VAR_8\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_DEBUG_TERMINATE\"),\n      VAR_9);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_DEBUG_SET_FAILAT\"),\n      VAR_10);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_DEBUG_REMOVE_FAILAT\"),\n      VAR_11);\n  TRI_AddGlobalFunctionVocbase(\n      VAR_0, TRI_V8_ASCII_STRING(VAR_0, \"SYS_DEBUG_SHOULD_FAILAT\"),\n      VAR_12);\n#endif\n\n  /* COMMENT_1 */\n  TRI_GET_GLOBALS();\n  FoxxFeature& VAR_13 = VAR_14->_server.getFeature<FoxxFeature>();\n\n  VAR_0->GetCurrentContext()\n      ->Global()\n      ->DefineOwnProperty(\n          VAR_15, TRI_V8_ASCII_STRING(VAR_0, \"FOXX_QUEUES_POLL_INTERVAL\"),\n          v8::Number::New(VAR_0, VAR_13.pollInterval()), v8::ReadOnly)\n      .FromMaybe(false);  /* COMMENT_2 */\n\n  VAR_0->GetCurrentContext()\n      ->Global()\n      ->DefineOwnProperty(\n          VAR_15,\n          TRI_V8_ASCII_STRING(VAR_0, \"FOXX_STARTUP_WAIT_FOR_SELF_HEAL\"),\n          v8::Boolean::New(VAR_0, VAR_13.startupWaitForSelfHeal()),\n          v8::ReadOnly)\n      .FromMaybe(false);  /* COMMENT_2 */\n}",
  "func_graph_path": "arangodb/d7b35a6884c6b2802d34d79fb2a79fb2c9ec2175/v8-actions.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -8,6 +8,10 @@\n   TRI_AddGlobalFunctionVocbase(\n       isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_IS_FOXX_STORE_DISABLED\"),\n       JS_IsFoxxStoreDisabled, true);\n+  TRI_AddGlobalFunctionVocbase(\n+      isolate,\n+      TRI_V8_ASCII_STRING(isolate, \"SYS_FOXX_ALLOW_INSTALL_FROM_REMOTE\"),\n+      JS_FoxxAllowInstallFromRemote, true);\n   TRI_AddGlobalFunctionVocbase(\n       isolate, TRI_V8_ASCII_STRING(isolate, \"SYS_RUN_IN_RESTRICTED_CONTEXT\"),\n       JS_RunInRestrictedContext, true);",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "  TRI_AddGlobalFunctionVocbase(",
      "      isolate,",
      "      TRI_V8_ASCII_STRING(isolate, \"SYS_FOXX_ALLOW_INSTALL_FROM_REMOTE\"),",
      "      JS_FoxxAllowInstallFromRemote, true);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/arangodb/arangodb/pull/15343",
  "description": {
    "pr_info": {
      "title": "[APM-78] Disable installation from remote URL (#15292)",
      "number": 15343
    },
    "comment": [
      "### Scope & Purpose\r\n\r\nBackport of https://github.com/arangodb/arangodb/pull/15292\r\n\r\nhttps://arangodb.atlassian.net/browse/APM-78\r\n\r\nDocs PR: https://github.com/arangodb/docs/pull/838\r\nDisable installation of Foxx apps from remote URLs by default.\r\nThis is a potential security issue and is now an opt-in functionality.\r\n\r\nThe new startup option `--foxx.allow-install-from-remote` can be used to toggle whether installing Foxx apps from remote URLs other than Github is allowed. The option is turned off by default. If it is disabled, the web UI will not offer the \"Remote\" tab for installing Foxx services.\r\n\r\n- [x] :hankey: Bugfix (requires CHANGELOG entry)\r\n- [ ] :pizza: New feature (requires CHANGELOG entry, feature documentation and release notes)\r\n- [ ] :fire: Performance improvement\r\n- [ ] :hammer: Refactoring/simplification\r\n- [x] :book: CHANGELOG entry made\r\n\r\n#### Backports:\r\n\r\n- [x] Backport for 3.8: https://github.com/arangodb/arangodb/pull/15344\r\n\r\n#### Related Information\r\n\r\n- [x] Docs PR: https://github.com/arangodb/docs/pull/838\r\n\r\n### Testing & Verification\r\n\r\n- [x] The behavior in this PR was *manually tested*\r\n- [ ] This change is already covered by existing tests, such as *(please describe tests)*.\r\n- [x] This PR adds tests that were used to verify all changes:\r\n  - [x] Added new **integration tests** (server_parameters)\r\n",
      "Tests blue"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "The commit aims to disable remote installation of Foxx apps as a security measure, and the code adds a function to support this feature. Both the message and code are consistent, indicating it's a security fix.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}