{
  "cve_id": "CVE-2020-15166",
  "cwe_ids": [
    "CWE-400"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "zeromq/libzmq",
  "commit_msg": "Problem: test_security_zap occasionally segfaults\n\nSolution: check if a session's _pipe has been allocated before using\nit, since as a consequence of creating the pipes after the handshake\nit's no longer guaranteed to be there.\n\nFixes #3971",
  "commit_hash": "350b4b34f460b91b8fa8f692cf6bc30d561a5711",
  "git_url": "https://github.com/zeromq/libzmq/commit/350b4b34f460b91b8fa8f692cf6bc30d561a5711",
  "file_path": "src/session_base.cpp",
  "func_name": "zmq::session_base_t::read_activated",
  "func_before": "void zmq::session_base_t::read_activated (pipe_t *pipe_)\n{\n    // Skip activating if we're detaching this pipe\n    if (unlikely (pipe_ != _pipe && pipe_ != _zap_pipe)) {\n        zmq_assert (_terminating_pipes.count (pipe_) == 1);\n        return;\n    }\n\n    if (unlikely (_engine == NULL)) {\n        _pipe->check_read ();\n        return;\n    }\n\n    if (likely (pipe_ == _pipe))\n        _engine->restart_output ();\n    else {\n        // i.e. pipe_ == zap_pipe\n        _engine->zap_msg_available ();\n    }\n}",
  "abstract_func_before": "void zmq::session_base_t::read_activated (pipe_t *VAR_0)\n{\n    /* COMMENT_0 */\n    if (unlikely (VAR_0 != VAR_1 && VAR_0 != VAR_2)) {\n        zmq_assert (VAR_3.count (VAR_0) == 1);\n        return;\n    }\n\n    if (unlikely (VAR_4 == NULL)) {\n        VAR_1->check_read ();\n        return;\n    }\n\n    if (likely (VAR_0 == VAR_1))\n        VAR_4->restart_output ();\n    else {\n        /* COMMENT_1 */\n        VAR_4->zap_msg_available ();\n    }\n}",
  "func_graph_path_before": "zeromq/libzmq/350b4b34f460b91b8fa8f692cf6bc30d561a5711/session_base.cpp/vul/before/0.json",
  "func": "void zmq::session_base_t::read_activated (pipe_t *pipe_)\n{\n    // Skip activating if we're detaching this pipe\n    if (unlikely (pipe_ != _pipe && pipe_ != _zap_pipe)) {\n        zmq_assert (_terminating_pipes.count (pipe_) == 1);\n        return;\n    }\n\n    if (unlikely (_engine == NULL)) {\n        if (_pipe)\n            _pipe->check_read ();\n        return;\n    }\n\n    if (likely (pipe_ == _pipe))\n        _engine->restart_output ();\n    else {\n        // i.e. pipe_ == zap_pipe\n        _engine->zap_msg_available ();\n    }\n}",
  "abstract_func": "void zmq::session_base_t::read_activated (pipe_t *VAR_0)\n{\n    /* COMMENT_0 */\n    if (unlikely (VAR_0 != VAR_1 && VAR_0 != VAR_2)) {\n        zmq_assert (VAR_3.count (VAR_0) == 1);\n        return;\n    }\n\n    if (unlikely (VAR_4 == NULL)) {\n        if (VAR_1)\n            VAR_1->check_read ();\n        return;\n    }\n\n    if (likely (VAR_0 == VAR_1))\n        VAR_4->restart_output ();\n    else {\n        /* COMMENT_1 */\n        VAR_4->zap_msg_available ();\n    }\n}",
  "func_graph_path": "zeromq/libzmq/350b4b34f460b91b8fa8f692cf6bc30d561a5711/session_base.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,7 +7,8 @@\n     }\n \n     if (unlikely (_engine == NULL)) {\n-        _pipe->check_read ();\n+        if (_pipe)\n+            _pipe->check_read ();\n         return;\n     }\n ",
  "diff_line_info": {
    "deleted_lines": [
      "        _pipe->check_read ();"
    ],
    "added_lines": [
      "        if (_pipe)",
      "            _pipe->check_read ();"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/zeromq/libzmq/pull/3973",
  "description": {
    "pr_info": {
      "title": "Problem: test_security_zap occasionally segfaults",
      "number": 3973
    },
    "comment": [
      "Solution: check if a session's _pipe has been allocated before using\r\nit, since as a consequence of creating the pipes after the handshake\r\nit's no longer guaranteed to be there.\r\n\r\nFixes #3971",
      "@somdoron does this one makes sense?"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.7"
}