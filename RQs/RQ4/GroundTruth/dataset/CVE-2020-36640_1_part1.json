{
  "cve_id": "CVE-2020-36640",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "AV:A/AC:M/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "bonitasoft/bonita-connector-webservice",
  "commit_msg": "fix(vulnerabilities): fix XXE attacks vulnerabilities and other code smell (#17)\n\n* Access to external entities and network access should always be\r\ndisable to avoid XXS attacks vulnerabilities.\r\n* Log error properly\r\n* refactor logger name to be compliant with java naming conventions",
  "commit_hash": "a12ad691c05af19e9061d7949b6b828ce48815d5",
  "git_url": "https://github.com/bonitasoft/bonita-connector-webservice/commit/a12ad691c05af19e9061d7949b6b828ce48815d5",
  "file_path": "src/main/java/org/bonitasoft/connectors/ws/SecureWSConnector.java",
  "func_name": "printRequestAndResponse",
  "func_before": "private void printRequestAndResponse(Source sourceResponse, boolean buildResponseDocumentEnvelope,\n            boolean buildResponseDocumentBody,\n            Document responseDocumentEnvelope, Document responseDocumentBody) {\n        try {\n            getTransformer().transform(sourceResponse, new StreamResult(System.err));\n            if (buildResponseDocumentEnvelope) {\n                getTransformer().transform(new DOMSource(responseDocumentEnvelope), new StreamResult(System.err));\n            } else if (buildResponseDocumentBody) {\n                getTransformer().transform(new DOMSource(responseDocumentEnvelope), new StreamResult(System.err));\n                getTransformer().transform(new DOMSource(responseDocumentBody), new StreamResult(System.err));\n            }\n        } catch (final TransformerException e) {\n            e.printStackTrace();\n        }\n    }",
  "abstract_func_before": "private void printRequestAndResponse(Source VAR_0, boolean VAR_1,\n            boolean VAR_2,\n            Document VAR_3, Document VAR_4) {\n        try {\n            getTransformer().transform(VAR_0, new StreamResult(VAR_5.err));\n            if (VAR_1) {\n                getTransformer().transform(new DOMSource(VAR_3), new StreamResult(VAR_5.err));\n            } else if (VAR_2) {\n                getTransformer().transform(new DOMSource(VAR_3), new StreamResult(VAR_5.err));\n                getTransformer().transform(new DOMSource(VAR_4), new StreamResult(VAR_5.err));\n            }\n        } catch (final TransformerException VAR_6) {\n            VAR_6.printStackTrace();\n        }\n    }",
  "func_graph_path_before": "bonitasoft/bonita-connector-webservice/a12ad691c05af19e9061d7949b6b828ce48815d5/SecureWSConnector.java/vul/before/2.json",
  "func": "private void printRequestAndResponse(Source sourceResponse, boolean buildResponseDocumentEnvelope,\n            boolean buildResponseDocumentBody,\n            Document responseDocumentEnvelope, Document responseDocumentBody) {\n        try {\n            getTransformer().transform(sourceResponse, new StreamResult(System.err));\n            if (buildResponseDocumentEnvelope) {\n                getTransformer().transform(new DOMSource(responseDocumentEnvelope), new StreamResult(System.err));\n            } else if (buildResponseDocumentBody) {\n                getTransformer().transform(new DOMSource(responseDocumentEnvelope), new StreamResult(System.err));\n                getTransformer().transform(new DOMSource(responseDocumentBody), new StreamResult(System.err));\n            }\n        } catch (final TransformerException e) {\n            logger.severe(e.getMessage());\n        }\n    }",
  "abstract_func": "private void printRequestAndResponse(Source VAR_0, boolean VAR_1,\n            boolean VAR_2,\n            Document VAR_3, Document VAR_4) {\n        try {\n            getTransformer().transform(VAR_0, new StreamResult(VAR_5.err));\n            if (VAR_1) {\n                getTransformer().transform(new DOMSource(VAR_3), new StreamResult(VAR_5.err));\n            } else if (VAR_2) {\n                getTransformer().transform(new DOMSource(VAR_3), new StreamResult(VAR_5.err));\n                getTransformer().transform(new DOMSource(VAR_4), new StreamResult(VAR_5.err));\n            }\n        } catch (final TransformerException VAR_6) {\n            VAR_7.severe(VAR_6.getMessage());\n        }\n    }",
  "func_graph_path": "bonitasoft/bonita-connector-webservice/a12ad691c05af19e9061d7949b6b828ce48815d5/SecureWSConnector.java/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -10,6 +10,6 @@\n                 getTransformer().transform(new DOMSource(responseDocumentBody), new StreamResult(System.err));\n             }\n         } catch (final TransformerException e) {\n-            e.printStackTrace();\n+            logger.severe(e.getMessage());\n         }\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "            e.printStackTrace();"
    ],
    "added_lines": [
      "            logger.severe(e.getMessage());"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/bonitasoft/bonita-connector-webservice/pull/17",
  "description": {
    "pr_info": {
      "title": "fix(vulnerabilities): fix XXE attacks vulnerabilities and other code smell",
      "number": 17
    },
    "comment": [
      "* Access to external entities and network access should always be\r\ndisable to avoid XXS attacks vulnerabilities.",
      "SonarCloud Quality Gate failed.\n\n[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=BUG)  \n[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=SECURITY_HOTSPOT) to review)  \n[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=bonitasoft_bonita-connector-webservice&pullRequest=17&resolved=false&types=CODE_SMELL)\n\n[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/60.png' alt='68.8%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bonitasoft_bonita-connector-webservice&pullRequest=17&metric=new_coverage&view=list) [68.8% Coverage](https://sonarcloud.io/component_measures?id=bonitasoft_bonita-connector-webservice&pullRequest=17&metric=new_coverage&view=list)  \n[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3.png' alt='0.0%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bonitasoft_bonita-connector-webservice&pullRequest=17&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=bonitasoft_bonita-connector-webservice&pullRequest=17&metric=new_duplicated_lines_density&view=list)\n\n<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/message_warning.png' alt='warning' width='16' height='16' /> The version of Java (1.8.0_265) you have used to run this analysis is deprecated and we will stop accepting it from October 2020. Please update to at least Java 11.\nRead more [here](https://sonarcloud.io/documentation/upcoming/)\n\n\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Analysis:**\n\nThe patch addresses logging improvements and refactorings, not the XXE vulnerability mentioned. The commit message suggests a security fix, but the code changes don't directly tackle XXE.\n\n**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.7"
}