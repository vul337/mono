{
  "cve_id": "CVE-2022-1809",
  "cwe_ids": [
    "CWE-824"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix crash in vtable analysis on UB ##crash\n\n* Reported by @greatergoodest via huntrdev\n* BountyID 0730a95e-c485-4ff2-9a5d-bb3abfda0b17\n* Reproducer: minified_crash",
  "commit_hash": "919e3ac1a13f753c73e7a8e8d8bb4a143218732d",
  "git_url": "https://github.com/radareorg/radare2/commit/919e3ac1a13f753c73e7a8e8d8bb4a143218732d",
  "file_path": "libr/anal/vtable.c",
  "func_name": "vtable_is_addr_vtable_start_msvc",
  "func_before": "static bool vtable_is_addr_vtable_start_msvc(RVTableContext *context, ut64 curAddress) {\n\tRAnalRef *xref;\n\tRListIter *xrefIter;\n\n\tif (!curAddress || curAddress == UT64_MAX) {\n\t\treturn false;\n\t}\n\tif (curAddress && !vtable_is_value_in_text_section (context, curAddress, NULL)) {\n\t\treturn false;\n\t}\n\t// total xref's to curAddress\n\tRList *xrefs = r_anal_xrefs_get (context->anal, curAddress);\n\tif (r_list_empty (xrefs)) {\n\t\tr_list_free (xrefs);\n\t\treturn false;\n\t}\n\tr_list_foreach (xrefs, xrefIter, xref) {\n\t\t// section in which currenct xref lies\n\t\tif (vtable_addr_in_text_section (context, xref->addr)) {\n\t\t\tut8 buf[VTABLE_BUFF_SIZE];\n\t\t\tcontext->anal->iob.read_at (context->anal->iob.io, xref->addr, buf, sizeof(buf));\n\n\t\t\tRAnalOp analop = {0};\n\t\t\tr_anal_op (context->anal, &analop, xref->addr, buf, sizeof(buf), R_ANAL_OP_MASK_BASIC);\n\n\t\t\tif (analop.type == R_ANAL_OP_TYPE_MOV\n\t\t\t\t|| analop.type == R_ANAL_OP_TYPE_LEA) {\n\t\t\t\tr_list_free (xrefs);\n\t\t\t\tr_anal_op_fini (&analop);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tr_anal_op_fini (&analop);\n\t\t}\n\t}\n\tr_list_free (xrefs);\n\treturn false;\n}",
  "abstract_func_before": "static bool vtable_is_addr_vtable_start_msvc(RVTableContext *VAR_0, ut64 VAR_1) {\n\tRAnalRef *VAR_2;\n\tRListIter *VAR_3;\n\n\tif (!VAR_1 || VAR_1 == VAR_4) {\n\t\treturn false;\n\t}\n\tif (VAR_1 && !vtable_is_value_in_text_section (VAR_0, VAR_1, NULL)) {\n\t\treturn false;\n\t}\n\t/* COMMENT_0 */\n\tRList *VAR_5 = r_anal_xrefs_get (VAR_0->anal, VAR_1);\n\tif (r_list_empty (VAR_5)) {\n\t\tr_list_free (VAR_5);\n\t\treturn false;\n\t}\n\tr_list_foreach (VAR_5, VAR_3, VAR_2) {\n\t\t/* COMMENT_1 */\n\t\tif (vtable_addr_in_text_section (VAR_0, VAR_2->addr)) {\n\t\t\tut8 VAR_6[VAR_7];\n\t\t\tVAR_0->anal->iob.read_at (VAR_0->anal->iob.io, VAR_2->addr, VAR_6, sizeof(VAR_6));\n\n\t\t\tRAnalOp VAR_8 = {0};\n\t\t\tr_anal_op (VAR_0->anal, &VAR_8, VAR_2->addr, VAR_6, sizeof(VAR_6), VAR_9);\n\n\t\t\tif (VAR_8.type == VAR_10\n\t\t\t\t|| VAR_8.type == VAR_11) {\n\t\t\t\tr_list_free (VAR_5);\n\t\t\t\tr_anal_op_fini (&VAR_8);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tr_anal_op_fini (&VAR_8);\n\t\t}\n\t}\n\tr_list_free (VAR_5);\n\treturn false;\n}",
  "func_graph_path_before": "radareorg/radare2/919e3ac1a13f753c73e7a8e8d8bb4a143218732d/vtable.c/vul/before/1.json",
  "func": "static bool vtable_is_addr_vtable_start_msvc(RVTableContext *context, ut64 curAddress) {\n\tut8 buf[VTABLE_BUFF_SIZE];\n\tRAnalRef *xref;\n\tRListIter *xrefIter;\n\n\tif (!curAddress || curAddress == UT64_MAX) {\n\t\treturn false;\n\t}\n\tif (curAddress && !vtable_is_value_in_text_section (context, curAddress, NULL)) {\n\t\treturn false;\n\t}\n\t// total xref's to curAddress\n\tRList *xrefs = r_anal_xrefs_get (context->anal, curAddress);\n\tif (r_list_empty (xrefs)) {\n\t\tr_list_free (xrefs);\n\t\treturn false;\n\t}\n\tr_list_foreach (xrefs, xrefIter, xref) {\n\t\t// section in which currenct xref lies\n\t\tif (vtable_addr_in_text_section (context, xref->addr)) {\n\t\t\tcontext->anal->iob.read_at (context->anal->iob.io, xref->addr, buf, sizeof (buf));\n\t\t\tRAnalOp analop = {0};\n\t\t\tr_anal_op (context->anal, &analop, xref->addr, buf, sizeof (buf), R_ANAL_OP_MASK_BASIC);\n\t\t\tif (analop.type == R_ANAL_OP_TYPE_MOV || analop.type == R_ANAL_OP_TYPE_LEA) {\n\t\t\t\tr_list_free (xrefs);\n\t\t\t\tr_anal_op_fini (&analop);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tr_anal_op_fini (&analop);\n\t\t}\n\t}\n\tr_list_free (xrefs);\n\treturn false;\n}",
  "abstract_func": "static bool vtable_is_addr_vtable_start_msvc(RVTableContext *VAR_0, ut64 VAR_1) {\n\tut8 VAR_2[VAR_3];\n\tRAnalRef *VAR_4;\n\tRListIter *VAR_5;\n\n\tif (!VAR_1 || VAR_1 == VAR_6) {\n\t\treturn false;\n\t}\n\tif (VAR_1 && !vtable_is_value_in_text_section (VAR_0, VAR_1, NULL)) {\n\t\treturn false;\n\t}\n\t/* COMMENT_0 */\n\tRList *VAR_7 = r_anal_xrefs_get (VAR_0->anal, VAR_1);\n\tif (r_list_empty (VAR_7)) {\n\t\tr_list_free (VAR_7);\n\t\treturn false;\n\t}\n\tr_list_foreach (VAR_7, VAR_5, VAR_4) {\n\t\t/* COMMENT_1 */\n\t\tif (vtable_addr_in_text_section (VAR_0, VAR_4->addr)) {\n\t\t\tVAR_0->anal->iob.read_at (VAR_0->anal->iob.io, VAR_4->addr, VAR_2, sizeof (VAR_2));\n\t\t\tRAnalOp VAR_8 = {0};\n\t\t\tr_anal_op (VAR_0->anal, &VAR_8, VAR_4->addr, VAR_2, sizeof (VAR_2), VAR_9);\n\t\t\tif (VAR_8.type == VAR_10 || VAR_8.type == VAR_11) {\n\t\t\t\tr_list_free (VAR_7);\n\t\t\t\tr_anal_op_fini (&VAR_8);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tr_anal_op_fini (&VAR_8);\n\t\t}\n\t}\n\tr_list_free (VAR_7);\n\treturn false;\n}",
  "func_graph_path": "radareorg/radare2/919e3ac1a13f753c73e7a8e8d8bb4a143218732d/vtable.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,5 @@\n static bool vtable_is_addr_vtable_start_msvc(RVTableContext *context, ut64 curAddress) {\n+\tut8 buf[VTABLE_BUFF_SIZE];\n \tRAnalRef *xref;\n \tRListIter *xrefIter;\n \n@@ -17,19 +18,14 @@\n \tr_list_foreach (xrefs, xrefIter, xref) {\n \t\t// section in which currenct xref lies\n \t\tif (vtable_addr_in_text_section (context, xref->addr)) {\n-\t\t\tut8 buf[VTABLE_BUFF_SIZE];\n-\t\t\tcontext->anal->iob.read_at (context->anal->iob.io, xref->addr, buf, sizeof(buf));\n-\n+\t\t\tcontext->anal->iob.read_at (context->anal->iob.io, xref->addr, buf, sizeof (buf));\n \t\t\tRAnalOp analop = {0};\n-\t\t\tr_anal_op (context->anal, &analop, xref->addr, buf, sizeof(buf), R_ANAL_OP_MASK_BASIC);\n-\n-\t\t\tif (analop.type == R_ANAL_OP_TYPE_MOV\n-\t\t\t\t|| analop.type == R_ANAL_OP_TYPE_LEA) {\n+\t\t\tr_anal_op (context->anal, &analop, xref->addr, buf, sizeof (buf), R_ANAL_OP_MASK_BASIC);\n+\t\t\tif (analop.type == R_ANAL_OP_TYPE_MOV || analop.type == R_ANAL_OP_TYPE_LEA) {\n \t\t\t\tr_list_free (xrefs);\n \t\t\t\tr_anal_op_fini (&analop);\n \t\t\t\treturn true;\n \t\t\t}\n-\n \t\t\tr_anal_op_fini (&analop);\n \t\t}\n \t}",
  "diff_line_info": {
    "deleted_lines": [
      "\t\t\tut8 buf[VTABLE_BUFF_SIZE];",
      "\t\t\tcontext->anal->iob.read_at (context->anal->iob.io, xref->addr, buf, sizeof(buf));",
      "",
      "\t\t\tr_anal_op (context->anal, &analop, xref->addr, buf, sizeof(buf), R_ANAL_OP_MASK_BASIC);",
      "",
      "\t\t\tif (analop.type == R_ANAL_OP_TYPE_MOV",
      "\t\t\t\t|| analop.type == R_ANAL_OP_TYPE_LEA) {",
      ""
    ],
    "added_lines": [
      "\tut8 buf[VTABLE_BUFF_SIZE];",
      "\t\t\tcontext->anal->iob.read_at (context->anal->iob.io, xref->addr, buf, sizeof (buf));",
      "\t\t\tr_anal_op (context->anal, &analop, xref->addr, buf, sizeof (buf), R_ANAL_OP_MASK_BASIC);",
      "\t\t\tif (analop.type == R_ANAL_OP_TYPE_MOV || analop.type == R_ANAL_OP_TYPE_LEA) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/20146",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/radareorg/radare2/pull/20146: 403 Client Error: Forbidden for url: https://api.github.com/repos/radareorg/radare2/issues/20146/comments",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.9"
}