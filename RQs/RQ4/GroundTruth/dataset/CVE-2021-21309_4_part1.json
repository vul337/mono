{
  "cve_id": "CVE-2021-21309",
  "cwe_ids": [
    "CWE-190"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "redis",
  "commit_msg": "Fix integer overflow (CVE-2021-21309). (#8522)\n\nOn 32-bit systems, setting the proto-max-bulk-len config parameter to a high value may result with integer overflow and a subsequent heap overflow when parsing an input bulk (CVE-2021-21309).\n\nThis fix has two parts:\n\nSet a reasonable limit to the config parameter.\nAdd additional checks to prevent the problem in other potential but unknown code paths.\n\n(cherry picked from commit d32f2e9999ce003bad0bd2c3bca29f64dcce4433)",
  "commit_hash": "c992857618db99776917f10bf4f2345a5fdc78b0",
  "git_url": "https://github.com/redis/redis/commit/c992857618db99776917f10bf4f2345a5fdc78b0",
  "file_path": "src/zmalloc.c",
  "func_name": "zmalloc_no_tcache",
  "func_before": "void *zmalloc_no_tcache(size_t size) {\n    void *ptr = mallocx(size+PREFIX_SIZE, MALLOCX_TCACHE_NONE);\n    if (!ptr) zmalloc_oom_handler(size);\n    update_zmalloc_stat_alloc(zmalloc_size(ptr));\n    return ptr;\n}",
  "abstract_func_before": "void *zmalloc_no_tcache(size_t VAR_0) {\n    void *VAR_1 = mallocx(VAR_0+VAR_2, VAR_3);\n    if (!VAR_1) zmalloc_oom_handler(VAR_0);\n    update_zmalloc_stat_alloc(zmalloc_size(VAR_1));\n    return VAR_1;\n}",
  "func_graph_path_before": "redis/c992857618db99776917f10bf4f2345a5fdc78b0/zmalloc.c/vul/before/3.json",
  "func": "void *zmalloc_no_tcache(size_t size) {\n    ASSERT_NO_SIZE_OVERFLOW(size);\n    void *ptr = mallocx(size+PREFIX_SIZE, MALLOCX_TCACHE_NONE);\n    if (!ptr) zmalloc_oom_handler(size);\n    update_zmalloc_stat_alloc(zmalloc_size(ptr));\n    return ptr;\n}",
  "abstract_func": "void *zmalloc_no_tcache(size_t VAR_0) {\n    ASSERT_NO_SIZE_OVERFLOW(VAR_0);\n    void *VAR_1 = mallocx(VAR_0+VAR_2, VAR_3);\n    if (!VAR_1) zmalloc_oom_handler(VAR_0);\n    update_zmalloc_stat_alloc(zmalloc_size(VAR_1));\n    return VAR_1;\n}",
  "func_graph_path": "redis/c992857618db99776917f10bf4f2345a5fdc78b0/zmalloc.c/vul/after/3.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,5 @@\n void *zmalloc_no_tcache(size_t size) {\n+    ASSERT_NO_SIZE_OVERFLOW(size);\n     void *ptr = mallocx(size+PREFIX_SIZE, MALLOCX_TCACHE_NONE);\n     if (!ptr) zmalloc_oom_handler(size);\n     update_zmalloc_stat_alloc(zmalloc_size(ptr));",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "    ASSERT_NO_SIZE_OVERFLOW(size);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/redis/redis/pull/8527",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/redis/redis/pull/8527: 403 Client Error: Forbidden for url: https://api.github.com/repos/redis/redis/pulls/8527",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "The patch addresses an integer overflow vulnerability on 32-bit systems, specifically referencing CVE-2021-21309. The code changes include assertions to prevent size overflows, directly countering the security issue described.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}