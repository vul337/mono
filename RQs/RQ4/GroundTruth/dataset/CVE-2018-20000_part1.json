{
  "cve_id": "CVE-2018-20000",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "Bedework/bw-webdav",
  "commit_msg": "format: follow the repo code style, and welcome mvnvm props to manage maven versions",
  "commit_hash": "0ce2007b3515a23b5f287ef521300bcb1f748edc",
  "git_url": "https://github.com/Bedework/bw-webdav/commit/0ce2007b3515a23b5f287ef521300bcb1f748edc",
  "file_path": "src/test/java/org/bedework/webdav/servlet/common/TestSecureXmlTypes.java",
  "func_name": "testMethodBaseWithMaliciousRequest",
  "func_before": "@Test\n    public void testMethodBaseWithMaliciousRequest() throws WebdavException {\n        assertNotNull(methodBase.parseContent(request, response));\n    }",
  "abstract_func_before": "@Test\n    public void testMethodBaseWithMaliciousRequest() throws WebdavException {\n        assertNotNull(VAR_0.parseContent(VAR_1, VAR_2));\n    }",
  "func_graph_path_before": "Bedework/bw-webdav/0ce2007b3515a23b5f287ef521300bcb1f748edc/TestSecureXmlTypes.java/vul/before/0.json",
  "func": "@Test\n  public void testMethodBaseWithMaliciousRequest() throws WebdavException {\n    assertNotNull(methodBase.parseContent(request, response));\n  }",
  "abstract_func": "@Test\n  public void testMethodBaseWithMaliciousRequest() throws WebdavException {\n    assertNotNull(VAR_0.parseContent(VAR_1, VAR_2));\n  }",
  "func_graph_path": "Bedework/bw-webdav/0ce2007b3515a23b5f287ef521300bcb1f748edc/TestSecureXmlTypes.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,4 @@\n @Test\n-    public void testMethodBaseWithMaliciousRequest() throws WebdavException {\n-        assertNotNull(methodBase.parseContent(request, response));\n-    }\n+  public void testMethodBaseWithMaliciousRequest() throws WebdavException {\n+    assertNotNull(methodBase.parseContent(request, response));\n+  }",
  "diff_line_info": {
    "deleted_lines": [
      "    public void testMethodBaseWithMaliciousRequest() throws WebdavException {",
      "        assertNotNull(methodBase.parseContent(request, response));",
      "    }"
    ],
    "added_lines": [
      "  public void testMethodBaseWithMaliciousRequest() throws WebdavException {",
      "    assertNotNull(methodBase.parseContent(request, response));",
      "  }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Bedework/bw-webdav/pull/1",
  "description": {
    "pr_info": {
      "title": "secure xml",
      "number": 1
    },
    "comment": [
      "I found out that this library is open to some xml vulnerabilities (xxe / ssrf)\r\nThis pull request ensures both the MethodBase and PostRequestPars types are relying on xml secure processing "
    ]
  },
  "Bug Filter": "Supporting & Non-Core Improvements",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Supporting & Non-Core Improvements; **Confidence:** 0.8"
}