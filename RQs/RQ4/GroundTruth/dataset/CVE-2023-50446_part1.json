{
  "cve_id": "CVE-2023-50446",
  "cwe_ids": [
    "CWE-732"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "mullvad/mullvadvpn-app",
  "commit_msg": "Stronger permissions for mullvad directories\n\nSet read-only permissions for authenticated users and full-access for\nadmins for relevant mullvad directories on creation.",
  "commit_hash": "59126cfb4dcf278565fadf84f36ff39e89d5f9ae",
  "git_url": "https://github.com/mullvad/mullvadvpn-app/commit/59126cfb4dcf278565fadf84f36ff39e89d5f9ae",
  "file_path": "windows/nsis-plugins/src/cleanup/cleaningops.cpp",
  "func_name": "MigrateCacheServiceUser",
  "func_before": "void MigrateCacheServiceUser()\n{\n\tconst auto newCacheDir = GetSystemCacheDirectory();\n\tcommon::fs::Mkdir(newCacheDir);\n\n\tconst auto localAppData = GetSystemUserLocalAppData();\n\tconst auto oldCacheDir = std::filesystem::path(localAppData).append(L\"Mullvad VPN\");\n\n\tcommon::fs::ScopedNativeFileSystem nativeFileSystem;\n\n\tcommon::security::AddAdminToObjectDacl(oldCacheDir, SE_FILE_OBJECT);\n\n\t{\n\t\tcommon::fs::FileEnumerator files(oldCacheDir);\n\n\t\tauto notNamedSet = std::make_unique<common::fs::FilterNotNamedSet>();\n\n\t\tnotNamedSet->addObject(L\"account-history.json\");\n\t\tnotNamedSet->addObject(L\"settings.json\");\n\t\tnotNamedSet->addObject(L\"device.json\");\n\n\t\tfiles.addFilter(std::move(notNamedSet));\n\t\tfiles.addFilter(std::make_unique<common::fs::FilterFiles>());\n\n\t\tWIN32_FIND_DATAW file;\n\n\t\twhile (files.next(file))\n\t\t{\n\t\t\tconst auto source = std::filesystem::path(files.getDirectory()).append(file.cFileName);\n\t\t\tconst auto target = std::filesystem::path(newCacheDir).append(file.cFileName);\n\t\t\tstd::filesystem::rename(source, target);\n\t\t}\n\t}\n\n\t//\n\t// This fails unless the directory is empty. Settings remain in this directory.\n\t//\n\tRemoveDirectoryW(std::wstring(L\"\\\\\\\\?\\\\\").append(oldCacheDir).c_str());\n}",
  "abstract_func_before": "void MigrateCacheServiceUser()\n{\n\tconst auto VAR_0 = GetSystemCacheDirectory();\n\tcommon::fs::Mkdir(VAR_0);\n\n\tconst auto VAR_1 = GetSystemUserLocalAppData();\n\tconst auto VAR_2 = std::filesystem::path(VAR_1).append(L\"Mullvad VPN\");\n\n\tcommon::fs::ScopedNativeFileSystem VAR_3;\n\n\tcommon::security::AddAdminToObjectDacl(VAR_2, VAR_4);\n\n\t{\n\t\tcommon::fs::FileEnumerator files(oldCacheDir);\n\n\t\tauto VAR_5 = std::VAR_6<common::fs::FilterNotNamedSet>();\n\n\t\tVAR_5->addObject(L\"account-history.json\");\n\t\tVAR_5->addObject(L\"settings.json\");\n\t\tVAR_5->addObject(L\"device.json\");\n\n\t\tVAR_7.addFilter(std::move(VAR_5));\n\t\tVAR_7.addFilter(std::VAR_6<common::fs::FilterFiles>());\n\n\t\tWIN32_FIND_DATAW VAR_8;\n\n\t\twhile (VAR_7.next(VAR_8))\n\t\t{\n\t\t\tconst auto VAR_9 = std::filesystem::path(VAR_7.getDirectory()).append(VAR_8.cFileName);\n\t\t\tconst auto VAR_10 = std::filesystem::path(VAR_0).append(VAR_8.cFileName);\n\t\t\tstd::filesystem::rename(VAR_9, VAR_10);\n\t\t}\n\t}\n\n\t/* COMMENT_0 */\n\t/* COMMENT_1 */\n\t/* COMMENT_0 */\n\tRemoveDirectoryW(std::wstring(L\"\\\\\\\\?\\\\\").append(oldCacheDir).c_str());\n}",
  "func_graph_path_before": "mullvad/mullvadvpn-app/59126cfb4dcf278565fadf84f36ff39e89d5f9ae/cleaningops.cpp/vul/before/0.json",
  "func": "void MigrateCacheServiceUser()\n{\n\tconst auto newCacheDir = GetSystemCacheDirectory();\n\tcommon::fs::Mkdir(newCacheDir);\n\n\tconst auto localAppData = GetSystemUserLocalAppData();\n\n\tconst auto oldCacheDir = std::filesystem::path(localAppData).append(L\"Mullvad VPN\");\n\n\tcommon::fs::ScopedNativeFileSystem nativeFileSystem;\n\n\tcommon::security::AddAdminToObjectDacl(oldCacheDir, SE_FILE_OBJECT);\n\n\t{\n\t\tcommon::fs::FileEnumerator files(oldCacheDir);\n\n\t\tauto notNamedSet = std::make_unique<common::fs::FilterNotNamedSet>();\n\n\t\tnotNamedSet->addObject(L\"account-history.json\");\n\t\tnotNamedSet->addObject(L\"settings.json\");\n\t\tnotNamedSet->addObject(L\"device.json\");\n\n\t\tfiles.addFilter(std::move(notNamedSet));\n\t\tfiles.addFilter(std::make_unique<common::fs::FilterFiles>());\n\n\t\tWIN32_FIND_DATAW file;\n\n\t\twhile (files.next(file))\n\t\t{\n\t\t\tconst auto source = std::filesystem::path(files.getDirectory()).append(file.cFileName);\n\t\t\tconst auto target = std::filesystem::path(newCacheDir).append(file.cFileName);\n\t\t\tstd::filesystem::rename(source, target);\n\t\t}\n\t}\n\n\t//\n\t// This fails unless the directory is empty. Settings remain in this directory.\n\t//\n\tRemoveDirectoryW(std::wstring(L\"\\\\\\\\?\\\\\").append(oldCacheDir).c_str());\n}",
  "abstract_func": "void MigrateCacheServiceUser()\n{\n\tconst auto VAR_0 = GetSystemCacheDirectory();\n\tcommon::fs::Mkdir(VAR_0);\n\n\tconst auto VAR_1 = GetSystemUserLocalAppData();\n\n\tconst auto VAR_2 = std::filesystem::path(VAR_1).append(L\"Mullvad VPN\");\n\n\tcommon::fs::ScopedNativeFileSystem VAR_3;\n\n\tcommon::security::AddAdminToObjectDacl(VAR_2, VAR_4);\n\n\t{\n\t\tcommon::fs::FileEnumerator files(oldCacheDir);\n\n\t\tauto VAR_5 = std::VAR_6<common::fs::FilterNotNamedSet>();\n\n\t\tVAR_5->addObject(L\"account-history.json\");\n\t\tVAR_5->addObject(L\"settings.json\");\n\t\tVAR_5->addObject(L\"device.json\");\n\n\t\tVAR_7.addFilter(std::move(VAR_5));\n\t\tVAR_7.addFilter(std::VAR_6<common::fs::FilterFiles>());\n\n\t\tWIN32_FIND_DATAW VAR_8;\n\n\t\twhile (VAR_7.next(VAR_8))\n\t\t{\n\t\t\tconst auto VAR_9 = std::filesystem::path(VAR_7.getDirectory()).append(VAR_8.cFileName);\n\t\t\tconst auto VAR_10 = std::filesystem::path(VAR_0).append(VAR_8.cFileName);\n\t\t\tstd::filesystem::rename(VAR_9, VAR_10);\n\t\t}\n\t}\n\n\t/* COMMENT_0 */\n\t/* COMMENT_1 */\n\t/* COMMENT_0 */\n\tRemoveDirectoryW(std::wstring(L\"\\\\\\\\?\\\\\").append(oldCacheDir).c_str());\n}",
  "func_graph_path": "mullvad/mullvadvpn-app/59126cfb4dcf278565fadf84f36ff39e89d5f9ae/cleaningops.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,6 +4,7 @@\n \tcommon::fs::Mkdir(newCacheDir);\n \n \tconst auto localAppData = GetSystemUserLocalAppData();\n+\n \tconst auto oldCacheDir = std::filesystem::path(localAppData).append(L\"Mullvad VPN\");\n \n \tcommon::fs::ScopedNativeFileSystem nativeFileSystem;",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/mullvad/mullvadvpn-app/pull/5398",
  "description": {
    "pr_info": {
      "title": "Set permissions on log directory",
      "number": 5398
    },
    "comment": [
      "Move a bit of the C++ code to rust and make sure that log directory is protected with admin permissions.\r\n\r\nFixes privilege escalation on Windows (CVE-2023-50446). Insufficient permissions on directory in Mullvad VPN Windows app in version 2023.5 and older allows any local unprivileged user to escalate privileges to SYSTEM.\r\n\r\n<!-- Reviewable:start -->\r\n- - -\r\nThis change isâ€‚[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/mullvad/mullvadvpn-app/5398)\r\n<!-- Reviewable:end -->\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0  \n\nThe commit addresses a known security vulnerability (CVE-2023-50446) by adjusting directory permissions, which fixes a privilege escalation issue. The changes are consistent with the security-related intent described."
}