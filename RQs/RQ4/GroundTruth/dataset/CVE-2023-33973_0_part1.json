{
  "cve_id": "CVE-2023-33973",
  "cwe_ids": [
    "CWE-476"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "RIOT-OS/RIOT",
  "commit_msg": "gnrc_sixlowpan_iphc: fix NULL pointer dereference",
  "commit_hash": "c9d7863e5664a169035038628029bb07e090c5ff",
  "git_url": "https://github.com/RIOT-OS/RIOT/commit/c9d7863e5664a169035038628029bb07e090c5ff",
  "file_path": "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
  "func_name": "gnrc_sixlowpan_iphc_send",
  "func_before": "void gnrc_sixlowpan_iphc_send(gnrc_pktsnip_t *pkt, void *ctx, unsigned page)\n{\n    gnrc_netif_hdr_t *netif_hdr = pkt->data;\n    gnrc_netif_t *netif = gnrc_netif_hdr_get_netif(netif_hdr);\n    gnrc_pktsnip_t *tmp;\n    /* datagram size before compression */\n    size_t orig_datagram_size = gnrc_pkt_len(pkt->next);\n    ipv6_hdr_t *ipv6_hdr = pkt->next->data;\n    ipv6_addr_t dst;\n\n    if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_MINFWD)) {\n        dst = ipv6_hdr->dst;    /* copying original destination address */\n    }\n\n    if ((tmp = _iphc_encode(pkt, pkt->data, netif))) {\n        if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_MINFWD) && (ctx != NULL) &&\n            (gnrc_sixlowpan_frag_minfwd_frag_iphc(tmp, orig_datagram_size, &dst,\n                                                  ctx) == 0)) {\n            DEBUG(\"6lo iphc minfwd: putting slack in first fragment\\n\");\n            return;\n        }\n        gnrc_sixlowpan_multiplex_by_size(tmp, orig_datagram_size, netif, page);\n    }\n    else {\n        gnrc_pktbuf_release(pkt);\n    }\n}",
  "abstract_func_before": "void gnrc_sixlowpan_iphc_send(gnrc_pktsnip_t *VAR_0, void *VAR_1, unsigned VAR_2)\n{\n    gnrc_netif_hdr_t *VAR_3 = VAR_0->data;\n    gnrc_netif_t *VAR_4 = gnrc_netif_hdr_get_netif(VAR_3);\n    gnrc_pktsnip_t *VAR_5;\n    /* COMMENT_0 */\n    size_t VAR_6 = gnrc_pkt_len(VAR_0->next);\n    ipv6_hdr_t *VAR_7 = VAR_0->next->data;\n    ipv6_addr_t VAR_8;\n\n    if (IS_USED(VAR_9)) {\n        VAR_8 = VAR_7->dst;    /* COMMENT_1 */\n    }\n\n    if ((VAR_5 = _iphc_encode(VAR_0, VAR_0->data, VAR_4))) {\n        if (IS_USED(VAR_9) && (VAR_1 != NULL) &&\n            (gnrc_sixlowpan_frag_minfwd_frag_iphc(VAR_5, VAR_6, &VAR_8,\n                                                  VAR_1) == 0)) {\n            DEBUG(\"6lo iphc minfwd: putting slack in first fragment\\n\");\n            return;\n        }\n        gnrc_sixlowpan_multiplex_by_size(VAR_5, VAR_6, VAR_4, VAR_2);\n    }\n    else {\n        gnrc_pktbuf_release(VAR_0);\n    }\n}",
  "func_graph_path_before": "RIOT-OS/RIOT/c9d7863e5664a169035038628029bb07e090c5ff/gnrc_sixlowpan_iphc.c/vul/before/1.json",
  "func": "void gnrc_sixlowpan_iphc_send(gnrc_pktsnip_t *pkt, void *ctx, unsigned page)\n{\n    gnrc_netif_hdr_t *netif_hdr = pkt->data;\n    gnrc_netif_t *netif = gnrc_netif_hdr_get_netif(netif_hdr);\n    gnrc_pktsnip_t *tmp;\n    /* datagram size before compression */\n    size_t orig_datagram_size = gnrc_pkt_len(pkt->next);\n    ipv6_hdr_t *ipv6_hdr = pkt->next->data;\n    ipv6_addr_t dst;\n\n    if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_MINFWD)) {\n        dst = ipv6_hdr->dst;    /* copying original destination address */\n    }\n\n    if ((tmp = _iphc_encode(pkt, pkt->data, netif))) {\n        if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_MINFWD) && (ctx != NULL) &&\n            (gnrc_sixlowpan_frag_minfwd_frag_iphc(tmp, orig_datagram_size, &dst,\n                                                  ctx) == 0)) {\n            DEBUG(\"6lo iphc minfwd: putting slack in first fragment\\n\");\n            return;\n        }\n        gnrc_sixlowpan_multiplex_by_size(tmp, orig_datagram_size, netif, page);\n    }\n    else {\n        if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_MINFWD)) {\n            gnrc_sixlowpan_frag_fb_t *fb = ctx;\n\n            if (fb->pkt == pkt) {\n                /* free provided fragmentation buffer */\n                fb->pkt = NULL;\n            }\n        }\n        gnrc_pktbuf_release(pkt);\n    }\n}",
  "abstract_func": "void gnrc_sixlowpan_iphc_send(gnrc_pktsnip_t *VAR_0, void *VAR_1, unsigned VAR_2)\n{\n    gnrc_netif_hdr_t *VAR_3 = VAR_0->data;\n    gnrc_netif_t *VAR_4 = gnrc_netif_hdr_get_netif(VAR_3);\n    gnrc_pktsnip_t *VAR_5;\n    /* COMMENT_0 */\n    size_t VAR_6 = gnrc_pkt_len(VAR_0->next);\n    ipv6_hdr_t *VAR_7 = VAR_0->next->data;\n    ipv6_addr_t VAR_8;\n\n    if (IS_USED(VAR_9)) {\n        VAR_8 = VAR_7->dst;    /* COMMENT_1 */\n    }\n\n    if ((VAR_5 = _iphc_encode(VAR_0, VAR_0->data, VAR_4))) {\n        if (IS_USED(VAR_9) && (VAR_1 != NULL) &&\n            (gnrc_sixlowpan_frag_minfwd_frag_iphc(VAR_5, VAR_6, &VAR_8,\n                                                  VAR_1) == 0)) {\n            DEBUG(\"6lo iphc minfwd: putting slack in first fragment\\n\");\n            return;\n        }\n        gnrc_sixlowpan_multiplex_by_size(VAR_5, VAR_6, VAR_4, VAR_2);\n    }\n    else {\n        if (IS_USED(VAR_9)) {\n            gnrc_sixlowpan_frag_fb_t *VAR_10 = VAR_1;\n\n            if (VAR_10->pkt == VAR_0) {\n                /* COMMENT_2 */\n                VAR_10->pkt = NULL;\n            }\n        }\n        gnrc_pktbuf_release(VAR_0);\n    }\n}",
  "func_graph_path": "RIOT-OS/RIOT/c9d7863e5664a169035038628029bb07e090c5ff/gnrc_sixlowpan_iphc.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -22,6 +22,14 @@\n         gnrc_sixlowpan_multiplex_by_size(tmp, orig_datagram_size, netif, page);\n     }\n     else {\n+        if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_MINFWD)) {\n+            gnrc_sixlowpan_frag_fb_t *fb = ctx;\n+\n+            if (fb->pkt == pkt) {\n+                /* free provided fragmentation buffer */\n+                fb->pkt = NULL;\n+            }\n+        }\n         gnrc_pktbuf_release(pkt);\n     }\n }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_MINFWD)) {",
      "            gnrc_sixlowpan_frag_fb_t *fb = ctx;",
      "",
      "            if (fb->pkt == pkt) {",
      "                /* free provided fragmentation buffer */",
      "                fb->pkt = NULL;",
      "            }",
      "        }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/RIOT-OS/RIOT/pull/19678",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/RIOT-OS/RIOT/pull/19678: 403 Client Error: Forbidden for url: https://api.github.com/repos/RIOT-OS/RIOT/pulls/19678",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}