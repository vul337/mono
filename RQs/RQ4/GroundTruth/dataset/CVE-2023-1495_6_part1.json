{
  "cve_id": "CVE-2023-1495",
  "cwe_ids": [
    "CWE-89"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "getrebuild/rebuild",
  "commit_msg": "H5 sync2 (#595)\n\n* style: 目录样式gh\r\n\r\n* style: J_new\r\n\r\n* feat: advListFilterTabs\r\n\r\n* feat: nav-copyto\r\n\r\n* enh: 助记码全拼\r\n\r\n* enh: 地图搜索选点\r\n\r\n* enh: topnav\r\n\r\n* list pn\r\n\r\n* .form-line.v33\r\n\r\n* open TAG\r\n\r\n* KVS addShutdownHook\r\n\r\n* fix: #594\r\n\r\n---------\r\n\r\nCo-authored-by: devezhao <zhaofang123@gmail.com>",
  "commit_hash": "c9474f84e5f376dd2ade2078e3039961a9425da7",
  "git_url": "https://github.com/getrebuild/rebuild/commit/c9474f84e5f376dd2ade2078e3039961a9425da7",
  "file_path": "src/main/java/com/rebuild/web/admin/ConfigCommons.java",
  "func_name": "queryListOfConfig",
  "func_before": "public static Object[][] queryListOfConfig(String sql, String belongEntity, String q) {\n        if (StringUtils.isNotBlank(belongEntity) && !\"$ALL$\".equalsIgnoreCase(belongEntity)) {\n            sql = sql.replace(\"(1=1)\", \"belongEntity = '\" + StringEscapeUtils.escapeSql(belongEntity) + \"'\");\n        }\n        if (StringUtils.isNotBlank(q)) {\n            sql = sql.replace(\"(2=2)\", \"name like '%\" + StringEscapeUtils.escapeSql(q) + \"%'\");\n        }\n\n        Object[][] array = Application.createQuery(sql).setLimit(500).array();\n        for (Object[] o : array) {\n            o[2] = EasyMetaFactory.getLabel(MetadataHelper.getEntity((String) o[2]));\n            o[5] = I18nUtils.formatDate((Date) o[5]);\n        }\n        return array;\n    }",
  "abstract_func_before": "public static Object[][] queryListOfConfig(String VAR_0, String VAR_1, String VAR_2) {\n        if (VAR_3.isNotBlank(VAR_1) && !\"$ALL$\".equalsIgnoreCase(VAR_1)) {\n            VAR_0 = VAR_0.replace(\"(1=1)\", \"belongEntity = '\" + VAR_4.escapeSql(VAR_1) + \"'\");\n        }\n        if (VAR_3.isNotBlank(VAR_2)) {\n            VAR_0 = VAR_0.replace(\"(2=2)\", \"name like '%\" + VAR_4.escapeSql(VAR_2) + \"%'\");\n        }\n\n        Object[][] VAR_5 = VAR_6.createQuery(VAR_0).setLimit(500).array();\n        for (Object[] VAR_7 : VAR_5) {\n            VAR_7[2] = VAR_8.getLabel(VAR_9.getEntity((String) VAR_7[2]));\n            VAR_7[5] = VAR_10.formatDate((Date) VAR_7[5]);\n        }\n        return VAR_5;\n    }",
  "func_graph_path_before": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/ConfigCommons.java/vul/before/0.json",
  "func": "public static Object[][] queryListOfConfig(String sql, String belongEntity, String q) {\n        if (StringUtils.isNotBlank(belongEntity) && !\"$ALL$\".equalsIgnoreCase(belongEntity)) {\n            sql = sql.replace(\"(1=1)\", \"belongEntity = '\" + CommonsUtils.escapeSql(belongEntity) + \"'\");\n        }\n        if (StringUtils.isNotBlank(q)) {\n            sql = sql.replace(\"(2=2)\", \"name like '%\" + CommonsUtils.escapeSql(q) + \"%'\");\n        }\n\n        Object[][] array = Application.createQuery(sql).setLimit(500).array();\n        for (Object[] o : array) {\n            o[2] = EasyMetaFactory.getLabel(MetadataHelper.getEntity((String) o[2]));\n            o[5] = I18nUtils.formatDate((Date) o[5]);\n        }\n        return array;\n    }",
  "abstract_func": "public static Object[][] queryListOfConfig(String VAR_0, String VAR_1, String VAR_2) {\n        if (VAR_3.isNotBlank(VAR_1) && !\"$ALL$\".equalsIgnoreCase(VAR_1)) {\n            VAR_0 = VAR_0.replace(\"(1=1)\", \"belongEntity = '\" + VAR_4.escapeSql(VAR_1) + \"'\");\n        }\n        if (VAR_3.isNotBlank(VAR_2)) {\n            VAR_0 = VAR_0.replace(\"(2=2)\", \"name like '%\" + VAR_4.escapeSql(VAR_2) + \"%'\");\n        }\n\n        Object[][] VAR_5 = VAR_6.createQuery(VAR_0).setLimit(500).array();\n        for (Object[] VAR_7 : VAR_5) {\n            VAR_7[2] = VAR_8.getLabel(VAR_9.getEntity((String) VAR_7[2]));\n            VAR_7[5] = VAR_10.formatDate((Date) VAR_7[5]);\n        }\n        return VAR_5;\n    }",
  "func_graph_path": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/ConfigCommons.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,9 +1,9 @@\n public static Object[][] queryListOfConfig(String sql, String belongEntity, String q) {\n         if (StringUtils.isNotBlank(belongEntity) && !\"$ALL$\".equalsIgnoreCase(belongEntity)) {\n-            sql = sql.replace(\"(1=1)\", \"belongEntity = '\" + StringEscapeUtils.escapeSql(belongEntity) + \"'\");\n+            sql = sql.replace(\"(1=1)\", \"belongEntity = '\" + CommonsUtils.escapeSql(belongEntity) + \"'\");\n         }\n         if (StringUtils.isNotBlank(q)) {\n-            sql = sql.replace(\"(2=2)\", \"name like '%\" + StringEscapeUtils.escapeSql(q) + \"%'\");\n+            sql = sql.replace(\"(2=2)\", \"name like '%\" + CommonsUtils.escapeSql(q) + \"%'\");\n         }\n \n         Object[][] array = Application.createQuery(sql).setLimit(500).array();",
  "diff_line_info": {
    "deleted_lines": [
      "            sql = sql.replace(\"(1=1)\", \"belongEntity = '\" + StringEscapeUtils.escapeSql(belongEntity) + \"'\");",
      "            sql = sql.replace(\"(2=2)\", \"name like '%\" + StringEscapeUtils.escapeSql(q) + \"%'\");"
    ],
    "added_lines": [
      "            sql = sql.replace(\"(1=1)\", \"belongEntity = '\" + CommonsUtils.escapeSql(belongEntity) + \"'\");",
      "            sql = sql.replace(\"(2=2)\", \"name like '%\" + CommonsUtils.escapeSql(q) + \"%'\");"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/getrebuild/rebuild/pull/595",
  "description": {
    "pr_info": {
      "title": "H5 sync2",
      "number": 595
    },
    "comment": [
      "Most styles:\r\n1. Nav copy\r\n2. Arrow for form line \r\n3. Quick-code full-pinyin\r\n4. Open Tag of field\r\n5. feat: `advListFilterTabs` (boss-key)\r\n6. Map search\r\n7. feat: Can input page-no on list\r\n8. CVE fix"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}