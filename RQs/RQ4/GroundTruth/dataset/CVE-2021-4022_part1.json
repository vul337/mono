{
  "cve_id": "CVE-2021-4022",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "rizinorg/rizin",
  "commit_msg": "Initialize retctx,ctx before freeing the inner elements\n\nIn rz_core_analysis_type_match retctx structure was initialized on the\nstack only after a \"goto out_function\", where a field of that structure\nwas freed. When the goto path is taken, the field is not properly\ninitialized and it cause cause a crash of Rizin or have other effects.\n\nFixes: CVE-2021-4022",
  "commit_hash": "2c110dd84a698cb77dfb30a9bc04e9915362724f",
  "git_url": "https://github.com/rizinorg/rizin/commit/2c110dd84a698cb77dfb30a9bc04e9915362724f",
  "file_path": "librz/analysis/var.c",
  "func_name": "rz_analysis_extract_vars",
  "func_before": "RZ_API void rz_analysis_extract_vars(RzAnalysis *analysis, RzAnalysisFunction *fcn, RzAnalysisOp *op) {\n\trz_return_if_fail(analysis && fcn && op);\n\n\tconst char *BP = analysis->reg->name[RZ_REG_NAME_BP];\n\tconst char *SP = analysis->reg->name[RZ_REG_NAME_SP];\n\tif (BP) {\n\t\textract_arg(analysis, fcn, op, BP, \"+\", RZ_ANALYSIS_VAR_KIND_BPV);\n\t\textract_arg(analysis, fcn, op, BP, \"-\", RZ_ANALYSIS_VAR_KIND_BPV);\n\t}\n\textract_arg(analysis, fcn, op, SP, \"+\", RZ_ANALYSIS_VAR_KIND_SPV);\n}",
  "abstract_func_before": "RZ_API VAR_0 rz_analysis_extract_vars(RzAnalysis *VAR_1, RzAnalysisFunction *VAR_2, RzAnalysisOp *VAR_3) {\n\trz_return_if_fail(VAR_1 && VAR_2 && VAR_3);\n\n\tconst char *VAR_4 = VAR_1->reg->name[VAR_5];\n\tconst char *VAR_6 = VAR_1->reg->name[VAR_7];\n\tif (VAR_4) {\n\t\textract_arg(VAR_1, VAR_2, VAR_3, VAR_4, \"+\", VAR_8);\n\t\textract_arg(VAR_1, VAR_2, VAR_3, VAR_4, \"-\", VAR_8);\n\t}\n\textract_arg(VAR_1, VAR_2, VAR_3, VAR_6, \"+\", VAR_9);\n}",
  "func_graph_path_before": null,
  "func": "RZ_API void rz_analysis_extract_vars(RzAnalysis *analysis, RzAnalysisFunction *fcn, RzAnalysisOp *op) {\n\trz_return_if_fail(analysis && fcn && op);\n\n\tconst char *BP = rz_reg_get_name(analysis->reg, RZ_REG_NAME_BP);\n\tconst char *SP = rz_reg_get_name(analysis->reg, RZ_REG_NAME_SP);\n\tif (BP) {\n\t\textract_arg(analysis, fcn, op, BP, \"+\", RZ_ANALYSIS_VAR_KIND_BPV);\n\t\textract_arg(analysis, fcn, op, BP, \"-\", RZ_ANALYSIS_VAR_KIND_BPV);\n\t}\n\tif (SP) {\n\t\textract_arg(analysis, fcn, op, SP, \"+\", RZ_ANALYSIS_VAR_KIND_SPV);\n\t}\n}",
  "abstract_func": "RZ_API VAR_0 rz_analysis_extract_vars(RzAnalysis *VAR_1, RzAnalysisFunction *VAR_2, RzAnalysisOp *VAR_3) {\n\trz_return_if_fail(VAR_1 && VAR_2 && VAR_3);\n\n\tconst char *VAR_4 = rz_reg_get_name(VAR_1->reg, VAR_5);\n\tconst char *VAR_6 = rz_reg_get_name(VAR_1->reg, VAR_7);\n\tif (VAR_4) {\n\t\textract_arg(VAR_1, VAR_2, VAR_3, VAR_4, \"+\", VAR_8);\n\t\textract_arg(VAR_1, VAR_2, VAR_3, VAR_4, \"-\", VAR_8);\n\t}\n\tif (VAR_6) {\n\t\textract_arg(VAR_1, VAR_2, VAR_3, VAR_6, \"+\", VAR_9);\n\t}\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,11 +1,13 @@\n RZ_API void rz_analysis_extract_vars(RzAnalysis *analysis, RzAnalysisFunction *fcn, RzAnalysisOp *op) {\n \trz_return_if_fail(analysis && fcn && op);\n \n-\tconst char *BP = analysis->reg->name[RZ_REG_NAME_BP];\n-\tconst char *SP = analysis->reg->name[RZ_REG_NAME_SP];\n+\tconst char *BP = rz_reg_get_name(analysis->reg, RZ_REG_NAME_BP);\n+\tconst char *SP = rz_reg_get_name(analysis->reg, RZ_REG_NAME_SP);\n \tif (BP) {\n \t\textract_arg(analysis, fcn, op, BP, \"+\", RZ_ANALYSIS_VAR_KIND_BPV);\n \t\textract_arg(analysis, fcn, op, BP, \"-\", RZ_ANALYSIS_VAR_KIND_BPV);\n \t}\n-\textract_arg(analysis, fcn, op, SP, \"+\", RZ_ANALYSIS_VAR_KIND_SPV);\n+\tif (SP) {\n+\t\textract_arg(analysis, fcn, op, SP, \"+\", RZ_ANALYSIS_VAR_KIND_SPV);\n+\t}\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\tconst char *BP = analysis->reg->name[RZ_REG_NAME_BP];",
      "\tconst char *SP = analysis->reg->name[RZ_REG_NAME_SP];",
      "\textract_arg(analysis, fcn, op, SP, \"+\", RZ_ANALYSIS_VAR_KIND_SPV);"
    ],
    "added_lines": [
      "\tconst char *BP = rz_reg_get_name(analysis->reg, RZ_REG_NAME_BP);",
      "\tconst char *SP = rz_reg_get_name(analysis->reg, RZ_REG_NAME_SP);",
      "\tif (SP) {",
      "\t\textract_arg(analysis, fcn, op, SP, \"+\", RZ_ANALYSIS_VAR_KIND_SPV);",
      "\t}"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/rizinorg/rizin/pull/2031",
  "description": {
    "pr_info": {
      "title": "Initialize retctx,ctx before freeing the inner elements",
      "number": 2031
    },
    "comment": [
      "**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://github.com/rizinorg/rizin/blob/master/DEVELOPERS.md) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://github.com/rizinorg/rizin/blob/master/DEVELOPERS.md#code-style)\r\n- [ ] I've documented or updated the documentation of every function and struct this PR changes. If not so I've explained why.\r\n- [ ] I've added tests that prove my fix is effective or that my feature works (if possible)\r\n- [ ] I've updated the [rizin book](https://github.com/rizinorg/book) with the relevant information (if needed)\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\nIn rz_core_analysis_type_match retctx structure was initialized on the\r\nstack only after a \"goto out_function\", where a field of that structure\r\nwas freed. When the goto path is taken, the field is not properly\r\ninitialized and it cause cause a crash of Rizin or have other effects.\r\n\r\nFixes: CVE-2021-4022\r\n\r\n**Test plan**\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots/videos. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n...\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if any). -->\r\n\r\nCloses #2015 \r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}