{
  "cve_id": "CVE-2023-28629",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
  "cvss_is_v3": true,
  "repo_name": "gocd",
  "commit_msg": "Improve escaping on legacy Freemarker templates",
  "commit_hash": "95f758229d419411a38577608709d8552cccf193",
  "git_url": "https://github.com/gocd/gocd/commit/95f758229d419411a38577608709d8552cccf193",
  "file_path": "server/src/main/java/com/thoughtworks/go/server/presentation/models/MaterialRevisionsJsonBuilder.java",
  "func_name": "visit",
  "func_before": "@Override\n    public void visit(Modification modification) {\n        modifiedFilesJson = new ArrayList();\n\n        Map<String, Object> jsonMap = new LinkedHashMap<>();\n        jsonMap.put(\"user\", modification.getUserDisplayName());\n        jsonMap.put(\"revision\", modification.getRevision());\n        jsonMap.put(\"date\", formatISO8601(modification.getModifiedTime()));\n        String comment = modification.getComment();\n        if (!revision.getMaterial().getMaterialType().equals(TYPE)) {\n            comment = commentRenderer.render(comment);\n        }\n        jsonMap.put(\"comment\", comment);\n        jsonMap.put(\"modifiedFiles\", modifiedFilesJson);\n\n        modificationsJson.add(jsonMap);\n    }",
  "abstract_func_before": "@Override\n    public void visit(Modification VAR_0) {\n        VAR_1 = new ArrayList();\n\n        Map<String, Object> VAR_2 = new LinkedHashMap<>();\n        VAR_2.put(\"user\", VAR_0.getUserDisplayName());\n        VAR_2.put(\"revision\", VAR_0.getRevision());\n        VAR_2.put(\"date\", formatISO8601(VAR_0.getModifiedTime()));\n        String VAR_3 = VAR_0.getComment();\n        if (!VAR_4.getMaterial().getMaterialType().equals(VAR_5)) {\n            VAR_3 = VAR_6.render(VAR_3);\n        }\n        VAR_2.put(\"comment\", VAR_3);\n        VAR_2.put(\"modifiedFiles\", VAR_1);\n\n        VAR_7.add(VAR_2);\n    }",
  "func_graph_path_before": "gocd/95f758229d419411a38577608709d8552cccf193/MaterialRevisionsJsonBuilder.java/vul/before/1.json",
  "func": "@Override\n    public void visit(Modification modification) {\n        modifiedFilesJson = new ArrayList<>();\n\n        Map<String, Object> jsonMap = new LinkedHashMap<>();\n        jsonMap.put(\"user\", modification.getUserDisplayName());\n        jsonMap.put(\"revision\", modification.getRevision());\n        jsonMap.put(\"date\", formatISO8601(modification.getModifiedTime()));\n        String comment = modification.getComment();\n        if (!revision.getMaterial().getMaterialType().equals(TYPE)) {\n            comment = commentRenderer.render(comment);\n        }\n        jsonMap.put(\"comment\", comment);\n        jsonMap.put(\"modifiedFiles\", modifiedFilesJson);\n\n        modificationsJson.add(jsonMap);\n    }",
  "abstract_func": "@Override\n    public void visit(Modification VAR_0) {\n        VAR_1 = new ArrayList<>();\n\n        Map<String, Object> VAR_2 = new LinkedHashMap<>();\n        VAR_2.put(\"user\", VAR_0.getUserDisplayName());\n        VAR_2.put(\"revision\", VAR_0.getRevision());\n        VAR_2.put(\"date\", formatISO8601(VAR_0.getModifiedTime()));\n        String VAR_3 = VAR_0.getComment();\n        if (!VAR_4.getMaterial().getMaterialType().equals(VAR_5)) {\n            VAR_3 = VAR_6.render(VAR_3);\n        }\n        VAR_2.put(\"comment\", VAR_3);\n        VAR_2.put(\"modifiedFiles\", VAR_1);\n\n        VAR_7.add(VAR_2);\n    }",
  "func_graph_path": "gocd/95f758229d419411a38577608709d8552cccf193/MaterialRevisionsJsonBuilder.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,6 @@\n @Override\n     public void visit(Modification modification) {\n-        modifiedFilesJson = new ArrayList();\n+        modifiedFilesJson = new ArrayList<>();\n \n         Map<String, Object> jsonMap = new LinkedHashMap<>();\n         jsonMap.put(\"user\", modification.getUserDisplayName());",
  "diff_line_info": {
    "deleted_lines": [
      "        modifiedFilesJson = new ArrayList();"
    ],
    "added_lines": [
      "        modifiedFilesJson = new ArrayList<>();"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/gocd/gocd/pull/11070",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/gocd/gocd/pull/11070: 403 Client Error: Forbidden for url: https://api.github.com/repos/gocd/gocd/pulls/11070",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9"
}