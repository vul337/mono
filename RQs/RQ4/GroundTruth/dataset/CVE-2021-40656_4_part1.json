{
  "cve_id": "CVE-2021-40656",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "libsixel",
  "commit_msg": "[error_diffuse] don't diffuse into the void",
  "commit_hash": "dc96cdc27fb53e8595af67aaf68001033c808e42",
  "git_url": "https://github.com/libsixel/libsixel/commit/dc96cdc27fb53e8595af67aaf68001033c808e42",
  "file_path": "src/quant.c",
  "func_name": "diffuse_burkes",
  "func_before": "static void\ndiffuse_burkes(unsigned char *data, int width, int height,\n               int x, int y, int depth, int error)\n{\n    int pos;\n\n    pos = y * width + x;\n\n    /* Burkes' Method\n     *                  curr    4/16    2/16\n     *  1/16    2/16    4/16    2/16    1/16\n     */\n    if (pos < (height - 1) * width - 2) {\n        error_diffuse(data, pos + width * 0 + 1, depth, error, 1, 4);\n        error_diffuse(data, pos + width * 0 + 2, depth, error, 1, 8);\n        error_diffuse(data, pos + width * 1 - 2, depth, error, 1, 16);\n        error_diffuse(data, pos + width * 1 - 1, depth, error, 1, 8);\n        error_diffuse(data, pos + width * 1 + 0, depth, error, 1, 4);\n        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 8);\n        error_diffuse(data, pos + width * 1 + 2, depth, error, 1, 16);\n    }\n}",
  "abstract_func_before": "static void\ndiffuse_burkes(unsigned char *VAR_0, int VAR_1, int VAR_2,\n               int VAR_3, int VAR_4, int VAR_5, int VAR_6)\n{\n    int VAR_7;\n\n    VAR_7 = VAR_4 * VAR_1 + VAR_3;\n\n    /* COMMENT_0 */\n                                            \n                                            \n       \n    if (VAR_7 < (VAR_2 - 1) * VAR_1 - 2) {\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 0 + 1, VAR_5, VAR_6, 1, 4);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 0 + 2, VAR_5, VAR_6, 1, 8);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 - 2, VAR_5, VAR_6, 1, 16);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 - 1, VAR_5, VAR_6, 1, 8);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 + 0, VAR_5, VAR_6, 1, 4);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 + 1, VAR_5, VAR_6, 1, 8);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 + 2, VAR_5, VAR_6, 1, 16);\n    }\n}",
  "func_graph_path_before": "libsixel/dc96cdc27fb53e8595af67aaf68001033c808e42/quant.c/vul/before/5.json",
  "func": "static void\ndiffuse_burkes(unsigned char *data, int width, int height,\n               int x, int y, int depth, int error)\n{\n    int pos;\n\n    pos = y * width + x;\n\n    /* Burkes' Method\n     *                  curr    4/16    2/16\n     *  1/16    2/16    4/16    2/16    1/16\n     */\n    if (pos < (height - 1) * width - 2) {\n        error_diffuse(data, pos + width * 0 + 1, depth, error, 1, 4, width * height);\n        error_diffuse(data, pos + width * 0 + 2, depth, error, 1, 8, width * height);\n        error_diffuse(data, pos + width * 1 - 2, depth, error, 1, 16, width * height);\n        error_diffuse(data, pos + width * 1 - 1, depth, error, 1, 8, width * height);\n        error_diffuse(data, pos + width * 1 + 0, depth, error, 1, 4, width * height);\n        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 8, width * height);\n        error_diffuse(data, pos + width * 1 + 2, depth, error, 1, 16, width * height);\n    }\n}",
  "abstract_func": "static void\ndiffuse_burkes(unsigned char *VAR_0, int VAR_1, int VAR_2,\n               int VAR_3, int VAR_4, int VAR_5, int VAR_6)\n{\n    int VAR_7;\n\n    VAR_7 = VAR_4 * VAR_1 + VAR_3;\n\n    /* COMMENT_0 */\n                                            \n                                            \n       \n    if (VAR_7 < (VAR_2 - 1) * VAR_1 - 2) {\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 0 + 1, VAR_5, VAR_6, 1, 4, VAR_1 * VAR_2);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 0 + 2, VAR_5, VAR_6, 1, 8, VAR_1 * VAR_2);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 - 2, VAR_5, VAR_6, 1, 16, VAR_1 * VAR_2);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 - 1, VAR_5, VAR_6, 1, 8, VAR_1 * VAR_2);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 + 0, VAR_5, VAR_6, 1, 4, VAR_1 * VAR_2);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 + 1, VAR_5, VAR_6, 1, 8, VAR_1 * VAR_2);\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 + 2, VAR_5, VAR_6, 1, 16, VAR_1 * VAR_2);\n    }\n}",
  "func_graph_path": "libsixel/dc96cdc27fb53e8595af67aaf68001033c808e42/quant.c/vul/after/5.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -11,12 +11,12 @@\n      *  1/16    2/16    4/16    2/16    1/16\n      */\n     if (pos < (height - 1) * width - 2) {\n-        error_diffuse(data, pos + width * 0 + 1, depth, error, 1, 4);\n-        error_diffuse(data, pos + width * 0 + 2, depth, error, 1, 8);\n-        error_diffuse(data, pos + width * 1 - 2, depth, error, 1, 16);\n-        error_diffuse(data, pos + width * 1 - 1, depth, error, 1, 8);\n-        error_diffuse(data, pos + width * 1 + 0, depth, error, 1, 4);\n-        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 8);\n-        error_diffuse(data, pos + width * 1 + 2, depth, error, 1, 16);\n+        error_diffuse(data, pos + width * 0 + 1, depth, error, 1, 4, width * height);\n+        error_diffuse(data, pos + width * 0 + 2, depth, error, 1, 8, width * height);\n+        error_diffuse(data, pos + width * 1 - 2, depth, error, 1, 16, width * height);\n+        error_diffuse(data, pos + width * 1 - 1, depth, error, 1, 8, width * height);\n+        error_diffuse(data, pos + width * 1 + 0, depth, error, 1, 4, width * height);\n+        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 8, width * height);\n+        error_diffuse(data, pos + width * 1 + 2, depth, error, 1, 16, width * height);\n     }\n }",
  "diff_line_info": {
    "deleted_lines": [
      "        error_diffuse(data, pos + width * 0 + 1, depth, error, 1, 4);",
      "        error_diffuse(data, pos + width * 0 + 2, depth, error, 1, 8);",
      "        error_diffuse(data, pos + width * 1 - 2, depth, error, 1, 16);",
      "        error_diffuse(data, pos + width * 1 - 1, depth, error, 1, 8);",
      "        error_diffuse(data, pos + width * 1 + 0, depth, error, 1, 4);",
      "        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 8);",
      "        error_diffuse(data, pos + width * 1 + 2, depth, error, 1, 16);"
    ],
    "added_lines": [
      "        error_diffuse(data, pos + width * 0 + 1, depth, error, 1, 4, width * height);",
      "        error_diffuse(data, pos + width * 0 + 2, depth, error, 1, 8, width * height);",
      "        error_diffuse(data, pos + width * 1 - 2, depth, error, 1, 16, width * height);",
      "        error_diffuse(data, pos + width * 1 - 1, depth, error, 1, 8, width * height);",
      "        error_diffuse(data, pos + width * 1 + 0, depth, error, 1, 4, width * height);",
      "        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 8, width * height);",
      "        error_diffuse(data, pos + width * 1 + 2, depth, error, 1, 16, width * height);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libsixel/libsixel/pull/26",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/libsixel/libsixel/pull/26: 403 Client Error: Forbidden for url: https://api.github.com/repos/libsixel/libsixel/pulls/26",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.85,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.85\n\n**Step-by-Step Explanation:**\n\n1. **Input Analysis:**\n   - **Commit Message:** References error diffusion and preventing diffusion into the void.\n   - **Vulnerability Description:** Mentions fixing invalid accesses and closing a bug report (issue #25).\n   - **Code Diff:** Shows modifications to error_diffuse calls with added parameters (width * height), likely to prevent out-of-bound access.\n\n2. **Consistency Check:**\n   - The commit message aligns with code changes addressing error diffusion, which could relate to buffer overflows or memory access issues.\n\n3. **Purpose Evaluation:**\n   - The code changes modify the core logic of error_diffuse to add boundary checks, preventing invalid memory accesses.\n\n4. **Security Vulnerability Assessment:**\n   - Invalid memory access can lead to security issues such as buffer overflow or data leakage, making this a potential security fix.\n\n5. **Non-Security Classification:**\n   - Not applicable since the fix addresses a security-related issue.\n\n6. **Confidence Scoring:**\n   - High confidence (0.85) as the fix targets memory access issues, which are often security-sensitive, though lacking explicit security terms.\n\nThe patch addresses a potential security vulnerability by fixing invalid memory accesses, hence classified as a security fix with high confidence."
}