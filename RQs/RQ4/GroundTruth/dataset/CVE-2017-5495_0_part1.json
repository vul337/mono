{
  "cve_id": "CVE-2017-5495",
  "cwe_ids": [
    "CWE-119"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C",
  "cvss_is_v3": false,
  "repo_name": "FRRouting/frr",
  "commit_msg": "lib: limit size of vty buffer to 4096 bytes\n\nThis removes the automatic resizing of the vty input buffer and places a\nhard size cap of 4096 bytes. It also fixes a potentially unsafe strcpy.\n\nSigned-off-by: Quentin Young <qlyoung@cumulusnetworks.com>",
  "commit_hash": "2af38873d89e20bd039255418366c1601aa99e64",
  "git_url": "https://github.com/FRRouting/frr/commit/2af38873d89e20bd039255418366c1601aa99e64",
  "file_path": "lib/vty.c",
  "func_name": "vty_self_insert_overwrite",
  "func_before": "static void\nvty_self_insert_overwrite (struct vty *vty, char c)\n{\n  vty_ensure (vty, vty->length + 1);\n  vty->buf[vty->cp++] = c;\n\n  if (vty->cp > vty->length)\n    vty->length++;\n\n  if ((vty->node == AUTH_NODE) || (vty->node == AUTH_ENABLE_NODE))\n    return;\n\n  vty_write (vty, &c, 1);\n}",
  "abstract_func_before": "static void\nvty_self_insert_overwrite (struct vty *vty, char VAR_0)\n{\n  vty_ensure (vty, vty->length + 1);\n  vty->buf[vty->cp++] = VAR_0;\n\n  if (vty->cp > vty->length)\n    vty->length++;\n\n  if ((vty->node == VAR_1) || (vty->node == VAR_2))\n    return;\n\n  vty_write (vty, &VAR_0, 1);\n}",
  "func_graph_path_before": "FRRouting/frr/2af38873d89e20bd039255418366c1601aa99e64/vty.c/vul/before/1.json",
  "func": "static void\nvty_self_insert_overwrite (struct vty *vty, char c)\n{\n  if (vty->cp == vty->length)\n    {\n      vty_self_insert (vty, c);\n      return;\n    }\n\n  vty->buf[vty->cp++] = c;\n  vty_write (vty, &c, 1);\n}",
  "abstract_func": "static void\nvty_self_insert_overwrite (struct vty *vty, char VAR_0)\n{\n  if (vty->cp == vty->length)\n    {\n      vty_self_insert (vty, VAR_0);\n      return;\n    }\n\n  vty->buf[vty->cp++] = VAR_0;\n  vty_write (vty, &VAR_0, 1);\n}",
  "func_graph_path": "FRRouting/frr/2af38873d89e20bd039255418366c1601aa99e64/vty.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,14 +1,12 @@\n static void\n vty_self_insert_overwrite (struct vty *vty, char c)\n {\n-  vty_ensure (vty, vty->length + 1);\n+  if (vty->cp == vty->length)\n+    {\n+      vty_self_insert (vty, c);\n+      return;\n+    }\n+\n   vty->buf[vty->cp++] = c;\n-\n-  if (vty->cp > vty->length)\n-    vty->length++;\n-\n-  if ((vty->node == AUTH_NODE) || (vty->node == AUTH_ENABLE_NODE))\n-    return;\n-\n   vty_write (vty, &c, 1);\n }",
  "diff_line_info": {
    "deleted_lines": [
      "  vty_ensure (vty, vty->length + 1);",
      "",
      "  if (vty->cp > vty->length)",
      "    vty->length++;",
      "",
      "  if ((vty->node == AUTH_NODE) || (vty->node == AUTH_ENABLE_NODE))",
      "    return;",
      ""
    ],
    "added_lines": [
      "  if (vty->cp == vty->length)",
      "    {",
      "      vty_self_insert (vty, c);",
      "      return;",
      "    }",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/FRRouting/frr/pull/63",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/FRRouting/frr/pull/63: 403 Client Error: Forbidden for url: https://api.github.com/repos/FRRouting/frr/pulls/63",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95\n\nThe commit addresses a security vulnerability by fixing an unsafe strcpy and limiting buffer size to prevent overflow. The code changes and message are consistent, supporting a high confidence in classification as a security fix."
}