{
  "cve_id": "CVE-2021-25940",
  "cwe_ids": [
    "CWE-613"
  ],
  "cvss_vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "arangodb",
  "commit_msg": "Revive startup parameter `--server.session-timeout` (#14118)\n\nCo-authored-by: Tobias GÃ¶dderz <tobias@arangodb.com>",
  "commit_hash": "e9c6ee9dcca7b9b4fbcd02a0b323d205bee838d3",
  "git_url": "https://github.com/arangodb/arangodb/commit/e9c6ee9dcca7b9b4fbcd02a0b323d205bee838d3",
  "file_path": "arangod/GeneralServer/AuthenticationFeature.cpp",
  "func_name": "AuthenticationFeature::AuthenticationFeature",
  "func_before": "AuthenticationFeature::AuthenticationFeature(application_features::ApplicationServer& server)\n    : ApplicationFeature(server, \"Authentication\"),\n      _userManager(nullptr),\n      _authCache(nullptr),\n      _authenticationUnixSockets(true),\n      _authenticationSystemOnly(true),\n      _localAuthentication(true),\n      _active(true),\n      _authenticationTimeout(0.0) {\n  setOptional(false);\n  startsAfter<application_features::BasicFeaturePhaseServer>();\n\n#ifdef USE_ENTERPRISE\n  startsAfter<LdapFeature>();\n#endif\n}",
  "abstract_func_before": "AuthenticationFeature::AuthenticationFeature(application_features::ApplicationServer& VAR_0)\n    : ApplicationFeature(VAR_0, \"Authentication\"),\n      _userManager(nullptr),\n      _authCache(nullptr),\n      _authenticationUnixSockets(true),\n      _authenticationSystemOnly(true),\n      _localAuthentication(true),\n      _active(true),\n      _authenticationTimeout(0.0) {\n  setOptional(false);\n  VAR_1<application_features::BasicFeaturePhaseServer>();\n\n#ifdef VAR_2\n  VAR_1<LdapFeature>();\n#endif\n}",
  "func_graph_path_before": "arangodb/e9c6ee9dcca7b9b4fbcd02a0b323d205bee838d3/AuthenticationFeature.cpp/vul/before/2.json",
  "func": "AuthenticationFeature::AuthenticationFeature(application_features::ApplicationServer& server)\n    : ApplicationFeature(server, \"Authentication\"),\n      _userManager(nullptr),\n      _authCache(nullptr),\n      _authenticationUnixSockets(true),\n      _authenticationSystemOnly(true),\n      _localAuthentication(true),\n      _active(true),\n      _authenticationTimeout(0.0),\n      _sessionTimeout(static_cast<double>(1 * std::chrono::hours(1) / std::chrono::seconds(1))) { // 1 hour\n  setOptional(false);\n  startsAfter<application_features::BasicFeaturePhaseServer>();\n\n#ifdef USE_ENTERPRISE\n  startsAfter<LdapFeature>();\n#endif\n}",
  "abstract_func": "AuthenticationFeature::AuthenticationFeature(application_features::ApplicationServer& VAR_0)\n    : ApplicationFeature(VAR_0, \"Authentication\"),\n      _userManager(nullptr),\n      _authCache(nullptr),\n      _authenticationUnixSockets(true),\n      _authenticationSystemOnly(true),\n      _localAuthentication(true),\n      _active(true),\n      _authenticationTimeout(0.0),\n      _sessionTimeout(VAR_1<double>(1 * std::chrono::hours(1) / std::chrono::seconds(1))) { /* COMMENT_0 */\n  setOptional(false);\n  VAR_2<application_features::BasicFeaturePhaseServer>();\n\n#ifdef VAR_3\n  VAR_2<LdapFeature>();\n#endif\n}",
  "func_graph_path": "arangodb/e9c6ee9dcca7b9b4fbcd02a0b323d205bee838d3/AuthenticationFeature.cpp/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,7 +6,8 @@\n       _authenticationSystemOnly(true),\n       _localAuthentication(true),\n       _active(true),\n-      _authenticationTimeout(0.0) {\n+      _authenticationTimeout(0.0),\n+      _sessionTimeout(static_cast<double>(1 * std::chrono::hours(1) / std::chrono::seconds(1))) { // 1 hour\n   setOptional(false);\n   startsAfter<application_features::BasicFeaturePhaseServer>();\n ",
  "diff_line_info": {
    "deleted_lines": [
      "      _authenticationTimeout(0.0) {"
    ],
    "added_lines": [
      "      _authenticationTimeout(0.0),",
      "      _sessionTimeout(static_cast<double>(1 * std::chrono::hours(1) / std::chrono::seconds(1))) { // 1 hour"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/arangodb/arangodb/pull/14118",
  "description": {
    "pr_info": {
      "title": "Revive startup parameter `--server.session-timeout`",
      "number": 14118
    },
    "comment": [
      "### Scope & Purpose\r\n\r\nIn order to address APM-79: https://arangodb.atlassian.net/browse/APM-79\r\nDocs PR: https://github.com/arangodb/docs/pull/720\r\n\r\nRevive startup parameter `--server.session-timeout` to control the timeout for web interface sessions and other sessions that are based on JWTs created by the `/_open/auth` API.\r\nThe default timeout value is 30 days, which is identical to the currently hard-coded timeout used.\r\n\r\nQuestions: shall we introduce this with a lower timeout value? Or at least adjust the timeout in devel?\r\n\r\n- [x] :hankey: Bugfix (requires CHANGELOG entry)\r\n- [x] :pizza: New feature (requires CHANGELOG entry, feature documentation and release notes)\r\n- [ ] :fire: Performance improvement\r\n- [ ] :hammer: Refactoring/simplification\r\n- [x] :book: CHANGELOG entry made\r\n\r\n#### Backports:\r\n\r\n- [x] Backports required for: *3.8*, *3.7*\r\n\r\n#### Related Information\r\n\r\n- [x] Docs PR: https://github.com/arangodb/docs/pull/720\r\n- [x] GitHub issue / Jira ticket number: https://arangodb.atlassian.net/browse/APM-79\r\n\r\n### Testing & Verification\r\n\r\n- [x] This change is a trivial rework / code cleanup without any test coverage.\r\n- [x] The behavior in this PR was *manually tested*\r\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.8\n\nThe patch reintroduces a session timeout parameter, which relates to authentication configuration. While it involves security-related settings, it isn't explicitly fixing a known vulnerability. The changes are focused on adding a feature (reviving the parameter) and improving configuration options, aligning with feature upgrades. The confidence is high because the intent is clear, though it's not a direct security fix."
}