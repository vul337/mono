{
  "cve_id": "CVE-2023-50245",
  "cwe_ids": [
    "CWE-120"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "afichet/openexr-viewer",
  "commit_msg": "Early catch potential overflow issue #43\n\n`m_width` and `m_height` are of `int` type in the OpenEXR library. We\ncurrently keep the same types in our class but this may case issue\nwhen mapping 1D memory. In the most favorable case, they are\nmultiplied together (Y framebuffer). For RGB(A) case, the required\nmemory can also be 4 time larger. We check if resp. `m_width *\nm_height` and `4 * m_width * m_heigh` stay within the `int` higher\nlimit. Thanks to @GAP-dev for bringing this issue.\n\nThis commit also cleans a bit raw memory allocation in favor of\n`std::vector` container.",
  "commit_hash": "d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9",
  "git_url": "https://github.com/afichet/openexr-viewer/commit/d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9",
  "file_path": "src/model/framebuffer/FramebufferModel.cpp",
  "func_name": "FramebufferModel::~FramebufferModel",
  "func_before": "FramebufferModel::~FramebufferModel()\n{\n    delete[] m_pixelBuffer;\n}",
  "abstract_func_before": "FramebufferModel::~VAR_0()\n{\n    delete[] VAR_1;\n}",
  "func_graph_path_before": "afichet/openexr-viewer/d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9/FramebufferModel.cpp/vul/before/1.json",
  "func": "FramebufferModel::~FramebufferModel() {}",
  "abstract_func": "FramebufferModel::~VAR_0() {}",
  "func_graph_path": "afichet/openexr-viewer/d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9/FramebufferModel.cpp/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1 @@\n-FramebufferModel::~FramebufferModel()\n-{\n-    delete[] m_pixelBuffer;\n-}\n+FramebufferModel::~FramebufferModel() {}",
  "diff_line_info": {
    "deleted_lines": [
      "FramebufferModel::~FramebufferModel()",
      "{",
      "    delete[] m_pixelBuffer;",
      "}"
    ],
    "added_lines": [
      "FramebufferModel::~FramebufferModel() {}"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/afichet/openexr-viewer/pull/44",
  "description": {
    "pr_info": {
      "title": "Fix segfault",
      "number": 44
    },
    "comment": [
      "When the total memory required to store the whole image exceeds the upper int limit, in many places, there is memory violation #43.\r\n\r\nThis PR prevent this issue by performing an early check on the required memory size prior to allocation and access. Future revision shall handle such files by using larger types."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "The patch addresses an integer overflow vulnerability leading to memory violations. It replaces unsafe memory allocation with `std::vector`, which is a secure approach. All aspects align clearly.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}