{
  "cve_id": "CVE-2020-36282",
  "cwe_ids": [
    "CWE-502"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "rabbitmq/rabbitmq-jms-client",
  "commit_msg": "Use trusted packages in StreamMessage\n\nStreamMessage now uses the same \"white list\" mechanism as\nObjectMessage to avoid some arbitrary code execution on deserialization.\n\nEven though StreamMessage is supposed to handle only primitive types,\nit is still to possible to send a message that contains an arbitrary\nserializable instance. The consuming application application may\nthen execute code from this class on deserialization.\n\nThe fix consists in using the list of trusted packages that can be\nset at the connection factory level.\n\nFixes #135",
  "commit_hash": "f647e5dbfe055a2ca8cbb16dd70f9d50d888b638",
  "git_url": "https://github.com/rabbitmq/rabbitmq-jms-client/commit/f647e5dbfe055a2ca8cbb16dd70f9d50d888b638",
  "file_path": "src/main/java/com/rabbitmq/jms/client/message/RMQStreamMessage.java",
  "func_name": "readBody",
  "func_before": "@Override\n    protected void readBody(ObjectInput inputStream, ByteArrayInputStream bin) throws IOException, ClassNotFoundException {\n        int len = inputStream.readInt();\n        buf = new byte[len];\n        inputStream.read(buf);\n        this.reading = true;\n        this.bin = new ByteArrayInputStream(buf);\n        this.in = new ObjectInputStream(this.bin);\n    }",
  "abstract_func_before": "@Override\n    protected void readBody(ObjectInput VAR_0, ByteArrayInputStream VAR_1) throws IOException, ClassNotFoundException {\n        int VAR_2 = VAR_0.readInt();\n        VAR_3 = new byte[VAR_2];\n        VAR_0.read(VAR_3);\n        this.reading = true;\n        this.bin = new ByteArrayInputStream(VAR_3);\n        this.in = new ObjectInputStream(this.bin);\n    }",
  "func_graph_path_before": "rabbitmq/rabbitmq-jms-client/f647e5dbfe055a2ca8cbb16dd70f9d50d888b638/RMQStreamMessage.java/vul/before/0.json",
  "func": "@Override\n    protected void readBody(ObjectInput inputStream, ByteArrayInputStream bin) throws IOException, ClassNotFoundException {\n        int len = inputStream.readInt();\n        buf = new byte[len];\n        inputStream.read(buf);\n        this.reading = true;\n        this.bin = new ByteArrayInputStream(buf);\n        this.in = new WhiteListObjectInputStream(this.bin, this.trustedPackages);\n    }",
  "abstract_func": "@Override\n    protected void readBody(ObjectInput VAR_0, ByteArrayInputStream VAR_1) throws IOException, ClassNotFoundException {\n        int VAR_2 = VAR_0.readInt();\n        VAR_3 = new byte[VAR_2];\n        VAR_0.read(VAR_3);\n        this.reading = true;\n        this.bin = new ByteArrayInputStream(VAR_3);\n        this.in = new WhiteListObjectInputStream(this.bin, this.trustedPackages);\n    }",
  "func_graph_path": "rabbitmq/rabbitmq-jms-client/f647e5dbfe055a2ca8cbb16dd70f9d50d888b638/RMQStreamMessage.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -5,5 +5,5 @@\n         inputStream.read(buf);\n         this.reading = true;\n         this.bin = new ByteArrayInputStream(buf);\n-        this.in = new ObjectInputStream(this.bin);\n+        this.in = new WhiteListObjectInputStream(this.bin, this.trustedPackages);\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "        this.in = new ObjectInputStream(this.bin);"
    ],
    "added_lines": [
      "        this.in = new WhiteListObjectInputStream(this.bin, this.trustedPackages);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/rabbitmq/rabbitmq-jms-client/pull/136",
  "description": {
    "pr_info": {
      "title": "Use trusted packages in StreamMessage",
      "number": 136
    },
    "comment": [
      "StreamMessage now uses the same \"white list\" mechanism as\r\nObjectMessage to avoid some arbitrary code execution on deserialization.\r\n\r\nEven though StreamMessage is supposed to handle only primitive types,\r\nit is still to possible to send a message that contains an arbitrary\r\nserializable instance. The consuming application application may\r\nthen execute code from this class on deserialization.\r\n\r\nThe fix consists in using the list of trusted packages that can be\r\nset at the connection factory level.\r\n\r\nFixes #135"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "The patch addresses a security issue by implementing a whitelist mechanism to prevent deserialization vulnerabilities through the StreamMessage class. The code change specifically targets deserialization by using a trusted package list, which aligns with the commit message describing a security vulnerability concerning arbitrary code execution. \n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}