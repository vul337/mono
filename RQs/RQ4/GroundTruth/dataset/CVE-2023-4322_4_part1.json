{
  "cve_id": "CVE-2023-4322",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix 1byte heap oobread in the brainfuck disassembler\n\n* https://huntr.dev/bounties/06e2484c-d6f1-4497-af67-26549be9fffd/\n* Kudos to @7resp4ss for reporting",
  "commit_hash": "ba919adb74ac368bf76b150a00347ded78b572dd",
  "git_url": "https://github.com/radareorg/radare2/commit/ba919adb74ac368bf76b150a00347ded78b572dd",
  "file_path": "libr/core/cmd_anal.c",
  "func_name": "cmd_sdbk",
  "func_before": "static void cmd_sdbk(Sdb *db, const char *input) {\n\tchar *out = (input[0] == ' ')\n\t\t? sdb_querys (db, NULL, 0, input + 1)\n\t\t: sdb_querys (db, NULL, 0, \"*\");\n\tif (out) {\n\t\tr_cons_println (out);\n\t\tfree (out);\n\t} else {\n\t\tR_LOG_ERROR (\"Usage: ask [query]\");\n\t}\n}",
  "abstract_func_before": "static void cmd_sdbk(Sdb *VAR_0, const char *VAR_1) {\n\tchar *VAR_2 = (VAR_1[0] == ' ')\n\t\t? sdb_querys (VAR_0, NULL, 0, VAR_1 + 1)\n\t\t: sdb_querys (VAR_0, NULL, 0, \"*\");\n\tif (VAR_2) {\n\t\tr_cons_println (VAR_2);\n\t\tfree (VAR_2);\n\t} else {\n\t\tR_LOG_ERROR (\"Usage: ask [query]\");\n\t}\n}",
  "func_graph_path_before": "radareorg/radare2/ba919adb74ac368bf76b150a00347ded78b572dd/cmd_anal.c/vul/before/3.json",
  "func": "static void cmd_sdbk(Sdb *db, const char *input) {\n\tconst char *arg = (input[0] == ' ')? input + 1: \"*\";\n\tchar *out = sdb_querys (db, NULL, 0, arg);\n\tif (out) {\n\t\tr_cons_println (out);\n\t\tfree (out);\n\t} else {\n\t\tR_LOG_ERROR (\"Usage: ask [query]\");\n\t}\n}",
  "abstract_func": "static void cmd_sdbk(Sdb *VAR_0, const char *VAR_1) {\n\tconst char *VAR_2 = (VAR_1[0] == ' ')? VAR_1 + 1: \"*\";\n\tchar *VAR_3 = sdb_querys (VAR_0, NULL, 0, VAR_2);\n\tif (VAR_3) {\n\t\tr_cons_println (VAR_3);\n\t\tfree (VAR_3);\n\t} else {\n\t\tR_LOG_ERROR (\"Usage: ask [query]\");\n\t}\n}",
  "func_graph_path": "radareorg/radare2/ba919adb74ac368bf76b150a00347ded78b572dd/cmd_anal.c/vul/after/3.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,6 @@\n static void cmd_sdbk(Sdb *db, const char *input) {\n-\tchar *out = (input[0] == ' ')\n-\t\t? sdb_querys (db, NULL, 0, input + 1)\n-\t\t: sdb_querys (db, NULL, 0, \"*\");\n+\tconst char *arg = (input[0] == ' ')? input + 1: \"*\";\n+\tchar *out = sdb_querys (db, NULL, 0, arg);\n \tif (out) {\n \t\tr_cons_println (out);\n \t\tfree (out);",
  "diff_line_info": {
    "deleted_lines": [
      "\tchar *out = (input[0] == ' ')",
      "\t\t? sdb_querys (db, NULL, 0, input + 1)",
      "\t\t: sdb_querys (db, NULL, 0, \"*\");"
    ],
    "added_lines": [
      "\tconst char *arg = (input[0] == ' ')? input + 1: \"*\";",
      "\tchar *out = sdb_querys (db, NULL, 0, arg);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/22154",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/radareorg/radare2/pull/22154: 403 Client Error: Forbidden for url: https://api.github.com/repos/radareorg/radare2/pulls/22154",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}