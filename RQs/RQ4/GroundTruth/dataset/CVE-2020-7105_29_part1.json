{
  "cve_id": "CVE-2020-7105",
  "cwe_ids": [
    "CWE-476"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "redis/hiredis",
  "commit_msg": "Safe allocation wrappers (#754)\n\nCreate allocation wrappers with a configurable OOM handler (defaults to abort()).\r\n\r\nSee #752, #747",
  "commit_hash": "669ac9d0c843f9ccf07d4969ff6bff75fafee01f",
  "git_url": "https://github.com/redis/hiredis/commit/669ac9d0c843f9ccf07d4969ff6bff75fafee01f",
  "file_path": "dict.c",
  "func_name": "dictCreate",
  "func_before": "static dict *dictCreate(dictType *type, void *privDataPtr) {\n    dict *ht = malloc(sizeof(*ht));\n    _dictInit(ht,type,privDataPtr);\n    return ht;\n}",
  "abstract_func_before": "static dict *dictCreate(dictType *VAR_0, void *VAR_1) {\n    dict *VAR_2 = malloc(sizeof(*VAR_2));\n    _dictInit(VAR_2,VAR_0,VAR_1);\n    return VAR_2;\n}",
  "func_graph_path_before": "redis/hiredis/669ac9d0c843f9ccf07d4969ff6bff75fafee01f/dict.c/vul/before/0.json",
  "func": "static dict *dictCreate(dictType *type, void *privDataPtr) {\n    dict *ht = hi_malloc(sizeof(*ht));\n    _dictInit(ht,type,privDataPtr);\n    return ht;\n}",
  "abstract_func": "static dict *dictCreate(dictType *VAR_0, void *VAR_1) {\n    dict *VAR_2 = hi_malloc(sizeof(*VAR_2));\n    _dictInit(VAR_2,VAR_0,VAR_1);\n    return VAR_2;\n}",
  "func_graph_path": "redis/hiredis/669ac9d0c843f9ccf07d4969ff6bff75fafee01f/dict.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,5 @@\n static dict *dictCreate(dictType *type, void *privDataPtr) {\n-    dict *ht = malloc(sizeof(*ht));\n+    dict *ht = hi_malloc(sizeof(*ht));\n     _dictInit(ht,type,privDataPtr);\n     return ht;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "    dict *ht = malloc(sizeof(*ht));"
    ],
    "added_lines": [
      "    dict *ht = hi_malloc(sizeof(*ht));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/redis/hiredis/pull/754",
  "description": {
    "pr_info": {
      "title": "Safe allocation wrappers",
      "number": 754
    },
    "comment": [
      "Adds allocation wrappers that invokes a defined OOM handler.\r\n\r\nMy goal was the smallest surface area of changes possible.  Once we merge this it might be prudent to replace every `malloc`/`free` call with our wrappers.",
      "Just quoting the [last parts of the conversation in a merged PR](https://github.com/redis/hiredis/pull/752#issuecomment-577429138) from @michael-grunder \r\n\r\n>  @lamby I totally understand not wanting such a huge change just for a patch.\r\n\r\nThanks... and I think the changes in this PR would work for me. :+1: ",
      "Would be great to get some more eyes on this. :)",
      "> are we using asprintf and friends anywhere?\r\n\r\nNo, but `sds` has something similar (e.g. [sdscatfmt](https://github.com/redis/hiredis/blob/0501c623c91344e54cb2775a91509650960789b1/sds.c#L582)) although it appears that we're testing for NULL after every allocation/reallocation. \r\n\r\n",
      "Merged, thanks everyone!"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9"
}