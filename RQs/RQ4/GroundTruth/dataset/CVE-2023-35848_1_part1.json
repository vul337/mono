{
  "cve_id": "CVE-2023-35848",
  "cwe_ids": [
    "CWE-682",
    "CWE-754"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "virtualsquare/picotcp",
  "commit_msg": "More checks for correct header sizes\n\nReported-by: \"P. Amsuo, Purdue University\"",
  "commit_hash": "4b9a16764f2b12b611de9c34a50b4713d10ca401",
  "git_url": "https://github.com/virtualsquare/picotcp/commit/4b9a16764f2b12b611de9c34a50b4713d10ca401",
  "file_path": "modules/pico_tcp.c",
  "func_name": "tcp_parse_option_mss",
  "func_before": "static inline void tcp_parse_option_mss(struct pico_socket_tcp *t, uint8_t len, uint8_t *opt, uint32_t *idx)\n{\n    uint16_t mss;\n    if (tcpopt_len_check(idx, len, PICO_TCPOPTLEN_MSS) < 0)\n        return;\n\n    t->mss_ok = 1;\n    mss = short_from(opt + *idx);\n    *idx += (uint32_t)sizeof(uint16_t);\n    if (t->mss > short_be(mss))\n        t->mss = short_be(mss);\n}",
  "abstract_func_before": "static inline void tcp_parse_option_mss(struct pico_socket_tcp *VAR_0, uint8_t VAR_1, uint8_t *VAR_2, uint32_t *VAR_3)\n{\n    uint16_t VAR_4;\n    if (tcpopt_len_check(VAR_3, VAR_1, VAR_5) < 0)\n        return;\n\n    VAR_0->mss_ok = 1;\n    VAR_4 = short_from(VAR_2 + *VAR_3);\n    *VAR_3 += (uint32_t)sizeof(uint16_t);\n    if (VAR_0->mss > short_be(VAR_4))\n        VAR_0->mss = short_be(VAR_4);\n}",
  "func_graph_path_before": "virtualsquare/picotcp/4b9a16764f2b12b611de9c34a50b4713d10ca401/pico_tcp.c/vul/before/1.json",
  "func": "static inline void tcp_parse_option_mss(struct pico_socket_tcp *t, uint8_t len, uint8_t *opt, uint32_t *idx)\n{\n    uint16_t mss;\n    if (tcpopt_len_check(idx, len, PICO_TCPOPTLEN_MSS) < 0)\n        return;\n\n    if ((*idx + PICO_TCPOPTLEN_MSS) > len)\n        return;\n\n    t->mss_ok = 1;\n    mss = short_from(opt + *idx);\n    *idx += (uint32_t)sizeof(uint16_t);\n    if (t->mss > short_be(mss))\n        t->mss = short_be(mss);\n}",
  "abstract_func": "static inline void tcp_parse_option_mss(struct pico_socket_tcp *VAR_0, uint8_t VAR_1, uint8_t *VAR_2, uint32_t *VAR_3)\n{\n    uint16_t VAR_4;\n    if (tcpopt_len_check(VAR_3, VAR_1, VAR_5) < 0)\n        return;\n\n    if ((*VAR_3 + VAR_5) > VAR_1)\n        return;\n\n    VAR_0->mss_ok = 1;\n    VAR_4 = short_from(VAR_2 + *VAR_3);\n    *VAR_3 += (uint32_t)sizeof(uint16_t);\n    if (VAR_0->mss > short_be(VAR_4))\n        VAR_0->mss = short_be(VAR_4);\n}",
  "func_graph_path": "virtualsquare/picotcp/4b9a16764f2b12b611de9c34a50b4713d10ca401/pico_tcp.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,6 +2,9 @@\n {\n     uint16_t mss;\n     if (tcpopt_len_check(idx, len, PICO_TCPOPTLEN_MSS) < 0)\n+        return;\n+\n+    if ((*idx + PICO_TCPOPTLEN_MSS) > len)\n         return;\n \n     t->mss_ok = 1;",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        return;",
      "",
      "    if ((*idx + PICO_TCPOPTLEN_MSS) > len)"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/virtualsquare/picotcp/pull/15",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/virtualsquare/picotcp/pull/15: 403 Client Error: Forbidden for url: https://api.github.com/repos/virtualsquare/picotcp/pulls/15",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}