{
  "cve_id": "CVE-2017-18021",
  "cwe_ids": [
    "CWE-338"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "IJHack/QtPass",
  "commit_msg": "Qt 5.9 fallback (unix) from #338",
  "commit_hash": "2c72ed4f9809fc781aa97af43767ee0b7c8ca3b0",
  "git_url": "https://github.com/IJHack/QtPass/commit/2c72ed4f9809fc781aa97af43767ee0b7c8ca3b0",
  "file_path": "src/pass.cpp",
  "func_name": "Pass::generateRandomPassword",
  "func_before": "QString Pass::generateRandomPassword(const QString &charset,\n                                     unsigned int length) {\n  QString out;\n  for (unsigned int i = 0; i < length; ++i)\n    out.append(charset.at(boundedRandom(charset.length())));\n  return out;\n}",
  "abstract_func_before": "QString Pass::generateRandomPassword(const QString &VAR_0,\n                                     unsigned int VAR_1) {\n  QString VAR_2;\n  for (unsigned int VAR_3 = 0; VAR_3 < VAR_1; ++VAR_3)\n    VAR_2.append(VAR_0.at(boundedRandom(VAR_0.length())));\n  return VAR_2;\n}",
  "func_graph_path_before": "IJHack/QtPass/2c72ed4f9809fc781aa97af43767ee0b7c8ca3b0/pass.cpp/vul/before/1.json",
  "func": "QString Pass::generateRandomPassword(const QString &charset,\n                                     unsigned int length) {\n  QString out;\n  for (unsigned int i = 0; i < length; ++i) {\n    out.append(charset.at(static_cast<int>(\n        boundedRandom(static_cast<quint32>(charset.length())))));\n  }\n  return out;\n}",
  "abstract_func": "QString Pass::generateRandomPassword(const QString &VAR_0,\n                                     unsigned int VAR_1) {\n  QString VAR_2;\n  for (unsigned int VAR_3 = 0; VAR_3 < VAR_1; ++VAR_3) {\n    VAR_2.append(VAR_0.at(VAR_4<int>(\n        boundedRandom(VAR_4<quint32>(VAR_0.length())))));\n  }\n  return VAR_2;\n}",
  "func_graph_path": "IJHack/QtPass/2c72ed4f9809fc781aa97af43767ee0b7c8ca3b0/pass.cpp/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,9 @@\n QString Pass::generateRandomPassword(const QString &charset,\n                                      unsigned int length) {\n   QString out;\n-  for (unsigned int i = 0; i < length; ++i)\n-    out.append(charset.at(boundedRandom(charset.length())));\n+  for (unsigned int i = 0; i < length; ++i) {\n+    out.append(charset.at(static_cast<int>(\n+        boundedRandom(static_cast<quint32>(charset.length())))));\n+  }\n   return out;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "  for (unsigned int i = 0; i < length; ++i)",
      "    out.append(charset.at(boundedRandom(charset.length())));"
    ],
    "added_lines": [
      "  for (unsigned int i = 0; i < length; ++i) {",
      "    out.append(charset.at(static_cast<int>(",
      "        boundedRandom(static_cast<quint32>(charset.length())))));",
      "  }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/IJHack/QtPass/pull/342",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/IJHack/QtPass/pull/342: 403 Client Error: Forbidden for url: https://api.github.com/repos/IJHack/QtPass/pulls/342",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.7\n\nThe patch addresses a type casting issue to ensure compatibility with an older version of Qt on Unix systems, falling under a bug fix or feature upgrade rather than a security vulnerability. The confidence is moderate because while the code change could have security implications, there's no explicit mention of security concerns, making the classification context-dependent."
}