{
  "cve_id": "CVE-2019-25048",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "libressl/portable",
  "commit_msg": "Make pthread_mutex static initialisation work on Windows.\n\nThis takes the dynamic initialisation code added to CRYPTO_lock() in e5081719\nand applies it to the Window's pthread_mutex implementation. This allows for\nPTHREAD_MUTEX_INITIALIZER to be used on Windows.\n\nbcook has agreed to place this code in the public domain (as per the rest of\nthe code in pthread.h).",
  "commit_hash": "17c88164016df821df2dff4b2b1291291ec4f28a",
  "git_url": "https://github.com/libressl/portable/commit/17c88164016df821df2dff4b2b1291291ec4f28a",
  "file_path": "include/compat/pthread.h",
  "func_name": "pthread_mutex_init",
  "func_before": "static inline int\npthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *attr)\n{\n\tInitializeCriticalSection(mutex);\n\treturn 0;\n}",
  "abstract_func_before": "static inline int\npthread_mutex_init(pthread_mutex_t *VAR_0, const pthread_mutexattr_t *VAR_1)\n{\n\tInitializeCriticalSection(VAR_0);\n\treturn 0;\n}",
  "func_graph_path_before": "libressl/portable/17c88164016df821df2dff4b2b1291291ec4f28a/pthread.h/vul/before/2.json",
  "func": "static inline int\npthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *attr)\n{\n\tif ((mutex->lock = malloc(sizeof(CRITICAL_SECTION))) == NULL)\n\t\texit(ENOMEM);\n\tInitializeCriticalSection(mutex->lock);\n\treturn 0;\n}",
  "abstract_func": "static inline int\npthread_mutex_init(pthread_mutex_t *VAR_0, const pthread_mutexattr_t *VAR_1)\n{\n\tif ((VAR_0->lock = malloc(sizeof(VAR_2))) == NULL)\n\t\texit(VAR_3);\n\tInitializeCriticalSection(VAR_0->lock);\n\treturn 0;\n}",
  "func_graph_path": "libressl/portable/17c88164016df821df2dff4b2b1291291ec4f28a/pthread.h/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,8 @@\n static inline int\n pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *attr)\n {\n-\tInitializeCriticalSection(mutex);\n+\tif ((mutex->lock = malloc(sizeof(CRITICAL_SECTION))) == NULL)\n+\t\texit(ENOMEM);\n+\tInitializeCriticalSection(mutex->lock);\n \treturn 0;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\tInitializeCriticalSection(mutex);"
    ],
    "added_lines": [
      "\tif ((mutex->lock = malloc(sizeof(CRITICAL_SECTION))) == NULL)",
      "\t\texit(ENOMEM);",
      "\tInitializeCriticalSection(mutex->lock);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libressl/portable/pull/623",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/libressl/portable/pull/623: 403 Client Error: Forbidden for url: https://api.github.com/repos/libressl/portable/pulls/623",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.9  \n\n**Step-by-Step Explanation:**\n\n1. **Commit Message Analysis:** The message focuses on fixing pthread_mutex initialization for Windows, indicating a functional issue.\n2. **Vulnerability Description:** Identical to the commit message, no mention of security concerns.\n3. **Code Diff:** Adds memory allocation checks and initializes critical sections correctly, addressing a functional bug.\n4. **Purpose Evaluation:** Corrects a defect in core functionality, not related to security.\n5. **Security Check:** No security-related terms or issues mentioned.\n6. **Confidence Score:** High because the changes clearly address a functional defect without any ambiguity.\n\n**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.9"
}