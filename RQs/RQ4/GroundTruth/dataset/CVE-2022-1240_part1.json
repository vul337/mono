{
  "cve_id": "CVE-2022-1240",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix oobread in the macho parser ##crash\n\n* Reported by @Han0nly via huntr.dev\n* Reproducers: heapoverflow1\n* BountyID: e589bd97-4c74-4e79-93b5-0951a281facc",
  "commit_hash": "ca8d8b39f3e34a4fd943270330b80f1148129de4",
  "git_url": "https://github.com/radareorg/radare2/commit/ca8d8b39f3e34a4fd943270330b80f1148129de4",
  "file_path": "libr/bin/format/mach0/mach0.c",
  "func_name": "parse_relocation_info",
  "func_before": "static void parse_relocation_info(struct MACH0_(obj_t) *bin, RSkipList *relocs, ut32 offset, ut32 num) {\n\tif (!num || !offset || (st32)num < 0) {\n\t\treturn;\n\t}\n\n\tut64 total_size = num * sizeof (struct relocation_info);\n\tif (offset > bin->size) {\n\t\treturn;\n\t}\n\tif (total_size > bin->size) {\n\t\ttotal_size = bin->size - offset;\n\t\tnum = total_size /= sizeof (struct relocation_info);\n\t}\n\tstruct relocation_info *info = calloc (num, sizeof (struct relocation_info));\n\tif (!info) {\n\t\treturn;\n\t}\n\n\tif (r_buf_read_at (bin->b, offset, (ut8 *) info, total_size) < total_size) {\n\t\tfree (info);\n\t\treturn;\n\t}\n\n\tsize_t i;\n\tfor (i = 0; i < num; i++) {\n\t\tstruct relocation_info a_info = info[i];\n\t\tut32 sym_num = a_info.r_symbolnum;\n\t\tif (sym_num > bin->nsymtab) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tut32 stridx = bin->symtab[sym_num].n_strx;\n\t\tchar *sym_name = get_name (bin, stridx, false);\n\t\tif (!sym_name) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tstruct reloc_t *reloc = R_NEW0 (struct reloc_t);\n\t\tif (!reloc) {\n\t\t\tfree (info);\n\t\t\tfree (sym_name);\n\t\t\treturn;\n\t\t}\n\n\t\treloc->addr = offset_to_vaddr (bin, a_info.r_address);\n\t\treloc->offset = a_info.r_address;\n\t\treloc->ord = sym_num;\n\t\treloc->type = a_info.r_type; // enum RelocationInfoType\n\t\treloc->external = a_info.r_extern;\n\t\treloc->pc_relative = a_info.r_pcrel;\n\t\treloc->size = a_info.r_length;\n\t\tr_str_ncpy (reloc->name, sym_name, sizeof (reloc->name) - 1);\n\t\tr_skiplist_insert (relocs, reloc);\n\t\tfree (sym_name);\n\t}\n\tfree (info);\n}",
  "abstract_func_before": "static void parse_relocation_info(struct MACH0_(obj_t) *VAR_0, RSkipList *VAR_1, ut32 VAR_2, ut32 VAR_3) {\n\tif (!VAR_3 || !VAR_2 || (st32)VAR_3 < 0) {\n\t\treturn;\n\t}\n\n\tut64 VAR_4 = VAR_3 * sizeof (struct relocation_info);\n\tif (VAR_2 > VAR_0->size) {\n\t\treturn;\n\t}\n\tif (VAR_4 > VAR_0->size) {\n\t\tVAR_4 = VAR_0->size - VAR_2;\n\t\tVAR_3 = VAR_4 /= sizeof (struct relocation_info);\n\t}\n\tstruct relocation_info *VAR_5 = calloc (VAR_3, sizeof (struct relocation_info));\n\tif (!VAR_5) {\n\t\treturn;\n\t}\n\n\tif (r_buf_read_at (VAR_0->b, VAR_2, (ut8 *) VAR_5, VAR_4) < VAR_4) {\n\t\tfree (VAR_5);\n\t\treturn;\n\t}\n\n\tsize_t VAR_6;\n\tfor (VAR_6 = 0; VAR_6 < VAR_3; VAR_6++) {\n\t\tstruct relocation_info VAR_7 = VAR_5[VAR_6];\n\t\tut32 VAR_8 = VAR_7.r_symbolnum;\n\t\tif (VAR_8 > VAR_0->nsymtab) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tut32 VAR_9 = VAR_0->symtab[VAR_8].n_strx;\n\t\tchar *VAR_10 = get_name (VAR_0, VAR_9, false);\n\t\tif (!VAR_10) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tstruct reloc_t *VAR_11 = R_NEW0 (struct reloc_t);\n\t\tif (!VAR_11) {\n\t\t\tfree (VAR_5);\n\t\t\tfree (VAR_10);\n\t\t\treturn;\n\t\t}\n\n\t\tVAR_11->addr = offset_to_vaddr (VAR_0, VAR_7.r_address);\n\t\tVAR_11->offset = VAR_7.r_address;\n\t\tVAR_11->ord = VAR_8;\n\t\tVAR_11->type = VAR_7.r_type; /* COMMENT_0 */\n\t\tVAR_11->external = VAR_7.r_extern;\n\t\tVAR_11->pc_relative = VAR_7.r_pcrel;\n\t\tVAR_11->size = VAR_7.r_length;\n\t\tr_str_ncpy (VAR_11->name, VAR_10, sizeof (VAR_11->name) - 1);\n\t\tr_skiplist_insert (VAR_1, VAR_11);\n\t\tfree (VAR_10);\n\t}\n\tfree (VAR_5);\n}",
  "func_graph_path_before": null,
  "func": "static void parse_relocation_info(struct MACH0_(obj_t) *bin, RSkipList *relocs, ut32 offset, ut32 num) {\n\tif (!num || !offset || (st32)num < 0) {\n\t\treturn;\n\t}\n\n\tut64 total_size = num * sizeof (struct relocation_info);\n\tif (offset > bin->size) {\n\t\treturn;\n\t}\n\tif (total_size > bin->size) {\n\t\ttotal_size = bin->size - offset;\n\t\tnum = total_size /= sizeof (struct relocation_info);\n\t}\n\tstruct relocation_info *info = calloc (num, sizeof (struct relocation_info));\n\tif (!info) {\n\t\treturn;\n\t}\n\n\tif (r_buf_read_at (bin->b, offset, (ut8 *) info, total_size) < total_size) {\n\t\tfree (info);\n\t\treturn;\n\t}\n\n\tsize_t i;\n\tfor (i = 0; i < num; i++) {\n\t\tstruct relocation_info a_info = info[i];\n\t\tut32 sym_num = a_info.r_symbolnum;\n\t\tif (sym_num >= bin->nsymtab) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tut32 stridx = bin->symtab[sym_num].n_strx;\n\t\tchar *sym_name = get_name (bin, stridx, false);\n\t\tif (!sym_name) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tstruct reloc_t *reloc = R_NEW0 (struct reloc_t);\n\t\tif (!reloc) {\n\t\t\tfree (info);\n\t\t\tfree (sym_name);\n\t\t\treturn;\n\t\t}\n\n\t\treloc->addr = offset_to_vaddr (bin, a_info.r_address);\n\t\treloc->offset = a_info.r_address;\n\t\treloc->ord = sym_num;\n\t\treloc->type = a_info.r_type; // enum RelocationInfoType\n\t\treloc->external = a_info.r_extern;\n\t\treloc->pc_relative = a_info.r_pcrel;\n\t\treloc->size = a_info.r_length;\n\t\tr_str_ncpy (reloc->name, sym_name, sizeof (reloc->name) - 1);\n\t\tr_skiplist_insert (relocs, reloc);\n\t\tfree (sym_name);\n\t}\n\tfree (info);\n}",
  "abstract_func": "static void parse_relocation_info(struct MACH0_(obj_t) *VAR_0, RSkipList *VAR_1, ut32 VAR_2, ut32 VAR_3) {\n\tif (!VAR_3 || !VAR_2 || (st32)VAR_3 < 0) {\n\t\treturn;\n\t}\n\n\tut64 VAR_4 = VAR_3 * sizeof (struct relocation_info);\n\tif (VAR_2 > VAR_0->size) {\n\t\treturn;\n\t}\n\tif (VAR_4 > VAR_0->size) {\n\t\tVAR_4 = VAR_0->size - VAR_2;\n\t\tVAR_3 = VAR_4 /= sizeof (struct relocation_info);\n\t}\n\tstruct relocation_info *VAR_5 = calloc (VAR_3, sizeof (struct relocation_info));\n\tif (!VAR_5) {\n\t\treturn;\n\t}\n\n\tif (r_buf_read_at (VAR_0->b, VAR_2, (ut8 *) VAR_5, VAR_4) < VAR_4) {\n\t\tfree (VAR_5);\n\t\treturn;\n\t}\n\n\tsize_t VAR_6;\n\tfor (VAR_6 = 0; VAR_6 < VAR_3; VAR_6++) {\n\t\tstruct relocation_info VAR_7 = VAR_5[VAR_6];\n\t\tut32 VAR_8 = VAR_7.r_symbolnum;\n\t\tif (VAR_8 >= VAR_0->nsymtab) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tut32 VAR_9 = VAR_0->symtab[VAR_8].n_strx;\n\t\tchar *VAR_10 = get_name (VAR_0, VAR_9, false);\n\t\tif (!VAR_10) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tstruct reloc_t *VAR_11 = R_NEW0 (struct reloc_t);\n\t\tif (!VAR_11) {\n\t\t\tfree (VAR_5);\n\t\t\tfree (VAR_10);\n\t\t\treturn;\n\t\t}\n\n\t\tVAR_11->addr = offset_to_vaddr (VAR_0, VAR_7.r_address);\n\t\tVAR_11->offset = VAR_7.r_address;\n\t\tVAR_11->ord = VAR_8;\n\t\tVAR_11->type = VAR_7.r_type; /* COMMENT_0 */\n\t\tVAR_11->external = VAR_7.r_extern;\n\t\tVAR_11->pc_relative = VAR_7.r_pcrel;\n\t\tVAR_11->size = VAR_7.r_length;\n\t\tr_str_ncpy (VAR_11->name, VAR_10, sizeof (VAR_11->name) - 1);\n\t\tr_skiplist_insert (VAR_1, VAR_11);\n\t\tfree (VAR_10);\n\t}\n\tfree (VAR_5);\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -25,7 +25,7 @@\n \tfor (i = 0; i < num; i++) {\n \t\tstruct relocation_info a_info = info[i];\n \t\tut32 sym_num = a_info.r_symbolnum;\n-\t\tif (sym_num > bin->nsymtab) {\n+\t\tif (sym_num >= bin->nsymtab) {\n \t\t\tcontinue;\n \t\t}\n ",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tif (sym_num > bin->nsymtab) {"
    ],
    "added_lines": [
      "\t\tif (sym_num >= bin->nsymtab) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/19919",
  "description": {
    "pr_info": {
      "title": "Fix oobread in the macho parser ##crash",
      "number": 19919
    },
    "comment": [
      "* Reported by @Han0nly via huntr.dev\r\n* Reproducers: heapoverflow1\r\n* BountyID: e589bd97-4c74-4e79-93b5-0951a281facc\r\n\r\n<!--\r\nRead https://github.com/radareorg/radare2/blob/master/DEVELOPERS.md\r\n* PR title must be capitalized, concise and use ##tags\r\n* If the PR is fixing a ticket use 'Fix #1234 - ..' in the commit message\r\n* Follow the coding style, add tests and documentation if necessary\r\n-->\r\n\r\n- [ ] Mark this if you consider it ready to merge\r\n- [ ] I've added tests (optional)\r\n- [ ] I wrote some lines in the [book](https://github.com/radareorg/radare2book) (optional)\r\n\r\n**Description**\r\n\r\n<!-- explain your changes if necessary -->\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95\n\nThe patch addresses an out-of-bounds read vulnerability in the MachO parser, fixing a security issue as evidenced by the commit message, code change, and context from a bug bounty platform. All elements align clearly with a security fix."
}