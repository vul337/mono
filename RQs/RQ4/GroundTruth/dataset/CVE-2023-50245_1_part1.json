{
  "cve_id": "CVE-2023-50245",
  "cwe_ids": [
    "CWE-120"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "afichet/openexr-viewer",
  "commit_msg": "Early catch potential overflow issue #43\n\n`m_width` and `m_height` are of `int` type in the OpenEXR library. We\ncurrently keep the same types in our class but this may case issue\nwhen mapping 1D memory. In the most favorable case, they are\nmultiplied together (Y framebuffer). For RGB(A) case, the required\nmemory can also be 4 time larger. We check if resp. `m_width *\nm_height` and `4 * m_width * m_heigh` stay within the `int` higher\nlimit. Thanks to @GAP-dev for bringing this issue.\n\nThis commit also cleans a bit raw memory allocation in favor of\n`std::vector` container.",
  "commit_hash": "d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9",
  "git_url": "https://github.com/afichet/openexr-viewer/commit/d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9",
  "file_path": "src/model/framebuffer/FramebufferModel.cpp",
  "func_name": "FramebufferModel::FramebufferModel",
  "func_before": "FramebufferModel::FramebufferModel(QObject* parent)\n  : QObject(parent)\n  , m_pixelBuffer(nullptr)\n  , m_width(0)\n  , m_height(0)\n  , m_isImageLoaded(false)\n  , m_exposure(0)\n  , m_imageLoadingWatcher(new QFutureWatcher<void>(this))\n  , m_imageEditingWatcher(new QFutureWatcher<void>(this))\n  , m_pixelAspectRatio(1.f)\n{}",
  "abstract_func_before": "FramebufferModel::FramebufferModel(QObject* VAR_0)\n  : QObject(VAR_0)\n  , m_pixelBuffer(nullptr)\n  , m_width(0)\n  , m_height(0)\n  , m_isImageLoaded(false)\n  , m_exposure(0)\n  , m_imageLoadingWatcher(new QFutureWatcher<void>(this))\n  , m_imageEditingWatcher(new QFutureWatcher<void>(this))\n  , m_pixelAspectRatio(1.f)\n{}",
  "func_graph_path_before": "afichet/openexr-viewer/d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9/FramebufferModel.cpp/vul/before/0.json",
  "func": "FramebufferModel::FramebufferModel(QObject* parent)\n  : QObject(parent)\n  , m_width(0)\n  , m_height(0)\n  , m_isImageLoaded(false)\n  , m_exposure(0)\n  , m_imageLoadingWatcher(new QFutureWatcher<void>(this))\n  , m_imageEditingWatcher(new QFutureWatcher<void>(this))\n  , m_pixelAspectRatio(1.f)\n{}",
  "abstract_func": "FramebufferModel::FramebufferModel(QObject* VAR_0)\n  : QObject(VAR_0)\n  , m_width(0)\n  , m_height(0)\n  , m_isImageLoaded(false)\n  , m_exposure(0)\n  , m_imageLoadingWatcher(new QFutureWatcher<void>(this))\n  , m_imageEditingWatcher(new QFutureWatcher<void>(this))\n  , m_pixelAspectRatio(1.f)\n{}",
  "func_graph_path": "afichet/openexr-viewer/d0a7e85dfeb519951fb8a8d70f73f30d41cdd3d9/FramebufferModel.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,5 @@\n FramebufferModel::FramebufferModel(QObject* parent)\n   : QObject(parent)\n-  , m_pixelBuffer(nullptr)\n   , m_width(0)\n   , m_height(0)\n   , m_isImageLoaded(false)",
  "diff_line_info": {
    "deleted_lines": [
      "  , m_pixelBuffer(nullptr)"
    ],
    "added_lines": []
  },
  "is_vul": true,
  "pr_url": "https://github.com/afichet/openexr-viewer/pull/44",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/afichet/openexr-viewer/pull/44: 403 Client Error: Forbidden for url: https://api.github.com/repos/afichet/openexr-viewer/pulls/44",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9"
}