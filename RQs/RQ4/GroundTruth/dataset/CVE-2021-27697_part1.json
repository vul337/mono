{
  "cve_id": "CVE-2021-27697",
  "cwe_ids": [
    "CWE-120"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "RIOT-OS/RIOT",
  "commit_msg": "gnrc_rpl: harden validation routine for options",
  "commit_hash": "72337ebb9b9832e0fb513590191b9ad99623f0d3",
  "git_url": "https://github.com/RIOT-OS/RIOT/commit/72337ebb9b9832e0fb513590191b9ad99623f0d3",
  "file_path": "sys/net/gnrc/routing/rpl/gnrc_rpl_validation.c",
  "func_name": "gnrc_rpl_validation_options",
  "func_before": "bool gnrc_rpl_validation_options(int msg_type, gnrc_rpl_instance_t *inst,\n                                 gnrc_rpl_opt_t *opt, uint16_t len)\n{\n    uint16_t expected_len = 0;\n\n    while(expected_len < len) {\n        switch(opt->type) {\n            case (GNRC_RPL_OPT_PAD1):\n                expected_len += 1;\n                opt = (gnrc_rpl_opt_t *) (((uint8_t *) opt) + 1);\n                continue;\n\n            case (GNRC_RPL_OPT_DODAG_CONF):\n                if (msg_type != GNRC_RPL_ICMPV6_CODE_DIO) {\n                    DEBUG(\"RPL: DODAG CONF DIO option not expected\\n\");\n                    return false;\n                }\n\n                if (opt->length != GNRC_RPL_OPT_DODAG_CONF_LEN) {\n                    DEBUG(\"RPL: wrong DIO option (DODAG CONF) len: %d, expected: %d\\n\",\n                           opt->length, GNRC_RPL_OPT_DODAG_CONF_LEN);\n                    return false;\n                }\n                break;\n\n            case (GNRC_RPL_OPT_PREFIX_INFO):\n                if (msg_type != GNRC_RPL_ICMPV6_CODE_DIO) {\n                    DEBUG(\"RPL: PREFIX INFO DIO option not expected\\n\");\n                    return false;\n                }\n\n                if (opt->length != GNRC_RPL_OPT_PREFIX_INFO_LEN) {\n                    DEBUG(\"RPL: wrong DIO option (PREFIX INFO) len: %d, expected: %d\\n\",\n                           opt->length, GNRC_RPL_OPT_PREFIX_INFO_LEN);\n                    return false;\n                }\n                break;\n\n            case (GNRC_RPL_OPT_TARGET):\n                if (msg_type != GNRC_RPL_ICMPV6_CODE_DAO) {\n                    DEBUG(\"RPL: RPL TARGET DAO option not expected\\n\");\n                    return false;\n                }\n\n                if (opt->length > GNRC_RPL_OPT_TARGET_LEN) {\n                    DEBUG(\"RPL: wrong DAO option (RPL TARGET) len: %d, expected (max): %d\\n\",\n                           opt->length, GNRC_RPL_OPT_TARGET_LEN);\n                    return false;\n                }\n                break;\n\n            case (GNRC_RPL_OPT_TRANSIT):\n                if (msg_type != GNRC_RPL_ICMPV6_CODE_DAO) {\n                    DEBUG(\"RPL: RPL TRANSIT INFO DAO option not expected\\n\");\n                    return false;\n                }\n\n                uint8_t parent_addr = 0;\n                if (inst->mop == GNRC_RPL_MOP_NON_STORING_MODE) {\n                    parent_addr = sizeof(ipv6_addr_t);\n                }\n\n                if (opt->length != (GNRC_RPL_OPT_TRANSIT_INFO_LEN + parent_addr)) {\n                    DEBUG(\"RPL: wrong DAO option (TRANSIT INFO) len: %d, expected: %d\\n\",\n                           opt->length, (GNRC_RPL_OPT_TRANSIT_INFO_LEN + parent_addr));\n                    return false;\n                }\n                break;\n\n            default:\n                break;\n\n        }\n        expected_len += opt->length + sizeof(gnrc_rpl_opt_t);\n        opt = (gnrc_rpl_opt_t *) (((uint8_t *) (opt + 1)) + opt->length);\n    }\n\n    if (expected_len == len) {\n        return true;\n    }\n\n    DEBUG(\"RPL: wrong options len: %d, expected: %d\\n\", len, expected_len);\n\n    return false;\n}",
  "abstract_func_before": "bool gnrc_rpl_validation_options(int VAR_0, gnrc_rpl_instance_t *VAR_1,\n                                 gnrc_rpl_opt_t *VAR_2, uint16_t VAR_3)\n{\n    uint16_t VAR_4 = 0;\n\n    while(VAR_4 < VAR_3) {\n        switch(VAR_2->type) {\n            case (VAR_5):\n                VAR_4 += 1;\n                VAR_2 = (gnrc_rpl_opt_t *) (((uint8_t *) VAR_2) + 1);\n                continue;\n\n            case (VAR_6):\n                if (VAR_0 != VAR_7) {\n                    DEBUG(\"RPL: DODAG CONF DIO option not expected\\n\");\n                    return false;\n                }\n\n                if (VAR_2->length != VAR_8) {\n                    DEBUG(\"RPL: wrong DIO option (DODAG CONF) len: %d, expected: %d\\n\",\n                           VAR_2->length, VAR_8);\n                    return false;\n                }\n                break;\n\n            case (VAR_9):\n                if (VAR_0 != VAR_7) {\n                    DEBUG(\"RPL: PREFIX INFO DIO option not expected\\n\");\n                    return false;\n                }\n\n                if (VAR_2->length != VAR_10) {\n                    DEBUG(\"RPL: wrong DIO option (PREFIX INFO) len: %d, expected: %d\\n\",\n                           VAR_2->length, VAR_10);\n                    return false;\n                }\n                break;\n\n            case (VAR_11):\n                if (VAR_0 != VAR_12) {\n                    DEBUG(\"RPL: RPL TARGET DAO option not expected\\n\");\n                    return false;\n                }\n\n                if (VAR_2->length > VAR_13) {\n                    DEBUG(\"RPL: wrong DAO option (RPL TARGET) len: %d, expected (max): %d\\n\",\n                           VAR_2->length, VAR_13);\n                    return false;\n                }\n                break;\n\n            case (VAR_14):\n                if (VAR_0 != VAR_12) {\n                    DEBUG(\"RPL: RPL TRANSIT INFO DAO option not expected\\n\");\n                    return false;\n                }\n\n                uint8_t VAR_15 = 0;\n                if (VAR_1->mop == VAR_16) {\n                    VAR_15 = sizeof(VAR_17);\n                }\n\n                if (VAR_2->length != (VAR_18 + VAR_15)) {\n                    DEBUG(\"RPL: wrong DAO option (TRANSIT INFO) len: %d, expected: %d\\n\",\n                           VAR_2->length, (VAR_18 + VAR_15));\n                    return false;\n                }\n                break;\n\n            default:\n                break;\n\n        }\n        VAR_4 += VAR_2->length + sizeof(gnrc_rpl_opt_t);\n        VAR_2 = (gnrc_rpl_opt_t *) (((uint8_t *) (VAR_2 + 1)) + VAR_2->length);\n    }\n\n    if (VAR_4 == VAR_3) {\n        return true;\n    }\n\n    DEBUG(\"RPL: wrong options len: %d, expected: %d\\n\", VAR_3, VAR_4);\n\n    return false;\n}",
  "func_graph_path_before": "RIOT-OS/RIOT/72337ebb9b9832e0fb513590191b9ad99623f0d3/gnrc_rpl_validation.c/vul/before/0.json",
  "func": "bool gnrc_rpl_validation_options(int msg_type, gnrc_rpl_instance_t *inst,\n                                 gnrc_rpl_opt_t *opt, uint16_t len)\n{\n    uint16_t expected_len = 0;\n\n    while(expected_len < len) {\n        if (opt->type == GNRC_RPL_OPT_PAD1) {\n            expected_len += 1;\n            opt = (gnrc_rpl_opt_t *) (((uint8_t *) opt) + 1);\n            continue;\n        }\n\n        if ((expected_len + sizeof(gnrc_rpl_opt_t)) > len) {\n            break;\n        }\n\n        switch(opt->type) {\n            case (GNRC_RPL_OPT_DODAG_CONF):\n                if (msg_type != GNRC_RPL_ICMPV6_CODE_DIO) {\n                    DEBUG(\"RPL: DODAG CONF DIO option not expected\\n\");\n                    return false;\n                }\n\n                if (opt->length != GNRC_RPL_OPT_DODAG_CONF_LEN) {\n                    DEBUG(\"RPL: wrong DIO option (DODAG CONF) len: %d, expected: %d\\n\",\n                           opt->length, GNRC_RPL_OPT_DODAG_CONF_LEN);\n                    return false;\n                }\n                break;\n\n            case (GNRC_RPL_OPT_PREFIX_INFO):\n                if (msg_type != GNRC_RPL_ICMPV6_CODE_DIO) {\n                    DEBUG(\"RPL: PREFIX INFO DIO option not expected\\n\");\n                    return false;\n                }\n\n                if (opt->length != GNRC_RPL_OPT_PREFIX_INFO_LEN) {\n                    DEBUG(\"RPL: wrong DIO option (PREFIX INFO) len: %d, expected: %d\\n\",\n                           opt->length, GNRC_RPL_OPT_PREFIX_INFO_LEN);\n                    return false;\n                }\n                break;\n\n            case (GNRC_RPL_OPT_TARGET):\n                if (msg_type != GNRC_RPL_ICMPV6_CODE_DAO) {\n                    DEBUG(\"RPL: RPL TARGET DAO option not expected\\n\");\n                    return false;\n                }\n\n                if (opt->length > GNRC_RPL_OPT_TARGET_LEN) {\n                    DEBUG(\"RPL: wrong DAO option (RPL TARGET) len: %d, expected (max): %d\\n\",\n                           opt->length, GNRC_RPL_OPT_TARGET_LEN);\n                    return false;\n                }\n                break;\n\n            case (GNRC_RPL_OPT_TRANSIT):\n                if (msg_type != GNRC_RPL_ICMPV6_CODE_DAO) {\n                    DEBUG(\"RPL: RPL TRANSIT INFO DAO option not expected\\n\");\n                    return false;\n                }\n\n                uint8_t parent_addr = 0;\n                if (inst->mop == GNRC_RPL_MOP_NON_STORING_MODE) {\n                    parent_addr = sizeof(ipv6_addr_t);\n                }\n\n                if (opt->length != (GNRC_RPL_OPT_TRANSIT_INFO_LEN + parent_addr)) {\n                    DEBUG(\"RPL: wrong DAO option (TRANSIT INFO) len: %d, expected: %d\\n\",\n                           opt->length, (GNRC_RPL_OPT_TRANSIT_INFO_LEN + parent_addr));\n                    return false;\n                }\n                break;\n\n            default:\n                break;\n\n        }\n        expected_len += opt->length + sizeof(gnrc_rpl_opt_t);\n\n        if (expected_len >= len) {\n          break;\n        }\n\n        opt = (gnrc_rpl_opt_t *) (((uint8_t *) (opt + 1)) + opt->length);\n    }\n\n    if (expected_len == len) {\n        return true;\n    }\n\n    DEBUG(\"RPL: wrong options len: %d, expected: %d\\n\", len, expected_len);\n\n    return false;\n}",
  "abstract_func": "bool gnrc_rpl_validation_options(int VAR_0, gnrc_rpl_instance_t *VAR_1,\n                                 gnrc_rpl_opt_t *VAR_2, uint16_t VAR_3)\n{\n    uint16_t VAR_4 = 0;\n\n    while(VAR_4 < VAR_3) {\n        if (VAR_2->type == VAR_5) {\n            VAR_4 += 1;\n            VAR_2 = (gnrc_rpl_opt_t *) (((uint8_t *) VAR_2) + 1);\n            continue;\n        }\n\n        if ((VAR_4 + sizeof(gnrc_rpl_opt_t)) > VAR_3) {\n            break;\n        }\n\n        switch(VAR_2->type) {\n            case (VAR_6):\n                if (VAR_0 != VAR_7) {\n                    DEBUG(\"RPL: DODAG CONF DIO option not expected\\n\");\n                    return false;\n                }\n\n                if (VAR_2->length != VAR_8) {\n                    DEBUG(\"RPL: wrong DIO option (DODAG CONF) len: %d, expected: %d\\n\",\n                           VAR_2->length, VAR_8);\n                    return false;\n                }\n                break;\n\n            case (VAR_9):\n                if (VAR_0 != VAR_7) {\n                    DEBUG(\"RPL: PREFIX INFO DIO option not expected\\n\");\n                    return false;\n                }\n\n                if (VAR_2->length != VAR_10) {\n                    DEBUG(\"RPL: wrong DIO option (PREFIX INFO) len: %d, expected: %d\\n\",\n                           VAR_2->length, VAR_10);\n                    return false;\n                }\n                break;\n\n            case (VAR_11):\n                if (VAR_0 != VAR_12) {\n                    DEBUG(\"RPL: RPL TARGET DAO option not expected\\n\");\n                    return false;\n                }\n\n                if (VAR_2->length > VAR_13) {\n                    DEBUG(\"RPL: wrong DAO option (RPL TARGET) len: %d, expected (max): %d\\n\",\n                           VAR_2->length, VAR_13);\n                    return false;\n                }\n                break;\n\n            case (VAR_14):\n                if (VAR_0 != VAR_12) {\n                    DEBUG(\"RPL: RPL TRANSIT INFO DAO option not expected\\n\");\n                    return false;\n                }\n\n                uint8_t VAR_15 = 0;\n                if (VAR_1->mop == VAR_16) {\n                    VAR_15 = sizeof(VAR_17);\n                }\n\n                if (VAR_2->length != (VAR_18 + VAR_15)) {\n                    DEBUG(\"RPL: wrong DAO option (TRANSIT INFO) len: %d, expected: %d\\n\",\n                           VAR_2->length, (VAR_18 + VAR_15));\n                    return false;\n                }\n                break;\n\n            default:\n                break;\n\n        }\n        VAR_4 += VAR_2->length + sizeof(gnrc_rpl_opt_t);\n\n        if (VAR_4 >= VAR_3) {\n          break;\n        }\n\n        VAR_2 = (gnrc_rpl_opt_t *) (((uint8_t *) (VAR_2 + 1)) + VAR_2->length);\n    }\n\n    if (VAR_4 == VAR_3) {\n        return true;\n    }\n\n    DEBUG(\"RPL: wrong options len: %d, expected: %d\\n\", VAR_3, VAR_4);\n\n    return false;\n}",
  "func_graph_path": "RIOT-OS/RIOT/72337ebb9b9832e0fb513590191b9ad99623f0d3/gnrc_rpl_validation.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,12 +4,17 @@\n     uint16_t expected_len = 0;\n \n     while(expected_len < len) {\n+        if (opt->type == GNRC_RPL_OPT_PAD1) {\n+            expected_len += 1;\n+            opt = (gnrc_rpl_opt_t *) (((uint8_t *) opt) + 1);\n+            continue;\n+        }\n+\n+        if ((expected_len + sizeof(gnrc_rpl_opt_t)) > len) {\n+            break;\n+        }\n+\n         switch(opt->type) {\n-            case (GNRC_RPL_OPT_PAD1):\n-                expected_len += 1;\n-                opt = (gnrc_rpl_opt_t *) (((uint8_t *) opt) + 1);\n-                continue;\n-\n             case (GNRC_RPL_OPT_DODAG_CONF):\n                 if (msg_type != GNRC_RPL_ICMPV6_CODE_DIO) {\n                     DEBUG(\"RPL: DODAG CONF DIO option not expected\\n\");\n@@ -72,6 +77,11 @@\n \n         }\n         expected_len += opt->length + sizeof(gnrc_rpl_opt_t);\n+\n+        if (expected_len >= len) {\n+          break;\n+        }\n+\n         opt = (gnrc_rpl_opt_t *) (((uint8_t *) (opt + 1)) + opt->length);\n     }\n ",
  "diff_line_info": {
    "deleted_lines": [
      "            case (GNRC_RPL_OPT_PAD1):",
      "                expected_len += 1;",
      "                opt = (gnrc_rpl_opt_t *) (((uint8_t *) opt) + 1);",
      "                continue;",
      ""
    ],
    "added_lines": [
      "        if (opt->type == GNRC_RPL_OPT_PAD1) {",
      "            expected_len += 1;",
      "            opt = (gnrc_rpl_opt_t *) (((uint8_t *) opt) + 1);",
      "            continue;",
      "        }",
      "",
      "        if ((expected_len + sizeof(gnrc_rpl_opt_t)) > len) {",
      "            break;",
      "        }",
      "",
      "",
      "        if (expected_len >= len) {",
      "          break;",
      "        }",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/RIOT-OS/RIOT/pull/16081",
  "description": {
    "pr_info": {
      "title": "gnrc_rpl: harden validation routine for options",
      "number": 16081
    },
    "comment": [
      "### Contribution description\r\nHardens the validation of `option` lengths.\r\nThanks @nmeum for reporting this!\r\n\r\n### Testing procedure\r\n1. as specified in #16062\r\n2. run a small RPL network (`native` will suffice) and verify that ping between nodes (use the global IPv6 address) still works.  `nib route` should show the correct routing entries.\r\n\r\n### Issues/PRs references\r\nfixes #16062"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9  \n- The changes enhance validation, preventing potential overflows, addressing a security concern as suggested by the issue reference and commit message. High confidence due to clear intent to fix a security issue."
}