{
  "cve_id": "CVE-2022-40761",
  "cwe_ids": [
    "CWE-1284"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "Samsung/mTower",
  "commit_msg": "Fixed CVE-2022-40761\n\nSigned-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>",
  "commit_hash": "c5f30c70e48786e1aef8c815f35e406a6c4fb3ae",
  "git_url": "https://github.com/Samsung/mTower/commit/c5f30c70e48786e1aef8c815f35e406a6c4fb3ae",
  "file_path": "crypto/libtomcrypt/src/tee_ltc_provider.c",
  "func_name": "crypto_cipher_alloc_ctx",
  "func_before": "TEE_Result crypto_cipher_alloc_ctx(void **ctx_ret, uint32_t algo)\n{\n\tTEE_Result res;\n\tsize_t ctx_size;\n\tvoid *ctx;\n\n\tres = cipher_get_ctx_size(algo, &ctx_size);\n\n\tif (res)\n\t\treturn res;\n\n\tctx = calloc(1, ctx_size);\n\tif (!ctx)\n\t\treturn TEE_ERROR_OUT_OF_MEMORY;\n\n\t*ctx_ret = ctx;\n\treturn TEE_SUCCESS;\n}",
  "abstract_func_before": "TEE_Result crypto_cipher_alloc_ctx(void **VAR_0, uint32_t VAR_1)\n{\n\tTEE_Result VAR_2;\n\tsize_t VAR_3;\n\tvoid *VAR_4;\n\n\tVAR_2 = cipher_get_ctx_size(VAR_1, &VAR_3);\n\n\tif (VAR_2)\n\t\treturn VAR_2;\n\n\tVAR_4 = calloc(1, VAR_3);\n\tif (!VAR_4)\n\t\treturn VAR_5;\n\n\t*VAR_0 = VAR_4;\n\treturn VAR_6;\n}",
  "func_graph_path_before": "Samsung/mTower/c5f30c70e48786e1aef8c815f35e406a6c4fb3ae/tee_ltc_provider.c/vul/before/4.json",
  "func": "TEE_Result crypto_cipher_alloc_ctx(void **ctx_ret, uint32_t algo)\n{\n\tTEE_Result res;\n\tsize_t ctx_size;\n\tvoid *ctx;\n\n\tres = cipher_get_ctx_size(algo, &ctx_size);\n\n\tif (res)\n\t\treturn res;\n\n\t// ctx = calloc(1, ctx_size);\n\tctx = TEE_Malloc(ctx_size, TEE_MALLOC_FILL_ZERO);\n\tif (!ctx)\n\t\treturn TEE_ERROR_OUT_OF_MEMORY;\n\n\t*ctx_ret = ctx;\n\treturn TEE_SUCCESS;\n}",
  "abstract_func": "TEE_Result crypto_cipher_alloc_ctx(void **VAR_0, uint32_t VAR_1)\n{\n\tTEE_Result VAR_2;\n\tsize_t VAR_3;\n\tvoid *VAR_4;\n\n\tVAR_2 = cipher_get_ctx_size(VAR_1, &VAR_3);\n\n\tif (VAR_2)\n\t\treturn VAR_2;\n\n\t/* COMMENT_0 */\n\tVAR_4 = TEE_Malloc(VAR_3, VAR_5);\n\tif (!VAR_4)\n\t\treturn VAR_6;\n\n\t*VAR_0 = VAR_4;\n\treturn VAR_7;\n}",
  "func_graph_path": "Samsung/mTower/c5f30c70e48786e1aef8c815f35e406a6c4fb3ae/tee_ltc_provider.c/vul/after/4.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -9,7 +9,8 @@\n \tif (res)\n \t\treturn res;\n \n-\tctx = calloc(1, ctx_size);\n+\t// ctx = calloc(1, ctx_size);\n+\tctx = TEE_Malloc(ctx_size, TEE_MALLOC_FILL_ZERO);\n \tif (!ctx)\n \t\treturn TEE_ERROR_OUT_OF_MEMORY;\n ",
  "diff_line_info": {
    "deleted_lines": [
      "\tctx = calloc(1, ctx_size);"
    ],
    "added_lines": [
      "\t// ctx = calloc(1, ctx_size);",
      "\tctx = TEE_Malloc(ctx_size, TEE_MALLOC_FILL_ZERO);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Samsung/mTower/pull/88",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/Samsung/mTower/pull/88: 403 Client Error: Forbidden for url: https://api.github.com/repos/Samsung/mTower/pulls/88",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}