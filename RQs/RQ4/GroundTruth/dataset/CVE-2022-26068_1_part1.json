{
  "cve_id": "CVE-2022-26068",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "pistacheio/pistache",
  "commit_msg": "fix(swagger/security): ensure that the requested file is in the UI directory\n\nThe Rest::Swagger class didn't check if the file asked from the user was\ncontained in the UI directory, thus allowing users to access arbitrary\nfiles in the filesystem.\n\nThanks to Kirill Efimov (@Kirill89) and the Snyk Security team for\nfinding and reporting the vulnerability to the Pistache team.",
  "commit_hash": "4ba6da096611d11849aa37ee342c032a306ee885",
  "git_url": "https://github.com/pistacheio/pistache/commit/4ba6da096611d11849aa37ee342c032a306ee885",
  "file_path": "src/common/description.cc",
  "func_name": "PathGroup::path",
  "func_before": "std::optional<Path> PathGroup::path(const std::string& name,\n                                            Http::Method method) const\n        {\n            auto group = paths(name);\n            auto it    = std::find_if(std::begin(group), std::end(group),\n                                   [&](const Path& p) { return p.method == method; });\n\n            if (it != std::end(group))\n            {\n                return std::optional<Path>(*it);\n            }\n            return std::nullopt;\n        }",
  "abstract_func_before": "std::optional<Path> PathGroup::path(const std::string& VAR_0,\n                                            Http::Method VAR_1) const\n        {\n            auto VAR_2 = paths(VAR_0);\n            auto VAR_3    = std::find_if(std::begin(VAR_2), std::end(VAR_2),\n                                   [&](const Path& VAR_4) { return VAR_4.method == VAR_1; });\n\n            if (VAR_3 != std::end(VAR_2))\n            {\n                return std::optional<Path>(*VAR_3);\n            }\n            return std::nullopt;\n        }",
  "func_graph_path_before": "pistacheio/pistache/4ba6da096611d11849aa37ee342c032a306ee885/description.cc/vul/before/2.json",
  "func": "std::optional<Path> PathGroup::path(const std::string& name,\n                                            Http::Method method) const\n        {\n            auto group = paths(name);\n            auto it    = std::find_if(std::begin(group), std::end(group),\n                                      [&](const Path& p) { return p.method == method; });\n\n            if (it != std::end(group))\n            {\n                return std::optional<Path>(*it);\n            }\n            return std::nullopt;\n        }",
  "abstract_func": "std::optional<Path> PathGroup::path(const std::string& VAR_0,\n                                            Http::Method VAR_1) const\n        {\n            auto VAR_2 = paths(VAR_0);\n            auto VAR_3    = std::find_if(std::begin(VAR_2), std::end(VAR_2),\n                                      [&](const Path& VAR_4) { return VAR_4.method == VAR_1; });\n\n            if (VAR_3 != std::end(VAR_2))\n            {\n                return std::optional<Path>(*VAR_3);\n            }\n            return std::nullopt;\n        }",
  "func_graph_path": "pistacheio/pistache/4ba6da096611d11849aa37ee342c032a306ee885/description.cc/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,7 +3,7 @@\n         {\n             auto group = paths(name);\n             auto it    = std::find_if(std::begin(group), std::end(group),\n-                                   [&](const Path& p) { return p.method == method; });\n+                                      [&](const Path& p) { return p.method == method; });\n \n             if (it != std::end(group))\n             {",
  "diff_line_info": {
    "deleted_lines": [
      "                                   [&](const Path& p) { return p.method == method; });"
    ],
    "added_lines": [
      "                                      [&](const Path& p) { return p.method == method; });"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/pistacheio/pistache/pull/1065",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/pistacheio/pistache/pull/1065: 403 Client Error: Forbidden for url: https://api.github.com/repos/pistacheio/pistache/pulls/1065",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}