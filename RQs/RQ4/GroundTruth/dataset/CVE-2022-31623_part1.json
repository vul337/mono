{
  "cve_id": "CVE-2022-31623",
  "cwe_ids": [
    "CWE-667"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "MariaDB/server",
  "commit_msg": "MDEV-26561 mariabackup release locks\n\nThe previous threads locked need to be released too.\n\nThis occurs if the initialization of any of the non-first\nmutex/conditition variables errors occurs.",
  "commit_hash": "7c30bc38a588b22b01f11130cfe99e7f36accf94",
  "git_url": "https://github.com/MariaDB/server/commit/7c30bc38a588b22b01f11130cfe99e7f36accf94",
  "file_path": "extra/mariabackup/ds_compress.cc",
  "func_name": "create_worker_threads",
  "func_before": "static\ncomp_thread_ctxt_t *\ncreate_worker_threads(uint n)\n{\n\tcomp_thread_ctxt_t\t*threads;\n\tuint \t\t\ti;\n\n\tthreads = (comp_thread_ctxt_t *)\n\t\tmy_malloc(sizeof(comp_thread_ctxt_t) * n, MYF(MY_FAE));\n\n\tfor (i = 0; i < n; i++) {\n\t\tcomp_thread_ctxt_t *thd = threads + i;\n\n\t\tthd->num = i + 1;\n\t\tthd->started = FALSE;\n\t\tthd->cancelled = FALSE;\n\t\tthd->data_avail = FALSE;\n\n\t\tthd->to = (char *) my_malloc(COMPRESS_CHUNK_SIZE +\n\t\t\t\t\t\t   MY_QLZ_COMPRESS_OVERHEAD,\n\t\t\t\t\t\t   MYF(MY_FAE));\n\n\t\t/* Initialize the control mutex and condition var */\n\t\tif (pthread_mutex_init(&thd->ctrl_mutex, NULL) ||\n\t\t    pthread_cond_init(&thd->ctrl_cond, NULL)) {\n\t\t\tgoto err;\n\t\t}\n\n\t\t/* Initialize and data mutex and condition var */\n\t\tif (pthread_mutex_init(&thd->data_mutex, NULL) ||\n\t\t    pthread_cond_init(&thd->data_cond, NULL)) {\n\t\t\tgoto err;\n\t\t}\n\n\t\tpthread_mutex_lock(&thd->ctrl_mutex);\n\n\t\tif (pthread_create(&thd->id, NULL, compress_worker_thread_func,\n\t\t\t\t   thd)) {\n\t\t\tmsg(\"compress: pthread_create() failed: \"\n\t\t\t    \"errno = %d\", errno);\n\t\t\tpthread_mutex_unlock(&thd->ctrl_mutex);\n\t\t\tgoto err;\n\t\t}\n\t}\n\n\t/* Wait for the threads to start */\n\tfor (i = 0; i < n; i++) {\n\t\tcomp_thread_ctxt_t *thd = threads + i;\n\n\t\twhile (thd->started == FALSE)\n\t\t\tpthread_cond_wait(&thd->ctrl_cond, &thd->ctrl_mutex);\n\t\tpthread_mutex_unlock(&thd->ctrl_mutex);\n\t}\n\n\treturn threads;\n\nerr:\n\tmy_free(threads);\n\treturn NULL;\n}",
  "abstract_func_before": "static\ncomp_thread_ctxt_t *\ncreate_worker_threads(uint VAR_0)\n{\n\tcomp_thread_ctxt_t\t*VAR_1;\n\tuint \t\t\tVAR_2;\n\n\tVAR_1 = (comp_thread_ctxt_t *)\n\t\tmy_malloc(sizeof(comp_thread_ctxt_t) * VAR_0, MYF(VAR_3));\n\n\tfor (VAR_2 = 0; VAR_2 < VAR_0; VAR_2++) {\n\t\tcomp_thread_ctxt_t *VAR_4 = VAR_1 + VAR_2;\n\n\t\tVAR_4->num = VAR_2 + 1;\n\t\tVAR_4->started = FALSE;\n\t\tVAR_4->cancelled = FALSE;\n\t\tVAR_4->data_avail = FALSE;\n\n\t\tVAR_4->to = (char *) my_malloc(VAR_5 +\n\t\t\t\t\t\t   VAR_6,\n\t\t\t\t\t\t   MYF(VAR_3));\n\n\t\t/* COMMENT_0 */\n\t\tif (pthread_mutex_init(&VAR_4->ctrl_mutex, NULL) ||\n\t\t    pthread_cond_init(&VAR_4->ctrl_cond, NULL)) {\n\t\t\tgoto err;\n\t\t}\n\n\t\t/* COMMENT_1 */\n\t\tif (pthread_mutex_init(&VAR_4->data_mutex, NULL) ||\n\t\t    pthread_cond_init(&VAR_4->data_cond, NULL)) {\n\t\t\tgoto err;\n\t\t}\n\n\t\tpthread_mutex_lock(&VAR_4->ctrl_mutex);\n\n\t\tif (pthread_create(&VAR_4->id, NULL, VAR_7,\n\t\t\t\t   VAR_4)) {\n\t\t\tmsg(\"compress: pthread_create() failed: \"\n\t\t\t    \"errno = %d\", VAR_8);\n\t\t\tpthread_mutex_unlock(&VAR_4->ctrl_mutex);\n\t\t\tgoto err;\n\t\t}\n\t}\n\n\t/* COMMENT_2 */\n\tfor (VAR_2 = 0; VAR_2 < VAR_0; VAR_2++) {\n\t\tcomp_thread_ctxt_t *VAR_4 = VAR_1 + VAR_2;\n\n\t\twhile (VAR_4->started == FALSE)\n\t\t\tpthread_cond_wait(&VAR_4->ctrl_cond, &VAR_4->ctrl_mutex);\n\t\tpthread_mutex_unlock(&VAR_4->ctrl_mutex);\n\t}\n\n\treturn VAR_1;\n\nerr:\n\tmy_free(VAR_1);\n\treturn NULL;\n}",
  "func_graph_path_before": "MariaDB/server/7c30bc38a588b22b01f11130cfe99e7f36accf94/ds_compress.cc/vul/before/0.json",
  "func": "static\ncomp_thread_ctxt_t *\ncreate_worker_threads(uint n)\n{\n\tcomp_thread_ctxt_t\t*threads;\n\tuint \t\t\ti;\n\n\tthreads = (comp_thread_ctxt_t *)\n\t\tmy_malloc(sizeof(comp_thread_ctxt_t) * n, MYF(MY_FAE));\n\n\tfor (i = 0; i < n; i++) {\n\t\tcomp_thread_ctxt_t *thd = threads + i;\n\n\t\tthd->num = i + 1;\n\t\tthd->started = FALSE;\n\t\tthd->cancelled = FALSE;\n\t\tthd->data_avail = FALSE;\n\n\t\tthd->to = (char *) my_malloc(COMPRESS_CHUNK_SIZE +\n\t\t\t\t\t\t   MY_QLZ_COMPRESS_OVERHEAD,\n\t\t\t\t\t\t   MYF(MY_FAE));\n\n\t\t/* Initialize the control mutex and condition var */\n\t\tif (pthread_mutex_init(&thd->ctrl_mutex, NULL) ||\n\t\t    pthread_cond_init(&thd->ctrl_cond, NULL)) {\n\t\t\tgoto err;\n\t\t}\n\n\t\t/* Initialize and data mutex and condition var */\n\t\tif (pthread_mutex_init(&thd->data_mutex, NULL) ||\n\t\t    pthread_cond_init(&thd->data_cond, NULL)) {\n\t\t\tgoto err;\n\t\t}\n\n\t\tpthread_mutex_lock(&thd->ctrl_mutex);\n\n\t\tif (pthread_create(&thd->id, NULL, compress_worker_thread_func,\n\t\t\t\t   thd)) {\n\t\t\tmsg(\"compress: pthread_create() failed: \"\n\t\t\t    \"errno = %d\", errno);\n\t\t\tpthread_mutex_unlock(&thd->ctrl_mutex);\n\t\t\tgoto err;\n\t\t}\n\t}\n\n\t/* Wait for the threads to start */\n\tfor (i = 0; i < n; i++) {\n\t\tcomp_thread_ctxt_t *thd = threads + i;\n\n\t\twhile (thd->started == FALSE)\n\t\t\tpthread_cond_wait(&thd->ctrl_cond, &thd->ctrl_mutex);\n\t\tpthread_mutex_unlock(&thd->ctrl_mutex);\n\t}\n\n\treturn threads;\n\nerr:\n\twhile (i > 0) {\n\t\tcomp_thread_ctxt_t *thd;\n\t\ti--;\n\t\tthd = threads + i;\n\t\tpthread_mutex_unlock(&thd->ctrl_mutex);\n\t}\n\n\tmy_free(threads);\n\treturn NULL;\n}",
  "abstract_func": "static\ncomp_thread_ctxt_t *\ncreate_worker_threads(uint VAR_0)\n{\n\tcomp_thread_ctxt_t\t*VAR_1;\n\tuint \t\t\tVAR_2;\n\n\tVAR_1 = (comp_thread_ctxt_t *)\n\t\tmy_malloc(sizeof(comp_thread_ctxt_t) * VAR_0, MYF(VAR_3));\n\n\tfor (VAR_2 = 0; VAR_2 < VAR_0; VAR_2++) {\n\t\tcomp_thread_ctxt_t *VAR_4 = VAR_1 + VAR_2;\n\n\t\tVAR_4->num = VAR_2 + 1;\n\t\tVAR_4->started = FALSE;\n\t\tVAR_4->cancelled = FALSE;\n\t\tVAR_4->data_avail = FALSE;\n\n\t\tVAR_4->to = (char *) my_malloc(VAR_5 +\n\t\t\t\t\t\t   VAR_6,\n\t\t\t\t\t\t   MYF(VAR_3));\n\n\t\t/* COMMENT_0 */\n\t\tif (pthread_mutex_init(&VAR_4->ctrl_mutex, NULL) ||\n\t\t    pthread_cond_init(&VAR_4->ctrl_cond, NULL)) {\n\t\t\tgoto err;\n\t\t}\n\n\t\t/* COMMENT_1 */\n\t\tif (pthread_mutex_init(&VAR_4->data_mutex, NULL) ||\n\t\t    pthread_cond_init(&VAR_4->data_cond, NULL)) {\n\t\t\tgoto err;\n\t\t}\n\n\t\tpthread_mutex_lock(&VAR_4->ctrl_mutex);\n\n\t\tif (pthread_create(&VAR_4->id, NULL, VAR_7,\n\t\t\t\t   VAR_4)) {\n\t\t\tmsg(\"compress: pthread_create() failed: \"\n\t\t\t    \"errno = %d\", VAR_8);\n\t\t\tpthread_mutex_unlock(&VAR_4->ctrl_mutex);\n\t\t\tgoto err;\n\t\t}\n\t}\n\n\t/* COMMENT_2 */\n\tfor (VAR_2 = 0; VAR_2 < VAR_0; VAR_2++) {\n\t\tcomp_thread_ctxt_t *VAR_4 = VAR_1 + VAR_2;\n\n\t\twhile (VAR_4->started == FALSE)\n\t\t\tpthread_cond_wait(&VAR_4->ctrl_cond, &VAR_4->ctrl_mutex);\n\t\tpthread_mutex_unlock(&VAR_4->ctrl_mutex);\n\t}\n\n\treturn VAR_1;\n\nerr:\n\twhile (VAR_2 > 0) {\n\t\tcomp_thread_ctxt_t *VAR_4;\n\t\tVAR_2--;\n\t\tVAR_4 = VAR_1 + VAR_2;\n\t\tpthread_mutex_unlock(&VAR_4->ctrl_mutex);\n\t}\n\n\tmy_free(VAR_1);\n\treturn NULL;\n}",
  "func_graph_path": "MariaDB/server/7c30bc38a588b22b01f11130cfe99e7f36accf94/ds_compress.cc/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -55,6 +55,13 @@\n \treturn threads;\n \n err:\n+\twhile (i > 0) {\n+\t\tcomp_thread_ctxt_t *thd;\n+\t\ti--;\n+\t\tthd = threads + i;\n+\t\tpthread_mutex_unlock(&thd->ctrl_mutex);\n+\t}\n+\n \tmy_free(threads);\n \treturn NULL;\n }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\twhile (i > 0) {",
      "\t\tcomp_thread_ctxt_t *thd;",
      "\t\ti--;",
      "\t\tthd = threads + i;",
      "\t\tpthread_mutex_unlock(&thd->ctrl_mutex);",
      "\t}",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/MariaDB/server/pull/1938",
  "description": {
    "pr_info": {
      "title": "MDEV-26561 Fix a bug due to unreleased lock",
      "number": 1938
    },
    "comment": [
      "Fix a bug of unreleased lock ctrl_mutex in the method create_worker_threads\r\n\r\n<!--\r\nThank you for contributing to the MariaDB Server repository!\r\n\r\nYou can help us review your changes faster by filling this template <3\r\n\r\nIf you have any questions related to MariaDB or you just want to\r\nhang out and meet other community members, please join us on\r\nhttps://mariadb.zulipchat.com/ .\r\n-->\r\n\r\n<!--\r\nIf you've already identified a https://jira.mariadb.org/ issue\r\nthat seems to track this bug/feature, please add its number below.\r\n-->\r\n- [x] *The Jira issue number for this PR is: MDEV-18187*\r\n\r\n<!--\r\nAn amazing description should answer some questions like:\r\n1. What problem is the patch trying to solve?\r\n2. If some output changed, what was it looking like before\r\n   the change and how it's looking with this patch applied\r\n3. Do you think this patch might introduce side-effects in\r\n   other parts of the server?\r\n-->\r\n## Description\r\nTODO: https://jira.mariadb.org/browse/MDEV-26561?filter=-2\r\n\r\n\r\n<!--\r\nTick one of the following boxes [x] to help us understand\r\nif the base branch for the PR is correct\r\n-->\r\n## Basing the PR against the correct MariaDB version\r\n- [ ] *This is a new feature and the PR is based against the latest MariaDB development branch*\r\n- [ ] *This is a bug fix and the PR is based against the earliest branch in which the bug can be reproduced*\r\n\r\n<!--\r\nYou might consider answering some questions like:\r\n1. Does this affect the on-disk format used by MariaDB?\r\n2. Does this change any behavior experienced by a user\r\n   who upgrades from a version prior to this patch?\r\n3. Would a user be able to start MariaDB on a datadir\r\n   created prior to your fix?\r\n-->\r\n## Backward compatibility\r\nTODO: fill details here, if applicable, or remove the section\r\n\r\n",
      "@ryancaicse , I did a few changed I'd like to you review:\r\n* I remarked this as MDEV-26561 as its the issue related to the change\r\n* Moved this back to the earliest 10.2 branch where the bug started.\r\n* I also added a second commit to release previous mutexes of the other threads. Please make sure it makes sense regardless with jump to err occurs or which iteration of the loop it is.",
      "@grooverdan It looks good. Thanks!"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.9"
}