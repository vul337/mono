{
  "cve_id": "CVE-2016-5157",
  "cwe_ids": [
    "CWE-119"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "uclouvain/openjpeg",
  "commit_msg": "Add sanity check for tile coordinates (#823)\n\nCoordinates are casted from OPJ_UINT32 to OPJ_INT32\r\nAdd sanity check for negative values and upper bound becoming lower\r\nthan lower bound.\r\nSee also\r\nhttps://pdfium.googlesource.com/pdfium/+/b6befb2ed2485a3805cddea86dc7574510178ea9",
  "commit_hash": "e078172b1c3f98d2219c37076b238fb759c751ea",
  "git_url": "https://github.com/uclouvain/openjpeg/commit/e078172b1c3f98d2219c37076b238fb759c751ea",
  "file_path": "src/lib/openjp2/tcd.c",
  "func_name": "opj_tcd_init_tile",
  "func_before": "static INLINE OPJ_BOOL opj_tcd_init_tile(opj_tcd_t *p_tcd, OPJ_UINT32 p_tile_no, OPJ_BOOL isEncoder, OPJ_FLOAT32 fraction, OPJ_SIZE_T sizeof_block, opj_event_mgr_t* manager)\n{\n\tOPJ_UINT32 (*l_gain_ptr)(OPJ_UINT32) = 00;\n\tOPJ_UINT32 compno, resno, bandno, precno, cblkno;\n\topj_tcp_t * l_tcp = 00;\n\topj_cp_t * l_cp = 00;\n\topj_tcd_tile_t * l_tile = 00;\n\topj_tccp_t *l_tccp = 00;\n\topj_tcd_tilecomp_t *l_tilec = 00;\n\topj_image_comp_t * l_image_comp = 00;\n\topj_tcd_resolution_t *l_res = 00;\n\topj_tcd_band_t *l_band = 00;\n\topj_stepsize_t * l_step_size = 00;\n\topj_tcd_precinct_t *l_current_precinct = 00;\n\topj_image_t *l_image = 00;\n\tOPJ_UINT32 p,q;\n\tOPJ_UINT32 l_level_no;\n\tOPJ_UINT32 l_pdx, l_pdy;\n\tOPJ_UINT32 l_gain;\n\tOPJ_INT32 l_x0b, l_y0b;\n\tOPJ_UINT32 l_tx0, l_ty0;\n\t/* extent of precincts , top left, bottom right**/\n\tOPJ_INT32 l_tl_prc_x_start, l_tl_prc_y_start, l_br_prc_x_end, l_br_prc_y_end;\n\t/* number of precinct for a resolution */\n\tOPJ_UINT32 l_nb_precincts;\n\t/* room needed to store l_nb_precinct precinct for a resolution */\n\tOPJ_UINT32 l_nb_precinct_size;\n\t/* number of code blocks for a precinct*/\n\tOPJ_UINT32 l_nb_code_blocks;\n\t/* room needed to store l_nb_code_blocks code blocks for a precinct*/\n\tOPJ_UINT32 l_nb_code_blocks_size;\n\t/* size of data for a tile */\n\tOPJ_UINT32 l_data_size;\n\t\n\tl_cp = p_tcd->cp;\n\tl_tcp = &(l_cp->tcps[p_tile_no]);\n\tl_tile = p_tcd->tcd_image->tiles;\n\tl_tccp = l_tcp->tccps;\n\tl_tilec = l_tile->comps;\n\tl_image = p_tcd->image;\n\tl_image_comp = p_tcd->image->comps;\n\t\n\tp = p_tile_no % l_cp->tw;       /* tile coordinates */\n\tq = p_tile_no / l_cp->tw;\n\t/*fprintf(stderr, \"Tile coordinate = %d,%d\\n\", p, q);*/\n\t\n\t/* 4 borders of the tile rescale on the image if necessary */\n\tl_tx0 = l_cp->tx0 + p * l_cp->tdx; /* can't be greater than l_image->x1 so won't overflow */\n\tl_tile->x0 = (OPJ_INT32)opj_uint_max(l_tx0, l_image->x0);\n\tl_tile->x1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(l_tx0, l_cp->tdx), l_image->x1);\n\tl_ty0 = l_cp->ty0 + q * l_cp->tdy; /* can't be greater than l_image->y1 so won't overflow */\n\tl_tile->y0 = (OPJ_INT32)opj_uint_max(l_ty0, l_image->y0);\n\tl_tile->y1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(l_ty0, l_cp->tdy), l_image->y1);\n\n\t/* testcase 1888.pdf.asan.35.988 */\n\tif (l_tccp->numresolutions == 0) {\n\t\topj_event_msg(manager, EVT_ERROR, \"tiles require at least one resolution\\n\");\n\t\treturn OPJ_FALSE;\n\t}\n\t/*fprintf(stderr, \"Tile border = %d,%d,%d,%d\\n\", l_tile->x0, l_tile->y0,l_tile->x1,l_tile->y1);*/\n\t\n\t/*tile->numcomps = image->numcomps; */\n\tfor (compno = 0; compno < l_tile->numcomps; ++compno) {\n\t\t/*fprintf(stderr, \"compno = %d/%d\\n\", compno, l_tile->numcomps);*/\n\t\tl_image_comp->resno_decoded = 0;\n\t\t/* border of each l_tile component (global) */\n\t\tl_tilec->x0 = opj_int_ceildiv(l_tile->x0, (OPJ_INT32)l_image_comp->dx);\n\t\tl_tilec->y0 = opj_int_ceildiv(l_tile->y0, (OPJ_INT32)l_image_comp->dy);\n\t\tl_tilec->x1 = opj_int_ceildiv(l_tile->x1, (OPJ_INT32)l_image_comp->dx);\n\t\tl_tilec->y1 = opj_int_ceildiv(l_tile->y1, (OPJ_INT32)l_image_comp->dy);\n\t\t/*fprintf(stderr, \"\\tTile compo border = %d,%d,%d,%d\\n\", l_tilec->x0, l_tilec->y0,l_tilec->x1,l_tilec->y1);*/\n\t\t\n\t\t/* compute l_data_size with overflow check */\n\t\tl_data_size = (OPJ_UINT32)(l_tilec->x1 - l_tilec->x0);\n\t\t/* issue 733, l_data_size == 0U, probably something wrong should be checked before getting here */\n\t\tif ((l_data_size > 0U) && ((((OPJ_UINT32)-1) / l_data_size) < (OPJ_UINT32)(l_tilec->y1 - l_tilec->y0))) {\n\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile data\\n\");\n\t\t\treturn OPJ_FALSE;\n\t\t}\n\t\tl_data_size = l_data_size * (OPJ_UINT32)(l_tilec->y1 - l_tilec->y0);\n\t\t\n\t\tif ((((OPJ_UINT32)-1) / (OPJ_UINT32)sizeof(OPJ_UINT32)) < l_data_size) {\n\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile data\\n\");\n\t\t\treturn OPJ_FALSE;\n\t\t}\n\t\tl_data_size = l_data_size * (OPJ_UINT32)sizeof(OPJ_UINT32);\n\t\tl_tilec->numresolutions = l_tccp->numresolutions;\n\t\tif (l_tccp->numresolutions < l_cp->m_specific_param.m_dec.m_reduce) {\n\t\t\tl_tilec->minimum_num_resolutions = 1;\n\t\t}\n\t\telse {\n\t\t\tl_tilec->minimum_num_resolutions = l_tccp->numresolutions - l_cp->m_specific_param.m_dec.m_reduce;\n\t\t}\n\t\t\n\t\tl_tilec->data_size_needed = l_data_size;\n\t\tif (p_tcd->m_is_decoder && !opj_alloc_tile_component_data(l_tilec)) {\n\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile data\\n\");\n\t\t\treturn OPJ_FALSE;\n\t\t}\n\t\t\n\t\tl_data_size = l_tilec->numresolutions * (OPJ_UINT32)sizeof(opj_tcd_resolution_t);\n\t\t\n\t\tif (l_tilec->resolutions == 00) {\n\t\t\tl_tilec->resolutions = (opj_tcd_resolution_t *) opj_malloc(l_data_size);\n\t\t\tif (! l_tilec->resolutions ) {\n\t\t\t\treturn OPJ_FALSE;\n\t\t\t}\n\t\t\t/*fprintf(stderr, \"\\tAllocate resolutions of tilec (opj_tcd_resolution_t): %d\\n\",l_data_size);*/\n\t\t\tl_tilec->resolutions_size = l_data_size;\n\t\t\tmemset(l_tilec->resolutions,0,l_data_size);\n\t\t}\n\t\telse if (l_data_size > l_tilec->resolutions_size) {\n\t\t\topj_tcd_resolution_t* new_resolutions = (opj_tcd_resolution_t *) opj_realloc(l_tilec->resolutions, l_data_size);\n\t\t\tif (! new_resolutions) {\n\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile resolutions\\n\");\n\t\t\t\topj_free(l_tilec->resolutions);\n\t\t\t\tl_tilec->resolutions = NULL;\n\t\t\t\tl_tilec->resolutions_size = 0;\n\t\t\t\treturn OPJ_FALSE;\n\t\t\t}\n\t\t\tl_tilec->resolutions = new_resolutions;\n\t\t\t/*fprintf(stderr, \"\\tReallocate data of tilec (int): from %d to %d x OPJ_UINT32\\n\", l_tilec->resolutions_size, l_data_size);*/\n\t\t\tmemset(((OPJ_BYTE*) l_tilec->resolutions)+l_tilec->resolutions_size,0,l_data_size - l_tilec->resolutions_size);\n\t\t\tl_tilec->resolutions_size = l_data_size;\n\t\t}\n\t\t\n\t\tl_level_no = l_tilec->numresolutions;\n\t\tl_res = l_tilec->resolutions;\n\t\tl_step_size = l_tccp->stepsizes;\n\t\tif (l_tccp->qmfbid == 0) {\n\t\t\tl_gain_ptr = &opj_dwt_getgain_real;\n\t\t}\n\t\telse {\n\t\t\tl_gain_ptr  = &opj_dwt_getgain;\n\t\t}\n\t\t/*fprintf(stderr, \"\\tlevel_no=%d\\n\",l_level_no);*/\n\t\t\n\t\tfor (resno = 0; resno < l_tilec->numresolutions; ++resno) {\n\t\t\t/*fprintf(stderr, \"\\t\\tresno = %d/%d\\n\", resno, l_tilec->numresolutions);*/\n\t\t\tOPJ_INT32 tlcbgxstart, tlcbgystart /*, brcbgxend, brcbgyend*/;\n\t\t\tOPJ_UINT32 cbgwidthexpn, cbgheightexpn;\n\t\t\tOPJ_UINT32 cblkwidthexpn, cblkheightexpn;\n\t\t\t\n\t\t\t--l_level_no;\n\t\t\t\n\t\t\t/* border for each resolution level (global) */\n\t\t\tl_res->x0 = opj_int_ceildivpow2(l_tilec->x0, (OPJ_INT32)l_level_no);\n\t\t\tl_res->y0 = opj_int_ceildivpow2(l_tilec->y0, (OPJ_INT32)l_level_no);\n\t\t\tl_res->x1 = opj_int_ceildivpow2(l_tilec->x1, (OPJ_INT32)l_level_no);\n\t\t\tl_res->y1 = opj_int_ceildivpow2(l_tilec->y1, (OPJ_INT32)l_level_no);\n\t\t\t/*fprintf(stderr, \"\\t\\t\\tres_x0= %d, res_y0 =%d, res_x1=%d, res_y1=%d\\n\", l_res->x0, l_res->y0, l_res->x1, l_res->y1);*/\n\t\t\t/* p. 35, table A-23, ISO/IEC FDIS154444-1 : 2000 (18 august 2000) */\n\t\t\tl_pdx = l_tccp->prcw[resno];\n\t\t\tl_pdy = l_tccp->prch[resno];\n\t\t\t/*fprintf(stderr, \"\\t\\t\\tpdx=%d, pdy=%d\\n\", l_pdx, l_pdy);*/\n\t\t\t/* p. 64, B.6, ISO/IEC FDIS15444-1 : 2000 (18 august 2000)  */\n\t\t\tl_tl_prc_x_start = opj_int_floordivpow2(l_res->x0, (OPJ_INT32)l_pdx) << l_pdx;\n\t\t\tl_tl_prc_y_start = opj_int_floordivpow2(l_res->y0, (OPJ_INT32)l_pdy) << l_pdy;\n\t\t\tl_br_prc_x_end = opj_int_ceildivpow2(l_res->x1, (OPJ_INT32)l_pdx) << l_pdx;\n\t\t\tl_br_prc_y_end = opj_int_ceildivpow2(l_res->y1, (OPJ_INT32)l_pdy) << l_pdy;\n\t\t\t/*fprintf(stderr, \"\\t\\t\\tprc_x_start=%d, prc_y_start=%d, br_prc_x_end=%d, br_prc_y_end=%d \\n\", l_tl_prc_x_start, l_tl_prc_y_start, l_br_prc_x_end ,l_br_prc_y_end );*/\n\t\t\t\n\t\t\tl_res->pw = (l_res->x0 == l_res->x1) ? 0U : (OPJ_UINT32)((l_br_prc_x_end - l_tl_prc_x_start) >> l_pdx);\n\t\t\tl_res->ph = (l_res->y0 == l_res->y1) ? 0U : (OPJ_UINT32)((l_br_prc_y_end - l_tl_prc_y_start) >> l_pdy);\n\t\t\t/*fprintf(stderr, \"\\t\\t\\tres_pw=%d, res_ph=%d\\n\", l_res->pw, l_res->ph );*/\n\n\t\t\tif ((l_res->pw != 0U) && ((((OPJ_UINT32)-1) / l_res->pw) < l_res->ph)) {\n\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile data\\n\");\n\t\t\t\treturn OPJ_FALSE;\n\t\t\t}\n\t\t\tl_nb_precincts = l_res->pw * l_res->ph;\n\n\t\t\tif ((((OPJ_UINT32)-1) / (OPJ_UINT32)sizeof(opj_tcd_precinct_t)) < l_nb_precincts) {\n\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile data\\n\");\n\t\t\t\treturn OPJ_FALSE;\n\t\t\t}\n\t\t\tl_nb_precinct_size = l_nb_precincts * (OPJ_UINT32)sizeof(opj_tcd_precinct_t);\n\n\t\t\tif (resno == 0) {\n\t\t\t\ttlcbgxstart = l_tl_prc_x_start;\n\t\t\t\ttlcbgystart = l_tl_prc_y_start;\n\t\t\t\t/*brcbgxend = l_br_prc_x_end;*/\n\t\t\t\t/* brcbgyend = l_br_prc_y_end;*/\n\t\t\t\tcbgwidthexpn = l_pdx;\n\t\t\t\tcbgheightexpn = l_pdy;\n\t\t\t\tl_res->numbands = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttlcbgxstart = opj_int_ceildivpow2(l_tl_prc_x_start, 1);\n\t\t\t\ttlcbgystart = opj_int_ceildivpow2(l_tl_prc_y_start, 1);\n\t\t\t\t/*brcbgxend = opj_int_ceildivpow2(l_br_prc_x_end, 1);*/\n\t\t\t\t/*brcbgyend = opj_int_ceildivpow2(l_br_prc_y_end, 1);*/\n\t\t\t\tcbgwidthexpn = l_pdx - 1;\n\t\t\t\tcbgheightexpn = l_pdy - 1;\n\t\t\t\tl_res->numbands = 3;\n\t\t\t}\n\t\t\t\n\t\t\tcblkwidthexpn = opj_uint_min(l_tccp->cblkw, cbgwidthexpn);\n\t\t\tcblkheightexpn = opj_uint_min(l_tccp->cblkh, cbgheightexpn);\n\t\t\tl_band = l_res->bands;\n\t\t\t\n\t\t\tfor (bandno = 0; bandno < l_res->numbands; ++bandno) {\n\t\t\t\tOPJ_INT32 numbps;\n\t\t\t\t/*fprintf(stderr, \"\\t\\t\\tband_no=%d/%d\\n\", bandno, l_res->numbands );*/\n\t\t\t\t\n\t\t\t\tif (resno == 0) {\n\t\t\t\t\tl_band->bandno = 0 ;\n\t\t\t\t\tl_band->x0 = opj_int_ceildivpow2(l_tilec->x0, (OPJ_INT32)l_level_no);\n\t\t\t\t\tl_band->y0 = opj_int_ceildivpow2(l_tilec->y0, (OPJ_INT32)l_level_no);\n\t\t\t\t\tl_band->x1 = opj_int_ceildivpow2(l_tilec->x1, (OPJ_INT32)l_level_no);\n\t\t\t\t\tl_band->y1 = opj_int_ceildivpow2(l_tilec->y1, (OPJ_INT32)l_level_no);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tl_band->bandno = bandno + 1;\n\t\t\t\t\t/* x0b = 1 if bandno = 1 or 3 */\n\t\t\t\t\tl_x0b = l_band->bandno&1;\n\t\t\t\t\t/* y0b = 1 if bandno = 2 or 3 */\n\t\t\t\t\tl_y0b = (OPJ_INT32)((l_band->bandno)>>1);\n\t\t\t\t\t/* l_band border (global) */\n\t\t\t\t\tl_band->x0 = opj_int64_ceildivpow2(l_tilec->x0 - ((OPJ_INT64)l_x0b << l_level_no), (OPJ_INT32)(l_level_no + 1));\n\t\t\t\t\tl_band->y0 = opj_int64_ceildivpow2(l_tilec->y0 - ((OPJ_INT64)l_y0b << l_level_no), (OPJ_INT32)(l_level_no + 1));\n\t\t\t\t\tl_band->x1 = opj_int64_ceildivpow2(l_tilec->x1 - ((OPJ_INT64)l_x0b << l_level_no), (OPJ_INT32)(l_level_no + 1));\n\t\t\t\t\tl_band->y1 = opj_int64_ceildivpow2(l_tilec->y1 - ((OPJ_INT64)l_y0b << l_level_no), (OPJ_INT32)(l_level_no + 1));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/** avoid an if with storing function pointer */\n\t\t\t\tl_gain = (*l_gain_ptr) (l_band->bandno);\n\t\t\t\tnumbps = (OPJ_INT32)(l_image_comp->prec + l_gain);\n\t\t\t\tl_band->stepsize = (OPJ_FLOAT32)(((1.0 + l_step_size->mant / 2048.0) * pow(2.0, (OPJ_INT32) (numbps - l_step_size->expn)))) * fraction;\n\t\t\t\tl_band->numbps = l_step_size->expn + (OPJ_INT32)l_tccp->numgbits - 1;      /* WHY -1 ? */\n\t\t\t\t\n\t\t\t\tif (!l_band->precincts && (l_nb_precincts > 0U)) {\n\t\t\t\t\tl_band->precincts = (opj_tcd_precinct_t *) opj_malloc( /*3 * */ l_nb_precinct_size);\n\t\t\t\t\tif (! l_band->precincts) {\n\t\t\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory to handle band precints\\n\");\n\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t}\n\t\t\t\t\t/*fprintf(stderr, \"\\t\\t\\t\\tAllocate precincts of a band (opj_tcd_precinct_t): %d\\n\",l_nb_precinct_size);     */\n\t\t\t\t\tmemset(l_band->precincts,0,l_nb_precinct_size);\n\t\t\t\t\tl_band->precincts_data_size = l_nb_precinct_size;\n\t\t\t\t}\n\t\t\t\telse if (l_band->precincts_data_size < l_nb_precinct_size) {\n\t\t\t\t\t\n\t\t\t\t\topj_tcd_precinct_t * new_precincts = (opj_tcd_precinct_t *) opj_realloc(l_band->precincts,/*3 * */ l_nb_precinct_size);\n\t\t\t\t\tif (! new_precincts) {\n\t\t\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory to handle band precints\\n\");\n\t\t\t\t\t\topj_free(l_band->precincts);\n\t\t\t\t\t\tl_band->precincts = NULL;\n\t\t\t\t\t\tl_band->precincts_data_size = 0;\n\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t}\n\t\t\t\t\tl_band->precincts = new_precincts;\n\t\t\t\t\t/*fprintf(stderr, \"\\t\\t\\t\\tReallocate precincts of a band (opj_tcd_precinct_t): from %d to %d\\n\",l_band->precincts_data_size, l_nb_precinct_size);*/\n\t\t\t\t\tmemset(((OPJ_BYTE *) l_band->precincts) + l_band->precincts_data_size,0,l_nb_precinct_size - l_band->precincts_data_size);\n\t\t\t\t\tl_band->precincts_data_size = l_nb_precinct_size;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tl_current_precinct = l_band->precincts;\n\t\t\t\tfor (precno = 0; precno < l_nb_precincts; ++precno) {\n\t\t\t\t\tOPJ_INT32 tlcblkxstart, tlcblkystart, brcblkxend, brcblkyend;\n\t\t\t\t\tOPJ_INT32 cbgxstart = tlcbgxstart + (OPJ_INT32)(precno % l_res->pw) * (1 << cbgwidthexpn);\n\t\t\t\t\tOPJ_INT32 cbgystart = tlcbgystart + (OPJ_INT32)(precno / l_res->pw) * (1 << cbgheightexpn);\n\t\t\t\t\tOPJ_INT32 cbgxend = cbgxstart + (1 << cbgwidthexpn);\n\t\t\t\t\tOPJ_INT32 cbgyend = cbgystart + (1 << cbgheightexpn);\n\t\t\t\t\t/*fprintf(stderr, \"\\t precno=%d; bandno=%d, resno=%d; compno=%d\\n\", precno, bandno , resno, compno);*/\n\t\t\t\t\t/*fprintf(stderr, \"\\t tlcbgxstart(=%d) + (precno(=%d) percent res->pw(=%d)) * (1 << cbgwidthexpn(=%d)) \\n\",tlcbgxstart,precno,l_res->pw,cbgwidthexpn);*/\n\t\t\t\t\t\n\t\t\t\t\t/* precinct size (global) */\n\t\t\t\t\t/*fprintf(stderr, \"\\t cbgxstart=%d, l_band->x0 = %d \\n\",cbgxstart, l_band->x0);*/\n\t\t\t\t\t\n\t\t\t\t\tl_current_precinct->x0 = opj_int_max(cbgxstart, l_band->x0);\n\t\t\t\t\tl_current_precinct->y0 = opj_int_max(cbgystart, l_band->y0);\n\t\t\t\t\tl_current_precinct->x1 = opj_int_min(cbgxend, l_band->x1);\n\t\t\t\t\tl_current_precinct->y1 = opj_int_min(cbgyend, l_band->y1);\n\t\t\t\t\t/*fprintf(stderr, \"\\t prc_x0=%d; prc_y0=%d, prc_x1=%d; prc_y1=%d\\n\",l_current_precinct->x0, l_current_precinct->y0 ,l_current_precinct->x1, l_current_precinct->y1);*/\n\t\t\t\t\t\n\t\t\t\t\ttlcblkxstart = opj_int_floordivpow2(l_current_precinct->x0, (OPJ_INT32)cblkwidthexpn) << cblkwidthexpn;\n\t\t\t\t\t/*fprintf(stderr, \"\\t tlcblkxstart =%d\\n\",tlcblkxstart );*/\n\t\t\t\t\ttlcblkystart = opj_int_floordivpow2(l_current_precinct->y0, (OPJ_INT32)cblkheightexpn) << cblkheightexpn;\n\t\t\t\t\t/*fprintf(stderr, \"\\t tlcblkystart =%d\\n\",tlcblkystart );*/\n\t\t\t\t\tbrcblkxend = opj_int_ceildivpow2(l_current_precinct->x1, (OPJ_INT32)cblkwidthexpn) << cblkwidthexpn;\n\t\t\t\t\t/*fprintf(stderr, \"\\t brcblkxend =%d\\n\",brcblkxend );*/\n\t\t\t\t\tbrcblkyend = opj_int_ceildivpow2(l_current_precinct->y1, (OPJ_INT32)cblkheightexpn) << cblkheightexpn;\n\t\t\t\t\t/*fprintf(stderr, \"\\t brcblkyend =%d\\n\",brcblkyend );*/\n\t\t\t\t\tl_current_precinct->cw = (OPJ_UINT32)((brcblkxend - tlcblkxstart) >> cblkwidthexpn);\n\t\t\t\t\tl_current_precinct->ch = (OPJ_UINT32)((brcblkyend - tlcblkystart) >> cblkheightexpn);\n\t\t\t\t\t\n\t\t\t\t\tl_nb_code_blocks = l_current_precinct->cw * l_current_precinct->ch;\n\t\t\t\t\t/*fprintf(stderr, \"\\t\\t\\t\\t precinct_cw = %d x recinct_ch = %d\\n\",l_current_precinct->cw, l_current_precinct->ch);      */\n\t\t\t\t\tl_nb_code_blocks_size = l_nb_code_blocks * (OPJ_UINT32)sizeof_block;\n\t\t\t\t\t\n\t\t\t\t\tif (!l_current_precinct->cblks.blocks && (l_nb_code_blocks > 0U)) {\n\t\t\t\t\t\tl_current_precinct->cblks.blocks = opj_malloc(l_nb_code_blocks_size);\n\t\t\t\t\t\tif (! l_current_precinct->cblks.blocks ) {\n\t\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*fprintf(stderr, \"\\t\\t\\t\\tAllocate cblks of a precinct (opj_tcd_cblk_dec_t): %d\\n\",l_nb_code_blocks_size);*/\n\t\t\t\t\t\t\n\t\t\t\t\t\tmemset(l_current_precinct->cblks.blocks,0,l_nb_code_blocks_size);\n\t\t\t\t\t\t\n\t\t\t\t\t\tl_current_precinct->block_size = l_nb_code_blocks_size;\n\t\t\t\t\t}\n\t\t\t\t\telse if (l_nb_code_blocks_size > l_current_precinct->block_size) {\n\t\t\t\t\t\tvoid *new_blocks = opj_realloc(l_current_precinct->cblks.blocks, l_nb_code_blocks_size);\n\t\t\t\t\t\tif (! new_blocks) {\n\t\t\t\t\t\t\topj_free(l_current_precinct->cblks.blocks);\n\t\t\t\t\t\t\tl_current_precinct->cblks.blocks = NULL;\n\t\t\t\t\t\t\tl_current_precinct->block_size = 0;\n\t\t\t\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for current precinct codeblock element\\n\");\n\t\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tl_current_precinct->cblks.blocks = new_blocks;\n\t\t\t\t\t\t/*fprintf(stderr, \"\\t\\t\\t\\tReallocate cblks of a precinct (opj_tcd_cblk_dec_t): from %d to %d\\n\",l_current_precinct->block_size, l_nb_code_blocks_size);     */\n\t\t\t\t\t\t\n\t\t\t\t\t\tmemset(((OPJ_BYTE *) l_current_precinct->cblks.blocks) + l_current_precinct->block_size\n\t\t\t\t\t\t\t\t\t ,0\n\t\t\t\t\t\t\t\t\t ,l_nb_code_blocks_size - l_current_precinct->block_size);\n\t\t\t\t\t\t\n\t\t\t\t\t\tl_current_precinct->block_size = l_nb_code_blocks_size;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (! l_current_precinct->incltree) {\n\t\t\t\t\t\tl_current_precinct->incltree = opj_tgt_create(l_current_precinct->cw, l_current_precinct->ch, manager);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tl_current_precinct->incltree = opj_tgt_init(l_current_precinct->incltree, l_current_precinct->cw, l_current_precinct->ch, manager);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! l_current_precinct->incltree)     {\n\t\t\t\t\t\topj_event_msg(manager, EVT_WARNING, \"No incltree created.\\n\");\n\t\t\t\t\t\t/*return OPJ_FALSE;*/\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! l_current_precinct->imsbtree) {\n\t\t\t\t\t\tl_current_precinct->imsbtree = opj_tgt_create(l_current_precinct->cw, l_current_precinct->ch, manager);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl_current_precinct->imsbtree = opj_tgt_init(l_current_precinct->imsbtree, l_current_precinct->cw, l_current_precinct->ch, manager);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! l_current_precinct->imsbtree) {\n\t\t\t\t\t\topj_event_msg(manager, EVT_WARNING, \"No imsbtree created.\\n\");\n\t\t\t\t\t\t/*return OPJ_FALSE;*/\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (cblkno = 0; cblkno < l_nb_code_blocks; ++cblkno) {\n\t\t\t\t\t\tOPJ_INT32 cblkxstart = tlcblkxstart + (OPJ_INT32)(cblkno % l_current_precinct->cw) * (1 << cblkwidthexpn);\n\t\t\t\t\t\tOPJ_INT32 cblkystart = tlcblkystart + (OPJ_INT32)(cblkno / l_current_precinct->cw) * (1 << cblkheightexpn);\n\t\t\t\t\t\tOPJ_INT32 cblkxend = cblkxstart + (1 << cblkwidthexpn);\n\t\t\t\t\t\tOPJ_INT32 cblkyend = cblkystart + (1 << cblkheightexpn);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (isEncoder) {\n\t\t\t\t\t\t\topj_tcd_cblk_enc_t* l_code_block = l_current_precinct->cblks.enc + cblkno;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_enc_allocate(l_code_block)) {\n\t\t\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* code-block size (global) */\n\t\t\t\t\t\t\tl_code_block->x0 = opj_int_max(cblkxstart, l_current_precinct->x0);\n\t\t\t\t\t\t\tl_code_block->y0 = opj_int_max(cblkystart, l_current_precinct->y0);\n\t\t\t\t\t\t\tl_code_block->x1 = opj_int_min(cblkxend, l_current_precinct->x1);\n\t\t\t\t\t\t\tl_code_block->y1 = opj_int_min(cblkyend, l_current_precinct->y1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_enc_allocate_data(l_code_block)) {\n\t\t\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\topj_tcd_cblk_dec_t* l_code_block = l_current_precinct->cblks.dec + cblkno;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_dec_allocate(l_code_block)) {\n\t\t\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* code-block size (global) */\n\t\t\t\t\t\t\tl_code_block->x0 = opj_int_max(cblkxstart, l_current_precinct->x0);\n\t\t\t\t\t\t\tl_code_block->y0 = opj_int_max(cblkystart, l_current_precinct->y0);\n\t\t\t\t\t\t\tl_code_block->x1 = opj_int_min(cblkxend, l_current_precinct->x1);\n\t\t\t\t\t\t\tl_code_block->y1 = opj_int_min(cblkyend, l_current_precinct->y1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t++l_current_precinct;\n\t\t\t\t} /* precno */\n\t\t\t\t++l_band;\n\t\t\t\t++l_step_size;\n\t\t\t} /* bandno */\n\t\t\t++l_res;\n\t\t} /* resno */\n\t\t++l_tccp;\n\t\t++l_tilec;\n\t\t++l_image_comp;\n\t} /* compno */\n\treturn OPJ_TRUE;\n}",
  "abstract_func_before": "static INLINE VAR_0 opj_tcd_init_tile(opj_tcd_t *VAR_1, OPJ_UINT32 VAR_2, OPJ_BOOL VAR_3, OPJ_FLOAT32 VAR_4, OPJ_SIZE_T VAR_5, opj_event_mgr_t* VAR_6)\n{\n\tOPJ_UINT32 (*VAR_7)(OPJ_UINT32) = 00;\n\tOPJ_UINT32 VAR_8, VAR_9, VAR_10, VAR_11, VAR_12;\n\topj_tcp_t * VAR_13 = 00;\n\topj_cp_t * VAR_14 = 00;\n\topj_tcd_tile_t * VAR_15 = 00;\n\topj_tccp_t *VAR_16 = 00;\n\topj_tcd_tilecomp_t *VAR_17 = 00;\n\topj_image_comp_t * VAR_18 = 00;\n\topj_tcd_resolution_t *VAR_19 = 00;\n\topj_tcd_band_t *VAR_20 = 00;\n\topj_stepsize_t * VAR_21 = 00;\n\topj_tcd_precinct_t *VAR_22 = 00;\n\topj_image_t *VAR_23 = 00;\n\tOPJ_UINT32 VAR_24,VAR_25;\n\tOPJ_UINT32 VAR_26;\n\tOPJ_UINT32 VAR_27, VAR_28;\n\tOPJ_UINT32 VAR_29;\n\tOPJ_INT32 VAR_30, VAR_31;\n\tOPJ_UINT32 VAR_32, VAR_33;\n\t/* COMMENT_0 */\n\tOPJ_INT32 VAR_34, VAR_35, VAR_36, VAR_37;\n\t/* COMMENT_1 */\n\tOPJ_UINT32 VAR_38;\n\t/* COMMENT_2 */\n\tOPJ_UINT32 VAR_39;\n\t/* COMMENT_3 */\n\tOPJ_UINT32 VAR_40;\n\t/* COMMENT_4 */\n\tOPJ_UINT32 VAR_41;\n\t/* COMMENT_5 */\n\tOPJ_UINT32 VAR_42;\n\t\n\tVAR_14 = VAR_1->cp;\n\tVAR_13 = &(VAR_14->tcps[VAR_2]);\n\tVAR_15 = VAR_1->tcd_image->tiles;\n\tVAR_16 = VAR_13->tccps;\n\tVAR_17 = VAR_15->comps;\n\tVAR_23 = VAR_1->image;\n\tVAR_18 = VAR_1->image->comps;\n\t\n\tVAR_24 = VAR_2 % VAR_14->tw;       /* COMMENT_6 */\n\tVAR_25 = VAR_2 / VAR_14->tw;\n\t/* COMMENT_7 */\n\t\n\t/* COMMENT_8 */\n\tVAR_32 = VAR_14->tx0 + VAR_24 * VAR_14->tdx; /* COMMENT_9 */\n\tVAR_15->x0 = (OPJ_INT32)opj_uint_max(VAR_32, VAR_23->x0);\n\tVAR_15->x1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(VAR_32, VAR_14->tdx), VAR_23->x1);\n\tVAR_33 = VAR_14->ty0 + VAR_25 * VAR_14->tdy; /* COMMENT_10 */\n\tVAR_15->y0 = (OPJ_INT32)opj_uint_max(VAR_33, VAR_23->y0);\n\tVAR_15->y1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(VAR_33, VAR_14->tdy), VAR_23->y1);\n\n\t/* COMMENT_11 */\n\tif (VAR_16->numresolutions == 0) {\n\t\topj_event_msg(VAR_6, VAR_43, \"tiles require at least one resolution\\n\");\n\t\treturn VAR_44;\n\t}\n\t/* COMMENT_12 */\n\t\n\t/* COMMENT_13 */\n\tfor (VAR_8 = 0; VAR_8 < VAR_15->numcomps; ++VAR_8) {\n\t\t/* COMMENT_14 */\n\t\tVAR_18->resno_decoded = 0;\n\t\t/* COMMENT_15 */\n\t\tVAR_17->x0 = opj_int_ceildiv(VAR_15->x0, (OPJ_INT32)VAR_18->dx);\n\t\tVAR_17->y0 = opj_int_ceildiv(VAR_15->y0, (OPJ_INT32)VAR_18->dy);\n\t\tVAR_17->x1 = opj_int_ceildiv(VAR_15->x1, (OPJ_INT32)VAR_18->dx);\n\t\tVAR_17->y1 = opj_int_ceildiv(VAR_15->y1, (OPJ_INT32)VAR_18->dy);\n\t\t/* COMMENT_16 */\n\t\t\n\t\t/* COMMENT_17 */\n\t\tVAR_42 = (OPJ_UINT32)(VAR_17->x1 - VAR_17->x0);\n\t\t/* COMMENT_18 */\n\t\tif ((VAR_42 > 0U) && ((((OPJ_UINT32)-1) / VAR_42) < (OPJ_UINT32)(VAR_17->y1 - VAR_17->y0))) {\n\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile data\\n\");\n\t\t\treturn VAR_44;\n\t\t}\n\t\tVAR_42 = VAR_42 * (OPJ_UINT32)(VAR_17->y1 - VAR_17->y0);\n\t\t\n\t\tif ((((OPJ_UINT32)-1) / (OPJ_UINT32)sizeof(OPJ_UINT32)) < VAR_42) {\n\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile data\\n\");\n\t\t\treturn VAR_44;\n\t\t}\n\t\tVAR_42 = VAR_42 * (OPJ_UINT32)sizeof(OPJ_UINT32);\n\t\tVAR_17->numresolutions = VAR_16->numresolutions;\n\t\tif (VAR_16->numresolutions < VAR_14->m_specific_param.m_dec.m_reduce) {\n\t\t\tVAR_17->minimum_num_resolutions = 1;\n\t\t}\n\t\telse {\n\t\t\tVAR_17->minimum_num_resolutions = VAR_16->numresolutions - VAR_14->m_specific_param.m_dec.m_reduce;\n\t\t}\n\t\t\n\t\tVAR_17->data_size_needed = VAR_42;\n\t\tif (VAR_1->m_is_decoder && !opj_alloc_tile_component_data(VAR_17)) {\n\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile data\\n\");\n\t\t\treturn VAR_44;\n\t\t}\n\t\t\n\t\tVAR_42 = VAR_17->numresolutions * (OPJ_UINT32)sizeof(opj_tcd_resolution_t);\n\t\t\n\t\tif (VAR_17->resolutions == 00) {\n\t\t\tVAR_17->resolutions = (opj_tcd_resolution_t *) opj_malloc(VAR_42);\n\t\t\tif (! VAR_17->resolutions ) {\n\t\t\t\treturn VAR_44;\n\t\t\t}\n\t\t\t/* COMMENT_19 */\n\t\t\tVAR_17->resolutions_size = VAR_42;\n\t\t\tmemset(VAR_17->resolutions,0,VAR_42);\n\t\t}\n\t\telse if (VAR_42 > VAR_17->resolutions_size) {\n\t\t\topj_tcd_resolution_t* VAR_45 = (opj_tcd_resolution_t *) opj_realloc(VAR_17->resolutions, VAR_42);\n\t\t\tif (! VAR_45) {\n\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile resolutions\\n\");\n\t\t\t\topj_free(VAR_17->resolutions);\n\t\t\t\tVAR_17->resolutions = NULL;\n\t\t\t\tVAR_17->resolutions_size = 0;\n\t\t\t\treturn VAR_44;\n\t\t\t}\n\t\t\tVAR_17->resolutions = VAR_45;\n\t\t\t/* COMMENT_20 */\n\t\t\tmemset(((OPJ_BYTE*) VAR_17->resolutions)+VAR_17->resolutions_size,0,VAR_42 - VAR_17->resolutions_size);\n\t\t\tVAR_17->resolutions_size = VAR_42;\n\t\t}\n\t\t\n\t\tVAR_26 = VAR_17->numresolutions;\n\t\tVAR_19 = VAR_17->resolutions;\n\t\tVAR_21 = VAR_16->stepsizes;\n\t\tif (VAR_16->qmfbid == 0) {\n\t\t\tVAR_7 = &VAR_46;\n\t\t}\n\t\telse {\n\t\t\tVAR_7  = &VAR_47;\n\t\t}\n\t\t/* COMMENT_21 */\n\t\t\n\t\tfor (VAR_9 = 0; VAR_9 < VAR_17->numresolutions; ++VAR_9) {\n\t\t\t/* COMMENT_22 */\n\t\t\tOPJ_INT32 VAR_48, VAR_49 /* COMMENT_23 */;\n\t\t\tOPJ_UINT32 VAR_50, VAR_51;\n\t\t\tOPJ_UINT32 VAR_52, VAR_53;\n\t\t\t\n\t\t\t--VAR_26;\n\t\t\t\n\t\t\t/* COMMENT_24 */\n\t\t\tVAR_19->x0 = opj_int_ceildivpow2(VAR_17->x0, (OPJ_INT32)VAR_26);\n\t\t\tVAR_19->y0 = opj_int_ceildivpow2(VAR_17->y0, (OPJ_INT32)VAR_26);\n\t\t\tVAR_19->x1 = opj_int_ceildivpow2(VAR_17->x1, (OPJ_INT32)VAR_26);\n\t\t\tVAR_19->y1 = opj_int_ceildivpow2(VAR_17->y1, (OPJ_INT32)VAR_26);\n\t\t\t/* COMMENT_25 */\n\t\t\t/* COMMENT_26 */\n\t\t\tVAR_27 = VAR_16->prcw[VAR_9];\n\t\t\tVAR_28 = VAR_16->prch[VAR_9];\n\t\t\t/* COMMENT_27 */\n\t\t\t/* COMMENT_28 */\n\t\t\tVAR_34 = opj_int_floordivpow2(VAR_19->x0, (OPJ_INT32)VAR_27) << VAR_27;\n\t\t\tVAR_35 = opj_int_floordivpow2(VAR_19->y0, (OPJ_INT32)VAR_28) << VAR_28;\n\t\t\tVAR_36 = opj_int_ceildivpow2(VAR_19->x1, (OPJ_INT32)VAR_27) << VAR_27;\n\t\t\tVAR_37 = opj_int_ceildivpow2(VAR_19->y1, (OPJ_INT32)VAR_28) << VAR_28;\n\t\t\t/* COMMENT_29 */\n\t\t\t\n\t\t\tVAR_19->pw = (VAR_19->x0 == VAR_19->x1) ? 0U : (OPJ_UINT32)((VAR_36 - VAR_34) >> VAR_27);\n\t\t\tVAR_19->ph = (VAR_19->y0 == VAR_19->y1) ? 0U : (OPJ_UINT32)((VAR_37 - VAR_35) >> VAR_28);\n\t\t\t/* COMMENT_30 */\n\n\t\t\tif ((VAR_19->pw != 0U) && ((((OPJ_UINT32)-1) / VAR_19->pw) < VAR_19->ph)) {\n\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile data\\n\");\n\t\t\t\treturn VAR_44;\n\t\t\t}\n\t\t\tVAR_38 = VAR_19->pw * VAR_19->ph;\n\n\t\t\tif ((((OPJ_UINT32)-1) / (OPJ_UINT32)sizeof(opj_tcd_precinct_t)) < VAR_38) {\n\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile data\\n\");\n\t\t\t\treturn VAR_44;\n\t\t\t}\n\t\t\tVAR_39 = VAR_38 * (OPJ_UINT32)sizeof(opj_tcd_precinct_t);\n\n\t\t\tif (VAR_9 == 0) {\n\t\t\t\tVAR_48 = VAR_34;\n\t\t\t\tVAR_49 = VAR_35;\n\t\t\t\t/* COMMENT_31 */\n\t\t\t\t/* COMMENT_32 */\n\t\t\t\tVAR_50 = VAR_27;\n\t\t\t\tVAR_51 = VAR_28;\n\t\t\t\tVAR_19->numbands = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tVAR_48 = opj_int_ceildivpow2(VAR_34, 1);\n\t\t\t\tVAR_49 = opj_int_ceildivpow2(VAR_35, 1);\n\t\t\t\t/* COMMENT_33 */\n\t\t\t\t/* COMMENT_34 */\n\t\t\t\tVAR_50 = VAR_27 - 1;\n\t\t\t\tVAR_51 = VAR_28 - 1;\n\t\t\t\tVAR_19->numbands = 3;\n\t\t\t}\n\t\t\t\n\t\t\tVAR_52 = opj_uint_min(VAR_16->cblkw, VAR_50);\n\t\t\tVAR_53 = opj_uint_min(VAR_16->cblkh, VAR_51);\n\t\t\tVAR_20 = VAR_19->bands;\n\t\t\t\n\t\t\tfor (VAR_10 = 0; VAR_10 < VAR_19->numbands; ++VAR_10) {\n\t\t\t\tOPJ_INT32 VAR_54;\n\t\t\t\t/* COMMENT_35 */\n\t\t\t\t\n\t\t\t\tif (VAR_9 == 0) {\n\t\t\t\t\tVAR_20->bandno = 0 ;\n\t\t\t\t\tVAR_20->x0 = opj_int_ceildivpow2(VAR_17->x0, (OPJ_INT32)VAR_26);\n\t\t\t\t\tVAR_20->y0 = opj_int_ceildivpow2(VAR_17->y0, (OPJ_INT32)VAR_26);\n\t\t\t\t\tVAR_20->x1 = opj_int_ceildivpow2(VAR_17->x1, (OPJ_INT32)VAR_26);\n\t\t\t\t\tVAR_20->y1 = opj_int_ceildivpow2(VAR_17->y1, (OPJ_INT32)VAR_26);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tVAR_20->bandno = VAR_10 + 1;\n\t\t\t\t\t/* COMMENT_36 */\n\t\t\t\t\tVAR_30 = VAR_20->bandno&1;\n\t\t\t\t\t/* COMMENT_37 */\n\t\t\t\t\tVAR_31 = (OPJ_INT32)((VAR_20->bandno)>>1);\n\t\t\t\t\t/* COMMENT_38 */\n\t\t\t\t\tVAR_20->x0 = opj_int64_ceildivpow2(VAR_17->x0 - ((OPJ_INT64)VAR_30 << VAR_26), (OPJ_INT32)(VAR_26 + 1));\n\t\t\t\t\tVAR_20->y0 = opj_int64_ceildivpow2(VAR_17->y0 - ((OPJ_INT64)VAR_31 << VAR_26), (OPJ_INT32)(VAR_26 + 1));\n\t\t\t\t\tVAR_20->x1 = opj_int64_ceildivpow2(VAR_17->x1 - ((OPJ_INT64)VAR_30 << VAR_26), (OPJ_INT32)(VAR_26 + 1));\n\t\t\t\t\tVAR_20->y1 = opj_int64_ceildivpow2(VAR_17->y1 - ((OPJ_INT64)VAR_31 << VAR_26), (OPJ_INT32)(VAR_26 + 1));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* COMMENT_39 */\n\t\t\t\tVAR_29 = (*VAR_7) (VAR_20->bandno);\n\t\t\t\tVAR_54 = (OPJ_INT32)(VAR_18->prec + VAR_29);\n\t\t\t\tVAR_20->stepsize = (OPJ_FLOAT32)(((1.0 + VAR_21->mant / 2048.0) * pow(2.0, (OPJ_INT32) (VAR_54 - VAR_21->expn)))) * VAR_4;\n\t\t\t\tVAR_20->numbps = VAR_21->expn + (OPJ_INT32)VAR_16->numgbits - 1;      /* COMMENT_40 */\n\t\t\t\t\n\t\t\t\tif (!VAR_20->precincts && (VAR_38 > 0U)) {\n\t\t\t\t\tVAR_20->precincts = (opj_tcd_precinct_t *) opj_malloc( /* COMMENT_41 */ VAR_39);\n\t\t\t\t\tif (! VAR_20->precincts) {\n\t\t\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory to handle band precints\\n\");\n\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t}\n\t\t\t\t\t/* COMMENT_42 */\n\t\t\t\t\tmemset(VAR_20->precincts,0,VAR_39);\n\t\t\t\t\tVAR_20->precincts_data_size = VAR_39;\n\t\t\t\t}\n\t\t\t\telse if (VAR_20->precincts_data_size < VAR_39) {\n\t\t\t\t\t\n\t\t\t\t\topj_tcd_precinct_t * VAR_55 = (opj_tcd_precinct_t *) opj_realloc(VAR_20->precincts,/* COMMENT_41 */ VAR_39);\n\t\t\t\t\tif (! VAR_55) {\n\t\t\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory to handle band precints\\n\");\n\t\t\t\t\t\topj_free(VAR_20->precincts);\n\t\t\t\t\t\tVAR_20->precincts = NULL;\n\t\t\t\t\t\tVAR_20->precincts_data_size = 0;\n\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t}\n\t\t\t\t\tVAR_20->precincts = VAR_55;\n\t\t\t\t\t/* COMMENT_43 */\n\t\t\t\t\tmemset(((OPJ_BYTE *) VAR_20->precincts) + VAR_20->precincts_data_size,0,VAR_39 - VAR_20->precincts_data_size);\n\t\t\t\t\tVAR_20->precincts_data_size = VAR_39;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tVAR_22 = VAR_20->precincts;\n\t\t\t\tfor (VAR_11 = 0; VAR_11 < VAR_38; ++VAR_11) {\n\t\t\t\t\tOPJ_INT32 VAR_56, VAR_57, VAR_58, VAR_59;\n\t\t\t\t\tOPJ_INT32 VAR_60 = VAR_48 + (OPJ_INT32)(VAR_11 % VAR_19->pw) * (1 << VAR_50);\n\t\t\t\t\tOPJ_INT32 VAR_61 = VAR_49 + (OPJ_INT32)(VAR_11 / VAR_19->pw) * (1 << VAR_51);\n\t\t\t\t\tOPJ_INT32 VAR_62 = VAR_60 + (1 << VAR_50);\n\t\t\t\t\tOPJ_INT32 VAR_63 = VAR_61 + (1 << VAR_51);\n\t\t\t\t\t/* COMMENT_44 */\n\t\t\t\t\t/* COMMENT_45 */\n\t\t\t\t\t\n\t\t\t\t\t/* COMMENT_46 */\n\t\t\t\t\t/* COMMENT_47 */\n\t\t\t\t\t\n\t\t\t\t\tVAR_22->x0 = opj_int_max(VAR_60, VAR_20->x0);\n\t\t\t\t\tVAR_22->y0 = opj_int_max(VAR_61, VAR_20->y0);\n\t\t\t\t\tVAR_22->x1 = opj_int_min(VAR_62, VAR_20->x1);\n\t\t\t\t\tVAR_22->y1 = opj_int_min(VAR_63, VAR_20->y1);\n\t\t\t\t\t/* COMMENT_48 */\n\t\t\t\t\t\n\t\t\t\t\tVAR_56 = opj_int_floordivpow2(VAR_22->x0, (OPJ_INT32)VAR_52) << VAR_52;\n\t\t\t\t\t/* COMMENT_49 */\n\t\t\t\t\tVAR_57 = opj_int_floordivpow2(VAR_22->y0, (OPJ_INT32)VAR_53) << VAR_53;\n\t\t\t\t\t/* COMMENT_50 */\n\t\t\t\t\tVAR_58 = opj_int_ceildivpow2(VAR_22->x1, (OPJ_INT32)VAR_52) << VAR_52;\n\t\t\t\t\t/* COMMENT_51 */\n\t\t\t\t\tVAR_59 = opj_int_ceildivpow2(VAR_22->y1, (OPJ_INT32)VAR_53) << VAR_53;\n\t\t\t\t\t/* COMMENT_52 */\n\t\t\t\t\tVAR_22->cw = (OPJ_UINT32)((VAR_58 - VAR_56) >> VAR_52);\n\t\t\t\t\tVAR_22->ch = (OPJ_UINT32)((VAR_59 - VAR_57) >> VAR_53);\n\t\t\t\t\t\n\t\t\t\t\tVAR_40 = VAR_22->cw * VAR_22->ch;\n\t\t\t\t\t/* COMMENT_53 */\n\t\t\t\t\tVAR_41 = VAR_40 * (OPJ_UINT32)VAR_5;\n\t\t\t\t\t\n\t\t\t\t\tif (!VAR_22->cblks.blocks && (VAR_40 > 0U)) {\n\t\t\t\t\t\tVAR_22->cblks.blocks = opj_malloc(VAR_41);\n\t\t\t\t\t\tif (! VAR_22->cblks.blocks ) {\n\t\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* COMMENT_54 */\n\t\t\t\t\t\t\n\t\t\t\t\t\tmemset(VAR_22->cblks.blocks,0,VAR_41);\n\t\t\t\t\t\t\n\t\t\t\t\t\tVAR_22->block_size = VAR_41;\n\t\t\t\t\t}\n\t\t\t\t\telse if (VAR_41 > VAR_22->block_size) {\n\t\t\t\t\t\tvoid *VAR_64 = opj_realloc(VAR_22->cblks.blocks, VAR_41);\n\t\t\t\t\t\tif (! VAR_64) {\n\t\t\t\t\t\t\topj_free(VAR_22->cblks.blocks);\n\t\t\t\t\t\t\tVAR_22->cblks.blocks = NULL;\n\t\t\t\t\t\t\tVAR_22->block_size = 0;\n\t\t\t\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for current precinct codeblock element\\n\");\n\t\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tVAR_22->cblks.blocks = VAR_64;\n\t\t\t\t\t\t/* COMMENT_55 */\n\t\t\t\t\t\t\n\t\t\t\t\t\tmemset(((OPJ_BYTE *) VAR_22->cblks.blocks) + VAR_22->block_size\n\t\t\t\t\t\t\t\t\t ,0\n\t\t\t\t\t\t\t\t\t ,VAR_41 - VAR_22->block_size);\n\t\t\t\t\t\t\n\t\t\t\t\t\tVAR_22->block_size = VAR_41;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (! VAR_22->incltree) {\n\t\t\t\t\t\tVAR_22->incltree = opj_tgt_create(VAR_22->cw, VAR_22->ch, VAR_6);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tVAR_22->incltree = opj_tgt_init(VAR_22->incltree, VAR_22->cw, VAR_22->ch, VAR_6);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! VAR_22->incltree)     {\n\t\t\t\t\t\topj_event_msg(VAR_6, VAR_65, \"No incltree created.\\n\");\n\t\t\t\t\t\t/* COMMENT_56 */\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! VAR_22->imsbtree) {\n\t\t\t\t\t\tVAR_22->imsbtree = opj_tgt_create(VAR_22->cw, VAR_22->ch, VAR_6);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tVAR_22->imsbtree = opj_tgt_init(VAR_22->imsbtree, VAR_22->cw, VAR_22->ch, VAR_6);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! VAR_22->imsbtree) {\n\t\t\t\t\t\topj_event_msg(VAR_6, VAR_65, \"No imsbtree created.\\n\");\n\t\t\t\t\t\t/* COMMENT_56 */\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (VAR_12 = 0; VAR_12 < VAR_40; ++VAR_12) {\n\t\t\t\t\t\tOPJ_INT32 VAR_66 = VAR_56 + (OPJ_INT32)(VAR_12 % VAR_22->cw) * (1 << VAR_52);\n\t\t\t\t\t\tOPJ_INT32 VAR_67 = VAR_57 + (OPJ_INT32)(VAR_12 / VAR_22->cw) * (1 << VAR_53);\n\t\t\t\t\t\tOPJ_INT32 VAR_68 = VAR_66 + (1 << VAR_52);\n\t\t\t\t\t\tOPJ_INT32 VAR_69 = VAR_67 + (1 << VAR_53);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (VAR_3) {\n\t\t\t\t\t\t\topj_tcd_cblk_enc_t* VAR_70 = VAR_22->cblks.enc + VAR_12;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_enc_allocate(VAR_70)) {\n\t\t\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* COMMENT_57 */\n\t\t\t\t\t\t\tVAR_70->x0 = opj_int_max(VAR_66, VAR_22->x0);\n\t\t\t\t\t\t\tVAR_70->y0 = opj_int_max(VAR_67, VAR_22->y0);\n\t\t\t\t\t\t\tVAR_70->x1 = opj_int_min(VAR_68, VAR_22->x1);\n\t\t\t\t\t\t\tVAR_70->y1 = opj_int_min(VAR_69, VAR_22->y1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_enc_allocate_data(VAR_70)) {\n\t\t\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\topj_tcd_cblk_dec_t* VAR_70 = VAR_22->cblks.dec + VAR_12;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_dec_allocate(VAR_70)) {\n\t\t\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* COMMENT_57 */\n\t\t\t\t\t\t\tVAR_70->x0 = opj_int_max(VAR_66, VAR_22->x0);\n\t\t\t\t\t\t\tVAR_70->y0 = opj_int_max(VAR_67, VAR_22->y0);\n\t\t\t\t\t\t\tVAR_70->x1 = opj_int_min(VAR_68, VAR_22->x1);\n\t\t\t\t\t\t\tVAR_70->y1 = opj_int_min(VAR_69, VAR_22->y1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t++VAR_22;\n\t\t\t\t} /* COMMENT_58 */\n\t\t\t\t++VAR_20;\n\t\t\t\t++VAR_21;\n\t\t\t} /* COMMENT_59 */\n\t\t\t++VAR_19;\n\t\t} /* COMMENT_60 */\n\t\t++VAR_16;\n\t\t++VAR_17;\n\t\t++VAR_18;\n\t} /* COMMENT_61 */\n\treturn VAR_71;\n}",
  "func_graph_path_before": null,
  "func": "static INLINE OPJ_BOOL opj_tcd_init_tile(opj_tcd_t *p_tcd, OPJ_UINT32 p_tile_no, OPJ_BOOL isEncoder, OPJ_FLOAT32 fraction, OPJ_SIZE_T sizeof_block, opj_event_mgr_t* manager)\n{\n\tOPJ_UINT32 (*l_gain_ptr)(OPJ_UINT32) = 00;\n\tOPJ_UINT32 compno, resno, bandno, precno, cblkno;\n\topj_tcp_t * l_tcp = 00;\n\topj_cp_t * l_cp = 00;\n\topj_tcd_tile_t * l_tile = 00;\n\topj_tccp_t *l_tccp = 00;\n\topj_tcd_tilecomp_t *l_tilec = 00;\n\topj_image_comp_t * l_image_comp = 00;\n\topj_tcd_resolution_t *l_res = 00;\n\topj_tcd_band_t *l_band = 00;\n\topj_stepsize_t * l_step_size = 00;\n\topj_tcd_precinct_t *l_current_precinct = 00;\n\topj_image_t *l_image = 00;\n\tOPJ_UINT32 p,q;\n\tOPJ_UINT32 l_level_no;\n\tOPJ_UINT32 l_pdx, l_pdy;\n\tOPJ_UINT32 l_gain;\n\tOPJ_INT32 l_x0b, l_y0b;\n\tOPJ_UINT32 l_tx0, l_ty0;\n\t/* extent of precincts , top left, bottom right**/\n\tOPJ_INT32 l_tl_prc_x_start, l_tl_prc_y_start, l_br_prc_x_end, l_br_prc_y_end;\n\t/* number of precinct for a resolution */\n\tOPJ_UINT32 l_nb_precincts;\n\t/* room needed to store l_nb_precinct precinct for a resolution */\n\tOPJ_UINT32 l_nb_precinct_size;\n\t/* number of code blocks for a precinct*/\n\tOPJ_UINT32 l_nb_code_blocks;\n\t/* room needed to store l_nb_code_blocks code blocks for a precinct*/\n\tOPJ_UINT32 l_nb_code_blocks_size;\n\t/* size of data for a tile */\n\tOPJ_UINT32 l_data_size;\n\t\n\tl_cp = p_tcd->cp;\n\tl_tcp = &(l_cp->tcps[p_tile_no]);\n\tl_tile = p_tcd->tcd_image->tiles;\n\tl_tccp = l_tcp->tccps;\n\tl_tilec = l_tile->comps;\n\tl_image = p_tcd->image;\n\tl_image_comp = p_tcd->image->comps;\n\t\n\tp = p_tile_no % l_cp->tw;       /* tile coordinates */\n\tq = p_tile_no / l_cp->tw;\n\t/*fprintf(stderr, \"Tile coordinate = %d,%d\\n\", p, q);*/\n\t\n\t/* 4 borders of the tile rescale on the image if necessary */\n\tl_tx0 = l_cp->tx0 + p * l_cp->tdx; /* can't be greater than l_image->x1 so won't overflow */\n\tl_tile->x0 = (OPJ_INT32)opj_uint_max(l_tx0, l_image->x0);\n\tl_tile->x1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(l_tx0, l_cp->tdx), l_image->x1);\n\t/* all those OPJ_UINT32 are casted to OPJ_INT32, let's do some sanity check */\n\tif ((l_tile->x0 < 0) || (l_tile->x1 <= l_tile->x0)) {\n\t\topj_event_msg(manager, EVT_ERROR, \"Tile X coordinates are not supported\\n\");\n\t\treturn OPJ_FALSE;\n\t}\n\tl_ty0 = l_cp->ty0 + q * l_cp->tdy; /* can't be greater than l_image->y1 so won't overflow */\n\tl_tile->y0 = (OPJ_INT32)opj_uint_max(l_ty0, l_image->y0);\n\tl_tile->y1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(l_ty0, l_cp->tdy), l_image->y1);\n\t/* all those OPJ_UINT32 are casted to OPJ_INT32, let's do some sanity check */\n\tif ((l_tile->y0 < 0) || (l_tile->y1 <= l_tile->y0)) {\n\t\topj_event_msg(manager, EVT_ERROR, \"Tile Y coordinates are not supported\\n\");\n\t\treturn OPJ_FALSE;\n\t}\n\t\n\n\t/* testcase 1888.pdf.asan.35.988 */\n\tif (l_tccp->numresolutions == 0) {\n\t\topj_event_msg(manager, EVT_ERROR, \"tiles require at least one resolution\\n\");\n\t\treturn OPJ_FALSE;\n\t}\n\t/*fprintf(stderr, \"Tile border = %d,%d,%d,%d\\n\", l_tile->x0, l_tile->y0,l_tile->x1,l_tile->y1);*/\n\t\n\t/*tile->numcomps = image->numcomps; */\n\tfor (compno = 0; compno < l_tile->numcomps; ++compno) {\n\t\t/*fprintf(stderr, \"compno = %d/%d\\n\", compno, l_tile->numcomps);*/\n\t\tl_image_comp->resno_decoded = 0;\n\t\t/* border of each l_tile component (global) */\n\t\tl_tilec->x0 = opj_int_ceildiv(l_tile->x0, (OPJ_INT32)l_image_comp->dx);\n\t\tl_tilec->y0 = opj_int_ceildiv(l_tile->y0, (OPJ_INT32)l_image_comp->dy);\n\t\tl_tilec->x1 = opj_int_ceildiv(l_tile->x1, (OPJ_INT32)l_image_comp->dx);\n\t\tl_tilec->y1 = opj_int_ceildiv(l_tile->y1, (OPJ_INT32)l_image_comp->dy);\n\t\t/*fprintf(stderr, \"\\tTile compo border = %d,%d,%d,%d\\n\", l_tilec->x0, l_tilec->y0,l_tilec->x1,l_tilec->y1);*/\n\t\t\n\t\t/* compute l_data_size with overflow check */\n\t\tl_data_size = (OPJ_UINT32)(l_tilec->x1 - l_tilec->x0);\n\t\t/* issue 733, l_data_size == 0U, probably something wrong should be checked before getting here */\n\t\tif ((l_data_size > 0U) && ((((OPJ_UINT32)-1) / l_data_size) < (OPJ_UINT32)(l_tilec->y1 - l_tilec->y0))) {\n\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile data\\n\");\n\t\t\treturn OPJ_FALSE;\n\t\t}\n\t\tl_data_size = l_data_size * (OPJ_UINT32)(l_tilec->y1 - l_tilec->y0);\n\t\t\n\t\tif ((((OPJ_UINT32)-1) / (OPJ_UINT32)sizeof(OPJ_UINT32)) < l_data_size) {\n\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile data\\n\");\n\t\t\treturn OPJ_FALSE;\n\t\t}\n\t\tl_data_size = l_data_size * (OPJ_UINT32)sizeof(OPJ_UINT32);\n\t\tl_tilec->numresolutions = l_tccp->numresolutions;\n\t\tif (l_tccp->numresolutions < l_cp->m_specific_param.m_dec.m_reduce) {\n\t\t\tl_tilec->minimum_num_resolutions = 1;\n\t\t}\n\t\telse {\n\t\t\tl_tilec->minimum_num_resolutions = l_tccp->numresolutions - l_cp->m_specific_param.m_dec.m_reduce;\n\t\t}\n\t\t\n\t\tl_tilec->data_size_needed = l_data_size;\n\t\tif (p_tcd->m_is_decoder && !opj_alloc_tile_component_data(l_tilec)) {\n\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile data\\n\");\n\t\t\treturn OPJ_FALSE;\n\t\t}\n\t\t\n\t\tl_data_size = l_tilec->numresolutions * (OPJ_UINT32)sizeof(opj_tcd_resolution_t);\n\t\t\n\t\tif (l_tilec->resolutions == 00) {\n\t\t\tl_tilec->resolutions = (opj_tcd_resolution_t *) opj_malloc(l_data_size);\n\t\t\tif (! l_tilec->resolutions ) {\n\t\t\t\treturn OPJ_FALSE;\n\t\t\t}\n\t\t\t/*fprintf(stderr, \"\\tAllocate resolutions of tilec (opj_tcd_resolution_t): %d\\n\",l_data_size);*/\n\t\t\tl_tilec->resolutions_size = l_data_size;\n\t\t\tmemset(l_tilec->resolutions,0,l_data_size);\n\t\t}\n\t\telse if (l_data_size > l_tilec->resolutions_size) {\n\t\t\topj_tcd_resolution_t* new_resolutions = (opj_tcd_resolution_t *) opj_realloc(l_tilec->resolutions, l_data_size);\n\t\t\tif (! new_resolutions) {\n\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile resolutions\\n\");\n\t\t\t\topj_free(l_tilec->resolutions);\n\t\t\t\tl_tilec->resolutions = NULL;\n\t\t\t\tl_tilec->resolutions_size = 0;\n\t\t\t\treturn OPJ_FALSE;\n\t\t\t}\n\t\t\tl_tilec->resolutions = new_resolutions;\n\t\t\t/*fprintf(stderr, \"\\tReallocate data of tilec (int): from %d to %d x OPJ_UINT32\\n\", l_tilec->resolutions_size, l_data_size);*/\n\t\t\tmemset(((OPJ_BYTE*) l_tilec->resolutions)+l_tilec->resolutions_size,0,l_data_size - l_tilec->resolutions_size);\n\t\t\tl_tilec->resolutions_size = l_data_size;\n\t\t}\n\t\t\n\t\tl_level_no = l_tilec->numresolutions;\n\t\tl_res = l_tilec->resolutions;\n\t\tl_step_size = l_tccp->stepsizes;\n\t\tif (l_tccp->qmfbid == 0) {\n\t\t\tl_gain_ptr = &opj_dwt_getgain_real;\n\t\t}\n\t\telse {\n\t\t\tl_gain_ptr  = &opj_dwt_getgain;\n\t\t}\n\t\t/*fprintf(stderr, \"\\tlevel_no=%d\\n\",l_level_no);*/\n\t\t\n\t\tfor (resno = 0; resno < l_tilec->numresolutions; ++resno) {\n\t\t\t/*fprintf(stderr, \"\\t\\tresno = %d/%d\\n\", resno, l_tilec->numresolutions);*/\n\t\t\tOPJ_INT32 tlcbgxstart, tlcbgystart /*, brcbgxend, brcbgyend*/;\n\t\t\tOPJ_UINT32 cbgwidthexpn, cbgheightexpn;\n\t\t\tOPJ_UINT32 cblkwidthexpn, cblkheightexpn;\n\t\t\t\n\t\t\t--l_level_no;\n\t\t\t\n\t\t\t/* border for each resolution level (global) */\n\t\t\tl_res->x0 = opj_int_ceildivpow2(l_tilec->x0, (OPJ_INT32)l_level_no);\n\t\t\tl_res->y0 = opj_int_ceildivpow2(l_tilec->y0, (OPJ_INT32)l_level_no);\n\t\t\tl_res->x1 = opj_int_ceildivpow2(l_tilec->x1, (OPJ_INT32)l_level_no);\n\t\t\tl_res->y1 = opj_int_ceildivpow2(l_tilec->y1, (OPJ_INT32)l_level_no);\n\t\t\t/*fprintf(stderr, \"\\t\\t\\tres_x0= %d, res_y0 =%d, res_x1=%d, res_y1=%d\\n\", l_res->x0, l_res->y0, l_res->x1, l_res->y1);*/\n\t\t\t/* p. 35, table A-23, ISO/IEC FDIS154444-1 : 2000 (18 august 2000) */\n\t\t\tl_pdx = l_tccp->prcw[resno];\n\t\t\tl_pdy = l_tccp->prch[resno];\n\t\t\t/*fprintf(stderr, \"\\t\\t\\tpdx=%d, pdy=%d\\n\", l_pdx, l_pdy);*/\n\t\t\t/* p. 64, B.6, ISO/IEC FDIS15444-1 : 2000 (18 august 2000)  */\n\t\t\tl_tl_prc_x_start = opj_int_floordivpow2(l_res->x0, (OPJ_INT32)l_pdx) << l_pdx;\n\t\t\tl_tl_prc_y_start = opj_int_floordivpow2(l_res->y0, (OPJ_INT32)l_pdy) << l_pdy;\n\t\t\tl_br_prc_x_end = opj_int_ceildivpow2(l_res->x1, (OPJ_INT32)l_pdx) << l_pdx;\n\t\t\tl_br_prc_y_end = opj_int_ceildivpow2(l_res->y1, (OPJ_INT32)l_pdy) << l_pdy;\n\t\t\t/*fprintf(stderr, \"\\t\\t\\tprc_x_start=%d, prc_y_start=%d, br_prc_x_end=%d, br_prc_y_end=%d \\n\", l_tl_prc_x_start, l_tl_prc_y_start, l_br_prc_x_end ,l_br_prc_y_end );*/\n\t\t\t\n\t\t\tl_res->pw = (l_res->x0 == l_res->x1) ? 0U : (OPJ_UINT32)((l_br_prc_x_end - l_tl_prc_x_start) >> l_pdx);\n\t\t\tl_res->ph = (l_res->y0 == l_res->y1) ? 0U : (OPJ_UINT32)((l_br_prc_y_end - l_tl_prc_y_start) >> l_pdy);\n\t\t\t/*fprintf(stderr, \"\\t\\t\\tres_pw=%d, res_ph=%d\\n\", l_res->pw, l_res->ph );*/\n\n\t\t\tif ((l_res->pw != 0U) && ((((OPJ_UINT32)-1) / l_res->pw) < l_res->ph)) {\n\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile data\\n\");\n\t\t\t\treturn OPJ_FALSE;\n\t\t\t}\n\t\t\tl_nb_precincts = l_res->pw * l_res->ph;\n\n\t\t\tif ((((OPJ_UINT32)-1) / (OPJ_UINT32)sizeof(opj_tcd_precinct_t)) < l_nb_precincts) {\n\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for tile data\\n\");\n\t\t\t\treturn OPJ_FALSE;\n\t\t\t}\n\t\t\tl_nb_precinct_size = l_nb_precincts * (OPJ_UINT32)sizeof(opj_tcd_precinct_t);\n\n\t\t\tif (resno == 0) {\n\t\t\t\ttlcbgxstart = l_tl_prc_x_start;\n\t\t\t\ttlcbgystart = l_tl_prc_y_start;\n\t\t\t\t/*brcbgxend = l_br_prc_x_end;*/\n\t\t\t\t/* brcbgyend = l_br_prc_y_end;*/\n\t\t\t\tcbgwidthexpn = l_pdx;\n\t\t\t\tcbgheightexpn = l_pdy;\n\t\t\t\tl_res->numbands = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttlcbgxstart = opj_int_ceildivpow2(l_tl_prc_x_start, 1);\n\t\t\t\ttlcbgystart = opj_int_ceildivpow2(l_tl_prc_y_start, 1);\n\t\t\t\t/*brcbgxend = opj_int_ceildivpow2(l_br_prc_x_end, 1);*/\n\t\t\t\t/*brcbgyend = opj_int_ceildivpow2(l_br_prc_y_end, 1);*/\n\t\t\t\tcbgwidthexpn = l_pdx - 1;\n\t\t\t\tcbgheightexpn = l_pdy - 1;\n\t\t\t\tl_res->numbands = 3;\n\t\t\t}\n\t\t\t\n\t\t\tcblkwidthexpn = opj_uint_min(l_tccp->cblkw, cbgwidthexpn);\n\t\t\tcblkheightexpn = opj_uint_min(l_tccp->cblkh, cbgheightexpn);\n\t\t\tl_band = l_res->bands;\n\t\t\t\n\t\t\tfor (bandno = 0; bandno < l_res->numbands; ++bandno) {\n\t\t\t\tOPJ_INT32 numbps;\n\t\t\t\t/*fprintf(stderr, \"\\t\\t\\tband_no=%d/%d\\n\", bandno, l_res->numbands );*/\n\t\t\t\t\n\t\t\t\tif (resno == 0) {\n\t\t\t\t\tl_band->bandno = 0 ;\n\t\t\t\t\tl_band->x0 = opj_int_ceildivpow2(l_tilec->x0, (OPJ_INT32)l_level_no);\n\t\t\t\t\tl_band->y0 = opj_int_ceildivpow2(l_tilec->y0, (OPJ_INT32)l_level_no);\n\t\t\t\t\tl_band->x1 = opj_int_ceildivpow2(l_tilec->x1, (OPJ_INT32)l_level_no);\n\t\t\t\t\tl_band->y1 = opj_int_ceildivpow2(l_tilec->y1, (OPJ_INT32)l_level_no);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tl_band->bandno = bandno + 1;\n\t\t\t\t\t/* x0b = 1 if bandno = 1 or 3 */\n\t\t\t\t\tl_x0b = l_band->bandno&1;\n\t\t\t\t\t/* y0b = 1 if bandno = 2 or 3 */\n\t\t\t\t\tl_y0b = (OPJ_INT32)((l_band->bandno)>>1);\n\t\t\t\t\t/* l_band border (global) */\n\t\t\t\t\tl_band->x0 = opj_int64_ceildivpow2(l_tilec->x0 - ((OPJ_INT64)l_x0b << l_level_no), (OPJ_INT32)(l_level_no + 1));\n\t\t\t\t\tl_band->y0 = opj_int64_ceildivpow2(l_tilec->y0 - ((OPJ_INT64)l_y0b << l_level_no), (OPJ_INT32)(l_level_no + 1));\n\t\t\t\t\tl_band->x1 = opj_int64_ceildivpow2(l_tilec->x1 - ((OPJ_INT64)l_x0b << l_level_no), (OPJ_INT32)(l_level_no + 1));\n\t\t\t\t\tl_band->y1 = opj_int64_ceildivpow2(l_tilec->y1 - ((OPJ_INT64)l_y0b << l_level_no), (OPJ_INT32)(l_level_no + 1));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/** avoid an if with storing function pointer */\n\t\t\t\tl_gain = (*l_gain_ptr) (l_band->bandno);\n\t\t\t\tnumbps = (OPJ_INT32)(l_image_comp->prec + l_gain);\n\t\t\t\tl_band->stepsize = (OPJ_FLOAT32)(((1.0 + l_step_size->mant / 2048.0) * pow(2.0, (OPJ_INT32) (numbps - l_step_size->expn)))) * fraction;\n\t\t\t\tl_band->numbps = l_step_size->expn + (OPJ_INT32)l_tccp->numgbits - 1;      /* WHY -1 ? */\n\t\t\t\t\n\t\t\t\tif (!l_band->precincts && (l_nb_precincts > 0U)) {\n\t\t\t\t\tl_band->precincts = (opj_tcd_precinct_t *) opj_malloc( /*3 * */ l_nb_precinct_size);\n\t\t\t\t\tif (! l_band->precincts) {\n\t\t\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory to handle band precints\\n\");\n\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t}\n\t\t\t\t\t/*fprintf(stderr, \"\\t\\t\\t\\tAllocate precincts of a band (opj_tcd_precinct_t): %d\\n\",l_nb_precinct_size);     */\n\t\t\t\t\tmemset(l_band->precincts,0,l_nb_precinct_size);\n\t\t\t\t\tl_band->precincts_data_size = l_nb_precinct_size;\n\t\t\t\t}\n\t\t\t\telse if (l_band->precincts_data_size < l_nb_precinct_size) {\n\t\t\t\t\t\n\t\t\t\t\topj_tcd_precinct_t * new_precincts = (opj_tcd_precinct_t *) opj_realloc(l_band->precincts,/*3 * */ l_nb_precinct_size);\n\t\t\t\t\tif (! new_precincts) {\n\t\t\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory to handle band precints\\n\");\n\t\t\t\t\t\topj_free(l_band->precincts);\n\t\t\t\t\t\tl_band->precincts = NULL;\n\t\t\t\t\t\tl_band->precincts_data_size = 0;\n\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t}\n\t\t\t\t\tl_band->precincts = new_precincts;\n\t\t\t\t\t/*fprintf(stderr, \"\\t\\t\\t\\tReallocate precincts of a band (opj_tcd_precinct_t): from %d to %d\\n\",l_band->precincts_data_size, l_nb_precinct_size);*/\n\t\t\t\t\tmemset(((OPJ_BYTE *) l_band->precincts) + l_band->precincts_data_size,0,l_nb_precinct_size - l_band->precincts_data_size);\n\t\t\t\t\tl_band->precincts_data_size = l_nb_precinct_size;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tl_current_precinct = l_band->precincts;\n\t\t\t\tfor (precno = 0; precno < l_nb_precincts; ++precno) {\n\t\t\t\t\tOPJ_INT32 tlcblkxstart, tlcblkystart, brcblkxend, brcblkyend;\n\t\t\t\t\tOPJ_INT32 cbgxstart = tlcbgxstart + (OPJ_INT32)(precno % l_res->pw) * (1 << cbgwidthexpn);\n\t\t\t\t\tOPJ_INT32 cbgystart = tlcbgystart + (OPJ_INT32)(precno / l_res->pw) * (1 << cbgheightexpn);\n\t\t\t\t\tOPJ_INT32 cbgxend = cbgxstart + (1 << cbgwidthexpn);\n\t\t\t\t\tOPJ_INT32 cbgyend = cbgystart + (1 << cbgheightexpn);\n\t\t\t\t\t/*fprintf(stderr, \"\\t precno=%d; bandno=%d, resno=%d; compno=%d\\n\", precno, bandno , resno, compno);*/\n\t\t\t\t\t/*fprintf(stderr, \"\\t tlcbgxstart(=%d) + (precno(=%d) percent res->pw(=%d)) * (1 << cbgwidthexpn(=%d)) \\n\",tlcbgxstart,precno,l_res->pw,cbgwidthexpn);*/\n\t\t\t\t\t\n\t\t\t\t\t/* precinct size (global) */\n\t\t\t\t\t/*fprintf(stderr, \"\\t cbgxstart=%d, l_band->x0 = %d \\n\",cbgxstart, l_band->x0);*/\n\t\t\t\t\t\n\t\t\t\t\tl_current_precinct->x0 = opj_int_max(cbgxstart, l_band->x0);\n\t\t\t\t\tl_current_precinct->y0 = opj_int_max(cbgystart, l_band->y0);\n\t\t\t\t\tl_current_precinct->x1 = opj_int_min(cbgxend, l_band->x1);\n\t\t\t\t\tl_current_precinct->y1 = opj_int_min(cbgyend, l_band->y1);\n\t\t\t\t\t/*fprintf(stderr, \"\\t prc_x0=%d; prc_y0=%d, prc_x1=%d; prc_y1=%d\\n\",l_current_precinct->x0, l_current_precinct->y0 ,l_current_precinct->x1, l_current_precinct->y1);*/\n\t\t\t\t\t\n\t\t\t\t\ttlcblkxstart = opj_int_floordivpow2(l_current_precinct->x0, (OPJ_INT32)cblkwidthexpn) << cblkwidthexpn;\n\t\t\t\t\t/*fprintf(stderr, \"\\t tlcblkxstart =%d\\n\",tlcblkxstart );*/\n\t\t\t\t\ttlcblkystart = opj_int_floordivpow2(l_current_precinct->y0, (OPJ_INT32)cblkheightexpn) << cblkheightexpn;\n\t\t\t\t\t/*fprintf(stderr, \"\\t tlcblkystart =%d\\n\",tlcblkystart );*/\n\t\t\t\t\tbrcblkxend = opj_int_ceildivpow2(l_current_precinct->x1, (OPJ_INT32)cblkwidthexpn) << cblkwidthexpn;\n\t\t\t\t\t/*fprintf(stderr, \"\\t brcblkxend =%d\\n\",brcblkxend );*/\n\t\t\t\t\tbrcblkyend = opj_int_ceildivpow2(l_current_precinct->y1, (OPJ_INT32)cblkheightexpn) << cblkheightexpn;\n\t\t\t\t\t/*fprintf(stderr, \"\\t brcblkyend =%d\\n\",brcblkyend );*/\n\t\t\t\t\tl_current_precinct->cw = (OPJ_UINT32)((brcblkxend - tlcblkxstart) >> cblkwidthexpn);\n\t\t\t\t\tl_current_precinct->ch = (OPJ_UINT32)((brcblkyend - tlcblkystart) >> cblkheightexpn);\n\t\t\t\t\t\n\t\t\t\t\tl_nb_code_blocks = l_current_precinct->cw * l_current_precinct->ch;\n\t\t\t\t\t/*fprintf(stderr, \"\\t\\t\\t\\t precinct_cw = %d x recinct_ch = %d\\n\",l_current_precinct->cw, l_current_precinct->ch);      */\n\t\t\t\t\tl_nb_code_blocks_size = l_nb_code_blocks * (OPJ_UINT32)sizeof_block;\n\t\t\t\t\t\n\t\t\t\t\tif (!l_current_precinct->cblks.blocks && (l_nb_code_blocks > 0U)) {\n\t\t\t\t\t\tl_current_precinct->cblks.blocks = opj_malloc(l_nb_code_blocks_size);\n\t\t\t\t\t\tif (! l_current_precinct->cblks.blocks ) {\n\t\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*fprintf(stderr, \"\\t\\t\\t\\tAllocate cblks of a precinct (opj_tcd_cblk_dec_t): %d\\n\",l_nb_code_blocks_size);*/\n\t\t\t\t\t\t\n\t\t\t\t\t\tmemset(l_current_precinct->cblks.blocks,0,l_nb_code_blocks_size);\n\t\t\t\t\t\t\n\t\t\t\t\t\tl_current_precinct->block_size = l_nb_code_blocks_size;\n\t\t\t\t\t}\n\t\t\t\t\telse if (l_nb_code_blocks_size > l_current_precinct->block_size) {\n\t\t\t\t\t\tvoid *new_blocks = opj_realloc(l_current_precinct->cblks.blocks, l_nb_code_blocks_size);\n\t\t\t\t\t\tif (! new_blocks) {\n\t\t\t\t\t\t\topj_free(l_current_precinct->cblks.blocks);\n\t\t\t\t\t\t\tl_current_precinct->cblks.blocks = NULL;\n\t\t\t\t\t\t\tl_current_precinct->block_size = 0;\n\t\t\t\t\t\t\topj_event_msg(manager, EVT_ERROR, \"Not enough memory for current precinct codeblock element\\n\");\n\t\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tl_current_precinct->cblks.blocks = new_blocks;\n\t\t\t\t\t\t/*fprintf(stderr, \"\\t\\t\\t\\tReallocate cblks of a precinct (opj_tcd_cblk_dec_t): from %d to %d\\n\",l_current_precinct->block_size, l_nb_code_blocks_size);     */\n\t\t\t\t\t\t\n\t\t\t\t\t\tmemset(((OPJ_BYTE *) l_current_precinct->cblks.blocks) + l_current_precinct->block_size\n\t\t\t\t\t\t\t\t\t ,0\n\t\t\t\t\t\t\t\t\t ,l_nb_code_blocks_size - l_current_precinct->block_size);\n\t\t\t\t\t\t\n\t\t\t\t\t\tl_current_precinct->block_size = l_nb_code_blocks_size;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (! l_current_precinct->incltree) {\n\t\t\t\t\t\tl_current_precinct->incltree = opj_tgt_create(l_current_precinct->cw, l_current_precinct->ch, manager);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tl_current_precinct->incltree = opj_tgt_init(l_current_precinct->incltree, l_current_precinct->cw, l_current_precinct->ch, manager);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! l_current_precinct->incltree)     {\n\t\t\t\t\t\topj_event_msg(manager, EVT_WARNING, \"No incltree created.\\n\");\n\t\t\t\t\t\t/*return OPJ_FALSE;*/\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! l_current_precinct->imsbtree) {\n\t\t\t\t\t\tl_current_precinct->imsbtree = opj_tgt_create(l_current_precinct->cw, l_current_precinct->ch, manager);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl_current_precinct->imsbtree = opj_tgt_init(l_current_precinct->imsbtree, l_current_precinct->cw, l_current_precinct->ch, manager);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! l_current_precinct->imsbtree) {\n\t\t\t\t\t\topj_event_msg(manager, EVT_WARNING, \"No imsbtree created.\\n\");\n\t\t\t\t\t\t/*return OPJ_FALSE;*/\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (cblkno = 0; cblkno < l_nb_code_blocks; ++cblkno) {\n\t\t\t\t\t\tOPJ_INT32 cblkxstart = tlcblkxstart + (OPJ_INT32)(cblkno % l_current_precinct->cw) * (1 << cblkwidthexpn);\n\t\t\t\t\t\tOPJ_INT32 cblkystart = tlcblkystart + (OPJ_INT32)(cblkno / l_current_precinct->cw) * (1 << cblkheightexpn);\n\t\t\t\t\t\tOPJ_INT32 cblkxend = cblkxstart + (1 << cblkwidthexpn);\n\t\t\t\t\t\tOPJ_INT32 cblkyend = cblkystart + (1 << cblkheightexpn);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (isEncoder) {\n\t\t\t\t\t\t\topj_tcd_cblk_enc_t* l_code_block = l_current_precinct->cblks.enc + cblkno;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_enc_allocate(l_code_block)) {\n\t\t\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* code-block size (global) */\n\t\t\t\t\t\t\tl_code_block->x0 = opj_int_max(cblkxstart, l_current_precinct->x0);\n\t\t\t\t\t\t\tl_code_block->y0 = opj_int_max(cblkystart, l_current_precinct->y0);\n\t\t\t\t\t\t\tl_code_block->x1 = opj_int_min(cblkxend, l_current_precinct->x1);\n\t\t\t\t\t\t\tl_code_block->y1 = opj_int_min(cblkyend, l_current_precinct->y1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_enc_allocate_data(l_code_block)) {\n\t\t\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\topj_tcd_cblk_dec_t* l_code_block = l_current_precinct->cblks.dec + cblkno;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_dec_allocate(l_code_block)) {\n\t\t\t\t\t\t\t\treturn OPJ_FALSE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* code-block size (global) */\n\t\t\t\t\t\t\tl_code_block->x0 = opj_int_max(cblkxstart, l_current_precinct->x0);\n\t\t\t\t\t\t\tl_code_block->y0 = opj_int_max(cblkystart, l_current_precinct->y0);\n\t\t\t\t\t\t\tl_code_block->x1 = opj_int_min(cblkxend, l_current_precinct->x1);\n\t\t\t\t\t\t\tl_code_block->y1 = opj_int_min(cblkyend, l_current_precinct->y1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t++l_current_precinct;\n\t\t\t\t} /* precno */\n\t\t\t\t++l_band;\n\t\t\t\t++l_step_size;\n\t\t\t} /* bandno */\n\t\t\t++l_res;\n\t\t} /* resno */\n\t\t++l_tccp;\n\t\t++l_tilec;\n\t\t++l_image_comp;\n\t} /* compno */\n\treturn OPJ_TRUE;\n}",
  "abstract_func": "static INLINE VAR_0 opj_tcd_init_tile(opj_tcd_t *VAR_1, OPJ_UINT32 VAR_2, OPJ_BOOL VAR_3, OPJ_FLOAT32 VAR_4, OPJ_SIZE_T VAR_5, opj_event_mgr_t* VAR_6)\n{\n\tOPJ_UINT32 (*VAR_7)(OPJ_UINT32) = 00;\n\tOPJ_UINT32 VAR_8, VAR_9, VAR_10, VAR_11, VAR_12;\n\topj_tcp_t * VAR_13 = 00;\n\topj_cp_t * VAR_14 = 00;\n\topj_tcd_tile_t * VAR_15 = 00;\n\topj_tccp_t *VAR_16 = 00;\n\topj_tcd_tilecomp_t *VAR_17 = 00;\n\topj_image_comp_t * VAR_18 = 00;\n\topj_tcd_resolution_t *VAR_19 = 00;\n\topj_tcd_band_t *VAR_20 = 00;\n\topj_stepsize_t * VAR_21 = 00;\n\topj_tcd_precinct_t *VAR_22 = 00;\n\topj_image_t *VAR_23 = 00;\n\tOPJ_UINT32 VAR_24,VAR_25;\n\tOPJ_UINT32 VAR_26;\n\tOPJ_UINT32 VAR_27, VAR_28;\n\tOPJ_UINT32 VAR_29;\n\tOPJ_INT32 VAR_30, VAR_31;\n\tOPJ_UINT32 VAR_32, VAR_33;\n\t/* COMMENT_0 */\n\tOPJ_INT32 VAR_34, VAR_35, VAR_36, VAR_37;\n\t/* COMMENT_1 */\n\tOPJ_UINT32 VAR_38;\n\t/* COMMENT_2 */\n\tOPJ_UINT32 VAR_39;\n\t/* COMMENT_3 */\n\tOPJ_UINT32 VAR_40;\n\t/* COMMENT_4 */\n\tOPJ_UINT32 VAR_41;\n\t/* COMMENT_5 */\n\tOPJ_UINT32 VAR_42;\n\t\n\tVAR_14 = VAR_1->cp;\n\tVAR_13 = &(VAR_14->tcps[VAR_2]);\n\tVAR_15 = VAR_1->tcd_image->tiles;\n\tVAR_16 = VAR_13->tccps;\n\tVAR_17 = VAR_15->comps;\n\tVAR_23 = VAR_1->image;\n\tVAR_18 = VAR_1->image->comps;\n\t\n\tVAR_24 = VAR_2 % VAR_14->tw;       /* COMMENT_6 */\n\tVAR_25 = VAR_2 / VAR_14->tw;\n\t/* COMMENT_7 */\n\t\n\t/* COMMENT_8 */\n\tVAR_32 = VAR_14->tx0 + VAR_24 * VAR_14->tdx; /* COMMENT_9 */\n\tVAR_15->x0 = (OPJ_INT32)opj_uint_max(VAR_32, VAR_23->x0);\n\tVAR_15->x1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(VAR_32, VAR_14->tdx), VAR_23->x1);\n\t/* COMMENT_10 */\n\tif ((VAR_15->x0 < 0) || (VAR_15->x1 <= VAR_15->x0)) {\n\t\topj_event_msg(VAR_6, VAR_43, \"Tile X coordinates are not supported\\n\");\n\t\treturn VAR_44;\n\t}\n\tVAR_33 = VAR_14->ty0 + VAR_25 * VAR_14->tdy; /* COMMENT_11 */\n\tVAR_15->y0 = (OPJ_INT32)opj_uint_max(VAR_33, VAR_23->y0);\n\tVAR_15->y1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(VAR_33, VAR_14->tdy), VAR_23->y1);\n\t/* COMMENT_10 */\n\tif ((VAR_15->y0 < 0) || (VAR_15->y1 <= VAR_15->y0)) {\n\t\topj_event_msg(VAR_6, VAR_43, \"Tile Y coordinates are not supported\\n\");\n\t\treturn VAR_44;\n\t}\n\t\n\n\t/* COMMENT_12 */\n\tif (VAR_16->numresolutions == 0) {\n\t\topj_event_msg(VAR_6, VAR_43, \"tiles require at least one resolution\\n\");\n\t\treturn VAR_44;\n\t}\n\t/* COMMENT_13 */\n\t\n\t/* COMMENT_14 */\n\tfor (VAR_8 = 0; VAR_8 < VAR_15->numcomps; ++VAR_8) {\n\t\t/* COMMENT_15 */\n\t\tVAR_18->resno_decoded = 0;\n\t\t/* COMMENT_16 */\n\t\tVAR_17->x0 = opj_int_ceildiv(VAR_15->x0, (OPJ_INT32)VAR_18->dx);\n\t\tVAR_17->y0 = opj_int_ceildiv(VAR_15->y0, (OPJ_INT32)VAR_18->dy);\n\t\tVAR_17->x1 = opj_int_ceildiv(VAR_15->x1, (OPJ_INT32)VAR_18->dx);\n\t\tVAR_17->y1 = opj_int_ceildiv(VAR_15->y1, (OPJ_INT32)VAR_18->dy);\n\t\t/* COMMENT_17 */\n\t\t\n\t\t/* COMMENT_18 */\n\t\tVAR_42 = (OPJ_UINT32)(VAR_17->x1 - VAR_17->x0);\n\t\t/* COMMENT_19 */\n\t\tif ((VAR_42 > 0U) && ((((OPJ_UINT32)-1) / VAR_42) < (OPJ_UINT32)(VAR_17->y1 - VAR_17->y0))) {\n\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile data\\n\");\n\t\t\treturn VAR_44;\n\t\t}\n\t\tVAR_42 = VAR_42 * (OPJ_UINT32)(VAR_17->y1 - VAR_17->y0);\n\t\t\n\t\tif ((((OPJ_UINT32)-1) / (OPJ_UINT32)sizeof(OPJ_UINT32)) < VAR_42) {\n\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile data\\n\");\n\t\t\treturn VAR_44;\n\t\t}\n\t\tVAR_42 = VAR_42 * (OPJ_UINT32)sizeof(OPJ_UINT32);\n\t\tVAR_17->numresolutions = VAR_16->numresolutions;\n\t\tif (VAR_16->numresolutions < VAR_14->m_specific_param.m_dec.m_reduce) {\n\t\t\tVAR_17->minimum_num_resolutions = 1;\n\t\t}\n\t\telse {\n\t\t\tVAR_17->minimum_num_resolutions = VAR_16->numresolutions - VAR_14->m_specific_param.m_dec.m_reduce;\n\t\t}\n\t\t\n\t\tVAR_17->data_size_needed = VAR_42;\n\t\tif (VAR_1->m_is_decoder && !opj_alloc_tile_component_data(VAR_17)) {\n\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile data\\n\");\n\t\t\treturn VAR_44;\n\t\t}\n\t\t\n\t\tVAR_42 = VAR_17->numresolutions * (OPJ_UINT32)sizeof(opj_tcd_resolution_t);\n\t\t\n\t\tif (VAR_17->resolutions == 00) {\n\t\t\tVAR_17->resolutions = (opj_tcd_resolution_t *) opj_malloc(VAR_42);\n\t\t\tif (! VAR_17->resolutions ) {\n\t\t\t\treturn VAR_44;\n\t\t\t}\n\t\t\t/* COMMENT_20 */\n\t\t\tVAR_17->resolutions_size = VAR_42;\n\t\t\tmemset(VAR_17->resolutions,0,VAR_42);\n\t\t}\n\t\telse if (VAR_42 > VAR_17->resolutions_size) {\n\t\t\topj_tcd_resolution_t* VAR_45 = (opj_tcd_resolution_t *) opj_realloc(VAR_17->resolutions, VAR_42);\n\t\t\tif (! VAR_45) {\n\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile resolutions\\n\");\n\t\t\t\topj_free(VAR_17->resolutions);\n\t\t\t\tVAR_17->resolutions = NULL;\n\t\t\t\tVAR_17->resolutions_size = 0;\n\t\t\t\treturn VAR_44;\n\t\t\t}\n\t\t\tVAR_17->resolutions = VAR_45;\n\t\t\t/* COMMENT_21 */\n\t\t\tmemset(((OPJ_BYTE*) VAR_17->resolutions)+VAR_17->resolutions_size,0,VAR_42 - VAR_17->resolutions_size);\n\t\t\tVAR_17->resolutions_size = VAR_42;\n\t\t}\n\t\t\n\t\tVAR_26 = VAR_17->numresolutions;\n\t\tVAR_19 = VAR_17->resolutions;\n\t\tVAR_21 = VAR_16->stepsizes;\n\t\tif (VAR_16->qmfbid == 0) {\n\t\t\tVAR_7 = &VAR_46;\n\t\t}\n\t\telse {\n\t\t\tVAR_7  = &VAR_47;\n\t\t}\n\t\t/* COMMENT_22 */\n\t\t\n\t\tfor (VAR_9 = 0; VAR_9 < VAR_17->numresolutions; ++VAR_9) {\n\t\t\t/* COMMENT_23 */\n\t\t\tOPJ_INT32 VAR_48, VAR_49 /* COMMENT_24 */;\n\t\t\tOPJ_UINT32 VAR_50, VAR_51;\n\t\t\tOPJ_UINT32 VAR_52, VAR_53;\n\t\t\t\n\t\t\t--VAR_26;\n\t\t\t\n\t\t\t/* COMMENT_25 */\n\t\t\tVAR_19->x0 = opj_int_ceildivpow2(VAR_17->x0, (OPJ_INT32)VAR_26);\n\t\t\tVAR_19->y0 = opj_int_ceildivpow2(VAR_17->y0, (OPJ_INT32)VAR_26);\n\t\t\tVAR_19->x1 = opj_int_ceildivpow2(VAR_17->x1, (OPJ_INT32)VAR_26);\n\t\t\tVAR_19->y1 = opj_int_ceildivpow2(VAR_17->y1, (OPJ_INT32)VAR_26);\n\t\t\t/* COMMENT_26 */\n\t\t\t/* COMMENT_27 */\n\t\t\tVAR_27 = VAR_16->prcw[VAR_9];\n\t\t\tVAR_28 = VAR_16->prch[VAR_9];\n\t\t\t/* COMMENT_28 */\n\t\t\t/* COMMENT_29 */\n\t\t\tVAR_34 = opj_int_floordivpow2(VAR_19->x0, (OPJ_INT32)VAR_27) << VAR_27;\n\t\t\tVAR_35 = opj_int_floordivpow2(VAR_19->y0, (OPJ_INT32)VAR_28) << VAR_28;\n\t\t\tVAR_36 = opj_int_ceildivpow2(VAR_19->x1, (OPJ_INT32)VAR_27) << VAR_27;\n\t\t\tVAR_37 = opj_int_ceildivpow2(VAR_19->y1, (OPJ_INT32)VAR_28) << VAR_28;\n\t\t\t/* COMMENT_30 */\n\t\t\t\n\t\t\tVAR_19->pw = (VAR_19->x0 == VAR_19->x1) ? 0U : (OPJ_UINT32)((VAR_36 - VAR_34) >> VAR_27);\n\t\t\tVAR_19->ph = (VAR_19->y0 == VAR_19->y1) ? 0U : (OPJ_UINT32)((VAR_37 - VAR_35) >> VAR_28);\n\t\t\t/* COMMENT_31 */\n\n\t\t\tif ((VAR_19->pw != 0U) && ((((OPJ_UINT32)-1) / VAR_19->pw) < VAR_19->ph)) {\n\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile data\\n\");\n\t\t\t\treturn VAR_44;\n\t\t\t}\n\t\t\tVAR_38 = VAR_19->pw * VAR_19->ph;\n\n\t\t\tif ((((OPJ_UINT32)-1) / (OPJ_UINT32)sizeof(opj_tcd_precinct_t)) < VAR_38) {\n\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for tile data\\n\");\n\t\t\t\treturn VAR_44;\n\t\t\t}\n\t\t\tVAR_39 = VAR_38 * (OPJ_UINT32)sizeof(opj_tcd_precinct_t);\n\n\t\t\tif (VAR_9 == 0) {\n\t\t\t\tVAR_48 = VAR_34;\n\t\t\t\tVAR_49 = VAR_35;\n\t\t\t\t/* COMMENT_32 */\n\t\t\t\t/* COMMENT_33 */\n\t\t\t\tVAR_50 = VAR_27;\n\t\t\t\tVAR_51 = VAR_28;\n\t\t\t\tVAR_19->numbands = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tVAR_48 = opj_int_ceildivpow2(VAR_34, 1);\n\t\t\t\tVAR_49 = opj_int_ceildivpow2(VAR_35, 1);\n\t\t\t\t/* COMMENT_34 */\n\t\t\t\t/* COMMENT_35 */\n\t\t\t\tVAR_50 = VAR_27 - 1;\n\t\t\t\tVAR_51 = VAR_28 - 1;\n\t\t\t\tVAR_19->numbands = 3;\n\t\t\t}\n\t\t\t\n\t\t\tVAR_52 = opj_uint_min(VAR_16->cblkw, VAR_50);\n\t\t\tVAR_53 = opj_uint_min(VAR_16->cblkh, VAR_51);\n\t\t\tVAR_20 = VAR_19->bands;\n\t\t\t\n\t\t\tfor (VAR_10 = 0; VAR_10 < VAR_19->numbands; ++VAR_10) {\n\t\t\t\tOPJ_INT32 VAR_54;\n\t\t\t\t/* COMMENT_36 */\n\t\t\t\t\n\t\t\t\tif (VAR_9 == 0) {\n\t\t\t\t\tVAR_20->bandno = 0 ;\n\t\t\t\t\tVAR_20->x0 = opj_int_ceildivpow2(VAR_17->x0, (OPJ_INT32)VAR_26);\n\t\t\t\t\tVAR_20->y0 = opj_int_ceildivpow2(VAR_17->y0, (OPJ_INT32)VAR_26);\n\t\t\t\t\tVAR_20->x1 = opj_int_ceildivpow2(VAR_17->x1, (OPJ_INT32)VAR_26);\n\t\t\t\t\tVAR_20->y1 = opj_int_ceildivpow2(VAR_17->y1, (OPJ_INT32)VAR_26);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tVAR_20->bandno = VAR_10 + 1;\n\t\t\t\t\t/* COMMENT_37 */\n\t\t\t\t\tVAR_30 = VAR_20->bandno&1;\n\t\t\t\t\t/* COMMENT_38 */\n\t\t\t\t\tVAR_31 = (OPJ_INT32)((VAR_20->bandno)>>1);\n\t\t\t\t\t/* COMMENT_39 */\n\t\t\t\t\tVAR_20->x0 = opj_int64_ceildivpow2(VAR_17->x0 - ((OPJ_INT64)VAR_30 << VAR_26), (OPJ_INT32)(VAR_26 + 1));\n\t\t\t\t\tVAR_20->y0 = opj_int64_ceildivpow2(VAR_17->y0 - ((OPJ_INT64)VAR_31 << VAR_26), (OPJ_INT32)(VAR_26 + 1));\n\t\t\t\t\tVAR_20->x1 = opj_int64_ceildivpow2(VAR_17->x1 - ((OPJ_INT64)VAR_30 << VAR_26), (OPJ_INT32)(VAR_26 + 1));\n\t\t\t\t\tVAR_20->y1 = opj_int64_ceildivpow2(VAR_17->y1 - ((OPJ_INT64)VAR_31 << VAR_26), (OPJ_INT32)(VAR_26 + 1));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* COMMENT_40 */\n\t\t\t\tVAR_29 = (*VAR_7) (VAR_20->bandno);\n\t\t\t\tVAR_54 = (OPJ_INT32)(VAR_18->prec + VAR_29);\n\t\t\t\tVAR_20->stepsize = (OPJ_FLOAT32)(((1.0 + VAR_21->mant / 2048.0) * pow(2.0, (OPJ_INT32) (VAR_54 - VAR_21->expn)))) * VAR_4;\n\t\t\t\tVAR_20->numbps = VAR_21->expn + (OPJ_INT32)VAR_16->numgbits - 1;      /* COMMENT_41 */\n\t\t\t\t\n\t\t\t\tif (!VAR_20->precincts && (VAR_38 > 0U)) {\n\t\t\t\t\tVAR_20->precincts = (opj_tcd_precinct_t *) opj_malloc( /* COMMENT_42 */ VAR_39);\n\t\t\t\t\tif (! VAR_20->precincts) {\n\t\t\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory to handle band precints\\n\");\n\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t}\n\t\t\t\t\t/* COMMENT_43 */\n\t\t\t\t\tmemset(VAR_20->precincts,0,VAR_39);\n\t\t\t\t\tVAR_20->precincts_data_size = VAR_39;\n\t\t\t\t}\n\t\t\t\telse if (VAR_20->precincts_data_size < VAR_39) {\n\t\t\t\t\t\n\t\t\t\t\topj_tcd_precinct_t * VAR_55 = (opj_tcd_precinct_t *) opj_realloc(VAR_20->precincts,/* COMMENT_42 */ VAR_39);\n\t\t\t\t\tif (! VAR_55) {\n\t\t\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory to handle band precints\\n\");\n\t\t\t\t\t\topj_free(VAR_20->precincts);\n\t\t\t\t\t\tVAR_20->precincts = NULL;\n\t\t\t\t\t\tVAR_20->precincts_data_size = 0;\n\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t}\n\t\t\t\t\tVAR_20->precincts = VAR_55;\n\t\t\t\t\t/* COMMENT_44 */\n\t\t\t\t\tmemset(((OPJ_BYTE *) VAR_20->precincts) + VAR_20->precincts_data_size,0,VAR_39 - VAR_20->precincts_data_size);\n\t\t\t\t\tVAR_20->precincts_data_size = VAR_39;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tVAR_22 = VAR_20->precincts;\n\t\t\t\tfor (VAR_11 = 0; VAR_11 < VAR_38; ++VAR_11) {\n\t\t\t\t\tOPJ_INT32 VAR_56, VAR_57, VAR_58, VAR_59;\n\t\t\t\t\tOPJ_INT32 VAR_60 = VAR_48 + (OPJ_INT32)(VAR_11 % VAR_19->pw) * (1 << VAR_50);\n\t\t\t\t\tOPJ_INT32 VAR_61 = VAR_49 + (OPJ_INT32)(VAR_11 / VAR_19->pw) * (1 << VAR_51);\n\t\t\t\t\tOPJ_INT32 VAR_62 = VAR_60 + (1 << VAR_50);\n\t\t\t\t\tOPJ_INT32 VAR_63 = VAR_61 + (1 << VAR_51);\n\t\t\t\t\t/* COMMENT_45 */\n\t\t\t\t\t/* COMMENT_46 */\n\t\t\t\t\t\n\t\t\t\t\t/* COMMENT_47 */\n\t\t\t\t\t/* COMMENT_48 */\n\t\t\t\t\t\n\t\t\t\t\tVAR_22->x0 = opj_int_max(VAR_60, VAR_20->x0);\n\t\t\t\t\tVAR_22->y0 = opj_int_max(VAR_61, VAR_20->y0);\n\t\t\t\t\tVAR_22->x1 = opj_int_min(VAR_62, VAR_20->x1);\n\t\t\t\t\tVAR_22->y1 = opj_int_min(VAR_63, VAR_20->y1);\n\t\t\t\t\t/* COMMENT_49 */\n\t\t\t\t\t\n\t\t\t\t\tVAR_56 = opj_int_floordivpow2(VAR_22->x0, (OPJ_INT32)VAR_52) << VAR_52;\n\t\t\t\t\t/* COMMENT_50 */\n\t\t\t\t\tVAR_57 = opj_int_floordivpow2(VAR_22->y0, (OPJ_INT32)VAR_53) << VAR_53;\n\t\t\t\t\t/* COMMENT_51 */\n\t\t\t\t\tVAR_58 = opj_int_ceildivpow2(VAR_22->x1, (OPJ_INT32)VAR_52) << VAR_52;\n\t\t\t\t\t/* COMMENT_52 */\n\t\t\t\t\tVAR_59 = opj_int_ceildivpow2(VAR_22->y1, (OPJ_INT32)VAR_53) << VAR_53;\n\t\t\t\t\t/* COMMENT_53 */\n\t\t\t\t\tVAR_22->cw = (OPJ_UINT32)((VAR_58 - VAR_56) >> VAR_52);\n\t\t\t\t\tVAR_22->ch = (OPJ_UINT32)((VAR_59 - VAR_57) >> VAR_53);\n\t\t\t\t\t\n\t\t\t\t\tVAR_40 = VAR_22->cw * VAR_22->ch;\n\t\t\t\t\t/* COMMENT_54 */\n\t\t\t\t\tVAR_41 = VAR_40 * (OPJ_UINT32)VAR_5;\n\t\t\t\t\t\n\t\t\t\t\tif (!VAR_22->cblks.blocks && (VAR_40 > 0U)) {\n\t\t\t\t\t\tVAR_22->cblks.blocks = opj_malloc(VAR_41);\n\t\t\t\t\t\tif (! VAR_22->cblks.blocks ) {\n\t\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* COMMENT_55 */\n\t\t\t\t\t\t\n\t\t\t\t\t\tmemset(VAR_22->cblks.blocks,0,VAR_41);\n\t\t\t\t\t\t\n\t\t\t\t\t\tVAR_22->block_size = VAR_41;\n\t\t\t\t\t}\n\t\t\t\t\telse if (VAR_41 > VAR_22->block_size) {\n\t\t\t\t\t\tvoid *VAR_64 = opj_realloc(VAR_22->cblks.blocks, VAR_41);\n\t\t\t\t\t\tif (! VAR_64) {\n\t\t\t\t\t\t\topj_free(VAR_22->cblks.blocks);\n\t\t\t\t\t\t\tVAR_22->cblks.blocks = NULL;\n\t\t\t\t\t\t\tVAR_22->block_size = 0;\n\t\t\t\t\t\t\topj_event_msg(VAR_6, VAR_43, \"Not enough memory for current precinct codeblock element\\n\");\n\t\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tVAR_22->cblks.blocks = VAR_64;\n\t\t\t\t\t\t/* COMMENT_56 */\n\t\t\t\t\t\t\n\t\t\t\t\t\tmemset(((OPJ_BYTE *) VAR_22->cblks.blocks) + VAR_22->block_size\n\t\t\t\t\t\t\t\t\t ,0\n\t\t\t\t\t\t\t\t\t ,VAR_41 - VAR_22->block_size);\n\t\t\t\t\t\t\n\t\t\t\t\t\tVAR_22->block_size = VAR_41;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (! VAR_22->incltree) {\n\t\t\t\t\t\tVAR_22->incltree = opj_tgt_create(VAR_22->cw, VAR_22->ch, VAR_6);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tVAR_22->incltree = opj_tgt_init(VAR_22->incltree, VAR_22->cw, VAR_22->ch, VAR_6);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! VAR_22->incltree)     {\n\t\t\t\t\t\topj_event_msg(VAR_6, VAR_65, \"No incltree created.\\n\");\n\t\t\t\t\t\t/* COMMENT_57 */\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! VAR_22->imsbtree) {\n\t\t\t\t\t\tVAR_22->imsbtree = opj_tgt_create(VAR_22->cw, VAR_22->ch, VAR_6);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tVAR_22->imsbtree = opj_tgt_init(VAR_22->imsbtree, VAR_22->cw, VAR_22->ch, VAR_6);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (! VAR_22->imsbtree) {\n\t\t\t\t\t\topj_event_msg(VAR_6, VAR_65, \"No imsbtree created.\\n\");\n\t\t\t\t\t\t/* COMMENT_57 */\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (VAR_12 = 0; VAR_12 < VAR_40; ++VAR_12) {\n\t\t\t\t\t\tOPJ_INT32 VAR_66 = VAR_56 + (OPJ_INT32)(VAR_12 % VAR_22->cw) * (1 << VAR_52);\n\t\t\t\t\t\tOPJ_INT32 VAR_67 = VAR_57 + (OPJ_INT32)(VAR_12 / VAR_22->cw) * (1 << VAR_53);\n\t\t\t\t\t\tOPJ_INT32 VAR_68 = VAR_66 + (1 << VAR_52);\n\t\t\t\t\t\tOPJ_INT32 VAR_69 = VAR_67 + (1 << VAR_53);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (VAR_3) {\n\t\t\t\t\t\t\topj_tcd_cblk_enc_t* VAR_70 = VAR_22->cblks.enc + VAR_12;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_enc_allocate(VAR_70)) {\n\t\t\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* COMMENT_58 */\n\t\t\t\t\t\t\tVAR_70->x0 = opj_int_max(VAR_66, VAR_22->x0);\n\t\t\t\t\t\t\tVAR_70->y0 = opj_int_max(VAR_67, VAR_22->y0);\n\t\t\t\t\t\t\tVAR_70->x1 = opj_int_min(VAR_68, VAR_22->x1);\n\t\t\t\t\t\t\tVAR_70->y1 = opj_int_min(VAR_69, VAR_22->y1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_enc_allocate_data(VAR_70)) {\n\t\t\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\topj_tcd_cblk_dec_t* VAR_70 = VAR_22->cblks.dec + VAR_12;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (! opj_tcd_code_block_dec_allocate(VAR_70)) {\n\t\t\t\t\t\t\t\treturn VAR_44;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* COMMENT_58 */\n\t\t\t\t\t\t\tVAR_70->x0 = opj_int_max(VAR_66, VAR_22->x0);\n\t\t\t\t\t\t\tVAR_70->y0 = opj_int_max(VAR_67, VAR_22->y0);\n\t\t\t\t\t\t\tVAR_70->x1 = opj_int_min(VAR_68, VAR_22->x1);\n\t\t\t\t\t\t\tVAR_70->y1 = opj_int_min(VAR_69, VAR_22->y1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t++VAR_22;\n\t\t\t\t} /* COMMENT_59 */\n\t\t\t\t++VAR_20;\n\t\t\t\t++VAR_21;\n\t\t\t} /* COMMENT_60 */\n\t\t\t++VAR_19;\n\t\t} /* COMMENT_61 */\n\t\t++VAR_16;\n\t\t++VAR_17;\n\t\t++VAR_18;\n\t} /* COMMENT_62 */\n\treturn VAR_71;\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -48,9 +48,20 @@\n \tl_tx0 = l_cp->tx0 + p * l_cp->tdx; /* can't be greater than l_image->x1 so won't overflow */\n \tl_tile->x0 = (OPJ_INT32)opj_uint_max(l_tx0, l_image->x0);\n \tl_tile->x1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(l_tx0, l_cp->tdx), l_image->x1);\n+\t/* all those OPJ_UINT32 are casted to OPJ_INT32, let's do some sanity check */\n+\tif ((l_tile->x0 < 0) || (l_tile->x1 <= l_tile->x0)) {\n+\t\topj_event_msg(manager, EVT_ERROR, \"Tile X coordinates are not supported\\n\");\n+\t\treturn OPJ_FALSE;\n+\t}\n \tl_ty0 = l_cp->ty0 + q * l_cp->tdy; /* can't be greater than l_image->y1 so won't overflow */\n \tl_tile->y0 = (OPJ_INT32)opj_uint_max(l_ty0, l_image->y0);\n \tl_tile->y1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(l_ty0, l_cp->tdy), l_image->y1);\n+\t/* all those OPJ_UINT32 are casted to OPJ_INT32, let's do some sanity check */\n+\tif ((l_tile->y0 < 0) || (l_tile->y1 <= l_tile->y0)) {\n+\t\topj_event_msg(manager, EVT_ERROR, \"Tile Y coordinates are not supported\\n\");\n+\t\treturn OPJ_FALSE;\n+\t}\n+\t\n \n \t/* testcase 1888.pdf.asan.35.988 */\n \tif (l_tccp->numresolutions == 0) {",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\t/* all those OPJ_UINT32 are casted to OPJ_INT32, let's do some sanity check */",
      "\tif ((l_tile->x0 < 0) || (l_tile->x1 <= l_tile->x0)) {",
      "\t\topj_event_msg(manager, EVT_ERROR, \"Tile X coordinates are not supported\\n\");",
      "\t\treturn OPJ_FALSE;",
      "\t}",
      "\t/* all those OPJ_UINT32 are casted to OPJ_INT32, let's do some sanity check */",
      "\tif ((l_tile->y0 < 0) || (l_tile->y1 <= l_tile->y0)) {",
      "\t\topj_event_msg(manager, EVT_ERROR, \"Tile Y coordinates are not supported\\n\");",
      "\t\treturn OPJ_FALSE;",
      "\t}",
      "\t"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/uclouvain/openjpeg/pull/823",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/uclouvain/openjpeg/pull/823: 403 Client Error: Forbidden for url: https://api.github.com/repos/uclouvain/openjpeg/pulls/823",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 0.9"
}