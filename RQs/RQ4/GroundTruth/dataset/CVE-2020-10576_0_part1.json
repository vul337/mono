{
  "cve_id": "CVE-2020-10576",
  "cwe_ids": [
    "CWE-362"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "meetecho/janus-gateway",
  "commit_msg": "Fixes to leaks and race conditions in VoiceMail plugin",
  "commit_hash": "eb99ac8674c554bab6775f4378b24e991b4a2fa1",
  "git_url": "https://github.com/meetecho/janus-gateway/commit/eb99ac8674c554bab6775f4378b24e991b4a2fa1",
  "file_path": "plugins/janus_voicemail.c",
  "func_name": "janus_voicemail_incoming_rtp",
  "func_before": "void janus_voicemail_incoming_rtp(janus_plugin_session *handle, janus_plugin_rtp *packet) {\n\tif(handle == NULL || g_atomic_int_get(&handle->stopped) || g_atomic_int_get(&stopping) || !g_atomic_int_get(&initialized))\n\t\treturn;\n\tjanus_voicemail_session *session = (janus_voicemail_session *)handle->plugin_handle;\n\tif(!session || g_atomic_int_get(&session->destroyed) || session->stopping || !session->started || session->start_time == 0)\n\t\treturn;\n\tgint64 now = janus_get_monotonic_time();\n\t/* Have 10 seconds passed? */\n\tif((now-session->start_time) >= 10*G_USEC_PER_SEC) {\n\t\t/* FIXME Simulate a \"stop\" coming from the browser */\n\t\tsession->started = FALSE;\n\t\tjanus_refcount_increase(&session->ref);\n\t\tjanus_voicemail_message *msg = g_malloc(sizeof(janus_voicemail_message));\n\t\tmsg->handle = handle;\n\t\tmsg->message = json_pack(\"{ss}\", \"request\", \"stop\");\n\t\tmsg->transaction = NULL;\n\t\tmsg->jsep = NULL;\n\t\tg_async_queue_push(messages, msg);\n\t\treturn;\n\t}\n\t/* Save the frame */\n\tchar *buf = packet->buffer;\n\tuint16_t len = packet->length;\n\tjanus_rtp_header *rtp = (janus_rtp_header *)buf;\n\tuint16_t seq = ntohs(rtp->seq_number);\n\tif(session->seq == 0)\n\t\tsession->seq = seq;\n\tint plen = 0;\n\tconst unsigned char *payload = (const unsigned char *)janus_rtp_payload(buf, len, &plen);\n\tif(!payload) {\n\t\tJANUS_LOG(LOG_ERR, \"Ops! got an error accessing the RTP payload\\n\");\n\t\treturn;\n\t}\n\togg_packet *op = op_from_pkt(payload, plen);\n\t//~ JANUS_LOG(LOG_VERB, \"\\tWriting at position %d (%d)\\n\", seq-session->seq+1, 960*(seq-session->seq+1));\n\top->granulepos = 960*(seq-session->seq+1); // FIXME: get this from the toc byte\n\togg_stream_packetin(session->stream, op);\n\tg_free(op);\n\togg_write(session);\n}",
  "abstract_func_before": "void janus_voicemail_incoming_rtp(janus_plugin_session *VAR_0, janus_plugin_rtp *VAR_1) {\n\tif(VAR_0 == NULL || g_atomic_int_get(&VAR_0->stopped) || g_atomic_int_get(&VAR_2) || !g_atomic_int_get(&VAR_3))\n\t\treturn;\n\tjanus_voicemail_session *VAR_4 = (janus_voicemail_session *)VAR_0->plugin_handle;\n\tif(!VAR_4 || g_atomic_int_get(&VAR_4->destroyed) || VAR_4->stopping || !VAR_4->started || VAR_4->start_time == 0)\n\t\treturn;\n\tgint64 VAR_5 = janus_get_monotonic_time();\n\t/* COMMENT_0 */\n\tif((VAR_5-VAR_4->start_time) >= 10*VAR_6) {\n\t\t/* COMMENT_1 */\n\t\tVAR_4->started = FALSE;\n\t\tjanus_refcount_increase(&VAR_4->ref);\n\t\tjanus_voicemail_message *VAR_7 = g_malloc(sizeof(janus_voicemail_message));\n\t\tVAR_7->handle = VAR_0;\n\t\tVAR_7->message = json_pack(\"{ss}\", \"request\", \"stop\");\n\t\tVAR_7->transaction = NULL;\n\t\tVAR_7->jsep = NULL;\n\t\tg_async_queue_push(VAR_8, VAR_7);\n\t\treturn;\n\t}\n\t/* COMMENT_2 */\n\tchar *VAR_9 = VAR_1->buffer;\n\tuint16_t VAR_10 = VAR_1->length;\n\tjanus_rtp_header *VAR_11 = (janus_rtp_header *)VAR_9;\n\tuint16_t VAR_12 = ntohs(VAR_11->seq_number);\n\tif(VAR_4->seq == 0)\n\t\tVAR_4->seq = VAR_12;\n\tint VAR_13 = 0;\n\tconst unsigned char *VAR_14 = (const unsigned char *)janus_rtp_payload(VAR_9, VAR_10, &VAR_13);\n\tif(!VAR_14) {\n\t\tJANUS_LOG(VAR_15, \"Ops! got an error accessing the RTP payload\\n\");\n\t\treturn;\n\t}\n\togg_packet *VAR_16 = op_from_pkt(VAR_14, VAR_13);\n\t/* COMMENT_3 */\n\tVAR_16->granulepos = 960*(VAR_12-VAR_4->seq+1); /* COMMENT_4 */\n\togg_stream_packetin(VAR_4->stream, VAR_16);\n\tg_free(VAR_16);\n\togg_write(VAR_4);\n}",
  "func_graph_path_before": "meetecho/janus-gateway/eb99ac8674c554bab6775f4378b24e991b4a2fa1/janus_voicemail.c/vul/before/1.json",
  "func": "void janus_voicemail_incoming_rtp(janus_plugin_session *handle, janus_plugin_rtp *packet) {\n\tif(handle == NULL || g_atomic_int_get(&handle->stopped) || g_atomic_int_get(&stopping) || !g_atomic_int_get(&initialized))\n\t\treturn;\n\tjanus_voicemail_session *session = (janus_voicemail_session *)handle->plugin_handle;\n\tif(!session || g_atomic_int_get(&session->destroyed) || g_atomic_int_get(&session->stopping) ||\n\t\t\t!g_atomic_int_get(&session->started) || session->start_time == 0)\n\t\treturn;\n\tgint64 now = janus_get_monotonic_time();\n\t/* Have 10 seconds passed? */\n\tif((now-session->start_time) >= 10*G_USEC_PER_SEC) {\n\t\t/* FIXME Simulate a \"stop\" coming from the browser */\n\t\tg_atomic_int_set(&session->started, 0);\n\t\tjanus_refcount_increase(&session->ref);\n\t\tjanus_voicemail_message *msg = g_malloc(sizeof(janus_voicemail_message));\n\t\tmsg->handle = handle;\n\t\tmsg->message = json_pack(\"{ss}\", \"request\", \"stop\");\n\t\tmsg->transaction = NULL;\n\t\tmsg->jsep = NULL;\n\t\tg_async_queue_push(messages, msg);\n\t\treturn;\n\t}\n\t/* Save the frame */\n\tchar *buf = packet->buffer;\n\tuint16_t len = packet->length;\n\tjanus_rtp_header *rtp = (janus_rtp_header *)buf;\n\tuint16_t seq = ntohs(rtp->seq_number);\n\tif(session->seq == 0)\n\t\tsession->seq = seq;\n\tint plen = 0;\n\tconst unsigned char *payload = (const unsigned char *)janus_rtp_payload(buf, len, &plen);\n\tif(!payload) {\n\t\tJANUS_LOG(LOG_ERR, \"Ops! got an error accessing the RTP payload\\n\");\n\t\treturn;\n\t}\n\togg_packet *op = op_from_pkt(payload, plen);\n\t//~ JANUS_LOG(LOG_VERB, \"\\tWriting at position %d (%d)\\n\", seq-session->seq+1, 960*(seq-session->seq+1));\n\top->granulepos = 960*(seq-session->seq+1); // FIXME: get this from the toc byte\n\togg_stream_packetin(session->stream, op);\n\tg_free(op);\n\togg_write(session);\n}",
  "abstract_func": "void janus_voicemail_incoming_rtp(janus_plugin_session *VAR_0, janus_plugin_rtp *VAR_1) {\n\tif(VAR_0 == NULL || g_atomic_int_get(&VAR_0->stopped) || g_atomic_int_get(&VAR_2) || !g_atomic_int_get(&VAR_3))\n\t\treturn;\n\tjanus_voicemail_session *VAR_4 = (janus_voicemail_session *)VAR_0->plugin_handle;\n\tif(!VAR_4 || g_atomic_int_get(&VAR_4->destroyed) || g_atomic_int_get(&VAR_4->stopping) ||\n\t\t\t!g_atomic_int_get(&VAR_4->started) || VAR_4->start_time == 0)\n\t\treturn;\n\tgint64 VAR_5 = janus_get_monotonic_time();\n\t/* COMMENT_0 */\n\tif((VAR_5-VAR_4->start_time) >= 10*VAR_6) {\n\t\t/* COMMENT_1 */\n\t\tg_atomic_int_set(&VAR_4->started, 0);\n\t\tjanus_refcount_increase(&VAR_4->ref);\n\t\tjanus_voicemail_message *VAR_7 = g_malloc(sizeof(janus_voicemail_message));\n\t\tVAR_7->handle = VAR_0;\n\t\tVAR_7->message = json_pack(\"{ss}\", \"request\", \"stop\");\n\t\tVAR_7->transaction = NULL;\n\t\tVAR_7->jsep = NULL;\n\t\tg_async_queue_push(VAR_8, VAR_7);\n\t\treturn;\n\t}\n\t/* COMMENT_2 */\n\tchar *VAR_9 = VAR_1->buffer;\n\tuint16_t VAR_10 = VAR_1->length;\n\tjanus_rtp_header *VAR_11 = (janus_rtp_header *)VAR_9;\n\tuint16_t VAR_12 = ntohs(VAR_11->seq_number);\n\tif(VAR_4->seq == 0)\n\t\tVAR_4->seq = VAR_12;\n\tint VAR_13 = 0;\n\tconst unsigned char *VAR_14 = (const unsigned char *)janus_rtp_payload(VAR_9, VAR_10, &VAR_13);\n\tif(!VAR_14) {\n\t\tJANUS_LOG(VAR_15, \"Ops! got an error accessing the RTP payload\\n\");\n\t\treturn;\n\t}\n\togg_packet *VAR_16 = op_from_pkt(VAR_14, VAR_13);\n\t/* COMMENT_3 */\n\tVAR_16->granulepos = 960*(VAR_12-VAR_4->seq+1); /* COMMENT_4 */\n\togg_stream_packetin(VAR_4->stream, VAR_16);\n\tg_free(VAR_16);\n\togg_write(VAR_4);\n}",
  "func_graph_path": "meetecho/janus-gateway/eb99ac8674c554bab6775f4378b24e991b4a2fa1/janus_voicemail.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,13 +2,14 @@\n \tif(handle == NULL || g_atomic_int_get(&handle->stopped) || g_atomic_int_get(&stopping) || !g_atomic_int_get(&initialized))\n \t\treturn;\n \tjanus_voicemail_session *session = (janus_voicemail_session *)handle->plugin_handle;\n-\tif(!session || g_atomic_int_get(&session->destroyed) || session->stopping || !session->started || session->start_time == 0)\n+\tif(!session || g_atomic_int_get(&session->destroyed) || g_atomic_int_get(&session->stopping) ||\n+\t\t\t!g_atomic_int_get(&session->started) || session->start_time == 0)\n \t\treturn;\n \tgint64 now = janus_get_monotonic_time();\n \t/* Have 10 seconds passed? */\n \tif((now-session->start_time) >= 10*G_USEC_PER_SEC) {\n \t\t/* FIXME Simulate a \"stop\" coming from the browser */\n-\t\tsession->started = FALSE;\n+\t\tg_atomic_int_set(&session->started, 0);\n \t\tjanus_refcount_increase(&session->ref);\n \t\tjanus_voicemail_message *msg = g_malloc(sizeof(janus_voicemail_message));\n \t\tmsg->handle = handle;",
  "diff_line_info": {
    "deleted_lines": [
      "\tif(!session || g_atomic_int_get(&session->destroyed) || session->stopping || !session->started || session->start_time == 0)",
      "\t\tsession->started = FALSE;"
    ],
    "added_lines": [
      "\tif(!session || g_atomic_int_get(&session->destroyed) || g_atomic_int_get(&session->stopping) ||",
      "\t\t\t!g_atomic_int_get(&session->started) || session->start_time == 0)",
      "\t\tg_atomic_int_set(&session->started, 0);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/meetecho/janus-gateway/pull/1993",
  "description": {
    "pr_info": {
      "title": "Fixes to leaks and race conditions in VoiceMail plugin",
      "number": 1993
    },
    "comment": [
      "Ref: CVE-2020-10576\r\n\r\nWe've been notified about some issues with the VoiceMail plugin, which in part didn't surprise me as it hasn't been touched much since it was first created, and we very rarely use it ourselves. Specifically, there was a race condition that could cause a crash in the server. This patch addresses that issue, and also takes care of leaks that the VoiceMail plugin was apparently causing consistently, whether the issue showed up or not.\r\n\r\nI can't replicate the issue anymore, so I'm planning to merge soon. Feedback welcome!",
      "Merging."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}