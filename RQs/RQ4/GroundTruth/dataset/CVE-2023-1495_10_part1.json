{
  "cve_id": "CVE-2023-1495",
  "cwe_ids": [
    "CWE-89"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "getrebuild/rebuild",
  "commit_msg": "H5 sync2 (#595)\n\n* style: 目录样式gh\r\n\r\n* style: J_new\r\n\r\n* feat: advListFilterTabs\r\n\r\n* feat: nav-copyto\r\n\r\n* enh: 助记码全拼\r\n\r\n* enh: 地图搜索选点\r\n\r\n* enh: topnav\r\n\r\n* list pn\r\n\r\n* .form-line.v33\r\n\r\n* open TAG\r\n\r\n* KVS addShutdownHook\r\n\r\n* fix: #594\r\n\r\n---------\r\n\r\nCo-authored-by: devezhao <zhaofang123@gmail.com>",
  "commit_hash": "c9474f84e5f376dd2ade2078e3039961a9425da7",
  "git_url": "https://github.com/getrebuild/rebuild/commit/c9474f84e5f376dd2ade2078e3039961a9425da7",
  "file_path": "src/main/java/com/rebuild/core/service/general/QuickCodeReindexTask.java",
  "func_name": "generateQuickCode",
  "func_before": "public static String generateQuickCode(Record record) {\n        Entity entity = record.getEntity();\n        if (!entity.containsField(EntityHelper.QuickCode)) return null;\n\n        Field nameField = entity.getNameField();\n        if (!record.hasValue(nameField.getName(), false)) return null;\n\n        Object nameValue = record.getObjectValue(nameField.getName());\n        DisplayType dt = EasyMetaFactory.getDisplayType(nameField);\n        if (dt == DisplayType.TEXT || dt == DisplayType.SERIES\n                || dt == DisplayType.EMAIL || dt == DisplayType.PHONE || dt == DisplayType.URL\n                || dt == DisplayType.NUMBER || dt == DisplayType.DECIMAL) {\n            nameValue = nameValue.toString();\n        } else if (dt == DisplayType.PICKLIST) {\n            nameValue = PickListManager.instance.getLabel((ID) nameValue);\n        } else if (dt == DisplayType.STATE) {\n            StateSpec state = StateManager.instance.findState(nameField, nameValue);\n            nameValue = Language.L(state);\n        } else if (dt == DisplayType.CLASSIFICATION) {\n            nameValue = ClassificationManager.instance.getFullName((ID) nameValue);\n        } else if (dt == DisplayType.DATE || dt == DisplayType.DATETIME) {\n            nameValue = CalendarUtils.getPlainDateFormat().format(nameValue);\n        } else if (dt == DisplayType.LOCATION) {\n            nameValue = nameValue.toString().split(CommonsUtils.COMM_SPLITER_RE)[0];\n        } else {\n            nameValue = null;\n        }\n\n        if (nameValue == null) return null;\n        return generateQuickCode((String) nameValue);\n    }",
  "abstract_func_before": "public static String generateQuickCode(Record VAR_0) {\n        Entity VAR_1 = VAR_0.getEntity();\n        if (!VAR_1.containsField(VAR_2.QuickCode)) return null;\n\n        Field VAR_3 = VAR_1.getNameField();\n        if (!VAR_0.hasValue(VAR_3.getName(), false)) return null;\n\n        Object VAR_4 = VAR_0.getObjectValue(VAR_3.getName());\n        DisplayType VAR_5 = VAR_6.getDisplayType(VAR_3);\n        if (VAR_5 == VAR_7.TEXT || VAR_5 == VAR_7.SERIES\n                || VAR_5 == VAR_7.EMAIL || VAR_5 == VAR_7.PHONE || VAR_5 == VAR_7.URL\n                || VAR_5 == VAR_7.NUMBER || VAR_5 == VAR_7.DECIMAL) {\n            VAR_4 = VAR_4.toString();\n        } else if (VAR_5 == VAR_7.PICKLIST) {\n            VAR_4 = VAR_8.instance.getLabel((ID) VAR_4);\n        } else if (VAR_5 == VAR_7.STATE) {\n            StateSpec VAR_9 = VAR_10.instance.findState(VAR_3, VAR_4);\n            VAR_4 = VAR_11.L(VAR_9);\n        } else if (VAR_5 == VAR_7.CLASSIFICATION) {\n            VAR_4 = VAR_12.instance.getFullName((ID) VAR_4);\n        } else if (VAR_5 == VAR_7.DATE || VAR_5 == VAR_7.DATETIME) {\n            VAR_4 = VAR_13.getPlainDateFormat().format(VAR_4);\n        } else if (VAR_5 == VAR_7.LOCATION) {\n            VAR_4 = VAR_4.toString().split(VAR_14.COMM_SPLITER_RE)[0];\n        } else {\n            VAR_4 = null;\n        }\n\n        if (VAR_4 == null) return null;\n        return generateQuickCode((String) VAR_4);\n    }",
  "func_graph_path_before": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/QuickCodeReindexTask.java/vul/before/1.json",
  "func": "public static String generateQuickCode(Record record) {\n        Entity entity = record.getEntity();\n        if (!entity.containsField(EntityHelper.QuickCode)) return null;\n\n        Field nameField = entity.getNameField();\n        if (!record.hasValue(nameField.getName(), Boolean.FALSE)) return null;\n\n        Object nameValue = record.getObjectValue(nameField.getName());\n        DisplayType dt = EasyMetaFactory.getDisplayType(nameField);\n        if (dt == DisplayType.TEXT || dt == DisplayType.SERIES\n                || dt == DisplayType.EMAIL || dt == DisplayType.PHONE || dt == DisplayType.URL\n                || dt == DisplayType.NUMBER || dt == DisplayType.DECIMAL) {\n            nameValue = nameValue.toString();\n        } else if (dt == DisplayType.PICKLIST) {\n            nameValue = PickListManager.instance.getLabel((ID) nameValue);\n        } else if (dt == DisplayType.STATE) {\n            StateSpec state = StateManager.instance.findState(nameField, nameValue);\n            nameValue = Language.L(state);\n        } else if (dt == DisplayType.CLASSIFICATION) {\n            nameValue = ClassificationManager.instance.getFullName((ID) nameValue);\n        } else if (dt == DisplayType.DATE || dt == DisplayType.DATETIME) {\n            nameValue = CalendarUtils.getPlainDateFormat().format(nameValue);\n        } else if (dt == DisplayType.LOCATION) {\n            nameValue = nameValue.toString().split(CommonsUtils.COMM_SPLITER_RE)[0];\n        } else {\n            nameValue = null;\n        }\n\n        if (nameValue == null) return null;\n        return generateQuickCode((String) nameValue);\n    }",
  "abstract_func": "public static String generateQuickCode(Record VAR_0) {\n        Entity VAR_1 = VAR_0.getEntity();\n        if (!VAR_1.containsField(VAR_2.QuickCode)) return null;\n\n        Field VAR_3 = VAR_1.getNameField();\n        if (!VAR_0.hasValue(VAR_3.getName(), VAR_4.FALSE)) return null;\n\n        Object VAR_5 = VAR_0.getObjectValue(VAR_3.getName());\n        DisplayType VAR_6 = VAR_7.getDisplayType(VAR_3);\n        if (VAR_6 == VAR_8.TEXT || VAR_6 == VAR_8.SERIES\n                || VAR_6 == VAR_8.EMAIL || VAR_6 == VAR_8.PHONE || VAR_6 == VAR_8.URL\n                || VAR_6 == VAR_8.NUMBER || VAR_6 == VAR_8.DECIMAL) {\n            VAR_5 = VAR_5.toString();\n        } else if (VAR_6 == VAR_8.PICKLIST) {\n            VAR_5 = VAR_9.instance.getLabel((ID) VAR_5);\n        } else if (VAR_6 == VAR_8.STATE) {\n            StateSpec VAR_10 = VAR_11.instance.findState(VAR_3, VAR_5);\n            VAR_5 = VAR_12.L(VAR_10);\n        } else if (VAR_6 == VAR_8.CLASSIFICATION) {\n            VAR_5 = VAR_13.instance.getFullName((ID) VAR_5);\n        } else if (VAR_6 == VAR_8.DATE || VAR_6 == VAR_8.DATETIME) {\n            VAR_5 = VAR_14.getPlainDateFormat().format(VAR_5);\n        } else if (VAR_6 == VAR_8.LOCATION) {\n            VAR_5 = VAR_5.toString().split(VAR_15.COMM_SPLITER_RE)[0];\n        } else {\n            VAR_5 = null;\n        }\n\n        if (VAR_5 == null) return null;\n        return generateQuickCode((String) VAR_5);\n    }",
  "func_graph_path": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/QuickCodeReindexTask.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,7 +3,7 @@\n         if (!entity.containsField(EntityHelper.QuickCode)) return null;\n \n         Field nameField = entity.getNameField();\n-        if (!record.hasValue(nameField.getName(), false)) return null;\n+        if (!record.hasValue(nameField.getName(), Boolean.FALSE)) return null;\n \n         Object nameValue = record.getObjectValue(nameField.getName());\n         DisplayType dt = EasyMetaFactory.getDisplayType(nameField);",
  "diff_line_info": {
    "deleted_lines": [
      "        if (!record.hasValue(nameField.getName(), false)) return null;"
    ],
    "added_lines": [
      "        if (!record.hasValue(nameField.getName(), Boolean.FALSE)) return null;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/getrebuild/rebuild/pull/595",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/getrebuild/rebuild/pull/595: 403 Client Error: Forbidden for url: https://api.github.com/repos/getrebuild/rebuild/pulls/595",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.9"
}