{
  "cve_id": "CVE-2022-3509",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "protocolbuffers/protobuf",
  "commit_msg": "Clean up TextFormat parser (#10673)\n\n* Fix TextFormat parser",
  "commit_hash": "a3888f53317a8018e7a439bac4abeb8f3425d5e9",
  "git_url": "https://github.com/protocolbuffers/protobuf/commit/a3888f53317a8018e7a439bac4abeb8f3425d5e9",
  "file_path": "java/core/src/main/java/com/google/protobuf/MessageReflection.java",
  "func_name": "mergeMessage",
  "func_before": "@Override\n    public void mergeMessage(\n        CodedInputStream input,\n        ExtensionRegistryLite extensionRegistry,\n        Descriptors.FieldDescriptor field,\n        Message defaultInstance)\n        throws IOException {\n      if (!field.isRepeated()) {\n        if (hasField(field)) {\n          input.readMessage(builder.getFieldBuilder(field), extensionRegistry);\n          return;\n        }\n        Message.Builder subBuilder = newMessageFieldInstance(field, defaultInstance);\n        input.readMessage(subBuilder, extensionRegistry);\n        Object unused = setField(field, subBuilder.buildPartial());\n      } else {\n        Message.Builder subBuilder = newMessageFieldInstance(field, defaultInstance);\n        input.readMessage(subBuilder, extensionRegistry);\n        Object unused = addRepeatedField(field, subBuilder.buildPartial());\n      }\n    }",
  "abstract_func_before": "@Override\n    public void mergeMessage(\n        CodedInputStream VAR_0,\n        ExtensionRegistryLite VAR_1,\n        Descriptors.FieldDescriptor VAR_2,\n        Message VAR_3)\n        throws IOException {\n      if (!VAR_2.isRepeated()) {\n        if (hasField(VAR_2)) {\n          VAR_0.readMessage(VAR_4.getFieldBuilder(VAR_2), VAR_1);\n          return;\n        }\n        Message.Builder VAR_5 = newMessageFieldInstance(VAR_2, VAR_3);\n        VAR_0.readMessage(VAR_5, VAR_1);\n        Object VAR_6 = setField(VAR_2, VAR_5.buildPartial());\n      } else {\n        Message.Builder VAR_5 = newMessageFieldInstance(VAR_2, VAR_3);\n        VAR_0.readMessage(VAR_5, VAR_1);\n        Object VAR_6 = addRepeatedField(VAR_2, VAR_5.buildPartial());\n      }\n    }",
  "func_graph_path_before": "protocolbuffers/protobuf/a3888f53317a8018e7a439bac4abeb8f3425d5e9/MessageReflection.java/vul/before/0.json",
  "func": "@Override\n    public void mergeMessage(\n        CodedInputStream input,\n        ExtensionRegistryLite extensionRegistry,\n        Descriptors.FieldDescriptor field,\n        Message defaultInstance)\n        throws IOException {\n      if (!field.isRepeated()) {\n        Message.Builder subBuilder;\n        if (hasField(field)) {\n          subBuilder = getFieldBuilder(field);\n          if (subBuilder != null) {\n            input.readMessage(subBuilder, extensionRegistry);\n            return;\n          } else {\n            subBuilder = newMessageFieldInstance(field, defaultInstance);\n            subBuilder.mergeFrom((Message) getField(field));\n          }\n        } else {\n          subBuilder = newMessageFieldInstance(field, defaultInstance);\n        }\n        input.readMessage(subBuilder, extensionRegistry);\n        Object unused = setField(field, subBuilder.buildPartial());\n      } else {\n        Message.Builder subBuilder = newMessageFieldInstance(field, defaultInstance);\n        input.readMessage(subBuilder, extensionRegistry);\n        Object unused = addRepeatedField(field, subBuilder.buildPartial());\n      }\n    }",
  "abstract_func": "@Override\n    public void mergeMessage(\n        CodedInputStream VAR_0,\n        ExtensionRegistryLite VAR_1,\n        Descriptors.FieldDescriptor VAR_2,\n        Message VAR_3)\n        throws IOException {\n      if (!VAR_2.isRepeated()) {\n        Message.Builder VAR_4;\n        if (hasField(VAR_2)) {\n          VAR_4 = getFieldBuilder(VAR_2);\n          if (VAR_4 != null) {\n            VAR_0.readMessage(VAR_4, VAR_1);\n            return;\n          } else {\n            VAR_4 = newMessageFieldInstance(VAR_2, VAR_3);\n            VAR_4.mergeFrom((Message) getField(VAR_2));\n          }\n        } else {\n          VAR_4 = newMessageFieldInstance(VAR_2, VAR_3);\n        }\n        VAR_0.readMessage(VAR_4, VAR_1);\n        Object VAR_5 = setField(VAR_2, VAR_4.buildPartial());\n      } else {\n        Message.Builder VAR_4 = newMessageFieldInstance(VAR_2, VAR_3);\n        VAR_0.readMessage(VAR_4, VAR_1);\n        Object VAR_5 = addRepeatedField(VAR_2, VAR_4.buildPartial());\n      }\n    }",
  "func_graph_path": "protocolbuffers/protobuf/a3888f53317a8018e7a439bac4abeb8f3425d5e9/MessageReflection.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,11 +6,19 @@\n         Message defaultInstance)\n         throws IOException {\n       if (!field.isRepeated()) {\n+        Message.Builder subBuilder;\n         if (hasField(field)) {\n-          input.readMessage(builder.getFieldBuilder(field), extensionRegistry);\n-          return;\n+          subBuilder = getFieldBuilder(field);\n+          if (subBuilder != null) {\n+            input.readMessage(subBuilder, extensionRegistry);\n+            return;\n+          } else {\n+            subBuilder = newMessageFieldInstance(field, defaultInstance);\n+            subBuilder.mergeFrom((Message) getField(field));\n+          }\n+        } else {\n+          subBuilder = newMessageFieldInstance(field, defaultInstance);\n         }\n-        Message.Builder subBuilder = newMessageFieldInstance(field, defaultInstance);\n         input.readMessage(subBuilder, extensionRegistry);\n         Object unused = setField(field, subBuilder.buildPartial());\n       } else {",
  "diff_line_info": {
    "deleted_lines": [
      "          input.readMessage(builder.getFieldBuilder(field), extensionRegistry);",
      "          return;",
      "        Message.Builder subBuilder = newMessageFieldInstance(field, defaultInstance);"
    ],
    "added_lines": [
      "        Message.Builder subBuilder;",
      "          subBuilder = getFieldBuilder(field);",
      "          if (subBuilder != null) {",
      "            input.readMessage(subBuilder, extensionRegistry);",
      "            return;",
      "          } else {",
      "            subBuilder = newMessageFieldInstance(field, defaultInstance);",
      "            subBuilder.mergeFrom((Message) getField(field));",
      "          }",
      "        } else {",
      "          subBuilder = newMessageFieldInstance(field, defaultInstance);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/protocolbuffers/protobuf/pull/10673",
  "description": {
    "pr_info": {
      "title": "Clean up TextFormat parser",
      "number": 10673
    },
    "comment": [
      "Fix TextFormat parser to build up recurring (but supposedly not repeated) sub-messages directly from text rather than building a new sub-message and merging the fully formed message into the existing field.",
      "Do you plan to backport it to 3.19.x ?",
      "This fix should have already been included in 3.19.x in https://github.com/protocolbuffers/protobuf/commit/b0e8e607dc1ace17c823276d3384eeda775bbd76",
      "@mkruskal-google How can this issue be fixed in version 3.9.1?\r\nhttps://github.com/protocolbuffers/protobuf/commit/a3888f53317a8018e7a439bac4abeb8f3425d5e9\r\nAfter the 3.21.7 and subsequent versions were modified to be compatible with 3.9.1, the unit test cases would fail."
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "The patch addresses a functionality issue in the TextFormat parser, improving how it constructs sub-messages, without any security implications. It correctly falls under Defect Remediation & Feature Upgrades.\n\n**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.9"
}