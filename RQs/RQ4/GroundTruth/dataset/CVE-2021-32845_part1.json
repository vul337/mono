{
  "cve_id": "CVE-2021-32845",
  "cwe_ids": [
    "CWE-252"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "moby/hyperkit",
  "commit_msg": "Fix vtrnd pci_vtrnd_notify uninitialized memory use (GHSL-2021-056)\n\nSigned-off-by: Frederic Dalleau <frederic.dalleau@docker.com>",
  "commit_hash": "41272a980197917df8e58ff90642d14dec8fe948",
  "git_url": "https://github.com/moby/hyperkit/commit/41272a980197917df8e58ff90642d14dec8fe948",
  "file_path": "src/lib/pci_virtio_rnd.c",
  "func_name": "pci_vtrnd_notify",
  "func_before": "static void\npci_vtrnd_notify(void *vsc, struct vqueue_info *vq)\n{\n\tstruct iovec iov;\n\tstruct pci_vtrnd_softc *sc;\n\tint len;\n\tuint16_t idx;\n\n\tsc = vsc;\n\n\tif (sc->vrsc_fd < 0) {\n\t\tvq_endchains(vq, 0);\n\t\treturn;\n\t}\n\n\twhile (vq_has_descs(vq)) {\n\t\tvq_getchain(vq, &idx, &iov, 1, NULL);\n\n\t\tlen = (int) read(sc->vrsc_fd, iov.iov_base, iov.iov_len);\n\n\t\tDPRINTF((\"vtrnd: vtrnd_notify(): %d\\r\\n\", len));\n\n\t\t/* Catastrophe if unable to read from /dev/random */\n\t\tassert(len > 0);\n\n\t\t/*\n\t\t * Release this chain and handle more\n\t\t */\n\t\tvq_relchain(vq, idx, (uint32_t)len);\n\t}\n\tvq_endchains(vq, 1);\t/* Generate interrupt if appropriate. */\n}",
  "abstract_func_before": "static void\npci_vtrnd_notify(void *VAR_0, struct vqueue_info *VAR_1)\n{\n\tstruct iovec VAR_2;\n\tstruct pci_vtrnd_softc *VAR_3;\n\tint VAR_4;\n\tuint16_t VAR_5;\n\n\tVAR_3 = VAR_0;\n\n\tif (VAR_3->vrsc_fd < 0) {\n\t\tvq_endchains(VAR_1, 0);\n\t\treturn;\n\t}\n\n\twhile (vq_has_descs(VAR_1)) {\n\t\tvq_getchain(VAR_1, &VAR_5, &VAR_2, 1, NULL);\n\n\t\tVAR_4 = (int) read(VAR_3->vrsc_fd, VAR_2.iov_base, VAR_2.iov_len);\n\n\t\tDPRINTF((\"vtrnd: vtrnd_notify(): %d\\r\\n\", VAR_4));\n\n\t\t/* COMMENT_0 */\n\t\tassert(VAR_4 > 0);\n\n\t\t/* COMMENT_1 */\n                                       \n     \n\t\tvq_relchain(VAR_1, VAR_5, (uint32_t)VAR_4);\n\t}\n\tvq_endchains(VAR_1, 1);\t/* COMMENT_4 */\n}",
  "func_graph_path_before": "moby/hyperkit/41272a980197917df8e58ff90642d14dec8fe948/pci_virtio_rnd.c/vul/before/0.json",
  "func": "static void\npci_vtrnd_notify(void *vsc, struct vqueue_info *vq)\n{\n\tstruct iovec iov;\n\tstruct pci_vtrnd_softc *sc;\n\tint len, n;\n\tuint16_t idx;\n\n\tsc = vsc;\n\n\tif (sc->vrsc_fd < 0) {\n\t\tvq_endchains(vq, 0);\n\t\treturn;\n\t}\n\n\twhile (vq_has_descs(vq)) {\n\t\tn = vq_getchain(vq, &idx, &iov, 1, NULL);\n\t\tif (n < 0) {\n\t\t\tfprintf(stderr, \"vtrnd: vtrnd_notify(): n %d\\r\\n\", n);\n\t\t\treturn;\n\t\t}\n\n\t\tlen = (int) read(sc->vrsc_fd, iov.iov_base, iov.iov_len);\n\n\t\tDPRINTF((\"vtrnd: vtrnd_notify(): %d\\r\\n\", len));\n\n\t\t/* Catastrophe if unable to read from /dev/random */\n\t\tassert(len > 0);\n\n\t\t/*\n\t\t * Release this chain and handle more\n\t\t */\n\t\tvq_relchain(vq, idx, (uint32_t)len);\n\t}\n\tvq_endchains(vq, 1);\t/* Generate interrupt if appropriate. */\n}",
  "abstract_func": "static void\npci_vtrnd_notify(void *VAR_0, struct vqueue_info *VAR_1)\n{\n\tstruct iovec VAR_2;\n\tstruct pci_vtrnd_softc *VAR_3;\n\tint VAR_4, VAR_5;\n\tuint16_t VAR_6;\n\n\tVAR_3 = VAR_0;\n\n\tif (VAR_3->vrsc_fd < 0) {\n\t\tvq_endchains(VAR_1, 0);\n\t\treturn;\n\t}\n\n\twhile (vq_has_descs(VAR_1)) {\n\t\tVAR_5 = vq_getchain(VAR_1, &VAR_6, &VAR_2, 1, NULL);\n\t\tif (VAR_5 < 0) {\n\t\t\tfprintf(VAR_7, \"vtrnd: vtrnd_notify(): n %d\\r\\n\", VAR_5);\n\t\t\treturn;\n\t\t}\n\n\t\tVAR_4 = (int) read(VAR_3->vrsc_fd, VAR_2.iov_base, VAR_2.iov_len);\n\n\t\tDPRINTF((\"vtrnd: vtrnd_notify(): %d\\r\\n\", VAR_4));\n\n\t\t/* COMMENT_0 */\n\t\tassert(VAR_4 > 0);\n\n\t\t/* COMMENT_1 */\n                                       \n     \n\t\tvq_relchain(VAR_1, VAR_6, (uint32_t)VAR_4);\n\t}\n\tvq_endchains(VAR_1, 1);\t/* COMMENT_4 */\n}",
  "func_graph_path": "moby/hyperkit/41272a980197917df8e58ff90642d14dec8fe948/pci_virtio_rnd.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,7 +3,7 @@\n {\n \tstruct iovec iov;\n \tstruct pci_vtrnd_softc *sc;\n-\tint len;\n+\tint len, n;\n \tuint16_t idx;\n \n \tsc = vsc;\n@@ -14,7 +14,11 @@\n \t}\n \n \twhile (vq_has_descs(vq)) {\n-\t\tvq_getchain(vq, &idx, &iov, 1, NULL);\n+\t\tn = vq_getchain(vq, &idx, &iov, 1, NULL);\n+\t\tif (n < 0) {\n+\t\t\tfprintf(stderr, \"vtrnd: vtrnd_notify(): n %d\\r\\n\", n);\n+\t\t\treturn;\n+\t\t}\n \n \t\tlen = (int) read(sc->vrsc_fd, iov.iov_base, iov.iov_len);\n ",
  "diff_line_info": {
    "deleted_lines": [
      "\tint len;",
      "\t\tvq_getchain(vq, &idx, &iov, 1, NULL);"
    ],
    "added_lines": [
      "\tint len, n;",
      "\t\tn = vq_getchain(vq, &idx, &iov, 1, NULL);",
      "\t\tif (n < 0) {",
      "\t\t\tfprintf(stderr, \"vtrnd: vtrnd_notify(): n %d\\r\\n\", n);",
      "\t\t\treturn;",
      "\t\t}"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/moby/hyperkit/pull/313",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/moby/hyperkit/pull/313: 403 Client Error: Forbidden for url: https://api.github.com/repos/moby/hyperkit/pulls/313",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0\n\nThe commit addresses an uninitialized memory use vulnerability, which is a security issue. The code changes add error handling to prevent crashes or improper memory access, consistent with a security fix. The presence of GHSL-2021-056 further confirms it as a security patch."
}