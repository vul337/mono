{
  "cve_id": "CVE-2022-2414",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
  "cvss_is_v3": true,
  "repo_name": "dogtagpki/pki",
  "commit_msg": "Disable access to external entities when parsing XML\n\nThis reduces the vulnerability of XML parsers to XXE (XML external\nentity) injection.\n\nThe best way to prevent XXE is to stop using XML altogether, which we do\nplan to do. Until that happens I consider it worthwhile to tighten the\nsecurity here though.",
  "commit_hash": "16deffdf7548e305507982e246eb9fd1eac414fd",
  "git_url": "https://github.com/dogtagpki/pki/commit/16deffdf7548e305507982e246eb9fd1eac414fd",
  "file_path": "base/common/src/main/java/com/netscape/certsrv/cert/CertDataInfos.java",
  "func_name": "toXML",
  "func_before": "public String toXML() throws Exception {\n\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        DocumentBuilder builder = factory.newDocumentBuilder();\n        Document document = builder.newDocument();\n\n        toDOM(document);\n\n        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n        Transformer transformer = transformerFactory.newTransformer();\n        transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n        transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n\n        DOMSource domSource = new DOMSource(document);\n        StringWriter sw = new StringWriter();\n        StreamResult streamResult = new StreamResult(sw);\n        transformer.transform(domSource, streamResult);\n\n        return sw.toString();\n    }",
  "abstract_func_before": "public String toXML() throws Exception {\n\n        DocumentBuilderFactory VAR_0 = VAR_1.newInstance();\n        DocumentBuilder VAR_2 = VAR_0.newDocumentBuilder();\n        Document VAR_3 = VAR_2.newDocument();\n\n        toDOM(VAR_3);\n\n        TransformerFactory VAR_4 = VAR_5.newInstance();\n        Transformer VAR_6 = VAR_4.newTransformer();\n        VAR_6.setOutputProperty(VAR_7.INDENT, \"yes\");\n        VAR_6.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n\n        DOMSource VAR_8 = new DOMSource(VAR_3);\n        StringWriter VAR_9 = new StringWriter();\n        StreamResult VAR_10 = new StreamResult(VAR_9);\n        VAR_6.transform(VAR_8, VAR_10);\n\n        return VAR_9.toString();\n    }",
  "func_graph_path_before": "dogtagpki/pki/16deffdf7548e305507982e246eb9fd1eac414fd/CertDataInfos.java/vul/before/1.json",
  "func": "public String toXML() throws Exception {\n\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        DocumentBuilder builder = factory.newDocumentBuilder();\n        Document document = builder.newDocument();\n\n        toDOM(document);\n\n        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");\n        Transformer transformer = transformerFactory.newTransformer();\n        transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n        transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n\n        DOMSource domSource = new DOMSource(document);\n        StringWriter sw = new StringWriter();\n        StreamResult streamResult = new StreamResult(sw);\n        transformer.transform(domSource, streamResult);\n\n        return sw.toString();\n    }",
  "abstract_func": "public String toXML() throws Exception {\n\n        DocumentBuilderFactory VAR_0 = VAR_1.newInstance();\n        DocumentBuilder VAR_2 = VAR_0.newDocumentBuilder();\n        Document VAR_3 = VAR_2.newDocument();\n\n        toDOM(VAR_3);\n\n        TransformerFactory VAR_4 = VAR_5.newInstance();\n        VAR_4.setAttribute(VAR_6.ACCESS_EXTERNAL_DTD, \"\");\n        VAR_4.setAttribute(VAR_6.ACCESS_EXTERNAL_STYLESHEET, \"\");\n        Transformer VAR_7 = VAR_4.newTransformer();\n        VAR_7.setOutputProperty(VAR_8.INDENT, \"yes\");\n        VAR_7.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n\n        DOMSource VAR_9 = new DOMSource(VAR_3);\n        StringWriter VAR_10 = new StringWriter();\n        StreamResult VAR_11 = new StreamResult(VAR_10);\n        VAR_7.transform(VAR_9, VAR_11);\n\n        return VAR_10.toString();\n    }",
  "func_graph_path": "dogtagpki/pki/16deffdf7548e305507982e246eb9fd1eac414fd/CertDataInfos.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,6 +7,8 @@\n         toDOM(document);\n \n         TransformerFactory transformerFactory = TransformerFactory.newInstance();\n+        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");\n         Transformer transformer = transformerFactory.newTransformer();\n         transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n         transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");",
      "        transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/dogtagpki/pki/pull/4021",
  "description": {
    "pr_info": {
      "title": "Disable access to external entities when parsing XML",
      "number": 4021
    },
    "comment": [
      "This reduces the vulnerability of XML parsers to XXE (XML external\r\nentity) injection.\r\n\r\nThe best way to prevent XXE is to stop using XML altogether, which we do\r\nplan to do. Until that happens I consider it worthwhile to tighten the\r\nsecurity here though.",
      "I considered making a class similar to `JSONSerializer` but it felt like too much work for deprecated code, that is actively marked for removal. Therefore I just added in the necessary updates per-instantiation.",
      "It's a shame that Sonar doesn't work on PRs (yet) because then we could have checked that I caught them all.",
      "Thanks @edewata !"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0\n\nThe commit message and code changes explicitly address a security issue by mitigating XXE vulnerabilities through disabling external entity access in XML parsing. The code modifications are consistent with the described purpose, confirming it as a security fix. The confidence is high due to the clear alignment of intent and implementation."
}