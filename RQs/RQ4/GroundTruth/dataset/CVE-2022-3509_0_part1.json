{
  "cve_id": "CVE-2022-3509",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "protocolbuffers/protobuf",
  "commit_msg": "Clean up TextFormat parser (#10673)\n\n* Fix TextFormat parser",
  "commit_hash": "a3888f53317a8018e7a439bac4abeb8f3425d5e9",
  "git_url": "https://github.com/protocolbuffers/protobuf/commit/a3888f53317a8018e7a439bac4abeb8f3425d5e9",
  "file_path": "java/core/src/main/java/com/google/protobuf/MessageReflection.java",
  "func_name": "newMergeTargetForField",
  "func_before": "@Override\n    public MergeTarget newMergeTargetForField(\n        Descriptors.FieldDescriptor field, Message defaultInstance) {\n      Message.Builder subBuilder;\n      if (defaultInstance != null) {\n        subBuilder = defaultInstance.newBuilderForType();\n      } else {\n        subBuilder = builder.newBuilderForField(field);\n      }\n      if (!field.isRepeated()) {\n        Message originalMessage = (Message) getField(field);\n        if (originalMessage != null) {\n          subBuilder.mergeFrom(originalMessage);\n        }\n      }\n      return new BuilderAdapter(subBuilder);\n    }",
  "abstract_func_before": "@Override\n    public MergeTarget newMergeTargetForField(\n        Descriptors.FieldDescriptor VAR_0, Message VAR_1) {\n      Message.Builder VAR_2;\n      if (VAR_1 != null) {\n        VAR_2 = VAR_1.newBuilderForType();\n      } else {\n        VAR_2 = VAR_3.newBuilderForField(VAR_0);\n      }\n      if (!VAR_0.isRepeated()) {\n        Message VAR_4 = (Message) getField(VAR_0);\n        if (VAR_4 != null) {\n          VAR_2.mergeFrom(VAR_4);\n        }\n      }\n      return new BuilderAdapter(VAR_2);\n    }",
  "func_graph_path_before": "protocolbuffers/protobuf/a3888f53317a8018e7a439bac4abeb8f3425d5e9/MessageReflection.java/vul/before/1.json",
  "func": "@Override\n    public MergeTarget newMergeTargetForField(\n        Descriptors.FieldDescriptor field, Message defaultInstance) {\n      Message.Builder subBuilder;\n      if (!field.isRepeated() && hasField(field)) {\n        subBuilder = getFieldBuilder(field);\n        if (subBuilder != null) {\n          return new BuilderAdapter(subBuilder);\n        }\n      }\n\n      subBuilder = newMessageFieldInstance(field, defaultInstance);\n      if (!field.isRepeated()) {\n        Message originalMessage = (Message) getField(field);\n        if (originalMessage != null) {\n          subBuilder.mergeFrom(originalMessage);\n        }\n      }\n      return new BuilderAdapter(subBuilder);\n    }",
  "abstract_func": "@Override\n    public MergeTarget newMergeTargetForField(\n        Descriptors.FieldDescriptor VAR_0, Message VAR_1) {\n      Message.Builder VAR_2;\n      if (!VAR_0.isRepeated() && hasField(VAR_0)) {\n        VAR_2 = getFieldBuilder(VAR_0);\n        if (VAR_2 != null) {\n          return new BuilderAdapter(VAR_2);\n        }\n      }\n\n      VAR_2 = newMessageFieldInstance(VAR_0, VAR_1);\n      if (!VAR_0.isRepeated()) {\n        Message VAR_3 = (Message) getField(VAR_0);\n        if (VAR_3 != null) {\n          VAR_2.mergeFrom(VAR_3);\n        }\n      }\n      return new BuilderAdapter(VAR_2);\n    }",
  "func_graph_path": "protocolbuffers/protobuf/a3888f53317a8018e7a439bac4abeb8f3425d5e9/MessageReflection.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,11 +2,14 @@\n     public MergeTarget newMergeTargetForField(\n         Descriptors.FieldDescriptor field, Message defaultInstance) {\n       Message.Builder subBuilder;\n-      if (defaultInstance != null) {\n-        subBuilder = defaultInstance.newBuilderForType();\n-      } else {\n-        subBuilder = builder.newBuilderForField(field);\n+      if (!field.isRepeated() && hasField(field)) {\n+        subBuilder = getFieldBuilder(field);\n+        if (subBuilder != null) {\n+          return new BuilderAdapter(subBuilder);\n+        }\n       }\n+\n+      subBuilder = newMessageFieldInstance(field, defaultInstance);\n       if (!field.isRepeated()) {\n         Message originalMessage = (Message) getField(field);\n         if (originalMessage != null) {",
  "diff_line_info": {
    "deleted_lines": [
      "      if (defaultInstance != null) {",
      "        subBuilder = defaultInstance.newBuilderForType();",
      "      } else {",
      "        subBuilder = builder.newBuilderForField(field);"
    ],
    "added_lines": [
      "      if (!field.isRepeated() && hasField(field)) {",
      "        subBuilder = getFieldBuilder(field);",
      "        if (subBuilder != null) {",
      "          return new BuilderAdapter(subBuilder);",
      "        }",
      "",
      "      subBuilder = newMessageFieldInstance(field, defaultInstance);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/protocolbuffers/protobuf/pull/10673",
  "description": {
    "pr_info": {
      "title": "Clean up TextFormat parser",
      "number": 10673
    },
    "comment": [
      "Fix TextFormat parser to build up recurring (but supposedly not repeated) sub-messages directly from text rather than building a new sub-message and merging the fully formed message into the existing field.",
      "Do you plan to backport it to 3.19.x ?",
      "This fix should have already been included in 3.19.x in https://github.com/protocolbuffers/protobuf/commit/b0e8e607dc1ace17c823276d3384eeda775bbd76",
      "@mkruskal-google How can this issue be fixed in version 3.9.1?\r\nhttps://github.com/protocolbuffers/protobuf/commit/a3888f53317a8018e7a439bac4abeb8f3425d5e9\r\nAfter the 3.21.7 and subsequent versions were modified to be compatible with 3.9.1, the unit test cases would fail."
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.85,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.85"
}