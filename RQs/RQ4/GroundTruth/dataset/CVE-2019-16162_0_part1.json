{
  "cve_id": "CVE-2019-16162",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "k-takata/Onigmo",
  "commit_msg": "Fix out-of-bounds read in parse_char_class() (Close #139)\n\n/[\\x{111111}]/ causes out-of-bounds read when encoding is a single byte\nencoding. \\x{111111} is an invalid codepoint for a single byte encoding.\nCheck if it is a valid codepoint.",
  "commit_hash": "d4cf99d30bd5f6a8a4ababd0b9d7b06f3a479a24",
  "git_url": "https://github.com/k-takata/Onigmo/commit/d4cf99d30bd5f6a8a4ababd0b9d7b06f3a479a24",
  "file_path": "regenc.c",
  "func_name": "onigenc_single_byte_code_to_mbclen",
  "func_before": "extern int\nonigenc_single_byte_code_to_mbclen(OnigCodePoint code ARG_UNUSED, OnigEncoding enc ARG_UNUSED)\n{\n  return 1;\n}",
  "abstract_func_before": "extern int\nonigenc_single_byte_code_to_mbclen(OnigCodePoint VAR_0 VAR_1, OnigEncoding VAR_2 VAR_1)\n{\n  return 1;\n}",
  "func_graph_path_before": null,
  "func": "extern int\nonigenc_single_byte_code_to_mbclen(OnigCodePoint code, OnigEncoding enc ARG_UNUSED)\n{\n  if (code > 0xff)\n    return ONIGERR_INVALID_CODE_POINT_VALUE;\n  return 1;\n}",
  "abstract_func": "extern int\nonigenc_single_byte_code_to_mbclen(OnigCodePoint VAR_0, OnigEncoding VAR_1 VAR_2)\n{\n  if (VAR_0 > 0xff)\n    return VAR_3;\n  return 1;\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,7 @@\n extern int\n-onigenc_single_byte_code_to_mbclen(OnigCodePoint code ARG_UNUSED, OnigEncoding enc ARG_UNUSED)\n+onigenc_single_byte_code_to_mbclen(OnigCodePoint code, OnigEncoding enc ARG_UNUSED)\n {\n+  if (code > 0xff)\n+    return ONIGERR_INVALID_CODE_POINT_VALUE;\n   return 1;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "onigenc_single_byte_code_to_mbclen(OnigCodePoint code ARG_UNUSED, OnigEncoding enc ARG_UNUSED)"
    ],
    "added_lines": [
      "onigenc_single_byte_code_to_mbclen(OnigCodePoint code, OnigEncoding enc ARG_UNUSED)",
      "  if (code > 0xff)",
      "    return ONIGERR_INVALID_CODE_POINT_VALUE;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/k-takata/Onigmo/pull/140",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/k-takata/Onigmo/pull/140: 403 Client Error: Forbidden for url: https://api.github.com/repos/k-takata/Onigmo/pulls/140",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Step-by-Step Explanation:**\n\n1. **Identify Key Terms:** The commit message mentions \"out-of-bounds read,\" which is a security issue (CWE-125).\n2. **Code Analysis:** The change adds a validity check for codepoints, preventing invalid values that cause the out-of-bounds issue.\n3. **Security Fix**: This directly addresses an exploit risk by validating inputs.\n4. **Confidence High:** Clear alignment between description, commit, and code change.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}