{
  "cve_id": "CVE-2016-9839",
  "cwe_ids": [
    "CWE-200"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "MapServer",
  "commit_msg": "Don't return verbose OGR error messages to clients (#5356)",
  "commit_hash": "3d52307cf0033e3275975b668b7138ba1343f28d",
  "git_url": "https://github.com/MapServer/MapServer/commit/3d52307cf0033e3275975b668b7138ba1343f28d",
  "file_path": "mapogr.cpp",
  "func_name": "msOGRFileNextShape",
  "func_before": "static int\nmsOGRFileNextShape(layerObj *layer, shapeObj *shape,\n                   msOGRFileInfo *psInfo )\n{\n  OGRFeatureH hFeature = NULL;\n\n  if (psInfo == NULL || psInfo->hLayer == NULL) {\n    msSetError(MS_MISCERR, \"Assertion failed: OGR layer not opened!!!\",\n               \"msOGRFileNextShape()\");\n    return(MS_FAILURE);\n  }\n\n  /* ------------------------------------------------------------------\n   * Read until we find a feature that matches attribute filter and\n   * whose geometry is compatible with current layer type.\n   * ------------------------------------------------------------------ */\n  msFreeShape(shape);\n  shape->type = MS_SHAPE_NULL;\n\n  ACQUIRE_OGR_LOCK;\n  while (shape->type == MS_SHAPE_NULL) {\n    if( hFeature )\n      OGR_F_Destroy( hFeature );\n\n    if( (hFeature = OGR_L_GetNextFeature( psInfo->hLayer )) == NULL ) {\n      psInfo->last_record_index_read = -1;\n      if( CPLGetLastErrorType() == CE_Failure ) {\n        msSetError(MS_OGRERR, \"%s\", \"msOGRFileNextShape()\",\n                   CPLGetLastErrorMsg() );\n        RELEASE_OGR_LOCK;\n        return MS_FAILURE;\n      } else {\n        RELEASE_OGR_LOCK;\n        if (layer->debug >= MS_DEBUGLEVEL_VV)\n          msDebug(\"msOGRFileNextShape: Returning MS_DONE (no more shapes)\\n\" );\n        return MS_DONE;  // No more features to read\n      }\n    }\n\n    psInfo->last_record_index_read++;\n\n    if(layer->numitems > 0) {\n      shape->values = msOGRGetValues(layer, hFeature);\n      shape->numvalues = layer->numitems;\n      if(!shape->values) {\n        OGR_F_Destroy( hFeature );\n        RELEASE_OGR_LOCK;\n        return(MS_FAILURE);\n      }\n    }\n\n    // Feature matched filter expression... process geometry\n    // shape->type will be set if geom is compatible with layer type\n    if (ogrConvertGeometry(ogrGetLinearGeometry( hFeature ), shape,\n                           layer->type) == MS_SUCCESS) {\n      if (shape->type != MS_SHAPE_NULL)\n        break; // Shape is ready to be returned!\n\n      if (layer->debug >= MS_DEBUGLEVEL_VVV)\n        msDebug(\"msOGRFileNextShape: Rejecting feature (shapeid = \" CPL_FRMT_GIB \", tileid=%d) of incompatible type for this layer (feature wkbType %d, layer type %d)\\n\",\n                (GIntBig)OGR_F_GetFID( hFeature ), psInfo->nTileId,\n                OGR_F_GetGeometryRef( hFeature )==NULL ? wkbFlatten(wkbUnknown):wkbFlatten( OGR_G_GetGeometryType( OGR_F_GetGeometryRef( hFeature ) ) ),\n                layer->type);\n\n    } else {\n      msFreeShape(shape);\n      OGR_F_Destroy( hFeature );\n      RELEASE_OGR_LOCK;\n      return MS_FAILURE; // Error message already produced.\n    }\n\n    // Feature rejected... free shape to clear attributes values.\n    msFreeShape(shape);\n    shape->type = MS_SHAPE_NULL;\n  }\n\n  shape->index =  (int)OGR_F_GetFID( hFeature ); // FIXME? GetFID() is a 64bit integer in GDAL 2.0\n  shape->resultindex = psInfo->last_record_index_read;\n  shape->tileindex = psInfo->nTileId;\n\n  if (layer->debug >= MS_DEBUGLEVEL_VVV)\n    msDebug(\"msOGRFileNextShape: Returning shape=%ld, tile=%d\\n\",\n            shape->index, shape->tileindex );\n\n  // Keep ref. to last feature read in case we need style info.\n  if (psInfo->hLastFeature)\n    OGR_F_Destroy( psInfo->hLastFeature );\n  psInfo->hLastFeature = hFeature;\n\n  RELEASE_OGR_LOCK;\n\n  return MS_SUCCESS;\n}",
  "abstract_func_before": "static int\nmsOGRFileNextShape(layerObj *VAR_0, shapeObj *VAR_1,\n                   msOGRFileInfo *VAR_2 )\n{\n  OGRFeatureH VAR_3 = NULL;\n\n  if (VAR_2 == NULL || VAR_2->hLayer == NULL) {\n    msSetError(VAR_4, \"Assertion failed: OGR layer not opened!!!\",\n               \"msOGRFileNextShape()\");\n    return(VAR_5);\n  }\n\n  /* COMMENT_0 */\n                                                                   \n                                                          \n                                                                          \n  msFreeShape(VAR_1);\n  VAR_1->type = VAR_6;\n\n  VAR_7;\n  while (VAR_1->type == VAR_6) {\n    if( VAR_3 )\n      OGR_F_Destroy( VAR_3 );\n\n    if( (VAR_3 = OGR_L_GetNextFeature( VAR_2->hLayer )) == NULL ) {\n      VAR_2->last_record_index_read = -1;\n      if( CPLGetLastErrorType() == VAR_8 ) {\n        msSetError(VAR_9, \"%s\", \"msOGRFileNextShape()\",\n                   CPLGetLastErrorMsg() );\n        VAR_10;\n        return VAR_5;\n      } else {\n        VAR_10;\n        if (VAR_0->debug >= VAR_11)\n          msDebug(\"msOGRFileNextShape: Returning MS_DONE (no more shapes)\\n\" );\n        return VAR_12;  /* COMMENT_4 */\n      }\n    }\n\n    VAR_2->last_record_index_read++;\n\n    if(VAR_0->numitems > 0) {\n      VAR_1->values = msOGRGetValues(VAR_0, VAR_3);\n      VAR_1->numvalues = VAR_0->numitems;\n      if(!VAR_1->values) {\n        OGR_F_Destroy( VAR_3 );\n        VAR_10;\n        return(VAR_5);\n      }\n    }\n\n    /* COMMENT_5 */\n    /* COMMENT_6 */\n    if (ogrConvertGeometry(ogrGetLinearGeometry( VAR_3 ), VAR_1,\n                           VAR_0->type) == VAR_13) {\n      if (VAR_1->type != VAR_6)\n        break; /* COMMENT_7 */\n\n      if (VAR_0->debug >= VAR_14)\n        msDebug(\"msOGRFileNextShape: Rejecting feature (shapeid = \" VAR_15 \", tileid=%d) of incompatible type for this layer (feature wkbType %d, layer type %d)\\n\",\n                (GIntBig)OGR_F_GetFID( VAR_3 ), VAR_2->nTileId,\n                OGR_F_GetGeometryRef( VAR_3 )==NULL ? wkbFlatten(VAR_16):wkbFlatten( OGR_G_GetGeometryType( OGR_F_GetGeometryRef( VAR_3 ) ) ),\n                VAR_0->type);\n\n    } else {\n      msFreeShape(VAR_1);\n      OGR_F_Destroy( VAR_3 );\n      VAR_10;\n      return VAR_5; /* COMMENT_8 */\n    }\n\n    /* COMMENT_9 */\n    msFreeShape(VAR_1);\n    VAR_1->type = VAR_6;\n  }\n\n  VAR_1->index =  (int)OGR_F_GetFID( VAR_3 ); /* COMMENT_10 */\n  VAR_1->resultindex = VAR_2->last_record_index_read;\n  VAR_1->tileindex = VAR_2->nTileId;\n\n  if (VAR_0->debug >= VAR_14)\n    msDebug(\"msOGRFileNextShape: Returning shape=%ld, tile=%d\\n\",\n            VAR_1->index, VAR_1->tileindex );\n\n  /* COMMENT_11 */\n  if (VAR_2->hLastFeature)\n    OGR_F_Destroy( VAR_2->hLastFeature );\n  VAR_2->hLastFeature = VAR_3;\n\n  VAR_10;\n\n  return VAR_13;\n}",
  "func_graph_path_before": "MapServer/3d52307cf0033e3275975b668b7138ba1343f28d/mapogr.cpp/vul/before/2.json",
  "func": "static int\nmsOGRFileNextShape(layerObj *layer, shapeObj *shape,\n                   msOGRFileInfo *psInfo )\n{\n  OGRFeatureH hFeature = NULL;\n\n  if (psInfo == NULL || psInfo->hLayer == NULL) {\n    msSetError(MS_MISCERR, \"Assertion failed: OGR layer not opened!!!\",\n               \"msOGRFileNextShape()\");\n    return(MS_FAILURE);\n  }\n\n  /* ------------------------------------------------------------------\n   * Read until we find a feature that matches attribute filter and\n   * whose geometry is compatible with current layer type.\n   * ------------------------------------------------------------------ */\n  msFreeShape(shape);\n  shape->type = MS_SHAPE_NULL;\n\n  ACQUIRE_OGR_LOCK;\n  while (shape->type == MS_SHAPE_NULL) {\n    if( hFeature )\n      OGR_F_Destroy( hFeature );\n\n    if( (hFeature = OGR_L_GetNextFeature( psInfo->hLayer )) == NULL ) {\n      psInfo->last_record_index_read = -1;\n      if( CPLGetLastErrorType() == CE_Failure ) {\n        msSetError(MS_OGRERR, \"OGR GetNextFeature() error'd. Check logs.\",\n                   \"msOGRFileNextShape()\");\n        msDebug(\"msOGRFileNextShape(): %s\\n\",\n                CPLGetLastErrorMsg() );\n        RELEASE_OGR_LOCK;\n        return MS_FAILURE;\n      } else {\n        RELEASE_OGR_LOCK;\n        if (layer->debug >= MS_DEBUGLEVEL_VV)\n          msDebug(\"msOGRFileNextShape: Returning MS_DONE (no more shapes)\\n\" );\n        return MS_DONE;  // No more features to read\n      }\n    }\n\n    psInfo->last_record_index_read++;\n\n    if(layer->numitems > 0) {\n      shape->values = msOGRGetValues(layer, hFeature);\n      shape->numvalues = layer->numitems;\n      if(!shape->values) {\n        OGR_F_Destroy( hFeature );\n        RELEASE_OGR_LOCK;\n        return(MS_FAILURE);\n      }\n    }\n\n    // Feature matched filter expression... process geometry\n    // shape->type will be set if geom is compatible with layer type\n    if (ogrConvertGeometry(ogrGetLinearGeometry( hFeature ), shape,\n                           layer->type) == MS_SUCCESS) {\n      if (shape->type != MS_SHAPE_NULL)\n        break; // Shape is ready to be returned!\n\n      if (layer->debug >= MS_DEBUGLEVEL_VVV)\n        msDebug(\"msOGRFileNextShape: Rejecting feature (shapeid = \" CPL_FRMT_GIB \", tileid=%d) of incompatible type for this layer (feature wkbType %d, layer type %d)\\n\",\n                (GIntBig)OGR_F_GetFID( hFeature ), psInfo->nTileId,\n                OGR_F_GetGeometryRef( hFeature )==NULL ? wkbFlatten(wkbUnknown):wkbFlatten( OGR_G_GetGeometryType( OGR_F_GetGeometryRef( hFeature ) ) ),\n                layer->type);\n\n    } else {\n      msFreeShape(shape);\n      OGR_F_Destroy( hFeature );\n      RELEASE_OGR_LOCK;\n      return MS_FAILURE; // Error message already produced.\n    }\n\n    // Feature rejected... free shape to clear attributes values.\n    msFreeShape(shape);\n    shape->type = MS_SHAPE_NULL;\n  }\n\n  shape->index =  (int)OGR_F_GetFID( hFeature ); // FIXME? GetFID() is a 64bit integer in GDAL 2.0\n  shape->resultindex = psInfo->last_record_index_read;\n  shape->tileindex = psInfo->nTileId;\n\n  if (layer->debug >= MS_DEBUGLEVEL_VVV)\n    msDebug(\"msOGRFileNextShape: Returning shape=%ld, tile=%d\\n\",\n            shape->index, shape->tileindex );\n\n  // Keep ref. to last feature read in case we need style info.\n  if (psInfo->hLastFeature)\n    OGR_F_Destroy( psInfo->hLastFeature );\n  psInfo->hLastFeature = hFeature;\n\n  RELEASE_OGR_LOCK;\n\n  return MS_SUCCESS;\n}",
  "abstract_func": "static int\nmsOGRFileNextShape(layerObj *VAR_0, shapeObj *VAR_1,\n                   msOGRFileInfo *VAR_2 )\n{\n  OGRFeatureH VAR_3 = NULL;\n\n  if (VAR_2 == NULL || VAR_2->hLayer == NULL) {\n    msSetError(VAR_4, \"Assertion failed: OGR layer not opened!!!\",\n               \"msOGRFileNextShape()\");\n    return(VAR_5);\n  }\n\n  /* COMMENT_0 */\n                                                                   \n                                                          \n                                                                          \n  msFreeShape(VAR_1);\n  VAR_1->type = VAR_6;\n\n  VAR_7;\n  while (VAR_1->type == VAR_6) {\n    if( VAR_3 )\n      OGR_F_Destroy( VAR_3 );\n\n    if( (VAR_3 = OGR_L_GetNextFeature( VAR_2->hLayer )) == NULL ) {\n      VAR_2->last_record_index_read = -1;\n      if( CPLGetLastErrorType() == VAR_8 ) {\n        msSetError(VAR_9, \"OGR GetNextFeature() error'd. Check logs.\",\n                   \"msOGRFileNextShape()\");\n        msDebug(\"msOGRFileNextShape(): %s\\n\",\n                CPLGetLastErrorMsg() );\n        VAR_10;\n        return VAR_5;\n      } else {\n        VAR_10;\n        if (VAR_0->debug >= VAR_11)\n          msDebug(\"msOGRFileNextShape: Returning MS_DONE (no more shapes)\\n\" );\n        return VAR_12;  /* COMMENT_4 */\n      }\n    }\n\n    VAR_2->last_record_index_read++;\n\n    if(VAR_0->numitems > 0) {\n      VAR_1->values = msOGRGetValues(VAR_0, VAR_3);\n      VAR_1->numvalues = VAR_0->numitems;\n      if(!VAR_1->values) {\n        OGR_F_Destroy( VAR_3 );\n        VAR_10;\n        return(VAR_5);\n      }\n    }\n\n    /* COMMENT_5 */\n    /* COMMENT_6 */\n    if (ogrConvertGeometry(ogrGetLinearGeometry( VAR_3 ), VAR_1,\n                           VAR_0->type) == VAR_13) {\n      if (VAR_1->type != VAR_6)\n        break; /* COMMENT_7 */\n\n      if (VAR_0->debug >= VAR_14)\n        msDebug(\"msOGRFileNextShape: Rejecting feature (shapeid = \" VAR_15 \", tileid=%d) of incompatible type for this layer (feature wkbType %d, layer type %d)\\n\",\n                (GIntBig)OGR_F_GetFID( VAR_3 ), VAR_2->nTileId,\n                OGR_F_GetGeometryRef( VAR_3 )==NULL ? wkbFlatten(VAR_16):wkbFlatten( OGR_G_GetGeometryType( OGR_F_GetGeometryRef( VAR_3 ) ) ),\n                VAR_0->type);\n\n    } else {\n      msFreeShape(VAR_1);\n      OGR_F_Destroy( VAR_3 );\n      VAR_10;\n      return VAR_5; /* COMMENT_8 */\n    }\n\n    /* COMMENT_9 */\n    msFreeShape(VAR_1);\n    VAR_1->type = VAR_6;\n  }\n\n  VAR_1->index =  (int)OGR_F_GetFID( VAR_3 ); /* COMMENT_10 */\n  VAR_1->resultindex = VAR_2->last_record_index_read;\n  VAR_1->tileindex = VAR_2->nTileId;\n\n  if (VAR_0->debug >= VAR_14)\n    msDebug(\"msOGRFileNextShape: Returning shape=%ld, tile=%d\\n\",\n            VAR_1->index, VAR_1->tileindex );\n\n  /* COMMENT_11 */\n  if (VAR_2->hLastFeature)\n    OGR_F_Destroy( VAR_2->hLastFeature );\n  VAR_2->hLastFeature = VAR_3;\n\n  VAR_10;\n\n  return VAR_13;\n}",
  "func_graph_path": "MapServer/3d52307cf0033e3275975b668b7138ba1343f28d/mapogr.cpp/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -25,8 +25,10 @@\n     if( (hFeature = OGR_L_GetNextFeature( psInfo->hLayer )) == NULL ) {\n       psInfo->last_record_index_read = -1;\n       if( CPLGetLastErrorType() == CE_Failure ) {\n-        msSetError(MS_OGRERR, \"%s\", \"msOGRFileNextShape()\",\n-                   CPLGetLastErrorMsg() );\n+        msSetError(MS_OGRERR, \"OGR GetNextFeature() error'd. Check logs.\",\n+                   \"msOGRFileNextShape()\");\n+        msDebug(\"msOGRFileNextShape(): %s\\n\",\n+                CPLGetLastErrorMsg() );\n         RELEASE_OGR_LOCK;\n         return MS_FAILURE;\n       } else {",
  "diff_line_info": {
    "deleted_lines": [
      "        msSetError(MS_OGRERR, \"%s\", \"msOGRFileNextShape()\",",
      "                   CPLGetLastErrorMsg() );"
    ],
    "added_lines": [
      "        msSetError(MS_OGRERR, \"OGR GetNextFeature() error'd. Check logs.\",",
      "                   \"msOGRFileNextShape()\");",
      "        msDebug(\"msOGRFileNextShape(): %s\\n\",",
      "                CPLGetLastErrorMsg() );"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/MapServer/MapServer/pull/5356",
  "description": {
    "pr_info": {
      "title": "OGR error messages too verbose",
      "number": 5356
    },
    "comment": [
      "Error messages created by the OGR driver may leak too much information. See http://gis.stackexchange.com/questions/219426/mapserver-hide-ogr-exception\r\nSame issue as #4928 but for OGR"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}