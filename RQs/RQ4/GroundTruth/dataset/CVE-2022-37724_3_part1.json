{
  "cve_id": "CVE-2022-37724",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
  "cvss_is_v3": true,
  "repo_name": "wocommunity/wonder",
  "commit_msg": "Updated the adaptors to have a config.h preproc definition which, if enabled, compiles the adaptors without the ability to check for invalid URL characters.",
  "commit_hash": "23c9775fb6afb7be1472944e02396f29771dc8e2",
  "git_url": "https://github.com/wocommunity/wonder/commit/23c9775fb6afb7be1472944e02396f29771dc8e2",
  "file_path": "Utilities/Adaptors/Apache/mod_WebObjects.c",
  "func_name": "WebObjects_translate",
  "func_before": "int WebObjects_translate(request_rec *r) {\n   WebObjects_config *wc;\n   WOURLComponents url;\n   WOURLError urlerr;\n\n   wc = (WebObjects_config *)ap_get_module_config(r->server->module_config, &WebObjects_module);\n\n   /* WOLog(WO_DBG,\"<WebObjects Apache Module> new translate: %s\",r->uri); */\n   if (strncmp(wc->WebObjects_alias, r->uri, strlen(wc->WebObjects_alias)) == 0) {\n      url = WOURLComponents_Initializer;\n      urlerr = WOParseApplicationName(&url, r->uri);\n      if (urlerr != WOURLOK && !((urlerr == WOURLInvalidApplicationName) && ac_authorizeAppListing(&url))) {\n         /* WOLog(WO_DBG,\"<WebObjects Apache Module> translate - DECLINED: %s\",r->uri); */\n         return DECLINED;\n      }\n      if (!adaptorEnabled)\n      {\n         WOLog(WO_ERR, \"WebObjects_translate(): declining request due to initialization failure\");\n         return DECLINED;\n      }\n      /*\n       *\twe'll take it - mark our handler...\n       */\n      r->handler = (char *)ap_pstrdup(r->pool, WEBOBJECTS);\n      return OK;\n   }\n   /* WOLog(WO_DBG,\"<WebObjects Apache Module> translate - DECLINED: %s\",r->uri); */\n   return DECLINED;\n}",
  "abstract_func_before": "int WebObjects_translate(request_rec *VAR_0) {\n   WebObjects_config *VAR_1;\n   WOURLComponents VAR_2;\n   WOURLError VAR_3;\n\n   VAR_1 = (WebObjects_config *)ap_get_module_config(VAR_0->server->module_config, &VAR_4);\n\n   /* COMMENT_0 */\n   if (strncmp(VAR_1->WebObjects_alias, VAR_0->uri, strlen(VAR_1->WebObjects_alias)) == 0) {\n      VAR_2 = VAR_5;\n      VAR_3 = WOParseApplicationName(&VAR_2, VAR_0->uri);\n      if (VAR_3 != VAR_6 && !((VAR_3 == VAR_7) && ac_authorizeAppListing(&VAR_2))) {\n         /* COMMENT_1 */\n         return VAR_8;\n      }\n      if (!VAR_9)\n      {\n         WOLog(VAR_10, \"WebObjects_translate(): declining request due to initialization failure\");\n         return VAR_8;\n      }\n      /* COMMENT_2 */\n                                            \n         \n      VAR_0->handler = (char *)ap_pstrdup(VAR_0->pool, VAR_11);\n      return VAR_12;\n   }\n   /* COMMENT_1 */\n   return VAR_8;\n}",
  "func_graph_path_before": "wocommunity/wonder/23c9775fb6afb7be1472944e02396f29771dc8e2/mod_WebObjects.c/vul/before/0.json",
  "func": "int WebObjects_translate(request_rec *r) {\n   WebObjects_config *wc;\n   WOURLComponents url;\n   WOURLError urlerr;\n   WOURLError charcheck;\n\n   wc = (WebObjects_config *)ap_get_module_config(r->server->module_config, &WebObjects_module);\n\n   /* WOLog(WO_DBG,\"<WebObjects Apache Module> new translate: %s\",r->uri); */\n   if (strncmp(wc->WebObjects_alias, r->uri, strlen(wc->WebObjects_alias)) == 0) {\n      url = WOURLComponents_Initializer;\n\n#ifndef __PRESERVE_UNSAFE_URLS\n      // Make sure the URL does not contain forbidden characters (0x0D or 0x0A).\n      charcheck = WOValidateInitialURL( r->uri );\n      if ( charcheck != WOURLOK ) {\n         WOLog(WO_ERR, \"WebObjects_translate(): declining request due to forbidden URL characters\");\n         return DECLINED;\n      }\n#endif\n\n\n      urlerr = WOParseApplicationName(&url, r->uri);\n      if (urlerr != WOURLOK && !((urlerr == WOURLInvalidApplicationName) && ac_authorizeAppListing(&url))) {\n         /* WOLog(WO_DBG,\"<WebObjects Apache Module> translate - DECLINED: %s\",r->uri); */\n         return DECLINED;\n      }\n      if (!adaptorEnabled)\n      {\n         WOLog(WO_ERR, \"WebObjects_translate(): declining request due to initialization failure\");\n         return DECLINED;\n      }\n      /*\n       *\twe'll take it - mark our handler...\n       */\n      r->handler = (char *)ap_pstrdup(r->pool, WEBOBJECTS);\n      return OK;\n   }\n   /* WOLog(WO_DBG,\"<WebObjects Apache Module> translate - DECLINED: %s\",r->uri); */\n   return DECLINED;\n}",
  "abstract_func": "int WebObjects_translate(request_rec *VAR_0) {\n   WebObjects_config *VAR_1;\n   WOURLComponents VAR_2;\n   WOURLError VAR_3;\n   WOURLError VAR_4;\n\n   VAR_1 = (WebObjects_config *)ap_get_module_config(VAR_0->server->module_config, &VAR_5);\n\n   /* COMMENT_0 */\n   if (strncmp(VAR_1->WebObjects_alias, VAR_0->uri, strlen(VAR_1->WebObjects_alias)) == 0) {\n      VAR_2 = VAR_6;\n\n#ifndef VAR_7\n      /* COMMENT_1 */\n      VAR_4 = WOValidateInitialURL( VAR_0->uri );\n      if ( VAR_4 != VAR_8 ) {\n         WOLog(VAR_9, \"WebObjects_translate(): declining request due to forbidden URL characters\");\n         return VAR_10;\n      }\n#endif\n\n\n      VAR_3 = WOParseApplicationName(&VAR_2, VAR_0->uri);\n      if (VAR_3 != VAR_8 && !((VAR_3 == VAR_11) && ac_authorizeAppListing(&VAR_2))) {\n         /* COMMENT_2 */\n         return VAR_10;\n      }\n      if (!VAR_12)\n      {\n         WOLog(VAR_9, \"WebObjects_translate(): declining request due to initialization failure\");\n         return VAR_10;\n      }\n      /* COMMENT_3 */\n                                            \n         \n      VAR_0->handler = (char *)ap_pstrdup(VAR_0->pool, VAR_13);\n      return VAR_14;\n   }\n   /* COMMENT_2 */\n   return VAR_10;\n}",
  "func_graph_path": "wocommunity/wonder/23c9775fb6afb7be1472944e02396f29771dc8e2/mod_WebObjects.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,12 +2,24 @@\n    WebObjects_config *wc;\n    WOURLComponents url;\n    WOURLError urlerr;\n+   WOURLError charcheck;\n \n    wc = (WebObjects_config *)ap_get_module_config(r->server->module_config, &WebObjects_module);\n \n    /* WOLog(WO_DBG,\"<WebObjects Apache Module> new translate: %s\",r->uri); */\n    if (strncmp(wc->WebObjects_alias, r->uri, strlen(wc->WebObjects_alias)) == 0) {\n       url = WOURLComponents_Initializer;\n+\n+#ifndef __PRESERVE_UNSAFE_URLS\n+      // Make sure the URL does not contain forbidden characters (0x0D or 0x0A).\n+      charcheck = WOValidateInitialURL( r->uri );\n+      if ( charcheck != WOURLOK ) {\n+         WOLog(WO_ERR, \"WebObjects_translate(): declining request due to forbidden URL characters\");\n+         return DECLINED;\n+      }\n+#endif\n+\n+\n       urlerr = WOParseApplicationName(&url, r->uri);\n       if (urlerr != WOURLOK && !((urlerr == WOURLInvalidApplicationName) && ac_authorizeAppListing(&url))) {\n          /* WOLog(WO_DBG,\"<WebObjects Apache Module> translate - DECLINED: %s\",r->uri); */",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "   WOURLError charcheck;",
      "",
      "#ifndef __PRESERVE_UNSAFE_URLS",
      "      // Make sure the URL does not contain forbidden characters (0x0D or 0x0A).",
      "      charcheck = WOValidateInitialURL( r->uri );",
      "      if ( charcheck != WOURLOK ) {",
      "         WOLog(WO_ERR, \"WebObjects_translate(): declining request due to forbidden URL characters\");",
      "         return DECLINED;",
      "      }",
      "#endif",
      "",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/wocommunity/wonder/pull/992",
  "description": {
    "pr_info": {
      "title": "WO Adaptor URL Sanitization Fixes",
      "number": 992
    },
    "comment": [
      "Added fix-ups to the `Utilities/Adaptors` subfolders specifically to address a vulnerability in parsing, whereby an adversary can directly inject their own headers and content into the web requests going to the application (WO) servers behind the adaptor.\r\n\r\nThe new code returns a `404` on any encounter of a `0x0D` (carriage-return) or a `0x0A` (line-feed) character in the adaptor `translate` functions, and the defined forbidden character set is written in such a way as to be expandable later as necessary. This behavior of returning a `404` error mimics Apache's mitigation of the use of `%2f` in request URLs.\r\n\r\n**IMPORTANTLY**: This URL cleanliness will not affect content within query strings usually, since those characters are not typically expanded by webserver software before reaching the adaptor interface.\r\n\r\nTested and operating in an active production scenario, filtering arbitrary HTTP header injection or URL-based reflection but maintaining normal operation as expected. The most recent commit addresses enabling the protection by default but provides the option to regress to the previous behavior in situations and deployments where it may be considered safe or necessary.\r\n\r\nFor more information about the problem being fixed, I will post a separate link to my blog for interested users.",
      "As stated, [here is the link to my article](https://xmit.xyz/security/webobjects-url-tomfoolery/) about the WebObjects adaptor vulnerability present in Project WONDER. If the link is inappropriate, please feel free to remove it or request such.\r\n\r\nThank you.",
      "Hi Zachary, somehow we failed to give this the proper attention when you first posted it. Reviewing your detailed article now.",
      "Reviewed the patch, and I approve merging it. I want to wait for people in other timezones to have a chance to chime in, though. Until then, we confirmed this to be mitigated by the following global apache config:\r\n\r\n```\r\nRewriteEngine On\r\nRewriteOptions InheritDown\r\nRewriteRule ^.*\\x0d\\x0a - [F,L,NC]\r\n```"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "The code changes address a security issue by preventing malicious URL injection, making it a security fix with high confidence.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}