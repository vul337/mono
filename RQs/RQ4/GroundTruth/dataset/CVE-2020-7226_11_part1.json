{
  "cve_id": "CVE-2020-7226",
  "cwe_ids": [
    "CWE-770"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "vt-middleware/cryptacular",
  "commit_msg": "Define new ciphertext header format.\n\nNew format does not allocate any memory until HMAC check passes, which\nguards against untrusted input. All encryption components have been\nupdated to use the new header, while preserving backward compatibility\nto decrypt messages encrypted with the old format. The decoding process\nfor the old header has been hardened to impose reasonable limits on header\nfields: nonce sizes up to 255 bytes, key names up to 500 bytes.\n\nFixes #52.",
  "commit_hash": "8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
  "git_url": "https://github.com/vt-middleware/cryptacular/commit/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
  "file_path": "src/main/java/org/cryptacular/bean/AbstractCipherBean.java",
  "func_name": "decrypt",
  "func_before": "@Override\n  public byte[] decrypt(final byte[] input) throws CryptoException, EncodingException\n  {\n    final CiphertextHeader header = CiphertextHeader.decode(input);\n    if (header.getKeyName() == null) {\n      throw new CryptoException(\"Ciphertext header does not contain required key\");\n    }\n    return process(header, false, input);\n  }",
  "abstract_func_before": "@Override\n  public byte[] decrypt(final byte[] VAR_0) throws CryptoException, EncodingException\n  {\n    final CiphertextHeader VAR_1 = VAR_2.decode(VAR_0);\n    if (VAR_1.getKeyName() == null) {\n      throw new CryptoException(\"Ciphertext header does not contain required key\");\n    }\n    return process(VAR_1, false, VAR_0);\n  }",
  "func_graph_path_before": "vt-middleware/cryptacular/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25/AbstractCipherBean.java/vul/before/2.json",
  "func": "@Override\n  public byte[] decrypt(final byte[] input) throws CryptoException, EncodingException\n  {\n    return process(CipherUtil.decodeHeader(input, this::lookupKey), false, input);\n  }",
  "abstract_func": "@Override\n  public byte[] decrypt(final byte[] VAR_0) throws CryptoException, EncodingException\n  {\n    return process(VAR_1.decodeHeader(VAR_0, this::VAR_2), false, VAR_0);\n  }",
  "func_graph_path": "vt-middleware/cryptacular/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25/AbstractCipherBean.java/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,9 +1,5 @@\n @Override\n   public byte[] decrypt(final byte[] input) throws CryptoException, EncodingException\n   {\n-    final CiphertextHeader header = CiphertextHeader.decode(input);\n-    if (header.getKeyName() == null) {\n-      throw new CryptoException(\"Ciphertext header does not contain required key\");\n-    }\n-    return process(header, false, input);\n+    return process(CipherUtil.decodeHeader(input, this::lookupKey), false, input);\n   }",
  "diff_line_info": {
    "deleted_lines": [
      "    final CiphertextHeader header = CiphertextHeader.decode(input);",
      "    if (header.getKeyName() == null) {",
      "      throw new CryptoException(\"Ciphertext header does not contain required key\");",
      "    }",
      "    return process(header, false, input);"
    ],
    "added_lines": [
      "    return process(CipherUtil.decodeHeader(input, this::lookupKey), false, input);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/vt-middleware/cryptacular/pull/53",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/vt-middleware/cryptacular/pull/53: 403 Client Error: Forbidden for url: https://api.github.com/repos/vt-middleware/cryptacular/pulls/53",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}