{
  "cve_id": "CVE-2019-5892",
  "cwe_ids": [
    "CWE-436"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "FRRouting/frr",
  "commit_msg": "bgpd: don't use BGP_ATTR_VNC(255) unless ENABLE_BGP_VNC_ATTR is defined\n\nSigned-off-by: Lou Berger <lberger@labn.net>",
  "commit_hash": "943d595a018e69b550db08cccba1d0778a86705a",
  "git_url": "https://github.com/FRRouting/frr/commit/943d595a018e69b550db08cccba1d0778a86705a",
  "file_path": "bgpd/bgp_attr.c",
  "func_name": "bgp_attr_parse",
  "func_before": "bgp_attr_parse_ret_t bgp_attr_parse(struct peer *peer, struct attr *attr,\n\t\t\t\t    bgp_size_t size, struct bgp_nlri *mp_update,\n\t\t\t\t    struct bgp_nlri *mp_withdraw)\n{\n\tbgp_attr_parse_ret_t ret;\n\tuint8_t flag = 0;\n\tuint8_t type = 0;\n\tbgp_size_t length;\n\tuint8_t *startp, *endp;\n\tuint8_t *attr_endp;\n\tuint8_t seen[BGP_ATTR_BITMAP_SIZE];\n\t/* we need the as4_path only until we have synthesized the as_path with\n\t * it */\n\t/* same goes for as4_aggregator */\n\tstruct aspath *as4_path = NULL;\n\tas_t as4_aggregator = 0;\n\tstruct in_addr as4_aggregator_addr = {.s_addr = 0};\n\n\t/* Initialize bitmap. */\n\tmemset(seen, 0, BGP_ATTR_BITMAP_SIZE);\n\n\t/* End pointer of BGP attribute. */\n\tendp = BGP_INPUT_PNT(peer) + size;\n\n\t/* Get attributes to the end of attribute length. */\n\twhile (BGP_INPUT_PNT(peer) < endp) {\n\t\t/* Check remaining length check.*/\n\t\tif (endp - BGP_INPUT_PNT(peer) < BGP_ATTR_MIN_LEN) {\n\t\t\t/* XXX warning: long int format, int arg (arg 5) */\n\t\t\tflog_warn(\n\t\t\t\tEC_BGP_ATTRIBUTE_TOO_SMALL,\n\t\t\t\t\"%s: error BGP attribute length %lu is smaller than min len\",\n\t\t\t\tpeer->host,\n\t\t\t\t(unsigned long)(endp\n\t\t\t\t\t\t- stream_pnt(BGP_INPUT(peer))));\n\n\t\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR);\n\t\t\treturn BGP_ATTR_PARSE_ERROR;\n\t\t}\n\n\t\t/* Fetch attribute flag and type. */\n\t\tstartp = BGP_INPUT_PNT(peer);\n\t\t/* \"The lower-order four bits of the Attribute Flags octet are\n\t\t   unused.  They MUST be zero when sent and MUST be ignored when\n\t\t   received.\" */\n\t\tflag = 0xF0 & stream_getc(BGP_INPUT(peer));\n\t\ttype = stream_getc(BGP_INPUT(peer));\n\n\t\t/* Check whether Extended-Length applies and is in bounds */\n\t\tif (CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN)\n\t\t    && ((endp - startp) < (BGP_ATTR_MIN_LEN + 1))) {\n\t\t\tflog_warn(\n\t\t\t\tEC_BGP_EXT_ATTRIBUTE_TOO_SMALL,\n\t\t\t\t\"%s: Extended length set, but just %lu bytes of attr header\",\n\t\t\t\tpeer->host,\n\t\t\t\t(unsigned long)(endp\n\t\t\t\t\t\t- stream_pnt(BGP_INPUT(peer))));\n\n\t\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR);\n\t\t\treturn BGP_ATTR_PARSE_ERROR;\n\t\t}\n\n\t\t/* Check extended attribue length bit. */\n\t\tif (CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN))\n\t\t\tlength = stream_getw(BGP_INPUT(peer));\n\t\telse\n\t\t\tlength = stream_getc(BGP_INPUT(peer));\n\n\t\t/* If any attribute appears more than once in the UPDATE\n\t\t   message, then the Error Subcode is set to Malformed Attribute\n\t\t   List. */\n\n\t\tif (CHECK_BITMAP(seen, type)) {\n\t\t\tflog_warn(\n\t\t\t\tEC_BGP_ATTRIBUTE_REPEATED,\n\t\t\t\t\"%s: error BGP attribute type %d appears twice in a message\",\n\t\t\t\tpeer->host, type);\n\n\t\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR);\n\t\t\treturn BGP_ATTR_PARSE_ERROR;\n\t\t}\n\n\t\t/* Set type to bitmap to check duplicate attribute.  `type' is\n\t\t   unsigned char so it never overflow bitmap range. */\n\n\t\tSET_BITMAP(seen, type);\n\n\t\t/* Overflow check. */\n\t\tattr_endp = BGP_INPUT_PNT(peer) + length;\n\n\t\tif (attr_endp > endp) {\n\t\t\tflog_warn(\n\t\t\t\tEC_BGP_ATTRIBUTE_TOO_LARGE,\n\t\t\t\t\"%s: BGP type %d length %d is too large, attribute total length is %d.  attr_endp is %p.  endp is %p\",\n\t\t\t\tpeer->host, type, length, size, attr_endp,\n\t\t\t\tendp);\n\t\t\t/*\n\t\t\t * RFC 4271 6.3\n\t\t\t * If any recognized attribute has an Attribute\n\t\t\t * Length that conflicts with the expected length\n\t\t\t * (based on the attribute type code), then the\n\t\t\t * Error Subcode MUST be set to Attribute Length\n\t\t\t * Error.  The Data field MUST contain the erroneous\n\t\t\t * attribute (type, length, and value).\n\t\t\t * ----------\n\t\t\t * We do not currently have a good way to determine the\n\t\t\t * length of the attribute independent of the length\n\t\t\t * received in the message. Instead we send the\n\t\t\t * minimum between the amount of data we have and the\n\t\t\t * amount specified by the attribute length field.\n\t\t\t *\n\t\t\t * Instead of directly passing in the packet buffer and\n\t\t\t * offset we use the stream_get* functions to read into\n\t\t\t * a stack buffer, since they perform bounds checking\n\t\t\t * and we are working with untrusted data.\n\t\t\t */\n\t\t\tunsigned char ndata[BGP_MAX_PACKET_SIZE];\n\t\t\tmemset(ndata, 0x00, sizeof(ndata));\n\t\t\tsize_t lfl =\n\t\t\t\tCHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN) ? 2 : 1;\n\t\t\t/* Rewind to end of flag field */\n\t\t\tstream_forward_getp(BGP_INPUT(peer), -(1 + lfl));\n\t\t\t/* Type */\n\t\t\tstream_get(&ndata[0], BGP_INPUT(peer), 1);\n\t\t\t/* Length */\n\t\t\tstream_get(&ndata[1], BGP_INPUT(peer), lfl);\n\t\t\t/* Value */\n\t\t\tsize_t atl = attr_endp - startp;\n\t\t\tsize_t ndl = MIN(atl, STREAM_READABLE(BGP_INPUT(peer)));\n\t\t\tstream_get(&ndata[lfl + 1], BGP_INPUT(peer), ndl);\n\n\t\t\tbgp_notify_send_with_data(\n\t\t\t\tpeer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR, ndata,\n\t\t\t\tndl + lfl + 1);\n\n\t\t\treturn BGP_ATTR_PARSE_ERROR;\n\t\t}\n\n\t\tstruct bgp_attr_parser_args attr_args = {\n\t\t\t.peer = peer,\n\t\t\t.length = length,\n\t\t\t.attr = attr,\n\t\t\t.type = type,\n\t\t\t.flags = flag,\n\t\t\t.startp = startp,\n\t\t\t.total = attr_endp - startp,\n\t\t};\n\n\n\t\t/* If any recognized attribute has Attribute Flags that conflict\n\t\t   with the Attribute Type Code, then the Error Subcode is set\n\t\t   to\n\t\t   Attribute Flags Error.  The Data field contains the erroneous\n\t\t   attribute (type, length and value). */\n\t\tif (bgp_attr_flag_invalid(&attr_args)) {\n\t\t\tret = bgp_attr_malformed(\n\t\t\t\t&attr_args, BGP_NOTIFY_UPDATE_ATTR_FLAG_ERR,\n\t\t\t\tattr_args.total);\n\t\t\tif (ret == BGP_ATTR_PARSE_PROCEED)\n\t\t\t\tcontinue;\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* OK check attribute and store it's value. */\n\t\tswitch (type) {\n\t\tcase BGP_ATTR_ORIGIN:\n\t\t\tret = bgp_attr_origin(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_AS_PATH:\n\t\t\tret = bgp_attr_aspath(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_AS4_PATH:\n\t\t\tret = bgp_attr_as4_path(&attr_args, &as4_path);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_NEXT_HOP:\n\t\t\tret = bgp_attr_nexthop(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_MULTI_EXIT_DISC:\n\t\t\tret = bgp_attr_med(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_LOCAL_PREF:\n\t\t\tret = bgp_attr_local_pref(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_ATOMIC_AGGREGATE:\n\t\t\tret = bgp_attr_atomic(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_AGGREGATOR:\n\t\t\tret = bgp_attr_aggregator(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_AS4_AGGREGATOR:\n\t\t\tret = bgp_attr_as4_aggregator(&attr_args,\n\t\t\t\t\t\t      &as4_aggregator,\n\t\t\t\t\t\t      &as4_aggregator_addr);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_COMMUNITIES:\n\t\t\tret = bgp_attr_community(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_LARGE_COMMUNITIES:\n\t\t\tret = bgp_attr_large_community(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_ORIGINATOR_ID:\n\t\t\tret = bgp_attr_originator_id(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_CLUSTER_LIST:\n\t\t\tret = bgp_attr_cluster_list(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_MP_REACH_NLRI:\n\t\t\tret = bgp_mp_reach_parse(&attr_args, mp_update);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_MP_UNREACH_NLRI:\n\t\t\tret = bgp_mp_unreach_parse(&attr_args, mp_withdraw);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_EXT_COMMUNITIES:\n\t\t\tret = bgp_attr_ext_communities(&attr_args);\n\t\t\tbreak;\n#if ENABLE_BGP_VNC\n\t\tcase BGP_ATTR_VNC:\n#endif\n\t\tcase BGP_ATTR_ENCAP:\n\t\t\tret = bgp_attr_encap(type, peer, length, attr, flag,\n\t\t\t\t\t     startp);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_PREFIX_SID:\n\t\t\tret = bgp_attr_prefix_sid(length,\n\t\t\t\t\t\t  &attr_args, mp_update);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_PMSI_TUNNEL:\n\t\t\tret = bgp_attr_pmsi_tunnel(&attr_args);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tret = bgp_attr_unknown(&attr_args);\n\t\t\tbreak;\n\t\t}\n\n\t\tif (ret == BGP_ATTR_PARSE_ERROR_NOTIFYPLS) {\n\t\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR);\n\t\t\tret = BGP_ATTR_PARSE_ERROR;\n\t\t}\n\n\t\tif (ret == BGP_ATTR_PARSE_EOR) {\n\t\t\tif (as4_path)\n\t\t\t\taspath_unintern(&as4_path);\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* If hard error occurred immediately return to the caller. */\n\t\tif (ret == BGP_ATTR_PARSE_ERROR) {\n\t\t\tflog_warn(EC_BGP_ATTRIBUTE_PARSE_ERROR,\n\t\t\t\t  \"%s: Attribute %s, parse error\", peer->host,\n\t\t\t\t  lookup_msg(attr_str, type, NULL));\n\t\t\tif (as4_path)\n\t\t\t\taspath_unintern(&as4_path);\n\t\t\treturn ret;\n\t\t}\n\t\tif (ret == BGP_ATTR_PARSE_WITHDRAW) {\n\n\t\t\tflog_warn(\n\t\t\t\tEC_BGP_ATTRIBUTE_PARSE_WITHDRAW,\n\t\t\t\t\"%s: Attribute %s, parse error - treating as withdrawal\",\n\t\t\t\tpeer->host, lookup_msg(attr_str, type, NULL));\n\t\t\tif (as4_path)\n\t\t\t\taspath_unintern(&as4_path);\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* Check the fetched length. */\n\t\tif (BGP_INPUT_PNT(peer) != attr_endp) {\n\t\t\tflog_warn(EC_BGP_ATTRIBUTE_FETCH_ERROR,\n\t\t\t\t  \"%s: BGP attribute %s, fetch error\",\n\t\t\t\t  peer->host, lookup_msg(attr_str, type, NULL));\n\t\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR);\n\t\t\tif (as4_path)\n\t\t\t\taspath_unintern(&as4_path);\n\t\t\treturn BGP_ATTR_PARSE_ERROR;\n\t\t}\n\t}\n\n\t/* Check final read pointer is same as end pointer. */\n\tif (BGP_INPUT_PNT(peer) != endp) {\n\t\tflog_warn(EC_BGP_ATTRIBUTES_MISMATCH,\n\t\t\t  \"%s: BGP attribute %s, length mismatch\", peer->host,\n\t\t\t  lookup_msg(attr_str, type, NULL));\n\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR);\n\t\tif (as4_path)\n\t\t\taspath_unintern(&as4_path);\n\t\treturn BGP_ATTR_PARSE_ERROR;\n\t}\n\n\t/* Check all mandatory well-known attributes are present */\n\tif ((ret = bgp_attr_check(peer, attr)) < 0) {\n\t\tif (as4_path)\n\t\t\taspath_unintern(&as4_path);\n\t\treturn ret;\n\t}\n\n\t/*\n\t * At this place we can see whether we got AS4_PATH and/or\n\t * AS4_AGGREGATOR from a 16Bit peer and act accordingly.\n\t * We can not do this before we've read all attributes because\n\t * the as4 handling does not say whether AS4_PATH has to be sent\n\t * after AS_PATH or not - and when AS4_AGGREGATOR will be send\n\t * in relationship to AGGREGATOR.\n\t * So, to be defensive, we are not relying on any order and read\n\t * all attributes first, including these 32bit ones, and now,\n\t * afterwards, we look what and if something is to be done for as4.\n\t *\n\t * It is possible to not have AS_PATH, e.g. GR EoR and sole\n\t * MP_UNREACH_NLRI.\n\t */\n\t/* actually... this doesn't ever return failure currently, but\n\t * better safe than sorry */\n\tif (CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_AS_PATH))\n\t    && bgp_attr_munge_as4_attrs(peer, attr, as4_path, as4_aggregator,\n\t\t\t\t\t&as4_aggregator_addr)) {\n\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR);\n\t\tif (as4_path)\n\t\t\taspath_unintern(&as4_path);\n\t\treturn BGP_ATTR_PARSE_ERROR;\n\t}\n\n\t/* At this stage, we have done all fiddling with as4, and the\n\t * resulting info is in attr->aggregator resp. attr->aspath\n\t * so we can chuck as4_aggregator and as4_path alltogether in\n\t * order to save memory\n\t */\n\tif (as4_path) {\n\t\taspath_unintern(&as4_path); /* unintern - it is in the hash */\n\t\t/* The flag that we got this is still there, but that does not\n\t\t * do any trouble\n\t\t */\n\t}\n\t/*\n\t * The \"rest\" of the code does nothing with as4_aggregator.\n\t * there is no memory attached specifically which is not part\n\t * of the attr.\n\t * so ignoring just means do nothing.\n\t */\n\t/*\n\t * Finally do the checks on the aspath we did not do yet\n\t * because we waited for a potentially synthesized aspath.\n\t */\n\tif (attr->flag & (ATTR_FLAG_BIT(BGP_ATTR_AS_PATH))) {\n\t\tret = bgp_attr_aspath_check(peer, attr);\n\t\tif (ret != BGP_ATTR_PARSE_PROCEED)\n\t\t\treturn ret;\n\t}\n\t/* Finally intern unknown attribute. */\n\tif (attr->transit)\n\t\tattr->transit = transit_intern(attr->transit);\n\tif (attr->encap_subtlvs)\n\t\tattr->encap_subtlvs =\n\t\t\tencap_intern(attr->encap_subtlvs, ENCAP_SUBTLV_TYPE);\n#if ENABLE_BGP_VNC\n\tif (attr->vnc_subtlvs)\n\t\tattr->vnc_subtlvs =\n\t\t\tencap_intern(attr->vnc_subtlvs, VNC_SUBTLV_TYPE);\n#endif\n\n\treturn BGP_ATTR_PARSE_PROCEED;\n}",
  "abstract_func_before": "bgp_attr_parse_ret_t bgp_attr_parse(struct peer *peer, struct attr *attr,\n\t\t\t\t    bgp_size_t VAR_0, struct bgp_nlri *VAR_1,\n\t\t\t\t    struct bgp_nlri *VAR_2)\n{\n\tbgp_attr_parse_ret_t VAR_3;\n\tuint8_t VAR_4 = 0;\n\tuint8_t VAR_5 = 0;\n\tbgp_size_t VAR_6;\n\tuint8_t *VAR_7, *VAR_8;\n\tuint8_t *VAR_9;\n\tuint8_t VAR_10[VAR_11];\n\t/* COMMENT_0 */\n         \n\t/* COMMENT_2 */\n\tstruct aspath *VAR_12 = NULL;\n\tas_t VAR_13 = 0;\n\tstruct in_addr VAR_14 = {.s_addr = 0};\n\n\t/* COMMENT_3 */\n\tmemset(VAR_10, 0, VAR_11);\n\n\t/* COMMENT_4 */\n\tVAR_8 = BGP_INPUT_PNT(peer) + VAR_0;\n\n\t/* COMMENT_5 */\n\twhile (BGP_INPUT_PNT(peer) < VAR_8) {\n\t\t/* COMMENT_6 */\n\t\tif (VAR_8 - BGP_INPUT_PNT(peer) < VAR_15) {\n\t\t\t/* COMMENT_7 */\n\t\t\tflog_warn(\n\t\t\t\tVAR_16,\n\t\t\t\t\"%s: error BGP attribute length %lu is smaller than min len\",\n\t\t\t\tpeer->host,\n\t\t\t\t(unsigned long)(VAR_8\n\t\t\t\t\t\t- stream_pnt(BGP_INPUT(peer))));\n\n\t\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\t\tVAR_18);\n\t\t\treturn VAR_19;\n\t\t}\n\n\t\t/* COMMENT_8 */\n\t\tVAR_7 = BGP_INPUT_PNT(peer);\n\t\t/* COMMENT_9 */\n                                                                  \n                  \n\t\tVAR_4 = 0xF0 & stream_getc(BGP_INPUT(peer));\n\t\tVAR_5 = stream_getc(BGP_INPUT(peer));\n\n\t\t/* COMMENT_12 */\n\t\tif (CHECK_FLAG(VAR_4, VAR_20)\n\t\t    && ((VAR_8 - VAR_7) < (VAR_15 + 1))) {\n\t\t\tflog_warn(\n\t\t\t\tVAR_21,\n\t\t\t\t\"%s: Extended length set, but just %lu bytes of attr header\",\n\t\t\t\tpeer->host,\n\t\t\t\t(unsigned long)(VAR_8\n\t\t\t\t\t\t- stream_pnt(BGP_INPUT(peer))));\n\n\t\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\t\tVAR_18);\n\t\t\treturn VAR_19;\n\t\t}\n\n\t\t/* COMMENT_13 */\n\t\tif (CHECK_FLAG(VAR_4, VAR_20))\n\t\t\tVAR_6 = stream_getw(BGP_INPUT(peer));\n\t\telse\n\t\t\tVAR_6 = stream_getc(BGP_INPUT(peer));\n\n\t\t/* COMMENT_14 */\n                                                                  \n             \n\n\t\tif (CHECK_BITMAP(VAR_10, VAR_5)) {\n\t\t\tflog_warn(\n\t\t\t\tVAR_22,\n\t\t\t\t\"%s: error BGP attribute type %d appears twice in a message\",\n\t\t\t\tpeer->host, VAR_5);\n\n\t\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\t\tVAR_23);\n\t\t\treturn VAR_19;\n\t\t}\n\n\t\t/* COMMENT_17 */\n                                                        \n\n\t\tSET_BITMAP(VAR_10, VAR_5);\n\n\t\t/* COMMENT_19 */\n\t\tVAR_9 = BGP_INPUT_PNT(peer) + VAR_6;\n\n\t\tif (VAR_9 > VAR_8) {\n\t\t\tflog_warn(\n\t\t\t\tVAR_24,\n\t\t\t\t\"%s: BGP type %d length %d is too large, attribute total length is %d.  attr_endp is %p.  endp is %p\",\n\t\t\t\tpeer->host, VAR_5, VAR_6, VAR_0, VAR_9,\n\t\t\t\tVAR_8);\n\t\t\t/* COMMENT_20 */\n                  \n                                                  \n                                                    \n                                                  \n                                                   \n                                                       \n                                          \n                \n                                                          \n                                                       \n                                                  \n                                                        \n                                                     \n     \n                                                          \n                                                          \n                                                        \n                                             \n      \n\t\t\tunsigned char VAR_25[VAR_26];\n\t\t\tmemset(VAR_25, 0x00, sizeof(VAR_25));\n\t\t\tsize_t VAR_27 =\n\t\t\t\tCHECK_FLAG(VAR_4, VAR_20) ? 2 : 1;\n\t\t\t/* COMMENT_40 */\n\t\t\tstream_forward_getp(BGP_INPUT(peer), -(1 + VAR_27));\n\t\t\t/* COMMENT_41 */\n\t\t\tstream_get(&VAR_25[0], BGP_INPUT(peer), 1);\n\t\t\t/* COMMENT_42 */\n\t\t\tstream_get(&VAR_25[1], BGP_INPUT(peer), VAR_27);\n\t\t\t/* COMMENT_43 */\n\t\t\tsize_t VAR_28 = VAR_9 - VAR_7;\n\t\t\tsize_t VAR_29 = MIN(VAR_28, STREAM_READABLE(BGP_INPUT(peer)));\n\t\t\tstream_get(&VAR_25[VAR_27 + 1], BGP_INPUT(peer), VAR_29);\n\n\t\t\tbgp_notify_send_with_data(\n\t\t\t\tpeer, VAR_17,\n\t\t\t\tVAR_18, VAR_25,\n\t\t\t\tVAR_29 + VAR_27 + 1);\n\n\t\t\treturn VAR_19;\n\t\t}\n\n\t\tstruct bgp_attr_parser_args VAR_30 = {\n\t\t\t.peer = peer,\n\t\t\t.length = VAR_6,\n\t\t\t.attr = attr,\n\t\t\t.type = VAR_5,\n\t\t\t.flags = VAR_4,\n\t\t\t.startp = VAR_7,\n\t\t\t.total = VAR_9 - VAR_7,\n\t\t};\n\n\n\t\t/* COMMENT_44 */\n                                                                \n       \n                                                                  \n                                           \n\t\tif (bgp_attr_flag_invalid(&VAR_30)) {\n\t\t\tVAR_3 = bgp_attr_malformed(\n\t\t\t\t&VAR_30, VAR_31,\n\t\t\t\tVAR_30.total);\n\t\t\tif (VAR_3 == VAR_32)\n\t\t\t\tcontinue;\n\t\t\treturn VAR_3;\n\t\t}\n\n\t\t/* COMMENT_49 */\n\t\tswitch (VAR_5) {\n\t\tcase VAR_33:\n\t\t\tVAR_3 = bgp_attr_origin(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_34:\n\t\t\tVAR_3 = bgp_attr_aspath(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_35:\n\t\t\tVAR_3 = bgp_attr_as4_path(&VAR_30, &VAR_12);\n\t\t\tbreak;\n\t\tcase VAR_36:\n\t\t\tVAR_3 = bgp_attr_nexthop(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_37:\n\t\t\tVAR_3 = bgp_attr_med(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_38:\n\t\t\tVAR_3 = bgp_attr_local_pref(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_39:\n\t\t\tVAR_3 = bgp_attr_atomic(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_40:\n\t\t\tVAR_3 = bgp_attr_aggregator(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_41:\n\t\t\tVAR_3 = bgp_attr_as4_aggregator(&VAR_30,\n\t\t\t\t\t\t      &VAR_13,\n\t\t\t\t\t\t      &VAR_14);\n\t\t\tbreak;\n\t\tcase VAR_42:\n\t\t\tVAR_3 = bgp_attr_community(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_43:\n\t\t\tVAR_3 = bgp_attr_large_community(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_44:\n\t\t\tVAR_3 = bgp_attr_originator_id(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_45:\n\t\t\tVAR_3 = bgp_attr_cluster_list(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_46:\n\t\t\tVAR_3 = bgp_mp_reach_parse(&VAR_30, VAR_1);\n\t\t\tbreak;\n\t\tcase VAR_47:\n\t\t\tVAR_3 = bgp_mp_unreach_parse(&VAR_30, VAR_2);\n\t\t\tbreak;\n\t\tcase VAR_48:\n\t\t\tVAR_3 = bgp_attr_ext_communities(&VAR_30);\n\t\t\tbreak;\n#if VAR_49\n\t\tcase VAR_50:\n#endif\n\t\tcase VAR_51:\n\t\t\tVAR_3 = bgp_attr_encap(VAR_5, peer, VAR_6, attr, VAR_4,\n\t\t\t\t\t     VAR_7);\n\t\t\tbreak;\n\t\tcase VAR_52:\n\t\t\tVAR_3 = bgp_attr_prefix_sid(VAR_6,\n\t\t\t\t\t\t  &VAR_30, VAR_1);\n\t\t\tbreak;\n\t\tcase VAR_53:\n\t\t\tVAR_3 = bgp_attr_pmsi_tunnel(&VAR_30);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tVAR_3 = bgp_attr_unknown(&VAR_30);\n\t\t\tbreak;\n\t\t}\n\n\t\tif (VAR_3 == VAR_54) {\n\t\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\t\tVAR_23);\n\t\t\tVAR_3 = VAR_19;\n\t\t}\n\n\t\tif (VAR_3 == VAR_55) {\n\t\t\tif (VAR_12)\n\t\t\t\taspath_unintern(&VAR_12);\n\t\t\treturn VAR_3;\n\t\t}\n\n\t\t/* COMMENT_50 */\n\t\tif (VAR_3 == VAR_19) {\n\t\t\tflog_warn(VAR_56,\n\t\t\t\t  \"%s: Attribute %s, parse error\", peer->host,\n\t\t\t\t  lookup_msg(VAR_57, VAR_5, NULL));\n\t\t\tif (VAR_12)\n\t\t\t\taspath_unintern(&VAR_12);\n\t\t\treturn VAR_3;\n\t\t}\n\t\tif (VAR_3 == VAR_58) {\n\n\t\t\tflog_warn(\n\t\t\t\tVAR_59,\n\t\t\t\t\"%s: Attribute %s, parse error - treating as withdrawal\",\n\t\t\t\tpeer->host, lookup_msg(VAR_57, VAR_5, NULL));\n\t\t\tif (VAR_12)\n\t\t\t\taspath_unintern(&VAR_12);\n\t\t\treturn VAR_3;\n\t\t}\n\n\t\t/* COMMENT_51 */\n\t\tif (BGP_INPUT_PNT(peer) != VAR_9) {\n\t\t\tflog_warn(VAR_60,\n\t\t\t\t  \"%s: BGP attribute %s, fetch error\",\n\t\t\t\t  peer->host, lookup_msg(VAR_57, VAR_5, NULL));\n\t\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\t\tVAR_18);\n\t\t\tif (VAR_12)\n\t\t\t\taspath_unintern(&VAR_12);\n\t\t\treturn VAR_19;\n\t\t}\n\t}\n\n\t/* COMMENT_52 */\n\tif (BGP_INPUT_PNT(peer) != VAR_8) {\n\t\tflog_warn(VAR_61,\n\t\t\t  \"%s: BGP attribute %s, length mismatch\", peer->host,\n\t\t\t  lookup_msg(VAR_57, VAR_5, NULL));\n\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\tVAR_18);\n\t\tif (VAR_12)\n\t\t\taspath_unintern(&VAR_12);\n\t\treturn VAR_19;\n\t}\n\n\t/* COMMENT_53 */\n\tif ((VAR_3 = bgp_attr_check(peer, attr)) < 0) {\n\t\tif (VAR_12)\n\t\t\taspath_unintern(&VAR_12);\n\t\treturn VAR_3;\n\t}\n\n\t/* COMMENT_54 */\n                                                           \n                                                         \n                                                               \n                                                                 \n                                                               \n                                  \n                                                                 \n                                                              \n                                                                    \n   \n                                                            \n                    \n    \n\t/* COMMENT_68 */\n                             \n\tif (CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(VAR_34))\n\t    && bgp_attr_munge_as4_attrs(peer, attr, VAR_12, VAR_13,\n\t\t\t\t\t&VAR_14)) {\n\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\tVAR_23);\n\t\tif (VAR_12)\n\t\t\taspath_unintern(&VAR_12);\n\t\treturn VAR_19;\n\t}\n\n\t/* COMMENT_70 */\n                                                            \n                                                              \n                        \n    \n\tif (VAR_12) {\n\t\taspath_unintern(&VAR_12); /* COMMENT_75 */\n\t\t/* COMMENT_76 */\n                   \n     \n\t}\n\t/* COMMENT_79 */\n                                                            \n                                                              \n                \n                                      \n    \n\t/* COMMENT_85 */\n                                                         \n                                                           \n    \n\tif (attr->flag & (ATTR_FLAG_BIT(VAR_34))) {\n\t\tVAR_3 = bgp_attr_aspath_check(peer, attr);\n\t\tif (VAR_3 != VAR_32)\n\t\t\treturn VAR_3;\n\t}\n\t/* COMMENT_89 */\n\tif (attr->transit)\n\t\tattr->transit = transit_intern(attr->transit);\n\tif (attr->encap_subtlvs)\n\t\tattr->encap_subtlvs =\n\t\t\tencap_intern(attr->encap_subtlvs, VAR_62);\n#if VAR_49\n\tif (attr->vnc_subtlvs)\n\t\tattr->vnc_subtlvs =\n\t\t\tencap_intern(attr->vnc_subtlvs, VAR_63);\n#endif\n\n\treturn VAR_32;\n}",
  "func_graph_path_before": "FRRouting/frr/943d595a018e69b550db08cccba1d0778a86705a/bgp_attr.c/vul/before/0.json",
  "func": "bgp_attr_parse_ret_t bgp_attr_parse(struct peer *peer, struct attr *attr,\n\t\t\t\t    bgp_size_t size, struct bgp_nlri *mp_update,\n\t\t\t\t    struct bgp_nlri *mp_withdraw)\n{\n\tbgp_attr_parse_ret_t ret;\n\tuint8_t flag = 0;\n\tuint8_t type = 0;\n\tbgp_size_t length;\n\tuint8_t *startp, *endp;\n\tuint8_t *attr_endp;\n\tuint8_t seen[BGP_ATTR_BITMAP_SIZE];\n\t/* we need the as4_path only until we have synthesized the as_path with\n\t * it */\n\t/* same goes for as4_aggregator */\n\tstruct aspath *as4_path = NULL;\n\tas_t as4_aggregator = 0;\n\tstruct in_addr as4_aggregator_addr = {.s_addr = 0};\n\n\t/* Initialize bitmap. */\n\tmemset(seen, 0, BGP_ATTR_BITMAP_SIZE);\n\n\t/* End pointer of BGP attribute. */\n\tendp = BGP_INPUT_PNT(peer) + size;\n\n\t/* Get attributes to the end of attribute length. */\n\twhile (BGP_INPUT_PNT(peer) < endp) {\n\t\t/* Check remaining length check.*/\n\t\tif (endp - BGP_INPUT_PNT(peer) < BGP_ATTR_MIN_LEN) {\n\t\t\t/* XXX warning: long int format, int arg (arg 5) */\n\t\t\tflog_warn(\n\t\t\t\tEC_BGP_ATTRIBUTE_TOO_SMALL,\n\t\t\t\t\"%s: error BGP attribute length %lu is smaller than min len\",\n\t\t\t\tpeer->host,\n\t\t\t\t(unsigned long)(endp\n\t\t\t\t\t\t- stream_pnt(BGP_INPUT(peer))));\n\n\t\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR);\n\t\t\treturn BGP_ATTR_PARSE_ERROR;\n\t\t}\n\n\t\t/* Fetch attribute flag and type. */\n\t\tstartp = BGP_INPUT_PNT(peer);\n\t\t/* \"The lower-order four bits of the Attribute Flags octet are\n\t\t   unused.  They MUST be zero when sent and MUST be ignored when\n\t\t   received.\" */\n\t\tflag = 0xF0 & stream_getc(BGP_INPUT(peer));\n\t\ttype = stream_getc(BGP_INPUT(peer));\n\n\t\t/* Check whether Extended-Length applies and is in bounds */\n\t\tif (CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN)\n\t\t    && ((endp - startp) < (BGP_ATTR_MIN_LEN + 1))) {\n\t\t\tflog_warn(\n\t\t\t\tEC_BGP_EXT_ATTRIBUTE_TOO_SMALL,\n\t\t\t\t\"%s: Extended length set, but just %lu bytes of attr header\",\n\t\t\t\tpeer->host,\n\t\t\t\t(unsigned long)(endp\n\t\t\t\t\t\t- stream_pnt(BGP_INPUT(peer))));\n\n\t\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR);\n\t\t\treturn BGP_ATTR_PARSE_ERROR;\n\t\t}\n\n\t\t/* Check extended attribue length bit. */\n\t\tif (CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN))\n\t\t\tlength = stream_getw(BGP_INPUT(peer));\n\t\telse\n\t\t\tlength = stream_getc(BGP_INPUT(peer));\n\n\t\t/* If any attribute appears more than once in the UPDATE\n\t\t   message, then the Error Subcode is set to Malformed Attribute\n\t\t   List. */\n\n\t\tif (CHECK_BITMAP(seen, type)) {\n\t\t\tflog_warn(\n\t\t\t\tEC_BGP_ATTRIBUTE_REPEATED,\n\t\t\t\t\"%s: error BGP attribute type %d appears twice in a message\",\n\t\t\t\tpeer->host, type);\n\n\t\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR);\n\t\t\treturn BGP_ATTR_PARSE_ERROR;\n\t\t}\n\n\t\t/* Set type to bitmap to check duplicate attribute.  `type' is\n\t\t   unsigned char so it never overflow bitmap range. */\n\n\t\tSET_BITMAP(seen, type);\n\n\t\t/* Overflow check. */\n\t\tattr_endp = BGP_INPUT_PNT(peer) + length;\n\n\t\tif (attr_endp > endp) {\n\t\t\tflog_warn(\n\t\t\t\tEC_BGP_ATTRIBUTE_TOO_LARGE,\n\t\t\t\t\"%s: BGP type %d length %d is too large, attribute total length is %d.  attr_endp is %p.  endp is %p\",\n\t\t\t\tpeer->host, type, length, size, attr_endp,\n\t\t\t\tendp);\n\t\t\t/*\n\t\t\t * RFC 4271 6.3\n\t\t\t * If any recognized attribute has an Attribute\n\t\t\t * Length that conflicts with the expected length\n\t\t\t * (based on the attribute type code), then the\n\t\t\t * Error Subcode MUST be set to Attribute Length\n\t\t\t * Error.  The Data field MUST contain the erroneous\n\t\t\t * attribute (type, length, and value).\n\t\t\t * ----------\n\t\t\t * We do not currently have a good way to determine the\n\t\t\t * length of the attribute independent of the length\n\t\t\t * received in the message. Instead we send the\n\t\t\t * minimum between the amount of data we have and the\n\t\t\t * amount specified by the attribute length field.\n\t\t\t *\n\t\t\t * Instead of directly passing in the packet buffer and\n\t\t\t * offset we use the stream_get* functions to read into\n\t\t\t * a stack buffer, since they perform bounds checking\n\t\t\t * and we are working with untrusted data.\n\t\t\t */\n\t\t\tunsigned char ndata[BGP_MAX_PACKET_SIZE];\n\t\t\tmemset(ndata, 0x00, sizeof(ndata));\n\t\t\tsize_t lfl =\n\t\t\t\tCHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN) ? 2 : 1;\n\t\t\t/* Rewind to end of flag field */\n\t\t\tstream_forward_getp(BGP_INPUT(peer), -(1 + lfl));\n\t\t\t/* Type */\n\t\t\tstream_get(&ndata[0], BGP_INPUT(peer), 1);\n\t\t\t/* Length */\n\t\t\tstream_get(&ndata[1], BGP_INPUT(peer), lfl);\n\t\t\t/* Value */\n\t\t\tsize_t atl = attr_endp - startp;\n\t\t\tsize_t ndl = MIN(atl, STREAM_READABLE(BGP_INPUT(peer)));\n\t\t\tstream_get(&ndata[lfl + 1], BGP_INPUT(peer), ndl);\n\n\t\t\tbgp_notify_send_with_data(\n\t\t\t\tpeer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR, ndata,\n\t\t\t\tndl + lfl + 1);\n\n\t\t\treturn BGP_ATTR_PARSE_ERROR;\n\t\t}\n\n\t\tstruct bgp_attr_parser_args attr_args = {\n\t\t\t.peer = peer,\n\t\t\t.length = length,\n\t\t\t.attr = attr,\n\t\t\t.type = type,\n\t\t\t.flags = flag,\n\t\t\t.startp = startp,\n\t\t\t.total = attr_endp - startp,\n\t\t};\n\n\n\t\t/* If any recognized attribute has Attribute Flags that conflict\n\t\t   with the Attribute Type Code, then the Error Subcode is set\n\t\t   to\n\t\t   Attribute Flags Error.  The Data field contains the erroneous\n\t\t   attribute (type, length and value). */\n\t\tif (bgp_attr_flag_invalid(&attr_args)) {\n\t\t\tret = bgp_attr_malformed(\n\t\t\t\t&attr_args, BGP_NOTIFY_UPDATE_ATTR_FLAG_ERR,\n\t\t\t\tattr_args.total);\n\t\t\tif (ret == BGP_ATTR_PARSE_PROCEED)\n\t\t\t\tcontinue;\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* OK check attribute and store it's value. */\n\t\tswitch (type) {\n\t\tcase BGP_ATTR_ORIGIN:\n\t\t\tret = bgp_attr_origin(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_AS_PATH:\n\t\t\tret = bgp_attr_aspath(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_AS4_PATH:\n\t\t\tret = bgp_attr_as4_path(&attr_args, &as4_path);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_NEXT_HOP:\n\t\t\tret = bgp_attr_nexthop(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_MULTI_EXIT_DISC:\n\t\t\tret = bgp_attr_med(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_LOCAL_PREF:\n\t\t\tret = bgp_attr_local_pref(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_ATOMIC_AGGREGATE:\n\t\t\tret = bgp_attr_atomic(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_AGGREGATOR:\n\t\t\tret = bgp_attr_aggregator(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_AS4_AGGREGATOR:\n\t\t\tret = bgp_attr_as4_aggregator(&attr_args,\n\t\t\t\t\t\t      &as4_aggregator,\n\t\t\t\t\t\t      &as4_aggregator_addr);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_COMMUNITIES:\n\t\t\tret = bgp_attr_community(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_LARGE_COMMUNITIES:\n\t\t\tret = bgp_attr_large_community(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_ORIGINATOR_ID:\n\t\t\tret = bgp_attr_originator_id(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_CLUSTER_LIST:\n\t\t\tret = bgp_attr_cluster_list(&attr_args);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_MP_REACH_NLRI:\n\t\t\tret = bgp_mp_reach_parse(&attr_args, mp_update);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_MP_UNREACH_NLRI:\n\t\t\tret = bgp_mp_unreach_parse(&attr_args, mp_withdraw);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_EXT_COMMUNITIES:\n\t\t\tret = bgp_attr_ext_communities(&attr_args);\n\t\t\tbreak;\n#if ENABLE_BGP_VNC_ATTR\n\t\tcase BGP_ATTR_VNC:\n#endif\n\t\tcase BGP_ATTR_ENCAP:\n\t\t\tret = bgp_attr_encap(type, peer, length, attr, flag,\n\t\t\t\t\t     startp);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_PREFIX_SID:\n\t\t\tret = bgp_attr_prefix_sid(length,\n\t\t\t\t\t\t  &attr_args, mp_update);\n\t\t\tbreak;\n\t\tcase BGP_ATTR_PMSI_TUNNEL:\n\t\t\tret = bgp_attr_pmsi_tunnel(&attr_args);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tret = bgp_attr_unknown(&attr_args);\n\t\t\tbreak;\n\t\t}\n\n\t\tif (ret == BGP_ATTR_PARSE_ERROR_NOTIFYPLS) {\n\t\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR);\n\t\t\tret = BGP_ATTR_PARSE_ERROR;\n\t\t}\n\n\t\tif (ret == BGP_ATTR_PARSE_EOR) {\n\t\t\tif (as4_path)\n\t\t\t\taspath_unintern(&as4_path);\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* If hard error occurred immediately return to the caller. */\n\t\tif (ret == BGP_ATTR_PARSE_ERROR) {\n\t\t\tflog_warn(EC_BGP_ATTRIBUTE_PARSE_ERROR,\n\t\t\t\t  \"%s: Attribute %s, parse error\", peer->host,\n\t\t\t\t  lookup_msg(attr_str, type, NULL));\n\t\t\tif (as4_path)\n\t\t\t\taspath_unintern(&as4_path);\n\t\t\treturn ret;\n\t\t}\n\t\tif (ret == BGP_ATTR_PARSE_WITHDRAW) {\n\n\t\t\tflog_warn(\n\t\t\t\tEC_BGP_ATTRIBUTE_PARSE_WITHDRAW,\n\t\t\t\t\"%s: Attribute %s, parse error - treating as withdrawal\",\n\t\t\t\tpeer->host, lookup_msg(attr_str, type, NULL));\n\t\t\tif (as4_path)\n\t\t\t\taspath_unintern(&as4_path);\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* Check the fetched length. */\n\t\tif (BGP_INPUT_PNT(peer) != attr_endp) {\n\t\t\tflog_warn(EC_BGP_ATTRIBUTE_FETCH_ERROR,\n\t\t\t\t  \"%s: BGP attribute %s, fetch error\",\n\t\t\t\t  peer->host, lookup_msg(attr_str, type, NULL));\n\t\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR);\n\t\t\tif (as4_path)\n\t\t\t\taspath_unintern(&as4_path);\n\t\t\treturn BGP_ATTR_PARSE_ERROR;\n\t\t}\n\t}\n\n\t/* Check final read pointer is same as end pointer. */\n\tif (BGP_INPUT_PNT(peer) != endp) {\n\t\tflog_warn(EC_BGP_ATTRIBUTES_MISMATCH,\n\t\t\t  \"%s: BGP attribute %s, length mismatch\", peer->host,\n\t\t\t  lookup_msg(attr_str, type, NULL));\n\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR);\n\t\tif (as4_path)\n\t\t\taspath_unintern(&as4_path);\n\t\treturn BGP_ATTR_PARSE_ERROR;\n\t}\n\n\t/* Check all mandatory well-known attributes are present */\n\tif ((ret = bgp_attr_check(peer, attr)) < 0) {\n\t\tif (as4_path)\n\t\t\taspath_unintern(&as4_path);\n\t\treturn ret;\n\t}\n\n\t/*\n\t * At this place we can see whether we got AS4_PATH and/or\n\t * AS4_AGGREGATOR from a 16Bit peer and act accordingly.\n\t * We can not do this before we've read all attributes because\n\t * the as4 handling does not say whether AS4_PATH has to be sent\n\t * after AS_PATH or not - and when AS4_AGGREGATOR will be send\n\t * in relationship to AGGREGATOR.\n\t * So, to be defensive, we are not relying on any order and read\n\t * all attributes first, including these 32bit ones, and now,\n\t * afterwards, we look what and if something is to be done for as4.\n\t *\n\t * It is possible to not have AS_PATH, e.g. GR EoR and sole\n\t * MP_UNREACH_NLRI.\n\t */\n\t/* actually... this doesn't ever return failure currently, but\n\t * better safe than sorry */\n\tif (CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_AS_PATH))\n\t    && bgp_attr_munge_as4_attrs(peer, attr, as4_path, as4_aggregator,\n\t\t\t\t\t&as4_aggregator_addr)) {\n\t\tbgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR);\n\t\tif (as4_path)\n\t\t\taspath_unintern(&as4_path);\n\t\treturn BGP_ATTR_PARSE_ERROR;\n\t}\n\n\t/* At this stage, we have done all fiddling with as4, and the\n\t * resulting info is in attr->aggregator resp. attr->aspath\n\t * so we can chuck as4_aggregator and as4_path alltogether in\n\t * order to save memory\n\t */\n\tif (as4_path) {\n\t\taspath_unintern(&as4_path); /* unintern - it is in the hash */\n\t\t/* The flag that we got this is still there, but that does not\n\t\t * do any trouble\n\t\t */\n\t}\n\t/*\n\t * The \"rest\" of the code does nothing with as4_aggregator.\n\t * there is no memory attached specifically which is not part\n\t * of the attr.\n\t * so ignoring just means do nothing.\n\t */\n\t/*\n\t * Finally do the checks on the aspath we did not do yet\n\t * because we waited for a potentially synthesized aspath.\n\t */\n\tif (attr->flag & (ATTR_FLAG_BIT(BGP_ATTR_AS_PATH))) {\n\t\tret = bgp_attr_aspath_check(peer, attr);\n\t\tif (ret != BGP_ATTR_PARSE_PROCEED)\n\t\t\treturn ret;\n\t}\n\t/* Finally intern unknown attribute. */\n\tif (attr->transit)\n\t\tattr->transit = transit_intern(attr->transit);\n\tif (attr->encap_subtlvs)\n\t\tattr->encap_subtlvs =\n\t\t\tencap_intern(attr->encap_subtlvs, ENCAP_SUBTLV_TYPE);\n#if ENABLE_BGP_VNC\n\tif (attr->vnc_subtlvs)\n\t\tattr->vnc_subtlvs =\n\t\t\tencap_intern(attr->vnc_subtlvs, VNC_SUBTLV_TYPE);\n#endif\n\n\treturn BGP_ATTR_PARSE_PROCEED;\n}",
  "abstract_func": "bgp_attr_parse_ret_t bgp_attr_parse(struct peer *peer, struct attr *attr,\n\t\t\t\t    bgp_size_t VAR_0, struct bgp_nlri *VAR_1,\n\t\t\t\t    struct bgp_nlri *VAR_2)\n{\n\tbgp_attr_parse_ret_t VAR_3;\n\tuint8_t VAR_4 = 0;\n\tuint8_t VAR_5 = 0;\n\tbgp_size_t VAR_6;\n\tuint8_t *VAR_7, *VAR_8;\n\tuint8_t *VAR_9;\n\tuint8_t VAR_10[VAR_11];\n\t/* COMMENT_0 */\n         \n\t/* COMMENT_2 */\n\tstruct aspath *VAR_12 = NULL;\n\tas_t VAR_13 = 0;\n\tstruct in_addr VAR_14 = {.s_addr = 0};\n\n\t/* COMMENT_3 */\n\tmemset(VAR_10, 0, VAR_11);\n\n\t/* COMMENT_4 */\n\tVAR_8 = BGP_INPUT_PNT(peer) + VAR_0;\n\n\t/* COMMENT_5 */\n\twhile (BGP_INPUT_PNT(peer) < VAR_8) {\n\t\t/* COMMENT_6 */\n\t\tif (VAR_8 - BGP_INPUT_PNT(peer) < VAR_15) {\n\t\t\t/* COMMENT_7 */\n\t\t\tflog_warn(\n\t\t\t\tVAR_16,\n\t\t\t\t\"%s: error BGP attribute length %lu is smaller than min len\",\n\t\t\t\tpeer->host,\n\t\t\t\t(unsigned long)(VAR_8\n\t\t\t\t\t\t- stream_pnt(BGP_INPUT(peer))));\n\n\t\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\t\tVAR_18);\n\t\t\treturn VAR_19;\n\t\t}\n\n\t\t/* COMMENT_8 */\n\t\tVAR_7 = BGP_INPUT_PNT(peer);\n\t\t/* COMMENT_9 */\n                                                                  \n                  \n\t\tVAR_4 = 0xF0 & stream_getc(BGP_INPUT(peer));\n\t\tVAR_5 = stream_getc(BGP_INPUT(peer));\n\n\t\t/* COMMENT_12 */\n\t\tif (CHECK_FLAG(VAR_4, VAR_20)\n\t\t    && ((VAR_8 - VAR_7) < (VAR_15 + 1))) {\n\t\t\tflog_warn(\n\t\t\t\tVAR_21,\n\t\t\t\t\"%s: Extended length set, but just %lu bytes of attr header\",\n\t\t\t\tpeer->host,\n\t\t\t\t(unsigned long)(VAR_8\n\t\t\t\t\t\t- stream_pnt(BGP_INPUT(peer))));\n\n\t\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\t\tVAR_18);\n\t\t\treturn VAR_19;\n\t\t}\n\n\t\t/* COMMENT_13 */\n\t\tif (CHECK_FLAG(VAR_4, VAR_20))\n\t\t\tVAR_6 = stream_getw(BGP_INPUT(peer));\n\t\telse\n\t\t\tVAR_6 = stream_getc(BGP_INPUT(peer));\n\n\t\t/* COMMENT_14 */\n                                                                  \n             \n\n\t\tif (CHECK_BITMAP(VAR_10, VAR_5)) {\n\t\t\tflog_warn(\n\t\t\t\tVAR_22,\n\t\t\t\t\"%s: error BGP attribute type %d appears twice in a message\",\n\t\t\t\tpeer->host, VAR_5);\n\n\t\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\t\tVAR_23);\n\t\t\treturn VAR_19;\n\t\t}\n\n\t\t/* COMMENT_17 */\n                                                        \n\n\t\tSET_BITMAP(VAR_10, VAR_5);\n\n\t\t/* COMMENT_19 */\n\t\tVAR_9 = BGP_INPUT_PNT(peer) + VAR_6;\n\n\t\tif (VAR_9 > VAR_8) {\n\t\t\tflog_warn(\n\t\t\t\tVAR_24,\n\t\t\t\t\"%s: BGP type %d length %d is too large, attribute total length is %d.  attr_endp is %p.  endp is %p\",\n\t\t\t\tpeer->host, VAR_5, VAR_6, VAR_0, VAR_9,\n\t\t\t\tVAR_8);\n\t\t\t/* COMMENT_20 */\n                  \n                                                  \n                                                    \n                                                  \n                                                   \n                                                       \n                                          \n                \n                                                          \n                                                       \n                                                  \n                                                        \n                                                     \n     \n                                                          \n                                                          \n                                                        \n                                             \n      \n\t\t\tunsigned char VAR_25[VAR_26];\n\t\t\tmemset(VAR_25, 0x00, sizeof(VAR_25));\n\t\t\tsize_t VAR_27 =\n\t\t\t\tCHECK_FLAG(VAR_4, VAR_20) ? 2 : 1;\n\t\t\t/* COMMENT_40 */\n\t\t\tstream_forward_getp(BGP_INPUT(peer), -(1 + VAR_27));\n\t\t\t/* COMMENT_41 */\n\t\t\tstream_get(&VAR_25[0], BGP_INPUT(peer), 1);\n\t\t\t/* COMMENT_42 */\n\t\t\tstream_get(&VAR_25[1], BGP_INPUT(peer), VAR_27);\n\t\t\t/* COMMENT_43 */\n\t\t\tsize_t VAR_28 = VAR_9 - VAR_7;\n\t\t\tsize_t VAR_29 = MIN(VAR_28, STREAM_READABLE(BGP_INPUT(peer)));\n\t\t\tstream_get(&VAR_25[VAR_27 + 1], BGP_INPUT(peer), VAR_29);\n\n\t\t\tbgp_notify_send_with_data(\n\t\t\t\tpeer, VAR_17,\n\t\t\t\tVAR_18, VAR_25,\n\t\t\t\tVAR_29 + VAR_27 + 1);\n\n\t\t\treturn VAR_19;\n\t\t}\n\n\t\tstruct bgp_attr_parser_args VAR_30 = {\n\t\t\t.peer = peer,\n\t\t\t.length = VAR_6,\n\t\t\t.attr = attr,\n\t\t\t.type = VAR_5,\n\t\t\t.flags = VAR_4,\n\t\t\t.startp = VAR_7,\n\t\t\t.total = VAR_9 - VAR_7,\n\t\t};\n\n\n\t\t/* COMMENT_44 */\n                                                                \n       \n                                                                  \n                                           \n\t\tif (bgp_attr_flag_invalid(&VAR_30)) {\n\t\t\tVAR_3 = bgp_attr_malformed(\n\t\t\t\t&VAR_30, VAR_31,\n\t\t\t\tVAR_30.total);\n\t\t\tif (VAR_3 == VAR_32)\n\t\t\t\tcontinue;\n\t\t\treturn VAR_3;\n\t\t}\n\n\t\t/* COMMENT_49 */\n\t\tswitch (VAR_5) {\n\t\tcase VAR_33:\n\t\t\tVAR_3 = bgp_attr_origin(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_34:\n\t\t\tVAR_3 = bgp_attr_aspath(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_35:\n\t\t\tVAR_3 = bgp_attr_as4_path(&VAR_30, &VAR_12);\n\t\t\tbreak;\n\t\tcase VAR_36:\n\t\t\tVAR_3 = bgp_attr_nexthop(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_37:\n\t\t\tVAR_3 = bgp_attr_med(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_38:\n\t\t\tVAR_3 = bgp_attr_local_pref(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_39:\n\t\t\tVAR_3 = bgp_attr_atomic(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_40:\n\t\t\tVAR_3 = bgp_attr_aggregator(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_41:\n\t\t\tVAR_3 = bgp_attr_as4_aggregator(&VAR_30,\n\t\t\t\t\t\t      &VAR_13,\n\t\t\t\t\t\t      &VAR_14);\n\t\t\tbreak;\n\t\tcase VAR_42:\n\t\t\tVAR_3 = bgp_attr_community(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_43:\n\t\t\tVAR_3 = bgp_attr_large_community(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_44:\n\t\t\tVAR_3 = bgp_attr_originator_id(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_45:\n\t\t\tVAR_3 = bgp_attr_cluster_list(&VAR_30);\n\t\t\tbreak;\n\t\tcase VAR_46:\n\t\t\tVAR_3 = bgp_mp_reach_parse(&VAR_30, VAR_1);\n\t\t\tbreak;\n\t\tcase VAR_47:\n\t\t\tVAR_3 = bgp_mp_unreach_parse(&VAR_30, VAR_2);\n\t\t\tbreak;\n\t\tcase VAR_48:\n\t\t\tVAR_3 = bgp_attr_ext_communities(&VAR_30);\n\t\t\tbreak;\n#if VAR_49\n\t\tcase VAR_50:\n#endif\n\t\tcase VAR_51:\n\t\t\tVAR_3 = bgp_attr_encap(VAR_5, peer, VAR_6, attr, VAR_4,\n\t\t\t\t\t     VAR_7);\n\t\t\tbreak;\n\t\tcase VAR_52:\n\t\t\tVAR_3 = bgp_attr_prefix_sid(VAR_6,\n\t\t\t\t\t\t  &VAR_30, VAR_1);\n\t\t\tbreak;\n\t\tcase VAR_53:\n\t\t\tVAR_3 = bgp_attr_pmsi_tunnel(&VAR_30);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tVAR_3 = bgp_attr_unknown(&VAR_30);\n\t\t\tbreak;\n\t\t}\n\n\t\tif (VAR_3 == VAR_54) {\n\t\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\t\tVAR_23);\n\t\t\tVAR_3 = VAR_19;\n\t\t}\n\n\t\tif (VAR_3 == VAR_55) {\n\t\t\tif (VAR_12)\n\t\t\t\taspath_unintern(&VAR_12);\n\t\t\treturn VAR_3;\n\t\t}\n\n\t\t/* COMMENT_50 */\n\t\tif (VAR_3 == VAR_19) {\n\t\t\tflog_warn(VAR_56,\n\t\t\t\t  \"%s: Attribute %s, parse error\", peer->host,\n\t\t\t\t  lookup_msg(VAR_57, VAR_5, NULL));\n\t\t\tif (VAR_12)\n\t\t\t\taspath_unintern(&VAR_12);\n\t\t\treturn VAR_3;\n\t\t}\n\t\tif (VAR_3 == VAR_58) {\n\n\t\t\tflog_warn(\n\t\t\t\tVAR_59,\n\t\t\t\t\"%s: Attribute %s, parse error - treating as withdrawal\",\n\t\t\t\tpeer->host, lookup_msg(VAR_57, VAR_5, NULL));\n\t\t\tif (VAR_12)\n\t\t\t\taspath_unintern(&VAR_12);\n\t\t\treturn VAR_3;\n\t\t}\n\n\t\t/* COMMENT_51 */\n\t\tif (BGP_INPUT_PNT(peer) != VAR_9) {\n\t\t\tflog_warn(VAR_60,\n\t\t\t\t  \"%s: BGP attribute %s, fetch error\",\n\t\t\t\t  peer->host, lookup_msg(VAR_57, VAR_5, NULL));\n\t\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\t\tVAR_18);\n\t\t\tif (VAR_12)\n\t\t\t\taspath_unintern(&VAR_12);\n\t\t\treturn VAR_19;\n\t\t}\n\t}\n\n\t/* COMMENT_52 */\n\tif (BGP_INPUT_PNT(peer) != VAR_8) {\n\t\tflog_warn(VAR_61,\n\t\t\t  \"%s: BGP attribute %s, length mismatch\", peer->host,\n\t\t\t  lookup_msg(VAR_57, VAR_5, NULL));\n\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\tVAR_18);\n\t\tif (VAR_12)\n\t\t\taspath_unintern(&VAR_12);\n\t\treturn VAR_19;\n\t}\n\n\t/* COMMENT_53 */\n\tif ((VAR_3 = bgp_attr_check(peer, attr)) < 0) {\n\t\tif (VAR_12)\n\t\t\taspath_unintern(&VAR_12);\n\t\treturn VAR_3;\n\t}\n\n\t/* COMMENT_54 */\n                                                           \n                                                         \n                                                               \n                                                                 \n                                                               \n                                  \n                                                                 \n                                                              \n                                                                    \n   \n                                                            \n                    \n    \n\t/* COMMENT_68 */\n                             \n\tif (CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(VAR_34))\n\t    && bgp_attr_munge_as4_attrs(peer, attr, VAR_12, VAR_13,\n\t\t\t\t\t&VAR_14)) {\n\t\tbgp_notify_send(peer, VAR_17,\n\t\t\t\tVAR_23);\n\t\tif (VAR_12)\n\t\t\taspath_unintern(&VAR_12);\n\t\treturn VAR_19;\n\t}\n\n\t/* COMMENT_70 */\n                                                            \n                                                              \n                        \n    \n\tif (VAR_12) {\n\t\taspath_unintern(&VAR_12); /* COMMENT_75 */\n\t\t/* COMMENT_76 */\n                   \n     \n\t}\n\t/* COMMENT_79 */\n                                                            \n                                                              \n                \n                                      \n    \n\t/* COMMENT_85 */\n                                                         \n                                                           \n    \n\tif (attr->flag & (ATTR_FLAG_BIT(VAR_34))) {\n\t\tVAR_3 = bgp_attr_aspath_check(peer, attr);\n\t\tif (VAR_3 != VAR_32)\n\t\t\treturn VAR_3;\n\t}\n\t/* COMMENT_89 */\n\tif (attr->transit)\n\t\tattr->transit = transit_intern(attr->transit);\n\tif (attr->encap_subtlvs)\n\t\tattr->encap_subtlvs =\n\t\t\tencap_intern(attr->encap_subtlvs, VAR_62);\n#if VAR_63\n\tif (attr->vnc_subtlvs)\n\t\tattr->vnc_subtlvs =\n\t\t\tencap_intern(attr->vnc_subtlvs, VAR_64);\n#endif\n\n\treturn VAR_32;\n}",
  "func_graph_path": "FRRouting/frr/943d595a018e69b550db08cccba1d0778a86705a/bgp_attr.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -217,7 +217,7 @@\n \t\tcase BGP_ATTR_EXT_COMMUNITIES:\n \t\t\tret = bgp_attr_ext_communities(&attr_args);\n \t\t\tbreak;\n-#if ENABLE_BGP_VNC\n+#if ENABLE_BGP_VNC_ATTR\n \t\tcase BGP_ATTR_VNC:\n #endif\n \t\tcase BGP_ATTR_ENCAP:",
  "diff_line_info": {
    "deleted_lines": [
      "#if ENABLE_BGP_VNC"
    ],
    "added_lines": [
      "#if ENABLE_BGP_VNC_ATTR"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/FRRouting/frr/pull/3575",
  "description": {
    "pr_info": {
      "title": "bgpd: don't use BGP_ATTR_VNC(255) unless ENABLE_BGP_VNC_ATTR is defined",
      "number": 3575
    },
    "comment": [
      "\r\n### Summary\r\nAdd ENABLE_BGP_VNC_ATTR check to use of BGP_ATTR_VNC(255) , off by default.\r\n\r\n### Components\r\nbgpd",
      "Once this finishes CI I will push in.",
      "Please put these on all branches 3.0+",
      "# Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/\n\nThis is a comment from an EXPERIMENTAL automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n## Get source and apply patch from patchwork: Successful\n\n## Building Stage: Successful\n\n## Basic Tests: Failed\n__CentOS 7 rpm pkg check: Successful__\n__Ubuntu 12.04 deb pkg check: Successful__\n__IPv6 protocols on Ubuntu 14.04: Successful__\n__Ubuntu 16.04 deb pkg check: Successful__\n__CentOS 6 rpm pkg check: Successful__\n__Ubuntu 14.04 deb pkg check: Successful__\n__IPv4 ldp protocol on Ubuntu 16.04: Successful__\n__Addresssanitizer topotest: Successful__\n__Debian 8 deb pkg check: Successful__\n__Fedora 24 rpm pkg check: Successful__\n__IPv4 protocols on Ubuntu 14.04: Successful__\n__Debian 9 deb pkg check: Successful__\n__Static analyzer (clang): Successful__\n\n\n#### Topology tests on Ubuntu 18.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1804-6327/test\n\n__Topology Tests failed for Topology tests on Ubuntu 18.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 17:38:08,169 ERROR: ******************************************************************************\n    2019-01-07 17:38:08,170 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 17:38:08,170 ERROR: ******************************************************************************\n    2019-01-07 17:38:08,170 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 17:38:08,170 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 17:38:08,170 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 17:38:08,170 ERROR: FILE: scripts/check_close.py\n    2019-01-07 17:38:08,170 ERROR: 46   r3     Out of holddown +10.29 secs                              0    1\n    2019-01-07 17:38:08,170 ERROR: 47   r4     Out of holddown +10.51 secs                              0    1\n    2019-01-07 17:38:08,170 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 17:38:08,179 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 17:39:55,239 ERROR: ******************************************************************************\n    2019-01-07 17:39:55,239 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 17:39:55,239 ERROR: ******************************************************************************\n    2019-01-07 17:39:55,239 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 17:39:55,239 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 17:39:55,240 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 17:39:55,240 ERROR: FILE: scripts/check_close.py\n    2019-01-07 17:39:55,240 ERROR: 46   r3     Out of holddown +10.26 secs                              0    1\n    2019-01-07 17:39:55,240 ERROR: 47   r4     Out of holddown +10.66 secs                              0    1\n    2019-01-07 17:39:55,240 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 17:39:55,242 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1804/ErrorLog/log_topotests.txt\n\n#### Topology tests on Ubuntu 16.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1604-6327/test\n\n__Topology Tests failed for Topology tests on Ubuntu 16.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 09:37:37,780 ERROR: ******************************************************************************\n    2019-01-07 09:37:37,780 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 09:37:37,780 ERROR: ******************************************************************************\n    2019-01-07 09:37:37,780 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 09:37:37,781 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 09:37:37,781 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 09:37:37,781 ERROR: FILE: scripts/check_close.py\n    2019-01-07 09:37:37,781 ERROR: 46   r3     Out of holddown +10.22 secs                              0    1\n    2019-01-07 09:37:37,781 ERROR: 47   r4     Out of holddown +10.58 secs                              0    1\n    2019-01-07 09:37:37,781 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 09:37:38,232 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 09:39:24,009 ERROR: ******************************************************************************\n    2019-01-07 09:39:24,009 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 09:39:24,009 ERROR: ******************************************************************************\n    2019-01-07 09:39:24,009 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 09:39:24,009 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 09:39:24,009 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 09:39:24,009 ERROR: FILE: scripts/check_close.py\n    2019-01-07 09:39:24,009 ERROR: 46   r3     Out of holddown +10.15 secs                              0    1\n    2019-01-07 09:39:24,010 ERROR: 47   r4     Out of holddown +10.22 secs                              0    1\n    2019-01-07 09:39:24,010 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 09:39:24,011 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n    2019-01-07 09:47:34,399 ERROR: 'compare_show_ipv6_ospf6' failed after 78.32 seconds\n    2019-01-07 09:47:37,541 ERROR: 'compare_show_ipv6_ospf6' failed after 3.14 seconds\n    2019-01-07 09:47:40,674 ERROR: 'compare_show_ipv6_ospf6' failed after 3.13 seconds\n    2019-01-07 09:47:40,676 ERROR: assert failed at \"test_ospf_topo1/test_ospf6_convergence\": OSPF6 did not converge on r1:\n      --- Current output\n      +++ Expected output\n      @@ -11,4 +11,3 @@\n        N E1 2001:db8:200::/64 fe80::xxxx:xxxx:xxxx:xxxx r1-eth1\n       *N IE 2001:db8:300::/64 fe80::xxxx:xxxx:xxxx:xxxx r1-eth1\n        N E1 2001:db8:300::/64 fe80::xxxx:xxxx:xxxx:xxxx r1-eth1\n      -*N E1 fe80::xxxx:xxxx:xxxx:xxxx fe80::xxxx:xxxx:xxxx:xxxx r1-eth1\n    assert False\n    2019-01-07 09:49:43,768 ERROR: 'compare_show_ipv6_ospf6' failed after 78.33 seconds\n    2019-01-07 09:49:43,770 ERROR: assert failed at \"test_ospf_topo1/test_ospf6_link_down\": OSPF6 did not converge on r3:\n      --- Current output\n      +++ Expected output\n      @@ -3,4 +3,3 @@\n        N E1 2001:db8:200::/64 fe80::xxxx:xxxx:xxxx:xxxx r3-eth2\n       *N IA 2001:db8:300::/64 fe80::xxxx:xxxx:xxxx:xxxx r3-eth2\n        N E1 2001:db8:300::/64 fe80::xxxx:xxxx:xxxx:xxxx r3-eth2\n      -*N E1 fe80::xxxx:xxxx:xxxx:xxxx fe80::xxxx:xxxx:xxxx:xxxx r3-eth2\n    assert False\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1604/ErrorLog/log_topotests.txt\n\n#### Topotest tests on Ubuntu 16.04 i386: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOI386-6327/test\n\n__Topology Tests failed for Topotest tests on Ubuntu 16.04 i386__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 09:38:20,989 ERROR: ******************************************************************************\n    2019-01-07 09:38:20,989 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 09:38:20,990 ERROR: ******************************************************************************\n    2019-01-07 09:38:20,990 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 09:38:20,990 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 09:38:20,990 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 09:38:20,990 ERROR: FILE: scripts/check_close.py\n    2019-01-07 09:38:20,990 ERROR: 46   r3     Out of holddown +10.60 secs                              0    1\n    2019-01-07 09:38:20,990 ERROR: 47   r4     Out of holddown +10.26 secs                              0    1\n    2019-01-07 09:38:20,990 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 09:38:20,993 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 09:40:06,472 ERROR: ******************************************************************************\n    2019-01-07 09:40:06,473 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 09:40:06,473 ERROR: ******************************************************************************\n    2019-01-07 09:40:06,473 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 09:40:06,473 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 09:40:06,473 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 09:40:06,474 ERROR: FILE: scripts/check_close.py\n    2019-01-07 09:40:06,474 ERROR: 46   r3     Out of holddown +10.21 secs                              0    1\n    2019-01-07 09:40:06,474 ERROR: 47   r4     Out of holddown +10.03 secs                              0    1\n    2019-01-07 09:40:06,474 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 09:40:06,478 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    *** defaultIntf: warning: lm has no interfaces\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOI386/ErrorLog/log_topotests.txt\n\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1804/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1604/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOI386/MemoryLeaks/\n-----------------------------\n## Warnings Generated during build:\n\n\n### Ubuntu 16.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI014BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 18.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 18.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/U1804AMD64/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 4 tags overridden (3 warnings, 1 info)\n\n\n### Ubuntu 16.04 i386 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 i386 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/U1604I386/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 8 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 8 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI008BLD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 9 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 9 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI021BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 14.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 14.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI001BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n-----------------------------\n### CLANG Static Analyzer Summary\n- Github Pull Request 3575, comparing to Git base SHA e82d19a\n- Base image data for Git e82d19a does not exist - compare skipped\n",
      "## &#x1F49A; Basic BGPD CI results: SUCCESS, 0 tests failed\n\n<details>\n<summary>Results table</summary>\n\n_|_\n-|-\nResult               | SUCCESS git merge/3575 943d595a\nDate                 | 01/07/2019\nStart                | 13:03:03\nFinish               | 13:26:38\nRun-Time             | 23:35\nTotal                | 1813\nPass                 | 1813\nFail                 | 0\nValgrind-Errors      | 0\nValgrind-Loss        | 0\nDetails              | vncregress-2019-01-07-13:03:03.txt\nLog                  | autoscript-2019-01-07-13:05:24.log.bz2\n\nFor details, please contact louberger\n\n</details>",
      "# Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/\n\nThis is a comment from an EXPERIMENTAL automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n## Get source and apply patch from patchwork: Successful\n\n## Building Stage: Successful\n\n## Basic Tests: Failed\n__CentOS 7 rpm pkg check: Successful__\n__Ubuntu 12.04 deb pkg check: Successful__\n__IPv6 protocols on Ubuntu 14.04: Successful__\n__Ubuntu 16.04 deb pkg check: Successful__\n__CentOS 6 rpm pkg check: Successful__\n__Ubuntu 14.04 deb pkg check: Successful__\n__IPv4 ldp protocol on Ubuntu 16.04: Successful__\n__Addresssanitizer topotest: Successful__\n__Debian 8 deb pkg check: Successful__\n__Fedora 24 rpm pkg check: Successful__\n__IPv4 protocols on Ubuntu 14.04: Successful__\n__Debian 9 deb pkg check: Successful__\n__Static analyzer (clang): Successful__\n\n\n#### Topology tests on Ubuntu 18.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1804-6327/test\n\n__Topology Tests failed for Topology tests on Ubuntu 18.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 18:34:55,206 ERROR: ******************************************************************************\n    2019-01-07 18:34:55,206 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 18:34:55,206 ERROR: ******************************************************************************\n    2019-01-07 18:34:55,206 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 18:34:55,206 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 18:34:55,206 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 18:34:55,206 ERROR: FILE: scripts/check_close.py\n    2019-01-07 18:34:55,206 ERROR: 46   r3     Out of holddown +10.66 secs                              0    1\n    2019-01-07 18:34:55,207 ERROR: 47   r4     Out of holddown +10.56 secs                              0    1\n    2019-01-07 18:34:55,207 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 18:34:55,209 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 18:36:40,083 ERROR: ******************************************************************************\n    2019-01-07 18:36:40,084 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 18:36:40,084 ERROR: ******************************************************************************\n    2019-01-07 18:36:40,084 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 18:36:40,084 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 18:36:40,084 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 18:36:40,085 ERROR: FILE: scripts/check_close.py\n    2019-01-07 18:36:40,085 ERROR: 46   r3     Out of holddown +10.59 secs                              0    1\n    2019-01-07 18:36:40,085 ERROR: 47   r4     Out of holddown +10.01 secs                              0    1\n    2019-01-07 18:36:40,085 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 18:36:40,086 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1804/ErrorLog/log_topotests.txt\n\n#### Topology tests on Ubuntu 16.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1604-6327/test\n\n__Topology Tests failed for Topology tests on Ubuntu 16.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 10:35:16,685 ERROR: ******************************************************************************\n    2019-01-07 10:35:16,686 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 10:35:16,686 ERROR: ******************************************************************************\n    2019-01-07 10:35:16,686 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 10:35:16,686 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 10:35:16,686 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 10:35:16,686 ERROR: FILE: scripts/check_close.py\n    2019-01-07 10:35:16,686 ERROR: 46   r3     Out of holddown +10.27 secs                              0    1\n    2019-01-07 10:35:16,686 ERROR: 47   r4     Out of holddown +10.33 secs                              0    1\n    2019-01-07 10:35:16,687 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 10:35:16,690 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 10:36:50,395 ERROR: ******************************************************************************\n    2019-01-07 10:36:50,396 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 10:36:50,396 ERROR: ******************************************************************************\n    2019-01-07 10:36:50,396 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 10:36:50,396 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 10:36:50,397 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 10:36:50,397 ERROR: FILE: scripts/check_close.py\n    2019-01-07 10:36:50,397 ERROR: 46   r3     Out of holddown +10.23 secs                              0    1\n    2019-01-07 10:36:50,397 ERROR: 47   r4     Out of holddown +10.25 secs                              0    1\n    2019-01-07 10:36:50,397 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 10:36:50,400 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1604/ErrorLog/log_topotests.txt\n\n#### Topotest tests on Ubuntu 16.04 i386: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOI386-6327/test\n\n__Topology Tests failed for Topotest tests on Ubuntu 16.04 i386__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 10:35:07,943 ERROR: ******************************************************************************\n    2019-01-07 10:35:07,944 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 10:35:07,944 ERROR: ******************************************************************************\n    2019-01-07 10:35:07,944 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 10:35:07,944 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 10:35:07,944 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 10:35:07,944 ERROR: FILE: scripts/check_close.py\n    2019-01-07 10:35:07,944 ERROR: 46   r3     Out of holddown +10.11 secs                              0    1\n    2019-01-07 10:35:07,944 ERROR: 47   r4     Out of holddown +10.17 secs                              0    1\n    2019-01-07 10:35:07,945 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/output.log for details of errors\n    2019-01-07 10:35:07,947 ERROR: assert failed at \"bgp_rfapi_basic_sanity.test_bgp_rfapi_basic_sanity/test_check_close\": 2 tests failed\n    2019-01-07 10:36:41,323 ERROR: ******************************************************************************\n    2019-01-07 10:36:41,324 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 10:36:41,324 ERROR: ******************************************************************************\n    2019-01-07 10:36:41,324 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 10:36:41,324 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 10:36:41,324 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 10:36:41,324 ERROR: FILE: scripts/check_close.py\n    2019-01-07 10:36:41,324 ERROR: 46   r3     Out of holddown +10.17 secs                              0    1\n    2019-01-07 10:36:41,324 ERROR: 47   r4     Out of holddown +10.16 secs                              0    1\n    2019-01-07 10:36:41,324 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 10:36:41,326 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    *** defaultIntf: warning: lm has no interfaces\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOI386/ErrorLog/log_topotests.txt\n\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1804/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOU1604/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/TOPOI386/MemoryLeaks/\n-----------------------------\n## Warnings Generated during build:\n\n\n### Ubuntu 16.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI014BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 18.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 18.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/U1804AMD64/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 4 tags overridden (3 warnings, 1 info)\n\n\n### Ubuntu 16.04 i386 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 i386 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/U1604I386/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 8 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 8 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI008BLD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 9 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 9 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI021BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 14.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 14.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6327/artifact/CI001BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n-----------------------------\n### CLANG Static Analyzer Summary\n- Github Pull Request 3575, comparing to Git base SHA e82d19a\n- Base image data for Git e82d19a does not exist - compare skipped\n",
      "## &#x1F49A; Basic BGPD CI results: SUCCESS, 0 tests failed\n\n<details>\n<summary>Results table</summary>\n\n_|_\n-|-\nResult               | SUCCESS git merge/3575 ef9aee14\nDate                 | 01/07/2019\nStart                | 15:30:36\nFinish               | 15:54:16\nRun-Time             | 23:40\nTotal                | 1813\nPass                 | 1813\nFail                 | 0\nValgrind-Errors      | 0\nValgrind-Loss        | 0\nDetails              | vncregress-2019-01-07-15:30:36.txt\nLog                  | autoscript-2019-01-07-15:31:20.log.bz2\n\nFor details, please contact louberger\n\n</details>",
      "# Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/\n\nThis is a comment from an EXPERIMENTAL automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n## Get source and apply patch from patchwork: Successful\n\n## Building Stage: Successful\n\n## Basic Tests: Failed\n__CentOS 6 rpm pkg check: Successful__\n__Static analyzer (clang): Successful__\n__IPv6 protocols on Ubuntu 14.04: Successful__\n__Ubuntu 16.04 deb pkg check: Successful__\n__Ubuntu 12.04 deb pkg check: Successful__\n__Fedora 24 rpm pkg check: Successful__\n__CentOS 7 rpm pkg check: Successful__\n__Addresssanitizer topotest: Successful__\n__Debian 8 deb pkg check: Successful__\n__IPv4 protocols on Ubuntu 14.04: Successful__\n__IPv4 ldp protocol on Ubuntu 16.04: Successful__\n__Debian 9 deb pkg check: Successful__\n__Ubuntu 14.04 deb pkg check: Successful__\n\n\n#### Topology tests on Ubuntu 18.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1804-6334/test\n\n__Topology Tests failed for Topology tests on Ubuntu 18.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 20:36:04,752 ERROR: ******************************************************************************\n    2019-01-07 20:36:04,753 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 20:36:04,753 ERROR: ******************************************************************************\n    2019-01-07 20:36:04,753 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 20:36:04,753 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 20:36:04,753 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 20:36:04,753 ERROR: FILE: scripts/check_close.py\n    2019-01-07 20:36:04,753 ERROR: 46   r3     Out of holddown +10.03 secs                              0    1\n    2019-01-07 20:36:04,753 ERROR: 47   r4     Out of holddown +10.08 secs                              0    1\n    2019-01-07 20:36:04,753 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 20:36:04,755 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOU1804/ErrorLog/log_topotests.txt\n\n#### Topotest tests on Ubuntu 16.04 i386: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOI386-6334/test\n\n__Topology Tests failed for Topotest tests on Ubuntu 16.04 i386__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 12:36:09,814 ERROR: ******************************************************************************\n    2019-01-07 12:36:09,815 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 12:36:09,815 ERROR: ******************************************************************************\n    2019-01-07 12:36:09,815 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 12:36:09,815 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 12:36:09,815 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 12:36:09,815 ERROR: FILE: scripts/check_close.py\n    2019-01-07 12:36:09,815 ERROR: 46   r3     Out of holddown +10.24 secs                              0    1\n    2019-01-07 12:36:09,815 ERROR: 47   r4     Out of holddown +10.15 secs                              0    1\n    2019-01-07 12:36:09,815 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 12:36:09,817 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    *** defaultIntf: warning: lm has no interfaces\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n    RTNETLINK answers: Invalid argument\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOI386/ErrorLog/log_topotests.txt\n\n#### Topology tests on Ubuntu 16.04 amd64: Failed\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-TOPOU1604-6334/test\n\n__Topology Tests failed for Topology tests on Ubuntu 16.04 amd64__:\n\n    *** defaultIntf: warning: r1 has no interfaces\n    2019-01-07 12:36:23,631 ERROR: ******************************************************************************\n    2019-01-07 12:36:23,632 ERROR: Test Target Summary                                                  Pass Fail\n    2019-01-07 12:36:23,632 ERROR: ******************************************************************************\n    2019-01-07 12:36:23,632 ERROR: FILE: scripts/add_routes.py\n    2019-01-07 12:36:23,632 ERROR: FILE: scripts/adjacencies.py\n    2019-01-07 12:36:23,632 ERROR: FILE: scripts/check_routes.py\n    2019-01-07 12:36:23,632 ERROR: FILE: scripts/check_close.py\n    2019-01-07 12:36:23,632 ERROR: 46   r3     Out of holddown +10.12 secs                              0    1\n    2019-01-07 12:36:23,632 ERROR: 47   r4     Out of holddown +10.09 secs                              0    1\n    2019-01-07 12:36:23,632 ERROR: See /tmp/topotests/bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/output.log for details of errors\n    2019-01-07 12:36:23,635 ERROR: assert failed at \"bgp_rfapi_basic_sanity_config2.test_bgp_rfapi_basic_sanity_config2/test_check_close\": 2 tests failed\n    *** defaultIntf: warning: lm has no interfaces\n\n   see full log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOU1604/ErrorLog/log_topotests.txt\n\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOU1804/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOI386/MemoryLeaks/\n__Topology Tests memory analysis:__ https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/TOPOU1604/MemoryLeaks/\n-----------------------------\n## Warnings Generated during build:\n\n\n### Debian 8 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 8 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/CI008BLD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 16.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/CI014BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 18.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 18.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/U1804AMD64/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 4 tags overridden (3 warnings, 1 info)\n\n\n### Debian 9 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 9 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/CI021BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 14.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 14.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/CI001BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 16.04 i386 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 i386 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6334/artifact/U1604I386/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n-----------------------------\n### CLANG Static Analyzer Summary\n- Github Pull Request 3575, comparing to Git base SHA e82d19a\n#### No Changes in Static Analysis warnings compared to base\n",
      "## &#x1F49A; Basic BGPD CI results: SUCCESS, 0 tests failed\n\n<details>\n<summary>Results table</summary>\n\n_|_\n-|-\nResult               | SUCCESS git merge/3575 e3d16a4f\nDate                 | 01/07/2019\nStart                | 17:20:36\nFinish               | 17:44:32\nRun-Time             | 23:56\nTotal                | 1813\nPass                 | 1813\nFail                 | 0\nValgrind-Errors      | 0\nValgrind-Loss        | 0\nDetails              | vncregress-2019-01-07-17:20:36.txt\nLog                  | autoscript-2019-01-07-17:21:28.log.bz2\n\nFor details, please contact louberger\n\n</details>",
      "# Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/\n\nThis is a comment from an EXPERIMENTAL automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n-----------------------------\n## Warnings Generated during build:\n\n\n### Ubuntu 14.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 14.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/CI001BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 8 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 8 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/CI008BLD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Debian 9 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Debian 9 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/CI021BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 16.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/CI014BUILD/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n### Ubuntu 18.04 amd64 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 18.04 amd64 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/U1804AMD64/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 4 tags overridden (3 warnings, 1 info)\n\n\n### Ubuntu 16.04 i386 build: Successful with additional warnings:\n__Debian Package lintian failed for Ubuntu 16.04 i386 build__:\n    (see full package build log at https://ci1.netdef.org/browse/FRR-FRRPULLREQ-6337/artifact/U1604I386/ErrorLog/log_lintian.txt)\n\n    W: frr: package-name-doesnt-match-sonames libfrr0 libfrrospfapiclient0\n    N: 3 tags overridden (3 warnings)\n\n\n-----------------------------\n### CLANG Static Analyzer Summary\n- Github Pull Request 3575, comparing to Git base SHA e82d19a\n#### No Changes in Static Analysis warnings compared to base\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.8"
}