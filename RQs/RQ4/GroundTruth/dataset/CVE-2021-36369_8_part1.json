{
  "cve_id": "CVE-2021-36369",
  "cwe_ids": [
    "CWE-287"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
  "cvss_is_v3": true,
  "repo_name": "mkj/dropbear",
  "commit_msg": "added option to disable trivial auth methods",
  "commit_hash": "7c2e8fcd0d162d2ba9fac116f96a5e82ac77f11c",
  "git_url": "https://github.com/mkj/dropbear/commit/7c2e8fcd0d162d2ba9fac116f96a5e82ac77f11c",
  "file_path": "cli-session.c",
  "func_name": "cli_session_init",
  "func_before": "static void cli_session_init(pid_t proxy_cmd_pid) {\n\n\tcli_ses.state = STATE_NOTHING;\n\tcli_ses.kex_state = KEX_NOTHING;\n\n\tcli_ses.tty_raw_mode = 0;\n\tcli_ses.winchange = 0;\n\n\t/* We store std{in,out,err}'s flags, so we can set them back on exit\n\t * (otherwise busybox's ash isn't happy */\n\tcli_ses.stdincopy = dup(STDIN_FILENO);\n\tcli_ses.stdinflags = fcntl(STDIN_FILENO, F_GETFL, 0);\n\tcli_ses.stdoutcopy = dup(STDOUT_FILENO);\n\tcli_ses.stdoutflags = fcntl(STDOUT_FILENO, F_GETFL, 0);\n\tcli_ses.stderrcopy = dup(STDERR_FILENO);\n\tcli_ses.stderrflags = fcntl(STDERR_FILENO, F_GETFL, 0);\n\n\tcli_ses.retval = EXIT_SUCCESS; /* Assume it's clean if we don't get a\n\t\t\t\t\t\t\t\t\t  specific exit status */\n\tcli_ses.proxy_cmd_pid = proxy_cmd_pid;\n\tTRACE((\"proxy command PID='%d'\", proxy_cmd_pid));\n\n\t/* Auth */\n\tcli_ses.lastprivkey = NULL;\n\tcli_ses.lastauthtype = 0;\n\n\t/* For printing \"remote host closed\" for the user */\n\tses.remoteclosed = cli_remoteclosed;\n\n\tses.extra_session_cleanup = cli_session_cleanup;\n\n\t/* packet handlers */\n\tses.packettypes = cli_packettypes;\n\n\tses.isserver = 0;\n\n#if DROPBEAR_KEX_FIRST_FOLLOWS\n\tses.send_kex_first_guess = cli_send_kex_first_guess;\n#endif\n\n}",
  "abstract_func_before": "static void cli_session_init(pid_t VAR_0) {\n\n\tVAR_1.state = VAR_2;\n\tVAR_1.kex_state = VAR_3;\n\n\tVAR_1.tty_raw_mode = 0;\n\tVAR_1.winchange = 0;\n\n\t/* COMMENT_0 */\n                                           \n\tVAR_1.stdincopy = dup(VAR_4);\n\tVAR_1.stdinflags = fcntl(VAR_4, VAR_5, 0);\n\tVAR_1.stdoutcopy = dup(VAR_6);\n\tVAR_1.stdoutflags = fcntl(VAR_6, VAR_5, 0);\n\tVAR_1.stderrcopy = dup(VAR_7);\n\tVAR_1.stderrflags = fcntl(VAR_7, VAR_5, 0);\n\n\tVAR_1.retval = VAR_8; /* COMMENT_2 */\n                                  \n\tVAR_1.proxy_cmd_pid = VAR_0;\n\tTRACE((\"proxy command PID='%d'\", VAR_0));\n\n\t/* COMMENT_4 */\n\tVAR_1.lastprivkey = NULL;\n\tVAR_1.lastauthtype = 0;\n\n\t/* COMMENT_5 */\n\tVAR_9.remoteclosed = VAR_10;\n\n\tVAR_9.extra_session_cleanup = VAR_11;\n\n\t/* COMMENT_6 */\n\tVAR_9.packettypes = VAR_12;\n\n\tVAR_9.isserver = 0;\n\n#if VAR_13\n\tVAR_9.send_kex_first_guess = VAR_14;\n#endif\n\n}",
  "func_graph_path_before": "mkj/dropbear/7c2e8fcd0d162d2ba9fac116f96a5e82ac77f11c/cli-session.c/vul/before/0.json",
  "func": "static void cli_session_init(pid_t proxy_cmd_pid) {\n\n\tcli_ses.state = STATE_NOTHING;\n\tcli_ses.kex_state = KEX_NOTHING;\n\n\tcli_ses.tty_raw_mode = 0;\n\tcli_ses.winchange = 0;\n\n\t/* We store std{in,out,err}'s flags, so we can set them back on exit\n\t * (otherwise busybox's ash isn't happy */\n\tcli_ses.stdincopy = dup(STDIN_FILENO);\n\tcli_ses.stdinflags = fcntl(STDIN_FILENO, F_GETFL, 0);\n\tcli_ses.stdoutcopy = dup(STDOUT_FILENO);\n\tcli_ses.stdoutflags = fcntl(STDOUT_FILENO, F_GETFL, 0);\n\tcli_ses.stderrcopy = dup(STDERR_FILENO);\n\tcli_ses.stderrflags = fcntl(STDERR_FILENO, F_GETFL, 0);\n\n\tcli_ses.retval = EXIT_SUCCESS; /* Assume it's clean if we don't get a\n\t\t\t\t\t\t\t\t\t  specific exit status */\n\tcli_ses.proxy_cmd_pid = proxy_cmd_pid;\n\tTRACE((\"proxy command PID='%d'\", proxy_cmd_pid));\n\n\t/* Auth */\n\tcli_ses.lastprivkey = NULL;\n\tcli_ses.lastauthtype = 0;\n\tcli_ses.is_trivial_auth = 1;\n\n\t/* For printing \"remote host closed\" for the user */\n\tses.remoteclosed = cli_remoteclosed;\n\n\tses.extra_session_cleanup = cli_session_cleanup;\n\n\t/* packet handlers */\n\tses.packettypes = cli_packettypes;\n\n\tses.isserver = 0;\n\n#if DROPBEAR_KEX_FIRST_FOLLOWS\n\tses.send_kex_first_guess = cli_send_kex_first_guess;\n#endif\n\n}",
  "abstract_func": "static void cli_session_init(pid_t VAR_0) {\n\n\tVAR_1.state = VAR_2;\n\tVAR_1.kex_state = VAR_3;\n\n\tVAR_1.tty_raw_mode = 0;\n\tVAR_1.winchange = 0;\n\n\t/* COMMENT_0 */\n                                           \n\tVAR_1.stdincopy = dup(VAR_4);\n\tVAR_1.stdinflags = fcntl(VAR_4, VAR_5, 0);\n\tVAR_1.stdoutcopy = dup(VAR_6);\n\tVAR_1.stdoutflags = fcntl(VAR_6, VAR_5, 0);\n\tVAR_1.stderrcopy = dup(VAR_7);\n\tVAR_1.stderrflags = fcntl(VAR_7, VAR_5, 0);\n\n\tVAR_1.retval = VAR_8; /* COMMENT_2 */\n                                  \n\tVAR_1.proxy_cmd_pid = VAR_0;\n\tTRACE((\"proxy command PID='%d'\", VAR_0));\n\n\t/* COMMENT_4 */\n\tVAR_1.lastprivkey = NULL;\n\tVAR_1.lastauthtype = 0;\n\tVAR_1.is_trivial_auth = 1;\n\n\t/* COMMENT_5 */\n\tVAR_9.remoteclosed = VAR_10;\n\n\tVAR_9.extra_session_cleanup = VAR_11;\n\n\t/* COMMENT_6 */\n\tVAR_9.packettypes = VAR_12;\n\n\tVAR_9.isserver = 0;\n\n#if VAR_13\n\tVAR_9.send_kex_first_guess = VAR_14;\n#endif\n\n}",
  "func_graph_path": "mkj/dropbear/7c2e8fcd0d162d2ba9fac116f96a5e82ac77f11c/cli-session.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -23,6 +23,7 @@\n \t/* Auth */\n \tcli_ses.lastprivkey = NULL;\n \tcli_ses.lastauthtype = 0;\n+\tcli_ses.is_trivial_auth = 1;\n \n \t/* For printing \"remote host closed\" for the user */\n \tses.remoteclosed = cli_remoteclosed;",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\tcli_ses.is_trivial_auth = 1;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/mkj/dropbear/pull/128",
  "description": {
    "pr_info": {
      "title": "added option to disable trivial auth methods",
      "number": 128
    },
    "comment": [
      "I have added an option ``-o ExitOnTrivialAuth=yes`` to disable trivial authentications as discussed in our mails",
      "I have renamed to argument to ``-o DisableTrivialAuth=yes`` to match OpenSSH's parameter",
      "Would you merge this pull request, because we are planning to create a CVE and I think this should be mitigated before we publish a full disclosure. ",
      "Hello, we are planning to release information about trivial succes authentication. Do you need help with merging the pull requests and creating the new release?"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}