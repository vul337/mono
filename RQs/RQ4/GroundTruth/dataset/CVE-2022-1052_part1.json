{
  "cve_id": "CVE-2022-1052",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix heap OOB read in macho.iterate_chained_fixups ##crash\n\n* Reported by peacock-doris via huntr.dev\r\n* Reproducer 'tests_65305'\r\n\r\nmrmacete:\r\n* Return early if segs_count is 0\r\n* Initialize segs_count also for reconstructed fixups\r\n\r\nCo-authored-by: pancake <pancake@nopcode.org>\r\nCo-authored-by: Francesco Tamagni <mrmacete@protonmail.ch>",
  "commit_hash": "0052500c1ed5bf8263b26b9fd7773dbdc6f170c4",
  "git_url": "https://github.com/radareorg/radare2/commit/0052500c1ed5bf8263b26b9fd7773dbdc6f170c4",
  "file_path": "libr/core/cmd_api.c",
  "func_name": "r_cmd_alias_get",
  "func_before": "R_API RCmdAliasVal *r_cmd_alias_get(RCmd *cmd, const char *k) {\n\tr_return_val_if_fail (cmd && cmd->aliases && k, NULL);\n\treturn ht_pp_find(cmd->aliases, k, NULL);\n}",
  "abstract_func_before": "R_API RCmdAliasVal *r_cmd_alias_get(RCmd *VAR_0, const char *VAR_1) {\n\tr_return_val_if_fail (VAR_0 && VAR_0->aliases && VAR_1, NULL);\n\treturn ht_pp_find(VAR_0->aliases, VAR_1, NULL);\n}",
  "func_graph_path_before": null,
  "func": "R_API RCmdAliasVal *r_cmd_alias_get(RCmd *cmd, const char *k) {\n\tr_return_val_if_fail (cmd && cmd->aliases && k, NULL);\n\treturn ht_pp_find (cmd->aliases, k, NULL);\n}",
  "abstract_func": "R_API RCmdAliasVal *r_cmd_alias_get(RCmd *VAR_0, const char *VAR_1) {\n\tr_return_val_if_fail (VAR_0 && VAR_0->aliases && VAR_1, NULL);\n\treturn ht_pp_find (VAR_0->aliases, VAR_1, NULL);\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,4 @@\n R_API RCmdAliasVal *r_cmd_alias_get(RCmd *cmd, const char *k) {\n \tr_return_val_if_fail (cmd && cmd->aliases && k, NULL);\n-\treturn ht_pp_find(cmd->aliases, k, NULL);\n+\treturn ht_pp_find (cmd->aliases, k, NULL);\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\treturn ht_pp_find(cmd->aliases, k, NULL);"
    ],
    "added_lines": [
      "\treturn ht_pp_find (cmd->aliases, k, NULL);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/19859",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/radareorg/radare2/pull/19859: 403 Client Error: Forbidden for url: https://api.github.com/repos/radareorg/radare2/pulls/19859",
  "Bug Filter": "Supporting & Non-Core Improvements",
  "Bug Filter Confidence": 0.4,
  "Bug Filter Response": "**Final Output:**\n\n**Final Classification:** Supporting & Non-Core Improvements  \n**Confidence:** 0.4  \n\nStep-by-Step Explanation:\n\n1. **Input Analysis**: The commit message indicates a security fix for a heap OOB read, reported via huntr.dev. The code diff, however, modifies a different function with only a minor formatting change, unrelated to heap operations.\n\n2. **Consistency Check**: The code changes do not align with the commit message's security focus, indicating inconsistency.\n\n3. **Purpose Evaluation**: The code change is a trivial formatting edit, suggesting it's a supporting improvement rather than a security fix.\n\n4. **Security Vulnerability Assessment**: Despite references to security platforms, the absence of CVE identifiers and the unrelated code changes undermine the security classification.\n\n5. **Non-Security Classification**: The minimal code change falls under \"Supporting & Non-Core Improvements.\"\n\n6. **Confidence Scoring**: Low confidence due to the discrepancy between the commit message and code changes."
}