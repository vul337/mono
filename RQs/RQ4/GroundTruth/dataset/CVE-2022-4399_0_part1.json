{
  "cve_id": "CVE-2022-4399",
  "cwe_ids": [
    "CWE-89"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "TicklishHoneyBee/nodau",
  "commit_msg": "Use parametetrized SQL statement\n\nMove to parametetrized SQL statement allows using chars like \"'\" in\nnotes and also avoid sql injection",
  "commit_hash": "7a7d737a3929f335b9717ddbd31db91151b69ad2",
  "git_url": "https://github.com/TicklishHoneyBee/nodau/commit/7a7d737a3929f335b9717ddbd31db91151b69ad2",
  "file_path": "src/edit.c",
  "func_name": "edit_ext",
  "func_before": "static int edit_ext(char* editor, char* name, char* date, char* data)\n{\n\tint fd;\n\tint st;\n\tint sz;\n\tchar* b;\n\tchar* l;\n\tchar buff[512];\n\tpid_t pid;\n\n\tstrcpy(buff,\"/tmp/nodau.XXXXXX\");\n\tfd = mkstemp(buff);\n\n\tif (fd < 0)\n\t\treturn 1;\n\n\tpid = fork();\n\n\tif (pid < 0) {\n\t\treturn 1;\n\t}else if (pid) {\n\t\tclose(fd);\n\t\twaitpid(pid,&st,0);\n\t\tif (!st) {\n\t\t\tif ((fd = open(buff,O_RDONLY)) < 0)\n\t\t\t\treturn 1;\n\t\t\t/* find the file length */\n\t\t\tsz = lseek(fd,0,SEEK_END);\n\t\t\tlseek(fd,0,SEEK_SET);\n\t\t\tif (sz) {\n\t\t\t\t/* load the note into memory */\n\t\t\t\tb = alloca(sz+1);\n\t\t\t\tif (sz != read(fd,b,sz))\n\t\t\t\t\treturn 1;\n\t\t\t\tclose(fd);\n\t\t\t\t/* delete the file */\n\t\t\t\tremove(buff);\n\t\t\t\tb[sz] = 0;\n\t\t\t\t/* find the note data */\n\t\t\t\tl = strstr(b,\"-----\");\n\t\t\t\tif (l) {\n\t\t\t\t\t/* save the note */\n\t\t\t\t\tl += 6;\n\t\t\t\t\tif (db_update(name,l))\n\t\t\t\t\t\treturn 1;\n\n\t\t\t\t\t/* let the user know */\n\t\t\t\t\tprintf(\"%s saved\\n\",name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn st;\n\t}\n\n\tsz = strlen(name)+strlen(date)+strlen(data)+50;\n\tb = alloca(sz);\n\n\t/* insert data into file */\n\tsz = sprintf(\n\t\tb,\n\t\t\"%s (%s)\\nText above this line is ignored\\n-----\\n%s\",\n\t\tname,\n\t\tdate,\n\t\tdata\n\t);\n\tif (write(fd,b,sz) != sz) {\n\t\texit(1);\n\t}\n\tfsync(fd);\n\tclose(fd);\n\n\tst = execl(editor,editor,buff,(char*)NULL);\n\n\t/* we should only ever get here if something goes wrong with exec */\n\texit(st);\n\n\t/* and we shouldn't ever get here, but it stops the compiler complaining */\n\treturn 1;\n}",
  "abstract_func_before": "static int edit_ext(char* VAR_0, char* VAR_1, char* VAR_2, char* VAR_3)\n{\n\tint VAR_4;\n\tint VAR_5;\n\tint VAR_6;\n\tchar* VAR_7;\n\tchar* VAR_8;\n\tchar VAR_9[512];\n\tpid_t VAR_10;\n\n\tstrcpy(VAR_9,\"/tmp/nodau.XXXXXX\");\n\tVAR_4 = mkstemp(VAR_9);\n\n\tif (VAR_4 < 0)\n\t\treturn 1;\n\n\tVAR_10 = fork();\n\n\tif (VAR_10 < 0) {\n\t\treturn 1;\n\t}else if (VAR_10) {\n\t\tclose(VAR_4);\n\t\twaitpid(VAR_10,&VAR_5,0);\n\t\tif (!VAR_5) {\n\t\t\tif ((VAR_4 = open(VAR_9,VAR_11)) < 0)\n\t\t\t\treturn 1;\n\t\t\t/* COMMENT_0 */\n\t\t\tVAR_6 = lseek(VAR_4,0,VAR_12);\n\t\t\tlseek(VAR_4,0,VAR_13);\n\t\t\tif (VAR_6) {\n\t\t\t\t/* COMMENT_1 */\n\t\t\t\tVAR_7 = alloca(VAR_6+1);\n\t\t\t\tif (VAR_6 != read(VAR_4,VAR_7,VAR_6))\n\t\t\t\t\treturn 1;\n\t\t\t\tclose(VAR_4);\n\t\t\t\t/* COMMENT_2 */\n\t\t\t\tremove(VAR_9);\n\t\t\t\tVAR_7[VAR_6] = 0;\n\t\t\t\t/* COMMENT_3 */\n\t\t\t\tVAR_8 = strstr(VAR_7,\"-----\");\n\t\t\t\tif (VAR_8) {\n\t\t\t\t\t/* COMMENT_4 */\n\t\t\t\t\tVAR_8 += 6;\n\t\t\t\t\tif (db_update(VAR_1,VAR_8))\n\t\t\t\t\t\treturn 1;\n\n\t\t\t\t\t/* COMMENT_5 */\n\t\t\t\t\tprintf(\"%s saved\\n\",VAR_1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn VAR_5;\n\t}\n\n\tVAR_6 = strlen(VAR_1)+strlen(VAR_2)+strlen(VAR_3)+50;\n\tVAR_7 = alloca(VAR_6);\n\n\t/* COMMENT_6 */\n\tVAR_6 = sprintf(\n\t\tVAR_7,\n\t\t\"%s (%s)\\nText above this line is ignored\\n-----\\n%s\",\n\t\tVAR_1,\n\t\tVAR_2,\n\t\tVAR_3\n\t);\n\tif (write(VAR_4,VAR_7,VAR_6) != VAR_6) {\n\t\texit(1);\n\t}\n\tfsync(VAR_4);\n\tclose(VAR_4);\n\n\tVAR_5 = execl(VAR_0,VAR_0,VAR_9,(char*)NULL);\n\n\t/* COMMENT_7 */\n\texit(VAR_5);\n\n\t/* COMMENT_8 */\n\treturn 1;\n}",
  "func_graph_path_before": "TicklishHoneyBee/nodau/7a7d737a3929f335b9717ddbd31db91151b69ad2/edit.c/vul/before/0.json",
  "func": "static int edit_ext(char* editor, char* name, char* date, char* data)\n{\n\tint fd;\n\tint st;\n\tint sz;\n\tchar* b;\n\tchar* l;\n\tchar buff[512];\n\tpid_t pid;\n\n\tstrcpy(buff,\"/tmp/nodau.XXXXXX\");\n\tfd = mkstemp(buff);\n\n\tif (fd < 0)\n\t\treturn 1;\n\n\tpid = fork();\n\n\tif (pid < 0) {\n\t\treturn 1;\n\t}else if (pid) {\n\t\tclose(fd);\n\t\twaitpid(pid,&st,0);\n\t\tif (!st) {\n\t\t\tif ((fd = open(buff,O_RDONLY)) < 0)\n\t\t\t\treturn 1;\n\t\t\t/* find the file length */\n\t\t\tsz = lseek(fd,0,SEEK_END);\n\t\t\tlseek(fd,0,SEEK_SET);\n\t\t\tif (sz) {\n\t\t\t\t/* load the note into memory */\n\t\t\t\tb = alloca(sz+1);\n\t\t\t\tif (sz != read(fd,b,sz))\n\t\t\t\t\treturn 1;\n\t\t\t\tclose(fd);\n\t\t\t\t/* delete the file */\n\t\t\t\tremove(buff);\n\t\t\t\tb[sz] = 0;\n\t\t\t\t/* find the note data */\n\t\t\t\tl = strstr(b,\"-----\");\n\t\t\t\tif (l) {\n\t\t\t\t\t/* save the note */\n\t\t\t\t\tl += 6;\n\t\t\t\t\tint r = db_update(name,l);\n\t\t\t\t\tif (r != SQLITE_DONE && r != SQLITE_OK)\n\t\t\t\t\t\treturn 1;\n\n\t\t\t\t\t/* let the user know */\n\t\t\t\t\tprintf(\"%s saved\\n\",name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn st;\n\t}\n\n\tsz = strlen(name)+strlen(date)+strlen(data)+50;\n\tb = alloca(sz);\n\n\t/* insert data into file */\n\tsz = sprintf(\n\t\tb,\n\t\t\"%s (%s)\\nText above this line is ignored\\n-----\\n%s\",\n\t\tname,\n\t\tdate,\n\t\tdata\n\t);\n\tif (write(fd,b,sz) != sz) {\n\t\texit(1);\n\t}\n\tfsync(fd);\n\tclose(fd);\n\n\tst = execl(editor,editor,buff,(char*)NULL);\n\n\t/* we should only ever get here if something goes wrong with exec */\n\texit(st);\n\n\t/* and we shouldn't ever get here, but it stops the compiler complaining */\n\treturn 1;\n}",
  "abstract_func": "static int edit_ext(char* VAR_0, char* VAR_1, char* VAR_2, char* VAR_3)\n{\n\tint VAR_4;\n\tint VAR_5;\n\tint VAR_6;\n\tchar* VAR_7;\n\tchar* VAR_8;\n\tchar VAR_9[512];\n\tpid_t VAR_10;\n\n\tstrcpy(VAR_9,\"/tmp/nodau.XXXXXX\");\n\tVAR_4 = mkstemp(VAR_9);\n\n\tif (VAR_4 < 0)\n\t\treturn 1;\n\n\tVAR_10 = fork();\n\n\tif (VAR_10 < 0) {\n\t\treturn 1;\n\t}else if (VAR_10) {\n\t\tclose(VAR_4);\n\t\twaitpid(VAR_10,&VAR_5,0);\n\t\tif (!VAR_5) {\n\t\t\tif ((VAR_4 = open(VAR_9,VAR_11)) < 0)\n\t\t\t\treturn 1;\n\t\t\t/* COMMENT_0 */\n\t\t\tVAR_6 = lseek(VAR_4,0,VAR_12);\n\t\t\tlseek(VAR_4,0,VAR_13);\n\t\t\tif (VAR_6) {\n\t\t\t\t/* COMMENT_1 */\n\t\t\t\tVAR_7 = alloca(VAR_6+1);\n\t\t\t\tif (VAR_6 != read(VAR_4,VAR_7,VAR_6))\n\t\t\t\t\treturn 1;\n\t\t\t\tclose(VAR_4);\n\t\t\t\t/* COMMENT_2 */\n\t\t\t\tremove(VAR_9);\n\t\t\t\tVAR_7[VAR_6] = 0;\n\t\t\t\t/* COMMENT_3 */\n\t\t\t\tVAR_8 = strstr(VAR_7,\"-----\");\n\t\t\t\tif (VAR_8) {\n\t\t\t\t\t/* COMMENT_4 */\n\t\t\t\t\tVAR_8 += 6;\n\t\t\t\t\tint VAR_14 = db_update(VAR_1,VAR_8);\n\t\t\t\t\tif (VAR_14 != VAR_15 && VAR_14 != VAR_16)\n\t\t\t\t\t\treturn 1;\n\n\t\t\t\t\t/* COMMENT_5 */\n\t\t\t\t\tprintf(\"%s saved\\n\",VAR_1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn VAR_5;\n\t}\n\n\tVAR_6 = strlen(VAR_1)+strlen(VAR_2)+strlen(VAR_3)+50;\n\tVAR_7 = alloca(VAR_6);\n\n\t/* COMMENT_6 */\n\tVAR_6 = sprintf(\n\t\tVAR_7,\n\t\t\"%s (%s)\\nText above this line is ignored\\n-----\\n%s\",\n\t\tVAR_1,\n\t\tVAR_2,\n\t\tVAR_3\n\t);\n\tif (write(VAR_4,VAR_7,VAR_6) != VAR_6) {\n\t\texit(1);\n\t}\n\tfsync(VAR_4);\n\tclose(VAR_4);\n\n\tVAR_5 = execl(VAR_0,VAR_0,VAR_9,(char*)NULL);\n\n\t/* COMMENT_7 */\n\texit(VAR_5);\n\n\t/* COMMENT_8 */\n\treturn 1;\n}",
  "func_graph_path": "TicklishHoneyBee/nodau/7a7d737a3929f335b9717ddbd31db91151b69ad2/edit.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -41,7 +41,8 @@\n \t\t\t\tif (l) {\n \t\t\t\t\t/* save the note */\n \t\t\t\t\tl += 6;\n-\t\t\t\t\tif (db_update(name,l))\n+\t\t\t\t\tint r = db_update(name,l);\n+\t\t\t\t\tif (r != SQLITE_DONE && r != SQLITE_OK)\n \t\t\t\t\t\treturn 1;\n \n \t\t\t\t\t/* let the user know */",
  "diff_line_info": {
    "deleted_lines": [
      "\t\t\t\t\tif (db_update(name,l))"
    ],
    "added_lines": [
      "\t\t\t\t\tint r = db_update(name,l);",
      "\t\t\t\t\tif (r != SQLITE_DONE && r != SQLITE_OK)"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/TicklishHoneyBee/nodau/pull/26",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/TicklishHoneyBee/nodau/pull/26: 403 Client Error: Forbidden for url: https://api.github.com/repos/TicklishHoneyBee/nodau/pulls/26",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9\n\nThe commit message clearly states the intention to fix a security issue by using parametrized SQL to prevent SQL injection. The code diff modifies the database update error handling, which supports this security fix. The confidence is high as the context aligns well with a security vulnerability."
}