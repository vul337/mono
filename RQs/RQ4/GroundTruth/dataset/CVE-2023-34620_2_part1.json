{
  "cve_id": "CVE-2023-34620",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "hjson/hjson-java",
  "commit_msg": "Fixing vulnerability CVE-2023-34620 in hjson library by adding the implementation of maximum depth while parsing input JSON.",
  "commit_hash": "a16cb6a6078d76ddeaf715059213878d0ec7e057",
  "git_url": "https://github.com/hjson/hjson-java/commit/a16cb6a6078d76ddeaf715059213878d0ec7e057",
  "file_path": "src/main/org/hjson/JsonParser.java",
  "func_name": "readArray",
  "func_before": "private JsonArray readArray() throws IOException {\n    read();\n    JsonArray array=new JsonArray();\n    skipWhiteSpace();\n    if (readIf(']')) {\n      return array;\n    }\n    do {\n      skipWhiteSpace();\n      array.add(readValue());\n      skipWhiteSpace();\n    } while (readIf(','));\n    if (!readIf(']')) {\n      throw expected(\"',' or ']'\");\n    }\n    return array;\n  }",
  "abstract_func_before": "private JsonArray readArray() throws IOException {\n    read();\n    JsonArray VAR_0=new JsonArray();\n    skipWhiteSpace();\n    if (readIf(']')) {\n      return VAR_0;\n    }\n    do {\n      skipWhiteSpace();\n      VAR_0.add(readValue());\n      skipWhiteSpace();\n    } while (readIf(','));\n    if (!readIf(']')) {\n      throw expected(\"',' or ']'\");\n    }\n    return VAR_0;\n  }",
  "func_graph_path_before": "hjson/hjson-java/a16cb6a6078d76ddeaf715059213878d0ec7e057/JsonParser.java/vul/before/1.json",
  "func": "private JsonArray readArray(int depth) throws IOException {\n    read();\n    JsonArray array=new JsonArray();\n    skipWhiteSpace();\n    if (readIf(']')) {\n      return array;\n    }\n    do {\n      skipWhiteSpace();\n      array.add(readValue(depth));\n      skipWhiteSpace();\n    } while (readIf(','));\n    if (!readIf(']')) {\n      throw expected(\"',' or ']'\");\n    }\n    return array;\n  }",
  "abstract_func": "private JsonArray readArray(int VAR_0) throws IOException {\n    read();\n    JsonArray VAR_1=new JsonArray();\n    skipWhiteSpace();\n    if (readIf(']')) {\n      return VAR_1;\n    }\n    do {\n      skipWhiteSpace();\n      VAR_1.add(readValue(VAR_0));\n      skipWhiteSpace();\n    } while (readIf(','));\n    if (!readIf(']')) {\n      throw expected(\"',' or ']'\");\n    }\n    return VAR_1;\n  }",
  "func_graph_path": "hjson/hjson-java/a16cb6a6078d76ddeaf715059213878d0ec7e057/JsonParser.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,4 @@\n-private JsonArray readArray() throws IOException {\n+private JsonArray readArray(int depth) throws IOException {\n     read();\n     JsonArray array=new JsonArray();\n     skipWhiteSpace();\n@@ -7,7 +7,7 @@\n     }\n     do {\n       skipWhiteSpace();\n-      array.add(readValue());\n+      array.add(readValue(depth));\n       skipWhiteSpace();\n     } while (readIf(','));\n     if (!readIf(']')) {",
  "diff_line_info": {
    "deleted_lines": [
      "private JsonArray readArray() throws IOException {",
      "      array.add(readValue());"
    ],
    "added_lines": [
      "private JsonArray readArray(int depth) throws IOException {",
      "      array.add(readValue(depth));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/hjson/hjson-java/pull/26",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/hjson/hjson-java/pull/26: 403 Client Error: Forbidden for url: https://api.github.com/repos/hjson/hjson-java/pulls/26",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0  \n\nThe commit fixes a known CVE-2023-34620 by implementing maximum depth during JSON parsing, which addresses a security issue. The code changes are consistent with the fix, so the confidence is high."
}