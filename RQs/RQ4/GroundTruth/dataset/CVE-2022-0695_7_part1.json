{
  "cve_id": "CVE-2022-0695",
  "cwe_ids": [
    "CWE-400"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix DoS in PE/QNX/DYLDCACHE/PSX parsers ##crash\n\n* Reported by lazymio\n* Reproducer: AAA4AAAAAB4=",
  "commit_hash": "634b886e84a5c568d243e744becc6b3223e089cf",
  "git_url": "https://github.com/radareorg/radare2/commit/634b886e84a5c568d243e744becc6b3223e089cf",
  "file_path": "libr/bin/p/bin_psxexe.c",
  "func_name": "entries",
  "func_before": "static RList* entries(RBinFile* bf) {\n\tRList* ret = NULL;\n\tRBinAddr* addr = NULL;\n\tpsxexe_header psxheader;\n\n\tif (!(ret = r_list_new ())) {\n\t\treturn NULL;\n\t}\n\n\tif (!(addr = R_NEW0 (RBinAddr))) {\n\t\tr_list_free (ret);\n\t\treturn NULL;\n\t}\n\n\tif (r_buf_fread_at (bf->buf, 0, (ut8*)&psxheader, \"8c17i\", 1) < sizeof (psxexe_header)) {\n\t\teprintf (\"PSXEXE Header truncated\\n\");\n\t\tr_list_free (ret);\n\t\tfree (addr);\n\t\treturn NULL;\n\t}\n\n\taddr->paddr = (psxheader.pc0 - psxheader.t_addr) + PSXEXE_TEXTSECTION_OFFSET;\n\taddr->vaddr = psxheader.pc0;\n\n\tr_list_append (ret, addr);\n\treturn ret;\n}",
  "abstract_func_before": "static RList* entries(RBinFile* VAR_0) {\n\tRList* VAR_1 = NULL;\n\tRBinAddr* VAR_2 = NULL;\n\tpsxexe_header VAR_3;\n\n\tif (!(VAR_1 = r_list_new ())) {\n\t\treturn NULL;\n\t}\n\n\tif (!(VAR_2 = R_NEW0 (RBinAddr))) {\n\t\tr_list_free (VAR_1);\n\t\treturn NULL;\n\t}\n\n\tif (r_buf_fread_at (VAR_0->buf, 0, (ut8*)&VAR_3, \"8c17i\", 1) < sizeof (psxexe_header)) {\n\t\teprintf (\"PSXEXE Header truncated\\n\");\n\t\tr_list_free (VAR_1);\n\t\tfree (VAR_2);\n\t\treturn NULL;\n\t}\n\n\tVAR_2->paddr = (VAR_3.pc0 - VAR_3.t_addr) + VAR_4;\n\tVAR_2->vaddr = VAR_3.pc0;\n\n\tr_list_append (VAR_1, VAR_2);\n\treturn VAR_1;\n}",
  "func_graph_path_before": "radareorg/radare2/634b886e84a5c568d243e744becc6b3223e089cf/bin_psxexe.c/vul/before/1.json",
  "func": "static RList* entries(RBinFile* bf) {\n\tRList* ret = NULL;\n\tRBinAddr* addr = NULL;\n\tpsxexe_header psxheader;\n\n\tif (!(ret = r_list_new ())) {\n\t\treturn NULL;\n\t}\n\n\tif (!(addr = R_NEW0 (RBinAddr))) {\n\t\tr_list_free (ret);\n\t\treturn NULL;\n\t}\n\n\tif (r_buf_fread_at (bf->buf, 0, (ut8*)&psxheader, \"8c17i\", 1) != sizeof (psxexe_header)) {\n\t\teprintf (\"PSXEXE Header truncated\\n\");\n\t\tr_list_free (ret);\n\t\tfree (addr);\n\t\treturn NULL;\n\t}\n\n\taddr->paddr = (psxheader.pc0 - psxheader.t_addr) + PSXEXE_TEXTSECTION_OFFSET;\n\taddr->vaddr = psxheader.pc0;\n\n\tr_list_append (ret, addr);\n\treturn ret;\n}",
  "abstract_func": "static RList* entries(RBinFile* VAR_0) {\n\tRList* VAR_1 = NULL;\n\tRBinAddr* VAR_2 = NULL;\n\tpsxexe_header VAR_3;\n\n\tif (!(VAR_1 = r_list_new ())) {\n\t\treturn NULL;\n\t}\n\n\tif (!(VAR_2 = R_NEW0 (RBinAddr))) {\n\t\tr_list_free (VAR_1);\n\t\treturn NULL;\n\t}\n\n\tif (r_buf_fread_at (VAR_0->buf, 0, (ut8*)&VAR_3, \"8c17i\", 1) != sizeof (psxexe_header)) {\n\t\teprintf (\"PSXEXE Header truncated\\n\");\n\t\tr_list_free (VAR_1);\n\t\tfree (VAR_2);\n\t\treturn NULL;\n\t}\n\n\tVAR_2->paddr = (VAR_3.pc0 - VAR_3.t_addr) + VAR_4;\n\tVAR_2->vaddr = VAR_3.pc0;\n\n\tr_list_append (VAR_1, VAR_2);\n\treturn VAR_1;\n}",
  "func_graph_path": "radareorg/radare2/634b886e84a5c568d243e744becc6b3223e089cf/bin_psxexe.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -12,7 +12,7 @@\n \t\treturn NULL;\n \t}\n \n-\tif (r_buf_fread_at (bf->buf, 0, (ut8*)&psxheader, \"8c17i\", 1) < sizeof (psxexe_header)) {\n+\tif (r_buf_fread_at (bf->buf, 0, (ut8*)&psxheader, \"8c17i\", 1) != sizeof (psxexe_header)) {\n \t\teprintf (\"PSXEXE Header truncated\\n\");\n \t\tr_list_free (ret);\n \t\tfree (addr);",
  "diff_line_info": {
    "deleted_lines": [
      "\tif (r_buf_fread_at (bf->buf, 0, (ut8*)&psxheader, \"8c17i\", 1) < sizeof (psxexe_header)) {"
    ],
    "added_lines": [
      "\tif (r_buf_fread_at (bf->buf, 0, (ut8*)&psxheader, \"8c17i\", 1) != sizeof (psxexe_header)) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/19747",
  "description": {
    "pr_info": {
      "title": "Fix DoS in PE/QNX/DYLDCACHE/PSX parsers ##crash",
      "number": 19747
    },
    "comment": [
      "* Reported by lazymio\r\n* Reproducer: AAA4AAAAAB4=\r\n\r\n<!--\r\nRead https://github.com/radareorg/radare2/blob/master/DEVELOPERS.md\r\n* PR title must be capitalized, concise and use ##tags\r\n* If the PR is fixing a ticket use 'Fix #1234 - ..' in the commit message\r\n* Follow the coding style, add tests and documentation if necessary\r\n-->\r\n\r\n- [ ] Mark this if you consider it ready to merge\r\n- [ ] I've added tests (optional)\r\n- [ ] I wrote some lines in the [book](https://github.com/radareorg/radare2book) (optional)\r\n\r\n**Description**\r\n\r\n<!-- explain your changes if necessary -->\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}