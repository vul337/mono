{
  "cve_id": "CVE-2018-20000",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "Bedework/bw-webdav",
  "commit_msg": "secure-xml: welcome secure xml interface providing a safe parser",
  "commit_hash": "67283fb8b9609acdb1a8d2e7fefe195b4a261062",
  "git_url": "https://github.com/Bedework/bw-webdav/commit/67283fb8b9609acdb1a8d2e7fefe195b4a261062",
  "file_path": "src/test/java/org/bedework/webdav/servlet/common/TestPostRequestPars.java",
  "func_name": "testWithMaliciousRequest",
  "func_before": "@Test\n    public void testWithMaliciousRequest() throws IOException, WebdavException {\n        when(request.getReader()).thenReturn(getResource(\"/malicious-request.xml\"));\n        assertTrue(requestPars.processXml());\n    }",
  "abstract_func_before": "@Test\n    public void testWithMaliciousRequest() throws IOException, WebdavException {\n        when(VAR_0.getReader()).thenReturn(getResource(\"/malicious-request.xml\"));\n        assertTrue(VAR_1.processXml());\n    }",
  "func_graph_path_before": "Bedework/bw-webdav/67283fb8b9609acdb1a8d2e7fefe195b4a261062/TestPostRequestPars.java/vul/before/0.json",
  "func": "@Test\n    public void testWithMaliciousRequest() throws IOException, WebdavException {\n        when(request.getContentLength()).thenReturn(1);\n        when(request.getReader()).thenReturn(getResource(\"/malicious-request.xml\"));\n        assertTrue(requestPars.processXml());\n    }",
  "abstract_func": "@Test\n    public void testWithMaliciousRequest() throws IOException, WebdavException {\n        when(VAR_0.getContentLength()).thenReturn(1);\n        when(VAR_0.getReader()).thenReturn(getResource(\"/malicious-request.xml\"));\n        assertTrue(VAR_1.processXml());\n    }",
  "func_graph_path": "Bedework/bw-webdav/67283fb8b9609acdb1a8d2e7fefe195b4a261062/TestPostRequestPars.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,6 @@\n @Test\n     public void testWithMaliciousRequest() throws IOException, WebdavException {\n+        when(request.getContentLength()).thenReturn(1);\n         when(request.getReader()).thenReturn(getResource(\"/malicious-request.xml\"));\n         assertTrue(requestPars.processXml());\n     }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        when(request.getContentLength()).thenReturn(1);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Bedework/bw-webdav/pull/1",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/Bedework/bw-webdav/pull/1: 403 Client Error: Forbidden for url: https://api.github.com/repos/Bedework/bw-webdav/pulls/1",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}