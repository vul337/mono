{
  "cve_id": "CVE-2017-5593",
  "cwe_ids": [
    "CWE-20",
    "CWE-346"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "psi-im/iris",
  "commit_msg": "Try to fix XMPP Client User Impersonation Vulnerability",
  "commit_hash": "02e976d4426a1319a7af7d26d7aba9d8c6077570",
  "git_url": "https://github.com/psi-im/iris/commit/02e976d4426a1319a7af7d26d7aba9d8c6077570",
  "file_path": "src/xmpp/xmpp-im/xmpp_tasks.cpp",
  "func_name": "JT_PushMessage::take",
  "func_before": "bool JT_PushMessage::take(const QDomElement &e)\n{\n\tif(e.tagName() != \"message\")\n\t\treturn false;\n\n\tQDomElement e1 = e;\n\tQDomElement forward;\n\tMessage::CarbonDir cd = Message::NoCarbon;\n\n\t// Check for Carbon\n\tQDomNodeList list = e1.childNodes();\n\tfor (int i = 0; i < list.size(); ++i) {\n\t\tQDomElement el = list.at(i).toElement();\n\n\t\tif (el.attribute(\"xmlns\") == QLatin1String(\"urn:xmpp:carbons:2\") && (el.tagName() == QLatin1String(\"received\") || el.tagName() == QLatin1String(\"sent\"))) {\n\t\t\tQDomElement el1 = el.firstChildElement();\n\t\t\tif (el1.tagName() == QLatin1String(\"forwarded\") && el1.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n\t\t\t\tQDomElement el2 = el1.firstChildElement(QLatin1String(\"message\"));\n\t\t\t\tif (!el2.isNull()) {\n\t\t\t\t\tforward = el2;\n\t\t\t\t\tcd = el.tagName() == QLatin1String(\"received\")? Message::Received : Message::Sent;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (el.tagName() == QLatin1String(\"forwarded\") && el.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n\t\t\tforward = el.firstChildElement(QLatin1String(\"message\")); // currently only messages are supportted\n\t\t\t// TODO <delay> element support\n\t\t\tif (!forward.isNull()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tQString from = e1.attribute(QLatin1String(\"from\"));\n\tStanza s = client()->stream().createStanza(addCorrectNS(forward.isNull()? e1 : forward));\n\tif(s.isNull()) {\n\t\t//printf(\"take: bad stanza??\\n\");\n\t\treturn false;\n\t}\n\n\tMessage m;\n\tif(!m.fromStanza(s, client()->manualTimeZoneOffset(), client()->timeZoneOffset())) {\n\t\t//printf(\"bad message\\n\");\n\t\treturn false;\n\t}\n\tif (!forward.isNull()) {\n\t\tm.setForwardedFrom(Jid(from));\n\t\tm.setCarbonDirection(cd);\n\t}\n\n\temit message(m);\n\treturn true;\n}",
  "abstract_func_before": "bool JT_PushMessage::take(const QDomElement &VAR_0)\n{\n\tif(VAR_0.tagName() != \"message\")\n\t\treturn false;\n\n\tQDomElement VAR_1 = VAR_0;\n\tQDomElement VAR_2;\n\tMessage::CarbonDir VAR_3 = Message::NoCarbon;\n\n\t/* COMMENT_0 */\n\tQDomNodeList VAR_4 = VAR_1.childNodes();\n\tfor (int VAR_5 = 0; VAR_5 < VAR_4.size(); ++VAR_5) {\n\t\tQDomElement VAR_6 = VAR_4.at(VAR_5).toElement();\n\n\t\tif (VAR_6.attribute(\"xmlns\") == QLatin1String(\"urn:xmpp:carbons:2\") && (VAR_6.tagName() == QLatin1String(\"received\") || VAR_6.tagName() == QLatin1String(\"sent\"))) {\n\t\t\tQDomElement VAR_7 = VAR_6.firstChildElement();\n\t\t\tif (VAR_7.tagName() == QLatin1String(\"forwarded\") && VAR_7.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n\t\t\t\tQDomElement VAR_8 = VAR_7.firstChildElement(QLatin1String(\"message\"));\n\t\t\t\tif (!VAR_8.isNull()) {\n\t\t\t\t\tVAR_2 = VAR_8;\n\t\t\t\t\tVAR_3 = VAR_6.tagName() == QLatin1String(\"received\")? Message::Received : Message::Sent;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (VAR_6.tagName() == QLatin1String(\"forwarded\") && VAR_6.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n\t\t\tVAR_2 = VAR_6.firstChildElement(QLatin1String(\"message\")); /* COMMENT_1 */\n\t\t\t/* COMMENT_2 */\n\t\t\tif (!VAR_2.isNull()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tQString VAR_9 = VAR_1.attribute(QLatin1String(\"from\"));\n\tStanza VAR_10 = client()->stream().createStanza(addCorrectNS(VAR_2.isNull()? VAR_1 : VAR_2));\n\tif(VAR_10.isNull()) {\n\t\t/* COMMENT_3 */\n\t\treturn false;\n\t}\n\n\tMessage VAR_11;\n\tif(!VAR_11.fromStanza(VAR_10, client()->manualTimeZoneOffset(), client()->timeZoneOffset())) {\n\t\t/* COMMENT_4 */\n\t\treturn false;\n\t}\n\tif (!VAR_2.isNull()) {\n\t\tVAR_11.setForwardedFrom(Jid(VAR_9));\n\t\tVAR_11.setCarbonDirection(VAR_3);\n\t}\n\n\temit message(m);\n\treturn true;\n}",
  "func_graph_path_before": "psi-im/iris/02e976d4426a1319a7af7d26d7aba9d8c6077570/xmpp_tasks.cpp/vul/before/0.json",
  "func": "bool JT_PushMessage::take(const QDomElement &e)\n{\n\tif(e.tagName() != \"message\")\n\t\treturn false;\n\n\tQDomElement e1 = e;\n\tQDomElement forward;\n\tMessage::CarbonDir cd = Message::NoCarbon;\n\n\tJid fromJid = Jid(e1.attribute(QLatin1String(\"from\")));\n\t// Check for Carbon\n\tQDomNodeList list = e1.childNodes();\n\tfor (int i = 0; i < list.size(); ++i) {\n\t\tQDomElement el = list.at(i).toElement();\n\n\t\tif (el.attribute(\"xmlns\") == QLatin1String(\"urn:xmpp:carbons:2\")\n\t\t    && (el.tagName() == QLatin1String(\"received\") || el.tagName() == QLatin1String(\"sent\"))\n\t\t    && fromJid.compare(Jid(e1.attribute(QLatin1String(\"to\"))), false)) {\n\t\t\tQDomElement el1 = el.firstChildElement();\n\t\t\tif (el1.tagName() == QLatin1String(\"forwarded\")\n\t\t\t    && el1.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n\t\t\t\tQDomElement el2 = el1.firstChildElement(QLatin1String(\"message\"));\n\t\t\t\tif (!el2.isNull()) {\n\t\t\t\t\tforward = el2;\n\t\t\t\t\tcd = el.tagName() == QLatin1String(\"received\")? Message::Received : Message::Sent;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (el.tagName() == QLatin1String(\"forwarded\")\n\t\t\t && el.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n\t\t\tforward = el.firstChildElement(QLatin1String(\"message\")); // currently only messages are supportted\n\t\t\t// TODO <delay> element support\n\t\t\tif (!forward.isNull()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tStanza s = client()->stream().createStanza(addCorrectNS(forward.isNull()? e1 : forward));\n\tif(s.isNull()) {\n\t\t//printf(\"take: bad stanza??\\n\");\n\t\treturn false;\n\t}\n\n\tMessage m;\n\tif(!m.fromStanza(s, client()->manualTimeZoneOffset(), client()->timeZoneOffset())) {\n\t\t//printf(\"bad message\\n\");\n\t\treturn false;\n\t}\n\tif (!forward.isNull()) {\n\t\tm.setForwardedFrom(fromJid);\n\t\tm.setCarbonDirection(cd);\n\t}\n\n\temit message(m);\n\treturn true;\n}",
  "abstract_func": "bool JT_PushMessage::take(const QDomElement &VAR_0)\n{\n\tif(VAR_0.tagName() != \"message\")\n\t\treturn false;\n\n\tQDomElement VAR_1 = VAR_0;\n\tQDomElement VAR_2;\n\tMessage::CarbonDir VAR_3 = Message::NoCarbon;\n\n\tJid VAR_4 = Jid(VAR_1.attribute(QLatin1String(\"from\")));\n\t/* COMMENT_0 */\n\tQDomNodeList VAR_5 = VAR_1.childNodes();\n\tfor (int VAR_6 = 0; VAR_6 < VAR_5.size(); ++VAR_6) {\n\t\tQDomElement VAR_7 = VAR_5.at(VAR_6).toElement();\n\n\t\tif (VAR_7.attribute(\"xmlns\") == QLatin1String(\"urn:xmpp:carbons:2\")\n\t\t    && (VAR_7.tagName() == QLatin1String(\"received\") || VAR_7.tagName() == QLatin1String(\"sent\"))\n\t\t    && VAR_4.compare(Jid(VAR_1.attribute(QLatin1String(\"to\"))), false)) {\n\t\t\tQDomElement VAR_8 = VAR_7.firstChildElement();\n\t\t\tif (VAR_8.tagName() == QLatin1String(\"forwarded\")\n\t\t\t    && VAR_8.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n\t\t\t\tQDomElement VAR_9 = VAR_8.firstChildElement(QLatin1String(\"message\"));\n\t\t\t\tif (!VAR_9.isNull()) {\n\t\t\t\t\tVAR_2 = VAR_9;\n\t\t\t\t\tVAR_3 = VAR_7.tagName() == QLatin1String(\"received\")? Message::Received : Message::Sent;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (VAR_7.tagName() == QLatin1String(\"forwarded\")\n\t\t\t && VAR_7.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n\t\t\tVAR_2 = VAR_7.firstChildElement(QLatin1String(\"message\")); /* COMMENT_1 */\n\t\t\t/* COMMENT_2 */\n\t\t\tif (!VAR_2.isNull()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tStanza VAR_10 = client()->stream().createStanza(addCorrectNS(VAR_2.isNull()? VAR_1 : VAR_2));\n\tif(VAR_10.isNull()) {\n\t\t/* COMMENT_3 */\n\t\treturn false;\n\t}\n\n\tMessage VAR_11;\n\tif(!VAR_11.fromStanza(VAR_10, client()->manualTimeZoneOffset(), client()->timeZoneOffset())) {\n\t\t/* COMMENT_4 */\n\t\treturn false;\n\t}\n\tif (!VAR_2.isNull()) {\n\t\tVAR_11.setForwardedFrom(VAR_4);\n\t\tVAR_11.setCarbonDirection(VAR_3);\n\t}\n\n\temit message(m);\n\treturn true;\n}",
  "func_graph_path": "psi-im/iris/02e976d4426a1319a7af7d26d7aba9d8c6077570/xmpp_tasks.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,14 +7,18 @@\n \tQDomElement forward;\n \tMessage::CarbonDir cd = Message::NoCarbon;\n \n+\tJid fromJid = Jid(e1.attribute(QLatin1String(\"from\")));\n \t// Check for Carbon\n \tQDomNodeList list = e1.childNodes();\n \tfor (int i = 0; i < list.size(); ++i) {\n \t\tQDomElement el = list.at(i).toElement();\n \n-\t\tif (el.attribute(\"xmlns\") == QLatin1String(\"urn:xmpp:carbons:2\") && (el.tagName() == QLatin1String(\"received\") || el.tagName() == QLatin1String(\"sent\"))) {\n+\t\tif (el.attribute(\"xmlns\") == QLatin1String(\"urn:xmpp:carbons:2\")\n+\t\t    && (el.tagName() == QLatin1String(\"received\") || el.tagName() == QLatin1String(\"sent\"))\n+\t\t    && fromJid.compare(Jid(e1.attribute(QLatin1String(\"to\"))), false)) {\n \t\t\tQDomElement el1 = el.firstChildElement();\n-\t\t\tif (el1.tagName() == QLatin1String(\"forwarded\") && el1.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n+\t\t\tif (el1.tagName() == QLatin1String(\"forwarded\")\n+\t\t\t    && el1.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n \t\t\t\tQDomElement el2 = el1.firstChildElement(QLatin1String(\"message\"));\n \t\t\t\tif (!el2.isNull()) {\n \t\t\t\t\tforward = el2;\n@@ -23,7 +27,8 @@\n \t\t\t\t}\n \t\t\t}\n \t\t}\n-\t\telse if (el.tagName() == QLatin1String(\"forwarded\") && el.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n+\t\telse if (el.tagName() == QLatin1String(\"forwarded\")\n+\t\t\t && el.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {\n \t\t\tforward = el.firstChildElement(QLatin1String(\"message\")); // currently only messages are supportted\n \t\t\t// TODO <delay> element support\n \t\t\tif (!forward.isNull()) {\n@@ -32,7 +37,6 @@\n \t\t}\n \t}\n \n-\tQString from = e1.attribute(QLatin1String(\"from\"));\n \tStanza s = client()->stream().createStanza(addCorrectNS(forward.isNull()? e1 : forward));\n \tif(s.isNull()) {\n \t\t//printf(\"take: bad stanza??\\n\");\n@@ -45,7 +49,7 @@\n \t\treturn false;\n \t}\n \tif (!forward.isNull()) {\n-\t\tm.setForwardedFrom(Jid(from));\n+\t\tm.setForwardedFrom(fromJid);\n \t\tm.setCarbonDirection(cd);\n \t}\n ",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tif (el.attribute(\"xmlns\") == QLatin1String(\"urn:xmpp:carbons:2\") && (el.tagName() == QLatin1String(\"received\") || el.tagName() == QLatin1String(\"sent\"))) {",
      "\t\t\tif (el1.tagName() == QLatin1String(\"forwarded\") && el1.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {",
      "\t\telse if (el.tagName() == QLatin1String(\"forwarded\") && el.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {",
      "\tQString from = e1.attribute(QLatin1String(\"from\"));",
      "\t\tm.setForwardedFrom(Jid(from));"
    ],
    "added_lines": [
      "\tJid fromJid = Jid(e1.attribute(QLatin1String(\"from\")));",
      "\t\tif (el.attribute(\"xmlns\") == QLatin1String(\"urn:xmpp:carbons:2\")",
      "\t\t    && (el.tagName() == QLatin1String(\"received\") || el.tagName() == QLatin1String(\"sent\"))",
      "\t\t    && fromJid.compare(Jid(e1.attribute(QLatin1String(\"to\"))), false)) {",
      "\t\t\tif (el1.tagName() == QLatin1String(\"forwarded\")",
      "\t\t\t    && el1.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {",
      "\t\telse if (el.tagName() == QLatin1String(\"forwarded\")",
      "\t\t\t && el.attribute(QLatin1String(\"xmlns\")) == QLatin1String(\"urn:xmpp:forward:0\")) {",
      "\t\tm.setForwardedFrom(fromJid);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/psi-im/iris/pull/47",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/psi-im/iris/pull/47: 403 Client Error: Forbidden for url: https://api.github.com/repos/psi-im/iris/pulls/47",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "Final Classification: Security Vulnerability Fix; Confidence: 1.0\n\n**Step-by-Step Explanation:**\n\n1. **Input Analysis:**  \n   The commit message mentions fixing a user impersonation vulnerability. The vulnerability description points to adding a compliance check for senders and recipients, referencing an XMPP extension. The code diff shows added checks comparing sender and recipient JIDs, targeting forward and carbon messages.\n\n2. **Consistency Check:**  \n   The commit message aligns with code changes, indicating a focused security fix. There are no discrepancies between the message and implementation.\n\n3. **Purpose Evaluation:**  \n   The changes are aimed at preventing user impersonation by ensuring sender and recipient JIDs match, directly addressing a security flaw in the XMPP client.\n\n4. **Security Vulnerability Assessment:**  \n   The patch fixes an exploitable weakness, preventing unauthorized message forwarding, which is a security risk. While no CVE is cited, the context strongly suggests a security issue.\n\n5. **Confidence Scoring:**  \n   The evidence is clear and consistent, with no conflicting information. The code modifications are a direct response to the stated security vulnerability.\n\n**Conclusion:** The changes are a security vulnerability fix intended to prevent user impersonation in XMPP messaging. The confidence is high due to the clear alignment between the commit message and code changes.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}