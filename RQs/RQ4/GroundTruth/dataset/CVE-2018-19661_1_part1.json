{
  "cve_id": "CVE-2018-19661",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "libsndfile",
  "commit_msg": "a/ulaw: fix multiple buffer overflows\n\ni2ulaw_array() and i2alaw_array() fail to handle ptr [count] = INT_MIN\nproperly, leading to buffer underflow. INT_MIN is a special value\nsince - INT_MIN cannot be represented as int.\n\nIn this case round - INT_MIN to INT_MAX and proceed as usual.\n\nf2ulaw_array() and f2alaw_array() fail to handle ptr [count] = NaN\nproperly, leading to null pointer dereference.\n\nIn this case, arbitrarily set the buffer value to 0.\n\nThis commit fixes #429 (CVE-2018-19661 and CVE-2018-19662) and\nfixes #344 (CVE-2017-17456 and CVE-2017-17457).",
  "commit_hash": "c4dd30d69b070a3cb32b4bf74c47a8163b1916da",
  "git_url": "https://github.com/libsndfile/libsndfile/commit/c4dd30d69b070a3cb32b4bf74c47a8163b1916da",
  "file_path": "src/ulaw.c",
  "func_name": "d2ulaw_array",
  "func_before": "static inline void\nd2ulaw_array (const double *ptr, int count, unsigned char *buffer, double normfact)\n{\twhile (--count >= 0)\n\t{\tif (ptr [count] >= 0)\n\t\t\tbuffer [count] = ulaw_encode [lrint (normfact * ptr [count])] ;\n\t\telse\n\t\t\tbuffer [count] = 0x7F & ulaw_encode [- lrint (normfact * ptr [count])] ;\n\t\t} ;\n}",
  "abstract_func_before": "static inline void\nd2ulaw_array (const double *VAR_0, int VAR_1, unsigned char *VAR_2, double VAR_3)\n{\twhile (--VAR_1 >= 0)\n\t{\tif (VAR_0 [VAR_1] >= 0)\n\t\t\tVAR_2 [VAR_1] = VAR_4 [lrint (VAR_3 * VAR_0 [VAR_1])] ;\n\t\telse\n\t\t\tVAR_2 [VAR_1] = 0x7F & VAR_4 [- lrint (VAR_3 * VAR_0 [VAR_1])] ;\n\t\t} ;\n}",
  "func_graph_path_before": "libsndfile/c4dd30d69b070a3cb32b4bf74c47a8163b1916da/ulaw.c/vul/before/0.json",
  "func": "static inline void\nd2ulaw_array (const double *ptr, int count, unsigned char *buffer, double normfact)\n{\twhile (--count >= 0)\n\t{\tif (!isfinite (ptr [count]))\n\t\t\tbuffer [count] = 0 ;\n\t\telse if (ptr [count] >= 0)\n\t\t\tbuffer [count] = ulaw_encode [lrint (normfact * ptr [count])] ;\n\t\telse\n\t\t\tbuffer [count] = 0x7F & ulaw_encode [- lrint (normfact * ptr [count])] ;\n\t\t} ;\n}",
  "abstract_func": "static inline void\nd2ulaw_array (const double *VAR_0, int VAR_1, unsigned char *VAR_2, double VAR_3)\n{\twhile (--VAR_1 >= 0)\n\t{\tif (!isfinite (VAR_0 [VAR_1]))\n\t\t\tVAR_2 [VAR_1] = 0 ;\n\t\telse if (VAR_0 [VAR_1] >= 0)\n\t\t\tVAR_2 [VAR_1] = VAR_4 [lrint (VAR_3 * VAR_0 [VAR_1])] ;\n\t\telse\n\t\t\tVAR_2 [VAR_1] = 0x7F & VAR_4 [- lrint (VAR_3 * VAR_0 [VAR_1])] ;\n\t\t} ;\n}",
  "func_graph_path": "libsndfile/c4dd30d69b070a3cb32b4bf74c47a8163b1916da/ulaw.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,9 @@\n static inline void\n d2ulaw_array (const double *ptr, int count, unsigned char *buffer, double normfact)\n {\twhile (--count >= 0)\n-\t{\tif (ptr [count] >= 0)\n+\t{\tif (!isfinite (ptr [count]))\n+\t\t\tbuffer [count] = 0 ;\n+\t\telse if (ptr [count] >= 0)\n \t\t\tbuffer [count] = ulaw_encode [lrint (normfact * ptr [count])] ;\n \t\telse\n \t\t\tbuffer [count] = 0x7F & ulaw_encode [- lrint (normfact * ptr [count])] ;",
  "diff_line_info": {
    "deleted_lines": [
      "\t{\tif (ptr [count] >= 0)"
    ],
    "added_lines": [
      "\t{\tif (!isfinite (ptr [count]))",
      "\t\t\tbuffer [count] = 0 ;",
      "\t\telse if (ptr [count] >= 0)"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libsndfile/libsndfile/pull/432",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/libsndfile/libsndfile/pull/432: 403 Client Error: Forbidden for url: https://api.github.com/repos/libsndfile/libsndfile/pulls/432",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}