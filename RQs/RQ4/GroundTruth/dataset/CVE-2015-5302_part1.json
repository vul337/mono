{
  "cve_id": "CVE-2015-5302",
  "cwe_ids": [
    "CWE-200"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "abrt/libreport",
  "commit_msg": "wizard: fix save users changes after reviewing dump dir files\n\nIf the user reviewed the dump dir's files during reporting the crash, the\nchanges was thrown away and original data was passed to the bugzilla bug\nreport.\n\nreport-gtk saves the first text view buffer and then reloads data from the\nreported problem directory, which causes that the changes made to those text\nviews are thrown away.\n\nFunction save_text_if_changed(), except of saving text, also reload the files\nfrom dump dir and update gui state from the dump dir. The commit moves the\nreloading and updating gui functions away from this function.\n\nRelated to rhbz#1270235\n\nSigned-off-by: Matej Habrnal <mhabrnal@redhat.com>",
  "commit_hash": "257578a23d1537a2d235aaa2b1488ee4f818e360",
  "git_url": "https://github.com/abrt/libreport/commit/257578a23d1537a2d235aaa2b1488ee4f818e360",
  "file_path": "src/gui-wizard-gtk/wizard.c",
  "func_name": "on_page_prepare",
  "func_before": "static void on_page_prepare(GtkNotebook *assistant, GtkWidget *page, gpointer user_data)\n{\n    //int page_no = gtk_assistant_get_current_page(g_assistant);\n    //log_ready_state();\n\n    /* This suppresses [Last] button: assistant thinks that\n     * we never have this page ready unless we are on it\n     * -> therefore there is at least one non-ready page\n     * -> therefore it won't show [Last]\n     */\n    // Doesn't work: if Completeness:[++++++-+++],\n    // then [Last] btn will still be shown.\n    //gtk_assistant_set_page_complete(g_assistant,\n    //            pages[PAGENO_REVIEW_DATA].page_widget,\n    //            pages[PAGENO_REVIEW_DATA].page_widget == page\n    //);\n\n    /* If processing is finished and if it was terminated because of an error\n     * the event progress page is selected. So, it does not make sense to show\n     * the next step button and we MUST NOT clear warnings.\n     */\n    if (!is_processing_finished())\n    {\n        /* some pages hide it, so restore it to it's default */\n        show_next_step_button();\n        clear_warnings();\n    }\n\n    gtk_widget_hide(g_btn_detail);\n    gtk_widget_hide(g_btn_onfail);\n    if (!g_expert_mode)\n        gtk_widget_hide(g_btn_repeat);\n    /* Save text fields if changed */\n    /* Must be called before any GUI operation because the following two\n     * functions causes recreating of the text items tabs, thus all updates to\n     * these tabs will be lost */\n    save_items_from_notepad();\n    save_text_from_text_view(g_tv_comment, FILENAME_COMMENT);\n\n\n    if (pages[PAGENO_SUMMARY].page_widget == page)\n    {\n        if (!g_expert_mode)\n        {\n            /* Skip intro screen */\n            int n = select_next_page_no(pages[PAGENO_SUMMARY].page_no, NULL);\n            log_info(\"switching to page_no:%d\", n);\n            gtk_notebook_set_current_page(assistant, n);\n            return;\n        }\n    }\n\n    if (pages[PAGENO_EDIT_ELEMENTS].page_widget == page)\n    {\n        if (highlight_forbidden())\n        {\n            add_sensitive_data_warning();\n            show_warnings();\n            gtk_expander_set_expanded(g_exp_search, TRUE);\n        }\n        else\n            gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(g_rb_custom_search), TRUE);\n\n        show_warnings();\n    }\n\n    if (pages[PAGENO_REVIEW_DATA].page_widget == page)\n    {\n        update_ls_details_checkboxes(g_event_selected);\n        gtk_widget_set_sensitive(g_btn_next, gtk_toggle_button_get_active(g_tb_approve_bt));\n    }\n\n    if (pages[PAGENO_EDIT_COMMENT].page_widget == page)\n    {\n        gtk_widget_show(g_btn_detail);\n        gtk_widget_set_sensitive(g_btn_next, false);\n        on_comment_changed(gtk_text_view_get_buffer(g_tv_comment), NULL);\n    }\n    //log_ready_state();\n\n    if (pages[PAGENO_EVENT_PROGRESS].page_widget == page)\n    {\n        log_info(\"g_event_selected:'%s'\", g_event_selected);\n        if (g_event_selected\n         && g_event_selected[0]\n        ) {\n            clear_warnings();\n            start_event_run(g_event_selected);\n        }\n    }\n\n    if(pages[PAGENO_EVENT_SELECTOR].page_widget == page)\n    {\n        if (!g_expert_mode && !g_auto_event_list)\n            hide_next_step_button();\n    }\n}",
  "abstract_func_before": "static void on_page_prepare(GtkNotebook *VAR_0, GtkWidget *VAR_1, gpointer VAR_2)\n{\n    /* COMMENT_0 */\n    /* COMMENT_1 */\n\n    /* COMMENT_2 */\n                                                        \n                                                        \n                                        \n       \n    /* COMMENT_7 */\n    /* COMMENT_8 */\n    /* COMMENT_9 */\n    /* COMMENT_10 */\n    /* COMMENT_11 */\n    /* COMMENT_12 */\n\n    /* COMMENT_13 */\n                                                                              \n                                                           \n       \n    if (!is_processing_finished())\n    {\n        /* COMMENT_17 */\n        show_next_step_button();\n        clear_warnings();\n    }\n\n    gtk_widget_hide(VAR_3);\n    gtk_widget_hide(VAR_4);\n    if (!VAR_5)\n        gtk_widget_hide(VAR_6);\n    /* COMMENT_18 */\n    /* COMMENT_19 */\n                                                                              \n                                 \n    save_items_from_notepad();\n    save_text_from_text_view(VAR_7, VAR_8);\n\n\n    if (VAR_9[VAR_10].page_widget == VAR_1)\n    {\n        if (!VAR_5)\n        {\n            /* COMMENT_22 */\n            int VAR_11 = select_next_page_no(VAR_9[VAR_10].page_no, NULL);\n            log_info(\"switching to page_no:%d\", VAR_11);\n            gtk_notebook_set_current_page(VAR_0, VAR_11);\n            return;\n        }\n    }\n\n    if (VAR_9[VAR_12].page_widget == VAR_1)\n    {\n        if (highlight_forbidden())\n        {\n            add_sensitive_data_warning();\n            show_warnings();\n            gtk_expander_set_expanded(VAR_13, TRUE);\n        }\n        else\n            gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(VAR_14), TRUE);\n\n        show_warnings();\n    }\n\n    if (VAR_9[VAR_15].page_widget == VAR_1)\n    {\n        update_ls_details_checkboxes(VAR_16);\n        gtk_widget_set_sensitive(VAR_17, gtk_toggle_button_get_active(VAR_18));\n    }\n\n    if (VAR_9[VAR_19].page_widget == VAR_1)\n    {\n        gtk_widget_show(VAR_3);\n        gtk_widget_set_sensitive(VAR_17, false);\n        on_comment_changed(gtk_text_view_get_buffer(VAR_7), NULL);\n    }\n    /* COMMENT_1 */\n\n    if (VAR_9[VAR_20].page_widget == VAR_1)\n    {\n        log_info(\"g_event_selected:'%s'\", VAR_16);\n        if (VAR_16\n         && VAR_16[0]\n        ) {\n            clear_warnings();\n            start_event_run(VAR_16);\n        }\n    }\n\n    if(VAR_9[VAR_21].page_widget == VAR_1)\n    {\n        if (!VAR_5 && !VAR_22)\n            hide_next_step_button();\n    }\n}",
  "func_graph_path_before": "abrt/libreport/257578a23d1537a2d235aaa2b1488ee4f818e360/wizard.c/vul/before/0.json",
  "func": "static void on_page_prepare(GtkNotebook *assistant, GtkWidget *page, gpointer user_data)\n{\n    //int page_no = gtk_assistant_get_current_page(g_assistant);\n    //log_ready_state();\n\n    /* This suppresses [Last] button: assistant thinks that\n     * we never have this page ready unless we are on it\n     * -> therefore there is at least one non-ready page\n     * -> therefore it won't show [Last]\n     */\n    // Doesn't work: if Completeness:[++++++-+++],\n    // then [Last] btn will still be shown.\n    //gtk_assistant_set_page_complete(g_assistant,\n    //            pages[PAGENO_REVIEW_DATA].page_widget,\n    //            pages[PAGENO_REVIEW_DATA].page_widget == page\n    //);\n\n    /* If processing is finished and if it was terminated because of an error\n     * the event progress page is selected. So, it does not make sense to show\n     * the next step button and we MUST NOT clear warnings.\n     */\n    if (!is_processing_finished())\n    {\n        /* some pages hide it, so restore it to it's default */\n        show_next_step_button();\n        clear_warnings();\n    }\n\n    gtk_widget_hide(g_btn_detail);\n    gtk_widget_hide(g_btn_onfail);\n    if (!g_expert_mode)\n        gtk_widget_hide(g_btn_repeat);\n    /* Save text fields if changed */\n    /* Must be called before any GUI operation because the following two\n     * functions causes recreating of the text items tabs, thus all updates to\n     * these tabs will be lost */\n    save_items_from_notepad();\n    save_text_from_text_view(g_tv_comment, FILENAME_COMMENT);\n    problem_data_reload_from_dump_dir();\n    update_gui_state_from_problem_data(/* don't update selected event */ 0);\n\n    if (pages[PAGENO_SUMMARY].page_widget == page)\n    {\n        if (!g_expert_mode)\n        {\n            /* Skip intro screen */\n            int n = select_next_page_no(pages[PAGENO_SUMMARY].page_no, NULL);\n            log_info(\"switching to page_no:%d\", n);\n            gtk_notebook_set_current_page(assistant, n);\n            return;\n        }\n    }\n\n    if (pages[PAGENO_EDIT_ELEMENTS].page_widget == page)\n    {\n        if (highlight_forbidden())\n        {\n            add_sensitive_data_warning();\n            show_warnings();\n            gtk_expander_set_expanded(g_exp_search, TRUE);\n        }\n        else\n            gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(g_rb_custom_search), TRUE);\n\n        show_warnings();\n    }\n\n    if (pages[PAGENO_REVIEW_DATA].page_widget == page)\n    {\n        update_ls_details_checkboxes(g_event_selected);\n        gtk_widget_set_sensitive(g_btn_next, gtk_toggle_button_get_active(g_tb_approve_bt));\n    }\n\n    if (pages[PAGENO_EDIT_COMMENT].page_widget == page)\n    {\n        gtk_widget_show(g_btn_detail);\n        gtk_widget_set_sensitive(g_btn_next, false);\n        on_comment_changed(gtk_text_view_get_buffer(g_tv_comment), NULL);\n    }\n    //log_ready_state();\n\n    if (pages[PAGENO_EVENT_PROGRESS].page_widget == page)\n    {\n        log_info(\"g_event_selected:'%s'\", g_event_selected);\n        if (g_event_selected\n         && g_event_selected[0]\n        ) {\n            clear_warnings();\n            start_event_run(g_event_selected);\n        }\n    }\n\n    if(pages[PAGENO_EVENT_SELECTOR].page_widget == page)\n    {\n        if (!g_expert_mode && !g_auto_event_list)\n            hide_next_step_button();\n    }\n}",
  "abstract_func": "static void on_page_prepare(GtkNotebook *VAR_0, GtkWidget *VAR_1, gpointer VAR_2)\n{\n    /* COMMENT_0 */\n    /* COMMENT_1 */\n\n    /* COMMENT_2 */\n                                                        \n                                                        \n                                        \n       \n    /* COMMENT_7 */\n    /* COMMENT_8 */\n    /* COMMENT_9 */\n    /* COMMENT_10 */\n    /* COMMENT_11 */\n    /* COMMENT_12 */\n\n    /* COMMENT_13 */\n                                                                              \n                                                           \n       \n    if (!is_processing_finished())\n    {\n        /* COMMENT_17 */\n        show_next_step_button();\n        clear_warnings();\n    }\n\n    gtk_widget_hide(VAR_3);\n    gtk_widget_hide(VAR_4);\n    if (!VAR_5)\n        gtk_widget_hide(VAR_6);\n    /* COMMENT_18 */\n    /* COMMENT_19 */\n                                                                              \n                                 \n    save_items_from_notepad();\n    save_text_from_text_view(VAR_7, VAR_8);\n    problem_data_reload_from_dump_dir();\n    update_gui_state_from_problem_data(/* COMMENT_22 */ 0);\n\n    if (VAR_9[VAR_10].page_widget == VAR_1)\n    {\n        if (!VAR_5)\n        {\n            /* COMMENT_23 */\n            int VAR_11 = select_next_page_no(VAR_9[VAR_10].page_no, NULL);\n            log_info(\"switching to page_no:%d\", VAR_11);\n            gtk_notebook_set_current_page(VAR_0, VAR_11);\n            return;\n        }\n    }\n\n    if (VAR_9[VAR_12].page_widget == VAR_1)\n    {\n        if (highlight_forbidden())\n        {\n            add_sensitive_data_warning();\n            show_warnings();\n            gtk_expander_set_expanded(VAR_13, TRUE);\n        }\n        else\n            gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(VAR_14), TRUE);\n\n        show_warnings();\n    }\n\n    if (VAR_9[VAR_15].page_widget == VAR_1)\n    {\n        update_ls_details_checkboxes(VAR_16);\n        gtk_widget_set_sensitive(VAR_17, gtk_toggle_button_get_active(VAR_18));\n    }\n\n    if (VAR_9[VAR_19].page_widget == VAR_1)\n    {\n        gtk_widget_show(VAR_3);\n        gtk_widget_set_sensitive(VAR_17, false);\n        on_comment_changed(gtk_text_view_get_buffer(VAR_7), NULL);\n    }\n    /* COMMENT_1 */\n\n    if (VAR_9[VAR_20].page_widget == VAR_1)\n    {\n        log_info(\"g_event_selected:'%s'\", VAR_16);\n        if (VAR_16\n         && VAR_16[0]\n        ) {\n            clear_warnings();\n            start_event_run(VAR_16);\n        }\n    }\n\n    if(VAR_9[VAR_21].page_widget == VAR_1)\n    {\n        if (!VAR_5 && !VAR_22)\n            hide_next_step_button();\n    }\n}",
  "func_graph_path": "abrt/libreport/257578a23d1537a2d235aaa2b1488ee4f818e360/wizard.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -36,7 +36,8 @@\n      * these tabs will be lost */\n     save_items_from_notepad();\n     save_text_from_text_view(g_tv_comment, FILENAME_COMMENT);\n-\n+    problem_data_reload_from_dump_dir();\n+    update_gui_state_from_problem_data(/* don't update selected event */ 0);\n \n     if (pages[PAGENO_SUMMARY].page_widget == page)\n     {",
  "diff_line_info": {
    "deleted_lines": [
      ""
    ],
    "added_lines": [
      "    problem_data_reload_from_dump_dir();",
      "    update_gui_state_from_problem_data(/* don't update selected event */ 0);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/abrt/libreport/pull/385",
  "description": {
    "pr_info": {
      "title": "wizard: fix save users changes after reviewing dump dir files",
      "number": 385
    },
    "comment": [
      "If the user reviewed the dump dir's files during reporting the crash, the\nchanges was thrown away and original data was passed to the bugzilla bug\nreport.\n\nreport-gtk saves the first text view buffer and then reloads data from the\nreported problem directory, which causes that the changes made to those text\nviews are thrown away.\n\nThis commit fixes the security issue described above.\n\nRelated to rhbz#1270235\n\nSigned-off-by: Matej Habrnal mhabrnal@redhat.com\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.9"
}