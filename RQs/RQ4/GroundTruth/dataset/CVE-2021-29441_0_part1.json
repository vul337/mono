{
  "cve_id": "CVE-2021-29441",
  "cwe_ids": [
    "CWE-290"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "alibaba/nacos",
  "commit_msg": "Fix #4701",
  "commit_hash": "91d16023d91ea21a5e58722c751485a0b9bbeeb3",
  "git_url": "https://github.com/alibaba/nacos/commit/91d16023d91ea21a5e58722c751485a0b9bbeeb3",
  "file_path": "core/src/main/java/com/alibaba/nacos/core/code/ControllerMethodsCache.java",
  "func_name": "addUrlAndMethodRelation",
  "func_before": "private void addUrlAndMethodRelation(String urlKey, String[] requestParam, Method method) {\n        RequestMappingInfo requestMappingInfo = new RequestMappingInfo();\n        requestMappingInfo.setPathRequestCondition(new PathRequestCondition(urlKey));\n        requestMappingInfo.setParamRequestCondition(new ParamRequestCondition(requestParam));\n        List<RequestMappingInfo> requestMappingInfos = urlLookup.get(urlKey);\n        if (requestMappingInfos == null) {\n            urlLookup.putIfAbsent(urlKey, new ArrayList<>());\n            requestMappingInfos = urlLookup.get(urlKey);\n        }\n        requestMappingInfos.add(requestMappingInfo);\n        methods.put(requestMappingInfo, method);\n    }",
  "abstract_func_before": "private void addUrlAndMethodRelation(String VAR_0, String[] VAR_1, Method VAR_2) {\n        RequestMappingInfo VAR_3 = new RequestMappingInfo();\n        VAR_3.setPathRequestCondition(new PathRequestCondition(VAR_0));\n        VAR_3.setParamRequestCondition(new ParamRequestCondition(VAR_1));\n        List<RequestMappingInfo> VAR_4 = VAR_5.get(VAR_0);\n        if (VAR_4 == null) {\n            VAR_5.putIfAbsent(VAR_0, new ArrayList<>());\n            VAR_4 = VAR_5.get(VAR_0);\n        }\n        VAR_4.add(VAR_3);\n        VAR_6.put(VAR_3, VAR_2);\n    }",
  "func_graph_path_before": "alibaba/nacos/91d16023d91ea21a5e58722c751485a0b9bbeeb3/ControllerMethodsCache.java/vul/before/0.json",
  "func": "private void addUrlAndMethodRelation(String urlKey, String[] requestParam, Method method) {\n        RequestMappingInfo requestMappingInfo = new RequestMappingInfo();\n        requestMappingInfo.setPathRequestCondition(new PathRequestCondition(urlKey));\n        requestMappingInfo.setParamRequestCondition(new ParamRequestCondition(requestParam));\n        List<RequestMappingInfo> requestMappingInfos = urlLookup.get(urlKey);\n        if (requestMappingInfos == null) {\n            urlLookup.putIfAbsent(urlKey, new ArrayList<>());\n            requestMappingInfos = urlLookup.get(urlKey);\n            // For issue #4701.\n            String urlKeyBackup = urlKey + \"/\";\n            urlLookup.putIfAbsent(urlKeyBackup, requestMappingInfos);\n        }\n        requestMappingInfos.add(requestMappingInfo);\n        methods.put(requestMappingInfo, method);\n    }",
  "abstract_func": "private void addUrlAndMethodRelation(String VAR_0, String[] VAR_1, Method VAR_2) {\n        RequestMappingInfo VAR_3 = new RequestMappingInfo();\n        VAR_3.setPathRequestCondition(new PathRequestCondition(VAR_0));\n        VAR_3.setParamRequestCondition(new ParamRequestCondition(VAR_1));\n        List<RequestMappingInfo> VAR_4 = VAR_5.get(VAR_0);\n        if (VAR_4 == null) {\n            VAR_5.putIfAbsent(VAR_0, new ArrayList<>());\n            VAR_4 = VAR_5.get(VAR_0);\n            /* COMMENT_0 */\n            String VAR_6 = VAR_0 + \"/\";\n            VAR_5.putIfAbsent(VAR_6, VAR_4);\n        }\n        VAR_4.add(VAR_3);\n        VAR_7.put(VAR_3, VAR_2);\n    }",
  "func_graph_path": "alibaba/nacos/91d16023d91ea21a5e58722c751485a0b9bbeeb3/ControllerMethodsCache.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,6 +6,9 @@\n         if (requestMappingInfos == null) {\n             urlLookup.putIfAbsent(urlKey, new ArrayList<>());\n             requestMappingInfos = urlLookup.get(urlKey);\n+            // For issue #4701.\n+            String urlKeyBackup = urlKey + \"/\";\n+            urlLookup.putIfAbsent(urlKeyBackup, requestMappingInfos);\n         }\n         requestMappingInfos.add(requestMappingInfo);\n         methods.put(requestMappingInfo, method);",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "            // For issue #4701.",
      "            String urlKeyBackup = urlKey + \"/\";",
      "            urlLookup.putIfAbsent(urlKeyBackup, requestMappingInfos);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/alibaba/nacos/pull/4703",
  "description": {
    "pr_info": {
      "title": "[ISSUE #4701] Fix bypass authentication(identity) problem.",
      "number": 4703
    },
    "comment": [
      "Please do not create a Pull Request without creating an issue first.\r\n\r\n## What is the purpose of the change\r\n\r\nFix #4701 \r\n\r\n- Add support for uri end with '/'\r\n- Directly reject if can't find api path in nacos implementations.\r\n\r\n## Brief changelog\r\n\r\nXX\r\n\r\n## Verifying this change\r\n\r\nXXXX\r\n\r\nFollow this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n* [ ] Make sure there is a Github issue filed for the change (usually before you start working on it). Trivial changes like typos do not require a Github issue. Your pull request should address just this issue, without pulling in other changes - one PR resolves one issue.\r\n* [ ] Format the pull request title like `[ISSUE #123] Fix UnknownException when host config not exist`. Each commit in the pull request should have a meaningful subject line and body.\r\n* [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n* [ ] Write necessary unit-test to verify your logic correction, more mock a little better when cross module dependency exist. If the new feature or significant change is committed, please remember to add integration-test in [test module](https://github.com/alibaba/nacos/tree/master/test).\r\n* [ ] Run `mvn -B clean package apache-rat:check findbugs:findbugs -Dmaven.test.skip=true` to make sure basic checks pass. Run `mvn clean install -DskipITs` to make sure unit-test pass. Run `mvn clean test-compile failsafe:integration-test`  to make sure integration-test pass.\r\n\r\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.9"
}