{
  "cve_id": "CVE-2019-15784",
  "cwe_ids": [
    "CWE-129"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "Haivision/srt",
  "commit_msg": "[core] CSndUList initial size is reduced to 512 elements",
  "commit_hash": "64875fa98ff6afd2f21a9727970fb4333efe95de",
  "git_url": "https://github.com/Haivision/srt/commit/64875fa98ff6afd2f21a9727970fb4333efe95de",
  "file_path": "srtcore/queue.cpp",
  "func_name": "CSndUList::insert_",
  "func_before": "void CSndUList::insert_(int64_t ts, const CUDT* u)\n{\n    // increase the heap array size if necessary\n    if (m_iLastEntry == m_iArrayLength - 1)\n        realloc_();\n\n    insert_norealloc(ts, u);\n}",
  "abstract_func_before": "void CSndUList::insert_(int64_t VAR_0, const CUDT* VAR_1)\n{\n    /* COMMENT_0 */\n    if (VAR_2 == VAR_3 - 1)\n        realloc_();\n\n    insert_norealloc(VAR_0, VAR_1);\n}",
  "func_graph_path_before": "Haivision/srt/64875fa98ff6afd2f21a9727970fb4333efe95de/queue.cpp/vul/before/2.json",
  "func": "void CSndUList::insert_(int64_t ts, const CUDT* u)\n{\n    // increase the heap array size if necessary\n    if (m_iLastEntry == m_iArrayLength - 1)\n        realloc_();\n\n    insert_norealloc_(ts, u);\n}",
  "abstract_func": "void CSndUList::insert_(int64_t VAR_0, const CUDT* VAR_1)\n{\n    /* COMMENT_0 */\n    if (VAR_2 == VAR_3 - 1)\n        realloc_();\n\n    insert_norealloc_(VAR_0, VAR_1);\n}",
  "func_graph_path": "Haivision/srt/64875fa98ff6afd2f21a9727970fb4333efe95de/queue.cpp/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,5 +4,5 @@\n     if (m_iLastEntry == m_iArrayLength - 1)\n         realloc_();\n \n-    insert_norealloc(ts, u);\n+    insert_norealloc_(ts, u);\n }",
  "diff_line_info": {
    "deleted_lines": [
      "    insert_norealloc(ts, u);"
    ],
    "added_lines": [
      "    insert_norealloc_(ts, u);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Haivision/srt/pull/811",
  "description": {
    "pr_info": {
      "title": "Potential CSndUList array overflow",
      "number": 811
    },
    "comment": [
      "This is a rework of #724 (closes #724).\r\nThe default size of `CSndUList` was 4096 elements. The list is a heap of SRT sockets, that are to be processed in the sender's thread.\r\nIt is very unlikely to have mare than 4096 SRT connections, that is why checking if there is a place to insert a new socket is not required most of the time. However, if there is no place, then there will be an overflow and out-of-border operations.\r\nThis PR fixes this.\r\n\r\n- [x] `CSndUList::update(...)` increases list size if required.\r\n- [x] Reduced default size of the `CSndUList` from 4096 to 512.\r\n- [x] `CSndUList::remove_(...)` now uses `std::swap`\r\n- [x] `CSndUList::insert_norealloc_(...)` now uses `std::swap`",
      "This vulnerability is tracked in [CVE-2019-15784](https://nvd.nist.gov/vuln/detail/CVE-2019-15784)\r\n@ethouris: Do you plan to make a new release soon? Thanks"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.8"
}