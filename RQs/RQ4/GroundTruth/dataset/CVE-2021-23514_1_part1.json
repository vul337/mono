{
  "cve_id": "CVE-2021-23514",
  "cwe_ids": [
    "CWE-79",
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "CrowCpp/Crow",
  "commit_msg": "Fixed another vulnerability in mustache file loading\nand made the file sanitizer a copy-less function",
  "commit_hash": "e688cbd18ea85a4a61b32be4e8d6b37c66943c4a",
  "git_url": "https://github.com/CrowCpp/Crow/commit/e688cbd18ea85a4a61b32be4e8d6b37c66943c4a",
  "file_path": "include/crow/mustache.h",
  "func_name": "load",
  "func_before": "inline template_t load(const std::string& filename)\n        {\n            return compile(detail::get_loader_ref()(filename));\n        }",
  "abstract_func_before": "inline template_t load(const std::string& VAR_0)\n        {\n            return compile(detail::get_loader_ref()(VAR_0));\n        }",
  "func_graph_path_before": "CrowCpp/Crow/e688cbd18ea85a4a61b32be4e8d6b37c66943c4a/mustache.h/vul/before/0.json",
  "func": "inline template_t load(const std::string& filename)\n        {\n            std::string filename_sanitized(filename);\n            utility::sanitize_filename(filename_sanitized);\n            return compile(detail::get_loader_ref()(filename_sanitized));\n        }",
  "abstract_func": "inline template_t load(const std::string& VAR_0)\n        {\n            std::string filename_sanitized(filename);\n            utility::sanitize_filename(VAR_1);\n            return compile(detail::get_loader_ref()(VAR_1));\n        }",
  "func_graph_path": "CrowCpp/Crow/e688cbd18ea85a4a61b32be4e8d6b37c66943c4a/mustache.h/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,6 @@\n inline template_t load(const std::string& filename)\n         {\n-            return compile(detail::get_loader_ref()(filename));\n+            std::string filename_sanitized(filename);\n+            utility::sanitize_filename(filename_sanitized);\n+            return compile(detail::get_loader_ref()(filename_sanitized));\n         }",
  "diff_line_info": {
    "deleted_lines": [
      "            return compile(detail::get_loader_ref()(filename));"
    ],
    "added_lines": [
      "            std::string filename_sanitized(filename);",
      "            utility::sanitize_filename(filename_sanitized);",
      "            return compile(detail::get_loader_ref()(filename_sanitized));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/CrowCpp/Crow/pull/317",
  "description": {
    "pr_info": {
      "title": "Fix vulnerabilities",
      "number": 317
    },
    "comment": [
      "The PR fixes 2 Vulnerabilities found in Crow.\r\n1. A Path Traversal exploit made possible by Crow's default `static` directory and Mustache's `templates` directory.\r\n2. A Content Injection exploit made possible by Crow's Mustache implementation not escaping some characters.\r\n\r\nOnce merged, This PR, along with #292, #296, and #304 Will be released immediately as part of `v0.3+4`.\r\n\r\nNote: This PR introduces a slowdown between `50Âµs` and `1.5ms` for any static file or template being loaded (depending on the length of the filename). Therefore I would advise optimization of the `sanitize_filename()` function before the next minor/major release.\r\n\r\nA special Thank you to the [Snyk Security team](https://snyk.io) for their effort in identifying and reporting these vulnerabilities."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}