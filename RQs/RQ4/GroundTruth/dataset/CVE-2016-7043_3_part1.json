{
  "cve_id": "CVE-2016-7043",
  "cwe_ids": [
    "CWE-260"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "kiegroup/droolsjbpm-integration",
  "commit_msg": "[RHBMS-4312] Loading pasword from a keystore",
  "commit_hash": "e916032edd47aa46d15f3a11909b4804ee20a7e8",
  "git_url": "https://github.com/kiegroup/droolsjbpm-integration/commit/e916032edd47aa46d15f3a11909b4804ee20a7e8",
  "file_path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/controller/DefaultRestControllerImpl.java",
  "func_name": "connectToSingleController",
  "func_before": "public KieServerSetup connectToSingleController(KieServerInfo serverInfo, KieServerConfig config, String controllerUrl) {\n        String connectAndSyncUrl = controllerUrl + \"/server/\" + KieServerEnvironment.getServerId();\n\n        String userName = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n        String password = loadPassword(config);\n        String token = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_TOKEN);\n\n        try {\n            KieServerSetup kieServerSetup = makeHttpPutRequestAndCreateCustomResponse(connectAndSyncUrl, serialize(serverInfo), KieServerSetup.class, userName, password, token);\n\n            if (kieServerSetup != null) {\n                // once there is non null list let's return it\n                return kieServerSetup;\n\n            }\n            \n        } catch (Exception e) {\n            // let's check all other controllers in case of running in cluster of controllers\n            logger.warn(\"Exception encountered while syncing with controller at {} error {}\", connectAndSyncUrl, e.getCause() == null ? e.getMessage() : e.getCause().getMessage());\n            logger.debug(\"Exception encountered while syncing with controller at {} error {}\", connectAndSyncUrl, e.getMessage(), e);\n                        \n        }\n        return null;\n    }",
  "abstract_func_before": "public KieServerSetup connectToSingleController(KieServerInfo VAR_0, KieServerConfig VAR_1, String VAR_2) {\n        String VAR_3 = VAR_2 + \"/server/\" + VAR_4.getServerId();\n\n        String VAR_5 = VAR_1.getConfigItemValue(VAR_6.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n        String VAR_7 = loadPassword(VAR_1);\n        String VAR_8 = VAR_1.getConfigItemValue(VAR_6.CFG_KIE_CONTROLLER_TOKEN);\n\n        try {\n            KieServerSetup VAR_9 = makeHttpPutRequestAndCreateCustomResponse(VAR_3, serialize(VAR_0), KieServerSetup.class, VAR_5, VAR_7, VAR_8);\n\n            if (VAR_9 != null) {\n                /* COMMENT_0 */\n                return VAR_9;\n\n            }\n            \n        } catch (Exception VAR_10) {\n            /* COMMENT_1 */\n            VAR_11.warn(\"Exception encountered while syncing with controller at {} error {}\", VAR_3, VAR_10.getCause() == null ? VAR_10.getMessage() : VAR_10.getCause().getMessage());\n            VAR_11.debug(\"Exception encountered while syncing with controller at {} error {}\", VAR_3, VAR_10.getMessage(), VAR_10);\n                        \n        }\n        return null;\n    }",
  "func_graph_path_before": "kiegroup/droolsjbpm-integration/e916032edd47aa46d15f3a11909b4804ee20a7e8/DefaultRestControllerImpl.java/vul/before/3.json",
  "func": "public KieServerSetup connectToSingleController(KieServerInfo serverInfo, KieServerConfig config, String controllerUrl) {\n        String connectAndSyncUrl = controllerUrl + \"/server/\" + KieServerEnvironment.getServerId();\n\n        String userName = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n        String password = loadControllerPassword(config);\n        String token = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_TOKEN);\n\n        try {\n            KieServerSetup kieServerSetup = makeHttpPutRequestAndCreateCustomResponse(connectAndSyncUrl, serialize(serverInfo), KieServerSetup.class, userName, password, token);\n\n            if (kieServerSetup != null) {\n                // once there is non null list let's return it\n                return kieServerSetup;\n\n            }\n            \n        } catch (Exception e) {\n            // let's check all other controllers in case of running in cluster of controllers\n            logger.warn(\"Exception encountered while syncing with controller at {} error {}\", connectAndSyncUrl, e.getCause() == null ? e.getMessage() : e.getCause().getMessage());\n            logger.debug(\"Exception encountered while syncing with controller at {} error {}\", connectAndSyncUrl, e.getMessage(), e);\n                        \n        }\n        return null;\n    }",
  "abstract_func": "public KieServerSetup connectToSingleController(KieServerInfo VAR_0, KieServerConfig VAR_1, String VAR_2) {\n        String VAR_3 = VAR_2 + \"/server/\" + VAR_4.getServerId();\n\n        String VAR_5 = VAR_1.getConfigItemValue(VAR_6.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n        String VAR_7 = loadControllerPassword(VAR_1);\n        String VAR_8 = VAR_1.getConfigItemValue(VAR_6.CFG_KIE_CONTROLLER_TOKEN);\n\n        try {\n            KieServerSetup VAR_9 = makeHttpPutRequestAndCreateCustomResponse(VAR_3, serialize(VAR_0), KieServerSetup.class, VAR_5, VAR_7, VAR_8);\n\n            if (VAR_9 != null) {\n                /* COMMENT_0 */\n                return VAR_9;\n\n            }\n            \n        } catch (Exception VAR_10) {\n            /* COMMENT_1 */\n            VAR_11.warn(\"Exception encountered while syncing with controller at {} error {}\", VAR_3, VAR_10.getCause() == null ? VAR_10.getMessage() : VAR_10.getCause().getMessage());\n            VAR_11.debug(\"Exception encountered while syncing with controller at {} error {}\", VAR_3, VAR_10.getMessage(), VAR_10);\n                        \n        }\n        return null;\n    }",
  "func_graph_path": "kiegroup/droolsjbpm-integration/e916032edd47aa46d15f3a11909b4804ee20a7e8/DefaultRestControllerImpl.java/vul/after/3.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,7 +2,7 @@\n         String connectAndSyncUrl = controllerUrl + \"/server/\" + KieServerEnvironment.getServerId();\n \n         String userName = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n-        String password = loadPassword(config);\n+        String password = loadControllerPassword(config);\n         String token = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_TOKEN);\n \n         try {",
  "diff_line_info": {
    "deleted_lines": [
      "        String password = loadPassword(config);"
    ],
    "added_lines": [
      "        String password = loadControllerPassword(config);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/1273",
  "description": {
    "pr_info": {
      "title": "[RHBMS-4312] Loading pasword from a keystore",
      "number": 1273
    },
    "comment": [
      "Jira: https://issues.jboss.org/browse/RHBPMS-4312\r\n\r\nAdded loading password from a keystore also from other methods",
      "Jenkins retest this",
      "@rstancel this now has conflicts, could you please resolve"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}