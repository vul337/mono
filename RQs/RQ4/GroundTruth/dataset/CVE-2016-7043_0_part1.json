{
  "cve_id": "CVE-2016-7043",
  "cwe_ids": [
    "CWE-260"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "kiegroup/droolsjbpm-integration",
  "commit_msg": "[RHBMS-4312] Loading pasword from a keystore",
  "commit_hash": "e916032edd47aa46d15f3a11909b4804ee20a7e8",
  "git_url": "https://github.com/kiegroup/droolsjbpm-integration/commit/e916032edd47aa46d15f3a11909b4804ee20a7e8",
  "file_path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/controller/DefaultRestControllerImpl.java",
  "func_name": "disconnectFromSingleController",
  "func_before": "public boolean disconnectFromSingleController(KieServerInfo serverInfo, KieServerConfig config, String controllerUrl) {\n        String connectAndSyncUrl = null;\n        try {\n            connectAndSyncUrl = controllerUrl + \"/server/\" + KieServerEnvironment.getServerId()+\"/?location=\"+ URLEncoder.encode(serverInfo.getLocation(), \"UTF-8\");\n\n            String userName = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n            String password = loadPassword(config);\n            String token = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_TOKEN);\n\n            makeHttpDeleteRequestAndCreateCustomResponse(connectAndSyncUrl, null, userName, password, token);\n\n\n            return true;\n        } catch (Exception e) {\n            // let's check all other controllers in case of running in cluster of controllers\n            logger.debug(\"Exception encountered while syncing with controller at {} error {}\", connectAndSyncUrl, e.getMessage(), e);\n            \n            return false;\n        }\n    }",
  "abstract_func_before": "public boolean disconnectFromSingleController(KieServerInfo VAR_0, KieServerConfig VAR_1, String VAR_2) {\n        String VAR_3 = null;\n        try {\n            VAR_3 = VAR_2 + \"/server/\" + VAR_4.getServerId()+\"/?location=\"+ VAR_5.encode(VAR_0.getLocation(), \"UTF-8\");\n\n            String VAR_6 = VAR_1.getConfigItemValue(VAR_7.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n            String VAR_8 = loadPassword(VAR_1);\n            String VAR_9 = VAR_1.getConfigItemValue(VAR_7.CFG_KIE_CONTROLLER_TOKEN);\n\n            makeHttpDeleteRequestAndCreateCustomResponse(VAR_3, null, VAR_6, VAR_8, VAR_9);\n\n\n            return true;\n        } catch (Exception VAR_10) {\n            /* COMMENT_0 */\n            VAR_11.debug(\"Exception encountered while syncing with controller at {} error {}\", VAR_3, VAR_10.getMessage(), VAR_10);\n            \n            return false;\n        }\n    }",
  "func_graph_path_before": "kiegroup/droolsjbpm-integration/e916032edd47aa46d15f3a11909b4804ee20a7e8/DefaultRestControllerImpl.java/vul/before/0.json",
  "func": "public boolean disconnectFromSingleController(KieServerInfo serverInfo, KieServerConfig config, String controllerUrl) {\n        String connectAndSyncUrl = null;\n        try {\n            connectAndSyncUrl = controllerUrl + \"/server/\" + KieServerEnvironment.getServerId()+\"/?location=\"+ URLEncoder.encode(serverInfo.getLocation(), \"UTF-8\");\n\n            String userName = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n            String password = loadControllerPassword(config);\n            String token = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_TOKEN);\n\n            makeHttpDeleteRequestAndCreateCustomResponse(connectAndSyncUrl, null, userName, password, token);\n\n\n            return true;\n        } catch (Exception e) {\n            // let's check all other controllers in case of running in cluster of controllers\n            logger.debug(\"Exception encountered while syncing with controller at {} error {}\", connectAndSyncUrl, e.getMessage(), e);\n            \n            return false;\n        }\n    }",
  "abstract_func": "public boolean disconnectFromSingleController(KieServerInfo VAR_0, KieServerConfig VAR_1, String VAR_2) {\n        String VAR_3 = null;\n        try {\n            VAR_3 = VAR_2 + \"/server/\" + VAR_4.getServerId()+\"/?location=\"+ VAR_5.encode(VAR_0.getLocation(), \"UTF-8\");\n\n            String VAR_6 = VAR_1.getConfigItemValue(VAR_7.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n            String VAR_8 = loadControllerPassword(VAR_1);\n            String VAR_9 = VAR_1.getConfigItemValue(VAR_7.CFG_KIE_CONTROLLER_TOKEN);\n\n            makeHttpDeleteRequestAndCreateCustomResponse(VAR_3, null, VAR_6, VAR_8, VAR_9);\n\n\n            return true;\n        } catch (Exception VAR_10) {\n            /* COMMENT_0 */\n            VAR_11.debug(\"Exception encountered while syncing with controller at {} error {}\", VAR_3, VAR_10.getMessage(), VAR_10);\n            \n            return false;\n        }\n    }",
  "func_graph_path": "kiegroup/droolsjbpm-integration/e916032edd47aa46d15f3a11909b4804ee20a7e8/DefaultRestControllerImpl.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,7 +4,7 @@\n             connectAndSyncUrl = controllerUrl + \"/server/\" + KieServerEnvironment.getServerId()+\"/?location=\"+ URLEncoder.encode(serverInfo.getLocation(), \"UTF-8\");\n \n             String userName = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n-            String password = loadPassword(config);\n+            String password = loadControllerPassword(config);\n             String token = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_TOKEN);\n \n             makeHttpDeleteRequestAndCreateCustomResponse(connectAndSyncUrl, null, userName, password, token);",
  "diff_line_info": {
    "deleted_lines": [
      "            String password = loadPassword(config);"
    ],
    "added_lines": [
      "            String password = loadControllerPassword(config);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/1273",
  "description": {
    "pr_info": {
      "title": "[RHBMS-4312] Loading pasword from a keystore",
      "number": 1273
    },
    "comment": [
      "Jira: https://issues.jboss.org/browse/RHBPMS-4312\r\n\r\nAdded loading password from a keystore also from other methods",
      "Jenkins retest this",
      "@rstancel this now has conflicts, could you please resolve"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.85,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.85\n\nThe commit message and code changes suggest enhancing password handling by loading it from a keystore, indicating a security measure."
}