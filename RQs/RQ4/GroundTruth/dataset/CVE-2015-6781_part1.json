{
  "cve_id": "CVE-2015-6781",
  "cwe_ids": [
    "CWE-189"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "googlefonts/sfntly",
  "commit_msg": "Check for integer overflow in sfntly::FontData::Bound().\n\nAlso delete dead code and cleanup some nits.\n\nThis is cl/96914065.",
  "commit_hash": "de776d4ef06ca29c240de3444348894f032b03ff",
  "git_url": "https://github.com/googlefonts/sfntly/commit/de776d4ef06ca29c240de3444348894f032b03ff",
  "file_path": "cpp/src/sfntly/data/font_data.cc",
  "func_name": "FontData::FontData",
  "func_before": "FontData::FontData(FontData* data, int32_t offset) {\n  Init(data->array_);\n  Bound(data->bound_offset_ + offset,\n        (data->bound_length_ == GROWABLE_SIZE)\n            ? GROWABLE_SIZE : data->bound_length_ - offset);\n}",
  "abstract_func_before": "FontData::FontData(FontData* VAR_0, int32_t VAR_1) {\n  Init(VAR_0->array_);\n  Bound(VAR_0->bound_offset_ + VAR_1,\n        (VAR_0->bound_length_ == VAR_2)\n            ? VAR_2 : VAR_0->bound_length_ - VAR_1);\n}",
  "func_graph_path_before": "googlefonts/sfntly/de776d4ef06ca29c240de3444348894f032b03ff/font_data.cc/vul/before/0.json",
  "func": "FontData::FontData(FontData* data, int32_t offset) {\n  Init(data->array_);\n  Bound(data->bound_offset_ + offset,\n        (data->bound_length_ == GROWABLE_SIZE)\n        ? GROWABLE_SIZE : data->bound_length_ - offset);\n}",
  "abstract_func": "FontData::FontData(FontData* VAR_0, int32_t VAR_1) {\n  Init(VAR_0->array_);\n  Bound(VAR_0->bound_offset_ + VAR_1,\n        (VAR_0->bound_length_ == VAR_2)\n        ? VAR_2 : VAR_0->bound_length_ - VAR_1);\n}",
  "func_graph_path": "googlefonts/sfntly/de776d4ef06ca29c240de3444348894f032b03ff/font_data.cc/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,5 +2,5 @@\n   Init(data->array_);\n   Bound(data->bound_offset_ + offset,\n         (data->bound_length_ == GROWABLE_SIZE)\n-            ? GROWABLE_SIZE : data->bound_length_ - offset);\n+        ? GROWABLE_SIZE : data->bound_length_ - offset);\n }",
  "diff_line_info": {
    "deleted_lines": [
      "            ? GROWABLE_SIZE : data->bound_length_ - offset);"
    ],
    "added_lines": [
      "        ? GROWABLE_SIZE : data->bound_length_ - offset);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/googlefonts/sfntly/pull/47",
  "description": {
    "pr_info": {
      "title": "Check for integer overflow in sfntly::FontData::Bound().",
      "number": 47
    },
    "comment": [
      "Also delete dead code and cleanup some nits.\n\nThis is cl/96914065.\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.8\n\n**Step-by-Step Explanation:**\n\n1. **Input Analysis:** The commit message highlights checking for integer overflow and cleaning up dead code. The code diff modifies a ternary condition in `Bound()`, adjusting offset calculations to prevent overflow.\n\n2. **Consistency Check:** The main code change aligns with the overflow fix, but the mention of dead code isn't reflected, introducing some ambiguity.\n\n3. **Purpose Evaluation:** The change directly addresses a core function, suggesting a security fix for preventing integer overflow, a known security issue.\n\n4. **Security Vulnerability Assessment:** Adjusting offset bounds fixes a potential security flaw, even without explicit CVE/CWE, confirming it's a security fix.\n\n5. **Confidence Scoring:** High confidence due to clear security intent but reduced slightly due to ambiguity in dead code mention.\n\nThe patch addresses a security vulnerability by preventing integer overflow in the `Bound` function, thus classified as a security fix."
}