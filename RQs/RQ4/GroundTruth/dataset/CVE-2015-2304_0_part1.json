{
  "cve_id": "CVE-2015-2304",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "libarchive",
  "commit_msg": "Add ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS option\n\nThis fixes a directory traversal in the cpio tool.",
  "commit_hash": "59357157706d47c365b2227739e17daba3607526",
  "git_url": "https://github.com/libarchive/libarchive/commit/59357157706d47c365b2227739e17daba3607526",
  "file_path": "cpio/cpio.c",
  "func_name": "main",
  "func_before": "int\nmain(int argc, char *argv[])\n{\n\tstatic char buff[16384];\n\tstruct cpio _cpio; /* Allocated on stack. */\n\tstruct cpio *cpio;\n\tconst char *errmsg;\n\tint uid, gid;\n\tint opt;\n\n\tcpio = &_cpio;\n\tmemset(cpio, 0, sizeof(*cpio));\n\tcpio->buff = buff;\n\tcpio->buff_size = sizeof(buff);\n\n#if defined(HAVE_SIGACTION) && defined(SIGPIPE)\n\t{ /* Ignore SIGPIPE signals. */\n\t\tstruct sigaction sa;\n\t\tsigemptyset(&sa.sa_mask);\n\t\tsa.sa_flags = 0;\n\t\tsa.sa_handler = SIG_IGN;\n\t\tsigaction(SIGPIPE, &sa, NULL);\n\t}\n#endif\n\n\t/* Set lafe_progname before calling lafe_warnc. */\n\tlafe_setprogname(*argv, \"bsdcpio\");\n\n#if HAVE_SETLOCALE\n\tif (setlocale(LC_ALL, \"\") == NULL)\n\t\tlafe_warnc(0, \"Failed to set default locale\");\n#endif\n\n\tcpio->uid_override = -1;\n\tcpio->gid_override = -1;\n\tcpio->argv = argv;\n\tcpio->argc = argc;\n\tcpio->mode = '\\0';\n\tcpio->verbose = 0;\n\tcpio->compress = '\\0';\n\tcpio->extract_flags = ARCHIVE_EXTRACT_NO_AUTODIR;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_NO_OVERWRITE_NEWER;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_SECURE_SYMLINKS;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_SECURE_NODOTDOT;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_PERM;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_FFLAGS;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_ACL;\n#if !defined(_WIN32) && !defined(__CYGWIN__)\n\tif (geteuid() == 0)\n\t\tcpio->extract_flags |= ARCHIVE_EXTRACT_OWNER;\n#endif\n\tcpio->bytes_per_block = 512;\n\tcpio->filename = NULL;\n\n\tcpio->matching = archive_match_new();\n\tif (cpio->matching == NULL)\n\t\tlafe_errc(1, 0, \"Out of memory\");\n\n\twhile ((opt = cpio_getopt(cpio)) != -1) {\n\t\tswitch (opt) {\n\t\tcase '0': /* GNU convention: --null, -0 */\n\t\t\tcpio->option_null = 1;\n\t\t\tbreak;\n\t\tcase 'A': /* NetBSD/OpenBSD */\n\t\t\tcpio->option_append = 1;\n\t\t\tbreak;\n\t\tcase 'a': /* POSIX 1997 */\n\t\t\tcpio->option_atime_restore = 1;\n\t\t\tbreak;\n\t\tcase 'B': /* POSIX 1997 */\n\t\t\tcpio->bytes_per_block = 5120;\n\t\t\tbreak;\n\t\tcase OPTION_B64ENCODE:\n\t\t\tcpio->add_filter = opt;\n\t\t\tbreak;\n\t\tcase 'C': /* NetBSD/OpenBSD */\n\t\t\tcpio->bytes_per_block = atoi(cpio->argument);\n\t\t\tif (cpio->bytes_per_block <= 0)\n\t\t\t\tlafe_errc(1, 0, \"Invalid blocksize %s\", cpio->argument);\n\t\t\tbreak;\n\t\tcase 'c': /* POSIX 1997 */\n\t\t\tcpio->format = \"odc\";\n\t\t\tbreak;\n\t\tcase 'd': /* POSIX 1997 */\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_NO_AUTODIR;\n\t\t\tbreak;\n\t\tcase 'E': /* NetBSD/OpenBSD */\n\t\t\tif (archive_match_include_pattern_from_file(\n\t\t\t    cpio->matching, cpio->argument,\n\t\t\t    cpio->option_null) != ARCHIVE_OK)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\tbreak;\n\t\tcase 'F': /* NetBSD/OpenBSD/GNU cpio */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'f': /* POSIX 1997 */\n\t\t\tif (archive_match_exclude_pattern(cpio->matching,\n\t\t\t    cpio->argument) != ARCHIVE_OK)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\tbreak;\n\t\tcase OPTION_GRZIP:\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase 'H': /* GNU cpio (also --format) */\n\t\t\tcpio->format = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'h':\n\t\t\tlong_help();\n\t\t\tbreak;\n\t\tcase 'I': /* NetBSD/OpenBSD */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'i': /* POSIX 1997 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -i and -%c\", cpio->mode);\n\t\t\tcpio->mode = opt;\n\t\t\tbreak;\n\t\tcase 'J': /* GNU tar, others */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase 'j': /* GNU tar, others */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase OPTION_INSECURE:\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_SYMLINKS;\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_NODOTDOT;\n\t\t\tbreak;\n\t\tcase 'L': /* GNU cpio */\n\t\t\tcpio->option_follow_links = 1;\n\t\t\tbreak;\n\t\tcase 'l': /* POSIX 1997 */\n\t\t\tcpio->option_link = 1;\n\t\t\tbreak;\n\t\tcase OPTION_LRZIP:\n\t\tcase OPTION_LZ4:\n\t\tcase OPTION_LZMA: /* GNU tar, others */\n\t\tcase OPTION_LZOP: /* GNU tar, others */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase 'm': /* POSIX 1997 */\n\t\t\tcpio->extract_flags |= ARCHIVE_EXTRACT_TIME;\n\t\t\tbreak;\n\t\tcase 'n': /* GNU cpio */\n\t\t\tcpio->option_numeric_uid_gid = 1;\n\t\t\tbreak;\n\t\tcase OPTION_NO_PRESERVE_OWNER: /* GNU cpio */\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_OWNER;\n\t\t\tbreak;\n\t\tcase 'O': /* GNU cpio */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'o': /* POSIX 1997 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -o and -%c\", cpio->mode);\n\t\t\tcpio->mode = opt;\n\t\t\tbreak;\n\t\tcase 'p': /* POSIX 1997 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -p and -%c\", cpio->mode);\n\t\t\tcpio->mode = opt;\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_NODOTDOT;\n\t\t\tbreak;\n\t\tcase OPTION_PASSPHRASE:\n\t\t\tcpio->passphrase = cpio->argument;\n\t\t\tbreak;\n\t\tcase OPTION_PRESERVE_OWNER:\n\t\t\tcpio->extract_flags |= ARCHIVE_EXTRACT_OWNER;\n\t\t\tbreak;\n\t\tcase OPTION_QUIET: /* GNU cpio */\n\t\t\tcpio->quiet = 1;\n\t\t\tbreak;\n\t\tcase 'R': /* GNU cpio, also --owner */\n\t\t\t/* TODO: owner_parse should return uname/gname\n\t\t\t * also; use that to set [ug]name_override. */\n\t\t\terrmsg = owner_parse(cpio->argument, &uid, &gid);\n\t\t\tif (errmsg) {\n\t\t\t\tlafe_warnc(-1, \"%s\", errmsg);\n\t\t\t\tusage();\n\t\t\t}\n\t\t\tif (uid != -1) {\n\t\t\t\tcpio->uid_override = uid;\n\t\t\t\tcpio->uname_override = NULL;\n\t\t\t}\n\t\t\tif (gid != -1) {\n\t\t\t\tcpio->gid_override = gid;\n\t\t\t\tcpio->gname_override = NULL;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'r': /* POSIX 1997 */\n\t\t\tcpio->option_rename = 1;\n\t\t\tbreak;\n\t\tcase 't': /* POSIX 1997 */\n\t\t\tcpio->option_list = 1;\n\t\t\tbreak;\n\t\tcase 'u': /* POSIX 1997 */\n\t\t\tcpio->extract_flags\n\t\t\t    &= ~ARCHIVE_EXTRACT_NO_OVERWRITE_NEWER;\n\t\t\tbreak;\n\t\tcase OPTION_UUENCODE:\n\t\t\tcpio->add_filter = opt;\n\t\t\tbreak;\n\t\tcase 'v': /* POSIX 1997 */\n\t\t\tcpio->verbose++;\n\t\t\tbreak;\n\t\tcase 'V': /* GNU cpio */\n\t\t\tcpio->dot++;\n\t\t\tbreak;\n\t\tcase OPTION_VERSION: /* GNU convention */\n\t\t\tversion();\n\t\t\tbreak;\n#if 0\n\t        /*\n\t\t * cpio_getopt() handles -W specially, so it's not\n\t\t * available here.\n\t\t */\n\t\tcase 'W': /* Obscure, but useful GNU convention. */\n\t\t\tbreak;\n#endif\n\t\tcase 'y': /* tar convention */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase 'Z': /* tar convention */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase 'z': /* tar convention */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tusage();\n\t\t}\n\t}\n\n\t/*\n\t * Sanity-check args, error out on nonsensical combinations.\n\t */\n\t/* -t implies -i if no mode was specified. */\n\tif (cpio->option_list && cpio->mode == '\\0')\n\t\tcpio->mode = 'i';\n\t/* -t requires -i */\n\tif (cpio->option_list && cpio->mode != 'i')\n\t\tlafe_errc(1, 0, \"Option -t requires -i\");\n\t/* -n requires -it */\n\tif (cpio->option_numeric_uid_gid && !cpio->option_list)\n\t\tlafe_errc(1, 0, \"Option -n requires -it\");\n\t/* Can only specify format when writing */\n\tif (cpio->format != NULL && cpio->mode != 'o')\n\t\tlafe_errc(1, 0, \"Option --format requires -o\");\n\t/* -l requires -p */\n\tif (cpio->option_link && cpio->mode != 'p')\n\t\tlafe_errc(1, 0, \"Option -l requires -p\");\n\t/* -v overrides -V */\n\tif (cpio->dot && cpio->verbose)\n\t\tcpio->dot = 0;\n\t/* TODO: Flag other nonsensical combinations. */\n\n\tswitch (cpio->mode) {\n\tcase 'o':\n\t\t/* TODO: Implement old binary format in libarchive,\n\t\t   use that here. */\n\t\tif (cpio->format == NULL)\n\t\t\tcpio->format = \"odc\"; /* Default format */\n\n\t\tmode_out(cpio);\n\t\tbreak;\n\tcase 'i':\n\t\twhile (*cpio->argv != NULL) {\n\t\t\tif (archive_match_include_pattern(cpio->matching,\n\t\t\t    *cpio->argv) != ARCHIVE_OK)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\t--cpio->argc;\n\t\t\t++cpio->argv;\n\t\t}\n\t\tif (cpio->option_list)\n\t\t\tmode_list(cpio);\n\t\telse\n\t\t\tmode_in(cpio);\n\t\tbreak;\n\tcase 'p':\n\t\tif (*cpio->argv == NULL || **cpio->argv == '\\0')\n\t\t\tlafe_errc(1, 0,\n\t\t\t    \"-p mode requires a target directory\");\n\t\tmode_pass(cpio, *cpio->argv);\n\t\tbreak;\n\tdefault:\n\t\tlafe_errc(1, 0,\n\t\t    \"Must specify at least one of -i, -o, or -p\");\n\t}\n\n\tarchive_match_free(cpio->matching);\n\tfree_cache(cpio->gname_cache);\n\tfree_cache(cpio->uname_cache);\n\tfree(cpio->destdir);\n\tpassphrase_free(cpio->ppbuff);\n\treturn (cpio->return_value);\n}",
  "abstract_func_before": "int\nmain(int VAR_0, char *VAR_1[])\n{\n\tstatic char VAR_2[16384];\n\tstruct cpio VAR_3; /* COMMENT_0 */\n\tstruct cpio *cpio;\n\tconst char *VAR_4;\n\tint VAR_5, VAR_6;\n\tint VAR_7;\n\n\tcpio = &VAR_3;\n\tmemset(cpio, 0, sizeof(*cpio));\n\tcpio->buff = VAR_2;\n\tcpio->buff_size = sizeof(VAR_2);\n\n#if defined(VAR_8) && defined(VAR_9)\n\t{ /* COMMENT_1 */\n\t\tstruct sigaction VAR_10;\n\t\tsigemptyset(&VAR_10.sa_mask);\n\t\tVAR_10.sa_flags = 0;\n\t\tVAR_10.sa_handler = VAR_11;\n\t\tsigaction(VAR_9, &VAR_10, NULL);\n\t}\n#endif\n\n\t/* COMMENT_2 */\n\tlafe_setprogname(*VAR_1, \"bsdcpio\");\n\n#if VAR_12\n\tif (setlocale(VAR_13, \"\") == NULL)\n\t\tlafe_warnc(0, \"Failed to set default locale\");\n#endif\n\n\tcpio->uid_override = -1;\n\tcpio->gid_override = -1;\n\tcpio->argv = VAR_1;\n\tcpio->argc = VAR_0;\n\tcpio->mode = '\\0';\n\tcpio->verbose = 0;\n\tcpio->compress = '\\0';\n\tcpio->extract_flags = VAR_14;\n\tcpio->extract_flags |= VAR_15;\n\tcpio->extract_flags |= VAR_16;\n\tcpio->extract_flags |= VAR_17;\n\tcpio->extract_flags |= VAR_18;\n\tcpio->extract_flags |= VAR_19;\n\tcpio->extract_flags |= VAR_20;\n#if !defined(VAR_21) && !defined(VAR_22)\n\tif (geteuid() == 0)\n\t\tcpio->extract_flags |= VAR_23;\n#endif\n\tcpio->bytes_per_block = 512;\n\tcpio->filename = NULL;\n\n\tcpio->matching = archive_match_new();\n\tif (cpio->matching == NULL)\n\t\tlafe_errc(1, 0, \"Out of memory\");\n\n\twhile ((VAR_7 = cpio_getopt(cpio)) != -1) {\n\t\tswitch (VAR_7) {\n\t\tcase '0': /* COMMENT_3 */\n\t\t\tcpio->option_null = 1;\n\t\t\tbreak;\n\t\tcase 'A': /* COMMENT_4 */\n\t\t\tcpio->option_append = 1;\n\t\t\tbreak;\n\t\tcase 'a': /* COMMENT_5 */\n\t\t\tcpio->option_atime_restore = 1;\n\t\t\tbreak;\n\t\tcase 'B': /* COMMENT_5 */\n\t\t\tcpio->bytes_per_block = 5120;\n\t\t\tbreak;\n\t\tcase VAR_24:\n\t\t\tcpio->add_filter = VAR_7;\n\t\t\tbreak;\n\t\tcase 'C': /* COMMENT_4 */\n\t\t\tcpio->bytes_per_block = atoi(cpio->argument);\n\t\t\tif (cpio->bytes_per_block <= 0)\n\t\t\t\tlafe_errc(1, 0, \"Invalid blocksize %s\", cpio->argument);\n\t\t\tbreak;\n\t\tcase 'c': /* COMMENT_5 */\n\t\t\tcpio->format = \"odc\";\n\t\t\tbreak;\n\t\tcase 'd': /* COMMENT_5 */\n\t\t\tcpio->extract_flags &= ~VAR_14;\n\t\t\tbreak;\n\t\tcase 'E': /* COMMENT_4 */\n\t\t\tif (archive_match_include_pattern_from_file(\n\t\t\t    cpio->matching, cpio->argument,\n\t\t\t    cpio->option_null) != VAR_25)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\tbreak;\n\t\tcase 'F': /* COMMENT_6 */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'f': /* COMMENT_5 */\n\t\t\tif (archive_match_exclude_pattern(cpio->matching,\n\t\t\t    cpio->argument) != VAR_25)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\tbreak;\n\t\tcase VAR_26:\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase 'H': /* COMMENT_7 */\n\t\t\tcpio->format = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'h':\n\t\t\tlong_help();\n\t\t\tbreak;\n\t\tcase 'I': /* COMMENT_4 */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'i': /* COMMENT_5 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -i and -%c\", cpio->mode);\n\t\t\tcpio->mode = VAR_7;\n\t\t\tbreak;\n\t\tcase 'J': /* COMMENT_8 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase 'j': /* COMMENT_8 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase VAR_27:\n\t\t\tcpio->extract_flags &= ~VAR_16;\n\t\t\tcpio->extract_flags &= ~VAR_17;\n\t\t\tbreak;\n\t\tcase 'L': /* COMMENT_9 */\n\t\t\tcpio->option_follow_links = 1;\n\t\t\tbreak;\n\t\tcase 'l': /* COMMENT_5 */\n\t\t\tcpio->option_link = 1;\n\t\t\tbreak;\n\t\tcase VAR_28:\n\t\tcase VAR_29:\n\t\tcase VAR_30: /* COMMENT_8 */\n\t\tcase VAR_31: /* COMMENT_8 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase 'm': /* COMMENT_5 */\n\t\t\tcpio->extract_flags |= VAR_32;\n\t\t\tbreak;\n\t\tcase 'n': /* COMMENT_9 */\n\t\t\tcpio->option_numeric_uid_gid = 1;\n\t\t\tbreak;\n\t\tcase VAR_33: /* COMMENT_9 */\n\t\t\tcpio->extract_flags &= ~VAR_23;\n\t\t\tbreak;\n\t\tcase 'O': /* COMMENT_9 */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'o': /* COMMENT_5 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -o and -%c\", cpio->mode);\n\t\t\tcpio->mode = VAR_7;\n\t\t\tbreak;\n\t\tcase 'p': /* COMMENT_5 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -p and -%c\", cpio->mode);\n\t\t\tcpio->mode = VAR_7;\n\t\t\tcpio->extract_flags &= ~VAR_17;\n\t\t\tbreak;\n\t\tcase VAR_34:\n\t\t\tcpio->passphrase = cpio->argument;\n\t\t\tbreak;\n\t\tcase VAR_35:\n\t\t\tcpio->extract_flags |= VAR_23;\n\t\t\tbreak;\n\t\tcase VAR_36: /* COMMENT_9 */\n\t\t\tcpio->quiet = 1;\n\t\t\tbreak;\n\t\tcase 'R': /* COMMENT_10 */\n\t\t\t/* COMMENT_11 */\n                                                 \n\t\t\tVAR_4 = owner_parse(cpio->argument, &VAR_5, &VAR_6);\n\t\t\tif (VAR_4) {\n\t\t\t\tlafe_warnc(-1, \"%s\", VAR_4);\n\t\t\t\tusage();\n\t\t\t}\n\t\t\tif (VAR_5 != -1) {\n\t\t\t\tcpio->uid_override = VAR_5;\n\t\t\t\tcpio->uname_override = NULL;\n\t\t\t}\n\t\t\tif (VAR_6 != -1) {\n\t\t\t\tcpio->gid_override = VAR_6;\n\t\t\t\tcpio->gname_override = NULL;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'r': /* COMMENT_5 */\n\t\t\tcpio->option_rename = 1;\n\t\t\tbreak;\n\t\tcase 't': /* COMMENT_5 */\n\t\t\tcpio->option_list = 1;\n\t\t\tbreak;\n\t\tcase 'u': /* COMMENT_5 */\n\t\t\tcpio->extract_flags\n\t\t\t    &= ~VAR_15;\n\t\t\tbreak;\n\t\tcase VAR_37:\n\t\t\tcpio->add_filter = VAR_7;\n\t\t\tbreak;\n\t\tcase 'v': /* COMMENT_5 */\n\t\t\tcpio->verbose++;\n\t\t\tbreak;\n\t\tcase 'V': /* COMMENT_9 */\n\t\t\tcpio->dot++;\n\t\t\tbreak;\n\t\tcase VAR_38: /* COMMENT_13 */\n\t\t\tversion();\n\t\t\tbreak;\n#if 0\n\t        /* COMMENT_14 */\n                                                    \n                    \n     \n\t\tcase 'W': /* COMMENT_18 */\n\t\t\tbreak;\n#endif\n\t\tcase 'y': /* COMMENT_19 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase 'Z': /* COMMENT_19 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase 'z': /* COMMENT_19 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tusage();\n\t\t}\n\t}\n\n\t/* COMMENT_20 */\n                                                             \n    \n\t/* COMMENT_23 */\n\tif (cpio->option_list && cpio->mode == '\\0')\n\t\tcpio->mode = 'i';\n\t/* COMMENT_24 */\n\tif (cpio->option_list && cpio->mode != 'i')\n\t\tlafe_errc(1, 0, \"Option -t requires -i\");\n\t/* COMMENT_25 */\n\tif (cpio->option_numeric_uid_gid && !cpio->option_list)\n\t\tlafe_errc(1, 0, \"Option -n requires -it\");\n\t/* COMMENT_26 */\n\tif (cpio->format != NULL && cpio->mode != 'o')\n\t\tlafe_errc(1, 0, \"Option --format requires -o\");\n\t/* COMMENT_27 */\n\tif (cpio->option_link && cpio->mode != 'p')\n\t\tlafe_errc(1, 0, \"Option -l requires -p\");\n\t/* COMMENT_28 */\n\tif (cpio->dot && cpio->verbose)\n\t\tcpio->dot = 0;\n\t/* COMMENT_29 */\n\n\tswitch (cpio->mode) {\n\tcase 'o':\n\t\t/* COMMENT_30 */\n                      \n\t\tif (cpio->format == NULL)\n\t\t\tcpio->format = \"odc\"; /* COMMENT_32 */\n\n\t\tmode_out(cpio);\n\t\tbreak;\n\tcase 'i':\n\t\twhile (*cpio->argv != NULL) {\n\t\t\tif (archive_match_include_pattern(cpio->matching,\n\t\t\t    *cpio->argv) != VAR_25)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\t--cpio->argc;\n\t\t\t++cpio->argv;\n\t\t}\n\t\tif (cpio->option_list)\n\t\t\tmode_list(cpio);\n\t\telse\n\t\t\tmode_in(cpio);\n\t\tbreak;\n\tcase 'p':\n\t\tif (*cpio->argv == NULL || **cpio->argv == '\\0')\n\t\t\tlafe_errc(1, 0,\n\t\t\t    \"-p mode requires a target directory\");\n\t\tmode_pass(cpio, *cpio->argv);\n\t\tbreak;\n\tdefault:\n\t\tlafe_errc(1, 0,\n\t\t    \"Must specify at least one of -i, -o, or -p\");\n\t}\n\n\tarchive_match_free(cpio->matching);\n\tfree_cache(cpio->gname_cache);\n\tfree_cache(cpio->uname_cache);\n\tfree(cpio->destdir);\n\tpassphrase_free(cpio->ppbuff);\n\treturn (cpio->return_value);\n}",
  "func_graph_path_before": "libarchive/59357157706d47c365b2227739e17daba3607526/cpio.c/vul/before/0.json",
  "func": "int\nmain(int argc, char *argv[])\n{\n\tstatic char buff[16384];\n\tstruct cpio _cpio; /* Allocated on stack. */\n\tstruct cpio *cpio;\n\tconst char *errmsg;\n\tint uid, gid;\n\tint opt;\n\n\tcpio = &_cpio;\n\tmemset(cpio, 0, sizeof(*cpio));\n\tcpio->buff = buff;\n\tcpio->buff_size = sizeof(buff);\n\n#if defined(HAVE_SIGACTION) && defined(SIGPIPE)\n\t{ /* Ignore SIGPIPE signals. */\n\t\tstruct sigaction sa;\n\t\tsigemptyset(&sa.sa_mask);\n\t\tsa.sa_flags = 0;\n\t\tsa.sa_handler = SIG_IGN;\n\t\tsigaction(SIGPIPE, &sa, NULL);\n\t}\n#endif\n\n\t/* Set lafe_progname before calling lafe_warnc. */\n\tlafe_setprogname(*argv, \"bsdcpio\");\n\n#if HAVE_SETLOCALE\n\tif (setlocale(LC_ALL, \"\") == NULL)\n\t\tlafe_warnc(0, \"Failed to set default locale\");\n#endif\n\n\tcpio->uid_override = -1;\n\tcpio->gid_override = -1;\n\tcpio->argv = argv;\n\tcpio->argc = argc;\n\tcpio->mode = '\\0';\n\tcpio->verbose = 0;\n\tcpio->compress = '\\0';\n\tcpio->extract_flags = ARCHIVE_EXTRACT_NO_AUTODIR;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_NO_OVERWRITE_NEWER;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_SECURE_SYMLINKS;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_SECURE_NODOTDOT;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_PERM;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_FFLAGS;\n\tcpio->extract_flags |= ARCHIVE_EXTRACT_ACL;\n#if !defined(_WIN32) && !defined(__CYGWIN__)\n\tif (geteuid() == 0)\n\t\tcpio->extract_flags |= ARCHIVE_EXTRACT_OWNER;\n#endif\n\tcpio->bytes_per_block = 512;\n\tcpio->filename = NULL;\n\n\tcpio->matching = archive_match_new();\n\tif (cpio->matching == NULL)\n\t\tlafe_errc(1, 0, \"Out of memory\");\n\n\twhile ((opt = cpio_getopt(cpio)) != -1) {\n\t\tswitch (opt) {\n\t\tcase '0': /* GNU convention: --null, -0 */\n\t\t\tcpio->option_null = 1;\n\t\t\tbreak;\n\t\tcase 'A': /* NetBSD/OpenBSD */\n\t\t\tcpio->option_append = 1;\n\t\t\tbreak;\n\t\tcase 'a': /* POSIX 1997 */\n\t\t\tcpio->option_atime_restore = 1;\n\t\t\tbreak;\n\t\tcase 'B': /* POSIX 1997 */\n\t\t\tcpio->bytes_per_block = 5120;\n\t\t\tbreak;\n\t\tcase OPTION_B64ENCODE:\n\t\t\tcpio->add_filter = opt;\n\t\t\tbreak;\n\t\tcase 'C': /* NetBSD/OpenBSD */\n\t\t\tcpio->bytes_per_block = atoi(cpio->argument);\n\t\t\tif (cpio->bytes_per_block <= 0)\n\t\t\t\tlafe_errc(1, 0, \"Invalid blocksize %s\", cpio->argument);\n\t\t\tbreak;\n\t\tcase 'c': /* POSIX 1997 */\n\t\t\tcpio->format = \"odc\";\n\t\t\tbreak;\n\t\tcase 'd': /* POSIX 1997 */\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_NO_AUTODIR;\n\t\t\tbreak;\n\t\tcase 'E': /* NetBSD/OpenBSD */\n\t\t\tif (archive_match_include_pattern_from_file(\n\t\t\t    cpio->matching, cpio->argument,\n\t\t\t    cpio->option_null) != ARCHIVE_OK)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\tbreak;\n\t\tcase 'F': /* NetBSD/OpenBSD/GNU cpio */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'f': /* POSIX 1997 */\n\t\t\tif (archive_match_exclude_pattern(cpio->matching,\n\t\t\t    cpio->argument) != ARCHIVE_OK)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\tbreak;\n\t\tcase OPTION_GRZIP:\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase 'H': /* GNU cpio (also --format) */\n\t\t\tcpio->format = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'h':\n\t\t\tlong_help();\n\t\t\tbreak;\n\t\tcase 'I': /* NetBSD/OpenBSD */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'i': /* POSIX 1997 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -i and -%c\", cpio->mode);\n\t\t\tcpio->mode = opt;\n\t\t\tbreak;\n\t\tcase 'J': /* GNU tar, others */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase 'j': /* GNU tar, others */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase OPTION_INSECURE:\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_SYMLINKS;\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_NODOTDOT;\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS;\n\t\t\tbreak;\n\t\tcase 'L': /* GNU cpio */\n\t\t\tcpio->option_follow_links = 1;\n\t\t\tbreak;\n\t\tcase 'l': /* POSIX 1997 */\n\t\t\tcpio->option_link = 1;\n\t\t\tbreak;\n\t\tcase OPTION_LRZIP:\n\t\tcase OPTION_LZ4:\n\t\tcase OPTION_LZMA: /* GNU tar, others */\n\t\tcase OPTION_LZOP: /* GNU tar, others */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase 'm': /* POSIX 1997 */\n\t\t\tcpio->extract_flags |= ARCHIVE_EXTRACT_TIME;\n\t\t\tbreak;\n\t\tcase 'n': /* GNU cpio */\n\t\t\tcpio->option_numeric_uid_gid = 1;\n\t\t\tbreak;\n\t\tcase OPTION_NO_PRESERVE_OWNER: /* GNU cpio */\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_OWNER;\n\t\t\tbreak;\n\t\tcase 'O': /* GNU cpio */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'o': /* POSIX 1997 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -o and -%c\", cpio->mode);\n\t\t\tcpio->mode = opt;\n\t\t\tbreak;\n\t\tcase 'p': /* POSIX 1997 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -p and -%c\", cpio->mode);\n\t\t\tcpio->mode = opt;\n\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_NODOTDOT;\n\t\t\tbreak;\n\t\tcase OPTION_PASSPHRASE:\n\t\t\tcpio->passphrase = cpio->argument;\n\t\t\tbreak;\n\t\tcase OPTION_PRESERVE_OWNER:\n\t\t\tcpio->extract_flags |= ARCHIVE_EXTRACT_OWNER;\n\t\t\tbreak;\n\t\tcase OPTION_QUIET: /* GNU cpio */\n\t\t\tcpio->quiet = 1;\n\t\t\tbreak;\n\t\tcase 'R': /* GNU cpio, also --owner */\n\t\t\t/* TODO: owner_parse should return uname/gname\n\t\t\t * also; use that to set [ug]name_override. */\n\t\t\terrmsg = owner_parse(cpio->argument, &uid, &gid);\n\t\t\tif (errmsg) {\n\t\t\t\tlafe_warnc(-1, \"%s\", errmsg);\n\t\t\t\tusage();\n\t\t\t}\n\t\t\tif (uid != -1) {\n\t\t\t\tcpio->uid_override = uid;\n\t\t\t\tcpio->uname_override = NULL;\n\t\t\t}\n\t\t\tif (gid != -1) {\n\t\t\t\tcpio->gid_override = gid;\n\t\t\t\tcpio->gname_override = NULL;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'r': /* POSIX 1997 */\n\t\t\tcpio->option_rename = 1;\n\t\t\tbreak;\n\t\tcase 't': /* POSIX 1997 */\n\t\t\tcpio->option_list = 1;\n\t\t\tbreak;\n\t\tcase 'u': /* POSIX 1997 */\n\t\t\tcpio->extract_flags\n\t\t\t    &= ~ARCHIVE_EXTRACT_NO_OVERWRITE_NEWER;\n\t\t\tbreak;\n\t\tcase OPTION_UUENCODE:\n\t\t\tcpio->add_filter = opt;\n\t\t\tbreak;\n\t\tcase 'v': /* POSIX 1997 */\n\t\t\tcpio->verbose++;\n\t\t\tbreak;\n\t\tcase 'V': /* GNU cpio */\n\t\t\tcpio->dot++;\n\t\t\tbreak;\n\t\tcase OPTION_VERSION: /* GNU convention */\n\t\t\tversion();\n\t\t\tbreak;\n#if 0\n\t        /*\n\t\t * cpio_getopt() handles -W specially, so it's not\n\t\t * available here.\n\t\t */\n\t\tcase 'W': /* Obscure, but useful GNU convention. */\n\t\t\tbreak;\n#endif\n\t\tcase 'y': /* tar convention */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase 'Z': /* tar convention */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tcase 'z': /* tar convention */\n\t\t\tcpio->compress = opt;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tusage();\n\t\t}\n\t}\n\n\t/*\n\t * Sanity-check args, error out on nonsensical combinations.\n\t */\n\t/* -t implies -i if no mode was specified. */\n\tif (cpio->option_list && cpio->mode == '\\0')\n\t\tcpio->mode = 'i';\n\t/* -t requires -i */\n\tif (cpio->option_list && cpio->mode != 'i')\n\t\tlafe_errc(1, 0, \"Option -t requires -i\");\n\t/* -n requires -it */\n\tif (cpio->option_numeric_uid_gid && !cpio->option_list)\n\t\tlafe_errc(1, 0, \"Option -n requires -it\");\n\t/* Can only specify format when writing */\n\tif (cpio->format != NULL && cpio->mode != 'o')\n\t\tlafe_errc(1, 0, \"Option --format requires -o\");\n\t/* -l requires -p */\n\tif (cpio->option_link && cpio->mode != 'p')\n\t\tlafe_errc(1, 0, \"Option -l requires -p\");\n\t/* -v overrides -V */\n\tif (cpio->dot && cpio->verbose)\n\t\tcpio->dot = 0;\n\t/* TODO: Flag other nonsensical combinations. */\n\n\tswitch (cpio->mode) {\n\tcase 'o':\n\t\t/* TODO: Implement old binary format in libarchive,\n\t\t   use that here. */\n\t\tif (cpio->format == NULL)\n\t\t\tcpio->format = \"odc\"; /* Default format */\n\n\t\tmode_out(cpio);\n\t\tbreak;\n\tcase 'i':\n\t\twhile (*cpio->argv != NULL) {\n\t\t\tif (archive_match_include_pattern(cpio->matching,\n\t\t\t    *cpio->argv) != ARCHIVE_OK)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\t--cpio->argc;\n\t\t\t++cpio->argv;\n\t\t}\n\t\tif (cpio->option_list)\n\t\t\tmode_list(cpio);\n\t\telse\n\t\t\tmode_in(cpio);\n\t\tbreak;\n\tcase 'p':\n\t\tif (*cpio->argv == NULL || **cpio->argv == '\\0')\n\t\t\tlafe_errc(1, 0,\n\t\t\t    \"-p mode requires a target directory\");\n\t\tmode_pass(cpio, *cpio->argv);\n\t\tbreak;\n\tdefault:\n\t\tlafe_errc(1, 0,\n\t\t    \"Must specify at least one of -i, -o, or -p\");\n\t}\n\n\tarchive_match_free(cpio->matching);\n\tfree_cache(cpio->gname_cache);\n\tfree_cache(cpio->uname_cache);\n\tfree(cpio->destdir);\n\tpassphrase_free(cpio->ppbuff);\n\treturn (cpio->return_value);\n}",
  "abstract_func": "int\nmain(int VAR_0, char *VAR_1[])\n{\n\tstatic char VAR_2[16384];\n\tstruct cpio VAR_3; /* COMMENT_0 */\n\tstruct cpio *cpio;\n\tconst char *VAR_4;\n\tint VAR_5, VAR_6;\n\tint VAR_7;\n\n\tcpio = &VAR_3;\n\tmemset(cpio, 0, sizeof(*cpio));\n\tcpio->buff = VAR_2;\n\tcpio->buff_size = sizeof(VAR_2);\n\n#if defined(VAR_8) && defined(VAR_9)\n\t{ /* COMMENT_1 */\n\t\tstruct sigaction VAR_10;\n\t\tsigemptyset(&VAR_10.sa_mask);\n\t\tVAR_10.sa_flags = 0;\n\t\tVAR_10.sa_handler = VAR_11;\n\t\tsigaction(VAR_9, &VAR_10, NULL);\n\t}\n#endif\n\n\t/* COMMENT_2 */\n\tlafe_setprogname(*VAR_1, \"bsdcpio\");\n\n#if VAR_12\n\tif (setlocale(VAR_13, \"\") == NULL)\n\t\tlafe_warnc(0, \"Failed to set default locale\");\n#endif\n\n\tcpio->uid_override = -1;\n\tcpio->gid_override = -1;\n\tcpio->argv = VAR_1;\n\tcpio->argc = VAR_0;\n\tcpio->mode = '\\0';\n\tcpio->verbose = 0;\n\tcpio->compress = '\\0';\n\tcpio->extract_flags = VAR_14;\n\tcpio->extract_flags |= VAR_15;\n\tcpio->extract_flags |= VAR_16;\n\tcpio->extract_flags |= VAR_17;\n\tcpio->extract_flags |= VAR_18;\n\tcpio->extract_flags |= VAR_19;\n\tcpio->extract_flags |= VAR_20;\n\tcpio->extract_flags |= VAR_21;\n#if !defined(VAR_22) && !defined(VAR_23)\n\tif (geteuid() == 0)\n\t\tcpio->extract_flags |= VAR_24;\n#endif\n\tcpio->bytes_per_block = 512;\n\tcpio->filename = NULL;\n\n\tcpio->matching = archive_match_new();\n\tif (cpio->matching == NULL)\n\t\tlafe_errc(1, 0, \"Out of memory\");\n\n\twhile ((VAR_7 = cpio_getopt(cpio)) != -1) {\n\t\tswitch (VAR_7) {\n\t\tcase '0': /* COMMENT_3 */\n\t\t\tcpio->option_null = 1;\n\t\t\tbreak;\n\t\tcase 'A': /* COMMENT_4 */\n\t\t\tcpio->option_append = 1;\n\t\t\tbreak;\n\t\tcase 'a': /* COMMENT_5 */\n\t\t\tcpio->option_atime_restore = 1;\n\t\t\tbreak;\n\t\tcase 'B': /* COMMENT_5 */\n\t\t\tcpio->bytes_per_block = 5120;\n\t\t\tbreak;\n\t\tcase VAR_25:\n\t\t\tcpio->add_filter = VAR_7;\n\t\t\tbreak;\n\t\tcase 'C': /* COMMENT_4 */\n\t\t\tcpio->bytes_per_block = atoi(cpio->argument);\n\t\t\tif (cpio->bytes_per_block <= 0)\n\t\t\t\tlafe_errc(1, 0, \"Invalid blocksize %s\", cpio->argument);\n\t\t\tbreak;\n\t\tcase 'c': /* COMMENT_5 */\n\t\t\tcpio->format = \"odc\";\n\t\t\tbreak;\n\t\tcase 'd': /* COMMENT_5 */\n\t\t\tcpio->extract_flags &= ~VAR_14;\n\t\t\tbreak;\n\t\tcase 'E': /* COMMENT_4 */\n\t\t\tif (archive_match_include_pattern_from_file(\n\t\t\t    cpio->matching, cpio->argument,\n\t\t\t    cpio->option_null) != VAR_26)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\tbreak;\n\t\tcase 'F': /* COMMENT_6 */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'f': /* COMMENT_5 */\n\t\t\tif (archive_match_exclude_pattern(cpio->matching,\n\t\t\t    cpio->argument) != VAR_26)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\tbreak;\n\t\tcase VAR_27:\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase 'H': /* COMMENT_7 */\n\t\t\tcpio->format = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'h':\n\t\t\tlong_help();\n\t\t\tbreak;\n\t\tcase 'I': /* COMMENT_4 */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'i': /* COMMENT_5 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -i and -%c\", cpio->mode);\n\t\t\tcpio->mode = VAR_7;\n\t\t\tbreak;\n\t\tcase 'J': /* COMMENT_8 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase 'j': /* COMMENT_8 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase VAR_28:\n\t\t\tcpio->extract_flags &= ~VAR_16;\n\t\t\tcpio->extract_flags &= ~VAR_17;\n\t\t\tcpio->extract_flags &= ~VAR_18;\n\t\t\tbreak;\n\t\tcase 'L': /* COMMENT_9 */\n\t\t\tcpio->option_follow_links = 1;\n\t\t\tbreak;\n\t\tcase 'l': /* COMMENT_5 */\n\t\t\tcpio->option_link = 1;\n\t\t\tbreak;\n\t\tcase VAR_29:\n\t\tcase VAR_30:\n\t\tcase VAR_31: /* COMMENT_8 */\n\t\tcase VAR_32: /* COMMENT_8 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase 'm': /* COMMENT_5 */\n\t\t\tcpio->extract_flags |= VAR_33;\n\t\t\tbreak;\n\t\tcase 'n': /* COMMENT_9 */\n\t\t\tcpio->option_numeric_uid_gid = 1;\n\t\t\tbreak;\n\t\tcase VAR_34: /* COMMENT_9 */\n\t\t\tcpio->extract_flags &= ~VAR_24;\n\t\t\tbreak;\n\t\tcase 'O': /* COMMENT_9 */\n\t\t\tcpio->filename = cpio->argument;\n\t\t\tbreak;\n\t\tcase 'o': /* COMMENT_5 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -o and -%c\", cpio->mode);\n\t\t\tcpio->mode = VAR_7;\n\t\t\tbreak;\n\t\tcase 'p': /* COMMENT_5 */\n\t\t\tif (cpio->mode != '\\0')\n\t\t\t\tlafe_errc(1, 0,\n\t\t\t\t    \"Cannot use both -p and -%c\", cpio->mode);\n\t\t\tcpio->mode = VAR_7;\n\t\t\tcpio->extract_flags &= ~VAR_17;\n\t\t\tbreak;\n\t\tcase VAR_35:\n\t\t\tcpio->passphrase = cpio->argument;\n\t\t\tbreak;\n\t\tcase VAR_36:\n\t\t\tcpio->extract_flags |= VAR_24;\n\t\t\tbreak;\n\t\tcase VAR_37: /* COMMENT_9 */\n\t\t\tcpio->quiet = 1;\n\t\t\tbreak;\n\t\tcase 'R': /* COMMENT_10 */\n\t\t\t/* COMMENT_11 */\n                                                 \n\t\t\tVAR_4 = owner_parse(cpio->argument, &VAR_5, &VAR_6);\n\t\t\tif (VAR_4) {\n\t\t\t\tlafe_warnc(-1, \"%s\", VAR_4);\n\t\t\t\tusage();\n\t\t\t}\n\t\t\tif (VAR_5 != -1) {\n\t\t\t\tcpio->uid_override = VAR_5;\n\t\t\t\tcpio->uname_override = NULL;\n\t\t\t}\n\t\t\tif (VAR_6 != -1) {\n\t\t\t\tcpio->gid_override = VAR_6;\n\t\t\t\tcpio->gname_override = NULL;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'r': /* COMMENT_5 */\n\t\t\tcpio->option_rename = 1;\n\t\t\tbreak;\n\t\tcase 't': /* COMMENT_5 */\n\t\t\tcpio->option_list = 1;\n\t\t\tbreak;\n\t\tcase 'u': /* COMMENT_5 */\n\t\t\tcpio->extract_flags\n\t\t\t    &= ~VAR_15;\n\t\t\tbreak;\n\t\tcase VAR_38:\n\t\t\tcpio->add_filter = VAR_7;\n\t\t\tbreak;\n\t\tcase 'v': /* COMMENT_5 */\n\t\t\tcpio->verbose++;\n\t\t\tbreak;\n\t\tcase 'V': /* COMMENT_9 */\n\t\t\tcpio->dot++;\n\t\t\tbreak;\n\t\tcase VAR_39: /* COMMENT_13 */\n\t\t\tversion();\n\t\t\tbreak;\n#if 0\n\t        /* COMMENT_14 */\n                                                    \n                    \n     \n\t\tcase 'W': /* COMMENT_18 */\n\t\t\tbreak;\n#endif\n\t\tcase 'y': /* COMMENT_19 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase 'Z': /* COMMENT_19 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tcase 'z': /* COMMENT_19 */\n\t\t\tcpio->compress = VAR_7;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tusage();\n\t\t}\n\t}\n\n\t/* COMMENT_20 */\n                                                             \n    \n\t/* COMMENT_23 */\n\tif (cpio->option_list && cpio->mode == '\\0')\n\t\tcpio->mode = 'i';\n\t/* COMMENT_24 */\n\tif (cpio->option_list && cpio->mode != 'i')\n\t\tlafe_errc(1, 0, \"Option -t requires -i\");\n\t/* COMMENT_25 */\n\tif (cpio->option_numeric_uid_gid && !cpio->option_list)\n\t\tlafe_errc(1, 0, \"Option -n requires -it\");\n\t/* COMMENT_26 */\n\tif (cpio->format != NULL && cpio->mode != 'o')\n\t\tlafe_errc(1, 0, \"Option --format requires -o\");\n\t/* COMMENT_27 */\n\tif (cpio->option_link && cpio->mode != 'p')\n\t\tlafe_errc(1, 0, \"Option -l requires -p\");\n\t/* COMMENT_28 */\n\tif (cpio->dot && cpio->verbose)\n\t\tcpio->dot = 0;\n\t/* COMMENT_29 */\n\n\tswitch (cpio->mode) {\n\tcase 'o':\n\t\t/* COMMENT_30 */\n                      \n\t\tif (cpio->format == NULL)\n\t\t\tcpio->format = \"odc\"; /* COMMENT_32 */\n\n\t\tmode_out(cpio);\n\t\tbreak;\n\tcase 'i':\n\t\twhile (*cpio->argv != NULL) {\n\t\t\tif (archive_match_include_pattern(cpio->matching,\n\t\t\t    *cpio->argv) != VAR_26)\n\t\t\t\tlafe_errc(1, 0, \"Error : %s\",\n\t\t\t\t    archive_error_string(cpio->matching));\n\t\t\t--cpio->argc;\n\t\t\t++cpio->argv;\n\t\t}\n\t\tif (cpio->option_list)\n\t\t\tmode_list(cpio);\n\t\telse\n\t\t\tmode_in(cpio);\n\t\tbreak;\n\tcase 'p':\n\t\tif (*cpio->argv == NULL || **cpio->argv == '\\0')\n\t\t\tlafe_errc(1, 0,\n\t\t\t    \"-p mode requires a target directory\");\n\t\tmode_pass(cpio, *cpio->argv);\n\t\tbreak;\n\tdefault:\n\t\tlafe_errc(1, 0,\n\t\t    \"Must specify at least one of -i, -o, or -p\");\n\t}\n\n\tarchive_match_free(cpio->matching);\n\tfree_cache(cpio->gname_cache);\n\tfree_cache(cpio->uname_cache);\n\tfree(cpio->destdir);\n\tpassphrase_free(cpio->ppbuff);\n\treturn (cpio->return_value);\n}",
  "func_graph_path": "libarchive/59357157706d47c365b2227739e17daba3607526/cpio.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -42,6 +42,7 @@\n \tcpio->extract_flags |= ARCHIVE_EXTRACT_NO_OVERWRITE_NEWER;\n \tcpio->extract_flags |= ARCHIVE_EXTRACT_SECURE_SYMLINKS;\n \tcpio->extract_flags |= ARCHIVE_EXTRACT_SECURE_NODOTDOT;\n+\tcpio->extract_flags |= ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS;\n \tcpio->extract_flags |= ARCHIVE_EXTRACT_PERM;\n \tcpio->extract_flags |= ARCHIVE_EXTRACT_FFLAGS;\n \tcpio->extract_flags |= ARCHIVE_EXTRACT_ACL;\n@@ -127,6 +128,7 @@\n \t\tcase OPTION_INSECURE:\n \t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_SYMLINKS;\n \t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_NODOTDOT;\n+\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS;\n \t\t\tbreak;\n \t\tcase 'L': /* GNU cpio */\n \t\t\tcpio->option_follow_links = 1;",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\tcpio->extract_flags |= ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS;",
      "\t\t\tcpio->extract_flags &= ~ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libarchive/libarchive/pull/110",
  "description": {
    "pr_info": {
      "title": "Fix directory traversal in bsdcpio",
      "number": 110
    },
    "comment": [
      "This fixes a directory traversal issue in the cpio tool that was originally reported by [Alexander Cherepanov](https://groups.google.com/forum/#!msg/libarchive-discuss/dN9y1VvE1Qk/Z9uerigjQn0J).\n\nThe patch adds a new option `ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS` that disables extraction of absolute paths. It also provides a test case and updates the documentation.\n\nNote that I only implemented this for posix, because I don't have a windows machine to test this on.\n\nAlso, a [CVE id was requested for this issue](http://www.openwall.com/lists/oss-security/2015/01/16/7) but none has been assigned yet.\n",
      "This is a nice start.  The tests need a few more checks to verify that the security check really does prevent or not prevent the file creation.  (Right now, you're just verifying that the security check returns an error.)\n",
      "Should be fixed now. I use `assertFileExists(\"/tmp/abs\")`, then `unlink(\"/tmp/abs\")` in the test without the flag, and `assertFileNotExists(\"/tmp/abs\")` in the one with the flag.\n\nNot sure if using `unlink()` is ok though.\n",
      "If we're going to use a fixed name, we need to use one that is reasonably certain to not interfere with any other user of /tmp.  How about\n   /tmp/libarchive_test-test_write_disk_secure-absolute_path.tmp\n",
      "Sounds good to me. I just updated the PR.\n",
      "Thank you.  I'll merge this now; we will of course need to update this logic soon to identify absolute paths on Windows as well.\n",
      "CVE-2015-2304 was assigned for this at some point.OSVDB 117148 corresponds to this entry as well.\n",
      "I'm wondering if this fix is correct for the `cpio -dumpl <abspath>` case, used in quite a few scripts (FreeBSD ports's macro ${COPY_TREE_SHARE} as a prime example) to hardlink something from place a to b, falling back top copy if no hardlink is possible.\n\nThe error is thrown on the path that is the combination of the <abspath> argument and the relative path provided by stdin. So if input path is verified to be relative and abspath argument is identical to it's realpath, there is no issue and the error thrown is a false positive. Please correct me if I'm missing something here.\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "The patch addresses a directory traversal vulnerability by adding a security flag to prevent extracting absolute paths. The commit message, vulnerability description, and code changes all align with a security fix.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}