{
  "cve_id": "CVE-2014-9748",
  "cwe_ids": [
    "CWE-362"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "libuv",
  "commit_msg": "win: fix unsavory rwlock fallback implementation\n\nBefore this patch an uv_mutex_t (backed by a critical section) could be\nreleased by a tread different from the thread that acquired it, which is\nnot allowed. This is fixed by using a semaphore instead.\n\nNote that the affected code paths were used on Windows XP and Windows\nServer 2003 only.\n\nFixes: https://github.com/libuv/libuv/issues/515\nPR-URL: https://github.com/libuv/libuv/pull/516\nReviewed-By: Ben Noordhuis <info@bnoordhuis.nl>\nReviewed-By: Saúl Ibarra Corretgé <saghul@gmail.com>",
  "commit_hash": "3eb6764acd2d708f6873c177a77f9bef3b266fa9",
  "git_url": "https://github.com/libuv/libuv/commit/3eb6764acd2d708f6873c177a77f9bef3b266fa9",
  "file_path": "src/win/thread.c",
  "func_name": "uv__rwlock_fallback_rdunlock",
  "func_before": "static void uv__rwlock_fallback_rdunlock(uv_rwlock_t* rwlock) {\n  uv_mutex_lock(&rwlock->fallback_.read_mutex_);\n\n  if (--rwlock->fallback_.num_readers_ == 0)\n    uv_mutex_unlock(&rwlock->fallback_.write_mutex_);\n\n  uv_mutex_unlock(&rwlock->fallback_.read_mutex_);\n}",
  "abstract_func_before": "static void uv__rwlock_fallback_rdunlock(uv_rwlock_t* VAR_0) {\n  uv_mutex_lock(&VAR_0->fallback_.read_mutex_);\n\n  if (--VAR_0->fallback_.num_readers_ == 0)\n    uv_mutex_unlock(&VAR_0->fallback_.write_mutex_);\n\n  uv_mutex_unlock(&VAR_0->fallback_.read_mutex_);\n}",
  "func_graph_path_before": "libuv/3eb6764acd2d708f6873c177a77f9bef3b266fa9/thread.c/vul/before/7.json",
  "func": "static void uv__rwlock_fallback_rdunlock(uv_rwlock_t* rwlock) {\n  EnterCriticalSection(&rwlock->fallback_.read_lock_.cs);\n\n  if (--rwlock->fallback_.num_readers_ == 0) {\n    if (!ReleaseSemaphore(rwlock->fallback_.write_lock_.sem, 1, NULL))\n      uv_fatal_error(GetLastError(), \"ReleaseSemaphore\");\n  }\n\n  LeaveCriticalSection(&rwlock->fallback_.read_lock_.cs);\n}",
  "abstract_func": "static void uv__rwlock_fallback_rdunlock(uv_rwlock_t* VAR_0) {\n  EnterCriticalSection(&VAR_0->fallback_.read_lock_.cs);\n\n  if (--VAR_0->fallback_.num_readers_ == 0) {\n    if (!ReleaseSemaphore(VAR_0->fallback_.write_lock_.sem, 1, NULL))\n      uv_fatal_error(GetLastError(), \"ReleaseSemaphore\");\n  }\n\n  LeaveCriticalSection(&VAR_0->fallback_.read_lock_.cs);\n}",
  "func_graph_path": "libuv/3eb6764acd2d708f6873c177a77f9bef3b266fa9/thread.c/vul/after/7.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,8 +1,10 @@\n static void uv__rwlock_fallback_rdunlock(uv_rwlock_t* rwlock) {\n-  uv_mutex_lock(&rwlock->fallback_.read_mutex_);\n+  EnterCriticalSection(&rwlock->fallback_.read_lock_.cs);\n \n-  if (--rwlock->fallback_.num_readers_ == 0)\n-    uv_mutex_unlock(&rwlock->fallback_.write_mutex_);\n+  if (--rwlock->fallback_.num_readers_ == 0) {\n+    if (!ReleaseSemaphore(rwlock->fallback_.write_lock_.sem, 1, NULL))\n+      uv_fatal_error(GetLastError(), \"ReleaseSemaphore\");\n+  }\n \n-  uv_mutex_unlock(&rwlock->fallback_.read_mutex_);\n+  LeaveCriticalSection(&rwlock->fallback_.read_lock_.cs);\n }",
  "diff_line_info": {
    "deleted_lines": [
      "  uv_mutex_lock(&rwlock->fallback_.read_mutex_);",
      "  if (--rwlock->fallback_.num_readers_ == 0)",
      "    uv_mutex_unlock(&rwlock->fallback_.write_mutex_);",
      "  uv_mutex_unlock(&rwlock->fallback_.read_mutex_);"
    ],
    "added_lines": [
      "  EnterCriticalSection(&rwlock->fallback_.read_lock_.cs);",
      "  if (--rwlock->fallback_.num_readers_ == 0) {",
      "    if (!ReleaseSemaphore(rwlock->fallback_.write_lock_.sem, 1, NULL))",
      "      uv_fatal_error(GetLastError(), \"ReleaseSemaphore\");",
      "  }",
      "  LeaveCriticalSection(&rwlock->fallback_.read_lock_.cs);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libuv/libuv/pull/516",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/libuv/libuv/pull/516: 403 Client Error: Forbidden for url: https://api.github.com/repos/libuv/libuv/pulls/516",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "Final Classification: Defect Remediation & Feature Upgrades; Confidence: 0.8"
}