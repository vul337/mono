{
  "cve_id": "CVE-2022-45868",
  "cwe_ids": [
    "CWE-312"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "h2database",
  "commit_msg": "Disallow plain webAdminPassword values to force usage of hashes",
  "commit_hash": "23ee3d0b973923c135fa01356c8eaed40b895393",
  "git_url": "https://github.com/h2database/h2database/commit/23ee3d0b973923c135fa01356c8eaed40b895393",
  "file_path": "h2/src/main/org/h2/tools/Server.java",
  "func_name": "runTool",
  "func_before": "@Override\n    public void runTool(String... args) throws SQLException {\n        boolean tcpStart = false, pgStart = false, webStart = false;\n        boolean browserStart = false;\n        boolean tcpShutdown = false, tcpShutdownForce = false;\n        String tcpPassword = \"\";\n        String tcpShutdownServer = \"\";\n        boolean startDefaultServers = true;\n        for (int i = 0; args != null && i < args.length; i++) {\n            String arg = args[i];\n            if (arg == null) {\n            } else if (\"-?\".equals(arg) || \"-help\".equals(arg)) {\n                showUsage();\n                return;\n            } else if (arg.startsWith(\"-web\")) {\n                if (\"-web\".equals(arg)) {\n                    startDefaultServers = false;\n                    webStart = true;\n                } else if (\"-webAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webExternalNames\".equals(arg)) {\n                    i++;\n                } else if (\"-webDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webSSL\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webPort\".equals(arg)) {\n                    i++;\n                } else if (\"-webAdminPassword\".equals(arg)) {\n                    i++;\n                } else {\n                    showUsageAndThrowUnsupportedOption(arg);\n                }\n            } else if (\"-browser\".equals(arg)) {\n                startDefaultServers = false;\n                browserStart = true;\n            } else if (arg.startsWith(\"-tcp\")) {\n                if (\"-tcp\".equals(arg)) {\n                    startDefaultServers = false;\n                    tcpStart = true;\n                } else if (\"-tcpAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpSSL\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpPort\".equals(arg)) {\n                    i++;\n                } else if (\"-tcpPassword\".equals(arg)) {\n                    tcpPassword = args[++i];\n                } else if (\"-tcpShutdown\".equals(arg)) {\n                    startDefaultServers = false;\n                    tcpShutdown = true;\n                    tcpShutdownServer = args[++i];\n                } else if (\"-tcpShutdownForce\".equals(arg)) {\n                    tcpShutdownForce = true;\n                } else {\n                    showUsageAndThrowUnsupportedOption(arg);\n                }\n            } else if (arg.startsWith(\"-pg\")) {\n                if (\"-pg\".equals(arg)) {\n                    startDefaultServers = false;\n                    pgStart = true;\n                } else if (\"-pgAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-pgDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-pgPort\".equals(arg)) {\n                    i++;\n                } else {\n                    showUsageAndThrowUnsupportedOption(arg);\n                }\n            } else if (\"-properties\".equals(arg)) {\n                i++;\n            } else if (\"-trace\".equals(arg)) {\n                // no parameters\n            } else if (\"-ifExists\".equals(arg)) {\n                // no parameters\n            } else if (\"-ifNotExists\".equals(arg)) {\n                // no parameters\n            } else if (\"-baseDir\".equals(arg)) {\n                i++;\n            } else if (\"-key\".equals(arg)) {\n                i += 2;\n            } else {\n                showUsageAndThrowUnsupportedOption(arg);\n            }\n        }\n        verifyArgs(args);\n        if (startDefaultServers) {\n            tcpStart = true;\n            pgStart = true;\n            webStart = true;\n            browserStart = true;\n        }\n        // TODO server: maybe use one single properties file?\n        if (tcpShutdown) {\n            out.println(\"Shutting down TCP Server at \" + tcpShutdownServer);\n            shutdownTcpServer(tcpShutdownServer, tcpPassword,\n                    tcpShutdownForce, false);\n        }\n        try {\n            if (tcpStart) {\n                tcp = createTcpServer(args);\n                tcp.start();\n                out.println(tcp.getStatus());\n                tcp.setShutdownHandler(this);\n            }\n            if (pgStart) {\n                pg = createPgServer(args);\n                pg.start();\n                out.println(pg.getStatus());\n            }\n            if (webStart) {\n                web = createWebServer(args);\n                web.setShutdownHandler(this);\n                SQLException result = null;\n                try {\n                    web.start();\n                } catch (Exception e) {\n                    result = DbException.toSQLException(e);\n                }\n                out.println(web.getStatus());\n                // start browser in any case (even if the server is already\n                // running) because some people don't look at the output, but\n                // are wondering why nothing happens\n                if (browserStart) {\n                    try {\n                        openBrowser(web.getURL());\n                    } catch (Exception e) {\n                        out.println(e.getMessage());\n                    }\n                }\n                if (result != null) {\n                    throw result;\n                }\n            } else if (browserStart) {\n                out.println(\"The browser can only start if a web server is started (-web)\");\n            }\n        } catch (SQLException e) {\n            stopAll();\n            throw e;\n        }\n    }",
  "abstract_func_before": "@Override\n    public void runTool(String... VAR_0) throws SQLException {\n        boolean VAR_1 = false, VAR_2 = false, VAR_3 = false;\n        boolean VAR_4 = false;\n        boolean VAR_5 = false, VAR_6 = false;\n        String VAR_7 = \"\";\n        String VAR_8 = \"\";\n        boolean VAR_9 = true;\n        for (int VAR_10 = 0; VAR_0 != null && VAR_10 < VAR_0.length; VAR_10++) {\n            String VAR_11 = VAR_0[VAR_10];\n            if (VAR_11 == null) {\n            } else if (\"-?\".equals(VAR_11) || \"-help\".equals(VAR_11)) {\n                showUsage();\n                return;\n            } else if (VAR_11.startsWith(\"-web\")) {\n                if (\"-web\".equals(VAR_11)) {\n                    VAR_9 = false;\n                    VAR_3 = true;\n                } else if (\"-webAllowOthers\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-webExternalNames\".equals(VAR_11)) {\n                    VAR_10++;\n                } else if (\"-webDaemon\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-webSSL\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-webPort\".equals(VAR_11)) {\n                    VAR_10++;\n                } else if (\"-webAdminPassword\".equals(VAR_11)) {\n                    VAR_10++;\n                } else {\n                    showUsageAndThrowUnsupportedOption(VAR_11);\n                }\n            } else if (\"-browser\".equals(VAR_11)) {\n                VAR_9 = false;\n                VAR_4 = true;\n            } else if (VAR_11.startsWith(\"-tcp\")) {\n                if (\"-tcp\".equals(VAR_11)) {\n                    VAR_9 = false;\n                    VAR_1 = true;\n                } else if (\"-tcpAllowOthers\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-tcpDaemon\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-tcpSSL\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-tcpPort\".equals(VAR_11)) {\n                    VAR_10++;\n                } else if (\"-tcpPassword\".equals(VAR_11)) {\n                    VAR_7 = VAR_0[++VAR_10];\n                } else if (\"-tcpShutdown\".equals(VAR_11)) {\n                    VAR_9 = false;\n                    VAR_5 = true;\n                    VAR_8 = VAR_0[++VAR_10];\n                } else if (\"-tcpShutdownForce\".equals(VAR_11)) {\n                    VAR_6 = true;\n                } else {\n                    showUsageAndThrowUnsupportedOption(VAR_11);\n                }\n            } else if (VAR_11.startsWith(\"-pg\")) {\n                if (\"-pg\".equals(VAR_11)) {\n                    VAR_9 = false;\n                    VAR_2 = true;\n                } else if (\"-pgAllowOthers\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-pgDaemon\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-pgPort\".equals(VAR_11)) {\n                    VAR_10++;\n                } else {\n                    showUsageAndThrowUnsupportedOption(VAR_11);\n                }\n            } else if (\"-properties\".equals(VAR_11)) {\n                VAR_10++;\n            } else if (\"-trace\".equals(VAR_11)) {\n                /* COMMENT_0 */\n            } else if (\"-ifExists\".equals(VAR_11)) {\n                /* COMMENT_0 */\n            } else if (\"-ifNotExists\".equals(VAR_11)) {\n                /* COMMENT_0 */\n            } else if (\"-baseDir\".equals(VAR_11)) {\n                VAR_10++;\n            } else if (\"-key\".equals(VAR_11)) {\n                VAR_10 += 2;\n            } else {\n                showUsageAndThrowUnsupportedOption(VAR_11);\n            }\n        }\n        verifyArgs(VAR_0);\n        if (VAR_9) {\n            VAR_1 = true;\n            VAR_2 = true;\n            VAR_3 = true;\n            VAR_4 = true;\n        }\n        /* COMMENT_1 */\n        if (VAR_5) {\n            VAR_12.println(\"Shutting down TCP Server at \" + VAR_8);\n            shutdownTcpServer(VAR_8, VAR_7,\n                    VAR_6, false);\n        }\n        try {\n            if (VAR_1) {\n                VAR_13 = createTcpServer(VAR_0);\n                VAR_13.start();\n                VAR_12.println(VAR_13.getStatus());\n                VAR_13.setShutdownHandler(this);\n            }\n            if (VAR_2) {\n                VAR_14 = createPgServer(VAR_0);\n                VAR_14.start();\n                VAR_12.println(VAR_14.getStatus());\n            }\n            if (VAR_3) {\n                VAR_15 = createWebServer(VAR_0);\n                VAR_15.setShutdownHandler(this);\n                SQLException VAR_16 = null;\n                try {\n                    VAR_15.start();\n                } catch (Exception VAR_17) {\n                    VAR_16 = VAR_18.toSQLException(VAR_17);\n                }\n                VAR_12.println(VAR_15.getStatus());\n                /* COMMENT_2 */\n                /* COMMENT_3 */\n                /* COMMENT_4 */\n                if (VAR_4) {\n                    try {\n                        openBrowser(VAR_15.getURL());\n                    } catch (Exception VAR_17) {\n                        VAR_12.println(VAR_17.getMessage());\n                    }\n                }\n                if (VAR_16 != null) {\n                    throw VAR_16;\n                }\n            } else if (VAR_4) {\n                VAR_12.println(\"The browser can only start if a web server is started (-web)\");\n            }\n        } catch (SQLException VAR_17) {\n            stopAll();\n            throw VAR_17;\n        }\n    }",
  "func_graph_path_before": "h2database/23ee3d0b973923c135fa01356c8eaed40b895393/Server.java/vul/before/1.json",
  "func": "@Override\n    public void runTool(String... args) throws SQLException {\n        boolean tcpStart = false, pgStart = false, webStart = false;\n        boolean browserStart = false;\n        boolean tcpShutdown = false, tcpShutdownForce = false;\n        String tcpPassword = \"\";\n        String tcpShutdownServer = \"\";\n        boolean startDefaultServers = true;\n        for (int i = 0; args != null && i < args.length; i++) {\n            String arg = args[i];\n            if (arg == null) {\n            } else if (\"-?\".equals(arg) || \"-help\".equals(arg)) {\n                showUsage();\n                return;\n            } else if (arg.startsWith(\"-web\")) {\n                if (\"-web\".equals(arg)) {\n                    startDefaultServers = false;\n                    webStart = true;\n                } else if (\"-webAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webExternalNames\".equals(arg)) {\n                    i++;\n                } else if (\"-webDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webSSL\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webPort\".equals(arg)) {\n                    i++;\n                } else if (\"-webAdminPassword\".equals(arg)) {\n                    if (fromCommandLine) {\n                        throwUnsupportedOption(arg);\n                    }\n                    i++;\n                } else {\n                    showUsageAndThrowUnsupportedOption(arg);\n                }\n            } else if (\"-browser\".equals(arg)) {\n                startDefaultServers = false;\n                browserStart = true;\n            } else if (arg.startsWith(\"-tcp\")) {\n                if (\"-tcp\".equals(arg)) {\n                    startDefaultServers = false;\n                    tcpStart = true;\n                } else if (\"-tcpAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpSSL\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpPort\".equals(arg)) {\n                    i++;\n                } else if (\"-tcpPassword\".equals(arg)) {\n                    tcpPassword = args[++i];\n                } else if (\"-tcpShutdown\".equals(arg)) {\n                    startDefaultServers = false;\n                    tcpShutdown = true;\n                    tcpShutdownServer = args[++i];\n                } else if (\"-tcpShutdownForce\".equals(arg)) {\n                    tcpShutdownForce = true;\n                } else {\n                    showUsageAndThrowUnsupportedOption(arg);\n                }\n            } else if (arg.startsWith(\"-pg\")) {\n                if (\"-pg\".equals(arg)) {\n                    startDefaultServers = false;\n                    pgStart = true;\n                } else if (\"-pgAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-pgDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-pgPort\".equals(arg)) {\n                    i++;\n                } else {\n                    showUsageAndThrowUnsupportedOption(arg);\n                }\n            } else if (\"-properties\".equals(arg)) {\n                i++;\n            } else if (\"-trace\".equals(arg)) {\n                // no parameters\n            } else if (\"-ifExists\".equals(arg)) {\n                // no parameters\n            } else if (\"-ifNotExists\".equals(arg)) {\n                // no parameters\n            } else if (\"-baseDir\".equals(arg)) {\n                i++;\n            } else if (\"-key\".equals(arg)) {\n                i += 2;\n            } else {\n                showUsageAndThrowUnsupportedOption(arg);\n            }\n        }\n        verifyArgs(args);\n        if (startDefaultServers) {\n            tcpStart = true;\n            pgStart = true;\n            webStart = true;\n            browserStart = true;\n        }\n        // TODO server: maybe use one single properties file?\n        if (tcpShutdown) {\n            out.println(\"Shutting down TCP Server at \" + tcpShutdownServer);\n            shutdownTcpServer(tcpShutdownServer, tcpPassword,\n                    tcpShutdownForce, false);\n        }\n        try {\n            if (tcpStart) {\n                tcp = createTcpServer(args);\n                tcp.start();\n                out.println(tcp.getStatus());\n                tcp.setShutdownHandler(this);\n            }\n            if (pgStart) {\n                pg = createPgServer(args);\n                pg.start();\n                out.println(pg.getStatus());\n            }\n            if (webStart) {\n                web = createWebServer(args);\n                web.setShutdownHandler(this);\n                SQLException result = null;\n                try {\n                    web.start();\n                } catch (Exception e) {\n                    result = DbException.toSQLException(e);\n                }\n                out.println(web.getStatus());\n                // start browser in any case (even if the server is already\n                // running) because some people don't look at the output, but\n                // are wondering why nothing happens\n                if (browserStart) {\n                    try {\n                        openBrowser(web.getURL());\n                    } catch (Exception e) {\n                        out.println(e.getMessage());\n                    }\n                }\n                if (result != null) {\n                    throw result;\n                }\n            } else if (browserStart) {\n                out.println(\"The browser can only start if a web server is started (-web)\");\n            }\n        } catch (SQLException e) {\n            stopAll();\n            throw e;\n        }\n    }",
  "abstract_func": "@Override\n    public void runTool(String... VAR_0) throws SQLException {\n        boolean VAR_1 = false, VAR_2 = false, VAR_3 = false;\n        boolean VAR_4 = false;\n        boolean VAR_5 = false, VAR_6 = false;\n        String VAR_7 = \"\";\n        String VAR_8 = \"\";\n        boolean VAR_9 = true;\n        for (int VAR_10 = 0; VAR_0 != null && VAR_10 < VAR_0.length; VAR_10++) {\n            String VAR_11 = VAR_0[VAR_10];\n            if (VAR_11 == null) {\n            } else if (\"-?\".equals(VAR_11) || \"-help\".equals(VAR_11)) {\n                showUsage();\n                return;\n            } else if (VAR_11.startsWith(\"-web\")) {\n                if (\"-web\".equals(VAR_11)) {\n                    VAR_9 = false;\n                    VAR_3 = true;\n                } else if (\"-webAllowOthers\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-webExternalNames\".equals(VAR_11)) {\n                    VAR_10++;\n                } else if (\"-webDaemon\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-webSSL\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-webPort\".equals(VAR_11)) {\n                    VAR_10++;\n                } else if (\"-webAdminPassword\".equals(VAR_11)) {\n                    if (VAR_12) {\n                        throwUnsupportedOption(VAR_11);\n                    }\n                    VAR_10++;\n                } else {\n                    showUsageAndThrowUnsupportedOption(VAR_11);\n                }\n            } else if (\"-browser\".equals(VAR_11)) {\n                VAR_9 = false;\n                VAR_4 = true;\n            } else if (VAR_11.startsWith(\"-tcp\")) {\n                if (\"-tcp\".equals(VAR_11)) {\n                    VAR_9 = false;\n                    VAR_1 = true;\n                } else if (\"-tcpAllowOthers\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-tcpDaemon\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-tcpSSL\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-tcpPort\".equals(VAR_11)) {\n                    VAR_10++;\n                } else if (\"-tcpPassword\".equals(VAR_11)) {\n                    VAR_7 = VAR_0[++VAR_10];\n                } else if (\"-tcpShutdown\".equals(VAR_11)) {\n                    VAR_9 = false;\n                    VAR_5 = true;\n                    VAR_8 = VAR_0[++VAR_10];\n                } else if (\"-tcpShutdownForce\".equals(VAR_11)) {\n                    VAR_6 = true;\n                } else {\n                    showUsageAndThrowUnsupportedOption(VAR_11);\n                }\n            } else if (VAR_11.startsWith(\"-pg\")) {\n                if (\"-pg\".equals(VAR_11)) {\n                    VAR_9 = false;\n                    VAR_2 = true;\n                } else if (\"-pgAllowOthers\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-pgDaemon\".equals(VAR_11)) {\n                    /* COMMENT_0 */\n                } else if (\"-pgPort\".equals(VAR_11)) {\n                    VAR_10++;\n                } else {\n                    showUsageAndThrowUnsupportedOption(VAR_11);\n                }\n            } else if (\"-properties\".equals(VAR_11)) {\n                VAR_10++;\n            } else if (\"-trace\".equals(VAR_11)) {\n                /* COMMENT_0 */\n            } else if (\"-ifExists\".equals(VAR_11)) {\n                /* COMMENT_0 */\n            } else if (\"-ifNotExists\".equals(VAR_11)) {\n                /* COMMENT_0 */\n            } else if (\"-baseDir\".equals(VAR_11)) {\n                VAR_10++;\n            } else if (\"-key\".equals(VAR_11)) {\n                VAR_10 += 2;\n            } else {\n                showUsageAndThrowUnsupportedOption(VAR_11);\n            }\n        }\n        verifyArgs(VAR_0);\n        if (VAR_9) {\n            VAR_1 = true;\n            VAR_2 = true;\n            VAR_3 = true;\n            VAR_4 = true;\n        }\n        /* COMMENT_1 */\n        if (VAR_5) {\n            VAR_13.println(\"Shutting down TCP Server at \" + VAR_8);\n            shutdownTcpServer(VAR_8, VAR_7,\n                    VAR_6, false);\n        }\n        try {\n            if (VAR_1) {\n                VAR_14 = createTcpServer(VAR_0);\n                VAR_14.start();\n                VAR_13.println(VAR_14.getStatus());\n                VAR_14.setShutdownHandler(this);\n            }\n            if (VAR_2) {\n                VAR_15 = createPgServer(VAR_0);\n                VAR_15.start();\n                VAR_13.println(VAR_15.getStatus());\n            }\n            if (VAR_3) {\n                VAR_16 = createWebServer(VAR_0);\n                VAR_16.setShutdownHandler(this);\n                SQLException VAR_17 = null;\n                try {\n                    VAR_16.start();\n                } catch (Exception VAR_18) {\n                    VAR_17 = VAR_19.toSQLException(VAR_18);\n                }\n                VAR_13.println(VAR_16.getStatus());\n                /* COMMENT_2 */\n                /* COMMENT_3 */\n                /* COMMENT_4 */\n                if (VAR_4) {\n                    try {\n                        openBrowser(VAR_16.getURL());\n                    } catch (Exception VAR_18) {\n                        VAR_13.println(VAR_18.getMessage());\n                    }\n                }\n                if (VAR_17 != null) {\n                    throw VAR_17;\n                }\n            } else if (VAR_4) {\n                VAR_13.println(\"The browser can only start if a web server is started (-web)\");\n            }\n        } catch (SQLException VAR_18) {\n            stopAll();\n            throw VAR_18;\n        }\n    }",
  "func_graph_path": "h2database/23ee3d0b973923c135fa01356c8eaed40b895393/Server.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -27,6 +27,9 @@\n                 } else if (\"-webPort\".equals(arg)) {\n                     i++;\n                 } else if (\"-webAdminPassword\".equals(arg)) {\n+                    if (fromCommandLine) {\n+                        throwUnsupportedOption(arg);\n+                    }\n                     i++;\n                 } else {\n                     showUsageAndThrowUnsupportedOption(arg);",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "                    if (fromCommandLine) {",
      "                        throwUnsupportedOption(arg);",
      "                    }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/h2database/h2database/pull/3833",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/h2database/h2database/pull/3833: 403 Client Error: Forbidden for url: https://api.github.com/repos/h2database/h2database/pulls/3833",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0\n\n---\n\nThe patch addresses a security vulnerability by enforcing the use of hashed passwords instead of plain text, preventing potential exposure of sensitive information. The clear match between the commit message and code changes, along with the explicit security intent, supports this classification with high confidence."
}