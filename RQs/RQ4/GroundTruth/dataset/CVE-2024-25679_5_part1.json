{
  "cve_id": "CVE-2024-25679",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:L",
  "cvss_is_v3": true,
  "repo_name": "p-quic/pquic",
  "commit_msg": "discard the keys after handshake is done; use the correct original_destination_connection_id; discard the re-transmission packets correctly; limit the active_connection_id",
  "commit_hash": "2dbc6bbd71ddffe0f040016240541658b6e3ebba",
  "git_url": "https://github.com/p-quic/pquic/commit/2dbc6bbd71ddffe0f040016240541658b6e3ebba",
  "file_path": "picoquic/sender.c",
  "func_name": "picoquic_implicit_handshake_ack",
  "func_before": "void picoquic_implicit_handshake_ack(picoquic_cnx_t* cnx, picoquic_path_t *path, picoquic_packet_context_enum pc, uint64_t current_time)\n{\n    picoquic_packet_t* p = path->pkt_ctx[pc].retransmit_oldest;\n\n    /* Remove packets from the retransmit queue */\n    while (p != NULL) {\n        picoquic_packet_t* p_next = p->next_packet;\n        picoquic_path_t * old_path = p->send_path;\n\n        /* Update the congestion control state for the path */\n        if (old_path != NULL) {\n            if (old_path->smoothed_rtt == PICOQUIC_INITIAL_RTT && old_path->rtt_variant == 0) {\n                // TODO Update the path rtt somehow\n            }\n\n            if (p->is_congestion_controlled && cnx->congestion_alg != NULL) {\n                picoquic_congestion_algorithm_notify_func(cnx, old_path,\n                                                picoquic_congestion_notification_acknowledgement,\n                                                0, p->length, 0, current_time);\n            }\n        }\n        /* Update the number of bytes in transit and remove old packet from queue */\n        /* The packet will not be placed in the \"retransmitted\" queue */\n        (void)picoquic_dequeue_retransmit_packet(cnx, p, 1);\n\n        p = p_next;\n    }\n}",
  "abstract_func_before": "void picoquic_implicit_handshake_ack(picoquic_cnx_t* VAR_0, picoquic_path_t *VAR_1, picoquic_packet_context_enum VAR_2, uint64_t VAR_3)\n{\n    picoquic_packet_t* VAR_4 = VAR_1->pkt_ctx[VAR_2].retransmit_oldest;\n\n    /* COMMENT_0 */\n    while (VAR_4 != NULL) {\n        picoquic_packet_t* VAR_5 = VAR_4->next_packet;\n        picoquic_path_t * VAR_6 = VAR_4->send_path;\n\n        /* COMMENT_1 */\n        if (VAR_6 != NULL) {\n            if (VAR_6->smoothed_rtt == VAR_7 && VAR_6->rtt_variant == 0) {\n                /* COMMENT_2 */\n            }\n\n            if (VAR_4->is_congestion_controlled && VAR_0->congestion_alg != NULL) {\n                picoquic_congestion_algorithm_notify_func(VAR_0, VAR_6,\n                                                VAR_8,\n                                                0, VAR_4->length, 0, VAR_3);\n            }\n        }\n        /* COMMENT_3 */\n        /* COMMENT_4 */\n        (void)picoquic_dequeue_retransmit_packet(VAR_0, VAR_4, 1);\n\n        VAR_4 = VAR_5;\n    }\n}",
  "func_graph_path_before": "p-quic/pquic/2dbc6bbd71ddffe0f040016240541658b6e3ebba/sender.c/vul/before/2.json",
  "func": "void picoquic_implicit_handshake_ack(picoquic_cnx_t* cnx, picoquic_path_t *path, picoquic_packet_context_enum pc, uint64_t current_time)\n{\n    picoquic_packet_t* p = path->pkt_ctx[pc].retransmit_oldest;\n\n    /* Remove packets from the retransmit queue */\n    while (p != NULL) {\n        picoquic_packet_t* p_next = p->previous_packet;\n        picoquic_path_t * old_path = p->send_path;\n\n        /* Update the congestion control state for the path */\n        if (old_path != NULL) {\n            if (old_path->smoothed_rtt == PICOQUIC_INITIAL_RTT && old_path->rtt_variant == 0) {\n                // TODO Update the path rtt somehow\n            }\n\n            if (p->is_congestion_controlled && cnx->congestion_alg != NULL) {\n                picoquic_congestion_algorithm_notify_func(cnx, old_path,\n                                                picoquic_congestion_notification_acknowledgement,\n                                                0, p->length, 0, current_time);\n            }\n        }\n        /* Update the number of bytes in transit and remove old packet from queue */\n        /* The packet will not be placed in the \"retransmitted\" queue */\n        (void)picoquic_dequeue_retransmit_packet(cnx, p, 1);\n\n        p = p_next;\n    }\n}",
  "abstract_func": "void picoquic_implicit_handshake_ack(picoquic_cnx_t* VAR_0, picoquic_path_t *VAR_1, picoquic_packet_context_enum VAR_2, uint64_t VAR_3)\n{\n    picoquic_packet_t* VAR_4 = VAR_1->pkt_ctx[VAR_2].retransmit_oldest;\n\n    /* COMMENT_0 */\n    while (VAR_4 != NULL) {\n        picoquic_packet_t* VAR_5 = VAR_4->previous_packet;\n        picoquic_path_t * VAR_6 = VAR_4->send_path;\n\n        /* COMMENT_1 */\n        if (VAR_6 != NULL) {\n            if (VAR_6->smoothed_rtt == VAR_7 && VAR_6->rtt_variant == 0) {\n                /* COMMENT_2 */\n            }\n\n            if (VAR_4->is_congestion_controlled && VAR_0->congestion_alg != NULL) {\n                picoquic_congestion_algorithm_notify_func(VAR_0, VAR_6,\n                                                VAR_8,\n                                                0, VAR_4->length, 0, VAR_3);\n            }\n        }\n        /* COMMENT_3 */\n        /* COMMENT_4 */\n        (void)picoquic_dequeue_retransmit_packet(VAR_0, VAR_4, 1);\n\n        VAR_4 = VAR_5;\n    }\n}",
  "func_graph_path": "p-quic/pquic/2dbc6bbd71ddffe0f040016240541658b6e3ebba/sender.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,7 +4,7 @@\n \n     /* Remove packets from the retransmit queue */\n     while (p != NULL) {\n-        picoquic_packet_t* p_next = p->next_packet;\n+        picoquic_packet_t* p_next = p->previous_packet;\n         picoquic_path_t * old_path = p->send_path;\n \n         /* Update the congestion control state for the path */",
  "diff_line_info": {
    "deleted_lines": [
      "        picoquic_packet_t* p_next = p->next_packet;"
    ],
    "added_lines": [
      "        picoquic_packet_t* p_next = p->previous_packet;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/p-quic/pquic/pull/39",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/p-quic/pquic/pull/39: 403 Client Error: Forbidden for url: https://api.github.com/repos/p-quic/pquic/pulls/39",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.7\n\nThe commit addresses issues with packet handling during handshakes, which affects core functionality but lacks explicit security indicators."
}