{
  "cve_id": "CVE-2016-7151",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "capstone-engine/capstone",
  "commit_msg": "x86: fast path checking for X86_insn_reg_intel()",
  "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "git_url": "https://github.com/capstone-engine/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "file_path": "arch/X86/X86Mapping.c",
  "func_name": "X86_insn_reg_intel",
  "func_before": "x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)\n{\n\tunsigned int first = 0;\n\tunsigned int last = ARR_SIZE(insn_regs_intel) - 1;\n\tunsigned int mid = ARR_SIZE(insn_regs_intel) / 2;\n\n\tif (!intel_regs_sorted) {\n\t\tmemcpy(insn_regs_intel_sorted, insn_regs_intel,\n\t\t\t\tsizeof(insn_regs_intel_sorted));\n\t\tqsort(insn_regs_intel_sorted,\n\t\t\t\tARR_SIZE(insn_regs_intel_sorted),\n\t\t\t\tsizeof(struct insn_reg), regs_cmp);\n\t\tintel_regs_sorted = true;\n\t}\n\n\twhile (first <= last) {\n\t\tif (insn_regs_intel_sorted[mid].insn < id) {\n\t\t\tfirst = mid + 1;\n\t\t} else if (insn_regs_intel_sorted[mid].insn == id) {\n\t\t\tif (access) {\n\t\t\t\t*access = insn_regs_intel_sorted[mid].access;\n\t\t\t}\n\t\t\treturn insn_regs_intel_sorted[mid].reg;\n\t\t} else {\n\t\t\tif (mid == 0)\n\t\t\t\tbreak;\n\t\t\tlast = mid - 1;\n\t\t}\n\t\tmid = (first + last) / 2;\n\t}\n\n\t// not found\n\treturn 0;\n}",
  "abstract_func_before": "x86_reg X86_insn_reg_intel(unsigned int VAR_0, enum cs_ac_type *VAR_1)\n{\n\tunsigned int VAR_2 = 0;\n\tunsigned int VAR_3 = ARR_SIZE(VAR_4) - 1;\n\tunsigned int VAR_5 = ARR_SIZE(VAR_4) / 2;\n\n\tif (!VAR_6) {\n\t\tmemcpy(VAR_7, VAR_4,\n\t\t\t\tsizeof(VAR_7));\n\t\tqsort(VAR_7,\n\t\t\t\tARR_SIZE(VAR_7),\n\t\t\t\tsizeof(struct insn_reg), VAR_8);\n\t\tVAR_6 = true;\n\t}\n\n\twhile (VAR_2 <= VAR_3) {\n\t\tif (VAR_7[VAR_5].insn < VAR_0) {\n\t\t\tVAR_2 = VAR_5 + 1;\n\t\t} else if (VAR_7[VAR_5].insn == VAR_0) {\n\t\t\tif (VAR_1) {\n\t\t\t\t*VAR_1 = VAR_7[VAR_5].access;\n\t\t\t}\n\t\t\treturn VAR_7[VAR_5].reg;\n\t\t} else {\n\t\t\tif (VAR_5 == 0)\n\t\t\t\tbreak;\n\t\t\tVAR_3 = VAR_5 - 1;\n\t\t}\n\t\tVAR_5 = (VAR_2 + VAR_3) / 2;\n\t}\n\n\t/* COMMENT_0 */\n\treturn 0;\n}",
  "func_graph_path_before": "capstone-engine/capstone/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06/X86Mapping.c/vul/before/0.json",
  "func": "x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)\n{\n\tstatic bool intel_regs_sorted = false;\n\tunsigned int first = 0;\n\tunsigned int last = ARR_SIZE(insn_regs_intel) - 1;\n\tunsigned int mid;\n\n\tif (!intel_regs_sorted) {\n\t\tmemcpy(insn_regs_intel_sorted, insn_regs_intel,\n\t\t\t\tsizeof(insn_regs_intel_sorted));\n\t\tqsort(insn_regs_intel_sorted,\n\t\t\t\tARR_SIZE(insn_regs_intel_sorted),\n\t\t\t\tsizeof(struct insn_reg), regs_cmp);\n\t\tintel_regs_sorted = true;\n\t}\n\n\tif (insn_regs_intel_sorted[0].insn > id ||\n\t\t\tinsn_regs_intel_sorted[last].insn < id) {\n\t\treturn 0;\n\t}\n\n\twhile (first <= last) {\n\t\tmid = (first + last) / 2;\n\t\tif (insn_regs_intel_sorted[mid].insn < id) {\n\t\t\tfirst = mid + 1;\n\t\t} else if (insn_regs_intel_sorted[mid].insn == id) {\n\t\t\tif (access) {\n\t\t\t\t*access = insn_regs_intel_sorted[mid].access;\n\t\t\t}\n\t\t\treturn insn_regs_intel_sorted[mid].reg;\n\t\t} else {\n\t\t\tif (mid == 0)\n\t\t\t\tbreak;\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\n\t// not found\n\treturn 0;\n}",
  "abstract_func": "x86_reg X86_insn_reg_intel(unsigned int VAR_0, enum cs_ac_type *VAR_1)\n{\n\tstatic bool VAR_2 = false;\n\tunsigned int VAR_3 = 0;\n\tunsigned int VAR_4 = ARR_SIZE(VAR_5) - 1;\n\tunsigned int VAR_6;\n\n\tif (!VAR_2) {\n\t\tmemcpy(VAR_7, VAR_5,\n\t\t\t\tsizeof(VAR_7));\n\t\tqsort(VAR_7,\n\t\t\t\tARR_SIZE(VAR_7),\n\t\t\t\tsizeof(struct insn_reg), VAR_8);\n\t\tVAR_2 = true;\n\t}\n\n\tif (VAR_7[0].insn > VAR_0 ||\n\t\t\tVAR_7[VAR_4].insn < VAR_0) {\n\t\treturn 0;\n\t}\n\n\twhile (VAR_3 <= VAR_4) {\n\t\tVAR_6 = (VAR_3 + VAR_4) / 2;\n\t\tif (VAR_7[VAR_6].insn < VAR_0) {\n\t\t\tVAR_3 = VAR_6 + 1;\n\t\t} else if (VAR_7[VAR_6].insn == VAR_0) {\n\t\t\tif (VAR_1) {\n\t\t\t\t*VAR_1 = VAR_7[VAR_6].access;\n\t\t\t}\n\t\t\treturn VAR_7[VAR_6].reg;\n\t\t} else {\n\t\t\tif (VAR_6 == 0)\n\t\t\t\tbreak;\n\t\t\tVAR_4 = VAR_6 - 1;\n\t\t}\n\t}\n\n\t/* COMMENT_0 */\n\treturn 0;\n}",
  "func_graph_path": "capstone-engine/capstone/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06/X86Mapping.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,8 +1,9 @@\n x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)\n {\n+\tstatic bool intel_regs_sorted = false;\n \tunsigned int first = 0;\n \tunsigned int last = ARR_SIZE(insn_regs_intel) - 1;\n-\tunsigned int mid = ARR_SIZE(insn_regs_intel) / 2;\n+\tunsigned int mid;\n \n \tif (!intel_regs_sorted) {\n \t\tmemcpy(insn_regs_intel_sorted, insn_regs_intel,\n@@ -13,7 +14,13 @@\n \t\tintel_regs_sorted = true;\n \t}\n \n+\tif (insn_regs_intel_sorted[0].insn > id ||\n+\t\t\tinsn_regs_intel_sorted[last].insn < id) {\n+\t\treturn 0;\n+\t}\n+\n \twhile (first <= last) {\n+\t\tmid = (first + last) / 2;\n \t\tif (insn_regs_intel_sorted[mid].insn < id) {\n \t\t\tfirst = mid + 1;\n \t\t} else if (insn_regs_intel_sorted[mid].insn == id) {\n@@ -26,7 +33,6 @@\n \t\t\t\tbreak;\n \t\t\tlast = mid - 1;\n \t\t}\n-\t\tmid = (first + last) / 2;\n \t}\n \n \t// not found",
  "diff_line_info": {
    "deleted_lines": [
      "\tunsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "\t\tmid = (first + last) / 2;"
    ],
    "added_lines": [
      "\tstatic bool intel_regs_sorted = false;",
      "\tunsigned int mid;",
      "\tif (insn_regs_intel_sorted[0].insn > id ||",
      "\t\t\tinsn_regs_intel_sorted[last].insn < id) {",
      "\t\treturn 0;",
      "\t}",
      "",
      "\t\tmid = (first + last) / 2;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/NeatNerdPrime/capstone/pull/17",
  "description": {
    "pr_info": {
      "title": "[pull] master from capstone-engine:master",
      "number": 17
    },
    "comment": [
      "See [Commits](/NeatNerdPrime/capstone/pull/17/commits) and [Changes](/NeatNerdPrime/capstone/pull/17/files) for more details.\n\n-----\nCreated by [<img src=\"https://prod.download/pull-18h-svg\" valign=\"bottom\"/> **pull[bot]**](https://github.com/wei/pull)\n\n_Can you help keep this open source service alive? **[ðŸ’– Please sponsor : )](https://prod.download/pull-pr-sponsor)**_"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.9"
}