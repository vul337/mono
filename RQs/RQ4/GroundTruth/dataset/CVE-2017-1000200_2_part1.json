{
  "cve_id": "CVE-2017-1000200",
  "cwe_ids": [
    "CWE-476"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "open-iscsi/tcmu-runner",
  "commit_msg": "only allow dynamic UnregisterHandler for external handlers, thereby fixing DoS\n\nTrying to unregister an internal handler ended up in a SEGFAULT, because\nthe tcmur_handler->opaque was NULL. Way to reproduce:\n\ndbus-send --system --print-reply --dest=org.kernel.TCMUService1 /org/kernel/TCMUService1/HandlerManager1 org.kernel.TCMUService1.HandlerManager1.UnregisterHandler string:qcow\n\nwe use a newly introduced boolean in struct tcmur_handler for keeping\ntrack of external handlers. As suggested by mikechristie adjusting the\npublic data structure is acceptable.",
  "commit_hash": "bb80e9c7a798f035768260ebdadffb6eb0786178",
  "git_url": "https://github.com/open-iscsi/tcmu-runner/commit/bb80e9c7a798f035768260ebdadffb6eb0786178",
  "file_path": "main.c",
  "func_name": "on_register_handler",
  "func_before": "static gboolean\non_register_handler(TCMUService1HandlerManager1 *interface,\n\t\t    GDBusMethodInvocation *invocation,\n\t\t    gchar *subtype,\n\t\t    gchar *cfg_desc,\n\t\t    gpointer user_data)\n{\n\tstruct tcmur_handler *handler;\n\tstruct dbus_info *info;\n\tchar *bus_name;\n\n\tbus_name = g_strdup_printf(\"org.kernel.TCMUService1.HandlerManager1.%s\",\n\t\t\t\t   subtype);\n\n\thandler               = g_new0(struct tcmur_handler, 1);\n\thandler->subtype      = g_strdup(subtype);\n\thandler->cfg_desc     = g_strdup(cfg_desc);\n\thandler->open         = dbus_handler_open;\n\thandler->close        = dbus_handler_close;\n\thandler->handle_cmd   = dbus_handler_handle_cmd;\n\n\tinfo = g_new0(struct dbus_info, 1);\n\tinfo->register_invocation = invocation;\n\tinfo->watcher_id = g_bus_watch_name(G_BUS_TYPE_SYSTEM,\n\t\t\t\t\t    bus_name,\n\t\t\t\t\t    G_BUS_NAME_WATCHER_FLAGS_NONE,\n\t\t\t\t\t    on_handler_appeared,\n\t\t\t\t\t    on_handler_vanished,\n\t\t\t\t\t    handler,\n\t\t\t\t\t    NULL);\n\tg_free(bus_name);\n\thandler->opaque = info;\n\treturn TRUE;\n}",
  "abstract_func_before": "static gboolean\non_register_handler(TCMUService1HandlerManager1 *VAR_0,\n\t\t    GDBusMethodInvocation *VAR_1,\n\t\t    gchar *VAR_2,\n\t\t    gchar *VAR_3,\n\t\t    gpointer VAR_4)\n{\n\tstruct tcmur_handler *VAR_5;\n\tstruct dbus_info *VAR_6;\n\tchar *VAR_7;\n\n\tVAR_7 = g_strdup_printf(\"org.kernel.TCMUService1.HandlerManager1.%s\",\n\t\t\t\t   VAR_2);\n\n\tVAR_5               = g_new0(struct tcmur_handler, 1);\n\tVAR_5->subtype      = g_strdup(VAR_2);\n\tVAR_5->cfg_desc     = g_strdup(VAR_3);\n\tVAR_5->open         = VAR_8;\n\tVAR_5->close        = VAR_9;\n\tVAR_5->handle_cmd   = VAR_10;\n\n\tVAR_6 = g_new0(struct dbus_info, 1);\n\tVAR_6->register_invocation = VAR_1;\n\tVAR_6->watcher_id = g_bus_watch_name(VAR_11,\n\t\t\t\t\t    VAR_7,\n\t\t\t\t\t    VAR_12,\n\t\t\t\t\t    VAR_13,\n\t\t\t\t\t    VAR_14,\n\t\t\t\t\t    VAR_5,\n\t\t\t\t\t    NULL);\n\tg_free(VAR_7);\n\tVAR_5->opaque = VAR_6;\n\treturn TRUE;\n}",
  "func_graph_path_before": "open-iscsi/tcmu-runner/bb80e9c7a798f035768260ebdadffb6eb0786178/main.c/vul/before/3.json",
  "func": "static gboolean\non_register_handler(TCMUService1HandlerManager1 *interface,\n\t\t    GDBusMethodInvocation *invocation,\n\t\t    gchar *subtype,\n\t\t    gchar *cfg_desc,\n\t\t    gpointer user_data)\n{\n\tstruct tcmur_handler *handler;\n\tstruct dbus_info *info;\n\tchar *bus_name;\n\n\tbus_name = g_strdup_printf(\"org.kernel.TCMUService1.HandlerManager1.%s\",\n\t\t\t\t   subtype);\n\n\thandler               = g_new0(struct tcmur_handler, 1);\n\thandler->subtype      = g_strdup(subtype);\n\thandler->cfg_desc     = g_strdup(cfg_desc);\n\thandler->open         = dbus_handler_open;\n\thandler->close        = dbus_handler_close;\n\thandler->handle_cmd   = dbus_handler_handle_cmd;\n\n\tinfo = g_new0(struct dbus_info, 1);\n\thandler->opaque = info;\n\thandler->_is_dbus_handler = 1;\n\tinfo->register_invocation = invocation;\n\tinfo->watcher_id = g_bus_watch_name(G_BUS_TYPE_SYSTEM,\n\t\t\t\t\t    bus_name,\n\t\t\t\t\t    G_BUS_NAME_WATCHER_FLAGS_NONE,\n\t\t\t\t\t    on_handler_appeared,\n\t\t\t\t\t    on_handler_vanished,\n\t\t\t\t\t    handler,\n\t\t\t\t\t    NULL);\n\tg_free(bus_name);\n\thandler->opaque = info;\n\treturn TRUE;\n}",
  "abstract_func": "static gboolean\non_register_handler(TCMUService1HandlerManager1 *VAR_0,\n\t\t    GDBusMethodInvocation *VAR_1,\n\t\t    gchar *VAR_2,\n\t\t    gchar *VAR_3,\n\t\t    gpointer VAR_4)\n{\n\tstruct tcmur_handler *VAR_5;\n\tstruct dbus_info *VAR_6;\n\tchar *VAR_7;\n\n\tVAR_7 = g_strdup_printf(\"org.kernel.TCMUService1.HandlerManager1.%s\",\n\t\t\t\t   VAR_2);\n\n\tVAR_5               = g_new0(struct tcmur_handler, 1);\n\tVAR_5->subtype      = g_strdup(VAR_2);\n\tVAR_5->cfg_desc     = g_strdup(VAR_3);\n\tVAR_5->open         = VAR_8;\n\tVAR_5->close        = VAR_9;\n\tVAR_5->handle_cmd   = VAR_10;\n\n\tVAR_6 = g_new0(struct dbus_info, 1);\n\tVAR_5->opaque = VAR_6;\n\tVAR_5->_is_dbus_handler = 1;\n\tVAR_6->register_invocation = VAR_1;\n\tVAR_6->watcher_id = g_bus_watch_name(VAR_11,\n\t\t\t\t\t    VAR_7,\n\t\t\t\t\t    VAR_12,\n\t\t\t\t\t    VAR_13,\n\t\t\t\t\t    VAR_14,\n\t\t\t\t\t    VAR_5,\n\t\t\t\t\t    NULL);\n\tg_free(VAR_7);\n\tVAR_5->opaque = VAR_6;\n\treturn TRUE;\n}",
  "func_graph_path": "open-iscsi/tcmu-runner/bb80e9c7a798f035768260ebdadffb6eb0786178/main.c/vul/after/3.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -20,6 +20,8 @@\n \thandler->handle_cmd   = dbus_handler_handle_cmd;\n \n \tinfo = g_new0(struct dbus_info, 1);\n+\thandler->opaque = info;\n+\thandler->_is_dbus_handler = 1;\n \tinfo->register_invocation = invocation;\n \tinfo->watcher_id = g_bus_watch_name(G_BUS_TYPE_SYSTEM,\n \t\t\t\t\t    bus_name,",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\thandler->opaque = info;",
      "\thandler->_is_dbus_handler = 1;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/open-iscsi/tcmu-runner/pull/200",
  "description": {
    "pr_info": {
      "title": "Rebased: Various security and functionality related bugfixes (multiple DoS, memory leaks)",
      "number": 200
    },
    "comment": [
      "While doing a security audit of tcmu-runner I've come across these issues.\r\n\r\nRebased and squashed version of previous pull request:\r\n\r\nhttps://github.com/open-iscsi/tcmu-runner/pull/193",
      "Hi @mgerstner ,\r\nI was discussing the criticality of this issue with @sidhax and we are wondering if you have raised any CVE for the security issue on this ?",
      "Actually that was something I wanted to ask you about, too. I have not requested any CVE yet. \r\n\r\nI think commit 8cf8208775022301adaa59c240bb7f93742d1329 justifies a CVE, because of the information leak as described in issue #194.\r\n\r\nThe memory leaks and denial of service issues from commits\r\n\r\n7a78eda52d973d3edc06fea84ad874678d6055f0\r\nbb80e9c7a798f035768260ebdadffb6eb0786178\r\ne2d953050766ac538615a811c64b34358614edce\r\n\r\nare minor issues, but mostly they're also assigned CVEs for easier tracking by other distros.\r\n\r\nDo you have a workflow for this? I can request the CVEs for you if you like.",
      "@mgerstner can you please file request for CVEs ? Also for https://github.com/open-iscsi/tcmu-runner/commit/8cf8208775022301adaa59c240bb7f93742d1329 I think its more of secure coding. It cannot read contents of file as per my understanding. Dbus output only returns true or false, would you still consider this a security flaw ? Also other 3 commits are for local dos so attacker would already need shell to to trigger local dos.",
      "@sidhax: Okay I will request CVEs and report back when they're assigned.\r\n\r\nNo you can't read file content but it still gives you some information that would otherwise not be available like what files are existing in /root. There could be situations, combined with other security issues in other software, when this can lead to exploits.\r\n\r\nWorse is the example code in file_example_c, by the way. It allows to create arbitrary empty files for a short time, making it possible for example to create /etc/suid-debug just in time for some suid binary to run in debug mode. There could be other possibilities like creating things via /sys. I hope nobody used this example code for their own handlers.\r\n\r\nThe DoS are only local yes. But a non-root user can DoS a service running as root. Or leak memory.\r\n\r\nNothing critical altogether but let's give users of tcmu-runner a chance to recognize these issues and backport them if they deem it necessary.",
      "@mgerstner Make sense to me, Thanks :-)",
      "@mgerstner sorry! you may have to drop https://github.com/open-iscsi/tcmu-runner/pull/200/commits/b0beac3a490092c7c202dc4fb0bbaa7af09bb10d as https://github.com/open-iscsi/tcmu-runner/pull/199 is closed",
      "Okay I've rebased, dropped the conflicting commit",
      "> @mikechristie\r\nShould we wait till open-iscsi/targetcli-fb#87 gets merged and available ?\r\n\r\nI don't know.\r\n\r\nI have been debating that. It will also require users to upgrade to the 4.13 kernel and that is around rc1 stage right now.\r\n\r\nThe thing is that with the removal of the check_config code, I think we can just delete all the dbus code since it does nothing now as far as I can tell. For this we would also need to sync up with targetcli releases. It's code to connect to dbus will fail during device setup, so existing setups would fail if they updated runner, but not targetcli.\r\n\r\nMaybe, we could say for the next runner release you must use 4.13 and targetcli-fb XYZ?",
      "Here is one additional fix up we will need for these patches. When we would exit() from the signal handler, the code after the g_main_run would not get run normally. With the patch to use g_main_quit, we cannot use the logger after the signal handler has killed the logger threads. It also moves the cancel_log_thread call to after the config cancel incase the config shutdown code tries to log something.\r\n\r\n[0001-runner-fix-log-use-during-shutdown.txt](https://github.com/open-iscsi/tcmu-runner/files/1163654/0001-runner-fix-log-use-during-shutdown.txt)",
      "One update:\r\n\r\nI have emailed the targetcli maintainer about trying to coordinate check_config and dbus removal. When that is done I will merge these patches.",
      "@mikechristie: do you want me to add the logging patch to this pull request? I can add an additional commit but want to avoid another rebase, because I've already used the commit URLs in CVE requests and bugzilla tickets.",
      "@mikechristie: we could also think about cancelling the log thread not in the signal handler but at the end of the main() function. This would make for a smaller patch and logging could be used without worries about shutdown situations.",
      "No, you do not need to carry the patch. I will merge it when I merge you PR.\r\n\r\nAs far as doing the canceling in the sig handler or end of the main function, it does not matter to me where it goes. Is there any place where it is more common? It would be best to do both the config and log cancel calls in the same place, just so it is consistent.",
      "Here's the plan.\r\n\r\n1. I am going to merge this set as is even though some patches will not be necessary when the dbus code is removed.\r\n2. Andy (targetcli/rtslib -fb maintainer) will help us coordinate a release.\r\n3. In another PR we will remove the dbus code.",
      "FTR:\r\n\r\n- CVE requests are still pending\r\n- I've posted a summary on the oss-security mailing list: http://www.openwall.com/lists/oss-security/2017/07/24/1",
      "I've got most of the CVEs via [DWF](https://github.com/distributedweaknessfiling/) now:\r\n\r\n- CVE-2017-1000198 for DoS in the GLFS handler which was removed in commit 61bd03e600d2abf309173e9186f4d465bb1b7157\r\n- CVE-2017-1000199 for information leak in qcow handler as reported in issue #194\r\n- CVE-2017-1000200 for DoS fixed in commit bb80e9c7a798f035768260ebdadffb6eb0786178\r\n- CVE-2017-1000201 for DoS fixed in commit e2d953050766ac538615a811c64b34358614edce\r\n\r\na CVE for the memory leaks fixed in commit 7a78eda52d973d3edc06fea84ad874678d6055f0 is still pending."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}