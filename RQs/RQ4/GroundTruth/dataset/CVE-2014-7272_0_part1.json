{
  "cve_id": "CVE-2014-7272",
  "cwe_ids": [
    "CWE-264"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "sddm",
  "commit_msg": "Move onAuthenticated XAUTHORITY generation to the helper\n\nThis avoids it being created as root and then chown'd.",
  "commit_hash": "e92c466f5c324b429ce1a8aa1b40d208574c778a",
  "git_url": "https://github.com/sddm/sddm/commit/e92c466f5c324b429ce1a8aa1b40d208574c778a",
  "file_path": "src/daemon/Display.cpp",
  "func_name": "Display::slotAuthenticationFinished",
  "func_before": "void Display::slotAuthenticationFinished(const QString &user, bool success) {\n        if (success) {\n            qDebug() << \"Authenticated successfully\";\n\n            struct passwd *pw = getpwnam(qPrintable(user));\n            if (pw) {\n                qobject_cast<XorgDisplayServer *>(m_displayServer)->addCookie(QString(\"%1/.Xauthority\").arg(pw->pw_dir));\n                chown(qPrintable(QString(\"%1/.Xauthority\").arg(pw->pw_dir)), pw->pw_uid, pw->pw_gid);\n            }\n\n            // save last user and last session\n            stateConfig.Last.User.set(m_auth->user());\n            stateConfig.Last.Session.set(m_sessionName);\n            stateConfig.save();\n\n            if (m_socket)\n                emit loginSucceeded(m_socket);\n        } else if (m_socket) {\n            qDebug() << \"Authentication failure\";\n            emit loginFailed(m_socket);\n        }\n        m_socket = nullptr;\n    }",
  "abstract_func_before": "void Display::slotAuthenticationFinished(const QString &VAR_0, bool VAR_1) {\n        if (VAR_1) {\n            qDebug() << \"Authenticated successfully\";\n\n            struct passwd *VAR_2 = getpwnam(qPrintable(VAR_0));\n            if (VAR_2) {\n                VAR_3<XorgDisplayServer *>(VAR_4)->addCookie(QString(\"%1/.Xauthority\").arg(VAR_2->pw_dir));\n                chown(qPrintable(QString(\"%1/.Xauthority\").arg(VAR_2->pw_dir)), VAR_2->pw_uid, VAR_2->pw_gid);\n            }\n\n            /* COMMENT_0 */\n            VAR_5.Last.User.set(VAR_6->user());\n            VAR_5.Last.Session.set(VAR_7);\n            VAR_5.save();\n\n            if (VAR_8)\n                VAR_9 loginSucceeded(VAR_8);\n        } else if (VAR_8) {\n            qDebug() << \"Authentication failure\";\n            emit loginFailed(m_socket);\n        }\n        m_socket = nullptr;\n    }",
  "func_graph_path_before": "sddm/e92c466f5c324b429ce1a8aa1b40d208574c778a/Display.cpp/vul/before/0.json",
  "func": "void Display::slotAuthenticationFinished(const QString &user, bool success) {\n        if (success) {\n            qDebug() << \"Authenticated successfully\";\n\n            m_auth->setCookie(qobject_cast<XorgDisplayServer *>(m_displayServer)->cookie());\n\n            // save last user and last session\n            stateConfig.Last.User.set(m_auth->user());\n            stateConfig.Last.Session.set(m_sessionName);\n            stateConfig.save();\n\n            if (m_socket)\n                emit loginSucceeded(m_socket);\n        } else if (m_socket) {\n            qDebug() << \"Authentication failure\";\n            emit loginFailed(m_socket);\n        }\n        m_socket = nullptr;\n    }",
  "abstract_func": "void Display::slotAuthenticationFinished(const QString &VAR_0, bool VAR_1) {\n        if (VAR_1) {\n            qDebug() << \"Authenticated successfully\";\n\n            VAR_2->setCookie(VAR_3<XorgDisplayServer *>(VAR_4)->cookie());\n\n            /* COMMENT_0 */\n            VAR_5.Last.User.set(VAR_2->user());\n            VAR_5.Last.Session.set(VAR_6);\n            VAR_5.save();\n\n            if (VAR_7)\n                VAR_8 loginSucceeded(VAR_7);\n        } else if (VAR_7) {\n            qDebug() << \"Authentication failure\";\n            emit loginFailed(m_socket);\n        }\n        m_socket = nullptr;\n    }",
  "func_graph_path": "sddm/e92c466f5c324b429ce1a8aa1b40d208574c778a/Display.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,11 +2,7 @@\n         if (success) {\n             qDebug() << \"Authenticated successfully\";\n \n-            struct passwd *pw = getpwnam(qPrintable(user));\n-            if (pw) {\n-                qobject_cast<XorgDisplayServer *>(m_displayServer)->addCookie(QString(\"%1/.Xauthority\").arg(pw->pw_dir));\n-                chown(qPrintable(QString(\"%1/.Xauthority\").arg(pw->pw_dir)), pw->pw_uid, pw->pw_gid);\n-            }\n+            m_auth->setCookie(qobject_cast<XorgDisplayServer *>(m_displayServer)->cookie());\n \n             // save last user and last session\n             stateConfig.Last.User.set(m_auth->user());",
  "diff_line_info": {
    "deleted_lines": [
      "            struct passwd *pw = getpwnam(qPrintable(user));",
      "            if (pw) {",
      "                qobject_cast<XorgDisplayServer *>(m_displayServer)->addCookie(QString(\"%1/.Xauthority\").arg(pw->pw_dir));",
      "                chown(qPrintable(QString(\"%1/.Xauthority\").arg(pw->pw_dir)), pw->pw_uid, pw->pw_gid);",
      "            }"
    ],
    "added_lines": [
      "            m_auth->setCookie(qobject_cast<XorgDisplayServer *>(m_displayServer)->cookie());"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/sddm/sddm/pull/280",
  "description": {
    "pr_info": {
      "title": "Move onAuthenticated XAUTHORITY generation to the helper",
      "number": 280
    },
    "comment": [
      "This avoids it being created as root and then chown'd.\n\nOpen for discussion, I know it's not by all means clean code.\n",
      "Also should fix .xsession-errors being owned by root\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}