{
  "cve_id": "CVE-2021-42073",
  "cwe_ids": [
    "CWE-384"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "debauchee/barrier",
  "commit_msg": "Implement client identity verification\n\nThis commit fixes two security vulnerabilities: CVE-2021-42072 and\nCVE-2021-42073.\n\nThe issues have been reported by Matthias Gerstner <mgerstner@suse.de>.",
  "commit_hash": "229abab99f39f11624e5651f819e7f1f8eddedcc",
  "git_url": "https://github.com/debauchee/barrier/commit/229abab99f39f11624e5651f819e7f1f8eddedcc",
  "file_path": "src/lib/barrier/ArgParser.cpp",
  "func_name": "ArgParser::parseServerArgs",
  "func_before": "bool\nArgParser::parseServerArgs(ServerArgs& args, int argc, const char* const* argv)\n{\n    setArgsBase(args);\n    updateCommonArgs(argv);\n\n    for (int i = 1; i < argc; ++i) {\n        if (parsePlatformArg(args, argc, argv, i)) {\n            continue;\n        }\n        else if (parseGenericArgs(argc, argv, i)) {\n            continue;\n        }\n        else if (parseDeprecatedArgs(argc, argv, i)) {\n            continue;\n        }\n        else if (isArg(i, argc, argv, \"-a\", \"--address\", 1)) {\n            // save listen address\n            args.m_barrierAddress = argv[++i];\n        }\n        else if (isArg(i, argc, argv, \"-c\", \"--config\", 1)) {\n            // save configuration file path\n            args.m_configFile = argv[++i];\n        }\n        else if (isArg(i, argc, argv, NULL, \"--screen-change-script\", 1)) {\n            // save screen change script path\n            args.m_screenChangeScript = argv[++i];\n        }\n        else {\n            LOG((CLOG_PRINT \"%s: unrecognized option `%s'\" BYE, args.m_exename.c_str(), argv[i], args.m_exename.c_str()));\n            return false;\n        }\n    }\n\n    if (checkUnexpectedArgs()) {\n        return false;\n    }\n\n    return true;\n}",
  "abstract_func_before": "bool\nArgParser::parseServerArgs(ServerArgs& VAR_0, int VAR_1, const char* const* VAR_2)\n{\n    setArgsBase(VAR_0);\n    updateCommonArgs(VAR_2);\n\n    for (int VAR_3 = 1; VAR_3 < VAR_1; ++VAR_3) {\n        if (parsePlatformArg(VAR_0, VAR_1, VAR_2, VAR_3)) {\n            continue;\n        }\n        else if (parseGenericArgs(VAR_1, VAR_2, VAR_3)) {\n            continue;\n        }\n        else if (parseDeprecatedArgs(VAR_1, VAR_2, VAR_3)) {\n            continue;\n        }\n        else if (isArg(VAR_3, VAR_1, VAR_2, \"-a\", \"--address\", 1)) {\n            /* COMMENT_0 */\n            VAR_0.m_barrierAddress = VAR_2[++VAR_3];\n        }\n        else if (isArg(VAR_3, VAR_1, VAR_2, \"-c\", \"--config\", 1)) {\n            /* COMMENT_1 */\n            VAR_0.m_configFile = VAR_2[++VAR_3];\n        }\n        else if (isArg(VAR_3, VAR_1, VAR_2, NULL, \"--screen-change-script\", 1)) {\n            /* COMMENT_2 */\n            VAR_0.m_screenChangeScript = VAR_2[++VAR_3];\n        }\n        else {\n            LOG((VAR_4 \"%s: unrecognized option `%s'\" VAR_5, VAR_0.m_exename.c_str(), VAR_2[VAR_3], VAR_0.m_exename.c_str()));\n            return false;\n        }\n    }\n\n    if (checkUnexpectedArgs()) {\n        return false;\n    }\n\n    return true;\n}",
  "func_graph_path_before": "debauchee/barrier/229abab99f39f11624e5651f819e7f1f8eddedcc/ArgParser.cpp/vul/before/0.json",
  "func": "bool\nArgParser::parseServerArgs(ServerArgs& args, int argc, const char* const* argv)\n{\n    setArgsBase(args);\n    updateCommonArgs(argv);\n\n    for (int i = 1; i < argc; ++i) {\n        if (parsePlatformArg(args, argc, argv, i)) {\n            continue;\n        }\n        else if (parseGenericArgs(argc, argv, i)) {\n            continue;\n        }\n        else if (parseDeprecatedArgs(argc, argv, i)) {\n            continue;\n        }\n        else if (isArg(i, argc, argv, \"-a\", \"--address\", 1)) {\n            // save listen address\n            args.m_barrierAddress = argv[++i];\n        }\n        else if (isArg(i, argc, argv, \"-c\", \"--config\", 1)) {\n            // save configuration file path\n            args.m_configFile = argv[++i];\n        }\n        else if (isArg(i, argc, argv, NULL, \"--screen-change-script\", 1)) {\n            // save screen change script path\n            args.m_screenChangeScript = argv[++i];\n        }\n        else if (isArg(i, argc, argv, nullptr, \"--disable-client-cert-checking\")) {\n            args.check_client_certificates = false;\n        } else {\n            LOG((CLOG_PRINT \"%s: unrecognized option `%s'\" BYE, args.m_exename.c_str(), argv[i], args.m_exename.c_str()));\n            return false;\n        }\n    }\n\n    if (checkUnexpectedArgs()) {\n        return false;\n    }\n\n    return true;\n}",
  "abstract_func": "bool\nArgParser::parseServerArgs(ServerArgs& VAR_0, int VAR_1, const char* const* VAR_2)\n{\n    setArgsBase(VAR_0);\n    updateCommonArgs(VAR_2);\n\n    for (int VAR_3 = 1; VAR_3 < VAR_1; ++VAR_3) {\n        if (parsePlatformArg(VAR_0, VAR_1, VAR_2, VAR_3)) {\n            continue;\n        }\n        else if (parseGenericArgs(VAR_1, VAR_2, VAR_3)) {\n            continue;\n        }\n        else if (parseDeprecatedArgs(VAR_1, VAR_2, VAR_3)) {\n            continue;\n        }\n        else if (isArg(VAR_3, VAR_1, VAR_2, \"-a\", \"--address\", 1)) {\n            /* COMMENT_0 */\n            VAR_0.m_barrierAddress = VAR_2[++VAR_3];\n        }\n        else if (isArg(VAR_3, VAR_1, VAR_2, \"-c\", \"--config\", 1)) {\n            /* COMMENT_1 */\n            VAR_0.m_configFile = VAR_2[++VAR_3];\n        }\n        else if (isArg(VAR_3, VAR_1, VAR_2, NULL, \"--screen-change-script\", 1)) {\n            /* COMMENT_2 */\n            VAR_0.m_screenChangeScript = VAR_2[++VAR_3];\n        }\n        else if (isArg(VAR_3, VAR_1, VAR_2, nullptr, \"--disable-client-cert-checking\")) {\n            VAR_0.check_client_certificates = false;\n        } else {\n            LOG((VAR_4 \"%s: unrecognized option `%s'\" VAR_5, VAR_0.m_exename.c_str(), VAR_2[VAR_3], VAR_0.m_exename.c_str()));\n            return false;\n        }\n    }\n\n    if (checkUnexpectedArgs()) {\n        return false;\n    }\n\n    return true;\n}",
  "func_graph_path": "debauchee/barrier/229abab99f39f11624e5651f819e7f1f8eddedcc/ArgParser.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -26,7 +26,9 @@\n             // save screen change script path\n             args.m_screenChangeScript = argv[++i];\n         }\n-        else {\n+        else if (isArg(i, argc, argv, nullptr, \"--disable-client-cert-checking\")) {\n+            args.check_client_certificates = false;\n+        } else {\n             LOG((CLOG_PRINT \"%s: unrecognized option `%s'\" BYE, args.m_exename.c_str(), argv[i], args.m_exename.c_str()));\n             return false;\n         }",
  "diff_line_info": {
    "deleted_lines": [
      "        else {"
    ],
    "added_lines": [
      "        else if (isArg(i, argc, argv, nullptr, \"--disable-client-cert-checking\")) {",
      "            args.check_client_certificates = false;",
      "        } else {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/debauchee/barrier/pull/1346",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/debauchee/barrier/pull/1346: 403 Client Error: Forbidden for url: https://api.github.com/repos/debauchee/barrier/pulls/1346",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}