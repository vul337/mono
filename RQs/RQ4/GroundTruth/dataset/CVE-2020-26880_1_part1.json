{
  "cve_id": "CVE-2020-26880",
  "cwe_ids": [
    "CWE-269"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "sympa-community/sympa",
  "commit_msg": "Sympa SA 2020-002 (candidate): Setuid wrappers should clear environment variables to avoid exploits.",
  "commit_hash": "3f8449c647e5ab32cf6f8837cb600c1756b6189c",
  "git_url": "https://github.com/sympa-community/sympa/commit/3f8449c647e5ab32cf6f8837cb600c1756b6189c",
  "file_path": "src/libexec/sympa_newaliases-wrapper.c",
  "func_name": "main",
  "func_before": "int main(int argn, char **argv, char **envp) {\n    setreuid(geteuid(),geteuid());\n    setregid(getegid(),getegid());\n    argv[0] = SYMPA_NEWALIASES;\n    return execve(SYMPA_NEWALIASES, argv, envp);\n}",
  "abstract_func_before": "int main(int VAR_0, char **VAR_1, char **VAR_2) {\n    setreuid(geteuid(),geteuid());\n    setregid(getegid(),getegid());\n    VAR_1[0] = VAR_3;\n    return execve(VAR_3, VAR_1, VAR_2);\n}",
  "func_graph_path_before": "sympa-community/sympa/3f8449c647e5ab32cf6f8837cb600c1756b6189c/sympa_newaliases-wrapper.c/vul/before/0.json",
  "func": "int main(int argn, char **argv, char **envp) {\n    char *myenvp[] = { \"IFS= \\t\\n\", \"PATH=/bin:/usr/bin\", NULL };\n\n    setreuid(geteuid(),geteuid());\n    setregid(getegid(),getegid());\n    argv[0] = SYMPA_NEWALIASES;\n    return execve(SYMPA_NEWALIASES, argv, myenvp);\n}",
  "abstract_func": "int main(int VAR_0, char **VAR_1, char **VAR_2) {\n    char *VAR_3[] = { \"IFS= \\t\\n\", \"PATH=/bin:/usr/bin\", NULL };\n\n    setreuid(geteuid(),geteuid());\n    setregid(getegid(),getegid());\n    VAR_1[0] = VAR_4;\n    return execve(VAR_4, VAR_1, VAR_3);\n}",
  "func_graph_path": "sympa-community/sympa/3f8449c647e5ab32cf6f8837cb600c1756b6189c/sympa_newaliases-wrapper.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,8 @@\n int main(int argn, char **argv, char **envp) {\n+    char *myenvp[] = { \"IFS= \\t\\n\", \"PATH=/bin:/usr/bin\", NULL };\n+\n     setreuid(geteuid(),geteuid());\n     setregid(getegid(),getegid());\n     argv[0] = SYMPA_NEWALIASES;\n-    return execve(SYMPA_NEWALIASES, argv, envp);\n+    return execve(SYMPA_NEWALIASES, argv, myenvp);\n }",
  "diff_line_info": {
    "deleted_lines": [
      "    return execve(SYMPA_NEWALIASES, argv, envp);"
    ],
    "added_lines": [
      "    char *myenvp[] = { \"IFS= \\t\\n\", \"PATH=/bin:/usr/bin\", NULL };",
      "",
      "    return execve(SYMPA_NEWALIASES, argv, myenvp);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/sympa-community/sympa/pull/944",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/sympa-community/sympa/pull/944: 403 Client Error: Forbidden for url: https://api.github.com/repos/sympa-community/sympa/pulls/944",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "The patch modifies setuid wrappers to clear environment variables, preventing exploitation by restricting the environment passed to execve. This directly addresses a security concern related to preventing unauthorized access via environment variables.\n\n**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}