{
  "cve_id": "CVE-2019-15477",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "jooby-project/jooby",
  "commit_msg": "Avoiding possible XSS attack through the default error handler. See jooby-project/jooby#1366",
  "commit_hash": "34856a738829d8fedca4ed27bd6ff413af87186f",
  "git_url": "https://github.com/jooby-project/jooby/commit/34856a738829d8fedca4ed27bd6ff413af87186f",
  "file_path": "jooby/src/main/java/org/jooby/internal/HttpHandlerImpl.java",
  "func_name": "routes",
  "func_before": "private static Route[] routes(final Set<Route.Definition> routeDefs, final String method,\n      final String path, final MediaType type, final List<MediaType> accept) {\n    List<Route> routes = findRoutes(routeDefs, method, path, type, accept);\n\n    routes.add(RouteImpl.fallback((req, rsp, chain) -> {\n      if (!rsp.status().isPresent()) {\n        // 406 or 415\n        Err ex = handle406or415(routeDefs, method, path, type, accept);\n        if (ex != null) {\n          throw ex;\n        }\n        // 405\n        ex = handle405(routeDefs, method, path, type, accept);\n        if (ex != null) {\n          throw ex;\n        }\n        // favicon.ico\n        if (path.equals(\"/favicon.ico\")) {\n          // default /favicon.ico handler:\n          rsp.status(Status.NOT_FOUND).end();\n        } else {\n          throw new Err(Status.NOT_FOUND, req.path(true));\n        }\n      }\n    }, method, path, \"err\", accept));\n\n    return routes.toArray(new Route[routes.size()]);\n  }",
  "abstract_func_before": "private static Route[] routes(final Set<Route.Definition> VAR_0, final String VAR_1,\n      final String VAR_2, final MediaType VAR_3, final List<MediaType> VAR_4) {\n    List<Route> VAR_5 = findRoutes(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4);\n\n    VAR_5.add(VAR_6.fallback((VAR_7, VAR_8, VAR_9) -> {\n      if (!VAR_8.status().isPresent()) {\n        /* COMMENT_0 */\n        Err VAR_10 = handle406or415(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4);\n        if (VAR_10 != null) {\n          throw VAR_10;\n        }\n        /* COMMENT_1 */\n        VAR_10 = handle405(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4);\n        if (VAR_10 != null) {\n          throw VAR_10;\n        }\n        /* COMMENT_2 */\n        if (VAR_2.equals(\"/favicon.ico\")) {\n          /* COMMENT_3 */\n          VAR_8.status(VAR_11.NOT_FOUND).end();\n        } else {\n          throw new Err(VAR_11.NOT_FOUND, VAR_7.path(true));\n        }\n      }\n    }, VAR_1, VAR_2, \"err\", VAR_4));\n\n    return VAR_5.toArray(new Route[VAR_5.size()]);\n  }",
  "func_graph_path_before": "jooby-project/jooby/34856a738829d8fedca4ed27bd6ff413af87186f/HttpHandlerImpl.java/vul/before/0.json",
  "func": "private static Route[] routes(final Set<Route.Definition> routeDefs, final String method,\n      final String path, final MediaType type, final List<MediaType> accept) {\n    List<Route> routes = findRoutes(routeDefs, method, path, type, accept);\n\n    routes.add(RouteImpl.fallback((req, rsp, chain) -> {\n      if (!rsp.status().isPresent()) {\n        // 406 or 415\n        Err ex = handle406or415(routeDefs, method, path, type, accept);\n        if (ex != null) {\n          throw ex;\n        }\n        // 405\n        ex = handle405(routeDefs, method, path, type, accept);\n        if (ex != null) {\n          throw ex;\n        }\n        // favicon.ico\n        if (path.equals(\"/favicon.ico\")) {\n          // default /favicon.ico handler:\n          rsp.status(Status.NOT_FOUND).end();\n        } else {\n          throw new Err(Status.NOT_FOUND, req.path());\n        }\n      }\n    }, method, path, \"err\", accept));\n\n    return routes.toArray(new Route[routes.size()]);\n  }",
  "abstract_func": "private static Route[] routes(final Set<Route.Definition> VAR_0, final String VAR_1,\n      final String VAR_2, final MediaType VAR_3, final List<MediaType> VAR_4) {\n    List<Route> VAR_5 = findRoutes(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4);\n\n    VAR_5.add(VAR_6.fallback((VAR_7, VAR_8, VAR_9) -> {\n      if (!VAR_8.status().isPresent()) {\n        /* COMMENT_0 */\n        Err VAR_10 = handle406or415(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4);\n        if (VAR_10 != null) {\n          throw VAR_10;\n        }\n        /* COMMENT_1 */\n        VAR_10 = handle405(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4);\n        if (VAR_10 != null) {\n          throw VAR_10;\n        }\n        /* COMMENT_2 */\n        if (VAR_2.equals(\"/favicon.ico\")) {\n          /* COMMENT_3 */\n          VAR_8.status(VAR_11.NOT_FOUND).end();\n        } else {\n          throw new Err(VAR_11.NOT_FOUND, VAR_7.path());\n        }\n      }\n    }, VAR_1, VAR_2, \"err\", VAR_4));\n\n    return VAR_5.toArray(new Route[VAR_5.size()]);\n  }",
  "func_graph_path": "jooby-project/jooby/34856a738829d8fedca4ed27bd6ff413af87186f/HttpHandlerImpl.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -19,7 +19,7 @@\n           // default /favicon.ico handler:\n           rsp.status(Status.NOT_FOUND).end();\n         } else {\n-          throw new Err(Status.NOT_FOUND, req.path(true));\n+          throw new Err(Status.NOT_FOUND, req.path());\n         }\n       }\n     }, method, path, \"err\", accept));",
  "diff_line_info": {
    "deleted_lines": [
      "          throw new Err(Status.NOT_FOUND, req.path(true));"
    ],
    "added_lines": [
      "          throw new Err(Status.NOT_FOUND, req.path());"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/jooby-project/jooby/pull/1368",
  "description": {
    "pr_info": {
      "title": "Avoiding possible XSS attack through the default error handler",
      "number": 1368
    },
    "comment": [
      "@jknack  Please review, especially the test case. I'm not familiar with it, i'm not sure if this line is correct:\r\n\r\n`expect(env.xss(\"html\")).andReturn(HtmlEscapers.htmlEscaper()::escape);`",
      "I modified the test case very slightly so `org.jooby.DefaultErrHandlerTest#checkErr` now works with a local copy of the map."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95  \n\nThe commit message clearly indicates the patch addresses an XSS vulnerability in the default error handler. The code change modifies how the path is handled, and the test case confirms XSS mitigation. All evidence strongly supports a security fix with high confidence."
}