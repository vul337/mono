{
  "cve_id": "CVE-2020-14931",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "jaygreig86/dmitry",
  "commit_msg": "Do not let frmtdbuff overflow in nic_format_buff.",
  "commit_hash": "da1fda491145719ae15dd36dd37a69bdbba0b192",
  "git_url": "https://github.com/jaygreig86/dmitry/commit/da1fda491145719ae15dd36dd37a69bdbba0b192",
  "file_path": "src/nwhois.c",
  "func_name": "nic_format_buff",
  "func_before": "int nic_format_buff(char *buff, int listn)\n{\n\tchar frmtdbuff[128]; \t/* This is the buffer containing formatted lines */\n\tint ctr = 0;\t\t/* Character Counter */\n\tint firstpacket = 0;\n\tif (!linetodo) memset(frmtdbuff, '\\0', sizeof(frmtdbuff)); \n\tif ( strstr(buff, nic_read_begin[listn]) ) firstpacket = 1;\n\twhile(buff[ctr] != '\\0'){\n\t\tif ( buff[ctr] == '\\n' ){\n\t\t\tif ( firstpacket == 0 || ( firstpacket == 1 && strstr(frmtdbuff, nic_read_begin[listn]))){\n\t\t\t\tprint_line(\"%s\\n\", frmtdbuff);\n\t\t\t\tfirstpacket = 0;\n\t\t\t\tif ( buff[ctr] == '\\n' && buff[ctr + 1] == '\\n' && buff[ctr + 2] == '\\n' ) return 1;\n\t\t\t}\n\t\t\tmemset(frmtdbuff, '\\0', sizeof(frmtdbuff));\n\t\t\tlinetodo = 0;\n\t\t\tctr++;\n\t\t}\n\t\tfrmtdbuff[strlen(frmtdbuff)] = buff[ctr];\n\t\tctr++;\n\t}\n\tif ( strlen(frmtdbuff) ) linetodo = 1;\n\treturn 0;\n}",
  "abstract_func_before": "int nic_format_buff(char *VAR_0, int VAR_1)\n{\n\tchar VAR_2[128]; \t/* COMMENT_0 */\n\tint VAR_3 = 0;\t\t/* COMMENT_1 */\n\tint VAR_4 = 0;\n\tif (!VAR_5) memset(VAR_2, '\\0', sizeof(VAR_2)); \n\tif ( strstr(VAR_0, VAR_6[VAR_1]) ) VAR_4 = 1;\n\twhile(VAR_0[VAR_3] != '\\0'){\n\t\tif ( VAR_0[VAR_3] == '\\n' ){\n\t\t\tif ( VAR_4 == 0 || ( VAR_4 == 1 && strstr(VAR_2, VAR_6[VAR_1]))){\n\t\t\t\tprint_line(\"%s\\n\", VAR_2);\n\t\t\t\tVAR_4 = 0;\n\t\t\t\tif ( VAR_0[VAR_3] == '\\n' && VAR_0[VAR_3 + 1] == '\\n' && VAR_0[VAR_3 + 2] == '\\n' ) return 1;\n\t\t\t}\n\t\t\tmemset(VAR_2, '\\0', sizeof(VAR_2));\n\t\t\tVAR_5 = 0;\n\t\t\tVAR_3++;\n\t\t}\n\t\tVAR_2[strlen(VAR_2)] = VAR_0[VAR_3];\n\t\tVAR_3++;\n\t}\n\tif ( strlen(VAR_2) ) VAR_5 = 1;\n\treturn 0;\n}",
  "func_graph_path_before": "jaygreig86/dmitry/da1fda491145719ae15dd36dd37a69bdbba0b192/nwhois.c/vul/before/0.json",
  "func": "int nic_format_buff(char *buff, int listn)\n{\n\tchar frmtdbuff[128]; \t/* This is the buffer containing formatted lines */\n\tint ctr = 0;\t\t/* Character Counter */\n\tint firstpacket = 0;\n\tif (!linetodo) memset(frmtdbuff, '\\0', sizeof(frmtdbuff)); \n\tif ( strstr(buff, nic_read_begin[listn]) ) firstpacket = 1;\n\twhile(buff[ctr] != '\\0'){\n\t\tif ( buff[ctr] == '\\n' ){\n\t\t\tif ( firstpacket == 0 || ( firstpacket == 1 && strstr(frmtdbuff, nic_read_begin[listn]))){\n\t\t\t\tprint_line(\"%s\\n\", frmtdbuff);\n\t\t\t\tfirstpacket = 0;\n\t\t\t\tif ( buff[ctr] == '\\n' && buff[ctr + 1] == '\\n' && buff[ctr + 2] == '\\n' ) return 1;\n\t\t\t}\n\t\t\tmemset(frmtdbuff, '\\0', sizeof(frmtdbuff));\n\t\t\tlinetodo = 0;\n\t\t\tctr++;\n\t\t}\n\t\tfrmtdbuff[strlen(frmtdbuff)] = buff[ctr];\n\t\tctr++;\n\t\tif (strlen(frmtdbuff) >= sizeof(frmtdbuff) - 1) {\n\t\t\t/* frmtdbuff is full, do not let it overflow */\n\t\t\tprint_line(\"%s\", frmtdbuff);\n\t\t\tmemset(frmtdbuff, '\\0', sizeof(frmtdbuff));\n\t\t}\n\t}\n\tif ( strlen(frmtdbuff) ) linetodo = 1;\n\treturn 0;\n}",
  "abstract_func": "int nic_format_buff(char *VAR_0, int VAR_1)\n{\n\tchar VAR_2[128]; \t/* COMMENT_0 */\n\tint VAR_3 = 0;\t\t/* COMMENT_1 */\n\tint VAR_4 = 0;\n\tif (!VAR_5) memset(VAR_2, '\\0', sizeof(VAR_2)); \n\tif ( strstr(VAR_0, VAR_6[VAR_1]) ) VAR_4 = 1;\n\twhile(VAR_0[VAR_3] != '\\0'){\n\t\tif ( VAR_0[VAR_3] == '\\n' ){\n\t\t\tif ( VAR_4 == 0 || ( VAR_4 == 1 && strstr(VAR_2, VAR_6[VAR_1]))){\n\t\t\t\tprint_line(\"%s\\n\", VAR_2);\n\t\t\t\tVAR_4 = 0;\n\t\t\t\tif ( VAR_0[VAR_3] == '\\n' && VAR_0[VAR_3 + 1] == '\\n' && VAR_0[VAR_3 + 2] == '\\n' ) return 1;\n\t\t\t}\n\t\t\tmemset(VAR_2, '\\0', sizeof(VAR_2));\n\t\t\tVAR_5 = 0;\n\t\t\tVAR_3++;\n\t\t}\n\t\tVAR_2[strlen(VAR_2)] = VAR_0[VAR_3];\n\t\tVAR_3++;\n\t\tif (strlen(VAR_2) >= sizeof(VAR_2) - 1) {\n\t\t\t/* COMMENT_2 */\n\t\t\tprint_line(\"%s\", VAR_2);\n\t\t\tmemset(VAR_2, '\\0', sizeof(VAR_2));\n\t\t}\n\t}\n\tif ( strlen(VAR_2) ) VAR_5 = 1;\n\treturn 0;\n}",
  "func_graph_path": "jaygreig86/dmitry/da1fda491145719ae15dd36dd37a69bdbba0b192/nwhois.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -18,6 +18,11 @@\n \t\t}\n \t\tfrmtdbuff[strlen(frmtdbuff)] = buff[ctr];\n \t\tctr++;\n+\t\tif (strlen(frmtdbuff) >= sizeof(frmtdbuff) - 1) {\n+\t\t\t/* frmtdbuff is full, do not let it overflow */\n+\t\t\tprint_line(\"%s\", frmtdbuff);\n+\t\t\tmemset(frmtdbuff, '\\0', sizeof(frmtdbuff));\n+\t\t}\n \t}\n \tif ( strlen(frmtdbuff) ) linetodo = 1;\n \treturn 0;",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\t\tif (strlen(frmtdbuff) >= sizeof(frmtdbuff) - 1) {",
      "\t\t\t/* frmtdbuff is full, do not let it overflow */",
      "\t\t\tprint_line(\"%s\", frmtdbuff);",
      "\t\t\tmemset(frmtdbuff, '\\0', sizeof(frmtdbuff));",
      "\t\t}"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/jaygreig86/dmitry/pull/6",
  "description": {
    "pr_info": {
      "title": "Do not let frmtdbuff overflow in nic_format_buff.",
      "number": 6
    },
    "comment": [
      "The WHOIS protocol is unencrypted and even benign servers may return lines longer than 128 characters. This aims to address Issue #4."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0\n\nStep-by-step explanation:\n\n1. **Commit Message Analysis**: Directly addresses a buffer overflow in `nic_format_buff`, which is a security concern.\n\n2. **Vulnerability Description**: Highlights an unencrypted WHOIS protocol where long lines could cause overflow, indicating a security vulnerability.\n\n3. **Code Diff**: Introduces a check to prevent buffer overflow by printing and resetting the buffer when it reaches capacity, a clear security fix.\n\n**Conclusion**: The patch addresses a buffer overflow security vulnerability with consistent commit, description, and code changes."
}