{
  "cve_id": "CVE-2021-32695",
  "cwe_ids": [
    "CWE-200"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "nextcloud/android",
  "commit_msg": "prevent upload from sensitive path\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>",
  "commit_hash": "97d6f2954c879f3bfebcd241993147bced5fd50b",
  "git_url": "https://github.com/nextcloud/android/commit/97d6f2954c879f3bfebcd241993147bced5fd50b",
  "file_path": "src/main/java/com/owncloud/android/files/services/FileUploader.java",
  "func_name": "startNewUpload",
  "func_before": "private void startNewUpload(\n        User user,\n        List<String> requestedUploads,\n        boolean onWifiOnly,\n        boolean whileChargingOnly,\n        NameCollisionPolicy nameCollisionPolicy,\n        int localAction,\n        boolean isCreateRemoteFolder,\n        int createdBy,\n        OCFile file,\n        boolean disableRetries\n                               ) {\n        OCUpload ocUpload = new OCUpload(file, user.toPlatformAccount());\n        ocUpload.setFileSize(file.getFileLength());\n        ocUpload.setNameCollisionPolicy(nameCollisionPolicy);\n        ocUpload.setCreateRemoteFolder(isCreateRemoteFolder);\n        ocUpload.setCreatedBy(createdBy);\n        ocUpload.setLocalAction(localAction);\n        ocUpload.setUseWifiOnly(onWifiOnly);\n        ocUpload.setWhileChargingOnly(whileChargingOnly);\n        ocUpload.setUploadStatus(UploadStatus.UPLOAD_IN_PROGRESS);\n\n        UploadFileOperation newUpload = new UploadFileOperation(\n            mUploadsStorageManager,\n            connectivityService,\n            powerManagementService,\n            user,\n            file,\n            ocUpload,\n            nameCollisionPolicy,\n            localAction,\n            this,\n            onWifiOnly,\n            whileChargingOnly,\n            disableRetries\n        );\n        newUpload.setCreatedBy(createdBy);\n        if (isCreateRemoteFolder) {\n            newUpload.setRemoteFolderToBeCreated();\n        }\n        newUpload.addDataTransferProgressListener(this);\n        newUpload.addDataTransferProgressListener((FileUploaderBinder) mBinder);\n\n        newUpload.addRenameUploadListener(this);\n\n        Pair<String, String> putResult = mPendingUploads.putIfAbsent(\n            user.getAccountName(),\n            file.getRemotePath(),\n            newUpload\n        );\n\n        if (putResult != null) {\n            requestedUploads.add(putResult.first);\n\n            // Save upload in database\n            long id = mUploadsStorageManager.storeUpload(ocUpload);\n            newUpload.setOCUploadId(id);\n        }\n    }",
  "abstract_func_before": "private void startNewUpload(\n        User VAR_0,\n        List<String> VAR_1,\n        boolean VAR_2,\n        boolean VAR_3,\n        NameCollisionPolicy VAR_4,\n        int VAR_5,\n        boolean VAR_6,\n        int VAR_7,\n        OCFile VAR_8,\n        boolean VAR_9\n                               ) {\n        OCUpload VAR_10 = new OCUpload(VAR_8, VAR_0.toPlatformAccount());\n        VAR_10.setFileSize(VAR_8.getFileLength());\n        VAR_10.setNameCollisionPolicy(VAR_4);\n        VAR_10.setCreateRemoteFolder(VAR_6);\n        VAR_10.setCreatedBy(VAR_7);\n        VAR_10.setLocalAction(VAR_5);\n        VAR_10.setUseWifiOnly(VAR_2);\n        VAR_10.setWhileChargingOnly(VAR_3);\n        VAR_10.setUploadStatus(VAR_11.UPLOAD_IN_PROGRESS);\n\n        UploadFileOperation VAR_12 = new UploadFileOperation(\n            VAR_13,\n            VAR_14,\n            VAR_15,\n            VAR_0,\n            VAR_8,\n            VAR_10,\n            VAR_4,\n            VAR_5,\n            this,\n            VAR_2,\n            VAR_3,\n            VAR_9\n        );\n        VAR_12.setCreatedBy(VAR_7);\n        if (VAR_6) {\n            VAR_12.setRemoteFolderToBeCreated();\n        }\n        VAR_12.addDataTransferProgressListener(this);\n        VAR_12.addDataTransferProgressListener((FileUploaderBinder) VAR_16);\n\n        VAR_12.addRenameUploadListener(this);\n\n        Pair<String, String> VAR_17 = VAR_18.putIfAbsent(\n            VAR_0.getAccountName(),\n            VAR_8.getRemotePath(),\n            VAR_12\n        );\n\n        if (VAR_17 != null) {\n            VAR_1.add(VAR_17.first);\n\n            /* COMMENT_0 */\n            long VAR_19 = VAR_13.storeUpload(VAR_10);\n            VAR_12.setOCUploadId(VAR_19);\n        }\n    }",
  "func_graph_path_before": "nextcloud/android/97d6f2954c879f3bfebcd241993147bced5fd50b/FileUploader.java/vul/before/0.json",
  "func": "@SuppressLint(\"SdCardPath\")\n    private void startNewUpload(\n        User user,\n        List<String> requestedUploads,\n        boolean onWifiOnly,\n        boolean whileChargingOnly,\n        NameCollisionPolicy nameCollisionPolicy,\n        int localAction,\n        boolean isCreateRemoteFolder,\n        int createdBy,\n        OCFile file,\n        boolean disableRetries\n                               ) {\n        if (file.getStoragePath().startsWith(\"/data/data/\")) {\n            Log_OC.d(TAG, \"Upload from sensitive path is not allowed\");\n            return;\n        }\n\n        OCUpload ocUpload = new OCUpload(file, user.toPlatformAccount());\n        ocUpload.setFileSize(file.getFileLength());\n        ocUpload.setNameCollisionPolicy(nameCollisionPolicy);\n        ocUpload.setCreateRemoteFolder(isCreateRemoteFolder);\n        ocUpload.setCreatedBy(createdBy);\n        ocUpload.setLocalAction(localAction);\n        ocUpload.setUseWifiOnly(onWifiOnly);\n        ocUpload.setWhileChargingOnly(whileChargingOnly);\n        ocUpload.setUploadStatus(UploadStatus.UPLOAD_IN_PROGRESS);\n\n        UploadFileOperation newUpload = new UploadFileOperation(\n            mUploadsStorageManager,\n            connectivityService,\n            powerManagementService,\n            user,\n            file,\n            ocUpload,\n            nameCollisionPolicy,\n            localAction,\n            this,\n            onWifiOnly,\n            whileChargingOnly,\n            disableRetries\n        );\n        newUpload.setCreatedBy(createdBy);\n        if (isCreateRemoteFolder) {\n            newUpload.setRemoteFolderToBeCreated();\n        }\n        newUpload.addDataTransferProgressListener(this);\n        newUpload.addDataTransferProgressListener((FileUploaderBinder) mBinder);\n\n        newUpload.addRenameUploadListener(this);\n\n        Pair<String, String> putResult = mPendingUploads.putIfAbsent(\n            user.getAccountName(),\n            file.getRemotePath(),\n            newUpload\n        );\n\n        if (putResult != null) {\n            requestedUploads.add(putResult.first);\n\n            // Save upload in database\n            long id = mUploadsStorageManager.storeUpload(ocUpload);\n            newUpload.setOCUploadId(id);\n        }\n    }",
  "abstract_func": "@SuppressLint(\"SdCardPath\")\n    private void startNewUpload(\n        User VAR_0,\n        List<String> VAR_1,\n        boolean VAR_2,\n        boolean VAR_3,\n        NameCollisionPolicy VAR_4,\n        int VAR_5,\n        boolean VAR_6,\n        int VAR_7,\n        OCFile VAR_8,\n        boolean VAR_9\n                               ) {\n        if (VAR_8.getStoragePath().startsWith(\"/data/data/\")) {\n            VAR_10.d(VAR_11, \"Upload from sensitive path is not allowed\");\n            return;\n        }\n\n        OCUpload VAR_12 = new OCUpload(VAR_8, VAR_0.toPlatformAccount());\n        VAR_12.setFileSize(VAR_8.getFileLength());\n        VAR_12.setNameCollisionPolicy(VAR_4);\n        VAR_12.setCreateRemoteFolder(VAR_6);\n        VAR_12.setCreatedBy(VAR_7);\n        VAR_12.setLocalAction(VAR_5);\n        VAR_12.setUseWifiOnly(VAR_2);\n        VAR_12.setWhileChargingOnly(VAR_3);\n        VAR_12.setUploadStatus(VAR_13.UPLOAD_IN_PROGRESS);\n\n        UploadFileOperation VAR_14 = new UploadFileOperation(\n            VAR_15,\n            VAR_16,\n            VAR_17,\n            VAR_0,\n            VAR_8,\n            VAR_12,\n            VAR_4,\n            VAR_5,\n            this,\n            VAR_2,\n            VAR_3,\n            VAR_9\n        );\n        VAR_14.setCreatedBy(VAR_7);\n        if (VAR_6) {\n            VAR_14.setRemoteFolderToBeCreated();\n        }\n        VAR_14.addDataTransferProgressListener(this);\n        VAR_14.addDataTransferProgressListener((FileUploaderBinder) VAR_18);\n\n        VAR_14.addRenameUploadListener(this);\n\n        Pair<String, String> VAR_19 = VAR_20.putIfAbsent(\n            VAR_0.getAccountName(),\n            VAR_8.getRemotePath(),\n            VAR_14\n        );\n\n        if (VAR_19 != null) {\n            VAR_1.add(VAR_19.first);\n\n            /* COMMENT_0 */\n            long VAR_21 = VAR_15.storeUpload(VAR_12);\n            VAR_14.setOCUploadId(VAR_21);\n        }\n    }",
  "func_graph_path": "nextcloud/android/97d6f2954c879f3bfebcd241993147bced5fd50b/FileUploader.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,5 @@\n-private void startNewUpload(\n+@SuppressLint(\"SdCardPath\")\n+    private void startNewUpload(\n         User user,\n         List<String> requestedUploads,\n         boolean onWifiOnly,\n@@ -10,6 +11,11 @@\n         OCFile file,\n         boolean disableRetries\n                                ) {\n+        if (file.getStoragePath().startsWith(\"/data/data/\")) {\n+            Log_OC.d(TAG, \"Upload from sensitive path is not allowed\");\n+            return;\n+        }\n+\n         OCUpload ocUpload = new OCUpload(file, user.toPlatformAccount());\n         ocUpload.setFileSize(file.getFileLength());\n         ocUpload.setNameCollisionPolicy(nameCollisionPolicy);",
  "diff_line_info": {
    "deleted_lines": [
      "private void startNewUpload("
    ],
    "added_lines": [
      "@SuppressLint(\"SdCardPath\")",
      "    private void startNewUpload(",
      "        if (file.getStoragePath().startsWith(\"/data/data/\")) {",
      "            Log_OC.d(TAG, \"Upload from sensitive path is not allowed\");",
      "            return;",
      "        }",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/nextcloud/android/pull/8433",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/nextcloud/android/pull/8433: 403 Client Error: Forbidden for url: https://api.github.com/repos/nextcloud/android/pulls/8433",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}