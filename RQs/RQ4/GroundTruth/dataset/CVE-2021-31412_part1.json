{
  "cve_id": "CVE-2021-31412",
  "cwe_ids": [
    "CWE-20"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "vaadin/flow",
  "commit_msg": "fix: set routes first into the template\n\nfixes psi#26",
  "commit_hash": "c79a7a8dbe1a494ff99a591d2e85b1100fc0aa15",
  "git_url": "https://github.com/vaadin/flow/commit/c79a7a8dbe1a494ff99a591d2e85b1100fc0aa15",
  "file_path": "flow-server/src/main/java/com/vaadin/flow/router/RouteNotFoundError.java",
  "func_name": "setErrorParameter",
  "func_before": "@Override\n    public int setErrorParameter(BeforeEnterEvent event,\n            ErrorParameter<NotFoundException> parameter) {\n        String path = event.getLocation().getPath();\n        String additionalInfo = \"\";\n        if (parameter.hasCustomMessage()) {\n            additionalInfo = \"Reason: \" + parameter.getCustomMessage();\n        }\n        path = Jsoup.clean(path, Whitelist.none());\n        additionalInfo = Jsoup.clean(additionalInfo, Whitelist.none());\n\n        boolean productionMode = event.getUI().getSession().getConfiguration()\n                .isProductionMode();\n\n        String template = getErrorHtml(productionMode);\n        template = template.replace(\"{{path}}\", path);\n        template = template.replace(\"{{additionalInfo}}\", additionalInfo);\n        if (template.contains(\"{{routes}}\")) {\n            template = template.replace(\"{{routes}}\", getRoutes(event));\n        }\n\n        getElement().appendChild(new Html(template).getElement());\n        return HttpServletResponse.SC_NOT_FOUND;\n    }",
  "abstract_func_before": "@Override\n    public int setErrorParameter(BeforeEnterEvent VAR_0,\n            ErrorParameter<NotFoundException> VAR_1) {\n        String VAR_2 = VAR_0.getLocation().getPath();\n        String VAR_3 = \"\";\n        if (VAR_1.hasCustomMessage()) {\n            VAR_3 = \"Reason: \" + VAR_1.getCustomMessage();\n        }\n        VAR_2 = VAR_4.clean(VAR_2, VAR_5.none());\n        VAR_3 = VAR_4.clean(VAR_3, VAR_5.none());\n\n        boolean VAR_6 = VAR_0.getUI().getSession().getConfiguration()\n                .isProductionMode();\n\n        String VAR_7 = getErrorHtml(VAR_6);\n        VAR_7 = VAR_7.replace(\"{{path}}\", VAR_2);\n        VAR_7 = VAR_7.replace(\"{{additionalInfo}}\", VAR_3);\n        if (VAR_7.contains(\"{{routes}}\")) {\n            VAR_7 = VAR_7.replace(\"{{routes}}\", getRoutes(VAR_0));\n        }\n\n        getElement().appendChild(new Html(VAR_7).getElement());\n        return VAR_8.SC_NOT_FOUND;\n    }",
  "func_graph_path_before": "vaadin/flow/c79a7a8dbe1a494ff99a591d2e85b1100fc0aa15/RouteNotFoundError.java/vul/before/0.json",
  "func": "@Override\n    public int setErrorParameter(BeforeEnterEvent event,\n            ErrorParameter<NotFoundException> parameter) {\n        String path = event.getLocation().getPath();\n        String additionalInfo = \"\";\n        if (parameter.hasCustomMessage()) {\n            additionalInfo = \"Reason: \" + parameter.getCustomMessage();\n        }\n        path = Jsoup.clean(path, Whitelist.none());\n        additionalInfo = Jsoup.clean(additionalInfo, Whitelist.none());\n\n        boolean productionMode = event.getUI().getSession().getConfiguration()\n                .isProductionMode();\n\n        String template = getErrorHtml(productionMode);\n        if (template.contains(\"{{routes}}\")) {\n            template = template.replace(\"{{routes}}\", getRoutes(event));\n        }\n        template = template.replace(\"{{additionalInfo}}\", additionalInfo);\n        template = template.replace(\"{{path}}\", path);\n\n        getElement().appendChild(new Html(template).getElement());\n        return HttpServletResponse.SC_NOT_FOUND;\n    }",
  "abstract_func": "@Override\n    public int setErrorParameter(BeforeEnterEvent VAR_0,\n            ErrorParameter<NotFoundException> VAR_1) {\n        String VAR_2 = VAR_0.getLocation().getPath();\n        String VAR_3 = \"\";\n        if (VAR_1.hasCustomMessage()) {\n            VAR_3 = \"Reason: \" + VAR_1.getCustomMessage();\n        }\n        VAR_2 = VAR_4.clean(VAR_2, VAR_5.none());\n        VAR_3 = VAR_4.clean(VAR_3, VAR_5.none());\n\n        boolean VAR_6 = VAR_0.getUI().getSession().getConfiguration()\n                .isProductionMode();\n\n        String VAR_7 = getErrorHtml(VAR_6);\n        if (VAR_7.contains(\"{{routes}}\")) {\n            VAR_7 = VAR_7.replace(\"{{routes}}\", getRoutes(VAR_0));\n        }\n        VAR_7 = VAR_7.replace(\"{{additionalInfo}}\", VAR_3);\n        VAR_7 = VAR_7.replace(\"{{path}}\", VAR_2);\n\n        getElement().appendChild(new Html(VAR_7).getElement());\n        return VAR_8.SC_NOT_FOUND;\n    }",
  "func_graph_path": "vaadin/flow/c79a7a8dbe1a494ff99a591d2e85b1100fc0aa15/RouteNotFoundError.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -13,11 +13,11 @@\n                 .isProductionMode();\n \n         String template = getErrorHtml(productionMode);\n-        template = template.replace(\"{{path}}\", path);\n-        template = template.replace(\"{{additionalInfo}}\", additionalInfo);\n         if (template.contains(\"{{routes}}\")) {\n             template = template.replace(\"{{routes}}\", getRoutes(event));\n         }\n+        template = template.replace(\"{{additionalInfo}}\", additionalInfo);\n+        template = template.replace(\"{{path}}\", path);\n \n         getElement().appendChild(new Html(template).getElement());\n         return HttpServletResponse.SC_NOT_FOUND;",
  "diff_line_info": {
    "deleted_lines": [
      "        template = template.replace(\"{{path}}\", path);",
      "        template = template.replace(\"{{additionalInfo}}\", additionalInfo);"
    ],
    "added_lines": [
      "        template = template.replace(\"{{additionalInfo}}\", additionalInfo);",
      "        template = template.replace(\"{{path}}\", path);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/vaadin/flow/pull/11107",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/vaadin/flow/pull/11107: 403 Client Error: Forbidden for url: https://api.github.com/repos/vaadin/flow/pulls/11107",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.9"
}