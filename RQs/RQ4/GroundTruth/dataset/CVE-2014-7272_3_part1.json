{
  "cve_id": "CVE-2014-7272",
  "cwe_ids": [
    "CWE-264"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "sddm",
  "commit_msg": "Move onAuthenticated XAUTHORITY generation to the helper\n\nThis avoids it being created as root and then chown'd.",
  "commit_hash": "e92c466f5c324b429ce1a8aa1b40d208574c778a",
  "git_url": "https://github.com/sddm/sddm/commit/e92c466f5c324b429ce1a8aa1b40d208574c778a",
  "file_path": "src/helper/Backend.cpp",
  "func_name": "Backend::openSession",
  "func_before": "bool Backend::openSession() {\n        struct passwd *pw;\n        pw = getpwnam(qPrintable(qobject_cast<HelperApp*>(parent())->user()));\n        if (pw) {\n            QProcessEnvironment env = m_app->session()->processEnvironment();\n            env.insert(\"HOME\", pw->pw_dir);\n            env.insert(\"PWD\", pw->pw_dir);\n            env.insert(\"SHELL\", pw->pw_shell);\n            env.insert(\"USER\", pw->pw_name);\n            env.insert(\"LOGNAME\", pw->pw_name);\n            if (env.contains(\"DISPLAY\") && !env.contains(\"XAUTHORITY\"))\n                env.insert(\"XAUTHORITY\", QString(\"%1/.Xauthority\").arg(pw->pw_dir));\n            // TODO: I'm fairly sure this shouldn't be done for PAM sessions, investigate!\n            m_app->session()->setProcessEnvironment(env);\n\n            // redirect standard error to a file\n            m_app->session()->setStandardErrorFile(QString(\"%1/.xsession-errors\").arg(pw->pw_dir));\n        }\n        return m_app->session()->start();\n    }",
  "abstract_func_before": "bool Backend::openSession() {\n        struct passwd *VAR_0;\n        VAR_0 = getpwnam(qPrintable(VAR_1<HelperApp*>(parent())->user()));\n        if (VAR_0) {\n            QProcessEnvironment VAR_2 = VAR_3->session()->processEnvironment();\n            VAR_2.insert(\"HOME\", VAR_0->pw_dir);\n            VAR_2.insert(\"PWD\", VAR_0->pw_dir);\n            VAR_2.insert(\"SHELL\", VAR_0->pw_shell);\n            VAR_2.insert(\"USER\", VAR_0->pw_name);\n            VAR_2.insert(\"LOGNAME\", VAR_0->pw_name);\n            if (VAR_2.contains(\"DISPLAY\") && !VAR_2.contains(\"XAUTHORITY\"))\n                VAR_2.insert(\"XAUTHORITY\", QString(\"%1/.Xauthority\").arg(VAR_0->pw_dir));\n            /* COMMENT_0 */\n            VAR_3->session()->setProcessEnvironment(VAR_2);\n\n            /* COMMENT_1 */\n            VAR_3->session()->setStandardErrorFile(QString(\"%1/.xsession-errors\").arg(VAR_0->pw_dir));\n        }\n        return VAR_3->session()->start();\n    }",
  "func_graph_path_before": "sddm/e92c466f5c324b429ce1a8aa1b40d208574c778a/Backend.cpp/vul/before/0.json",
  "func": "bool Backend::openSession() {\n        struct passwd *pw;\n        pw = getpwnam(qPrintable(qobject_cast<HelperApp*>(parent())->user()));\n        if (pw) {\n            QProcessEnvironment env = m_app->session()->processEnvironment();\n            env.insert(\"HOME\", pw->pw_dir);\n            env.insert(\"PWD\", pw->pw_dir);\n            env.insert(\"SHELL\", pw->pw_shell);\n            env.insert(\"USER\", pw->pw_name);\n            env.insert(\"LOGNAME\", pw->pw_name);\n            if (env.contains(\"DISPLAY\") && !env.contains(\"XAUTHORITY\"))\n                env.insert(\"XAUTHORITY\", QString(\"%1/.Xauthority\").arg(pw->pw_dir));\n            // TODO: I'm fairly sure this shouldn't be done for PAM sessions, investigate!\n            m_app->session()->setProcessEnvironment(env);\n        }\n        return m_app->session()->start();\n    }",
  "abstract_func": "bool Backend::openSession() {\n        struct passwd *VAR_0;\n        VAR_0 = getpwnam(qPrintable(VAR_1<HelperApp*>(parent())->user()));\n        if (VAR_0) {\n            QProcessEnvironment VAR_2 = VAR_3->session()->processEnvironment();\n            VAR_2.insert(\"HOME\", VAR_0->pw_dir);\n            VAR_2.insert(\"PWD\", VAR_0->pw_dir);\n            VAR_2.insert(\"SHELL\", VAR_0->pw_shell);\n            VAR_2.insert(\"USER\", VAR_0->pw_name);\n            VAR_2.insert(\"LOGNAME\", VAR_0->pw_name);\n            if (VAR_2.contains(\"DISPLAY\") && !VAR_2.contains(\"XAUTHORITY\"))\n                VAR_2.insert(\"XAUTHORITY\", QString(\"%1/.Xauthority\").arg(VAR_0->pw_dir));\n            /* COMMENT_0 */\n            VAR_3->session()->setProcessEnvironment(VAR_2);\n        }\n        return VAR_3->session()->start();\n    }",
  "func_graph_path": "sddm/e92c466f5c324b429ce1a8aa1b40d208574c778a/Backend.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -12,9 +12,6 @@\n                 env.insert(\"XAUTHORITY\", QString(\"%1/.Xauthority\").arg(pw->pw_dir));\n             // TODO: I'm fairly sure this shouldn't be done for PAM sessions, investigate!\n             m_app->session()->setProcessEnvironment(env);\n-\n-            // redirect standard error to a file\n-            m_app->session()->setStandardErrorFile(QString(\"%1/.xsession-errors\").arg(pw->pw_dir));\n         }\n         return m_app->session()->start();\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "",
      "            // redirect standard error to a file",
      "            m_app->session()->setStandardErrorFile(QString(\"%1/.xsession-errors\").arg(pw->pw_dir));"
    ],
    "added_lines": []
  },
  "is_vul": true,
  "pr_url": "https://github.com/sddm/sddm/pull/280",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/sddm/sddm/pull/280: 403 Client Error: Forbidden for url: https://api.github.com/repos/sddm/sddm/pulls/280",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}