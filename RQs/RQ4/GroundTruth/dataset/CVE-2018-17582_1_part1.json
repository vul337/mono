{
  "cve_id": "CVE-2018-17582",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "appneta/tcpreplay",
  "commit_msg": "Bug #486 CVE-2018-17974 realloc memory if packet size increases (#492)\n\n* Bug #486 CVE-2018-17974 realloc memory if packet size increases\r\n\r\nAlso added check for packet size > cap len, although this may\r\nbe never be hit since #484\r\n\r\n* Bug #486 Enforce max snaplen rather than doing realloc\r\n\r\n* increase MAX_SNAPLEN from 65535 to 262144\r\n* increase MAXPACKET from 65549 to 262158\r\n* exit on buffer overflow for adding VLAN tag (as opposed to realloc)",
  "commit_hash": "6d2fd968d8d520283b96986945a1b91c8a60131b",
  "git_url": "https://github.com/appneta/tcpreplay/commit/6d2fd968d8d520283b96986945a1b91c8a60131b",
  "file_path": "src/common/utils.c",
  "func_name": "_our_safe_pcap_next_ex",
  "func_before": "int _our_safe_pcap_next_ex(pcap_t *pcap, struct pcap_pkthdr **pkthdr,\n        const u_char **pktdata, const char *funcname,\n        const int line, const char *file)\n{\n    int res = pcap_next_ex(pcap, pkthdr, pktdata);\n\n    if (*pktdata && *pkthdr) {\n        if ((*pkthdr)->len > MAX_PCAP_PACKET_LEN) {\n            fprintf(stderr, \"safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: %u is greater than maximum %u\\n\",\n                    file, funcname, line, (*pkthdr)->len, MAX_PCAP_PACKET_LEN);\n            exit(-1);\n        }\n\n        if ((*pkthdr)->len < (*pkthdr)->caplen) {\n            fprintf(stderr, \"safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: packet length %u is less than capture length %u\\n\",\n                    file, funcname, line, (*pkthdr)->len, (*pkthdr)->caplen);\n            exit(-1);\n        }\n    }\n\n    return res;\n}",
  "abstract_func_before": "int _our_safe_pcap_next_ex(pcap_t *VAR_0, struct pcap_pkthdr **VAR_1,\n        const u_char **VAR_2, const char *VAR_3,\n        const int VAR_4, const char *VAR_5)\n{\n    int VAR_6 = pcap_next_ex(VAR_0, VAR_1, VAR_2);\n\n    if (*VAR_2 && *VAR_1) {\n        if ((*VAR_1)->len > VAR_7) {\n            fprintf(VAR_8, \"safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: %u is greater than maximum %u\\n\",\n                    VAR_5, VAR_3, VAR_4, (*VAR_1)->len, VAR_7);\n            exit(-1);\n        }\n\n        if ((*VAR_1)->len < (*VAR_1)->caplen) {\n            fprintf(VAR_8, \"safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: packet length %u is less than capture length %u\\n\",\n                    VAR_5, VAR_3, VAR_4, (*VAR_1)->len, (*VAR_1)->caplen);\n            exit(-1);\n        }\n    }\n\n    return VAR_6;\n}",
  "func_graph_path_before": "appneta/tcpreplay/6d2fd968d8d520283b96986945a1b91c8a60131b/utils.c/vul/before/1.json",
  "func": "int _our_safe_pcap_next_ex(pcap_t *pcap, struct pcap_pkthdr **pkthdr,\n        const u_char **pktdata, const char *funcname,\n        const int line, const char *file)\n{\n    int res = pcap_next_ex(pcap, pkthdr, pktdata);\n\n    if (*pktdata && *pkthdr) {\n        if ((*pkthdr)->len > MAXPACKET) {\n            fprintf(stderr, \"safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: %u is greater than maximum %u\\n\",\n                    file, funcname, line, (*pkthdr)->len, MAXPACKET);\n            exit(-1);\n        }\n\n        if ((*pkthdr)->len < (*pkthdr)->caplen) {\n            fprintf(stderr, \"safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: packet length %u is less than capture length %u\\n\",\n                    file, funcname, line, (*pkthdr)->len, (*pkthdr)->caplen);\n            exit(-1);\n        }\n    }\n\n    return res;\n}",
  "abstract_func": "int _our_safe_pcap_next_ex(pcap_t *VAR_0, struct pcap_pkthdr **VAR_1,\n        const u_char **VAR_2, const char *VAR_3,\n        const int VAR_4, const char *VAR_5)\n{\n    int VAR_6 = pcap_next_ex(VAR_0, VAR_1, VAR_2);\n\n    if (*VAR_2 && *VAR_1) {\n        if ((*VAR_1)->len > VAR_7) {\n            fprintf(VAR_8, \"safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: %u is greater than maximum %u\\n\",\n                    VAR_5, VAR_3, VAR_4, (*VAR_1)->len, VAR_7);\n            exit(-1);\n        }\n\n        if ((*VAR_1)->len < (*VAR_1)->caplen) {\n            fprintf(VAR_8, \"safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: packet length %u is less than capture length %u\\n\",\n                    VAR_5, VAR_3, VAR_4, (*VAR_1)->len, (*VAR_1)->caplen);\n            exit(-1);\n        }\n    }\n\n    return VAR_6;\n}",
  "func_graph_path": "appneta/tcpreplay/6d2fd968d8d520283b96986945a1b91c8a60131b/utils.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -5,9 +5,9 @@\n     int res = pcap_next_ex(pcap, pkthdr, pktdata);\n \n     if (*pktdata && *pkthdr) {\n-        if ((*pkthdr)->len > MAX_PCAP_PACKET_LEN) {\n+        if ((*pkthdr)->len > MAXPACKET) {\n             fprintf(stderr, \"safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: %u is greater than maximum %u\\n\",\n-                    file, funcname, line, (*pkthdr)->len, MAX_PCAP_PACKET_LEN);\n+                    file, funcname, line, (*pkthdr)->len, MAXPACKET);\n             exit(-1);\n         }\n ",
  "diff_line_info": {
    "deleted_lines": [
      "        if ((*pkthdr)->len > MAX_PCAP_PACKET_LEN) {",
      "                    file, funcname, line, (*pkthdr)->len, MAX_PCAP_PACKET_LEN);"
    ],
    "added_lines": [
      "        if ((*pkthdr)->len > MAXPACKET) {",
      "                    file, funcname, line, (*pkthdr)->len, MAXPACKET);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/appneta/tcpreplay/pull/492",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/appneta/tcpreplay/pull/492: 403 Client Error: Forbidden for url: https://api.github.com/repos/appneta/tcpreplay/pulls/492",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}