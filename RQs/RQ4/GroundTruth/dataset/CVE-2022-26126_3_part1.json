{
  "cve_id": "CVE-2022-26126",
  "cwe_ids": [
    "CWE-119"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "FRRouting/frr",
  "commit_msg": "isisd: fix #10505 using base64 encoding\n\nUsing base64 instead of the raw string to encode\nthe binary data.\n\nSigned-off-by: whichbug <whichbug@github.com>",
  "commit_hash": "ac3133450de12ba86c051265fc0f1b12bc57b40c",
  "git_url": "https://github.com/FRRouting/frr/commit/ac3133450de12ba86c051265fc0f1b12bc57b40c",
  "file_path": "isisd/isis_nb_notifications.c",
  "func_name": "isis_notif_version_skew",
  "func_before": "void isis_notif_version_skew(const struct isis_circuit *circuit,\n\t\t\t     uint8_t version, const char *raw_pdu,\n\t\t\t     size_t raw_pdu_len)\n{\n\tconst char *xpath = \"/frr-isisd:version-skew\";\n\tstruct list *arguments = yang_data_list_new();\n\tchar xpath_arg[XPATH_MAXLEN];\n\tstruct yang_data *data;\n\tstruct isis_area *area = circuit->area;\n\n\tnotif_prep_instance_hdr(xpath, area, \"default\", arguments);\n\tnotif_prepr_iface_hdr(xpath, circuit, arguments);\n\tsnprintf(xpath_arg, sizeof(xpath_arg), \"%s/protocol-version\", xpath);\n\tdata = yang_data_new_uint8(xpath_arg, version);\n\tlistnode_add(arguments, data);\n\tsnprintf(xpath_arg, sizeof(xpath_arg), \"%s/raw-pdu\", xpath);\n\tdata = yang_data_new(xpath_arg, raw_pdu);\n\tlistnode_add(arguments, data);\n\n\thook_call(isis_hook_version_skew, circuit, version, raw_pdu,\n\t\t  raw_pdu_len);\n\n\tnb_notification_send(xpath, arguments);\n}",
  "abstract_func_before": "void isis_notif_version_skew(const struct isis_circuit *VAR_0,\n\t\t\t     uint8_t VAR_1, const char *VAR_2,\n\t\t\t     size_t VAR_3)\n{\n\tconst char *VAR_4 = \"/frr-isisd:version-skew\";\n\tstruct list *VAR_5 = yang_data_list_new();\n\tchar VAR_6[VAR_7];\n\tstruct yang_data *VAR_8;\n\tstruct isis_area *VAR_9 = VAR_0->area;\n\n\tnotif_prep_instance_hdr(VAR_4, VAR_9, \"default\", VAR_5);\n\tnotif_prepr_iface_hdr(VAR_4, VAR_0, VAR_5);\n\tsnprintf(VAR_6, sizeof(VAR_6), \"%s/protocol-version\", VAR_4);\n\tVAR_8 = yang_data_new_uint8(VAR_6, VAR_1);\n\tlistnode_add(VAR_5, VAR_8);\n\tsnprintf(VAR_6, sizeof(VAR_6), \"%s/raw-pdu\", VAR_4);\n\tVAR_8 = yang_data_new(VAR_6, VAR_2);\n\tlistnode_add(VAR_5, VAR_8);\n\n\thook_call(VAR_10, VAR_0, VAR_1, VAR_2,\n\t\t  VAR_3);\n\n\tnb_notification_send(VAR_4, VAR_5);\n}",
  "func_graph_path_before": "FRRouting/frr/ac3133450de12ba86c051265fc0f1b12bc57b40c/isis_nb_notifications.c/vul/before/4.json",
  "func": "void isis_notif_version_skew(const struct isis_circuit *circuit,\n\t\t\t     uint8_t version, const char *raw_pdu,\n\t\t\t     size_t raw_pdu_len)\n{\n\tconst char *xpath = \"/frr-isisd:version-skew\";\n\tstruct list *arguments = yang_data_list_new();\n\tchar xpath_arg[XPATH_MAXLEN];\n\tstruct yang_data *data;\n\tstruct isis_area *area = circuit->area;\n\n\tnotif_prep_instance_hdr(xpath, area, \"default\", arguments);\n\tnotif_prepr_iface_hdr(xpath, circuit, arguments);\n\tsnprintf(xpath_arg, sizeof(xpath_arg), \"%s/protocol-version\", xpath);\n\tdata = yang_data_new_uint8(xpath_arg, version);\n\tlistnode_add(arguments, data);\n\tsnprintf(xpath_arg, sizeof(xpath_arg), \"%s/raw-pdu\", xpath);\n\tdata = yang_data_new_binary(xpath_arg, raw_pdu, raw_pdu_len);\n\tlistnode_add(arguments, data);\n\n\thook_call(isis_hook_version_skew, circuit, version, raw_pdu,\n\t\t  raw_pdu_len);\n\n\tnb_notification_send(xpath, arguments);\n}",
  "abstract_func": "void isis_notif_version_skew(const struct isis_circuit *VAR_0,\n\t\t\t     uint8_t VAR_1, const char *VAR_2,\n\t\t\t     size_t VAR_3)\n{\n\tconst char *VAR_4 = \"/frr-isisd:version-skew\";\n\tstruct list *VAR_5 = yang_data_list_new();\n\tchar VAR_6[VAR_7];\n\tstruct yang_data *VAR_8;\n\tstruct isis_area *VAR_9 = VAR_0->area;\n\n\tnotif_prep_instance_hdr(VAR_4, VAR_9, \"default\", VAR_5);\n\tnotif_prepr_iface_hdr(VAR_4, VAR_0, VAR_5);\n\tsnprintf(VAR_6, sizeof(VAR_6), \"%s/protocol-version\", VAR_4);\n\tVAR_8 = yang_data_new_uint8(VAR_6, VAR_1);\n\tlistnode_add(VAR_5, VAR_8);\n\tsnprintf(VAR_6, sizeof(VAR_6), \"%s/raw-pdu\", VAR_4);\n\tVAR_8 = yang_data_new_binary(VAR_6, VAR_2, VAR_3);\n\tlistnode_add(VAR_5, VAR_8);\n\n\thook_call(VAR_10, VAR_0, VAR_1, VAR_2,\n\t\t  VAR_3);\n\n\tnb_notification_send(VAR_4, VAR_5);\n}",
  "func_graph_path": "FRRouting/frr/ac3133450de12ba86c051265fc0f1b12bc57b40c/isis_nb_notifications.c/vul/after/4.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -14,7 +14,7 @@\n \tdata = yang_data_new_uint8(xpath_arg, version);\n \tlistnode_add(arguments, data);\n \tsnprintf(xpath_arg, sizeof(xpath_arg), \"%s/raw-pdu\", xpath);\n-\tdata = yang_data_new(xpath_arg, raw_pdu);\n+\tdata = yang_data_new_binary(xpath_arg, raw_pdu, raw_pdu_len);\n \tlistnode_add(arguments, data);\n \n \thook_call(isis_hook_version_skew, circuit, version, raw_pdu,",
  "diff_line_info": {
    "deleted_lines": [
      "\tdata = yang_data_new(xpath_arg, raw_pdu);"
    ],
    "added_lines": [
      "\tdata = yang_data_new_binary(xpath_arg, raw_pdu, raw_pdu_len);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/FRRouting/frr/pull/10566",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/FRRouting/frr/pull/10566: 403 Client Error: Forbidden for url: https://api.github.com/repos/FRRouting/frr/pulls/10566",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.6,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.6  \n\nThe change addresses how binary data is handled, likely fixing a bug, but there's no explicit mention of a security vulnerability."
}