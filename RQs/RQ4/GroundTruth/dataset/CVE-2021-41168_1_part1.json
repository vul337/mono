{
  "cve_id": "CVE-2021-41168",
  "cwe_ids": [
    "CWE-407"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "reddit/snudown",
  "commit_msg": "Hash-collision denial-of-service vulnerabilities (#87)\n\n* Add case insensitive SipHash implementation\n* Replace ref hash function with SipHash\n* Add label to link_ref struct.\n* Update find_link_ref to compare link labels as well as hashes\n* Update add_link_ref to disallow duplicate entries.\n* cast to char from uint8_t for strncasecmp\n* update README markdown, remove TODO\n* add py2 wheel generation\n* fix: add logic for older glibc not having getrandom, impacting staging\n\nCo-authored-by: Nicolaas <nweidema@usc.edu>",
  "commit_hash": "1ac2c130b210539ee1e5d67a7bac93f9d8007c0e",
  "git_url": "https://github.com/reddit/snudown/commit/1ac2c130b210539ee1e5d67a7bac93f9d8007c0e",
  "file_path": "src/markdown.c",
  "func_name": "find_link_ref",
  "func_before": "static struct link_ref *\nfind_link_ref(struct link_ref **references, uint8_t *name, size_t length)\n{\n\tunsigned int hash = hash_link_ref(name, length);\n\tstruct link_ref *ref = NULL;\n\n\tref = references[hash % REF_TABLE_SIZE];\n\n\twhile (ref != NULL) {\n\t\tif (ref->id == hash)\n\t\t\treturn ref;\n\n\t\tref = ref->next;\n\t}\n\n\treturn NULL;\n}",
  "abstract_func_before": "static struct link_ref *\nfind_link_ref(struct link_ref **VAR_0, uint8_t *VAR_1, size_t VAR_2)\n{\n\tunsigned int VAR_3 = hash_link_ref(VAR_1, VAR_2);\n\tstruct link_ref *VAR_4 = NULL;\n\n\tVAR_4 = VAR_0[VAR_3 % VAR_5];\n\n\twhile (VAR_4 != NULL) {\n\t\tif (VAR_4->id == VAR_3)\n\t\t\treturn VAR_4;\n\n\t\tVAR_4 = VAR_4->next;\n\t}\n\n\treturn NULL;\n}",
  "func_graph_path_before": "reddit/snudown/1ac2c130b210539ee1e5d67a7bac93f9d8007c0e/markdown.c/vul/before/2.json",
  "func": "static struct link_ref *\nfind_link_ref(struct link_ref **references, uint8_t *name, size_t length)\n{\n\tunsigned int hash = hash_link_ref(name, length);\n\tstruct link_ref *ref = NULL;\n\n\tref = references[hash % REF_TABLE_SIZE];\n\n\twhile (ref != NULL) {\n\t\tif (ref->id == hash && ref->label->size == length) {\n\t\t\tif (strncasecmp((char *)ref->label->data, (char *) name, length) == 0) {\n\t\t\t\treturn ref;\n\t\t\t}\n\t\t}\n\n\t\tref = ref->next;\n\t}\n\n\treturn NULL;\n}",
  "abstract_func": "static struct link_ref *\nfind_link_ref(struct link_ref **VAR_0, uint8_t *VAR_1, size_t VAR_2)\n{\n\tunsigned int VAR_3 = hash_link_ref(VAR_1, VAR_2);\n\tstruct link_ref *VAR_4 = NULL;\n\n\tVAR_4 = VAR_0[VAR_3 % VAR_5];\n\n\twhile (VAR_4 != NULL) {\n\t\tif (VAR_4->id == VAR_3 && VAR_4->label->size == VAR_2) {\n\t\t\tif (strncasecmp((char *)VAR_4->label->data, (char *) VAR_1, VAR_2) == 0) {\n\t\t\t\treturn VAR_4;\n\t\t\t}\n\t\t}\n\n\t\tVAR_4 = VAR_4->next;\n\t}\n\n\treturn NULL;\n}",
  "func_graph_path": "reddit/snudown/1ac2c130b210539ee1e5d67a7bac93f9d8007c0e/markdown.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,8 +7,11 @@\n \tref = references[hash % REF_TABLE_SIZE];\n \n \twhile (ref != NULL) {\n-\t\tif (ref->id == hash)\n-\t\t\treturn ref;\n+\t\tif (ref->id == hash && ref->label->size == length) {\n+\t\t\tif (strncasecmp((char *)ref->label->data, (char *) name, length) == 0) {\n+\t\t\t\treturn ref;\n+\t\t\t}\n+\t\t}\n \n \t\tref = ref->next;\n \t}",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tif (ref->id == hash)",
      "\t\t\treturn ref;"
    ],
    "added_lines": [
      "\t\tif (ref->id == hash && ref->label->size == length) {",
      "\t\t\tif (strncasecmp((char *)ref->label->data, (char *) name, length) == 0) {",
      "\t\t\t\treturn ref;",
      "\t\t\t}",
      "\t\t}"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/reddit/snudown/pull/88",
  "description": {
    "pr_info": {
      "title": "Merge 1.7.0 into downstream github.com repo",
      "number": 88
    },
    "comment": [
      "Publishing internal repo of snudown (which had a 1.6.0 that is merged here as well). \r\n\r\nIn addition, this 1.7.0 branch includes fixes for a to-be-published security advisory (thanks to @NicolaasWeideman)"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.97,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.97\n\n**Step-by-Step Explanation:**\n\n1. **Commit Message Analysis:** The message explicitly mentions \"Hash-collision denial-of-service vulnerabilities,\" indicating a security issue.\n2. **Code Changes:** Implementation of SipHash and case-sensitive comparisons mitigate hash collisions, addressing a DoS vector.\n3. **Vulnerability Description:** References a security advisory, confirming the patch's security nature.\n\nThe changes directly target known security weaknesses, aligning with a clear security fix."
}