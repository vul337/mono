{
  "cve_id": "CVE-2023-33974",
  "cwe_ids": [
    "CWE-362"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "RIOT-OS/RIOT",
  "commit_msg": "gnrc_sixlowpan_frag_sfr: fix ARQ scheduler race-condition",
  "commit_hash": "31c6191f6196f1a05c9765cffeadba868e3b0723",
  "git_url": "https://github.com/RIOT-OS/RIOT/commit/31c6191f6196f1a05c9765cffeadba868e3b0723",
  "file_path": "sys/net/gnrc/network_layer/sixlowpan/frag/sfr/gnrc_sixlowpan_frag_sfr.c",
  "func_name": "_sched_arq_timeout",
  "func_before": "static void _sched_arq_timeout(gnrc_sixlowpan_frag_fb_t *fbuf, uint32_t offset)\n{\n    if (IS_ACTIVE(CONFIG_GNRC_SIXLOWPAN_SFR_MOCK_ARQ_TIMER)) {\n        /* mock does not need to be scheduled */\n        return;\n    }\n    if (fbuf->sfr.arq_timeout_event.msg.content.ptr != NULL) {\n        DEBUG(\"6lo sfr: ARQ timeout for datagram %u already scheduled\\n\",\n              (uint8_t)fbuf->tag);\n        return;\n    }\n    DEBUG(\"6lo sfr: arming ACK timeout in %lums for datagram %u\\n\",\n          (long unsigned)offset, fbuf->tag);\n    fbuf->sfr.arq_timeout_event.event.offset = offset;\n    fbuf->sfr.arq_timeout_event.msg.content.ptr = fbuf;\n    fbuf->sfr.arq_timeout_event.msg.type = GNRC_SIXLOWPAN_FRAG_SFR_ARQ_TIMEOUT_MSG;\n    evtimer_add_msg(&_arq_timer, &fbuf->sfr.arq_timeout_event,\n                    _getpid());\n}",
  "abstract_func_before": "static void _sched_arq_timeout(gnrc_sixlowpan_frag_fb_t *VAR_0, uint32_t VAR_1)\n{\n    if (IS_ACTIVE(VAR_2)) {\n        /* COMMENT_0 */\n        return;\n    }\n    if (VAR_0->sfr.arq_timeout_event.msg.content.ptr != NULL) {\n        DEBUG(\"6lo sfr: ARQ timeout for datagram %u already scheduled\\n\",\n              (uint8_t)VAR_0->tag);\n        return;\n    }\n    DEBUG(\"6lo sfr: arming ACK timeout in %lums for datagram %u\\n\",\n          (long unsigned)VAR_1, VAR_0->tag);\n    VAR_0->sfr.arq_timeout_event.event.offset = VAR_1;\n    VAR_0->sfr.arq_timeout_event.msg.content.ptr = VAR_0;\n    VAR_0->sfr.arq_timeout_event.msg.type = VAR_3;\n    evtimer_add_msg(&VAR_4, &VAR_0->sfr.arq_timeout_event,\n                    _getpid());\n}",
  "func_graph_path_before": "RIOT-OS/RIOT/31c6191f6196f1a05c9765cffeadba868e3b0723/gnrc_sixlowpan_frag_sfr.c/vul/before/1.json",
  "func": "static void _sched_arq_timeout(gnrc_sixlowpan_frag_fb_t *fbuf, uint32_t offset)\n{\n    if (IS_ACTIVE(CONFIG_GNRC_SIXLOWPAN_SFR_MOCK_ARQ_TIMER)) {\n        /* mock does not need to be scheduled */\n        return;\n    }\n    if (_arq_scheduled(fbuf)) {\n        DEBUG(\"6lo sfr: ARQ timeout for datagram %u already scheduled\\n\",\n              (uint8_t)fbuf->tag);\n        return;\n    }\n    DEBUG(\"6lo sfr: arming ACK timeout in %lums for datagram %u\\n\",\n          (long unsigned)offset, fbuf->tag);\n    fbuf->sfr.arq_timeout_event.event.offset = offset;\n    fbuf->sfr.arq_timeout_event.msg.content.ptr = fbuf;\n    fbuf->sfr.arq_timeout_event.msg.type = GNRC_SIXLOWPAN_FRAG_SFR_ARQ_TIMEOUT_MSG;\n    evtimer_add_msg(&_arq_timer, &fbuf->sfr.arq_timeout_event,\n                    _getpid());\n}",
  "abstract_func": "static void _sched_arq_timeout(gnrc_sixlowpan_frag_fb_t *VAR_0, uint32_t VAR_1)\n{\n    if (IS_ACTIVE(VAR_2)) {\n        /* COMMENT_0 */\n        return;\n    }\n    if (_arq_scheduled(VAR_0)) {\n        DEBUG(\"6lo sfr: ARQ timeout for datagram %u already scheduled\\n\",\n              (uint8_t)VAR_0->tag);\n        return;\n    }\n    DEBUG(\"6lo sfr: arming ACK timeout in %lums for datagram %u\\n\",\n          (long unsigned)VAR_1, VAR_0->tag);\n    VAR_0->sfr.arq_timeout_event.event.offset = VAR_1;\n    VAR_0->sfr.arq_timeout_event.msg.content.ptr = VAR_0;\n    VAR_0->sfr.arq_timeout_event.msg.type = VAR_3;\n    evtimer_add_msg(&VAR_4, &VAR_0->sfr.arq_timeout_event,\n                    _getpid());\n}",
  "func_graph_path": "RIOT-OS/RIOT/31c6191f6196f1a05c9765cffeadba868e3b0723/gnrc_sixlowpan_frag_sfr.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,7 +4,7 @@\n         /* mock does not need to be scheduled */\n         return;\n     }\n-    if (fbuf->sfr.arq_timeout_event.msg.content.ptr != NULL) {\n+    if (_arq_scheduled(fbuf)) {\n         DEBUG(\"6lo sfr: ARQ timeout for datagram %u already scheduled\\n\",\n               (uint8_t)fbuf->tag);\n         return;",
  "diff_line_info": {
    "deleted_lines": [
      "    if (fbuf->sfr.arq_timeout_event.msg.content.ptr != NULL) {"
    ],
    "added_lines": [
      "    if (_arq_scheduled(fbuf)) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/RIOT-OS/RIOT/pull/19679",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/RIOT-OS/RIOT/pull/19679: 403 Client Error: Forbidden for url: https://api.github.com/repos/RIOT-OS/RIOT/pulls/19679",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9"
}