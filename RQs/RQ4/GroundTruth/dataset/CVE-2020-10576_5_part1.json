{
  "cve_id": "CVE-2020-10576",
  "cwe_ids": [
    "CWE-362"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "meetecho/janus-gateway",
  "commit_msg": "Fixes to leaks and race conditions in VoiceMail plugin",
  "commit_hash": "eb99ac8674c554bab6775f4378b24e991b4a2fa1",
  "git_url": "https://github.com/meetecho/janus-gateway/commit/eb99ac8674c554bab6775f4378b24e991b4a2fa1",
  "file_path": "plugins/janus_voicemail.c",
  "func_name": "janus_voicemail_setup_media",
  "func_before": "void janus_voicemail_setup_media(janus_plugin_session *handle) {\n\tJANUS_LOG(LOG_INFO, \"[%s-%p] WebRTC media is now available\\n\", JANUS_VOICEMAIL_PACKAGE, handle);\n\tif(g_atomic_int_get(&stopping) || !g_atomic_int_get(&initialized))\n\t\treturn;\n\tjanus_mutex_lock(&sessions_mutex);\n\tjanus_voicemail_session *session = janus_voicemail_lookup_session(handle);\n\tif(!session) {\n\t\tjanus_mutex_unlock(&sessions_mutex);\n\t\tJANUS_LOG(LOG_ERR, \"No session associated with this handle...\\n\");\n\t\treturn;\n\t}\n\tif(g_atomic_int_get(&session->destroyed)) {\n\t\tjanus_mutex_unlock(&sessions_mutex);\n\t\treturn;\n\t}\n\tjanus_refcount_increase(&session->ref);\n\tjanus_mutex_unlock(&sessions_mutex);\n\tg_atomic_int_set(&session->hangingup, 0);\n\t/* Only start recording this peer when we get this event */\n\tsession->start_time = janus_get_monotonic_time();\n\tsession->started = TRUE;\n\t/* Prepare JSON event */\n\tjson_t *event = json_object();\n\tjson_object_set_new(event, \"voicemail\", json_string(\"event\"));\n\tjson_object_set_new(event, \"status\", json_string(\"started\"));\n\tint ret = gateway->push_event(handle, &janus_voicemail_plugin, NULL, event, NULL);\n\tJANUS_LOG(LOG_VERB, \"  >> Pushing event: %d (%s)\\n\", ret, janus_get_api_error(ret));\n\tjson_decref(event);\n\tjanus_refcount_decrease(&session->ref);\n}",
  "abstract_func_before": "void janus_voicemail_setup_media(janus_plugin_session *VAR_0) {\n\tJANUS_LOG(VAR_1, \"[%s-%p] WebRTC media is now available\\n\", VAR_2, VAR_0);\n\tif(g_atomic_int_get(&VAR_3) || !g_atomic_int_get(&VAR_4))\n\t\treturn;\n\tjanus_mutex_lock(&VAR_5);\n\tjanus_voicemail_session *VAR_6 = janus_voicemail_lookup_session(VAR_0);\n\tif(!VAR_6) {\n\t\tjanus_mutex_unlock(&VAR_5);\n\t\tJANUS_LOG(VAR_7, \"No session associated with this handle...\\n\");\n\t\treturn;\n\t}\n\tif(g_atomic_int_get(&VAR_6->destroyed)) {\n\t\tjanus_mutex_unlock(&VAR_5);\n\t\treturn;\n\t}\n\tjanus_refcount_increase(&VAR_6->ref);\n\tjanus_mutex_unlock(&VAR_5);\n\tg_atomic_int_set(&VAR_6->hangingup, 0);\n\t/* COMMENT_0 */\n\tVAR_6->start_time = janus_get_monotonic_time();\n\tVAR_6->started = TRUE;\n\t/* COMMENT_1 */\n\tjson_t *VAR_8 = json_object();\n\tjson_object_set_new(VAR_8, \"voicemail\", json_string(\"event\"));\n\tjson_object_set_new(VAR_8, \"status\", json_string(\"started\"));\n\tint VAR_9 = VAR_10->push_event(VAR_0, &VAR_11, NULL, VAR_8, NULL);\n\tJANUS_LOG(VAR_12, \"  >> Pushing event: %d (%s)\\n\", VAR_9, janus_get_api_error(VAR_9));\n\tjson_decref(VAR_8);\n\tjanus_refcount_decrease(&VAR_6->ref);\n}",
  "func_graph_path_before": "meetecho/janus-gateway/eb99ac8674c554bab6775f4378b24e991b4a2fa1/janus_voicemail.c/vul/before/6.json",
  "func": "void janus_voicemail_setup_media(janus_plugin_session *handle) {\n\tJANUS_LOG(LOG_INFO, \"[%s-%p] WebRTC media is now available\\n\", JANUS_VOICEMAIL_PACKAGE, handle);\n\tif(g_atomic_int_get(&stopping) || !g_atomic_int_get(&initialized))\n\t\treturn;\n\tjanus_mutex_lock(&sessions_mutex);\n\tjanus_voicemail_session *session = janus_voicemail_lookup_session(handle);\n\tif(!session) {\n\t\tjanus_mutex_unlock(&sessions_mutex);\n\t\tJANUS_LOG(LOG_ERR, \"No session associated with this handle...\\n\");\n\t\treturn;\n\t}\n\tif(g_atomic_int_get(&session->destroyed)) {\n\t\tjanus_mutex_unlock(&sessions_mutex);\n\t\treturn;\n\t}\n\tjanus_refcount_increase(&session->ref);\n\tjanus_mutex_unlock(&sessions_mutex);\n\tg_atomic_int_set(&session->hangingup, 0);\n\t/* Only start recording this peer when we get this event */\n\tsession->start_time = janus_get_monotonic_time();\n\tg_atomic_int_set(&session->started, 1);\n\t/* Prepare JSON event */\n\tjson_t *event = json_object();\n\tjson_object_set_new(event, \"voicemail\", json_string(\"event\"));\n\tjson_object_set_new(event, \"status\", json_string(\"started\"));\n\tint ret = gateway->push_event(handle, &janus_voicemail_plugin, NULL, event, NULL);\n\tJANUS_LOG(LOG_VERB, \"  >> Pushing event: %d (%s)\\n\", ret, janus_get_api_error(ret));\n\tjson_decref(event);\n\tjanus_refcount_decrease(&session->ref);\n}",
  "abstract_func": "void janus_voicemail_setup_media(janus_plugin_session *VAR_0) {\n\tJANUS_LOG(VAR_1, \"[%s-%p] WebRTC media is now available\\n\", VAR_2, VAR_0);\n\tif(g_atomic_int_get(&VAR_3) || !g_atomic_int_get(&VAR_4))\n\t\treturn;\n\tjanus_mutex_lock(&VAR_5);\n\tjanus_voicemail_session *VAR_6 = janus_voicemail_lookup_session(VAR_0);\n\tif(!VAR_6) {\n\t\tjanus_mutex_unlock(&VAR_5);\n\t\tJANUS_LOG(VAR_7, \"No session associated with this handle...\\n\");\n\t\treturn;\n\t}\n\tif(g_atomic_int_get(&VAR_6->destroyed)) {\n\t\tjanus_mutex_unlock(&VAR_5);\n\t\treturn;\n\t}\n\tjanus_refcount_increase(&VAR_6->ref);\n\tjanus_mutex_unlock(&VAR_5);\n\tg_atomic_int_set(&VAR_6->hangingup, 0);\n\t/* COMMENT_0 */\n\tVAR_6->start_time = janus_get_monotonic_time();\n\tg_atomic_int_set(&VAR_6->started, 1);\n\t/* COMMENT_1 */\n\tjson_t *VAR_8 = json_object();\n\tjson_object_set_new(VAR_8, \"voicemail\", json_string(\"event\"));\n\tjson_object_set_new(VAR_8, \"status\", json_string(\"started\"));\n\tint VAR_9 = VAR_10->push_event(VAR_0, &VAR_11, NULL, VAR_8, NULL);\n\tJANUS_LOG(VAR_12, \"  >> Pushing event: %d (%s)\\n\", VAR_9, janus_get_api_error(VAR_9));\n\tjson_decref(VAR_8);\n\tjanus_refcount_decrease(&VAR_6->ref);\n}",
  "func_graph_path": "meetecho/janus-gateway/eb99ac8674c554bab6775f4378b24e991b4a2fa1/janus_voicemail.c/vul/after/6.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -18,7 +18,7 @@\n \tg_atomic_int_set(&session->hangingup, 0);\n \t/* Only start recording this peer when we get this event */\n \tsession->start_time = janus_get_monotonic_time();\n-\tsession->started = TRUE;\n+\tg_atomic_int_set(&session->started, 1);\n \t/* Prepare JSON event */\n \tjson_t *event = json_object();\n \tjson_object_set_new(event, \"voicemail\", json_string(\"event\"));",
  "diff_line_info": {
    "deleted_lines": [
      "\tsession->started = TRUE;"
    ],
    "added_lines": [
      "\tg_atomic_int_set(&session->started, 1);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/meetecho/janus-gateway/pull/1993",
  "description": {
    "pr_info": {
      "title": "Fixes to leaks and race conditions in VoiceMail plugin",
      "number": 1993
    },
    "comment": [
      "Ref: CVE-2020-10576\r\n\r\nWe've been notified about some issues with the VoiceMail plugin, which in part didn't surprise me as it hasn't been touched much since it was first created, and we very rarely use it ourselves. Specifically, there was a race condition that could cause a crash in the server. This patch addresses that issue, and also takes care of leaks that the VoiceMail plugin was apparently causing consistently, whether the issue showed up or not.\r\n\r\nI can't replicate the issue anymore, so I'm planning to merge soon. Feedback welcome!",
      "Merging."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}