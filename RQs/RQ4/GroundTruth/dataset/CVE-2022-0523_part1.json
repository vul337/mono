{
  "cve_id": "CVE-2022-0523",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix UAF in pyc parser ##crash\n\n* Reported by Cen Zhang via huntr.dev\n* Reproducer: bins/fuzzed/harep2.pyc",
  "commit_hash": "35482cb760db10f87a62569e2f8872dbd95e9269",
  "git_url": "https://github.com/radareorg/radare2/commit/35482cb760db10f87a62569e2f8872dbd95e9269",
  "file_path": "libr/bin/format/pyc/marshal.c",
  "func_name": "get_array_object_generic",
  "func_before": "static pyc_object *get_array_object_generic(RBuffer *buffer, ut32 size) {\n\tpyc_object *tmp = NULL;\n\tpyc_object *ret = NULL;\n\tut32 i = 0;\n\n\tret = R_NEW0 (pyc_object);\n\tif (!ret) {\n\t\treturn NULL;\n\t}\n\tret->data = r_list_newf ((RListFree)free_object);\n\tif (!ret->data) {\n\t\tfree (ret);\n\t\treturn NULL;\n\t}\n\tfor (i = 0; i < size; i++) {\n\t\ttmp = get_object (buffer);\n\t\tif (!tmp) {\n\t\t\tr_list_free (ret->data);\n\t\t\tR_FREE (ret);\n\t\t\treturn NULL;\n\t\t}\n\t\tif (!r_list_append (ret->data, tmp)) {\n\t\t\tfree_object (tmp);\n\t\t\tr_list_free (ret->data);\n\t\t\tfree (ret);\n\t\t\treturn NULL;\n\t\t}\n\t}\n\treturn ret;\n}",
  "abstract_func_before": "static pyc_object *get_array_object_generic(RBuffer *VAR_0, ut32 VAR_1) {\n\tpyc_object *VAR_2 = NULL;\n\tpyc_object *VAR_3 = NULL;\n\tut32 VAR_4 = 0;\n\n\tVAR_3 = R_NEW0 (pyc_object);\n\tif (!VAR_3) {\n\t\treturn NULL;\n\t}\n\tVAR_3->data = r_list_newf ((RListFree)VAR_5);\n\tif (!VAR_3->data) {\n\t\tfree (VAR_3);\n\t\treturn NULL;\n\t}\n\tfor (VAR_4 = 0; VAR_4 < VAR_1; VAR_4++) {\n\t\tVAR_2 = get_object (VAR_0);\n\t\tif (!VAR_2) {\n\t\t\tr_list_free (VAR_3->data);\n\t\t\tR_FREE (VAR_3);\n\t\t\treturn NULL;\n\t\t}\n\t\tif (!r_list_append (VAR_3->data, VAR_2)) {\n\t\t\tVAR_5 (VAR_2);\n\t\t\tr_list_free (VAR_3->data);\n\t\t\tfree (VAR_3);\n\t\t\treturn NULL;\n\t\t}\n\t}\n\treturn VAR_3;\n}",
  "func_graph_path_before": "radareorg/radare2/35482cb760db10f87a62569e2f8872dbd95e9269/marshal.c/vul/before/0.json",
  "func": "static pyc_object *get_array_object_generic(RBuffer *buffer, ut32 size) {\n\tpyc_object *tmp = NULL;\n\tpyc_object *ret = NULL;\n\tut32 i = 0;\n\n\tret = R_NEW0 (pyc_object);\n\tif (!ret) {\n\t\treturn NULL;\n\t}\n\tret->data = r_list_newf ((RListFree)free_object);\n\tif (!ret->data) {\n\t\tfree (ret);\n\t\treturn NULL;\n\t}\n\tfor (i = 0; i < size; i++) {\n\t\ttmp = get_object (buffer);\n\t\tif (!tmp || !r_list_append (ret->data, tmp)) {\n\t\t\tfree_object (tmp);\n\t\t\t((RList*)ret->data)->free = NULL;\n\t\t\tr_list_free (ret->data);\n\t\t\tfree (ret);\n\t\t\treturn NULL;\n\t\t}\n\t}\n\treturn ret;\n}",
  "abstract_func": "static pyc_object *get_array_object_generic(RBuffer *VAR_0, ut32 VAR_1) {\n\tpyc_object *VAR_2 = NULL;\n\tpyc_object *VAR_3 = NULL;\n\tut32 VAR_4 = 0;\n\n\tVAR_3 = R_NEW0 (pyc_object);\n\tif (!VAR_3) {\n\t\treturn NULL;\n\t}\n\tVAR_3->data = r_list_newf ((RListFree)VAR_5);\n\tif (!VAR_3->data) {\n\t\tfree (VAR_3);\n\t\treturn NULL;\n\t}\n\tfor (VAR_4 = 0; VAR_4 < VAR_1; VAR_4++) {\n\t\tVAR_2 = get_object (VAR_0);\n\t\tif (!VAR_2 || !r_list_append (VAR_3->data, VAR_2)) {\n\t\t\tVAR_5 (VAR_2);\n\t\t\t((RList*)VAR_3->data)->free = NULL;\n\t\t\tr_list_free (VAR_3->data);\n\t\t\tfree (VAR_3);\n\t\t\treturn NULL;\n\t\t}\n\t}\n\treturn VAR_3;\n}",
  "func_graph_path": "radareorg/radare2/35482cb760db10f87a62569e2f8872dbd95e9269/marshal.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -14,13 +14,9 @@\n \t}\n \tfor (i = 0; i < size; i++) {\n \t\ttmp = get_object (buffer);\n-\t\tif (!tmp) {\n-\t\t\tr_list_free (ret->data);\n-\t\t\tR_FREE (ret);\n-\t\t\treturn NULL;\n-\t\t}\n-\t\tif (!r_list_append (ret->data, tmp)) {\n+\t\tif (!tmp || !r_list_append (ret->data, tmp)) {\n \t\t\tfree_object (tmp);\n+\t\t\t((RList*)ret->data)->free = NULL;\n \t\t\tr_list_free (ret->data);\n \t\t\tfree (ret);\n \t\t\treturn NULL;",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tif (!tmp) {",
      "\t\t\tr_list_free (ret->data);",
      "\t\t\tR_FREE (ret);",
      "\t\t\treturn NULL;",
      "\t\t}",
      "\t\tif (!r_list_append (ret->data, tmp)) {"
    ],
    "added_lines": [
      "\t\tif (!tmp || !r_list_append (ret->data, tmp)) {",
      "\t\t\t((RList*)ret->data)->free = NULL;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/19670",
  "description": {
    "pr_info": {
      "title": "Fix UAF in pyc parser ##crash",
      "number": 19670
    },
    "comment": [
      "* Reported by Cen Zhang via huntr.dev\r\n* Reproducer: bins/fuzzed/harep2.pyc\r\n\r\n<!-- Please read the contributing guidelines:\r\n* https://github.com/radareorg/radare2/blob/master/DEVELOPERS.md\r\nIn short:\r\n* PR title must be capitalized, concise and use ##tags\r\n* Follow the coding style, add tests and documentation if necessary\r\n-->\r\n\r\n**Checklist**\r\n\r\n- [ ] Closing issues: #issue\r\n- [ ] Mark this if you consider it ready to merge\r\n- [ ] I've added tests (optional)\r\n- [ ] I wrote some lines in the [radare2book](https://github.com/radareorg/radare2book)\r\n\r\n**Description**\r\n\r\n<!-- Explain the **details** to understand the purpose of this contribution, with enough information to help us understand better the changes. -->\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95\n\n**Step-by-Step Explanation:**\n\n1. **Input Analysis**: The commit message mentions fixing a UAF (Use After Free) issue in the pyc parser, a type of security vulnerability. The code diff shows modifications to handle resource management, which is crucial for preventing UAF.\n\n2. **Consistency Check**: The code changes in get_array_object_generic address potential memory misuse, aligning with the commit description of fixing a UAF.\n\n3. **Purpose Evaluation**: The fix ensures memory safety, preventing potential crashes or security exploits, indicating a security focus.\n\n4. **Security Assessment**: UAF is a known security issue, and the patch targets its resolution.\n\n5. **Confidence**: The information clearly points to a security fix.\n\n**Result**: The patch addresses a security vulnerability, hence classified as \"Security Vulnerability Fix\" with high confidence."
}