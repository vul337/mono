{
  "cve_id": "CVE-2018-1000850",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "square/retrofit",
  "commit_msg": "Forbid path traversal ('.' and '..') as @Path parameters.\n\nThey're likely to have the unintended effect. For example, passing \"..\"\nto @DELETE /account/book/{isbn}/ yields @DELETE /account/.",
  "commit_hash": "b9a7f6ad72073ddd40254c0058710e87a073047d",
  "git_url": "https://github.com/square/retrofit/commit/b9a7f6ad72073ddd40254c0058710e87a073047d",
  "file_path": "retrofit/src/main/java/retrofit2/RequestBuilder.java",
  "func_name": "addPathParam",
  "func_before": "void addPathParam(String name, String value, boolean encoded) {\n    if (relativeUrl == null) {\n      // The relative URL is cleared when the first query parameter is set.\n      throw new AssertionError();\n    }\n    relativeUrl = relativeUrl.replace(\"{\" + name + \"}\", canonicalizeForPath(value, encoded));\n  }",
  "abstract_func_before": "void addPathParam(String VAR_0, String VAR_1, boolean VAR_2) {\n    if (VAR_3 == null) {\n      /* COMMENT_0 */\n      throw new AssertionError();\n    }\n    VAR_3 = VAR_3.replace(\"{\" + VAR_0 + \"}\", canonicalizeForPath(VAR_1, VAR_2));\n  }",
  "func_graph_path_before": "square/retrofit/b9a7f6ad72073ddd40254c0058710e87a073047d/RequestBuilder.java/vul/before/0.json",
  "func": "void addPathParam(String name, String value, boolean encoded) {\n    if (relativeUrl == null) {\n      // The relative URL is cleared when the first query parameter is set.\n      throw new AssertionError();\n    }\n    String replacement = canonicalizeForPath(value, encoded);\n    String newRelativeUrl = relativeUrl.replace(\"{\" + name + \"}\", replacement);\n    if (PATH_TRAVERSAL.matcher(newRelativeUrl).matches()) {\n      throw new IllegalArgumentException(\n          \"@Path parameters shouldn't perform path traversal ('.' or '..'): \" + value);\n    }\n    relativeUrl = newRelativeUrl;\n  }",
  "abstract_func": "void addPathParam(String VAR_0, String VAR_1, boolean VAR_2) {\n    if (VAR_3 == null) {\n      /* COMMENT_0 */\n      throw new AssertionError();\n    }\n    String VAR_4 = canonicalizeForPath(VAR_1, VAR_2);\n    String VAR_5 = VAR_3.replace(\"{\" + VAR_0 + \"}\", VAR_4);\n    if (VAR_6.matcher(VAR_5).matches()) {\n      throw new IllegalArgumentException(\n          \"@Path parameters shouldn't perform path traversal ('.' or '..'): \" + VAR_1);\n    }\n    VAR_3 = VAR_5;\n  }",
  "func_graph_path": "square/retrofit/b9a7f6ad72073ddd40254c0058710e87a073047d/RequestBuilder.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,5 +3,11 @@\n       // The relative URL is cleared when the first query parameter is set.\n       throw new AssertionError();\n     }\n-    relativeUrl = relativeUrl.replace(\"{\" + name + \"}\", canonicalizeForPath(value, encoded));\n+    String replacement = canonicalizeForPath(value, encoded);\n+    String newRelativeUrl = relativeUrl.replace(\"{\" + name + \"}\", replacement);\n+    if (PATH_TRAVERSAL.matcher(newRelativeUrl).matches()) {\n+      throw new IllegalArgumentException(\n+          \"@Path parameters shouldn't perform path traversal ('.' or '..'): \" + value);\n+    }\n+    relativeUrl = newRelativeUrl;\n   }",
  "diff_line_info": {
    "deleted_lines": [
      "    relativeUrl = relativeUrl.replace(\"{\" + name + \"}\", canonicalizeForPath(value, encoded));"
    ],
    "added_lines": [
      "    String replacement = canonicalizeForPath(value, encoded);",
      "    String newRelativeUrl = relativeUrl.replace(\"{\" + name + \"}\", replacement);",
      "    if (PATH_TRAVERSAL.matcher(newRelativeUrl).matches()) {",
      "      throw new IllegalArgumentException(",
      "          \"@Path parameters shouldn't perform path traversal ('.' or '..'): \" + value);",
      "    }",
      "    relativeUrl = newRelativeUrl;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/square/retrofit/pull/2932",
  "description": {
    "pr_info": {
      "title": "Forbid path traversal ('.' and '..') as @Path parameters.",
      "number": 2932
    },
    "comment": [
      "They're likely to have the unintended effect. For example, passing \"..\"\r\nto @DELETE /account/book/{isbn}/ yields @DELETE /account/."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}