{
  "cve_id": "CVE-2022-45868",
  "cwe_ids": [
    "CWE-312"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "h2database",
  "commit_msg": "Disallow plain webAdminPassword values to force usage of hashes",
  "commit_hash": "23ee3d0b973923c135fa01356c8eaed40b895393",
  "git_url": "https://github.com/h2database/h2database/commit/23ee3d0b973923c135fa01356c8eaed40b895393",
  "file_path": "h2/src/main/org/h2/tools/Server.java",
  "func_name": "verifyArgs",
  "func_before": "private void verifyArgs(String... args) throws SQLException {\n        for (int i = 0; args != null && i < args.length; i++) {\n            String arg = args[i];\n            if (arg == null) {\n            } else if (\"-?\".equals(arg) || \"-help\".equals(arg)) {\n                // ok\n            } else if (arg.startsWith(\"-web\")) {\n                if (\"-web\".equals(arg)) {\n                    // ok\n                } else if (\"-webAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webExternalNames\".equals(arg)) {\n                    i++;\n                }  else if (\"-webDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webSSL\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webPort\".equals(arg)) {\n                    i++;\n                } else if (\"-webAdminPassword\".equals(arg)) {\n                    i++;\n                } else {\n                    throwUnsupportedOption(arg);\n                }\n            } else if (\"-browser\".equals(arg)) {\n                // ok\n            } else if (arg.startsWith(\"-tcp\")) {\n                if (\"-tcp\".equals(arg)) {\n                    // ok\n                } else if (\"-tcpAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpSSL\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpPort\".equals(arg)) {\n                    i++;\n                } else if (\"-tcpPassword\".equals(arg)) {\n                    i++;\n                } else if (\"-tcpShutdown\".equals(arg)) {\n                    i++;\n                } else if (\"-tcpShutdownForce\".equals(arg)) {\n                    // ok\n                } else {\n                    throwUnsupportedOption(arg);\n                }\n            } else if (arg.startsWith(\"-pg\")) {\n                if (\"-pg\".equals(arg)) {\n                    // ok\n                } else if (\"-pgAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-pgDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-pgPort\".equals(arg)) {\n                    i++;\n                } else {\n                    throwUnsupportedOption(arg);\n                }\n            } else if (arg.startsWith(\"-ftp\")) {\n                if (\"-ftpPort\".equals(arg)) {\n                    i++;\n                } else if (\"-ftpDir\".equals(arg)) {\n                    i++;\n                } else if (\"-ftpRead\".equals(arg)) {\n                    i++;\n                } else if (\"-ftpWrite\".equals(arg)) {\n                    i++;\n                } else if (\"-ftpWritePassword\".equals(arg)) {\n                    i++;\n                } else if (\"-ftpTask\".equals(arg)) {\n                    // no parameters\n                } else {\n                    throwUnsupportedOption(arg);\n                }\n            } else if (\"-properties\".equals(arg)) {\n                i++;\n            } else if (\"-trace\".equals(arg)) {\n                // no parameters\n            } else if (\"-ifExists\".equals(arg)) {\n                // no parameters\n            } else if (\"-ifNotExists\".equals(arg)) {\n                // no parameters\n            } else if (\"-baseDir\".equals(arg)) {\n                i++;\n            } else if (\"-key\".equals(arg)) {\n                i += 2;\n            } else if (\"-tool\".equals(arg)) {\n                // no parameters\n            } else {\n                throwUnsupportedOption(arg);\n            }\n        }\n    }",
  "abstract_func_before": "private void verifyArgs(String... VAR_0) throws SQLException {\n        for (int VAR_1 = 0; VAR_0 != null && VAR_1 < VAR_0.length; VAR_1++) {\n            String VAR_2 = VAR_0[VAR_1];\n            if (VAR_2 == null) {\n            } else if (\"-?\".equals(VAR_2) || \"-help\".equals(VAR_2)) {\n                /* COMMENT_0 */\n            } else if (VAR_2.startsWith(\"-web\")) {\n                if (\"-web\".equals(VAR_2)) {\n                    /* COMMENT_0 */\n                } else if (\"-webAllowOthers\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-webExternalNames\".equals(VAR_2)) {\n                    VAR_1++;\n                }  else if (\"-webDaemon\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-webSSL\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-webPort\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-webAdminPassword\".equals(VAR_2)) {\n                    VAR_1++;\n                } else {\n                    throwUnsupportedOption(VAR_2);\n                }\n            } else if (\"-browser\".equals(VAR_2)) {\n                /* COMMENT_0 */\n            } else if (VAR_2.startsWith(\"-tcp\")) {\n                if (\"-tcp\".equals(VAR_2)) {\n                    /* COMMENT_0 */\n                } else if (\"-tcpAllowOthers\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-tcpDaemon\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-tcpSSL\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-tcpPort\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-tcpPassword\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-tcpShutdown\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-tcpShutdownForce\".equals(VAR_2)) {\n                    /* COMMENT_0 */\n                } else {\n                    throwUnsupportedOption(VAR_2);\n                }\n            } else if (VAR_2.startsWith(\"-pg\")) {\n                if (\"-pg\".equals(VAR_2)) {\n                    /* COMMENT_0 */\n                } else if (\"-pgAllowOthers\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-pgDaemon\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-pgPort\".equals(VAR_2)) {\n                    VAR_1++;\n                } else {\n                    throwUnsupportedOption(VAR_2);\n                }\n            } else if (VAR_2.startsWith(\"-ftp\")) {\n                if (\"-ftpPort\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-ftpDir\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-ftpRead\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-ftpWrite\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-ftpWritePassword\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-ftpTask\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else {\n                    throwUnsupportedOption(VAR_2);\n                }\n            } else if (\"-properties\".equals(VAR_2)) {\n                VAR_1++;\n            } else if (\"-trace\".equals(VAR_2)) {\n                /* COMMENT_1 */\n            } else if (\"-ifExists\".equals(VAR_2)) {\n                /* COMMENT_1 */\n            } else if (\"-ifNotExists\".equals(VAR_2)) {\n                /* COMMENT_1 */\n            } else if (\"-baseDir\".equals(VAR_2)) {\n                VAR_1++;\n            } else if (\"-key\".equals(VAR_2)) {\n                VAR_1 += 2;\n            } else if (\"-tool\".equals(VAR_2)) {\n                /* COMMENT_1 */\n            } else {\n                throwUnsupportedOption(VAR_2);\n            }\n        }\n    }",
  "func_graph_path_before": "h2database/23ee3d0b973923c135fa01356c8eaed40b895393/Server.java/vul/before/2.json",
  "func": "private void verifyArgs(String... args) throws SQLException {\n        for (int i = 0; args != null && i < args.length; i++) {\n            String arg = args[i];\n            if (arg == null) {\n            } else if (\"-?\".equals(arg) || \"-help\".equals(arg)) {\n                // ok\n            } else if (arg.startsWith(\"-web\")) {\n                if (\"-web\".equals(arg)) {\n                    // ok\n                } else if (\"-webAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webExternalNames\".equals(arg)) {\n                    i++;\n                }  else if (\"-webDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webSSL\".equals(arg)) {\n                    // no parameters\n                } else if (\"-webPort\".equals(arg)) {\n                    i++;\n                } else if (\"-webAdminPassword\".equals(arg)) {\n                    if (fromCommandLine) {\n                        throwUnsupportedOption(arg);\n                    }\n                    i++;\n                } else {\n                    throwUnsupportedOption(arg);\n                }\n            } else if (\"-browser\".equals(arg)) {\n                // ok\n            } else if (arg.startsWith(\"-tcp\")) {\n                if (\"-tcp\".equals(arg)) {\n                    // ok\n                } else if (\"-tcpAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpSSL\".equals(arg)) {\n                    // no parameters\n                } else if (\"-tcpPort\".equals(arg)) {\n                    i++;\n                } else if (\"-tcpPassword\".equals(arg)) {\n                    i++;\n                } else if (\"-tcpShutdown\".equals(arg)) {\n                    i++;\n                } else if (\"-tcpShutdownForce\".equals(arg)) {\n                    // ok\n                } else {\n                    throwUnsupportedOption(arg);\n                }\n            } else if (arg.startsWith(\"-pg\")) {\n                if (\"-pg\".equals(arg)) {\n                    // ok\n                } else if (\"-pgAllowOthers\".equals(arg)) {\n                    // no parameters\n                } else if (\"-pgDaemon\".equals(arg)) {\n                    // no parameters\n                } else if (\"-pgPort\".equals(arg)) {\n                    i++;\n                } else {\n                    throwUnsupportedOption(arg);\n                }\n            } else if (arg.startsWith(\"-ftp\")) {\n                if (\"-ftpPort\".equals(arg)) {\n                    i++;\n                } else if (\"-ftpDir\".equals(arg)) {\n                    i++;\n                } else if (\"-ftpRead\".equals(arg)) {\n                    i++;\n                } else if (\"-ftpWrite\".equals(arg)) {\n                    i++;\n                } else if (\"-ftpWritePassword\".equals(arg)) {\n                    i++;\n                } else if (\"-ftpTask\".equals(arg)) {\n                    // no parameters\n                } else {\n                    throwUnsupportedOption(arg);\n                }\n            } else if (\"-properties\".equals(arg)) {\n                i++;\n            } else if (\"-trace\".equals(arg)) {\n                // no parameters\n            } else if (\"-ifExists\".equals(arg)) {\n                // no parameters\n            } else if (\"-ifNotExists\".equals(arg)) {\n                // no parameters\n            } else if (\"-baseDir\".equals(arg)) {\n                i++;\n            } else if (\"-key\".equals(arg)) {\n                i += 2;\n            } else if (\"-tool\".equals(arg)) {\n                // no parameters\n            } else {\n                throwUnsupportedOption(arg);\n            }\n        }\n    }",
  "abstract_func": "private void verifyArgs(String... VAR_0) throws SQLException {\n        for (int VAR_1 = 0; VAR_0 != null && VAR_1 < VAR_0.length; VAR_1++) {\n            String VAR_2 = VAR_0[VAR_1];\n            if (VAR_2 == null) {\n            } else if (\"-?\".equals(VAR_2) || \"-help\".equals(VAR_2)) {\n                /* COMMENT_0 */\n            } else if (VAR_2.startsWith(\"-web\")) {\n                if (\"-web\".equals(VAR_2)) {\n                    /* COMMENT_0 */\n                } else if (\"-webAllowOthers\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-webExternalNames\".equals(VAR_2)) {\n                    VAR_1++;\n                }  else if (\"-webDaemon\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-webSSL\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-webPort\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-webAdminPassword\".equals(VAR_2)) {\n                    if (VAR_3) {\n                        throwUnsupportedOption(VAR_2);\n                    }\n                    VAR_1++;\n                } else {\n                    throwUnsupportedOption(VAR_2);\n                }\n            } else if (\"-browser\".equals(VAR_2)) {\n                /* COMMENT_0 */\n            } else if (VAR_2.startsWith(\"-tcp\")) {\n                if (\"-tcp\".equals(VAR_2)) {\n                    /* COMMENT_0 */\n                } else if (\"-tcpAllowOthers\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-tcpDaemon\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-tcpSSL\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-tcpPort\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-tcpPassword\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-tcpShutdown\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-tcpShutdownForce\".equals(VAR_2)) {\n                    /* COMMENT_0 */\n                } else {\n                    throwUnsupportedOption(VAR_2);\n                }\n            } else if (VAR_2.startsWith(\"-pg\")) {\n                if (\"-pg\".equals(VAR_2)) {\n                    /* COMMENT_0 */\n                } else if (\"-pgAllowOthers\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-pgDaemon\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else if (\"-pgPort\".equals(VAR_2)) {\n                    VAR_1++;\n                } else {\n                    throwUnsupportedOption(VAR_2);\n                }\n            } else if (VAR_2.startsWith(\"-ftp\")) {\n                if (\"-ftpPort\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-ftpDir\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-ftpRead\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-ftpWrite\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-ftpWritePassword\".equals(VAR_2)) {\n                    VAR_1++;\n                } else if (\"-ftpTask\".equals(VAR_2)) {\n                    /* COMMENT_1 */\n                } else {\n                    throwUnsupportedOption(VAR_2);\n                }\n            } else if (\"-properties\".equals(VAR_2)) {\n                VAR_1++;\n            } else if (\"-trace\".equals(VAR_2)) {\n                /* COMMENT_1 */\n            } else if (\"-ifExists\".equals(VAR_2)) {\n                /* COMMENT_1 */\n            } else if (\"-ifNotExists\".equals(VAR_2)) {\n                /* COMMENT_1 */\n            } else if (\"-baseDir\".equals(VAR_2)) {\n                VAR_1++;\n            } else if (\"-key\".equals(VAR_2)) {\n                VAR_1 += 2;\n            } else if (\"-tool\".equals(VAR_2)) {\n                /* COMMENT_1 */\n            } else {\n                throwUnsupportedOption(VAR_2);\n            }\n        }\n    }",
  "func_graph_path": "h2database/23ee3d0b973923c135fa01356c8eaed40b895393/Server.java/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -18,6 +18,9 @@\n                 } else if (\"-webPort\".equals(arg)) {\n                     i++;\n                 } else if (\"-webAdminPassword\".equals(arg)) {\n+                    if (fromCommandLine) {\n+                        throwUnsupportedOption(arg);\n+                    }\n                     i++;\n                 } else {\n                     throwUnsupportedOption(arg);",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "                    if (fromCommandLine) {",
      "                        throwUnsupportedOption(arg);",
      "                    }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/h2database/h2database/pull/3833",
  "description": {
    "pr_info": {
      "title": "Disallow plain webAdminPassword values to force usage of hashes",
      "number": 3833
    },
    "comment": [
      "`webAdminPassword` setting allowed both clear-text passwords and hashes of salted passwords from the beginning, but there were no documented methods for generation of such hashes. It was possible to write a clear-text password to configuration file and then save settings of H2 Console from H2 Console itself to get a configuration file with hashed password, but this way wasn't documented either.\r\n\r\n1. A new public method is added and documented for this purpose. This method requires at least 12 characters for more safety.\r\n2. Clear-text passwords from all sources are not accepted any more. Old installations with password hashes in configuration files will continue to work after this change.\r\n3. `runTool()` method still allows this parameter to be passed (now only with salted hash), but `main()` method rejects this parameter to make these strange people happy.\r\n\r\n(This setting is probably needed for less than 1% of users, why so many people think that it is something important?)\r\n\r\n@grandinj",
      "+1"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}