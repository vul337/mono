{
  "cve_id": "CVE-2020-7226",
  "cwe_ids": [
    "CWE-770"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "vt-middleware/cryptacular",
  "commit_msg": "Define new ciphertext header format.\n\nNew format does not allocate any memory until HMAC check passes, which\nguards against untrusted input. All encryption components have been\nupdated to use the new header, while preserving backward compatibility\nto decrypt messages encrypted with the old format. The decoding process\nfor the old header has been hardened to impose reasonable limits on header\nfields: nonce sizes up to 255 bytes, key names up to 500 bytes.\n\nFixes #52.",
  "commit_hash": "8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
  "git_url": "https://github.com/vt-middleware/cryptacular/commit/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
  "file_path": "src/main/java/org/cryptacular/util/CipherUtil.java",
  "func_name": "decrypt",
  "func_before": "public static byte[] decrypt(final BlockCipher cipher, final SecretKey key, final byte[] data)\n    throws CryptoException, EncodingException\n  {\n    final CiphertextHeader header = CiphertextHeader.decode(data);\n    final PaddedBufferedBlockCipher padded = new PaddedBufferedBlockCipher(cipher, new PKCS7Padding());\n    padded.init(false, new ParametersWithIV(new KeyParameter(key.getEncoded()), header.getNonce()));\n    return decrypt(new BufferedBlockCipherAdapter(padded), data, header.getLength());\n  }",
  "abstract_func_before": "public static byte[] decrypt(final BlockCipher VAR_0, final SecretKey VAR_1, final byte[] VAR_2)\n    throws CryptoException, EncodingException\n  {\n    final CiphertextHeader VAR_3 = VAR_4.decode(VAR_2);\n    final PaddedBufferedBlockCipher VAR_5 = new PaddedBufferedBlockCipher(VAR_0, new PKCS7Padding());\n    VAR_5.init(false, new ParametersWithIV(new KeyParameter(VAR_1.getEncoded()), VAR_3.getNonce()));\n    return decrypt(new BufferedBlockCipherAdapter(VAR_5), VAR_2, VAR_3.getLength());\n  }",
  "func_graph_path_before": "vt-middleware/cryptacular/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25/CipherUtil.java/vul/before/0.json",
  "func": "public static byte[] decrypt(final BlockCipher cipher, final SecretKey key, final byte[] data)\n    throws CryptoException, EncodingException\n  {\n    final CiphertextHeader header = decodeHeader(data, String -> key);\n    final PaddedBufferedBlockCipher padded = new PaddedBufferedBlockCipher(cipher, new PKCS7Padding());\n    padded.init(false, new ParametersWithIV(new KeyParameter(key.getEncoded()), header.getNonce()));\n    return decrypt(new BufferedBlockCipherAdapter(padded), data, header.getLength());\n  }",
  "abstract_func": "public static byte[] decrypt(final BlockCipher VAR_0, final SecretKey VAR_1, final byte[] VAR_2)\n    throws CryptoException, EncodingException\n  {\n    final CiphertextHeader VAR_3 = decodeHeader(VAR_2, VAR_4 -> VAR_1);\n    final PaddedBufferedBlockCipher VAR_5 = new PaddedBufferedBlockCipher(VAR_0, new PKCS7Padding());\n    VAR_5.init(false, new ParametersWithIV(new KeyParameter(VAR_1.getEncoded()), VAR_3.getNonce()));\n    return decrypt(new BufferedBlockCipherAdapter(VAR_5), VAR_2, VAR_3.getLength());\n  }",
  "func_graph_path": "vt-middleware/cryptacular/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25/CipherUtil.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,7 @@\n public static byte[] decrypt(final BlockCipher cipher, final SecretKey key, final byte[] data)\n     throws CryptoException, EncodingException\n   {\n-    final CiphertextHeader header = CiphertextHeader.decode(data);\n+    final CiphertextHeader header = decodeHeader(data, String -> key);\n     final PaddedBufferedBlockCipher padded = new PaddedBufferedBlockCipher(cipher, new PKCS7Padding());\n     padded.init(false, new ParametersWithIV(new KeyParameter(key.getEncoded()), header.getNonce()));\n     return decrypt(new BufferedBlockCipherAdapter(padded), data, header.getLength());",
  "diff_line_info": {
    "deleted_lines": [
      "    final CiphertextHeader header = CiphertextHeader.decode(data);"
    ],
    "added_lines": [
      "    final CiphertextHeader header = decodeHeader(data, String -> key);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/vt-middleware/cryptacular/pull/53",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/vt-middleware/cryptacular/pull/53: 403 Client Error: Forbidden for url: https://api.github.com/repos/vt-middleware/cryptacular/pulls/53",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "The patch addresses a security concern by modifying how headers are decoded to guard against untrusted input, preventing resource allocation before validation and adding header size limits.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}