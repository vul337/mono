{
  "cve_id": "CVE-2023-23108",
  "cwe_ids": [
    "CWE-369",
    "CWE-476"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "colinbourassa/crasm",
  "commit_msg": "Prevent division by zero.\n\nUnder specific test cases, the application could crash with a\nfloating point exception.",
  "commit_hash": "c7a4d332b426a25478afd3118f3be5af37972edd",
  "git_url": "https://github.com/colinbourassa/crasm/commit/c7a4d332b426a25478afd3118f3be5af37972edd",
  "file_path": "src/operator.c",
  "func_name": "opdiv",
  "func_before": "void opdiv(struct result* presult, struct result* parg)\n{\n  presult->flags |= parg->flags;\n  checktype(presult, L_ABSOLUTE);\n  checktype(parg, L_ABSOLUTE);\n  presult->value /= parg->value;\n}",
  "abstract_func_before": "void opdiv(struct result* VAR_0, struct result* VAR_1)\n{\n  VAR_0->flags |= VAR_1->flags;\n  checktype(VAR_0, VAR_2);\n  checktype(VAR_1, VAR_2);\n  VAR_0->value /= VAR_1->value;\n}",
  "func_graph_path_before": "colinbourassa/crasm/c7a4d332b426a25478afd3118f3be5af37972edd/operator.c/vul/before/0.json",
  "func": "void opdiv(struct result* presult, struct result* parg)\n{\n  presult->flags |= parg->flags;\n  checktype(presult, L_ABSOLUTE);\n  checktype(parg, L_ABSOLUTE);\n  if (parg->value != 0)\n  {\n    presult->value /= parg->value;\n  }\n}",
  "abstract_func": "void opdiv(struct result* VAR_0, struct result* VAR_1)\n{\n  VAR_0->flags |= VAR_1->flags;\n  checktype(VAR_0, VAR_2);\n  checktype(VAR_1, VAR_2);\n  if (VAR_1->value != 0)\n  {\n    VAR_0->value /= VAR_1->value;\n  }\n}",
  "func_graph_path": "colinbourassa/crasm/c7a4d332b426a25478afd3118f3be5af37972edd/operator.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,5 +3,8 @@\n   presult->flags |= parg->flags;\n   checktype(presult, L_ABSOLUTE);\n   checktype(parg, L_ABSOLUTE);\n-  presult->value /= parg->value;\n+  if (parg->value != 0)\n+  {\n+    presult->value /= parg->value;\n+  }\n }",
  "diff_line_info": {
    "deleted_lines": [
      "  presult->value /= parg->value;"
    ],
    "added_lines": [
      "  if (parg->value != 0)",
      "  {",
      "    presult->value /= parg->value;",
      "  }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/colinbourassa/crasm/pull/7",
  "description": {
    "pr_info": {
      "title": "Fix two faulting cases",
      "number": 7
    },
    "comment": [
      "Specific test cases can cause the program to both divide by zero and dereference a null pointer. The proposed PR is a minimal viable patch."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}