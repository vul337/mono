{
  "cve_id": "CVE-2022-36044",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "rizinorg/rizin",
  "commit_msg": "Fix oob read on _luac_build_info and luac memleaks",
  "commit_hash": "05bbd147caccc60162d6fba9baaaf24befa281cd",
  "git_url": "https://github.com/rizinorg/rizin/commit/05bbd147caccc60162d6fba9baaaf24befa281cd",
  "file_path": "librz/bin/format/luac/luac_bin.c",
  "func_name": "luac_build_info",
  "func_before": "LuacBinInfo *luac_build_info(LuaProto *proto) {\n\tif (!proto) {\n\t\tRZ_LOG_ERROR(\"Invalid luac file\\n\");\n\t\treturn NULL;\n\t}\n\n\tLuacBinInfo *ret = RZ_NEW0(LuacBinInfo);\n\tif (!ret) {\n\t\treturn NULL;\n\t}\n\n\tret->entry_list = rz_list_newf((RzListFree)free_rz_addr);\n\tret->symbol_list = rz_list_newf((RzListFree)rz_bin_symbol_free);\n\tret->section_list = rz_list_newf((RzListFree)free_rz_section);\n\tret->string_list = rz_list_newf((RzListFree)free_rz_string);\n\n\tif (!(ret->entry_list && ret->symbol_list && ret->section_list && ret->string_list)) {\n\t\ttry_free_empty_list(ret->entry_list);\n\t\ttry_free_empty_list(ret->symbol_list);\n\t\ttry_free_empty_list(ret->section_list);\n\t\ttry_free_empty_list(ret->string_list);\n\t}\n\n\t_luac_build_info(proto, ret);\n\n\t// add entry of main\n\tut64 main_entry_offset;\n\tmain_entry_offset = proto->code_offset + proto->code_skipped;\n\tluac_add_entry(ret->entry_list, main_entry_offset, RZ_BIN_ENTRY_TYPE_PROGRAM);\n\n\treturn ret;\n}",
  "abstract_func_before": "LuacBinInfo *luac_build_info(LuaProto *VAR_0) {\n\tif (!VAR_0) {\n\t\tRZ_LOG_ERROR(\"Invalid luac file\\n\");\n\t\treturn NULL;\n\t}\n\n\tLuacBinInfo *VAR_1 = RZ_NEW0(LuacBinInfo);\n\tif (!VAR_1) {\n\t\treturn NULL;\n\t}\n\n\tVAR_1->entry_list = rz_list_newf((RzListFree)VAR_2);\n\tVAR_1->symbol_list = rz_list_newf((RzListFree)VAR_3);\n\tVAR_1->section_list = rz_list_newf((RzListFree)VAR_4);\n\tVAR_1->string_list = rz_list_newf((RzListFree)VAR_5);\n\n\tif (!(VAR_1->entry_list && VAR_1->symbol_list && VAR_1->section_list && VAR_1->string_list)) {\n\t\ttry_free_empty_list(VAR_1->entry_list);\n\t\ttry_free_empty_list(VAR_1->symbol_list);\n\t\ttry_free_empty_list(VAR_1->section_list);\n\t\ttry_free_empty_list(VAR_1->string_list);\n\t}\n\n\t_luac_build_info(VAR_0, VAR_1);\n\n\t/* COMMENT_0 */\n\tut64 VAR_6;\n\tVAR_6 = VAR_0->code_offset + VAR_0->code_skipped;\n\tluac_add_entry(VAR_1->entry_list, VAR_6, VAR_7);\n\n\treturn VAR_1;\n}",
  "func_graph_path_before": "rizinorg/rizin/05bbd147caccc60162d6fba9baaaf24befa281cd/luac_bin.c/vul/before/0.json",
  "func": "LuacBinInfo *luac_build_info(LuaProto *proto) {\n\tif (!proto) {\n\t\tRZ_LOG_ERROR(\"Invalid luac file\\n\");\n\t\treturn NULL;\n\t}\n\n\tLuacBinInfo *ret = RZ_NEW0(LuacBinInfo);\n\tif (!ret) {\n\t\treturn NULL;\n\t}\n\n\tret->entry_list = rz_list_newf((RzListFree)free_rz_addr);\n\tret->symbol_list = rz_list_newf((RzListFree)rz_bin_symbol_free);\n\tret->section_list = rz_list_newf((RzListFree)free_rz_section);\n\tret->string_list = rz_list_newf((RzListFree)free_rz_string);\n\n\tif (!(ret->entry_list && ret->symbol_list && ret->section_list && ret->string_list)) {\n\t\trz_list_free(ret->entry_list);\n\t\trz_list_free(ret->symbol_list);\n\t\trz_list_free(ret->section_list);\n\t\trz_list_free(ret->string_list);\n\t}\n\n\t_luac_build_info(proto, ret);\n\n\t// add entry of main\n\tut64 main_entry_offset;\n\tmain_entry_offset = proto->code_offset + proto->code_skipped;\n\tluac_add_entry(ret->entry_list, main_entry_offset, RZ_BIN_ENTRY_TYPE_PROGRAM);\n\n\treturn ret;\n}",
  "abstract_func": "LuacBinInfo *luac_build_info(LuaProto *VAR_0) {\n\tif (!VAR_0) {\n\t\tRZ_LOG_ERROR(\"Invalid luac file\\n\");\n\t\treturn NULL;\n\t}\n\n\tLuacBinInfo *VAR_1 = RZ_NEW0(LuacBinInfo);\n\tif (!VAR_1) {\n\t\treturn NULL;\n\t}\n\n\tVAR_1->entry_list = rz_list_newf((RzListFree)VAR_2);\n\tVAR_1->symbol_list = rz_list_newf((RzListFree)VAR_3);\n\tVAR_1->section_list = rz_list_newf((RzListFree)VAR_4);\n\tVAR_1->string_list = rz_list_newf((RzListFree)VAR_5);\n\n\tif (!(VAR_1->entry_list && VAR_1->symbol_list && VAR_1->section_list && VAR_1->string_list)) {\n\t\trz_list_free(VAR_1->entry_list);\n\t\trz_list_free(VAR_1->symbol_list);\n\t\trz_list_free(VAR_1->section_list);\n\t\trz_list_free(VAR_1->string_list);\n\t}\n\n\t_luac_build_info(VAR_0, VAR_1);\n\n\t/* COMMENT_0 */\n\tut64 VAR_6;\n\tVAR_6 = VAR_0->code_offset + VAR_0->code_skipped;\n\tluac_add_entry(VAR_1->entry_list, VAR_6, VAR_7);\n\n\treturn VAR_1;\n}",
  "func_graph_path": "rizinorg/rizin/05bbd147caccc60162d6fba9baaaf24befa281cd/luac_bin.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -15,10 +15,10 @@\n \tret->string_list = rz_list_newf((RzListFree)free_rz_string);\n \n \tif (!(ret->entry_list && ret->symbol_list && ret->section_list && ret->string_list)) {\n-\t\ttry_free_empty_list(ret->entry_list);\n-\t\ttry_free_empty_list(ret->symbol_list);\n-\t\ttry_free_empty_list(ret->section_list);\n-\t\ttry_free_empty_list(ret->string_list);\n+\t\trz_list_free(ret->entry_list);\n+\t\trz_list_free(ret->symbol_list);\n+\t\trz_list_free(ret->section_list);\n+\t\trz_list_free(ret->string_list);\n \t}\n \n \t_luac_build_info(proto, ret);",
  "diff_line_info": {
    "deleted_lines": [
      "\t\ttry_free_empty_list(ret->entry_list);",
      "\t\ttry_free_empty_list(ret->symbol_list);",
      "\t\ttry_free_empty_list(ret->section_list);",
      "\t\ttry_free_empty_list(ret->string_list);"
    ],
    "added_lines": [
      "\t\trz_list_free(ret->entry_list);",
      "\t\trz_list_free(ret->symbol_list);",
      "\t\trz_list_free(ret->section_list);",
      "\t\trz_list_free(ret->string_list);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/rizinorg/rizin/pull/2930",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/rizinorg/rizin/pull/2930: 403 Client Error: Forbidden for url: https://api.github.com/repos/rizinorg/rizin/pulls/2930",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.85,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.85\n\nThe patch addresses memory leaks and out-of-bounds reads, which are security issues, with code changes supporting the commit message's claims. While no CVE is explicitly cited, the context strongly indicates a security fix."
}