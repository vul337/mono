{
  "cve_id": "CVE-2014-9906",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "perl5-dbi/DBD-mysql",
  "commit_msg": "fix use-after-free crash in RT #97625",
  "commit_hash": "a56ae87a4c1c1fead7d09c3653905841ccccf1cc",
  "git_url": "https://github.com/perl5-dbi/DBD-mysql/commit/a56ae87a4c1c1fead7d09c3653905841ccccf1cc",
  "file_path": "dbdimp.c",
  "func_name": "my_login",
  "func_before": "static int my_login(pTHX_ SV* dbh, imp_dbh_t *imp_dbh)\n{\n  SV* sv;\n  HV* hv;\n  char* dbname;\n  char* host;\n  char* port;\n  char* user;\n  char* password;\n  char* mysql_socket;\n  int   result;\n  D_imp_xxh(dbh);\n\n  /* TODO- resolve this so that it is set only if DBI is 1.607 */\n#define TAKE_IMP_DATA_VERSION 1\n#if TAKE_IMP_DATA_VERSION\n  if (DBIc_has(imp_dbh, DBIcf_IMPSET))\n  { /* eg from take_imp_data() */\n    if (DBIc_has(imp_dbh, DBIcf_ACTIVE))\n    {\n      if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)\n        PerlIO_printf(DBIc_LOGPIO(imp_xxh), \"my_login skip connect\\n\");\n      /* tell our parent we've adopted an active child */\n      ++DBIc_ACTIVE_KIDS(DBIc_PARENT_COM(imp_dbh));\n      return TRUE;\n    }\n    if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)\n      PerlIO_printf(DBIc_LOGPIO(imp_xxh),\n                    \"my_login IMPSET but not ACTIVE so connect not skipped\\n\");\n  }\n#endif\n\n  sv = DBIc_IMP_DATA(imp_dbh);\n\n  if (!sv  ||  !SvROK(sv))\n    return FALSE;\n\n  hv = (HV*) SvRV(sv);\n  if (SvTYPE(hv) != SVt_PVHV)\n    return FALSE;\n\n  host=\t\tsafe_hv_fetch(aTHX_ hv, \"host\", 4);\n  port=\t\tsafe_hv_fetch(aTHX_ hv, \"port\", 4);\n  user=\t\tsafe_hv_fetch(aTHX_ hv, \"user\", 4);\n  password=\tsafe_hv_fetch(aTHX_ hv, \"password\", 8);\n  dbname=\tsafe_hv_fetch(aTHX_ hv, \"database\", 8);\n  mysql_socket=\tsafe_hv_fetch(aTHX_ hv, \"mysql_socket\", 12);\n\n  if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)\n    PerlIO_printf(DBIc_LOGPIO(imp_xxh),\n\t\t  \"imp_dbh->my_login : dbname = %s, uid = %s, pwd = %s,\" \\\n\t\t  \"host = %s, port = %s\\n\",\n\t\t  dbname ? dbname : \"NULL\",\n\t\t  user ? user : \"NULL\",\n\t\t  password ? password : \"NULL\",\n\t\t  host ? host : \"NULL\",\n\t\t  port ? port : \"NULL\");\n\n  if (!imp_dbh->pmysql) {\n     Newz(908, imp_dbh->pmysql, 1, MYSQL);\n  }\n  result = mysql_dr_connect(dbh, imp_dbh->pmysql, mysql_socket, host, port, user,\n\t\t\t  password, dbname, imp_dbh) ? TRUE : FALSE;\n  if (!result)\n      Safefree(imp_dbh->pmysql);\n  return result;\n}",
  "abstract_func_before": "static int my_login(pTHX_ SV* VAR_0, imp_dbh_t *VAR_1)\n{\n  SV* VAR_2;\n  HV* VAR_3;\n  char* VAR_4;\n  char* VAR_5;\n  char* VAR_6;\n  char* VAR_7;\n  char* VAR_8;\n  char* VAR_9;\n  int   VAR_10;\n  D_imp_xxh(VAR_0);\n\n  /* COMMENT_0 */\n#define VAR_11 1\n#if VAR_11\n  if (DBIc_has(VAR_1, VAR_12))\n  { /* COMMENT_1 */\n    if (DBIc_has(VAR_1, VAR_13))\n    {\n      if (DBIc_TRACE_LEVEL(VAR_14) >= 2)\n        PerlIO_printf(DBIc_LOGPIO(VAR_14), \"my_login skip connect\\n\");\n      /* COMMENT_2 */\n      ++DBIc_ACTIVE_KIDS(DBIc_PARENT_COM(VAR_1));\n      return TRUE;\n    }\n    if (DBIc_TRACE_LEVEL(VAR_14) >= 2)\n      PerlIO_printf(DBIc_LOGPIO(VAR_14),\n                    \"my_login IMPSET but not ACTIVE so connect not skipped\\n\");\n  }\n#endif\n\n  VAR_2 = DBIc_IMP_DATA(VAR_1);\n\n  if (!VAR_2  ||  !SvROK(VAR_2))\n    return FALSE;\n\n  VAR_3 = (HV*) SvRV(VAR_2);\n  if (SvTYPE(VAR_3) != VAR_15)\n    return FALSE;\n\n  VAR_5=\t\tsafe_hv_fetch(VAR_16 VAR_3, \"host\", 4);\n  VAR_6=\t\tsafe_hv_fetch(VAR_16 VAR_3, \"port\", 4);\n  VAR_7=\t\tsafe_hv_fetch(VAR_16 VAR_3, \"user\", 4);\n  VAR_8=\tsafe_hv_fetch(VAR_16 VAR_3, \"password\", 8);\n  VAR_4=\tsafe_hv_fetch(VAR_16 VAR_3, \"database\", 8);\n  VAR_9=\tsafe_hv_fetch(VAR_16 VAR_3, \"mysql_socket\", 12);\n\n  if (DBIc_TRACE_LEVEL(VAR_14) >= 2)\n    PerlIO_printf(DBIc_LOGPIO(VAR_14),\n\t\t  \"imp_dbh->my_login : dbname = %s, uid = %s, pwd = %s,\" \\\n\t\t  \"host = %s, port = %s\\n\",\n\t\t  VAR_4 ? VAR_4 : \"NULL\",\n\t\t  VAR_7 ? VAR_7 : \"NULL\",\n\t\t  VAR_8 ? VAR_8 : \"NULL\",\n\t\t  VAR_5 ? VAR_5 : \"NULL\",\n\t\t  VAR_6 ? VAR_6 : \"NULL\");\n\n  if (!VAR_1->pmysql) {\n     Newz(908, VAR_1->pmysql, 1, VAR_17);\n  }\n  VAR_10 = mysql_dr_connect(VAR_0, VAR_1->pmysql, VAR_9, VAR_5, VAR_6, VAR_7,\n\t\t\t  VAR_8, VAR_4, VAR_1) ? TRUE : FALSE;\n  if (!VAR_10)\n      Safefree(VAR_1->pmysql);\n  return VAR_10;\n}",
  "func_graph_path_before": null,
  "func": "static int my_login(pTHX_ SV* dbh, imp_dbh_t *imp_dbh)\n{\n  SV* sv;\n  HV* hv;\n  char* dbname;\n  char* host;\n  char* port;\n  char* user;\n  char* password;\n  char* mysql_socket;\n  int   result;\n  int\tfresh = 0;\n  D_imp_xxh(dbh);\n\n  /* TODO- resolve this so that it is set only if DBI is 1.607 */\n#define TAKE_IMP_DATA_VERSION 1\n#if TAKE_IMP_DATA_VERSION\n  if (DBIc_has(imp_dbh, DBIcf_IMPSET))\n  { /* eg from take_imp_data() */\n    if (DBIc_has(imp_dbh, DBIcf_ACTIVE))\n    {\n      if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)\n        PerlIO_printf(DBIc_LOGPIO(imp_xxh), \"my_login skip connect\\n\");\n      /* tell our parent we've adopted an active child */\n      ++DBIc_ACTIVE_KIDS(DBIc_PARENT_COM(imp_dbh));\n      return TRUE;\n    }\n    if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)\n      PerlIO_printf(DBIc_LOGPIO(imp_xxh),\n                    \"my_login IMPSET but not ACTIVE so connect not skipped\\n\");\n  }\n#endif\n\n  sv = DBIc_IMP_DATA(imp_dbh);\n\n  if (!sv  ||  !SvROK(sv))\n    return FALSE;\n\n  hv = (HV*) SvRV(sv);\n  if (SvTYPE(hv) != SVt_PVHV)\n    return FALSE;\n\n  host=\t\tsafe_hv_fetch(aTHX_ hv, \"host\", 4);\n  port=\t\tsafe_hv_fetch(aTHX_ hv, \"port\", 4);\n  user=\t\tsafe_hv_fetch(aTHX_ hv, \"user\", 4);\n  password=\tsafe_hv_fetch(aTHX_ hv, \"password\", 8);\n  dbname=\tsafe_hv_fetch(aTHX_ hv, \"database\", 8);\n  mysql_socket=\tsafe_hv_fetch(aTHX_ hv, \"mysql_socket\", 12);\n\n  if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)\n    PerlIO_printf(DBIc_LOGPIO(imp_xxh),\n\t\t  \"imp_dbh->my_login : dbname = %s, uid = %s, pwd = %s,\" \\\n\t\t  \"host = %s, port = %s\\n\",\n\t\t  dbname ? dbname : \"NULL\",\n\t\t  user ? user : \"NULL\",\n\t\t  password ? password : \"NULL\",\n\t\t  host ? host : \"NULL\",\n\t\t  port ? port : \"NULL\");\n\n  if (!imp_dbh->pmysql) {\n     fresh = 1;\n     Newz(908, imp_dbh->pmysql, 1, MYSQL);\n  }\n  result = mysql_dr_connect(dbh, imp_dbh->pmysql, mysql_socket, host, port, user,\n\t\t\t  password, dbname, imp_dbh) ? TRUE : FALSE;\n  if (fresh && !result) {\n      /* Prevent leaks, but do not free in case of a reconnect. See #97625 */\n      do_error(dbh, mysql_errno(imp_dbh->pmysql),\n              mysql_error(imp_dbh->pmysql) ,mysql_sqlstate(imp_dbh->pmysql));\n      Safefree(imp_dbh->pmysql);\n      imp_dbh->pmysql = NULL;\n  }\n  return result;\n}",
  "abstract_func": "static int my_login(pTHX_ SV* VAR_0, imp_dbh_t *VAR_1)\n{\n  SV* VAR_2;\n  HV* VAR_3;\n  char* VAR_4;\n  char* VAR_5;\n  char* VAR_6;\n  char* VAR_7;\n  char* VAR_8;\n  char* VAR_9;\n  int   VAR_10;\n  int\tVAR_11 = 0;\n  D_imp_xxh(VAR_0);\n\n  /* COMMENT_0 */\n#define VAR_12 1\n#if VAR_12\n  if (DBIc_has(VAR_1, VAR_13))\n  { /* COMMENT_1 */\n    if (DBIc_has(VAR_1, VAR_14))\n    {\n      if (DBIc_TRACE_LEVEL(VAR_15) >= 2)\n        PerlIO_printf(DBIc_LOGPIO(VAR_15), \"my_login skip connect\\n\");\n      /* COMMENT_2 */\n      ++DBIc_ACTIVE_KIDS(DBIc_PARENT_COM(VAR_1));\n      return TRUE;\n    }\n    if (DBIc_TRACE_LEVEL(VAR_15) >= 2)\n      PerlIO_printf(DBIc_LOGPIO(VAR_15),\n                    \"my_login IMPSET but not ACTIVE so connect not skipped\\n\");\n  }\n#endif\n\n  VAR_2 = DBIc_IMP_DATA(VAR_1);\n\n  if (!VAR_2  ||  !SvROK(VAR_2))\n    return FALSE;\n\n  VAR_3 = (HV*) SvRV(VAR_2);\n  if (SvTYPE(VAR_3) != VAR_16)\n    return FALSE;\n\n  VAR_5=\t\tsafe_hv_fetch(VAR_17 VAR_3, \"host\", 4);\n  VAR_6=\t\tsafe_hv_fetch(VAR_17 VAR_3, \"port\", 4);\n  VAR_7=\t\tsafe_hv_fetch(VAR_17 VAR_3, \"user\", 4);\n  VAR_8=\tsafe_hv_fetch(VAR_17 VAR_3, \"password\", 8);\n  VAR_4=\tsafe_hv_fetch(VAR_17 VAR_3, \"database\", 8);\n  VAR_9=\tsafe_hv_fetch(VAR_17 VAR_3, \"mysql_socket\", 12);\n\n  if (DBIc_TRACE_LEVEL(VAR_15) >= 2)\n    PerlIO_printf(DBIc_LOGPIO(VAR_15),\n\t\t  \"imp_dbh->my_login : dbname = %s, uid = %s, pwd = %s,\" \\\n\t\t  \"host = %s, port = %s\\n\",\n\t\t  VAR_4 ? VAR_4 : \"NULL\",\n\t\t  VAR_7 ? VAR_7 : \"NULL\",\n\t\t  VAR_8 ? VAR_8 : \"NULL\",\n\t\t  VAR_5 ? VAR_5 : \"NULL\",\n\t\t  VAR_6 ? VAR_6 : \"NULL\");\n\n  if (!VAR_1->pmysql) {\n     VAR_11 = 1;\n     Newz(908, VAR_1->pmysql, 1, VAR_18);\n  }\n  VAR_10 = mysql_dr_connect(VAR_0, VAR_1->pmysql, VAR_9, VAR_5, VAR_6, VAR_7,\n\t\t\t  VAR_8, VAR_4, VAR_1) ? TRUE : FALSE;\n  if (VAR_11 && !VAR_10) {\n      /* COMMENT_3 */\n      do_error(VAR_0, mysql_errno(VAR_1->pmysql),\n              mysql_error(VAR_1->pmysql) ,mysql_sqlstate(VAR_1->pmysql));\n      Safefree(VAR_1->pmysql);\n      VAR_1->pmysql = NULL;\n  }\n  return VAR_10;\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -9,6 +9,7 @@\n   char* password;\n   char* mysql_socket;\n   int   result;\n+  int\tfresh = 0;\n   D_imp_xxh(dbh);\n \n   /* TODO- resolve this so that it is set only if DBI is 1.607 */\n@@ -57,11 +58,17 @@\n \t\t  port ? port : \"NULL\");\n \n   if (!imp_dbh->pmysql) {\n+     fresh = 1;\n      Newz(908, imp_dbh->pmysql, 1, MYSQL);\n   }\n   result = mysql_dr_connect(dbh, imp_dbh->pmysql, mysql_socket, host, port, user,\n \t\t\t  password, dbname, imp_dbh) ? TRUE : FALSE;\n-  if (!result)\n+  if (fresh && !result) {\n+      /* Prevent leaks, but do not free in case of a reconnect. See #97625 */\n+      do_error(dbh, mysql_errno(imp_dbh->pmysql),\n+              mysql_error(imp_dbh->pmysql) ,mysql_sqlstate(imp_dbh->pmysql));\n       Safefree(imp_dbh->pmysql);\n+      imp_dbh->pmysql = NULL;\n+  }\n   return result;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "  if (!result)"
    ],
    "added_lines": [
      "  int\tfresh = 0;",
      "     fresh = 1;",
      "  if (fresh && !result) {",
      "      /* Prevent leaks, but do not free in case of a reconnect. See #97625 */",
      "      do_error(dbh, mysql_errno(imp_dbh->pmysql),",
      "              mysql_error(imp_dbh->pmysql) ,mysql_sqlstate(imp_dbh->pmysql));",
      "      imp_dbh->pmysql = NULL;",
      "  }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/perl5-dbi/DBD-mysql/pull/28",
  "description": {
    "pr_info": {
      "title": "fix use-after-free crash in RT #97625",
      "number": 28
    },
    "comment": [
      "fix use-after-free crash in RT #97625 and print errors before freeing resources.\n",
      "On 11/20/14 15:41, Patrick Galbraith wrote:\n\n> Merged #28 https://github.com/perl5-dbi/DBD-mysql/pull/28.\n> \n> —\n> Reply to this email directly or view it on GitHub https://github.com/perl5-dbi/DBD-mysql/pull/28#event-196176034.\n> \n> There is a conflict in the commit:\n> https://github.com/perl5-dbi/DBD-mysql/commit/283c5dfc42c530aab06ad032cf25b816c0e70780\n>  Cheers\n>   Giovanni\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}