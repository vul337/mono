{
  "cve_id": "CVE-2019-25028",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "vaadin/framework",
  "commit_msg": "Sanitize input used in Grid header",
  "commit_hash": "c7cf0a63ce9810a529f4af5b931e7a53809424b2",
  "git_url": "https://github.com/vaadin/framework/commit/c7cf0a63ce9810a529f4af5b931e7a53809424b2",
  "file_path": "server/src/main/java/com/vaadin/ui/Grid.java",
  "func_name": "setCaption",
  "func_before": "public Column<T, V> setCaption(String caption) {\n            Objects.requireNonNull(caption, \"Header caption can't be null\");\n            if (caption.equals(getState(false).caption)) {\n                return this;\n            }\n            getState().caption = caption;\n\n            HeaderRow row = getGrid().getDefaultHeaderRow();\n            if (row != null) {\n                row.getCell(this).setText(caption);\n            }\n\n            return this;\n        }",
  "abstract_func_before": "public Column<T, V> setCaption(String VAR_0) {\n            VAR_1.requireNonNull(VAR_0, \"Header caption can't be null\");\n            if (VAR_0.equals(getState(false).caption)) {\n                return this;\n            }\n            getState().caption = VAR_0;\n\n            HeaderRow VAR_2 = getGrid().getDefaultHeaderRow();\n            if (VAR_2 != null) {\n                VAR_2.getCell(this).setText(VAR_0);\n            }\n\n            return this;\n        }",
  "func_graph_path_before": "vaadin/framework/c7cf0a63ce9810a529f4af5b931e7a53809424b2/Grid.java/vul/before/0.json",
  "func": "public Column<T, V> setCaption(String caption) {\n            Objects.requireNonNull(caption, \"Header caption can't be null\");\n            caption = Jsoup.clean(caption, Whitelist.none());\n            if (caption.equals(getState(false).caption)) {\n                return this;\n            }\n            getState().caption = caption;\n\n            HeaderRow row = getGrid().getDefaultHeaderRow();\n            if (row != null) {\n                row.getCell(this).setText(caption);\n            }\n\n            return this;\n        }",
  "abstract_func": "public Column<T, V> setCaption(String VAR_0) {\n            VAR_1.requireNonNull(VAR_0, \"Header caption can't be null\");\n            VAR_0 = VAR_2.clean(VAR_0, VAR_3.none());\n            if (VAR_0.equals(getState(false).caption)) {\n                return this;\n            }\n            getState().caption = VAR_0;\n\n            HeaderRow VAR_4 = getGrid().getDefaultHeaderRow();\n            if (VAR_4 != null) {\n                VAR_4.getCell(this).setText(VAR_0);\n            }\n\n            return this;\n        }",
  "func_graph_path": "vaadin/framework/c7cf0a63ce9810a529f4af5b931e7a53809424b2/Grid.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,6 @@\n public Column<T, V> setCaption(String caption) {\n             Objects.requireNonNull(caption, \"Header caption can't be null\");\n+            caption = Jsoup.clean(caption, Whitelist.none());\n             if (caption.equals(getState(false).caption)) {\n                 return this;\n             }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "            caption = Jsoup.clean(caption, Whitelist.none());"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/vaadin/framework/pull/11644",
  "description": {
    "pr_info": {
      "title": "Sanitize caption used in Grid header",
      "number": 11644
    },
    "comment": [
      "Thanks for submitting a pull request!\r\nPlease confirm that your pull request follows our guidelines found in CONTRIBUTING and that you provide enough information so that we can review your pull request.\r\n\r\n<Description of pull request, e.g. \"Fix Grid Column not sortable with backend data and sort property\">\r\n\r\nFixes #<replace with an issue number>\r\n\r\n**Check when you have completed**\r\n[ ] Valid tests for the pull request\r\n[ ] Contributing guidelines implemented\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/vaadin/framework/11644)\n<!-- Reviewable:end -->\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 1.0  \nThe commit message explicitly mentions sanitizing input, a common security measure to prevent XSS attacks. The code uses Jsoup.clean with a restrictive whitelist, indicating a security fix. The confidence is high due to clear alignment between commit, code, and security intent."
}