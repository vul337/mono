{
  "cve_id": "CVE-2023-44487",
  "cwe_ids": [
    "CWE-400"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "facebook/proxygen",
  "commit_msg": "Re-sync with internal repository\n\nThe internal and external repositories are out of sync. This Pull Request attempts to brings them back in sync by patching the GitHub repository. Please carefully review this patch. You must disable ShipIt for your project in order to merge this pull request. DO NOT IMPORT this pull request. Instead, merge it directly on GitHub using the MERGE BUTTON. Re-enable ShipIt after merging.",
  "commit_hash": "0a00c43d64c58a85e6250120f2377302675b0fe3",
  "git_url": "https://github.com/facebook/proxygen/commit/0a00c43d64c58a85e6250120f2377302675b0fe3",
  "file_path": "proxygen/lib/http/session/HTTPSessionBase.cpp",
  "func_name": "HTTPSessionBase::setControlMessageRateLimitParams",
  "func_before": "void HTTPSessionBase::setControlMessageRateLimitParams(\n    uint32_t maxControlMsgsPerInterval,\n    uint32_t maxDirectErrorHandlingPerInterval,\n    std::chrono::milliseconds controlMsgIntervalDuration,\n    std::chrono::milliseconds directErrorHandlingIntervalDuration) {\n  if (maxControlMsgsPerInterval < kMaxControlMsgsPerIntervalLowerBound) {\n    XLOG_EVERY_MS(WARNING, 60000)\n        << \"Invalid maxControlMsgsPerInterval: \" << maxControlMsgsPerInterval;\n    maxControlMsgsPerInterval = kMaxControlMsgsPerIntervalLowerBound;\n  }\n\n  if (maxDirectErrorHandlingPerInterval <\n      kMaxDirectErrorHandlingPerIntervalLowerBound) {\n    XLOG_EVERY_MS(WARNING, 60000)\n        << \"Invalid maxDirectErrorHandlingPerInterval: \"\n        << maxDirectErrorHandlingPerInterval;\n    maxDirectErrorHandlingPerInterval =\n        kMaxDirectErrorHandlingPerIntervalLowerBound;\n  }\n\n  if (controlMessageRateLimitFilter_) {\n    controlMessageRateLimitFilter_->setParams(\n        maxControlMsgsPerInterval,\n        maxDirectErrorHandlingPerInterval,\n        controlMsgIntervalDuration,\n        directErrorHandlingIntervalDuration);\n  }\n}",
  "abstract_func_before": "void HTTPSessionBase::setControlMessageRateLimitParams(\n    uint32_t VAR_0,\n    uint32_t VAR_1,\n    std::chrono::milliseconds VAR_2,\n    std::chrono::milliseconds VAR_3) {\n  if (VAR_0 < VAR_4) {\n    XLOG_EVERY_MS(VAR_5, 60000)\n        << \"Invalid maxControlMsgsPerInterval: \" << VAR_0;\n    VAR_0 = VAR_4;\n  }\n\n  if (VAR_1 <\n      VAR_6) {\n    XLOG_EVERY_MS(VAR_5, 60000)\n        << \"Invalid maxDirectErrorHandlingPerInterval: \"\n        << VAR_1;\n    VAR_1 =\n        VAR_6;\n  }\n\n  if (VAR_7) {\n    VAR_7->setParams(\n        VAR_0,\n        VAR_1,\n        VAR_2,\n        VAR_3);\n  }\n}",
  "func_graph_path_before": "facebook/proxygen/0a00c43d64c58a85e6250120f2377302675b0fe3/HTTPSessionBase.cpp/vul/before/0.json",
  "func": "void HTTPSessionBase::setControlMessageRateLimitParams(\n    uint32_t maxControlMsgsPerInterval,\n    uint32_t maxDirectErrorHandlingPerInterval,\n    uint32_t maxHeadersPerInterval,\n    std::chrono::milliseconds controlMsgIntervalDuration,\n    std::chrono::milliseconds directErrorHandlingIntervalDuration,\n    std::chrono::milliseconds headersIntervalDuration) {\n\n  if (maxControlMsgsPerInterval < kMaxControlMsgsPerIntervalLowerBound) {\n    XLOG_EVERY_MS(WARNING, 60000)\n        << \"Invalid maxControlMsgsPerInterval: \" << maxControlMsgsPerInterval;\n    maxControlMsgsPerInterval = kMaxControlMsgsPerIntervalLowerBound;\n  }\n\n  if (maxDirectErrorHandlingPerInterval <\n      kMaxDirectErrorHandlingPerIntervalLowerBound) {\n    XLOG_EVERY_MS(WARNING, 60000)\n        << \"Invalid maxDirectErrorHandlingPerInterval: \"\n        << maxDirectErrorHandlingPerInterval;\n    maxDirectErrorHandlingPerInterval =\n        kMaxDirectErrorHandlingPerIntervalLowerBound;\n  }\n\n  if (maxHeadersPerInterval < kMaxHeadersPerIntervalLowerBound) {\n    XLOG_EVERY_MS(WARNING, 60000)\n        << \"Invalid maxHeadersPerInterval: \" << maxHeadersPerInterval;\n    maxHeadersPerInterval = kMaxHeadersPerIntervalLowerBound;\n  }\n\n  if (controlMessageRateLimitFilter_) {\n    controlMessageRateLimitFilter_->setParams(\n        maxControlMsgsPerInterval,\n        maxDirectErrorHandlingPerInterval,\n        maxHeadersPerInterval,\n        controlMsgIntervalDuration,\n        directErrorHandlingIntervalDuration,\n        headersIntervalDuration);\n  }\n}",
  "abstract_func": "void HTTPSessionBase::setControlMessageRateLimitParams(\n    uint32_t VAR_0,\n    uint32_t VAR_1,\n    uint32_t VAR_2,\n    std::chrono::milliseconds VAR_3,\n    std::chrono::milliseconds VAR_4,\n    std::chrono::milliseconds VAR_5) {\n\n  if (VAR_0 < VAR_6) {\n    XLOG_EVERY_MS(VAR_7, 60000)\n        << \"Invalid maxControlMsgsPerInterval: \" << VAR_0;\n    VAR_0 = VAR_6;\n  }\n\n  if (VAR_1 <\n      VAR_8) {\n    XLOG_EVERY_MS(VAR_7, 60000)\n        << \"Invalid maxDirectErrorHandlingPerInterval: \"\n        << VAR_1;\n    VAR_1 =\n        VAR_8;\n  }\n\n  if (VAR_2 < VAR_9) {\n    XLOG_EVERY_MS(VAR_7, 60000)\n        << \"Invalid maxHeadersPerInterval: \" << VAR_2;\n    VAR_2 = VAR_9;\n  }\n\n  if (VAR_10) {\n    VAR_10->setParams(\n        VAR_0,\n        VAR_1,\n        VAR_2,\n        VAR_3,\n        VAR_4,\n        VAR_5);\n  }\n}",
  "func_graph_path": "facebook/proxygen/0a00c43d64c58a85e6250120f2377302675b0fe3/HTTPSessionBase.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,8 +1,11 @@\n void HTTPSessionBase::setControlMessageRateLimitParams(\n     uint32_t maxControlMsgsPerInterval,\n     uint32_t maxDirectErrorHandlingPerInterval,\n+    uint32_t maxHeadersPerInterval,\n     std::chrono::milliseconds controlMsgIntervalDuration,\n-    std::chrono::milliseconds directErrorHandlingIntervalDuration) {\n+    std::chrono::milliseconds directErrorHandlingIntervalDuration,\n+    std::chrono::milliseconds headersIntervalDuration) {\n+\n   if (maxControlMsgsPerInterval < kMaxControlMsgsPerIntervalLowerBound) {\n     XLOG_EVERY_MS(WARNING, 60000)\n         << \"Invalid maxControlMsgsPerInterval: \" << maxControlMsgsPerInterval;\n@@ -18,11 +21,19 @@\n         kMaxDirectErrorHandlingPerIntervalLowerBound;\n   }\n \n+  if (maxHeadersPerInterval < kMaxHeadersPerIntervalLowerBound) {\n+    XLOG_EVERY_MS(WARNING, 60000)\n+        << \"Invalid maxHeadersPerInterval: \" << maxHeadersPerInterval;\n+    maxHeadersPerInterval = kMaxHeadersPerIntervalLowerBound;\n+  }\n+\n   if (controlMessageRateLimitFilter_) {\n     controlMessageRateLimitFilter_->setParams(\n         maxControlMsgsPerInterval,\n         maxDirectErrorHandlingPerInterval,\n+        maxHeadersPerInterval,\n         controlMsgIntervalDuration,\n-        directErrorHandlingIntervalDuration);\n+        directErrorHandlingIntervalDuration,\n+        headersIntervalDuration);\n   }\n }",
  "diff_line_info": {
    "deleted_lines": [
      "    std::chrono::milliseconds directErrorHandlingIntervalDuration) {",
      "        directErrorHandlingIntervalDuration);"
    ],
    "added_lines": [
      "    uint32_t maxHeadersPerInterval,",
      "    std::chrono::milliseconds directErrorHandlingIntervalDuration,",
      "    std::chrono::milliseconds headersIntervalDuration) {",
      "",
      "  if (maxHeadersPerInterval < kMaxHeadersPerIntervalLowerBound) {",
      "    XLOG_EVERY_MS(WARNING, 60000)",
      "        << \"Invalid maxHeadersPerInterval: \" << maxHeadersPerInterval;",
      "    maxHeadersPerInterval = kMaxHeadersPerIntervalLowerBound;",
      "  }",
      "",
      "        maxHeadersPerInterval,",
      "        directErrorHandlingIntervalDuration,",
      "        headersIntervalDuration);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/facebook/proxygen/pull/466",
  "description": {
    "pr_info": {
      "title": "Re-sync with internal repository following CVE-2023-44487",
      "number": 466
    },
    "comment": [
      "The internal and external repositories are out of sync. This Pull Request attempts to brings them back in sync by patching the GitHub repository. Please carefully review this patch. You must disable ShipIt for your project in order to merge this pull request. DO NOT IMPORT this pull request. Instead, merge it directly on GitHub using the MERGE BUTTON. Re-enable ShipIt after merging.",
      "This resolves CVE-2023-44487."
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.8"
}