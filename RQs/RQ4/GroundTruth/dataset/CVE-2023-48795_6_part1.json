{
  "cve_id": "CVE-2023-48795",
  "cwe_ids": [
    "CWE-354"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
  "cvss_is_v3": true,
  "repo_name": "janmojzis/tinyssh",
  "commit_msg": "implementation kex-strict-s-v00@openssh.com",
  "commit_hash": "12ec08d24e43e382cb6d9b61facd87685f99eae0",
  "git_url": "https://github.com/janmojzis/tinyssh/commit/12ec08d24e43e382cb6d9b61facd87685f99eae0",
  "file_path": "tinyssh/sshcrypto_kex.c",
  "func_name": "sshcrypto_kex_put",
  "func_before": "void sshcrypto_kex_put(struct buf *b) {\n\n    crypto_uint32 len = 0;\n    long long i, j, start;\n\n    j = 0;\n    for (i = 0; sshcrypto_kexs[i].name; ++i) {\n        if (!sshcrypto_kexs[i].flagenabled) continue;\n        if (j++) ++len;\n        len += str_len(sshcrypto_kexs[i].name);\n    }\n\n    buf_putnum32(b, len);\n    start = b->len;\n\n    j = 0;\n    for (i = 0; sshcrypto_kexs[i].name; ++i) {\n        if (!sshcrypto_kexs[i].flagenabled) continue;\n        if (j++) buf_puts(b, \",\");\n        buf_puts(b, sshcrypto_kexs[i].name);\n    }\n    b->buf[b->len] = 0;\n    log_d2(\"kex: server: kex algorithms: \", (char *)b->buf + start);\n}",
  "abstract_func_before": "void sshcrypto_kex_put(struct buf *VAR_0) {\n\n    crypto_uint32 VAR_1 = 0;\n    long long VAR_2, VAR_3, VAR_4;\n\n    VAR_3 = 0;\n    for (VAR_2 = 0; VAR_5[VAR_2].name; ++VAR_2) {\n        if (!VAR_5[VAR_2].flagenabled) continue;\n        if (VAR_3++) ++VAR_1;\n        VAR_1 += str_len(VAR_5[VAR_2].name);\n    }\n\n    buf_putnum32(VAR_0, VAR_1);\n    VAR_4 = VAR_0->len;\n\n    VAR_3 = 0;\n    for (VAR_2 = 0; VAR_5[VAR_2].name; ++VAR_2) {\n        if (!VAR_5[VAR_2].flagenabled) continue;\n        if (VAR_3++) buf_puts(VAR_0, \",\");\n        buf_puts(VAR_0, VAR_5[VAR_2].name);\n    }\n    VAR_0->buf[VAR_0->len] = 0;\n    log_d2(\"kex: server: kex algorithms: \", (char *)VAR_0->buf + VAR_4);\n}",
  "func_graph_path_before": "janmojzis/tinyssh/12ec08d24e43e382cb6d9b61facd87685f99eae0/sshcrypto_kex.c/vul/before/0.json",
  "func": "void sshcrypto_kex_put(struct buf *b) {\n\n    crypto_uint32 len = 0;\n    long long i, j, start;\n\n    j = 0;\n    for (i = 0; sshcrypto_kexs[i].name; ++i) {\n        if (!sshcrypto_kexs[i].flagenabled) continue;\n        if (j++) ++len;\n        len += str_len(sshcrypto_kexs[i].name);\n    }\n    for (i = 0; sshcrypto_pseudokexs[i].name; ++i) {\n        if (j++) ++len;\n        len += str_len(sshcrypto_pseudokexs[i].name);\n    }\n\n    buf_putnum32(b, len);\n    start = b->len;\n\n    j = 0;\n    for (i = 0; sshcrypto_kexs[i].name; ++i) {\n        if (!sshcrypto_kexs[i].flagenabled) continue;\n        if (j++) buf_puts(b, \",\");\n        buf_puts(b, sshcrypto_kexs[i].name);\n    }\n    for (i = 0; sshcrypto_pseudokexs[i].name; ++i) {\n        if (j++) buf_puts(b, \",\");\n        buf_puts(b, sshcrypto_pseudokexs[i].name);\n    }\n    b->buf[b->len] = 0;\n    log_d2(\"kex: server: kex algorithms: \", (char *)b->buf + start);\n}",
  "abstract_func": "void sshcrypto_kex_put(struct buf *VAR_0) {\n\n    crypto_uint32 VAR_1 = 0;\n    long long VAR_2, VAR_3, VAR_4;\n\n    VAR_3 = 0;\n    for (VAR_2 = 0; VAR_5[VAR_2].name; ++VAR_2) {\n        if (!VAR_5[VAR_2].flagenabled) continue;\n        if (VAR_3++) ++VAR_1;\n        VAR_1 += str_len(VAR_5[VAR_2].name);\n    }\n    for (VAR_2 = 0; VAR_6[VAR_2].name; ++VAR_2) {\n        if (VAR_3++) ++VAR_1;\n        VAR_1 += str_len(VAR_6[VAR_2].name);\n    }\n\n    buf_putnum32(VAR_0, VAR_1);\n    VAR_4 = VAR_0->len;\n\n    VAR_3 = 0;\n    for (VAR_2 = 0; VAR_5[VAR_2].name; ++VAR_2) {\n        if (!VAR_5[VAR_2].flagenabled) continue;\n        if (VAR_3++) buf_puts(VAR_0, \",\");\n        buf_puts(VAR_0, VAR_5[VAR_2].name);\n    }\n    for (VAR_2 = 0; VAR_6[VAR_2].name; ++VAR_2) {\n        if (VAR_3++) buf_puts(VAR_0, \",\");\n        buf_puts(VAR_0, VAR_6[VAR_2].name);\n    }\n    VAR_0->buf[VAR_0->len] = 0;\n    log_d2(\"kex: server: kex algorithms: \", (char *)VAR_0->buf + VAR_4);\n}",
  "func_graph_path": "janmojzis/tinyssh/12ec08d24e43e382cb6d9b61facd87685f99eae0/sshcrypto_kex.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -9,6 +9,10 @@\n         if (j++) ++len;\n         len += str_len(sshcrypto_kexs[i].name);\n     }\n+    for (i = 0; sshcrypto_pseudokexs[i].name; ++i) {\n+        if (j++) ++len;\n+        len += str_len(sshcrypto_pseudokexs[i].name);\n+    }\n \n     buf_putnum32(b, len);\n     start = b->len;\n@@ -19,6 +23,10 @@\n         if (j++) buf_puts(b, \",\");\n         buf_puts(b, sshcrypto_kexs[i].name);\n     }\n+    for (i = 0; sshcrypto_pseudokexs[i].name; ++i) {\n+        if (j++) buf_puts(b, \",\");\n+        buf_puts(b, sshcrypto_pseudokexs[i].name);\n+    }\n     b->buf[b->len] = 0;\n     log_d2(\"kex: server: kex algorithms: \", (char *)b->buf + start);\n }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "    for (i = 0; sshcrypto_pseudokexs[i].name; ++i) {",
      "        if (j++) ++len;",
      "        len += str_len(sshcrypto_pseudokexs[i].name);",
      "    }",
      "    for (i = 0; sshcrypto_pseudokexs[i].name; ++i) {",
      "        if (j++) buf_puts(b, \",\");",
      "        buf_puts(b, sshcrypto_pseudokexs[i].name);",
      "    }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/janmojzis/tinyssh/pull/82",
  "description": {
    "pr_info": {
      "title": "implementation kex-strict-s-v00@openssh.com",
      "number": 82
    },
    "comment": [
      "Add new KEX kex-strict-s-v00@openssh.com protocol.\r\n'Terrapin Attack'  mitigation CVE-2023-48795.\r\nFixes https://github.com/janmojzis/tinyssh/issues/81\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}