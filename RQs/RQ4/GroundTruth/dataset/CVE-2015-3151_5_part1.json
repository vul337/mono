{
  "cve_id": "CVE-2015-3151",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "abrt/libreport",
  "commit_msg": "dd: harden functions against directory traversal issues\n\nTest correctness of all accessed dump dir files in all dd* functions.\nBefore this commit, the callers were allowed to pass strings like\n\"../../etc/shadow\" in the filename argument of all dd* functions.\n\nRelated: #1214457\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
  "commit_hash": "239c4f7d1f47265526b39ad70106767d00805277",
  "git_url": "https://github.com/abrt/libreport/commit/239c4f7d1f47265526b39ad70106767d00805277",
  "file_path": "src/lib/dump_dir.c",
  "func_name": "dd_delete_item",
  "func_before": "int dd_delete_item(struct dump_dir *dd, const char *name)\n{\n    if (!dd->locked)\n        error_msg_and_die(\"dump_dir is not opened\"); /* bug */\n\n    char *path = concat_path_file(dd->dd_dirname, name);\n    int res = unlink(path);\n\n    if (res < 0)\n    {\n        if (errno == ENOENT)\n            errno = res = 0;\n        else\n            perror_msg(\"Can't delete file '%s'\", path);\n    }\n\n    free(path);\n    return res;\n}",
  "abstract_func_before": "int dd_delete_item(struct dump_dir *VAR_0, const char *VAR_1)\n{\n    if (!VAR_0->locked)\n        error_msg_and_die(\"dump_dir is not opened\"); /* COMMENT_0 */\n\n    char *VAR_2 = concat_path_file(VAR_0->dd_dirname, VAR_1);\n    int VAR_3 = unlink(VAR_2);\n\n    if (VAR_3 < 0)\n    {\n        if (VAR_4 == VAR_5)\n            VAR_4 = VAR_3 = 0;\n        else\n            perror_msg(\"Can't delete file '%s'\", VAR_2);\n    }\n\n    free(VAR_2);\n    return VAR_3;\n}",
  "func_graph_path_before": "abrt/libreport/239c4f7d1f47265526b39ad70106767d00805277/dump_dir.c/vul/before/5.json",
  "func": "int dd_delete_item(struct dump_dir *dd, const char *name)\n{\n    if (!dd->locked)\n        error_msg_and_die(\"dump_dir is not opened\"); /* bug */\n\n    if (!str_is_correct_filename(name))\n        error_msg_and_die(\"Cannot delete item. '%s' is not a valid file name\", name);\n\n    char *path = concat_path_file(dd->dd_dirname, name);\n    int res = unlink(path);\n\n    if (res < 0)\n    {\n        if (errno == ENOENT)\n            errno = res = 0;\n        else\n            perror_msg(\"Can't delete file '%s'\", path);\n    }\n\n    free(path);\n    return res;\n}",
  "abstract_func": "int dd_delete_item(struct dump_dir *VAR_0, const char *VAR_1)\n{\n    if (!VAR_0->locked)\n        error_msg_and_die(\"dump_dir is not opened\"); /* COMMENT_0 */\n\n    if (!str_is_correct_filename(VAR_1))\n        error_msg_and_die(\"Cannot delete item. '%s' is not a valid file name\", VAR_1);\n\n    char *VAR_2 = concat_path_file(VAR_0->dd_dirname, VAR_1);\n    int VAR_3 = unlink(VAR_2);\n\n    if (VAR_3 < 0)\n    {\n        if (VAR_4 == VAR_5)\n            VAR_4 = VAR_3 = 0;\n        else\n            perror_msg(\"Can't delete file '%s'\", VAR_2);\n    }\n\n    free(VAR_2);\n    return VAR_3;\n}",
  "func_graph_path": "abrt/libreport/239c4f7d1f47265526b39ad70106767d00805277/dump_dir.c/vul/after/5.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,6 +2,9 @@\n {\n     if (!dd->locked)\n         error_msg_and_die(\"dump_dir is not opened\"); /* bug */\n+\n+    if (!str_is_correct_filename(name))\n+        error_msg_and_die(\"Cannot delete item. '%s' is not a valid file name\", name);\n \n     char *path = concat_path_file(dd->dd_dirname, name);\n     int res = unlink(path);",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "",
      "    if (!str_is_correct_filename(name))",
      "        error_msg_and_die(\"Cannot delete item. '%s' is not a valid file name\", name);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/abrt/libreport/pull/343",
  "description": {
    "pr_info": {
      "title": "RHEL7: copy file chown",
      "number": 343
    },
    "comment": [
      "Needed to avoid race-conditions between copy & chown.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak jfilak@redhat.com\n",
      "Went through the code and it seems to mitigate time of check / time of use race conditions and improve malicious path handling. Ack.\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0  \n\n**Reasoning:**  \n- The commit addresses directory traversal issues, a known security vulnerability.  \n- The code adds input validation to prevent malicious filenames.  \n- All information points to a clear security fix."
}