{
  "cve_id": "CVE-2021-41104",
  "cwe_ids": [
    "CWE-306"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "esphome",
  "commit_msg": "Fix lint issues in web_server_base",
  "commit_hash": "207cde1667d8c799a197b78ca8a5a14de8d5ca1e",
  "git_url": "https://github.com/esphome/esphome/commit/207cde1667d8c799a197b78ca8a5a14de8d5ca1e",
  "file_path": "esphome/components/web_server_base/web_server_base.h",
  "func_name": "set_auth_username",
  "func_before": "void set_auth_username(std::string auth_username) { credentials_.username = auth_username; }",
  "abstract_func_before": "void set_auth_username(std::string VAR_0) { VAR_1.username = VAR_0; }",
  "func_graph_path_before": "esphome/207cde1667d8c799a197b78ca8a5a14de8d5ca1e/web_server_base.h/vul/before/0.json",
  "func": "void set_auth_username(std::string auth_username) { credentials_.username = std::move(auth_username); }",
  "abstract_func": "void set_auth_username(std::string VAR_0) { VAR_1.username = std::move(VAR_0); }",
  "func_graph_path": "esphome/207cde1667d8c799a197b78ca8a5a14de8d5ca1e/web_server_base.h/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1 +1 @@\n-void set_auth_username(std::string auth_username) { credentials_.username = auth_username; }\n+void set_auth_username(std::string auth_username) { credentials_.username = std::move(auth_username); }",
  "diff_line_info": {
    "deleted_lines": [
      "void set_auth_username(std::string auth_username) { credentials_.username = auth_username; }"
    ],
    "added_lines": [
      "void set_auth_username(std::string auth_username) { credentials_.username = std::move(auth_username); }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/esphome/esphome/pull/2409",
  "description": {
    "pr_info": {
      "title": "Fix lint issues in web_server_base",
      "number": 2409
    },
    "comment": [
      "# What does this implement/fix? \n\nQuick description and explanation of changes\n\n## Types of changes\n\n- [ ] Bugfix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] Other\n\n**Related issue or feature (if applicable):** fixes <link to issue>\n\n**Pull request in [esphome-docs](https://github.com/esphome/esphome-docs) with documentation (if applicable):** esphome/esphome-docs#<esphome-docs PR number goes here>\n\n## Test Environment\n\n- [ ] ESP32\n- [ ] ESP8266\n\n## Example entry for `config.yaml`:\n<!--\n  Supplying a configuration snippet, makes it easier for a maintainer to test\n  your PR. Furthermore, for new integrations, it gives an impression of how\n  the configuration would look like.\n  Note: Remove this section if this PR does not have an example entry.\n-->\n\n```yaml\n# Example config.yaml\n\n```\n\n## Checklist:\n  - [ ] The code change is tested and works locally.\n  - [ ] Tests have been added to verify that the new code works (under `tests/` folder).\n  \nIf user exposed functionality or configuration variables are added/changed:\n  - [ ] Documentation added/updated in [esphome-docs](https://github.com/esphome/esphome-docs).\n",
      "Hey there @ottowinter, mind taking a look at this pull request as it has been labeled with an integration (`web_server_base`) you are listed as a [code owner](https://github.com/esphome/esphome/blob/dev/CODEOWNERS#L178) for? Thanks!\n<sub><sup>(message by CodeOwnersMention)</sup></sub>"
    ]
  },
  "Bug Filter": "Supporting & Non-Core Improvements",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Supporting & Non-Core Improvements  \n**Confidence:** 0.9"
}