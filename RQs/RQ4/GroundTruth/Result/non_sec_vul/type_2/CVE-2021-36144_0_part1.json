{
  "cve_id": "CVE-2021-36144",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "projectacrn/acrn-hypervisor",
  "commit_msg": "dm: Reset virtio device before release\n\nWith virtio polling mode enabled, a timer is running in the virtio\nbackend service. And the timer will also be triggered if its frondend\ndriver didn't do the device reset in shutdown. A freed virtio device\nwill be accessed in the polling timer handler.\n\nDo the virtio reset() callback specifically to clear the polling timer\nbefore the free.\n\nTracked-On: #6147\nSigned-off-by: Shuo A Liu <shuo.a.liu@intel.com>\nSigned-off-by: Yonghua Huang <yonghua.huang@intel.com>",
  "commit_hash": "dd88504804e186029f845a166dc5c31695e2cca2",
  "git_url": "https://github.com/projectacrn/acrn-hypervisor/commit/dd88504804e186029f845a166dc5c31695e2cca2",
  "file_path": "devicemodel/hw/pci/virtio/virtio_input.c",
  "func_name": "virtio_input_teardown",
  "func_before": "static void\nvirtio_input_teardown(void *param)\n{\n\tstruct virtio_input *vi;\n\n\tvi = (struct virtio_input *)param;\n\tif (vi) {\n\t\tpthread_mutex_destroy(&vi->mtx);\n\t\tif (vi->event_queue)\n\t\t\tfree(vi->event_queue);\n\t\tif (vi->fd > 0)\n\t\t\tclose(vi->fd);\n\t\tif (vi->evdev)\n\t\t\tfree(vi->evdev);\n\t\tif (vi->serial)\n\t\t\tfree(vi->serial);\n\t\tfree(vi);\n\t\tvi = NULL;\n\t}\n}",
  "abstract_func_before": "static void\nvirtio_input_teardown(void *VAR_0)\n{\n\tstruct virtio_input *VAR_1;\n\n\tVAR_1 = (struct virtio_input *)VAR_0;\n\tif (VAR_1) {\n\t\tpthread_mutex_destroy(&VAR_1->mtx);\n\t\tif (VAR_1->event_queue)\n\t\t\tfree(VAR_1->event_queue);\n\t\tif (VAR_1->fd > 0)\n\t\t\tclose(VAR_1->fd);\n\t\tif (VAR_1->evdev)\n\t\t\tfree(VAR_1->evdev);\n\t\tif (VAR_1->serial)\n\t\t\tfree(VAR_1->serial);\n\t\tfree(VAR_1);\n\t\tVAR_1 = NULL;\n\t}\n}",
  "func_graph_path_before": "projectacrn/acrn-hypervisor/dd88504804e186029f845a166dc5c31695e2cca2/virtio_input.c/vul/before/0.json",
  "func": "static void\nvirtio_input_teardown(void *param)\n{\n\tstruct virtio_input *vi;\n\n\tvi = (struct virtio_input *)param;\n\tif (vi) {\n\t\tpthread_mutex_destroy(&vi->mtx);\n\t\tif (vi->event_queue)\n\t\t\tfree(vi->event_queue);\n\t\tif (vi->fd > 0)\n\t\t\tclose(vi->fd);\n\t\tif (vi->evdev)\n\t\t\tfree(vi->evdev);\n\t\tif (vi->serial)\n\t\t\tfree(vi->serial);\n\n\t\tvirtio_input_reset(vi);\n\t\tfree(vi);\n\t\tvi = NULL;\n\t}\n}",
  "abstract_func": "static void\nvirtio_input_teardown(void *VAR_0)\n{\n\tstruct virtio_input *VAR_1;\n\n\tVAR_1 = (struct virtio_input *)VAR_0;\n\tif (VAR_1) {\n\t\tpthread_mutex_destroy(&VAR_1->mtx);\n\t\tif (VAR_1->event_queue)\n\t\t\tfree(VAR_1->event_queue);\n\t\tif (VAR_1->fd > 0)\n\t\t\tclose(VAR_1->fd);\n\t\tif (VAR_1->evdev)\n\t\t\tfree(VAR_1->evdev);\n\t\tif (VAR_1->serial)\n\t\t\tfree(VAR_1->serial);\n\n\t\tvirtio_input_reset(VAR_1);\n\t\tfree(VAR_1);\n\t\tVAR_1 = NULL;\n\t}\n}",
  "func_graph_path": "projectacrn/acrn-hypervisor/dd88504804e186029f845a166dc5c31695e2cca2/virtio_input.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -14,6 +14,8 @@\n \t\t\tfree(vi->evdev);\n \t\tif (vi->serial)\n \t\t\tfree(vi->serial);\n+\n+\t\tvirtio_input_reset(vi);\n \t\tfree(vi);\n \t\tvi = NULL;\n \t}",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "",
      "\t\tvirtio_input_reset(vi);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/projectacrn/acrn-hypervisor/pull/6268",
  "description": {
    "pr_info": {
      "title": "dm: Reset virtio device before release",
      "number": 6268
    },
    "comment": [
      "With virtio polling mode enabled, a timer is running in the virtio\r\nbackend service. And the timer will also be triggered if its frondend\r\ndriver didn't do the device reset in shutdown. A freed virtio device\r\nwill be accessed in the polling timer handler.\r\n\r\nDo the virtio reset() callback specifically to clear the polling timer\r\nbefore the free.\r\n\r\nTracked-On: #6147\r\nSigned-off-by: Shuo A Liu <shuo.a.liu@intel.com>\r\nSigned-off-by: Yonghua Huang <yonghua.huang@intel.com>",
      "@shuox  @ywan170  this PR to back backport from release_2.5 branch, please review.",
      "No new violations to the coding guideline detected.<br>No New Name Conflict<br>No New Function Declaration/Definition Mismatch"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch addresses a bug where a freed virtio device could be accessed, leading to a crash. It adds a reset call before freeing the device. While this prevents a crash, it doesn't directly fix a security vulnerability as no attacker-controlled exploit is indicated.\n\nFinal Classification: Defect Remediation & Feature Upgrades\n\nConfidence Score: 0.8"
}