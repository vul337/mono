{
  "cve_id": "CVE-2021-32694",
  "cwe_ids": [
    "CWE-248"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "nextcloud/android",
  "commit_msg": "Do not crash if wrong deep login url is used\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>",
  "commit_hash": "9343bdd85d70625a90e0c952897957a102c2421b",
  "git_url": "https://github.com/nextcloud/android/commit/9343bdd85d70625a90e0c952897957a102c2421b",
  "file_path": "src/main/java/com/owncloud/android/authentication/DeepLinkLoginActivity.java",
  "func_name": "onCreate",
  "func_before": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        if (!getResources().getBoolean(R.bool.multiaccount_support) &&\n            accountManager.getAccounts().length == 1) {\n            Toast.makeText(this, R.string.no_mutliple_accounts_allowed, Toast.LENGTH_LONG).show();\n            return;\n        }\n\n        setContentView(R.layout.deep_link_login);\n\n        Uri data = getIntent().getData();\n\n        if (data != null) {\n            String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n            LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());\n\n            TextView loginText = findViewById(R.id.loginInfo);\n            loginText.setTextColor(ThemeUtils.fontColor(this));\n            loginText.setText(String.format(\"Login with %1$s to %2$s\", loginUrlInfo.username,\n                                            loginUrlInfo.serverAddress));\n        }\n    }",
  "abstract_func_before": "@Override\n    protected void onCreate(Bundle VAR_0) {\n        super.onCreate(VAR_0);\n\n        if (!getResources().getBoolean(VAR_1.bool.multiaccount_support) &&\n            VAR_2.getAccounts().length == 1) {\n            VAR_3.makeText(this, VAR_1.string.no_mutliple_accounts_allowed, VAR_3.LENGTH_LONG).show();\n            return;\n        }\n\n        setContentView(VAR_1.layout.deep_link_login);\n\n        Uri VAR_4 = getIntent().getData();\n\n        if (VAR_4 != null) {\n            String VAR_5 = getString(VAR_1.string.login_data_own_scheme) + VAR_6 + \"login/\";\n            LoginUrlInfo VAR_7 = parseLoginDataUrl(VAR_5, VAR_4.toString());\n\n            TextView VAR_8 = findViewById(VAR_1.id.loginInfo);\n            VAR_8.setTextColor(VAR_9.fontColor(this));\n            VAR_8.setText(VAR_10.format(\"Login with %1$s to %2$s\", VAR_7.username,\n                                            VAR_7.serverAddress));\n        }\n    }",
  "func_graph_path_before": "nextcloud/android/9343bdd85d70625a90e0c952897957a102c2421b/DeepLinkLoginActivity.java/vul/before/0.json",
  "func": "@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        if (!getResources().getBoolean(R.bool.multiaccount_support) &&\n            accountManager.getAccounts().length == 1) {\n            Toast.makeText(this, R.string.no_mutliple_accounts_allowed, Toast.LENGTH_LONG).show();\n            return;\n        }\n\n        setContentView(R.layout.deep_link_login);\n\n        Uri data = getIntent().getData();\n\n        if (data != null) {\n            try {\n                String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n                LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());\n\n                TextView loginText = findViewById(R.id.loginInfo);\n                loginText.setTextColor(ThemeUtils.fontColor(this));\n                loginText.setText(String.format(\"Login with %1$s to %2$s\", loginUrlInfo.username,\n                                                loginUrlInfo.serverAddress));\n            } catch (IllegalArgumentException e) {\n                Toast.makeText(this, R.string.direct_login_failed, Toast.LENGTH_LONG).show();\n            }\n        }\n    }",
  "abstract_func": "@Override\n    protected void onCreate(Bundle VAR_0) {\n        super.onCreate(VAR_0);\n\n        if (!getResources().getBoolean(VAR_1.bool.multiaccount_support) &&\n            VAR_2.getAccounts().length == 1) {\n            VAR_3.makeText(this, VAR_1.string.no_mutliple_accounts_allowed, VAR_3.LENGTH_LONG).show();\n            return;\n        }\n\n        setContentView(VAR_1.layout.deep_link_login);\n\n        Uri VAR_4 = getIntent().getData();\n\n        if (VAR_4 != null) {\n            try {\n                String VAR_5 = getString(VAR_1.string.login_data_own_scheme) + VAR_6 + \"login/\";\n                LoginUrlInfo VAR_7 = parseLoginDataUrl(VAR_5, VAR_4.toString());\n\n                TextView VAR_8 = findViewById(VAR_1.id.loginInfo);\n                VAR_8.setTextColor(VAR_9.fontColor(this));\n                VAR_8.setText(VAR_10.format(\"Login with %1$s to %2$s\", VAR_7.username,\n                                                VAR_7.serverAddress));\n            } catch (IllegalArgumentException VAR_11) {\n                VAR_3.makeText(this, VAR_1.string.direct_login_failed, VAR_3.LENGTH_LONG).show();\n            }\n        }\n    }",
  "func_graph_path": "nextcloud/android/9343bdd85d70625a90e0c952897957a102c2421b/DeepLinkLoginActivity.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -13,12 +13,16 @@\n         Uri data = getIntent().getData();\n \n         if (data != null) {\n-            String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n-            LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());\n+            try {\n+                String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n+                LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());\n \n-            TextView loginText = findViewById(R.id.loginInfo);\n-            loginText.setTextColor(ThemeUtils.fontColor(this));\n-            loginText.setText(String.format(\"Login with %1$s to %2$s\", loginUrlInfo.username,\n-                                            loginUrlInfo.serverAddress));\n+                TextView loginText = findViewById(R.id.loginInfo);\n+                loginText.setTextColor(ThemeUtils.fontColor(this));\n+                loginText.setText(String.format(\"Login with %1$s to %2$s\", loginUrlInfo.username,\n+                                                loginUrlInfo.serverAddress));\n+            } catch (IllegalArgumentException e) {\n+                Toast.makeText(this, R.string.direct_login_failed, Toast.LENGTH_LONG).show();\n+            }\n         }\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "            String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";",
      "            LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());",
      "            TextView loginText = findViewById(R.id.loginInfo);",
      "            loginText.setTextColor(ThemeUtils.fontColor(this));",
      "            loginText.setText(String.format(\"Login with %1$s to %2$s\", loginUrlInfo.username,",
      "                                            loginUrlInfo.serverAddress));"
    ],
    "added_lines": [
      "            try {",
      "                String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";",
      "                LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());",
      "                TextView loginText = findViewById(R.id.loginInfo);",
      "                loginText.setTextColor(ThemeUtils.fontColor(this));",
      "                loginText.setText(String.format(\"Login with %1$s to %2$s\", loginUrlInfo.username,",
      "                                                loginUrlInfo.serverAddress));",
      "            } catch (IllegalArgumentException e) {",
      "                Toast.makeText(this, R.string.direct_login_failed, Toast.LENGTH_LONG).show();",
      "            }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/nextcloud/android/pull/7919",
  "description": {
    "pr_info": {
      "title": "Do not crash if wrong deep login url is used",
      "number": 7919
    },
    "comment": [
      "Signed-off-by: tobiasKaminsky <tobias@kaminsky.me>\r\n\r\n### Testing \r\nWriting tests is very important. Please try to write some tests for your PR. \r\nIf you need help, please do not hesitate to ask in this PR for help.\r\n\r\n[unit tests](https://github.com/nextcloud/android/blob/master/CONTRIBUTING.md#unit-tests)\r\n[instrumented tests](https://github.com/nextcloud/android/blob/master/CONTRIBUTING.md#instrumented-tests)\r\n[UI tests](https://github.com/nextcloud/android/blob/master/CONTRIBUTING.md#ui-tests)\r\n\r\n- [x] Tests written, or not not needed\r\n",
      "/backport to stable-3.15",
      "APK file: https://www.kaminsky.me/nc-dev/android-artifacts/7919.apk <br/><br/> ![qrcode](https://www.kaminsky.me/nc-dev/android-artifacts/7919.png) <br/><br/>To test this change/fix you can simply download above APK file and install and test it in parallel to your existing Nextcloud app. ",
      "<h1>Codacy</h1> <h1>Lint</h1><table width='500' cellpadding='5' cellspacing='2'><tr class='tablerow0'><td>Type</td><td><a href='https://www.kaminsky.me/nc-dev/android-lint/master.html'>master</a></td><td><a href='https://www.kaminsky.me/nc-dev/android-lint/510.html'>PR</a></td></tr><tr class='tablerow1'><td>Warnings</td><td>243</td><td>243</td></tr><tr class='tablerow0'><td>Errors</td><td>0</td><td>0</td></tr></table> <h1><a href='https://www.kaminsky.me/nc-dev/android-findbugs/510.html'>SpotBugs</a> (new)</h1><table width='500' cellpadding='5' cellspacing='2'><tr class='tableheader'><th align='left'>Warning Type</th><th align='right'>Number</th></tr><tr class='tablerow0'><td>Bad practice Warnings</td><td align='right'>27</td></tr><tr class='tablerow1'><td>Correctness Warnings</td><td align='right'>52</td></tr><tr class='tablerow0'><td>Internationalization Warnings</td><td align='right'>9</td></tr><tr class='tablerow1'><td>Multithreaded correctness Warnings</td><td align='right'>9</td></tr><tr class='tablerow0'><td>Performance Warnings</td><td align='right'>73</td></tr><tr class='tablerow1'><td>Security Warnings</td><td align='right'>41</td></tr><tr class='tablerow0'><td>Dodgy code Warnings</td><td align='right'>99</td></tr><tr class='tablerow1'><td><b>Total</b></td><td align='right'><b>310</b></td></tr></table> <h1><a href='https://www.kaminsky.me/nc-dev/android-findbugs/master.html'>SpotBugs</a> (master)</h1><table width='500' cellpadding='5' cellspacing='2'><tr class='tableheader'><th align='left'>Warning Type</th><th align='right'>Number</th></tr><tr class='tablerow0'><td>Bad practice Warnings</td><td align='right'>27</td></tr><tr class='tablerow1'><td>Correctness Warnings</td><td align='right'>52</td></tr><tr class='tablerow0'><td>Internationalization Warnings</td><td align='right'>9</td></tr><tr class='tablerow1'><td>Multithreaded correctness Warnings</td><td align='right'>9</td></tr><tr class='tablerow0'><td>Performance Warnings</td><td align='right'>73</td></tr><tr class='tablerow1'><td>Security Warnings</td><td align='right'>41</td></tr><tr class='tablerow0'><td>Dodgy code Warnings</td><td align='right'>99</td></tr><tr class='tablerow1'><td><b>Total</b></td><td align='right'><b>310</b></td></tr></table>     ",
      "White-Light-Screenshot test failed, but no output was generated. Maybe a preliminary stage failed. ",
      "White-Light-IT test failed: https://www.kaminsky.me/nc-dev/android-integrationTests/7919-Screenshot-White-Light-08-17 ",
      "Blue-Light-Screenshot test failed, but no output was generated. Maybe a preliminary stage failed. ",
      "Blue-Light-IT test failed: https://www.kaminsky.me/nc-dev/android-integrationTests/7919-Screenshot-Blue-Light-08-18 ",
      "White-Dark-Screenshot test failed: https://www.kaminsky.me/nc-dev/android-integrationTests/7919-Screenshot-White-Dark-08-19 "
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\nThe patch addresses a crash caused by an incorrect deep login URL by adding error handling. This prevents the app from crashing and informs the user of the failure. While it's a critical fix, it doesn't address a security vulnerability as it doesn't involve unauthorized access or data exposure.\n\n**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence Score:** 0.95"
}