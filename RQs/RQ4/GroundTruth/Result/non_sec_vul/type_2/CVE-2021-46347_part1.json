{
  "cve_id": "CVE-2021-46347",
  "cwe_ids": [
    "CWE-617"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "jerryscript-project/jerryscript",
  "commit_msg": "Add missing object types for ecma_object_get_class_name\n\nThis patch fixes #4937 and fixes #4938.\n\nJerryScript-DCO-1.0-Signed-off-by: Robert Fancsik robert.fancsik@h-lab.eu",
  "commit_hash": "b0625e61819e1f5823f16f2463f5def4ab16bdfb",
  "git_url": "https://github.com/jerryscript-project/jerryscript/commit/b0625e61819e1f5823f16f2463f5def4ab16bdfb",
  "file_path": "jerry-core/ecma/operations/ecma-objects.c",
  "func_name": "ecma_object_check_class_name_is_object",
  "func_before": "static inline bool\necma_object_check_class_name_is_object (ecma_object_t *obj_p) /**< object */\n{\n#ifndef JERRY_NDEBUG\n  return (ecma_builtin_is_global (obj_p)\n#if JERRY_BUILTIN_TYPEDARRAY\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ARRAYBUFFER_PROTOTYPE)\n#if JERRY_BUILTIN_SHAREDARRAYBUFFER\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_SHARED_ARRAYBUFFER_PROTOTYPE)\n#endif /* JERRY_BUILTIN_SHAREDARRAYBUFFER */\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_TYPEDARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_INT8ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_UINT8ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_INT16ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_UINT16ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_INT32ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_UINT32ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_FLOAT32ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_UINT8CLAMPEDARRAY_PROTOTYPE)\n#if JERRY_NUMBER_TYPE_FLOAT64\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_FLOAT64ARRAY_PROTOTYPE)\n#endif /* JERRY_NUMBER_TYPE_FLOAT64 */\n#if JERRY_BUILTIN_BIGINT\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_BIGINT64ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_BIGUINT64ARRAY_PROTOTYPE)\n#endif /* JERRY_BUILTIN_BIGINT */\n#endif /* JERRY_BUILTIN_TYPEDARRAY */\n#if JERRY_ESNEXT\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ARRAY_PROTOTYPE_UNSCOPABLES)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ARRAY_ITERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ITERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_STRING_ITERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_REGEXP_STRING_ITERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_EVAL_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_RANGE_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_REFERENCE_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_SYNTAX_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_GENERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_TYPE_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_AGGREGATE_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_URI_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_DATE_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_REGEXP_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_SYMBOL_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ASYNC_FUNCTION_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_PROMISE_PROTOTYPE)\n#endif /* JERRY_ESNEXT */\n#if JERRY_BUILTIN_CONTAINER\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_MAP_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_SET_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_WEAKMAP_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_WEAKSET_PROTOTYPE)\n#if JERRY_ESNEXT\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_MAP_ITERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_SET_ITERATOR_PROTOTYPE)\n#endif /* JERRY_ESNEXT */\n#endif /* JERRY_BUILTIN_CONTAINER */\n#if JERRY_BUILTIN_WEAKREF\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_WEAKREF_PROTOTYPE)\n#endif /* JERRY_BUILTIN_WEAKREF */\n#if JERRY_BUILTIN_DATAVIEW\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_DATAVIEW_PROTOTYPE)\n#endif /* JERRY_BUILTIN_DATAVIEW */\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_OBJECT_PROTOTYPE));\n#else /* JERRY_NDEBUG */\n  JERRY_UNUSED (obj_p);\n  return true;\n#endif /* !JERRY_NDEBUG */\n}",
  "abstract_func_before": "static inline bool\necma_object_check_class_name_is_object (ecma_object_t *VAR_0) /* COMMENT_0 */\n{\n#ifndef VAR_1\n  return (VAR_2 (obj_p)\n#if VAR_3\n          || ecma_builtin_is (obj_p, VAR_4)\n#if VAR_5\n          || ecma_builtin_is (obj_p, VAR_6)\n#endif /* COMMENT_1 */\n          || ecma_builtin_is (obj_p, VAR_7)\n          || ecma_builtin_is (obj_p, VAR_8)\n          || ecma_builtin_is (obj_p, VAR_9)\n          || ecma_builtin_is (obj_p, VAR_10)\n          || ecma_builtin_is (obj_p, VAR_11)\n          || ecma_builtin_is (obj_p, VAR_12)\n          || ecma_builtin_is (obj_p, VAR_13)\n          || ecma_builtin_is (obj_p, VAR_14)\n          || ecma_builtin_is (obj_p, VAR_15)\n#if VAR_16\n          || ecma_builtin_is (obj_p, VAR_17)\n#endif /* COMMENT_2 */\n#if VAR_18\n          || ecma_builtin_is (obj_p, VAR_19)\n          || ecma_builtin_is (obj_p, VAR_20)\n#endif /* COMMENT_3 */\n#endif/* COMMENT_4 */\n#if VAR_21\n          || ecma_builtin_is (obj_p, VAR_22)\n          || ecma_builtin_is (obj_p, VAR_23)\n          || ecma_builtin_is (obj_p, VAR_24)\n          || ecma_builtin_is (obj_p, VAR_25)\n          || ecma_builtin_is (obj_p, VAR_26)\n          || ecma_builtin_is (obj_p, VAR_27)\n          || ecma_builtin_is (obj_p, VAR_28)\n          || ecma_builtin_is (obj_p, VAR_29)\n          || ecma_builtin_is (obj_p, VAR_30)\n          || ecma_builtin_is (obj_p, VAR_31)\n          || ecma_builtin_is (obj_p, VAR_32)\n          || ecma_builtin_is (obj_p, VAR_33)\n          || ecma_builtin_is (obj_p, VAR_34)\n          || ecma_builtin_is (obj_p, VAR_35)\n          || ecma_builtin_is (obj_p, VAR_36)\n          || ecma_builtin_is (obj_p, VAR_37)\n          || ecma_builtin_is (obj_p, VAR_38)\n          || ecma_builtin_is (obj_p, VAR_39)\n          || ecma_builtin_is (obj_p, VAR_40)\n#endif /* COMMENT_5 */\n#if VAR_41\n          || ecma_builtin_is (obj_p, VAR_42)\n          || ecma_builtin_is (obj_p, VAR_43)\n          || ecma_builtin_is (obj_p, VAR_44)\n          || ecma_builtin_is (obj_p, VAR_45)\n#if VAR_21\n          || ecma_builtin_is (obj_p, VAR_46)\n          || ecma_builtin_is (obj_p, VAR_47)\n#endif /* COMMENT_5 */\n#endif/* COMMENT_6 */\n#if VAR_48\n          || ecma_builtin_is (obj_p, VAR_49)\n#endif /* COMMENT_7 */\n#if VAR_50\n          || ecma_builtin_is (obj_p, VAR_51)\n#endif /* COMMENT_8 */\n          || ecma_builtin_is (obj_p, VAR_52));\n#else /* COMMENT_9 */\n  JERRY_UNUSED (obj_p);\n  return true;\n#endif /* COMMENT_10 */\n}",
  "func_graph_path_before": "jerryscript-project/jerryscript/b0625e61819e1f5823f16f2463f5def4ab16bdfb/ecma-objects.c/vul/before/0.json",
  "func": "static inline bool\necma_object_check_class_name_is_object (ecma_object_t *obj_p) /**< object */\n{\n#ifndef JERRY_NDEBUG\n  return (ecma_builtin_is_global (obj_p)\n#if JERRY_BUILTIN_TYPEDARRAY\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ARRAYBUFFER_PROTOTYPE)\n#if JERRY_BUILTIN_SHAREDARRAYBUFFER\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_SHARED_ARRAYBUFFER_PROTOTYPE)\n#endif /* JERRY_BUILTIN_SHAREDARRAYBUFFER */\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_TYPEDARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_INT8ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_UINT8ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_INT16ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_UINT16ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_INT32ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_UINT32ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_FLOAT32ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_UINT8CLAMPEDARRAY_PROTOTYPE)\n#if JERRY_NUMBER_TYPE_FLOAT64\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_FLOAT64ARRAY_PROTOTYPE)\n#endif /* JERRY_NUMBER_TYPE_FLOAT64 */\n#if JERRY_BUILTIN_BIGINT\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_BIGINT_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_BIGINT64ARRAY_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_BIGUINT64ARRAY_PROTOTYPE)\n#endif /* JERRY_BUILTIN_BIGINT */\n#endif /* JERRY_BUILTIN_TYPEDARRAY */\n#if JERRY_ESNEXT\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ARRAY_PROTOTYPE_UNSCOPABLES)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ARRAY_ITERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ITERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_STRING_ITERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_REGEXP_STRING_ITERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_EVAL_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_RANGE_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_REFERENCE_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_SYNTAX_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_GENERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_TYPE_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_AGGREGATE_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_URI_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ERROR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_DATE_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_REGEXP_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_SYMBOL_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_ASYNC_FUNCTION_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_PROMISE_PROTOTYPE)\n#endif /* JERRY_ESNEXT */\n#if JERRY_BUILTIN_CONTAINER\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_MAP_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_SET_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_WEAKMAP_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_WEAKSET_PROTOTYPE)\n#if JERRY_ESNEXT\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_MAP_ITERATOR_PROTOTYPE)\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_SET_ITERATOR_PROTOTYPE)\n#endif /* JERRY_ESNEXT */\n#endif /* JERRY_BUILTIN_CONTAINER */\n#if JERRY_BUILTIN_WEAKREF\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_WEAKREF_PROTOTYPE)\n#endif /* JERRY_BUILTIN_WEAKREF */\n#if JERRY_BUILTIN_DATAVIEW\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_DATAVIEW_PROTOTYPE)\n#endif /* JERRY_BUILTIN_DATAVIEW */\n          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_OBJECT_PROTOTYPE));\n#else /* JERRY_NDEBUG */\n  JERRY_UNUSED (obj_p);\n  return true;\n#endif /* !JERRY_NDEBUG */\n}",
  "abstract_func": "static inline bool\necma_object_check_class_name_is_object (ecma_object_t *VAR_0) /* COMMENT_0 */\n{\n#ifndef VAR_1\n  return (VAR_2 (obj_p)\n#if VAR_3\n          || ecma_builtin_is (obj_p, VAR_4)\n#if VAR_5\n          || ecma_builtin_is (obj_p, VAR_6)\n#endif /* COMMENT_1 */\n          || ecma_builtin_is (obj_p, VAR_7)\n          || ecma_builtin_is (obj_p, VAR_8)\n          || ecma_builtin_is (obj_p, VAR_9)\n          || ecma_builtin_is (obj_p, VAR_10)\n          || ecma_builtin_is (obj_p, VAR_11)\n          || ecma_builtin_is (obj_p, VAR_12)\n          || ecma_builtin_is (obj_p, VAR_13)\n          || ecma_builtin_is (obj_p, VAR_14)\n          || ecma_builtin_is (obj_p, VAR_15)\n#if VAR_16\n          || ecma_builtin_is (obj_p, VAR_17)\n#endif /* COMMENT_2 */\n#if VAR_18\n          || ecma_builtin_is (obj_p, VAR_19)\n          || ecma_builtin_is (obj_p, VAR_20)\n          || ecma_builtin_is (obj_p, VAR_21)\n#endif /* COMMENT_3 */\n#endif/* COMMENT_4 */\n#if VAR_22\n          || ecma_builtin_is (obj_p, VAR_23)\n          || ecma_builtin_is (obj_p, VAR_24)\n          || ecma_builtin_is (obj_p, VAR_25)\n          || ecma_builtin_is (obj_p, VAR_26)\n          || ecma_builtin_is (obj_p, VAR_27)\n          || ecma_builtin_is (obj_p, VAR_28)\n          || ecma_builtin_is (obj_p, VAR_29)\n          || ecma_builtin_is (obj_p, VAR_30)\n          || ecma_builtin_is (obj_p, VAR_31)\n          || ecma_builtin_is (obj_p, VAR_32)\n          || ecma_builtin_is (obj_p, VAR_33)\n          || ecma_builtin_is (obj_p, VAR_34)\n          || ecma_builtin_is (obj_p, VAR_35)\n          || ecma_builtin_is (obj_p, VAR_36)\n          || ecma_builtin_is (obj_p, VAR_37)\n          || ecma_builtin_is (obj_p, VAR_38)\n          || ecma_builtin_is (obj_p, VAR_39)\n          || ecma_builtin_is (obj_p, VAR_40)\n          || ecma_builtin_is (obj_p, VAR_41)\n#endif /* COMMENT_5 */\n#if VAR_42\n          || ecma_builtin_is (obj_p, VAR_43)\n          || ecma_builtin_is (obj_p, VAR_44)\n          || ecma_builtin_is (obj_p, VAR_45)\n          || ecma_builtin_is (obj_p, VAR_46)\n#if VAR_22\n          || ecma_builtin_is (obj_p, VAR_47)\n          || ecma_builtin_is (obj_p, VAR_48)\n#endif /* COMMENT_5 */\n#endif/* COMMENT_6 */\n#if VAR_49\n          || ecma_builtin_is (obj_p, VAR_50)\n#endif /* COMMENT_7 */\n#if VAR_51\n          || ecma_builtin_is (obj_p, VAR_52)\n#endif /* COMMENT_8 */\n          || ecma_builtin_is (obj_p, VAR_53));\n#else /* COMMENT_9 */\n  JERRY_UNUSED (obj_p);\n  return true;\n#endif /* COMMENT_10 */\n}",
  "func_graph_path": "jerryscript-project/jerryscript/b0625e61819e1f5823f16f2463f5def4ab16bdfb/ecma-objects.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -21,6 +21,7 @@\n           || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_FLOAT64ARRAY_PROTOTYPE)\n #endif /* JERRY_NUMBER_TYPE_FLOAT64 */\n #if JERRY_BUILTIN_BIGINT\n+          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_BIGINT_PROTOTYPE)\n           || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_BIGINT64ARRAY_PROTOTYPE)\n           || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_BIGUINT64ARRAY_PROTOTYPE)\n #endif /* JERRY_BUILTIN_BIGINT */",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "          || ecma_builtin_is (obj_p, ECMA_BUILTIN_ID_BIGINT_PROTOTYPE)"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/jerryscript-project/jerryscript/pull/4954",
  "description": {
    "pr_info": {
      "title": "Add missing object types for ecma_object_get_class_name",
      "number": 4954
    },
    "comment": [
      "This patch fixes #4937 and fixes #4938.\r\n\r\nJerryScript-DCO-1.0-Signed-off-by: Robert Fancsik robert.fancsik@h-lab.eu\r\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "\n\n**Analysis:**\nThe patch adds handling for BigInt prototypes in object class name checks, fixing incorrect classifications without security implications.\n\n**Final Classification: Defect Remediation & Feature Upgrades**\n\n**Confidence Score: 0.8**"
}