{
  "cve_id": "CVE-2016-10210",
  "cwe_ids": [
    "CWE-476"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "VirusTotal/yara",
  "commit_msg": "re_lexer: Make reading escape sequences more robust (#586)\n\n* Add test for issue #503\r\n\r\n* re_lexer: Make reading escape sequences more robust\r\n\r\nThis commit fixes parsing incomplete escape sequences at the end of a\r\nregular expression and parsing things like \\xxy (invalid hex digits)\r\nwhich before were silently turned into (char)255.\r\n\r\nClose #503\r\n\r\n* Update re_lexer.c",
  "commit_hash": "3119b232c9c453c98d8fa8b6ae4e37ba18117cd4",
  "git_url": "https://github.com/VirusTotal/yara/commit/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4",
  "file_path": "libyara/re_lexer.c",
  "func_name": "re_yyget_column",
  "func_before": "int re_yyget_column  (yyscan_t yyscanner)\n{\n    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;\n    \n        if (! YY_CURRENT_BUFFER)\n            return 0;\n    \n    return yycolumn;\n}",
  "abstract_func_before": "int re_yyget_column  (yyscan_t VAR_0)\n{\n    struct yyguts_t * VAR_1 = (struct yyguts_t*)VAR_0;\n    \n        if (! VAR_2)\n            return 0;\n    \n    return VAR_3;\n}",
  "func_graph_path_before": "VirusTotal/yara/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4/re_lexer.c/vul/before/1.json",
  "func": "int re_yyget_column  (yyscan_t yyscanner)\n{\n    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;\n\n        if (! YY_CURRENT_BUFFER)\n            return 0;\n    \n    return yycolumn;\n}",
  "abstract_func": "int re_yyget_column  (yyscan_t VAR_0)\n{\n    struct yyguts_t * VAR_1 = (struct yyguts_t*)VAR_0;\n\n        if (! VAR_2)\n            return 0;\n    \n    return VAR_3;\n}",
  "func_graph_path": "VirusTotal/yara/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4/re_lexer.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,7 @@\n int re_yyget_column  (yyscan_t yyscanner)\n {\n     struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;\n-    \n+\n         if (! YY_CURRENT_BUFFER)\n             return 0;\n     ",
  "diff_line_info": {
    "deleted_lines": [
      "    "
    ],
    "added_lines": [
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/VirusTotal/yara/pull/586",
  "description": {
    "pr_info": {
      "title": "re_lexer: Make reading escape sequences more robust",
      "number": 586
    },
    "comment": [
      "This is actually more like the easy way out. As I mentioned in #503, one might want to change the `yr_re_parse_*` functions to accept a SIZED_STRING argument and use `yy_scan_bytes` instead."
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\nThe patch addresses a bug in parsing escape sequences, improving robustness without clear security implications. It's classified under Defect Remediation.\n\n**Final Output:**\nAnalysis: The commit fixes parsing issues in escape sequences, improving robustness without explicit security implications.\nFinal Classification: Defect Remediation & Feature Upgrades\nConfidence Score: 0.9"
}