{
  "cve_id": "CVE-2020-23302",
  "cwe_ids": [
    "CWE-416",
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "jerryscript-project/jerryscript",
  "commit_msg": "Fix releasing the pattern string in regexp\n\nThe release of the regexp pattern string during creating\nwas incorrect as it was dereferenced a bit to early.\n\nJerryScript-DCO-1.0-Signed-off-by: Peter Gal pgal.usz@partner.samsung.com",
  "commit_hash": "26d3a90de29ec38e69d135dc256adead874e8317",
  "git_url": "https://github.com/jerryscript-project/jerryscript/commit/26d3a90de29ec38e69d135dc256adead874e8317",
  "file_path": "jerry-core/ecma/operations/ecma-regexp-object.c",
  "func_name": "ecma_op_create_regexp_from_pattern",
  "func_before": "ecma_value_t\necma_op_create_regexp_from_pattern (ecma_object_t *regexp_obj_p, /**< RegExp object */\n                                    ecma_value_t pattern_value, /**< pattern */\n                                    ecma_value_t flags_value) /**< flags */\n{\n  ecma_string_t *pattern_str_p = ecma_regexp_read_pattern_str_helper (pattern_value);\n  uint16_t flags = 0;\n\n  if (JERRY_UNLIKELY (pattern_str_p == NULL))\n  {\n    return ECMA_VALUE_ERROR;\n  }\n\n  if (!ecma_is_value_undefined (flags_value))\n  {\n    ecma_string_t *flags_str_p = ecma_op_to_string (flags_value);\n\n    if (JERRY_UNLIKELY (flags_str_p == NULL))\n    {\n      ecma_deref_ecma_string (pattern_str_p);\n      return ECMA_VALUE_ERROR;\n    }\n\n    ecma_value_t parse_flags_value = ecma_regexp_parse_flags (flags_str_p, &flags);\n    ecma_deref_ecma_string (flags_str_p);\n\n    if (ECMA_IS_VALUE_ERROR (parse_flags_value))\n    {\n      ecma_deref_ecma_string (pattern_str_p);\n      return parse_flags_value;\n    }\n\n    JERRY_ASSERT (ecma_is_value_empty (parse_flags_value));\n  }\n\n  const re_compiled_code_t *bc_p = NULL;\n  ecma_value_t ret_value = re_compile_bytecode (&bc_p, pattern_str_p, flags);\n  ecma_deref_ecma_string (pattern_str_p);\n\n  if (ECMA_IS_VALUE_ERROR (ret_value))\n  {\n    return ret_value;\n  }\n\n  JERRY_ASSERT (ecma_is_value_empty (ret_value));\n\n  ecma_op_regexp_initialize (regexp_obj_p, bc_p, pattern_str_p, flags);\n\n  return ecma_make_object_value (regexp_obj_p);\n}",
  "abstract_func_before": "ecma_value_t\necma_op_create_regexp_from_pattern (ecma_object_t *VAR_0, /* COMMENT_0 */\n                                    ecma_value_t VAR_1, /* COMMENT_1 */\n                                    ecma_value_t VAR_2) /* COMMENT_2 */\n{\n  ecma_string_t *VAR_3 = ecma_regexp_read_pattern_str_helper (VAR_1);\n  uint16_t VAR_4 = 0;\n\n  if (JERRY_UNLIKELY (VAR_3 == NULL))\n  {\n    return VAR_5;\n  }\n\n  if (!ecma_is_value_undefined (VAR_2))\n  {\n    ecma_string_t *VAR_6 = ecma_op_to_string (VAR_2);\n\n    if (JERRY_UNLIKELY (VAR_6 == NULL))\n    {\n      ecma_deref_ecma_string (VAR_3);\n      return VAR_5;\n    }\n\n    ecma_value_t VAR_7 = ecma_regexp_parse_flags (VAR_6, &VAR_4);\n    ecma_deref_ecma_string (VAR_6);\n\n    if (ECMA_IS_VALUE_ERROR (VAR_7))\n    {\n      ecma_deref_ecma_string (VAR_3);\n      return VAR_7;\n    }\n\n    JERRY_ASSERT (ecma_is_value_empty (VAR_7));\n  }\n\n  const re_compiled_code_t *VAR_8 = NULL;\n  ecma_value_t VAR_9 = re_compile_bytecode (&VAR_8, VAR_3, VAR_4);\n  ecma_deref_ecma_string (VAR_3);\n\n  if (ECMA_IS_VALUE_ERROR (VAR_9))\n  {\n    return VAR_9;\n  }\n\n  JERRY_ASSERT (ecma_is_value_empty (VAR_9));\n\n  ecma_op_regexp_initialize (VAR_0, VAR_8, VAR_3, VAR_4);\n\n  return ecma_make_object_value (VAR_0);\n}",
  "func_graph_path_before": "jerryscript-project/jerryscript/26d3a90de29ec38e69d135dc256adead874e8317/ecma-regexp-object.c/vul/before/0.json",
  "func": "ecma_value_t\necma_op_create_regexp_from_pattern (ecma_object_t *regexp_obj_p, /**< RegExp object */\n                                    ecma_value_t pattern_value, /**< pattern */\n                                    ecma_value_t flags_value) /**< flags */\n{\n  ecma_string_t *pattern_str_p = ecma_regexp_read_pattern_str_helper (pattern_value);\n  uint16_t flags = 0;\n\n  if (JERRY_UNLIKELY (pattern_str_p == NULL))\n  {\n    return ECMA_VALUE_ERROR;\n  }\n\n  if (!ecma_is_value_undefined (flags_value))\n  {\n    ecma_string_t *flags_str_p = ecma_op_to_string (flags_value);\n\n    if (JERRY_UNLIKELY (flags_str_p == NULL))\n    {\n      ecma_deref_ecma_string (pattern_str_p);\n      return ECMA_VALUE_ERROR;\n    }\n\n    ecma_value_t parse_flags_value = ecma_regexp_parse_flags (flags_str_p, &flags);\n    ecma_deref_ecma_string (flags_str_p);\n\n    if (ECMA_IS_VALUE_ERROR (parse_flags_value))\n    {\n      ecma_deref_ecma_string (pattern_str_p);\n      return parse_flags_value;\n    }\n\n    JERRY_ASSERT (ecma_is_value_empty (parse_flags_value));\n  }\n\n  const re_compiled_code_t *bc_p = NULL;\n  ecma_value_t ret_value = re_compile_bytecode (&bc_p, pattern_str_p, flags);\n\n  if (ECMA_IS_VALUE_ERROR (ret_value))\n  {\n    ecma_deref_ecma_string (pattern_str_p);\n    return ret_value;\n  }\n\n  JERRY_ASSERT (ecma_is_value_empty (ret_value));\n\n  ecma_op_regexp_initialize (regexp_obj_p, bc_p, pattern_str_p, flags);\n  ecma_deref_ecma_string (pattern_str_p);\n\n  return ecma_make_object_value (regexp_obj_p);\n}",
  "abstract_func": "ecma_value_t\necma_op_create_regexp_from_pattern (ecma_object_t *VAR_0, /* COMMENT_0 */\n                                    ecma_value_t VAR_1, /* COMMENT_1 */\n                                    ecma_value_t VAR_2) /* COMMENT_2 */\n{\n  ecma_string_t *VAR_3 = ecma_regexp_read_pattern_str_helper (VAR_1);\n  uint16_t VAR_4 = 0;\n\n  if (JERRY_UNLIKELY (VAR_3 == NULL))\n  {\n    return VAR_5;\n  }\n\n  if (!ecma_is_value_undefined (VAR_2))\n  {\n    ecma_string_t *VAR_6 = ecma_op_to_string (VAR_2);\n\n    if (JERRY_UNLIKELY (VAR_6 == NULL))\n    {\n      ecma_deref_ecma_string (VAR_3);\n      return VAR_5;\n    }\n\n    ecma_value_t VAR_7 = ecma_regexp_parse_flags (VAR_6, &VAR_4);\n    ecma_deref_ecma_string (VAR_6);\n\n    if (ECMA_IS_VALUE_ERROR (VAR_7))\n    {\n      ecma_deref_ecma_string (VAR_3);\n      return VAR_7;\n    }\n\n    JERRY_ASSERT (ecma_is_value_empty (VAR_7));\n  }\n\n  const re_compiled_code_t *VAR_8 = NULL;\n  ecma_value_t VAR_9 = re_compile_bytecode (&VAR_8, VAR_3, VAR_4);\n\n  if (ECMA_IS_VALUE_ERROR (VAR_9))\n  {\n    ecma_deref_ecma_string (VAR_3);\n    return VAR_9;\n  }\n\n  JERRY_ASSERT (ecma_is_value_empty (VAR_9));\n\n  ecma_op_regexp_initialize (VAR_0, VAR_8, VAR_3, VAR_4);\n  ecma_deref_ecma_string (VAR_3);\n\n  return ecma_make_object_value (VAR_0);\n}",
  "func_graph_path": "jerryscript-project/jerryscript/26d3a90de29ec38e69d135dc256adead874e8317/ecma-regexp-object.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -35,16 +35,17 @@\n \n   const re_compiled_code_t *bc_p = NULL;\n   ecma_value_t ret_value = re_compile_bytecode (&bc_p, pattern_str_p, flags);\n-  ecma_deref_ecma_string (pattern_str_p);\n \n   if (ECMA_IS_VALUE_ERROR (ret_value))\n   {\n+    ecma_deref_ecma_string (pattern_str_p);\n     return ret_value;\n   }\n \n   JERRY_ASSERT (ecma_is_value_empty (ret_value));\n \n   ecma_op_regexp_initialize (regexp_obj_p, bc_p, pattern_str_p, flags);\n+  ecma_deref_ecma_string (pattern_str_p);\n \n   return ecma_make_object_value (regexp_obj_p);\n }",
  "diff_line_info": {
    "deleted_lines": [
      "  ecma_deref_ecma_string (pattern_str_p);"
    ],
    "added_lines": [
      "    ecma_deref_ecma_string (pattern_str_p);",
      "  ecma_deref_ecma_string (pattern_str_p);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/jerryscript-project/jerryscript/pull/3765",
  "description": {
    "pr_info": {
      "title": "Fix releasing the pattern string in regexp",
      "number": 3765
    },
    "comment": [
      "The release of the regexp pattern string during creating\r\nwas incorrect as it was dereferenced a bit to early.\r\n\r\nFixes: #3748\r\nFixes: #3749 "
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\nThe patch addresses a memory management issue in the regexp function, preventing a potential crash due to early dereferencing. While it improves stability, it doesn't fix a security vulnerability. \n\n**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence Score:** 0.9"
}