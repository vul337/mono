{
  "cve_id": "CVE-2021-46347",
  "cwe_ids": [
    "CWE-617"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "jerryscript-project/jerryscript",
  "commit_msg": "Add missing object types for ecma_object_get_class_name\n\nThis patch fixes #4937 and fixes #4938.\n\nJerryScript-DCO-1.0-Signed-off-by: Robert Fancsik robert.fancsik@h-lab.eu",
  "commit_hash": "b0625e61819e1f5823f16f2463f5def4ab16bdfb",
  "git_url": "https://github.com/jerryscript-project/jerryscript/commit/b0625e61819e1f5823f16f2463f5def4ab16bdfb",
  "file_path": "jerry-core/ecma/operations/ecma-objects.c",
  "func_name": "ecma_object_get_class_name",
  "func_before": "lit_magic_string_id_t\necma_object_get_class_name (ecma_object_t *obj_p) /**< object */\n{\n  ecma_object_type_t type = ecma_get_object_type (obj_p);\n\n  switch (type)\n  {\n    case ECMA_OBJECT_TYPE_ARRAY:\n    case ECMA_OBJECT_TYPE_BUILT_IN_ARRAY:\n    {\n      return LIT_MAGIC_STRING_ARRAY_UL;\n    }\n    case ECMA_OBJECT_TYPE_CLASS:\n    case ECMA_OBJECT_TYPE_BUILT_IN_CLASS:\n    {\n      ecma_extended_object_t *ext_object_p = (ecma_extended_object_t *) obj_p;\n\n      switch (ext_object_p->u.cls.type)\n      {\n#if JERRY_BUILTIN_TYPEDARRAY\n        case ECMA_OBJECT_CLASS_TYPEDARRAY:\n        {\n          return ecma_get_typedarray_magic_string_id (ext_object_p->u.cls.u1.typedarray_type);\n        }\n#endif /* JERRY_BUILTIN_TYPEDARRAY */\n#if JERRY_BUILTIN_CONTAINER\n        case ECMA_OBJECT_CLASS_CONTAINER:\n        {\n          return (lit_magic_string_id_t) ext_object_p->u.cls.u2.container_id;\n        }\n#endif /* JERRY_BUILTIN_CONTAINER */\n        default:\n        {\n          break;\n        }\n      }\n\n      JERRY_ASSERT (ext_object_p->u.cls.type < ECMA_OBJECT_CLASS__MAX);\n      JERRY_ASSERT (ecma_class_object_magic_string_id[ext_object_p->u.cls.type] != LIT_MAGIC_STRING__EMPTY);\n\n      return (lit_magic_string_id_t) ecma_class_object_magic_string_id[ext_object_p->u.cls.type];\n    }\n    case ECMA_OBJECT_TYPE_FUNCTION:\n    case ECMA_OBJECT_TYPE_NATIVE_FUNCTION:\n    case ECMA_OBJECT_TYPE_BOUND_FUNCTION:\n    case ECMA_OBJECT_TYPE_BUILT_IN_FUNCTION:\n    {\n      return LIT_MAGIC_STRING_FUNCTION_UL;\n    }\n#if JERRY_BUILTIN_PROXY\n    case ECMA_OBJECT_TYPE_PROXY:\n    {\n      ecma_proxy_object_t *proxy_obj_p = (ecma_proxy_object_t *) obj_p;\n\n      if (!ecma_is_value_null (proxy_obj_p->target) && ecma_is_value_object (proxy_obj_p->target))\n      {\n        ecma_object_t *target_obj_p = ecma_get_object_from_value (proxy_obj_p->target);\n        return ecma_object_get_class_name (target_obj_p);\n      }\n      return LIT_MAGIC_STRING_OBJECT_UL;\n    }\n#endif /* JERRY_BUILTIN_PROXY */\n    case ECMA_OBJECT_TYPE_BUILT_IN_GENERAL:\n    {\n      ecma_extended_object_t *ext_obj_p = (ecma_extended_object_t *) obj_p;\n\n      switch (ext_obj_p->u.built_in.id)\n      {\n#if JERRY_BUILTIN_MATH\n        case ECMA_BUILTIN_ID_MATH:\n        {\n          return LIT_MAGIC_STRING_MATH_UL;\n        }\n#endif /* JERRY_BUILTIN_MATH */\n#if JERRY_BUILTIN_REFLECT\n        case ECMA_BUILTIN_ID_REFLECT:\n        {\n          return LIT_MAGIC_STRING_REFLECT_UL;\n        }\n#endif /* JERRY_BUILTIN_REFLECT */\n#if JERRY_ESNEXT\n        case ECMA_BUILTIN_ID_GENERATOR:\n        {\n          return LIT_MAGIC_STRING_GENERATOR_UL;\n        }\n        case ECMA_BUILTIN_ID_ASYNC_GENERATOR:\n        {\n          return LIT_MAGIC_STRING_ASYNC_GENERATOR_UL;\n        }\n#endif /* JERRY_ESNEXT */\n#if JERRY_BUILTIN_JSON\n        case ECMA_BUILTIN_ID_JSON:\n        {\n          return LIT_MAGIC_STRING_JSON_U;\n        }\n#endif /* JERRY_BUILTIN_JSON */\n#if JERRY_BUILTIN_ATOMICS\n        case ECMA_BUILTIN_ID_ATOMICS:\n        {\n          return LIT_MAGIC_STRING_ATOMICS_U;\n        }\n#endif /* JERRY_BUILTIN_ATOMICS */\n#if !JERRY_ESNEXT\n#if JERRY_BUILTIN_ERRORS\n        case ECMA_BUILTIN_ID_EVAL_ERROR_PROTOTYPE:\n        case ECMA_BUILTIN_ID_RANGE_ERROR_PROTOTYPE:\n        case ECMA_BUILTIN_ID_REFERENCE_ERROR_PROTOTYPE:\n        case ECMA_BUILTIN_ID_SYNTAX_ERROR_PROTOTYPE:\n        case ECMA_BUILTIN_ID_TYPE_ERROR_PROTOTYPE:\n        case ECMA_BUILTIN_ID_URI_ERROR_PROTOTYPE:\n#endif /* JERRY_BUILTIN_ERRORS */\n        case ECMA_BUILTIN_ID_ERROR_PROTOTYPE:\n        {\n          return LIT_MAGIC_STRING_ERROR_UL;\n        }\n#endif /* !JERRY_ESNEXT */\n        default:\n        {\n          break;\n        }\n      }\n\n      JERRY_ASSERT (ecma_object_check_class_name_is_object (obj_p));\n      return LIT_MAGIC_STRING_OBJECT_UL;\n    }\n    default:\n    {\n      JERRY_ASSERT (type == ECMA_OBJECT_TYPE_GENERAL || type == ECMA_OBJECT_TYPE_PROXY);\n\n      return LIT_MAGIC_STRING_OBJECT_UL;\n    }\n  }\n}",
  "abstract_func_before": "lit_magic_string_id_t\necma_object_get_class_name (ecma_object_t *VAR_0) /* COMMENT_0 */\n{\n  ecma_object_type_t VAR_1 = ecma_get_object_type (VAR_0);\n\n  switch (VAR_1)\n  {\n    case VAR_2:\n    case VAR_3:\n    {\n      return VAR_4;\n    }\n    case VAR_5:\n    case VAR_6:\n    {\n      ecma_extended_object_t *VAR_7 = (ecma_extended_object_t *) VAR_0;\n\n      switch (VAR_7->u.cls.type)\n      {\n#if VAR_8\n        case VAR_9:\n        {\n          return ecma_get_typedarray_magic_string_id (VAR_7->u.cls.u1.typedarray_type);\n        }\n#endif /* COMMENT_1 */\n#if VAR_10\n        case VAR_11:\n        {\n          return (lit_magic_string_id_t) VAR_7->u.cls.u2.container_id;\n        }\n#endif /* COMMENT_2 */\n        default:\n        {\n          break;\n        }\n      }\n\n      JERRY_ASSERT (VAR_7->u.cls.type < VAR_12);\n      JERRY_ASSERT (VAR_13[VAR_7->u.cls.type] != VAR_14);\n\n      return (lit_magic_string_id_t) VAR_13[VAR_7->u.cls.type];\n    }\n    case VAR_15:\n    case VAR_16:\n    case VAR_17:\n    case VAR_18:\n    {\n      return VAR_19;\n    }\n#if VAR_20\n    case VAR_21:\n    {\n      ecma_proxy_object_t *VAR_22 = (ecma_proxy_object_t *) VAR_0;\n\n      if (!ecma_is_value_null (VAR_22->target) && ecma_is_value_object (VAR_22->target))\n      {\n        ecma_object_t *VAR_23 = ecma_get_object_from_value (VAR_22->target);\n        return ecma_object_get_class_name (VAR_23);\n      }\n      return VAR_24;\n    }\n#endif /* COMMENT_3 */\n    case VAR_25:\n    {\n      ecma_extended_object_t *VAR_26 = (ecma_extended_object_t *) VAR_0;\n\n      switch (VAR_26->u.built_in.id)\n      {\n#if VAR_27\n        case VAR_28:\n        {\n          return VAR_29;\n        }\n#endif /* COMMENT_4 */\n#if VAR_30\n        case VAR_31:\n        {\n          return VAR_32;\n        }\n#endif /* COMMENT_5 */\n#if VAR_33\n        case VAR_34:\n        {\n          return VAR_35;\n        }\n        case VAR_36:\n        {\n          return VAR_37;\n        }\n#endif /* COMMENT_6 */\n#if VAR_38\n        case VAR_39:\n        {\n          return VAR_40;\n        }\n#endif /* COMMENT_7 */\n#if VAR_41\n        case VAR_42:\n        {\n          return VAR_43;\n        }\n#endif /* COMMENT_8 */\n#if !VAR_33\n#if VAR_44\n        case VAR_45:\n        case VAR_46:\n        case VAR_47:\n        case VAR_48:\n        case VAR_49:\n        case VAR_50:\n#endif /* COMMENT_9 */\n        case VAR_51:\n        {\n          return VAR_52;\n        }\n#endif /* COMMENT_10 */\n        default:\n        {\n          break;\n        }\n      }\n\n      JERRY_ASSERT (ecma_object_check_class_name_is_object (VAR_0));\n      return VAR_24;\n    }\n    default:\n    {\n      JERRY_ASSERT (VAR_1 == VAR_53 || VAR_1 == VAR_21);\n\n      return VAR_24;\n    }\n  }\n}",
  "func_graph_path_before": "jerryscript-project/jerryscript/b0625e61819e1f5823f16f2463f5def4ab16bdfb/ecma-objects.c/vul/before/1.json",
  "func": "lit_magic_string_id_t\necma_object_get_class_name (ecma_object_t *obj_p) /**< object */\n{\n  ecma_object_type_t type = ecma_get_object_type (obj_p);\n\n  switch (type)\n  {\n    case ECMA_OBJECT_TYPE_ARRAY:\n    case ECMA_OBJECT_TYPE_BUILT_IN_ARRAY:\n    {\n      return LIT_MAGIC_STRING_ARRAY_UL;\n    }\n    case ECMA_OBJECT_TYPE_CLASS:\n    case ECMA_OBJECT_TYPE_BUILT_IN_CLASS:\n    {\n      ecma_extended_object_t *ext_object_p = (ecma_extended_object_t *) obj_p;\n\n      switch (ext_object_p->u.cls.type)\n      {\n#if JERRY_BUILTIN_TYPEDARRAY\n        case ECMA_OBJECT_CLASS_TYPEDARRAY:\n        {\n          return ecma_get_typedarray_magic_string_id (ext_object_p->u.cls.u1.typedarray_type);\n        }\n#endif /* JERRY_BUILTIN_TYPEDARRAY */\n#if JERRY_BUILTIN_CONTAINER\n        case ECMA_OBJECT_CLASS_CONTAINER:\n        {\n          return (lit_magic_string_id_t) ext_object_p->u.cls.u2.container_id;\n        }\n#endif /* JERRY_BUILTIN_CONTAINER */\n        default:\n        {\n          break;\n        }\n      }\n\n      JERRY_ASSERT (ext_object_p->u.cls.type < ECMA_OBJECT_CLASS__MAX);\n      JERRY_ASSERT (ecma_class_object_magic_string_id[ext_object_p->u.cls.type] != LIT_MAGIC_STRING__EMPTY);\n\n      return (lit_magic_string_id_t) ecma_class_object_magic_string_id[ext_object_p->u.cls.type];\n    }\n    case ECMA_OBJECT_TYPE_FUNCTION:\n    case ECMA_OBJECT_TYPE_NATIVE_FUNCTION:\n    case ECMA_OBJECT_TYPE_BOUND_FUNCTION:\n    case ECMA_OBJECT_TYPE_BUILT_IN_FUNCTION:\n    case ECMA_OBJECT_TYPE_CONSTRUCTOR_FUNCTION:\n    {\n      return LIT_MAGIC_STRING_FUNCTION_UL;\n    }\n#if JERRY_BUILTIN_PROXY\n    case ECMA_OBJECT_TYPE_PROXY:\n    {\n      ecma_proxy_object_t *proxy_obj_p = (ecma_proxy_object_t *) obj_p;\n\n      if (!ecma_is_value_null (proxy_obj_p->target) && ecma_is_value_object (proxy_obj_p->target))\n      {\n        ecma_object_t *target_obj_p = ecma_get_object_from_value (proxy_obj_p->target);\n        return ecma_object_get_class_name (target_obj_p);\n      }\n      return LIT_MAGIC_STRING_OBJECT_UL;\n    }\n#endif /* JERRY_BUILTIN_PROXY */\n    case ECMA_OBJECT_TYPE_BUILT_IN_GENERAL:\n    {\n      ecma_extended_object_t *ext_obj_p = (ecma_extended_object_t *) obj_p;\n\n      switch (ext_obj_p->u.built_in.id)\n      {\n#if JERRY_BUILTIN_MATH\n        case ECMA_BUILTIN_ID_MATH:\n        {\n          return LIT_MAGIC_STRING_MATH_UL;\n        }\n#endif /* JERRY_BUILTIN_MATH */\n#if JERRY_BUILTIN_REFLECT\n        case ECMA_BUILTIN_ID_REFLECT:\n        {\n          return LIT_MAGIC_STRING_REFLECT_UL;\n        }\n#endif /* JERRY_BUILTIN_REFLECT */\n#if JERRY_ESNEXT\n        case ECMA_BUILTIN_ID_GENERATOR:\n        {\n          return LIT_MAGIC_STRING_GENERATOR_UL;\n        }\n        case ECMA_BUILTIN_ID_ASYNC_GENERATOR:\n        {\n          return LIT_MAGIC_STRING_ASYNC_GENERATOR_UL;\n        }\n#endif /* JERRY_ESNEXT */\n#if JERRY_BUILTIN_JSON\n        case ECMA_BUILTIN_ID_JSON:\n        {\n          return LIT_MAGIC_STRING_JSON_U;\n        }\n#endif /* JERRY_BUILTIN_JSON */\n#if JERRY_BUILTIN_ATOMICS\n        case ECMA_BUILTIN_ID_ATOMICS:\n        {\n          return LIT_MAGIC_STRING_ATOMICS_U;\n        }\n#endif /* JERRY_BUILTIN_ATOMICS */\n#if !JERRY_ESNEXT\n#if JERRY_BUILTIN_ERRORS\n        case ECMA_BUILTIN_ID_EVAL_ERROR_PROTOTYPE:\n        case ECMA_BUILTIN_ID_RANGE_ERROR_PROTOTYPE:\n        case ECMA_BUILTIN_ID_REFERENCE_ERROR_PROTOTYPE:\n        case ECMA_BUILTIN_ID_SYNTAX_ERROR_PROTOTYPE:\n        case ECMA_BUILTIN_ID_TYPE_ERROR_PROTOTYPE:\n        case ECMA_BUILTIN_ID_URI_ERROR_PROTOTYPE:\n#endif /* JERRY_BUILTIN_ERRORS */\n        case ECMA_BUILTIN_ID_ERROR_PROTOTYPE:\n        {\n          return LIT_MAGIC_STRING_ERROR_UL;\n        }\n#endif /* !JERRY_ESNEXT */\n        default:\n        {\n          break;\n        }\n      }\n\n      JERRY_ASSERT (ecma_object_check_class_name_is_object (obj_p));\n      return LIT_MAGIC_STRING_OBJECT_UL;\n    }\n    default:\n    {\n      JERRY_ASSERT (type == ECMA_OBJECT_TYPE_GENERAL || type == ECMA_OBJECT_TYPE_PROXY);\n\n      return LIT_MAGIC_STRING_OBJECT_UL;\n    }\n  }\n}",
  "abstract_func": "lit_magic_string_id_t\necma_object_get_class_name (ecma_object_t *VAR_0) /* COMMENT_0 */\n{\n  ecma_object_type_t VAR_1 = ecma_get_object_type (VAR_0);\n\n  switch (VAR_1)\n  {\n    case VAR_2:\n    case VAR_3:\n    {\n      return VAR_4;\n    }\n    case VAR_5:\n    case VAR_6:\n    {\n      ecma_extended_object_t *VAR_7 = (ecma_extended_object_t *) VAR_0;\n\n      switch (VAR_7->u.cls.type)\n      {\n#if VAR_8\n        case VAR_9:\n        {\n          return ecma_get_typedarray_magic_string_id (VAR_7->u.cls.u1.typedarray_type);\n        }\n#endif /* COMMENT_1 */\n#if VAR_10\n        case VAR_11:\n        {\n          return (lit_magic_string_id_t) VAR_7->u.cls.u2.container_id;\n        }\n#endif /* COMMENT_2 */\n        default:\n        {\n          break;\n        }\n      }\n\n      JERRY_ASSERT (VAR_7->u.cls.type < VAR_12);\n      JERRY_ASSERT (VAR_13[VAR_7->u.cls.type] != VAR_14);\n\n      return (lit_magic_string_id_t) VAR_13[VAR_7->u.cls.type];\n    }\n    case VAR_15:\n    case VAR_16:\n    case VAR_17:\n    case VAR_18:\n    case VAR_19:\n    {\n      return VAR_20;\n    }\n#if VAR_21\n    case VAR_22:\n    {\n      ecma_proxy_object_t *VAR_23 = (ecma_proxy_object_t *) VAR_0;\n\n      if (!ecma_is_value_null (VAR_23->target) && ecma_is_value_object (VAR_23->target))\n      {\n        ecma_object_t *VAR_24 = ecma_get_object_from_value (VAR_23->target);\n        return ecma_object_get_class_name (VAR_24);\n      }\n      return VAR_25;\n    }\n#endif /* COMMENT_3 */\n    case VAR_26:\n    {\n      ecma_extended_object_t *VAR_27 = (ecma_extended_object_t *) VAR_0;\n\n      switch (VAR_27->u.built_in.id)\n      {\n#if VAR_28\n        case VAR_29:\n        {\n          return VAR_30;\n        }\n#endif /* COMMENT_4 */\n#if VAR_31\n        case VAR_32:\n        {\n          return VAR_33;\n        }\n#endif /* COMMENT_5 */\n#if VAR_34\n        case VAR_35:\n        {\n          return VAR_36;\n        }\n        case VAR_37:\n        {\n          return VAR_38;\n        }\n#endif /* COMMENT_6 */\n#if VAR_39\n        case VAR_40:\n        {\n          return VAR_41;\n        }\n#endif /* COMMENT_7 */\n#if VAR_42\n        case VAR_43:\n        {\n          return VAR_44;\n        }\n#endif /* COMMENT_8 */\n#if !VAR_34\n#if VAR_45\n        case VAR_46:\n        case VAR_47:\n        case VAR_48:\n        case VAR_49:\n        case VAR_50:\n        case VAR_51:\n#endif /* COMMENT_9 */\n        case VAR_52:\n        {\n          return VAR_53;\n        }\n#endif /* COMMENT_10 */\n        default:\n        {\n          break;\n        }\n      }\n\n      JERRY_ASSERT (ecma_object_check_class_name_is_object (VAR_0));\n      return VAR_25;\n    }\n    default:\n    {\n      JERRY_ASSERT (VAR_1 == VAR_54 || VAR_1 == VAR_22);\n\n      return VAR_25;\n    }\n  }\n}",
  "func_graph_path": "jerryscript-project/jerryscript/b0625e61819e1f5823f16f2463f5def4ab16bdfb/ecma-objects.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -44,6 +44,7 @@\n     case ECMA_OBJECT_TYPE_NATIVE_FUNCTION:\n     case ECMA_OBJECT_TYPE_BOUND_FUNCTION:\n     case ECMA_OBJECT_TYPE_BUILT_IN_FUNCTION:\n+    case ECMA_OBJECT_TYPE_CONSTRUCTOR_FUNCTION:\n     {\n       return LIT_MAGIC_STRING_FUNCTION_UL;\n     }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "    case ECMA_OBJECT_TYPE_CONSTRUCTOR_FUNCTION:"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/jerryscript-project/jerryscript/pull/4954",
  "description": {
    "pr_info": {
      "title": "Add missing object types for ecma_object_get_class_name",
      "number": 4954
    },
    "comment": [
      "This patch fixes #4937 and fixes #4938.\r\n\r\nJerryScript-DCO-1.0-Signed-off-by: Robert Fancsik robert.fancsik@h-lab.eu\r\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\nThe patch adds a missing case for constructor functions in determining class names, fixing a functional bug without security implications.\n\n**Final Output:**\nAnalysis: The patch adds handling for ECMA_OBJECT_TYPE_CONSTRUCTOR_FUNCTION in ecma_object_get_class_name, addressing missing object type handling. No security vulnerability is indicated as it's a functional fix.\nFinal Classification: Defect Remediation & Feature Upgrades\nConfidence Score: 0.9"
}