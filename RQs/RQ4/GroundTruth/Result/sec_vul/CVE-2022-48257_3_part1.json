{
  "cve_id": "CVE-2022-48257",
  "cwe_ids": [
    "CWE-Other",
    "CWE-732"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
  "cvss_is_v3": true,
  "repo_name": "MisterTea/EternalTerminal",
  "commit_msg": "Unify logfile names and create with more secure open options and perms.\n\nFixes #555 (Tribute to Colin McRae)",
  "commit_hash": "4a8b02d5f1afb38b00c77ab1321d5f56720f4e30",
  "git_url": "https://github.com/MisterTea/EternalTerminal/commit/4a8b02d5f1afb38b00c77ab1321d5f56720f4e30",
  "file_path": "src/htm/HtmServerMain.cpp",
  "func_name": "main",
  "func_before": "int main(int argc, char **argv) {\n  // Version string need to be set before GFLAGS parse arguments\n  GOOGLE_PROTOBUF_VERIFY_VERSION;\n  srand(1);\n\n  // Setup easylogging configurations\n  el::Configurations defaultConf =\n      et::LogHandler::setupLogHandler(&argc, &argv);\n  defaultConf.setGlobally(el::ConfigurationType::ToStandardOutput, \"false\");\n  el::Loggers::setVerboseLevel(3);\n  // default max log file size is 20MB for etserver\n  string maxlogsize = \"20971520\";\n  LogHandler::setupLogFile(&defaultConf, GetTempDirectory() + \"htmd.log\",\n                           maxlogsize);\n  // Redirect std streams to a file\n  LogHandler::stderrToFile(GetTempDirectory() + \"htmd\");\n\n  // Reconfigure default logger to apply settings above\n  el::Loggers::reconfigureLogger(\"default\", defaultConf);\n\n  et::HandleTerminate();\n\n  // Override easylogging handler for sigint\n  ::signal(SIGINT, et::InterruptSignalHandler);\n\n  shared_ptr<SocketHandler> socketHandler(new PipeSocketHandler());\n  SocketEndpoint endpoint;\n  endpoint.set_name(HtmServer::getPipeName());\n  HtmServer htm(socketHandler, endpoint);\n  htm.run();\n  LOG(INFO) << \"Server is shutting down\";\n\n  return 0;\n}",
  "abstract_func_before": "int main(int VAR_0, char **VAR_1) {\n  /* COMMENT_0 */\n  VAR_2;\n  srand(1);\n\n  /* COMMENT_1 */\n  el::Configurations VAR_3 =\n      et::LogHandler::setupLogHandler(&VAR_0, &VAR_1);\n  VAR_3.setGlobally(el::ConfigurationType::ToStandardOutput, \"false\");\n  el::Loggers::setVerboseLevel(3);\n  /* COMMENT_2 */\n  string VAR_4 = \"20971520\";\n  LogHandler::setupLogFile(&VAR_3, GetTempDirectory() + \"htmd.log\",\n                           VAR_4);\n  /* COMMENT_3 */\n  LogHandler::stderrToFile(GetTempDirectory() + \"htmd\");\n\n  /* COMMENT_4 */\n  el::Loggers::reconfigureLogger(\"default\", VAR_3);\n\n  et::HandleTerminate();\n\n  /* COMMENT_5 */\n  ::signal(VAR_5, et::InterruptSignalHandler);\n\n  shared_ptr<SocketHandler> VAR_6(new PipeSocketHandler());\n  SocketEndpoint VAR_7;\n  VAR_7.set_name(HtmServer::getPipeName());\n  HtmServer htm(socketHandler, endpoint);\n  VAR_8.run();\n  LOG(VAR_9) << \"Server is shutting down\";\n\n  return 0;\n}",
  "func_graph_path_before": "MisterTea/EternalTerminal/4a8b02d5f1afb38b00c77ab1321d5f56720f4e30/HtmServerMain.cpp/vul/before/0.json",
  "func": "int main(int argc, char **argv) {\n  // Version string need to be set before GFLAGS parse arguments\n  GOOGLE_PROTOBUF_VERIFY_VERSION;\n  srand(1);\n\n  // Setup easylogging configurations\n  el::Configurations defaultConf =\n      et::LogHandler::setupLogHandler(&argc, &argv);\n  el::Loggers::setVerboseLevel(3);\n  LogHandler::setupLogFiles(&defaultConf, GetTempDirectory(), \"htmd\", false,\n                            true);\n\n  // Reconfigure default logger to apply settings above\n  el::Loggers::reconfigureLogger(\"default\", defaultConf);\n\n  et::HandleTerminate();\n\n  // Override easylogging handler for sigint\n  ::signal(SIGINT, et::InterruptSignalHandler);\n\n  shared_ptr<SocketHandler> socketHandler(new PipeSocketHandler());\n  SocketEndpoint endpoint;\n  endpoint.set_name(HtmServer::getPipeName());\n  HtmServer htm(socketHandler, endpoint);\n  htm.run();\n  LOG(INFO) << \"Server is shutting down\";\n\n  return 0;\n}",
  "abstract_func": "int main(int VAR_0, char **VAR_1) {\n  /* COMMENT_0 */\n  VAR_2;\n  srand(1);\n\n  /* COMMENT_1 */\n  el::Configurations VAR_3 =\n      et::LogHandler::setupLogHandler(&VAR_0, &VAR_1);\n  el::Loggers::setVerboseLevel(3);\n  LogHandler::setupLogFiles(&VAR_3, GetTempDirectory(), \"htmd\", false,\n                            true);\n\n  /* COMMENT_2 */\n  el::Loggers::reconfigureLogger(\"default\", VAR_3);\n\n  et::HandleTerminate();\n\n  /* COMMENT_3 */\n  ::signal(VAR_4, et::InterruptSignalHandler);\n\n  shared_ptr<SocketHandler> VAR_5(new PipeSocketHandler());\n  SocketEndpoint VAR_6;\n  VAR_6.set_name(HtmServer::getPipeName());\n  HtmServer htm(socketHandler, endpoint);\n  VAR_7.run();\n  LOG(VAR_8) << \"Server is shutting down\";\n\n  return 0;\n}",
  "func_graph_path": "MisterTea/EternalTerminal/4a8b02d5f1afb38b00c77ab1321d5f56720f4e30/HtmServerMain.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,14 +6,9 @@\n   // Setup easylogging configurations\n   el::Configurations defaultConf =\n       et::LogHandler::setupLogHandler(&argc, &argv);\n-  defaultConf.setGlobally(el::ConfigurationType::ToStandardOutput, \"false\");\n   el::Loggers::setVerboseLevel(3);\n-  // default max log file size is 20MB for etserver\n-  string maxlogsize = \"20971520\";\n-  LogHandler::setupLogFile(&defaultConf, GetTempDirectory() + \"htmd.log\",\n-                           maxlogsize);\n-  // Redirect std streams to a file\n-  LogHandler::stderrToFile(GetTempDirectory() + \"htmd\");\n+  LogHandler::setupLogFiles(&defaultConf, GetTempDirectory(), \"htmd\", false,\n+                            true);\n \n   // Reconfigure default logger to apply settings above\n   el::Loggers::reconfigureLogger(\"default\", defaultConf);",
  "diff_line_info": {
    "deleted_lines": [
      "  defaultConf.setGlobally(el::ConfigurationType::ToStandardOutput, \"false\");",
      "  // default max log file size is 20MB for etserver",
      "  string maxlogsize = \"20971520\";",
      "  LogHandler::setupLogFile(&defaultConf, GetTempDirectory() + \"htmd.log\",",
      "                           maxlogsize);",
      "  // Redirect std streams to a file",
      "  LogHandler::stderrToFile(GetTempDirectory() + \"htmd\");"
    ],
    "added_lines": [
      "  LogHandler::setupLogFiles(&defaultConf, GetTempDirectory(), \"htmd\", false,",
      "                            true);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/MisterTea/EternalTerminal/pull/556",
  "description": {
    "pr_info": {
      "title": "Logfile open mode and permission plus location configurability.",
      "number": 556
    },
    "comment": [
      "This addresses #555\r\n\r\nTesting:\r\n```\r\n❯ ./et --help                                                                                                                                                                                                       11:50:47  12.20.22\r\nRemote shell for the busy and impatient\r\nUsage:\r\n  et [OPTION...] [user@]host[:port]\r\n\r\n  Note that 'host' can be a hostname or ipv4 address with or without a port\r\n  or an ipv6 address. If the ipv6 address is abbreviated with :: then it must\r\n  be specfied without a port (use -p,--port).\r\n\r\n  -h, --help                 Print help\r\n      --version              Print version\r\n  -u, --username             Username\r\n      --host arg             Remote host name\r\n  -p, --port arg             Remote machine etserver port (default: 2022)\r\n  -c, --command arg          Run command on connect\r\n      --terminal-path arg    Path to etterminal on server side. Use if\r\n                             etterminal is not on the system path.\r\n  -t, --tunnel arg           Tunnel: Array of source:destination ports or\r\n                             srcStart-srcEnd:dstStart-dstEnd (inclusive) port\r\n                             ranges (e.g. 10080:80,10443:443,\r\n                             10090-10092:8000-8002)\r\n  -r, --reversetunnel arg    Reverse Tunnel: Array of source:destination\r\n                             ports or srcStart-srcEnd:dstStart-dstEnd (inclusive)\r\n                             port ranges\r\n      --jumphost arg         jumphost between localhost and destination\r\n      --jport arg            Jumphost machine port (default: 2022)\r\n  -x, --kill-other-sessions  kill all old sessions belonging to the user\r\n      --macserver            Set when connecting to an macOS server.  Sets\r\n                             --terminal-path=/usr/local/bin/etterminal\r\n  -v, --verbose arg          Enable verbose logging (default: 0)\r\n  -k, --keepalive arg        Client keepalive duration in seconds\r\n  -l, --logdir arg           Base directory for log files. (default: /tmp/)\r\n...\r\n```\r\n\r\n```\r\n ✔  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ls -la /tmp/etclient*                                                                                                                                                                                             11:48:40  12.20.22\r\nzsh: no matches found: /tmp/etclient*\r\n ↵ 1  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ./et dev:8080                                                                                                                                                                                                     11:48:51  12.20.22\r\nCould not reach the ET server: dev:8080\r\n\r\n ↵ 1  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ls -la /tmp/etclient*                                                                                                                                                                                             11:49:13  12.20.22\r\n-rw------- 1 jwshort users 4416 Dec 20 11:49 /tmp/etclient-2022-12-20_11-49-09.log\r\n-rw------- 1 jwshort users   52 Dec 20 11:49 /tmp/etclient-stderr-2022-12-20_11-49-09.log\r\n```\r\n\r\n```\r\n ✔  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ls -la ~/etclient-*                                                                                                                                                                                               11:49:16  12.20.22\r\nzsh: no matches found: /home/jwshort/etclient-*\r\n ↵ 1  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ./et dev:8080 --logdir ~/                                                                                                                                                                                         11:50:21  12.20.22\r\nCould not reach the ET server: dev:8080\r\n\r\n ↵ 1  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ls -la ~/etclient-*                                                                                                                                                                                               11:50:44  12.20.22\r\n-rw------- 1 jwshort users 4416 Dec 20 11:50 /home/jwshort/etclient-2022-12-20_11-50-41.log\r\n-rw------- 1 jwshort users   52 Dec 20 11:50 /home/jwshort/etclient-stderr-2022-12-20_11-50-41.log\r\n```\r\n\r\n```\r\n ✔  ⚙  jwshort@  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ls -la /tmp/etserver-*                                                                                                                                                                                            11:53:45  12.20.22\r\nzsh: no matches found: /tmp/etserver-*\r\n ↵ 1  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ cat et.cfg                                                                                                                                                                                                        11:53:46  12.20.22\r\n; et.cfg : Config file for Eternal Terminal\r\n;\r\n\r\n[Networking]\r\nport = 2022\r\n# bind_ip = 0.0.0.0\r\n\r\n[Debug]\r\nverbose = 0\r\nsilent = 0\r\nlogsize = 20971520\r\ntelemetry = 1\r\n ✔  ⚙  jwshort ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ./etserver --cfgfile=et.cfg                                                                                                                                                                                       11:53:54  12.20.22\r\n^C\r\nGot interrupt (perhaps ctrl+c?): 2.  Exiting.\r\n\r\n ↵ 2  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ls -la /tmp/etserver-*                                                                                                                                                                                            11:54:25  12.20.22\r\n-rw------- 1 jwshort users 393 Dec 20 11:54 /tmp/etserver-2022-12-20_11-54-20.log\r\n-rw------- 1 jwshort users  73 Dec 20 11:54 /tmp/etserver-stderr-2022-12-20_11-54-20.log\r\n ✔  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ vim et.cfg                                                                                                                                                                                                        11:54:27  12.20.22\r\n ✔  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ cat et.cfg                                                                                                                                                                                                        11:54:42  12.20.22\r\n; et.cfg : Config file for Eternal Terminal\r\n;\r\n\r\n[Networking]\r\nport = 2022\r\n# bind_ip = 0.0.0.0\r\n\r\n[Debug]\r\nverbose = 0\r\nsilent = 0\r\nlogsize = 20971520\r\nlogdirectory = /home/jwshort\r\ntelemetry = 1\r\n ✔  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ./etserver --cfgfile=et.cfg                                                                                                                                                                                       11:54:44  12.20.22\r\n^C\r\nGot interrupt (perhaps ctrl+c?): 2.  Exiting.\r\n\r\n ↵ 2  ⚙  jwshort  ~/git/EternalTerminal/build   logfile_location_perms \r\n ❯ ls -la ~/etserver-*                                                                                                                                                                                               11:54:55  12.20.22\r\n-rw------- 1 jwshort users 393 Dec 20 11:54 /home/jwshort/etserver-2022-12-20_11-54-48.log\r\n-rw------- 1 jwshort users  73 Dec 20 11:54 /home/jwshort/etserver-stderr-2022-12-20_11-54-48.log\r\n```\r\n\r\n",
      "# [Codecov](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) Report\nBase: **73.02**% // Head: **72.97**% // Decreases project coverage by **`-0.05%`** :warning:\n> Coverage data is based on head [(`04e64d4`)](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) compared to base [(`7289e04`)](https://codecov.io/gh/MisterTea/EternalTerminal/commit/7289e04475a8418d376cbc7ecbcc580e23c42bb7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci).\n> Patch coverage: 76.31% of modified lines in pull request are covered.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #556      +/-   ##\n==========================================\n- Coverage   73.02%   72.97%   -0.06%     \n==========================================\n  Files          50       50              \n  Lines        3029     3049      +20     \n==========================================\n+ Hits         2212     2225      +13     \n- Misses        817      824       +7     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci) | Coverage Δ | |\n|---|---|---|\n| [src/base/LogHandler.cpp](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL2Jhc2UvTG9nSGFuZGxlci5jcHA=) | `81.35% <74.28%> (+18.19%)` | :arrow_up: |\n| [test/Main.cpp](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-dGVzdC9NYWluLmNwcA==) | `100.00% <100.00%> (ø)` | |\n| [src/base/ServerConnection.cpp](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL2Jhc2UvU2VydmVyQ29ubmVjdGlvbi5jcHA=) | `70.75% <0.00%> (-6.61%)` | :arrow_down: |\n| [src/terminal/UserTerminalHandler.cpp](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL3Rlcm1pbmFsL1VzZXJUZXJtaW5hbEhhbmRsZXIuY3Bw) | `70.00% <0.00%> (-1.27%)` | :arrow_down: |\n| [src/base/Connection.cpp](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci#diff-c3JjL2Jhc2UvQ29ubmVjdGlvbi5jcHA=) | `87.82% <0.00%> (-0.87%)` | :arrow_down: |\n\nHelp us with your feedback. Take ten seconds to tell us [how you rate us](https://about.codecov.io/nps?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci). Have a feature suggestion? [Share it here.](https://app.codecov.io/gh/feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci)\n\n</details>\n\n[:umbrella: View full report at Codecov](https://codecov.io/gh/MisterTea/EternalTerminal/pull/556?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci).   \n:loudspeaker: Do you have feedback about the report comment? [Let us know in this issue](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Jason+Gauci).\n",
      "Hi, I saw there were two CVEs assigned to this: CVE-2022-48257 and CVE-2022-48258.\r\n\r\nIs there a reason why this is not merged yet? Thanks!"
    ]
  },
  "Bug Filter": "** Security Vulnerability Fix\n\n**Confidence Score:** 0.9\n\nThe changes are clearly aimed at securing log file creation, addressing a potential vulnerability. The confidence is high due to the explicit mention of security improvements and the code changes indicating secure file handling practices.",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\n**Analysis:**\n\n1. **Commit Message:** The message highlights the unification of logfile names and the use of more secure open options and permissions. This suggests a focus on enhancing security.\n\n2. **Code Diff:** The changes involve replacing the setupLogFile function with setupLogFiles, which includes additional parameters likely related to security. The new function call suggests improved handling of file creation, possibly with enhanced permissions or secure file creation options.\n\n3. **Security Impact:** The patch addresses potential insecure file handling, such as insufficient permissions, which could allow unauthorized access to sensitive log data. This directly impacts confidentiality and integrity.\n\n**Final Classification:** Security Vulnerability Fix\n\n**Confidence Score:** 0.9\n\nThe changes are clearly aimed at securing log file creation, addressing a potential vulnerability. The confidence is high due to the explicit mention of security improvements and the code changes indicating secure file handling practices."
}