{
  "cve_id": "CVE-2022-38155",
  "cwe_ids": [
    "CWE-770"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "Samsung/mTower",
  "commit_msg": "Fixed CVE-2022-38155, CVE-2022-40762\n\nSigned-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>",
  "commit_hash": "236357f0e756f0fd2120a1a78cf573765471e088",
  "git_url": "https://github.com/Samsung/mTower/commit/236357f0e756f0fd2120a1a78cf573765471e088",
  "file_path": "tee/lib/libutee/tee_user_mem.c",
  "func_name": "tee_user_mem_realloc",
  "func_before": "void *tee_user_mem_realloc(void *buffer, size_t len)\n{\n//  return utee_realloc(buffer, len);\n  return realloc(buffer, len);\n}",
  "abstract_func_before": "void *tee_user_mem_realloc(void *VAR_0, size_t VAR_1)\n{\n/* COMMENT_0 */\n  return realloc(VAR_0, VAR_1);\n}",
  "func_graph_path_before": "Samsung/mTower/236357f0e756f0fd2120a1a78cf573765471e088/tee_user_mem.c/vul/before/0.json",
  "func": "void *tee_user_mem_realloc(void *buffer, size_t len)\n{\n\tuint8_t *p;\n\tvoid* limit = &__HeapLimit;\n\tvoid* base = &__HeapBase;\n\n\tif ((limit - base)/2 < len + 8)\n\t\treturn NULL;\n\tp = realloc(buffer, len);\n\tif ( base + ((limit - base)/2) < p + len) {\n\t\tfree(p);\n\t\treturn NULL;\n\t}\n//   return utee_realloc(buffer, len);\n\treturn p;\n}",
  "abstract_func": "void *tee_user_mem_realloc(void *VAR_0, size_t VAR_1)\n{\n\tuint8_t *VAR_2;\n\tvoid* VAR_3 = &VAR_4;\n\tvoid* VAR_5 = &VAR_6;\n\n\tif ((VAR_3 - VAR_5)/2 < VAR_1 + 8)\n\t\treturn NULL;\n\tVAR_2 = realloc(VAR_0, VAR_1);\n\tif ( VAR_5 + ((VAR_3 - VAR_5)/2) < VAR_2 + VAR_1) {\n\t\tfree(VAR_2);\n\t\treturn NULL;\n\t}\n/* COMMENT_0 */\n\treturn VAR_2;\n}",
  "func_graph_path": "Samsung/mTower/236357f0e756f0fd2120a1a78cf573765471e088/tee_user_mem.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,16 @@\n void *tee_user_mem_realloc(void *buffer, size_t len)\n {\n-//  return utee_realloc(buffer, len);\n-  return realloc(buffer, len);\n+\tuint8_t *p;\n+\tvoid* limit = &__HeapLimit;\n+\tvoid* base = &__HeapBase;\n+\n+\tif ((limit - base)/2 < len + 8)\n+\t\treturn NULL;\n+\tp = realloc(buffer, len);\n+\tif ( base + ((limit - base)/2) < p + len) {\n+\t\tfree(p);\n+\t\treturn NULL;\n+\t}\n+//   return utee_realloc(buffer, len);\n+\treturn p;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "//  return utee_realloc(buffer, len);",
      "  return realloc(buffer, len);"
    ],
    "added_lines": [
      "\tuint8_t *p;",
      "\tvoid* limit = &__HeapLimit;",
      "\tvoid* base = &__HeapBase;",
      "",
      "\tif ((limit - base)/2 < len + 8)",
      "\t\treturn NULL;",
      "\tp = realloc(buffer, len);",
      "\tif ( base + ((limit - base)/2) < p + len) {",
      "\t\tfree(p);",
      "\t\treturn NULL;",
      "\t}",
      "//   return utee_realloc(buffer, len);",
      "\treturn p;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Samsung/mTower/pull/86",
  "description": {
    "pr_info": {
      "title": "Fixed CVE-2022-38155, CVE-2022-40762",
      "number": 86
    },
    "comment": [
      "Signed-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>\r\n\r\n# Description\r\n\r\n\r\nFixes #82 #83 #74\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n# Checklist:\r\n\r\n- [x] My code follows the style guidelines of this project\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [ ] Any dependent changes have been merged and published in downstream modules"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 1.0",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch addresses known security vulnerabilities (CVE-2022-38155, CVE-2022-40762) by adding memory allocation checks to prevent overflow, thus mitigating potential security risks.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 1.0"
}