{
  "cve_id": "CVE-2016-7163",
  "cwe_ids": [
    "CWE-190"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "uclouvain/openjpeg",
  "commit_msg": "Fix an integer overflow issue (#809)\n\nPrevent an integer overflow issue in function opj_pi_create_decode of\r\npi.c.",
  "commit_hash": "c16bc057ba3f125051c9966cf1f5b68a05681de4",
  "git_url": "https://github.com/uclouvain/openjpeg/commit/c16bc057ba3f125051c9966cf1f5b68a05681de4",
  "file_path": "src/lib/openjp2/pi.c",
  "func_name": "opj_pi_create_decode",
  "func_before": "opj_pi_iterator_t *opj_pi_create_decode(opj_image_t *p_image,\n\t\t\t\t\t\t\t\t\t\topj_cp_t *p_cp,\n\t\t\t\t\t\t\t\t\t\tOPJ_UINT32 p_tile_no)\n{\n\t/* loop */\n\tOPJ_UINT32 pino;\n\tOPJ_UINT32 compno, resno;\n\n\t/* to store w, h, dx and dy fro all components and resolutions */\n\tOPJ_UINT32 * l_tmp_data;\n\tOPJ_UINT32 ** l_tmp_ptr;\n\n\t/* encoding prameters to set */\n\tOPJ_UINT32 l_max_res;\n\tOPJ_UINT32 l_max_prec;\n\tOPJ_INT32 l_tx0,l_tx1,l_ty0,l_ty1;\n\tOPJ_UINT32 l_dx_min,l_dy_min;\n\tOPJ_UINT32 l_bound;\n\tOPJ_UINT32 l_step_p , l_step_c , l_step_r , l_step_l ;\n\tOPJ_UINT32 l_data_stride;\n\n\t/* pointers */\n\topj_pi_iterator_t *l_pi = 00;\n\topj_tcp_t *l_tcp = 00;\n\tconst opj_tccp_t *l_tccp = 00;\n\topj_pi_comp_t *l_current_comp = 00;\n\topj_image_comp_t * l_img_comp = 00;\n\topj_pi_iterator_t * l_current_pi = 00;\n\tOPJ_UINT32 * l_encoding_value_ptr = 00;\n\n\t/* preconditions in debug */\n\tassert(p_cp != 00);\n\tassert(p_image != 00);\n\tassert(p_tile_no < p_cp->tw * p_cp->th);\n\n\t/* initializations */\n\tl_tcp = &p_cp->tcps[p_tile_no];\n\tl_bound = l_tcp->numpocs+1;\n\n\tl_data_stride = 4 * OPJ_J2K_MAXRLVLS;\n\tl_tmp_data = (OPJ_UINT32*)opj_malloc(\n\t\tl_data_stride * p_image->numcomps * sizeof(OPJ_UINT32));\n\tif\n\t\t(! l_tmp_data)\n\t{\n\t\treturn 00;\n\t}\n\tl_tmp_ptr = (OPJ_UINT32**)opj_malloc(\n\t\tp_image->numcomps * sizeof(OPJ_UINT32 *));\n\tif\n\t\t(! l_tmp_ptr)\n\t{\n\t\topj_free(l_tmp_data);\n\t\treturn 00;\n\t}\n\n\t/* memory allocation for pi */\n\tl_pi = opj_pi_create(p_image, p_cp, p_tile_no);\n\tif (!l_pi) {\n\t\topj_free(l_tmp_data);\n\t\topj_free(l_tmp_ptr);\n\t\treturn 00;\n\t}\n\n\tl_encoding_value_ptr = l_tmp_data;\n\t/* update pointer array */\n\tfor\n\t\t(compno = 0; compno < p_image->numcomps; ++compno)\n\t{\n\t\tl_tmp_ptr[compno] = l_encoding_value_ptr;\n\t\tl_encoding_value_ptr += l_data_stride;\n\t}\n\t/* get encoding parameters */\n\topj_get_all_encoding_parameters(p_image,p_cp,p_tile_no,&l_tx0,&l_tx1,&l_ty0,&l_ty1,&l_dx_min,&l_dy_min,&l_max_prec,&l_max_res,l_tmp_ptr);\n\n\t/* step calculations */\n\tl_step_p = 1;\n\tl_step_c = l_max_prec * l_step_p;\n\tl_step_r = p_image->numcomps * l_step_c;\n\tl_step_l = l_max_res * l_step_r;\n\n\t/* set values for first packet iterator */\n\tl_current_pi = l_pi;\n\n\t/* memory allocation for include */\n\tl_current_pi->include = (OPJ_INT16*) opj_calloc((l_tcp->numlayers +1) * l_step_l, sizeof(OPJ_INT16));\n\tif\n\t\t(!l_current_pi->include)\n\t{\n\t\topj_free(l_tmp_data);\n\t\topj_free(l_tmp_ptr);\n\t\topj_pi_destroy(l_pi, l_bound);\n\t\treturn 00;\n\t}\n\n\t/* special treatment for the first packet iterator */\n\tl_current_comp = l_current_pi->comps;\n\tl_img_comp = p_image->comps;\n\tl_tccp = l_tcp->tccps;\n\n\tl_current_pi->tx0 = l_tx0;\n\tl_current_pi->ty0 = l_ty0;\n\tl_current_pi->tx1 = l_tx1;\n\tl_current_pi->ty1 = l_ty1;\n\n\t/*l_current_pi->dx = l_img_comp->dx;*/\n\t/*l_current_pi->dy = l_img_comp->dy;*/\n\n\tl_current_pi->step_p = l_step_p;\n\tl_current_pi->step_c = l_step_c;\n\tl_current_pi->step_r = l_step_r;\n\tl_current_pi->step_l = l_step_l;\n\n\t/* allocation for components and number of components has already been calculated by opj_pi_create */\n\tfor\n\t\t(compno = 0; compno < l_current_pi->numcomps; ++compno)\n\t{\n\t\topj_pi_resolution_t *l_res = l_current_comp->resolutions;\n\t\tl_encoding_value_ptr = l_tmp_ptr[compno];\n\n\t\tl_current_comp->dx = l_img_comp->dx;\n\t\tl_current_comp->dy = l_img_comp->dy;\n\t\t/* resolutions have already been initialized */\n\t\tfor\n\t\t\t(resno = 0; resno < l_current_comp->numresolutions; resno++)\n\t\t{\n\t\t\tl_res->pdx = *(l_encoding_value_ptr++);\n\t\t\tl_res->pdy = *(l_encoding_value_ptr++);\n\t\t\tl_res->pw =  *(l_encoding_value_ptr++);\n\t\t\tl_res->ph =  *(l_encoding_value_ptr++);\n\t\t\t++l_res;\n\t\t}\n\t\t++l_current_comp;\n\t\t++l_img_comp;\n\t\t++l_tccp;\n\t}\n\t++l_current_pi;\n\n\tfor (pino = 1 ; pino<l_bound ; ++pino )\n\t{\n\t\tl_current_comp = l_current_pi->comps;\n\t\tl_img_comp = p_image->comps;\n\t\tl_tccp = l_tcp->tccps;\n\n\t\tl_current_pi->tx0 = l_tx0;\n\t\tl_current_pi->ty0 = l_ty0;\n\t\tl_current_pi->tx1 = l_tx1;\n\t\tl_current_pi->ty1 = l_ty1;\n\t\t/*l_current_pi->dx = l_dx_min;*/\n\t\t/*l_current_pi->dy = l_dy_min;*/\n\t\tl_current_pi->step_p = l_step_p;\n\t\tl_current_pi->step_c = l_step_c;\n\t\tl_current_pi->step_r = l_step_r;\n\t\tl_current_pi->step_l = l_step_l;\n\n\t\t/* allocation for components and number of components has already been calculated by opj_pi_create */\n\t\tfor\n\t\t\t(compno = 0; compno < l_current_pi->numcomps; ++compno)\n\t\t{\n\t\t\topj_pi_resolution_t *l_res = l_current_comp->resolutions;\n\t\t\tl_encoding_value_ptr = l_tmp_ptr[compno];\n\n\t\t\tl_current_comp->dx = l_img_comp->dx;\n\t\t\tl_current_comp->dy = l_img_comp->dy;\n\t\t\t/* resolutions have already been initialized */\n\t\t\tfor\n\t\t\t\t(resno = 0; resno < l_current_comp->numresolutions; resno++)\n\t\t\t{\n\t\t\t\tl_res->pdx = *(l_encoding_value_ptr++);\n\t\t\t\tl_res->pdy = *(l_encoding_value_ptr++);\n\t\t\t\tl_res->pw =  *(l_encoding_value_ptr++);\n\t\t\t\tl_res->ph =  *(l_encoding_value_ptr++);\n\t\t\t\t++l_res;\n\t\t\t}\n\t\t\t++l_current_comp;\n\t\t\t++l_img_comp;\n\t\t\t++l_tccp;\n\t\t}\n\t\t/* special treatment*/\n\t\tl_current_pi->include = (l_current_pi-1)->include;\n\t\t++l_current_pi;\n\t}\n\topj_free(l_tmp_data);\n\tl_tmp_data = 00;\n\topj_free(l_tmp_ptr);\n\tl_tmp_ptr = 00;\n\tif\n\t\t(l_tcp->POC)\n\t{\n\t\topj_pi_update_decode_poc (l_pi,l_tcp,l_max_prec,l_max_res);\n\t}\n\telse\n\t{\n\t\topj_pi_update_decode_not_poc(l_pi,l_tcp,l_max_prec,l_max_res);\n\t}\n\treturn l_pi;\n}",
  "abstract_func_before": "opj_pi_iterator_t *opj_pi_create_decode(opj_image_t *VAR_0,\n\t\t\t\t\t\t\t\t\t\topj_cp_t *VAR_1,\n\t\t\t\t\t\t\t\t\t\tOPJ_UINT32 VAR_2)\n{\n\t/* COMMENT_0 */\n\tOPJ_UINT32 VAR_3;\n\tOPJ_UINT32 VAR_4, VAR_5;\n\n\t/* COMMENT_1 */\n\tOPJ_UINT32 * VAR_6;\n\tOPJ_UINT32 ** VAR_7;\n\n\t/* COMMENT_2 */\n\tOPJ_UINT32 VAR_8;\n\tOPJ_UINT32 VAR_9;\n\tOPJ_INT32 VAR_10,VAR_11,VAR_12,VAR_13;\n\tOPJ_UINT32 VAR_14,VAR_15;\n\tOPJ_UINT32 VAR_16;\n\tOPJ_UINT32 VAR_17 , VAR_18 , VAR_19 , VAR_20 ;\n\tOPJ_UINT32 VAR_21;\n\n\t/* COMMENT_3 */\n\topj_pi_iterator_t *VAR_22 = 00;\n\topj_tcp_t *VAR_23 = 00;\n\tconst opj_tccp_t *VAR_24 = 00;\n\topj_pi_comp_t *VAR_25 = 00;\n\topj_image_comp_t * VAR_26 = 00;\n\topj_pi_iterator_t * VAR_27 = 00;\n\tOPJ_UINT32 * VAR_28 = 00;\n\n\t/* COMMENT_4 */\n\tassert(VAR_1 != 00);\n\tassert(VAR_0 != 00);\n\tassert(VAR_2 < VAR_1->tw * VAR_1->th);\n\n\t/* COMMENT_5 */\n\tVAR_23 = &VAR_1->tcps[VAR_2];\n\tVAR_16 = VAR_23->numpocs+1;\n\n\tVAR_21 = 4 * VAR_29;\n\tVAR_6 = (OPJ_UINT32*)opj_malloc(\n\t\tVAR_21 * VAR_0->numcomps * sizeof(OPJ_UINT32));\n\tif\n\t\t(! VAR_6)\n\t{\n\t\treturn 00;\n\t}\n\tVAR_7 = (OPJ_UINT32**)opj_malloc(\n\t\tVAR_0->numcomps * sizeof(OPJ_UINT32 *));\n\tif\n\t\t(! VAR_7)\n\t{\n\t\topj_free(VAR_6);\n\t\treturn 00;\n\t}\n\n\t/* COMMENT_6 */\n\tVAR_22 = opj_pi_create(VAR_0, VAR_1, VAR_2);\n\tif (!VAR_22) {\n\t\topj_free(VAR_6);\n\t\topj_free(VAR_7);\n\t\treturn 00;\n\t}\n\n\tVAR_28 = VAR_6;\n\t/* COMMENT_7 */\n\tfor\n\t\t(VAR_4 = 0; VAR_4 < VAR_0->numcomps; ++VAR_4)\n\t{\n\t\tVAR_7[VAR_4] = VAR_28;\n\t\tVAR_28 += VAR_21;\n\t}\n\t/* COMMENT_8 */\n\topj_get_all_encoding_parameters(VAR_0,VAR_1,VAR_2,&VAR_10,&VAR_11,&VAR_12,&VAR_13,&VAR_14,&VAR_15,&VAR_9,&VAR_8,VAR_7);\n\n\t/* COMMENT_9 */\n\tVAR_17 = 1;\n\tVAR_18 = VAR_9 * VAR_17;\n\tVAR_19 = VAR_0->numcomps * VAR_18;\n\tVAR_20 = VAR_8 * VAR_19;\n\n\t/* COMMENT_10 */\n\tVAR_27 = VAR_22;\n\n\t/* COMMENT_11 */\n\tVAR_27->include = (OPJ_INT16*) opj_calloc((VAR_23->numlayers +1) * VAR_20, sizeof(OPJ_INT16));\n\tif\n\t\t(!VAR_27->include)\n\t{\n\t\topj_free(VAR_6);\n\t\topj_free(VAR_7);\n\t\topj_pi_destroy(VAR_22, VAR_16);\n\t\treturn 00;\n\t}\n\n\t/* COMMENT_12 */\n\tVAR_25 = VAR_27->comps;\n\tVAR_26 = VAR_0->comps;\n\tVAR_24 = VAR_23->tccps;\n\n\tVAR_27->tx0 = VAR_10;\n\tVAR_27->ty0 = VAR_12;\n\tVAR_27->tx1 = VAR_11;\n\tVAR_27->ty1 = VAR_13;\n\n\t/* COMMENT_13 */\n\t/* COMMENT_14 */\n\n\tVAR_27->step_p = VAR_17;\n\tVAR_27->step_c = VAR_18;\n\tVAR_27->step_r = VAR_19;\n\tVAR_27->step_l = VAR_20;\n\n\t/* COMMENT_15 */\n\tfor\n\t\t(VAR_4 = 0; VAR_4 < VAR_27->numcomps; ++VAR_4)\n\t{\n\t\topj_pi_resolution_t *VAR_30 = VAR_25->resolutions;\n\t\tVAR_28 = VAR_7[VAR_4];\n\n\t\tVAR_25->dx = VAR_26->dx;\n\t\tVAR_25->dy = VAR_26->dy;\n\t\t/* COMMENT_16 */\n\t\tfor\n\t\t\t(VAR_5 = 0; VAR_5 < VAR_25->numresolutions; VAR_5++)\n\t\t{\n\t\t\tVAR_30->pdx = *(VAR_28++);\n\t\t\tVAR_30->pdy = *(VAR_28++);\n\t\t\tVAR_30->pw =  *(VAR_28++);\n\t\t\tVAR_30->ph =  *(VAR_28++);\n\t\t\t++VAR_30;\n\t\t}\n\t\t++VAR_25;\n\t\t++VAR_26;\n\t\t++VAR_24;\n\t}\n\t++VAR_27;\n\n\tfor (VAR_3 = 1 ; VAR_3<VAR_16 ; ++VAR_3 )\n\t{\n\t\tVAR_25 = VAR_27->comps;\n\t\tVAR_26 = VAR_0->comps;\n\t\tVAR_24 = VAR_23->tccps;\n\n\t\tVAR_27->tx0 = VAR_10;\n\t\tVAR_27->ty0 = VAR_12;\n\t\tVAR_27->tx1 = VAR_11;\n\t\tVAR_27->ty1 = VAR_13;\n\t\t/* COMMENT_17 */\n\t\t/* COMMENT_18 */\n\t\tVAR_27->step_p = VAR_17;\n\t\tVAR_27->step_c = VAR_18;\n\t\tVAR_27->step_r = VAR_19;\n\t\tVAR_27->step_l = VAR_20;\n\n\t\t/* COMMENT_15 */\n\t\tfor\n\t\t\t(VAR_4 = 0; VAR_4 < VAR_27->numcomps; ++VAR_4)\n\t\t{\n\t\t\topj_pi_resolution_t *VAR_30 = VAR_25->resolutions;\n\t\t\tVAR_28 = VAR_7[VAR_4];\n\n\t\t\tVAR_25->dx = VAR_26->dx;\n\t\t\tVAR_25->dy = VAR_26->dy;\n\t\t\t/* COMMENT_16 */\n\t\t\tfor\n\t\t\t\t(VAR_5 = 0; VAR_5 < VAR_25->numresolutions; VAR_5++)\n\t\t\t{\n\t\t\t\tVAR_30->pdx = *(VAR_28++);\n\t\t\t\tVAR_30->pdy = *(VAR_28++);\n\t\t\t\tVAR_30->pw =  *(VAR_28++);\n\t\t\t\tVAR_30->ph =  *(VAR_28++);\n\t\t\t\t++VAR_30;\n\t\t\t}\n\t\t\t++VAR_25;\n\t\t\t++VAR_26;\n\t\t\t++VAR_24;\n\t\t}\n\t\t/* COMMENT_19 */\n\t\tVAR_27->include = (VAR_27-1)->include;\n\t\t++VAR_27;\n\t}\n\topj_free(VAR_6);\n\tVAR_6 = 00;\n\topj_free(VAR_7);\n\tVAR_7 = 00;\n\tif\n\t\t(VAR_23->POC)\n\t{\n\t\topj_pi_update_decode_poc (VAR_22,VAR_23,VAR_9,VAR_8);\n\t}\n\telse\n\t{\n\t\topj_pi_update_decode_not_poc(VAR_22,VAR_23,VAR_9,VAR_8);\n\t}\n\treturn VAR_22;\n}",
  "func_graph_path_before": "uclouvain/openjpeg/c16bc057ba3f125051c9966cf1f5b68a05681de4/pi.c/vul/before/0.json",
  "func": "opj_pi_iterator_t *opj_pi_create_decode(opj_image_t *p_image,\n\t\t\t\t\t\t\t\t\t\topj_cp_t *p_cp,\n\t\t\t\t\t\t\t\t\t\tOPJ_UINT32 p_tile_no)\n{\n\t/* loop */\n\tOPJ_UINT32 pino;\n\tOPJ_UINT32 compno, resno;\n\n\t/* to store w, h, dx and dy fro all components and resolutions */\n\tOPJ_UINT32 * l_tmp_data;\n\tOPJ_UINT32 ** l_tmp_ptr;\n\n\t/* encoding prameters to set */\n\tOPJ_UINT32 l_max_res;\n\tOPJ_UINT32 l_max_prec;\n\tOPJ_INT32 l_tx0,l_tx1,l_ty0,l_ty1;\n\tOPJ_UINT32 l_dx_min,l_dy_min;\n\tOPJ_UINT32 l_bound;\n\tOPJ_UINT32 l_step_p , l_step_c , l_step_r , l_step_l ;\n\tOPJ_UINT32 l_data_stride;\n\n\t/* pointers */\n\topj_pi_iterator_t *l_pi = 00;\n\topj_tcp_t *l_tcp = 00;\n\tconst opj_tccp_t *l_tccp = 00;\n\topj_pi_comp_t *l_current_comp = 00;\n\topj_image_comp_t * l_img_comp = 00;\n\topj_pi_iterator_t * l_current_pi = 00;\n\tOPJ_UINT32 * l_encoding_value_ptr = 00;\n\n\t/* preconditions in debug */\n\tassert(p_cp != 00);\n\tassert(p_image != 00);\n\tassert(p_tile_no < p_cp->tw * p_cp->th);\n\n\t/* initializations */\n\tl_tcp = &p_cp->tcps[p_tile_no];\n\tl_bound = l_tcp->numpocs+1;\n\n\tl_data_stride = 4 * OPJ_J2K_MAXRLVLS;\n\tl_tmp_data = (OPJ_UINT32*)opj_malloc(\n\t\tl_data_stride * p_image->numcomps * sizeof(OPJ_UINT32));\n\tif\n\t\t(! l_tmp_data)\n\t{\n\t\treturn 00;\n\t}\n\tl_tmp_ptr = (OPJ_UINT32**)opj_malloc(\n\t\tp_image->numcomps * sizeof(OPJ_UINT32 *));\n\tif\n\t\t(! l_tmp_ptr)\n\t{\n\t\topj_free(l_tmp_data);\n\t\treturn 00;\n\t}\n\n\t/* memory allocation for pi */\n\tl_pi = opj_pi_create(p_image, p_cp, p_tile_no);\n\tif (!l_pi) {\n\t\topj_free(l_tmp_data);\n\t\topj_free(l_tmp_ptr);\n\t\treturn 00;\n\t}\n\n\tl_encoding_value_ptr = l_tmp_data;\n\t/* update pointer array */\n\tfor\n\t\t(compno = 0; compno < p_image->numcomps; ++compno)\n\t{\n\t\tl_tmp_ptr[compno] = l_encoding_value_ptr;\n\t\tl_encoding_value_ptr += l_data_stride;\n\t}\n\t/* get encoding parameters */\n\topj_get_all_encoding_parameters(p_image,p_cp,p_tile_no,&l_tx0,&l_tx1,&l_ty0,&l_ty1,&l_dx_min,&l_dy_min,&l_max_prec,&l_max_res,l_tmp_ptr);\n\n\t/* step calculations */\n\tl_step_p = 1;\n\tl_step_c = l_max_prec * l_step_p;\n\tl_step_r = p_image->numcomps * l_step_c;\n\tl_step_l = l_max_res * l_step_r;\n\n\t/* set values for first packet iterator */\n\tl_current_pi = l_pi;\n\n\t/* memory allocation for include */\n\t/* prevent an integer overflow issue */\n\tl_current_pi->include = 00;\n\tif (l_step_l <= (SIZE_MAX / (l_tcp->numlayers + 1U)))\n\t{\n\t\tl_current_pi->include = (OPJ_INT16*) opj_calloc((l_tcp->numlayers +1) * l_step_l, sizeof(OPJ_INT16));\n\t}\n\n\tif\n\t\t(!l_current_pi->include)\n\t{\n\t\topj_free(l_tmp_data);\n\t\topj_free(l_tmp_ptr);\n\t\topj_pi_destroy(l_pi, l_bound);\n\t\treturn 00;\n\t}\n\n\t/* special treatment for the first packet iterator */\n\tl_current_comp = l_current_pi->comps;\n\tl_img_comp = p_image->comps;\n\tl_tccp = l_tcp->tccps;\n\n\tl_current_pi->tx0 = l_tx0;\n\tl_current_pi->ty0 = l_ty0;\n\tl_current_pi->tx1 = l_tx1;\n\tl_current_pi->ty1 = l_ty1;\n\n\t/*l_current_pi->dx = l_img_comp->dx;*/\n\t/*l_current_pi->dy = l_img_comp->dy;*/\n\n\tl_current_pi->step_p = l_step_p;\n\tl_current_pi->step_c = l_step_c;\n\tl_current_pi->step_r = l_step_r;\n\tl_current_pi->step_l = l_step_l;\n\n\t/* allocation for components and number of components has already been calculated by opj_pi_create */\n\tfor\n\t\t(compno = 0; compno < l_current_pi->numcomps; ++compno)\n\t{\n\t\topj_pi_resolution_t *l_res = l_current_comp->resolutions;\n\t\tl_encoding_value_ptr = l_tmp_ptr[compno];\n\n\t\tl_current_comp->dx = l_img_comp->dx;\n\t\tl_current_comp->dy = l_img_comp->dy;\n\t\t/* resolutions have already been initialized */\n\t\tfor\n\t\t\t(resno = 0; resno < l_current_comp->numresolutions; resno++)\n\t\t{\n\t\t\tl_res->pdx = *(l_encoding_value_ptr++);\n\t\t\tl_res->pdy = *(l_encoding_value_ptr++);\n\t\t\tl_res->pw =  *(l_encoding_value_ptr++);\n\t\t\tl_res->ph =  *(l_encoding_value_ptr++);\n\t\t\t++l_res;\n\t\t}\n\t\t++l_current_comp;\n\t\t++l_img_comp;\n\t\t++l_tccp;\n\t}\n\t++l_current_pi;\n\n\tfor (pino = 1 ; pino<l_bound ; ++pino )\n\t{\n\t\tl_current_comp = l_current_pi->comps;\n\t\tl_img_comp = p_image->comps;\n\t\tl_tccp = l_tcp->tccps;\n\n\t\tl_current_pi->tx0 = l_tx0;\n\t\tl_current_pi->ty0 = l_ty0;\n\t\tl_current_pi->tx1 = l_tx1;\n\t\tl_current_pi->ty1 = l_ty1;\n\t\t/*l_current_pi->dx = l_dx_min;*/\n\t\t/*l_current_pi->dy = l_dy_min;*/\n\t\tl_current_pi->step_p = l_step_p;\n\t\tl_current_pi->step_c = l_step_c;\n\t\tl_current_pi->step_r = l_step_r;\n\t\tl_current_pi->step_l = l_step_l;\n\n\t\t/* allocation for components and number of components has already been calculated by opj_pi_create */\n\t\tfor\n\t\t\t(compno = 0; compno < l_current_pi->numcomps; ++compno)\n\t\t{\n\t\t\topj_pi_resolution_t *l_res = l_current_comp->resolutions;\n\t\t\tl_encoding_value_ptr = l_tmp_ptr[compno];\n\n\t\t\tl_current_comp->dx = l_img_comp->dx;\n\t\t\tl_current_comp->dy = l_img_comp->dy;\n\t\t\t/* resolutions have already been initialized */\n\t\t\tfor\n\t\t\t\t(resno = 0; resno < l_current_comp->numresolutions; resno++)\n\t\t\t{\n\t\t\t\tl_res->pdx = *(l_encoding_value_ptr++);\n\t\t\t\tl_res->pdy = *(l_encoding_value_ptr++);\n\t\t\t\tl_res->pw =  *(l_encoding_value_ptr++);\n\t\t\t\tl_res->ph =  *(l_encoding_value_ptr++);\n\t\t\t\t++l_res;\n\t\t\t}\n\t\t\t++l_current_comp;\n\t\t\t++l_img_comp;\n\t\t\t++l_tccp;\n\t\t}\n\t\t/* special treatment*/\n\t\tl_current_pi->include = (l_current_pi-1)->include;\n\t\t++l_current_pi;\n\t}\n\topj_free(l_tmp_data);\n\tl_tmp_data = 00;\n\topj_free(l_tmp_ptr);\n\tl_tmp_ptr = 00;\n\tif\n\t\t(l_tcp->POC)\n\t{\n\t\topj_pi_update_decode_poc (l_pi,l_tcp,l_max_prec,l_max_res);\n\t}\n\telse\n\t{\n\t\topj_pi_update_decode_not_poc(l_pi,l_tcp,l_max_prec,l_max_res);\n\t}\n\treturn l_pi;\n}",
  "abstract_func": "opj_pi_iterator_t *opj_pi_create_decode(opj_image_t *VAR_0,\n\t\t\t\t\t\t\t\t\t\topj_cp_t *VAR_1,\n\t\t\t\t\t\t\t\t\t\tOPJ_UINT32 VAR_2)\n{\n\t/* COMMENT_0 */\n\tOPJ_UINT32 VAR_3;\n\tOPJ_UINT32 VAR_4, VAR_5;\n\n\t/* COMMENT_1 */\n\tOPJ_UINT32 * VAR_6;\n\tOPJ_UINT32 ** VAR_7;\n\n\t/* COMMENT_2 */\n\tOPJ_UINT32 VAR_8;\n\tOPJ_UINT32 VAR_9;\n\tOPJ_INT32 VAR_10,VAR_11,VAR_12,VAR_13;\n\tOPJ_UINT32 VAR_14,VAR_15;\n\tOPJ_UINT32 VAR_16;\n\tOPJ_UINT32 VAR_17 , VAR_18 , VAR_19 , VAR_20 ;\n\tOPJ_UINT32 VAR_21;\n\n\t/* COMMENT_3 */\n\topj_pi_iterator_t *VAR_22 = 00;\n\topj_tcp_t *VAR_23 = 00;\n\tconst opj_tccp_t *VAR_24 = 00;\n\topj_pi_comp_t *VAR_25 = 00;\n\topj_image_comp_t * VAR_26 = 00;\n\topj_pi_iterator_t * VAR_27 = 00;\n\tOPJ_UINT32 * VAR_28 = 00;\n\n\t/* COMMENT_4 */\n\tassert(VAR_1 != 00);\n\tassert(VAR_0 != 00);\n\tassert(VAR_2 < VAR_1->tw * VAR_1->th);\n\n\t/* COMMENT_5 */\n\tVAR_23 = &VAR_1->tcps[VAR_2];\n\tVAR_16 = VAR_23->numpocs+1;\n\n\tVAR_21 = 4 * VAR_29;\n\tVAR_6 = (OPJ_UINT32*)opj_malloc(\n\t\tVAR_21 * VAR_0->numcomps * sizeof(OPJ_UINT32));\n\tif\n\t\t(! VAR_6)\n\t{\n\t\treturn 00;\n\t}\n\tVAR_7 = (OPJ_UINT32**)opj_malloc(\n\t\tVAR_0->numcomps * sizeof(OPJ_UINT32 *));\n\tif\n\t\t(! VAR_7)\n\t{\n\t\topj_free(VAR_6);\n\t\treturn 00;\n\t}\n\n\t/* COMMENT_6 */\n\tVAR_22 = opj_pi_create(VAR_0, VAR_1, VAR_2);\n\tif (!VAR_22) {\n\t\topj_free(VAR_6);\n\t\topj_free(VAR_7);\n\t\treturn 00;\n\t}\n\n\tVAR_28 = VAR_6;\n\t/* COMMENT_7 */\n\tfor\n\t\t(VAR_4 = 0; VAR_4 < VAR_0->numcomps; ++VAR_4)\n\t{\n\t\tVAR_7[VAR_4] = VAR_28;\n\t\tVAR_28 += VAR_21;\n\t}\n\t/* COMMENT_8 */\n\topj_get_all_encoding_parameters(VAR_0,VAR_1,VAR_2,&VAR_10,&VAR_11,&VAR_12,&VAR_13,&VAR_14,&VAR_15,&VAR_9,&VAR_8,VAR_7);\n\n\t/* COMMENT_9 */\n\tVAR_17 = 1;\n\tVAR_18 = VAR_9 * VAR_17;\n\tVAR_19 = VAR_0->numcomps * VAR_18;\n\tVAR_20 = VAR_8 * VAR_19;\n\n\t/* COMMENT_10 */\n\tVAR_27 = VAR_22;\n\n\t/* COMMENT_11 */\n\t/* COMMENT_12 */\n\tVAR_27->include = 00;\n\tif (VAR_20 <= (VAR_30 / (VAR_23->numlayers + 1U)))\n\t{\n\t\tVAR_27->include = (OPJ_INT16*) opj_calloc((VAR_23->numlayers +1) * VAR_20, sizeof(OPJ_INT16));\n\t}\n\n\tif\n\t\t(!VAR_27->include)\n\t{\n\t\topj_free(VAR_6);\n\t\topj_free(VAR_7);\n\t\topj_pi_destroy(VAR_22, VAR_16);\n\t\treturn 00;\n\t}\n\n\t/* COMMENT_13 */\n\tVAR_25 = VAR_27->comps;\n\tVAR_26 = VAR_0->comps;\n\tVAR_24 = VAR_23->tccps;\n\n\tVAR_27->tx0 = VAR_10;\n\tVAR_27->ty0 = VAR_12;\n\tVAR_27->tx1 = VAR_11;\n\tVAR_27->ty1 = VAR_13;\n\n\t/* COMMENT_14 */\n\t/* COMMENT_15 */\n\n\tVAR_27->step_p = VAR_17;\n\tVAR_27->step_c = VAR_18;\n\tVAR_27->step_r = VAR_19;\n\tVAR_27->step_l = VAR_20;\n\n\t/* COMMENT_16 */\n\tfor\n\t\t(VAR_4 = 0; VAR_4 < VAR_27->numcomps; ++VAR_4)\n\t{\n\t\topj_pi_resolution_t *VAR_31 = VAR_25->resolutions;\n\t\tVAR_28 = VAR_7[VAR_4];\n\n\t\tVAR_25->dx = VAR_26->dx;\n\t\tVAR_25->dy = VAR_26->dy;\n\t\t/* COMMENT_17 */\n\t\tfor\n\t\t\t(VAR_5 = 0; VAR_5 < VAR_25->numresolutions; VAR_5++)\n\t\t{\n\t\t\tVAR_31->pdx = *(VAR_28++);\n\t\t\tVAR_31->pdy = *(VAR_28++);\n\t\t\tVAR_31->pw =  *(VAR_28++);\n\t\t\tVAR_31->ph =  *(VAR_28++);\n\t\t\t++VAR_31;\n\t\t}\n\t\t++VAR_25;\n\t\t++VAR_26;\n\t\t++VAR_24;\n\t}\n\t++VAR_27;\n\n\tfor (VAR_3 = 1 ; VAR_3<VAR_16 ; ++VAR_3 )\n\t{\n\t\tVAR_25 = VAR_27->comps;\n\t\tVAR_26 = VAR_0->comps;\n\t\tVAR_24 = VAR_23->tccps;\n\n\t\tVAR_27->tx0 = VAR_10;\n\t\tVAR_27->ty0 = VAR_12;\n\t\tVAR_27->tx1 = VAR_11;\n\t\tVAR_27->ty1 = VAR_13;\n\t\t/* COMMENT_18 */\n\t\t/* COMMENT_19 */\n\t\tVAR_27->step_p = VAR_17;\n\t\tVAR_27->step_c = VAR_18;\n\t\tVAR_27->step_r = VAR_19;\n\t\tVAR_27->step_l = VAR_20;\n\n\t\t/* COMMENT_16 */\n\t\tfor\n\t\t\t(VAR_4 = 0; VAR_4 < VAR_27->numcomps; ++VAR_4)\n\t\t{\n\t\t\topj_pi_resolution_t *VAR_31 = VAR_25->resolutions;\n\t\t\tVAR_28 = VAR_7[VAR_4];\n\n\t\t\tVAR_25->dx = VAR_26->dx;\n\t\t\tVAR_25->dy = VAR_26->dy;\n\t\t\t/* COMMENT_17 */\n\t\t\tfor\n\t\t\t\t(VAR_5 = 0; VAR_5 < VAR_25->numresolutions; VAR_5++)\n\t\t\t{\n\t\t\t\tVAR_31->pdx = *(VAR_28++);\n\t\t\t\tVAR_31->pdy = *(VAR_28++);\n\t\t\t\tVAR_31->pw =  *(VAR_28++);\n\t\t\t\tVAR_31->ph =  *(VAR_28++);\n\t\t\t\t++VAR_31;\n\t\t\t}\n\t\t\t++VAR_25;\n\t\t\t++VAR_26;\n\t\t\t++VAR_24;\n\t\t}\n\t\t/* COMMENT_20 */\n\t\tVAR_27->include = (VAR_27-1)->include;\n\t\t++VAR_27;\n\t}\n\topj_free(VAR_6);\n\tVAR_6 = 00;\n\topj_free(VAR_7);\n\tVAR_7 = 00;\n\tif\n\t\t(VAR_23->POC)\n\t{\n\t\topj_pi_update_decode_poc (VAR_22,VAR_23,VAR_9,VAR_8);\n\t}\n\telse\n\t{\n\t\topj_pi_update_decode_not_poc(VAR_22,VAR_23,VAR_9,VAR_8);\n\t}\n\treturn VAR_22;\n}",
  "func_graph_path": "uclouvain/openjpeg/c16bc057ba3f125051c9966cf1f5b68a05681de4/pi.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -83,7 +83,13 @@\n \tl_current_pi = l_pi;\n \n \t/* memory allocation for include */\n-\tl_current_pi->include = (OPJ_INT16*) opj_calloc((l_tcp->numlayers +1) * l_step_l, sizeof(OPJ_INT16));\n+\t/* prevent an integer overflow issue */\n+\tl_current_pi->include = 00;\n+\tif (l_step_l <= (SIZE_MAX / (l_tcp->numlayers + 1U)))\n+\t{\n+\t\tl_current_pi->include = (OPJ_INT16*) opj_calloc((l_tcp->numlayers +1) * l_step_l, sizeof(OPJ_INT16));\n+\t}\n+\n \tif\n \t\t(!l_current_pi->include)\n \t{",
  "diff_line_info": {
    "deleted_lines": [
      "\tl_current_pi->include = (OPJ_INT16*) opj_calloc((l_tcp->numlayers +1) * l_step_l, sizeof(OPJ_INT16));"
    ],
    "added_lines": [
      "\t/* prevent an integer overflow issue */",
      "\tl_current_pi->include = 00;",
      "\tif (l_step_l <= (SIZE_MAX / (l_tcp->numlayers + 1U)))",
      "\t{",
      "\t\tl_current_pi->include = (OPJ_INT16*) opj_calloc((l_tcp->numlayers +1) * l_step_l, sizeof(OPJ_INT16));",
      "\t}",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/uclouvain/openjpeg/pull/809",
  "description": {
    "pr_info": {
      "title": "Fix an integer overflow issue",
      "number": 809
    },
    "comment": [
      "Prevent an integer overflow issue in function opj_pi_create_decode of\npi.c.\n\nHi, I found an integer overflow issue which could lead to OOB read and OOB write. I'd like to submit the proof-of-concept file and vulnerability report privately. Please give me an email address to report this issue. Thanks.\n\nRegards,\nKe Liu of Tencent's Xuanwu LAB\n",
      "Thanks stweil. I'll use SIZE_MAX which was defined in opj_malloc.c.\nI think there was something wrong with the **travis** build system so the check was not passed.\n\n```\n$ export CC=clang-3.9\n$ clang-3.9 --version\n/home/travis/build.sh: line 45: clang-3.9: command not found\n......\n./tools/travis-ci/run.sh: line 100: clang-3.9: command not found\n```\n\nBTW, the proof-of-concept file and report have been sent via email on 22nd Aug.\n",
      "<a href=\"https:&#x2F;&#x2F;trello.com&#x2F;c&#x2F;bRFBhDNr&#x2F;5-openjpeg-integer-overflow-in-function-opj-pi-create-decode-of-pi-c\"><img src=\"https:&#x2F;&#x2F;github.trello.services&#x2F;images&#x2F;trello-icon.png\" width=\"12\" height=\"12\"> OpenJPEG Integer Overflow in function opj_pi_create_decode of pi.c</a>\n",
      "https://pdfium.googlesource.com/pdfium/+/e865ed12c4a476a4c74bf1ae97d3a6fa8ca06f0a/third_party/libopenjpeg20/0002-packet-iterator.patch\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch addresses an integer overflow issue in memory allocation, preventing potential buffer overflows that could lead to security vulnerabilities.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 0.95"
}