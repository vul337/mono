{
  "cve_id": "CVE-2017-9431",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "grpc",
  "commit_msg": "Fix error overflow bug",
  "commit_hash": "c6ec1155d026c91b1badb07ef1605bb747cff064",
  "git_url": "https://github.com/grpc/grpc/commit/c6ec1155d026c91b1badb07ef1605bb747cff064",
  "file_path": "src/core/lib/iomgr/error.c",
  "func_name": "get_placement",
  "func_before": "static uint8_t get_placement(grpc_error **err, size_t size) {\n  GPR_ASSERT(*err);\n  uint8_t slots = (uint8_t)(size / sizeof(intptr_t));\n  if ((*err)->arena_size + slots > (*err)->arena_capacity) {\n    (*err)->arena_capacity = (uint8_t)(3 * (*err)->arena_capacity / 2);\n    *err = gpr_realloc(\n        *err, sizeof(grpc_error) + (*err)->arena_capacity * sizeof(intptr_t));\n  }\n  uint8_t placement = (*err)->arena_size;\n  (*err)->arena_size = (uint8_t)((*err)->arena_size + slots);\n  return placement;\n}",
  "abstract_func_before": "static uint8_t get_placement(grpc_error **VAR_0, size_t VAR_1) {\n  GPR_ASSERT(*VAR_0);\n  uint8_t VAR_2 = (uint8_t)(VAR_1 / sizeof(intptr_t));\n  if ((*VAR_0)->arena_size + VAR_2 > (*VAR_0)->arena_capacity) {\n    (*VAR_0)->arena_capacity = (uint8_t)(3 * (*VAR_0)->arena_capacity / 2);\n    *VAR_0 = gpr_realloc(\n        *VAR_0, sizeof(grpc_error) + (*VAR_0)->arena_capacity * sizeof(intptr_t));\n  }\n  uint8_t VAR_3 = (*VAR_0)->arena_size;\n  (*VAR_0)->arena_size = (uint8_t)((*VAR_0)->arena_size + VAR_2);\n  return VAR_3;\n}",
  "func_graph_path_before": "grpc/c6ec1155d026c91b1badb07ef1605bb747cff064/error.c/vul/before/2.json",
  "func": "static uint8_t get_placement(grpc_error **err, size_t size) {\n  GPR_ASSERT(*err);\n  uint8_t slots = (uint8_t)(size / sizeof(intptr_t));\n  if ((*err)->arena_size + slots > (*err)->arena_capacity) {\n    (*err)->arena_capacity =\n        (uint8_t)GPR_MIN(UINT8_MAX - 1, (3 * (*err)->arena_capacity / 2));\n    if ((*err)->arena_size + slots > (*err)->arena_capacity) {\n      return UINT8_MAX;\n    }\n    *err = gpr_realloc(\n        *err, sizeof(grpc_error) + (*err)->arena_capacity * sizeof(intptr_t));\n  }\n  uint8_t placement = (*err)->arena_size;\n  (*err)->arena_size = (uint8_t)((*err)->arena_size + slots);\n  return placement;\n}",
  "abstract_func": "static uint8_t get_placement(grpc_error **VAR_0, size_t VAR_1) {\n  GPR_ASSERT(*VAR_0);\n  uint8_t VAR_2 = (uint8_t)(VAR_1 / sizeof(intptr_t));\n  if ((*VAR_0)->arena_size + VAR_2 > (*VAR_0)->arena_capacity) {\n    (*VAR_0)->arena_capacity =\n        (uint8_t)GPR_MIN(VAR_3 - 1, (3 * (*VAR_0)->arena_capacity / 2));\n    if ((*VAR_0)->arena_size + VAR_2 > (*VAR_0)->arena_capacity) {\n      return VAR_3;\n    }\n    *VAR_0 = gpr_realloc(\n        *VAR_0, sizeof(grpc_error) + (*VAR_0)->arena_capacity * sizeof(intptr_t));\n  }\n  uint8_t VAR_4 = (*VAR_0)->arena_size;\n  (*VAR_0)->arena_size = (uint8_t)((*VAR_0)->arena_size + VAR_2);\n  return VAR_4;\n}",
  "func_graph_path": "grpc/c6ec1155d026c91b1badb07ef1605bb747cff064/error.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,7 +2,11 @@\n   GPR_ASSERT(*err);\n   uint8_t slots = (uint8_t)(size / sizeof(intptr_t));\n   if ((*err)->arena_size + slots > (*err)->arena_capacity) {\n-    (*err)->arena_capacity = (uint8_t)(3 * (*err)->arena_capacity / 2);\n+    (*err)->arena_capacity =\n+        (uint8_t)GPR_MIN(UINT8_MAX - 1, (3 * (*err)->arena_capacity / 2));\n+    if ((*err)->arena_size + slots > (*err)->arena_capacity) {\n+      return UINT8_MAX;\n+    }\n     *err = gpr_realloc(\n         *err, sizeof(grpc_error) + (*err)->arena_capacity * sizeof(intptr_t));\n   }",
  "diff_line_info": {
    "deleted_lines": [
      "    (*err)->arena_capacity = (uint8_t)(3 * (*err)->arena_capacity / 2);"
    ],
    "added_lines": [
      "    (*err)->arena_capacity =",
      "        (uint8_t)GPR_MIN(UINT8_MAX - 1, (3 * (*err)->arena_capacity / 2));",
      "    if ((*err)->arena_size + slots > (*err)->arena_capacity) {",
      "      return UINT8_MAX;",
      "    }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/grpc/grpc/pull/10492",
  "description": {
    "pr_info": {
      "title": "Fix Error Overflow Bug",
      "number": 10492
    },
    "comment": [
      "Errors now drop and log data when they are too full. Added the fuzzer that caught this. Also added a new test case to error_test to hit some of this new functionality.",
      "This fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1018",
      "```\nNo significant performance differences\n```",
      "```\nNo significant performance differences\n```",
      "Failures: #9804, Docker python flake"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix  \nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch addresses an integer overflow issue in the get_placement function by ensuring that the arena_capacity does not exceed the maximum value for uint8_t. This prevents potential buffer overflow and related security issues.\n\nFinal Classification: Security Vulnerability Fix  \nConfidence Score: 0.95"
}