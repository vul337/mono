{
  "cve_id": "CVE-2020-11002",
  "cwe_ids": [
    "CWE-74"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "dropwizard",
  "commit_msg": "Disable message interpolation in ConstraintViolations by default (#3208)\n\nDisable message interpolation in ConstraintViolations by default but allow enabling it explicitly with `SelfValidating#escapeExpressions()`.\r\n\r\nAdditionally, `ConstraintViolations` now provides a set of methods which take a map of message parameters for interpolation.\r\nThe message parameters will be escaped by default.\r\n\r\nRefs #3153\r\nRefs #3157",
  "commit_hash": "d5a512f7abf965275f2a6b913ac4fe778e424242",
  "git_url": "https://github.com/dropwizard/dropwizard/commit/d5a512f7abf965275f2a6b913ac4fe778e424242",
  "file_path": "dropwizard-validation/src/main/java/io/dropwizard/validation/selfvalidating/ViolationCollector.java",
  "func_name": "getContext",
  "func_before": "public ConstraintValidatorContext getContext() {\n        return context;\n    }",
  "abstract_func_before": "public ConstraintValidatorContext getContext() {\n        return VAR_0;\n    }",
  "func_graph_path_before": "dropwizard/d5a512f7abf965275f2a6b913ac4fe778e424242/ViolationCollector.java/vul/before/3.json",
  "func": "public ConstraintValidatorContext getContext() {\n        return constraintValidatorContext;\n    }",
  "abstract_func": "public ConstraintValidatorContext getContext() {\n        return VAR_0;\n    }",
  "func_graph_path": "dropwizard/d5a512f7abf965275f2a6b913ac4fe778e424242/ViolationCollector.java/vul/after/3.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,3 +1,3 @@\n public ConstraintValidatorContext getContext() {\n-        return context;\n+        return constraintValidatorContext;\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "        return context;"
    ],
    "added_lines": [
      "        return constraintValidatorContext;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/dropwizard/dropwizard/pull/3208",
  "description": {
    "pr_info": {
      "title": "Disable message interpolation in ConstraintViolations by default",
      "number": 3208
    },
    "comment": [
      "Disable message interpolation in `ConstraintViolations` by default but allow enabling it explicitly with `SelfValidating#escapeExpressions()`.\r\n\r\nAdditionally, `ConstraintViolations` now provides a set of methods which take a map of message parameters for interpolation. These message parameters are be escaped by default.\r\n\r\nThanks to @pwntester and @gsmet for their invaluable input!\r\n\r\nRefs #3153\r\nRefs #3157",
      "LGTM, thanks!"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix  \nConfidence Score: 0.85",
  "Bug Filter Confidence": 0.85,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch disables message interpolation by default and introduces escaping for message parameters, addressing potential security risks like injection attacks. The code change modifies the context handling, supporting these security measures.\n\nFinal Classification: Security Vulnerability Fix  \nConfidence Score: 0.85"
}