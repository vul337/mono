{
  "cve_id": "CVE-2018-25022",
  "cwe_ids": [
    "CWE-200"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "TokTok/c-toxcore",
  "commit_msg": "Restrict packet kinds that can be sent through onion path.",
  "commit_hash": "6b97acb773622f9abca5ef305cd55bdef1ecc484",
  "git_url": "https://github.com/TokTok/c-toxcore/commit/6b97acb773622f9abca5ef305cd55bdef1ecc484",
  "file_path": "toxcore/onion.c",
  "func_name": "handle_recv_1",
  "func_before": "static int handle_recv_1(void *object, IP_Port source, const uint8_t *packet, uint16_t length, void *userdata)\n{\n    Onion *onion = (Onion *)object;\n\n    if (length > ONION_MAX_PACKET_SIZE) {\n        return 1;\n    }\n\n    if (length <= 1 + RETURN_1) {\n        return 1;\n    }\n\n    change_symmetric_key(onion);\n\n    uint8_t plain[SIZE_IPPORT];\n    int len = decrypt_data_symmetric(onion->secret_symmetric_key, packet + 1, packet + 1 + CRYPTO_NONCE_SIZE,\n                                     SIZE_IPPORT + CRYPTO_MAC_SIZE, plain);\n\n    if ((uint32_t)len != SIZE_IPPORT) {\n        return 1;\n    }\n\n    IP_Port send_to;\n\n    if (ipport_unpack(&send_to, plain, len, 1) == -1) {\n        return 1;\n    }\n\n    uint16_t data_len = length - (1 + RETURN_1);\n\n    if (onion->recv_1_function &&\n            send_to.ip.family != TOX_AF_INET &&\n            send_to.ip.family != TOX_AF_INET6) {\n        return onion->recv_1_function(onion->callback_object, send_to, packet + (1 + RETURN_1), data_len);\n    }\n\n    if ((uint32_t)sendpacket(onion->net, send_to, packet + (1 + RETURN_1), data_len) != data_len) {\n        return 1;\n    }\n\n    return 0;\n}",
  "abstract_func_before": "static int handle_recv_1(void *VAR_0, IP_Port VAR_1, const uint8_t *VAR_2, uint16_t VAR_3, void *VAR_4)\n{\n    Onion *VAR_5 = (Onion *)VAR_0;\n\n    if (VAR_3 > VAR_6) {\n        return 1;\n    }\n\n    if (VAR_3 <= 1 + VAR_7) {\n        return 1;\n    }\n\n    change_symmetric_key(VAR_5);\n\n    uint8_t VAR_8[VAR_9];\n    int VAR_10 = decrypt_data_symmetric(VAR_5->secret_symmetric_key, VAR_2 + 1, VAR_2 + 1 + VAR_11,\n                                     VAR_9 + VAR_12, VAR_8);\n\n    if ((uint32_t)VAR_10 != VAR_9) {\n        return 1;\n    }\n\n    IP_Port VAR_13;\n\n    if (ipport_unpack(&VAR_13, VAR_8, VAR_10, 1) == -1) {\n        return 1;\n    }\n\n    uint16_t VAR_14 = VAR_3 - (1 + VAR_7);\n\n    if (VAR_5->recv_1_function &&\n            VAR_13.ip.family != VAR_15 &&\n            VAR_13.ip.family != VAR_16) {\n        return VAR_5->recv_1_function(VAR_5->callback_object, VAR_13, VAR_2 + (1 + VAR_7), VAR_14);\n    }\n\n    if ((uint32_t)sendpacket(VAR_5->net, VAR_13, VAR_2 + (1 + VAR_7), VAR_14) != VAR_14) {\n        return 1;\n    }\n\n    return 0;\n}",
  "func_graph_path_before": "TokTok/c-toxcore/6b97acb773622f9abca5ef305cd55bdef1ecc484/onion.c/vul/before/3.json",
  "func": "static int handle_recv_1(void *object, IP_Port source, const uint8_t *packet, uint16_t length, void *userdata)\n{\n    Onion *onion = (Onion *)object;\n\n    if (length > ONION_MAX_PACKET_SIZE) {\n        return 1;\n    }\n\n    if (length <= 1 + RETURN_1) {\n        return 1;\n    }\n\n    if (packet[1 + RETURN_1] != NET_PACKET_ANNOUNCE_RESPONSE &&\n            packet[1 + RETURN_1] != NET_PACKET_ONION_DATA_RESPONSE) {\n        return 1;\n    }\n\n    change_symmetric_key(onion);\n\n    uint8_t plain[SIZE_IPPORT];\n    int len = decrypt_data_symmetric(onion->secret_symmetric_key, packet + 1, packet + 1 + CRYPTO_NONCE_SIZE,\n                                     SIZE_IPPORT + CRYPTO_MAC_SIZE, plain);\n\n    if ((uint32_t)len != SIZE_IPPORT) {\n        return 1;\n    }\n\n    IP_Port send_to;\n\n    if (ipport_unpack(&send_to, plain, len, 1) == -1) {\n        return 1;\n    }\n\n    uint16_t data_len = length - (1 + RETURN_1);\n\n    if (onion->recv_1_function &&\n            send_to.ip.family != TOX_AF_INET &&\n            send_to.ip.family != TOX_AF_INET6) {\n        return onion->recv_1_function(onion->callback_object, send_to, packet + (1 + RETURN_1), data_len);\n    }\n\n    if ((uint32_t)sendpacket(onion->net, send_to, packet + (1 + RETURN_1), data_len) != data_len) {\n        return 1;\n    }\n\n    return 0;\n}",
  "abstract_func": "static int handle_recv_1(void *VAR_0, IP_Port VAR_1, const uint8_t *VAR_2, uint16_t VAR_3, void *VAR_4)\n{\n    Onion *VAR_5 = (Onion *)VAR_0;\n\n    if (VAR_3 > VAR_6) {\n        return 1;\n    }\n\n    if (VAR_3 <= 1 + VAR_7) {\n        return 1;\n    }\n\n    if (VAR_2[1 + VAR_7] != VAR_8 &&\n            VAR_2[1 + VAR_7] != VAR_9) {\n        return 1;\n    }\n\n    change_symmetric_key(VAR_5);\n\n    uint8_t VAR_10[VAR_11];\n    int VAR_12 = decrypt_data_symmetric(VAR_5->secret_symmetric_key, VAR_2 + 1, VAR_2 + 1 + VAR_13,\n                                     VAR_11 + VAR_14, VAR_10);\n\n    if ((uint32_t)VAR_12 != VAR_11) {\n        return 1;\n    }\n\n    IP_Port VAR_15;\n\n    if (ipport_unpack(&VAR_15, VAR_10, VAR_12, 1) == -1) {\n        return 1;\n    }\n\n    uint16_t VAR_16 = VAR_3 - (1 + VAR_7);\n\n    if (VAR_5->recv_1_function &&\n            VAR_15.ip.family != VAR_17 &&\n            VAR_15.ip.family != VAR_18) {\n        return VAR_5->recv_1_function(VAR_5->callback_object, VAR_15, VAR_2 + (1 + VAR_7), VAR_16);\n    }\n\n    if ((uint32_t)sendpacket(VAR_5->net, VAR_15, VAR_2 + (1 + VAR_7), VAR_16) != VAR_16) {\n        return 1;\n    }\n\n    return 0;\n}",
  "func_graph_path": "TokTok/c-toxcore/6b97acb773622f9abca5ef305cd55bdef1ecc484/onion.c/vul/after/3.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,6 +7,11 @@\n     }\n \n     if (length <= 1 + RETURN_1) {\n+        return 1;\n+    }\n+\n+    if (packet[1 + RETURN_1] != NET_PACKET_ANNOUNCE_RESPONSE &&\n+            packet[1 + RETURN_1] != NET_PACKET_ONION_DATA_RESPONSE) {\n         return 1;\n     }\n ",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        return 1;",
      "    }",
      "",
      "    if (packet[1 + RETURN_1] != NET_PACKET_ANNOUNCE_RESPONSE &&",
      "            packet[1 + RETURN_1] != NET_PACKET_ONION_DATA_RESPONSE) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/TokTok/c-toxcore/pull/872",
  "description": {
    "pr_info": {
      "title": "Restrict packet kinds that can be sent through onion path.",
      "number": 872
    },
    "comment": [
      "\n\n<!-- Reviewable:start -->\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/toktok/c-toxcore/872)\n<!-- Reviewable:end -->\n",
      "[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/TokTok/c-toxcore?pullRequest=872) <br/>All committers have signed the CLA.",
      "I think it's a good idea to limit onion packets to only a restricted set.\n\n---\n\nReview status: 0 of 2 files reviewed at latest revision, all discussions resolved.\n\n---\n\n*[toxcore/onion.c, line 474 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7YLrQ1Ag6kDclW_WI:-LA7YLrQ1Ag6kDclW_WJ:bn8elmg) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L474)):*\n> ```C\n>     }\n> \n>     if (len <= SIZE_IPPORT) {\n> ```\n\nSince there's a check for the exact length above, I don't think this is necessary.\n\n---\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA7ZZyjB0P8bGbehzeP:bk0x5kx) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n> ```C\n>     }\n> \n>     if (plain[SIZE_IPPORT] != NET_PACKET_ANNOUNCE_REQUEST &&\n> ```\n\nIn my opinion it would be better to write pack/unpack functions like `ipport_pack/unpack` instead of modifying the plain packet structure. \n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-:-LA7_FlnCEwhYevRocVh:b-j1251r)*\n<!-- Sent from Reviewable.io -->\n",
      "\n\n\n\nReview status: 0 of 2 files reviewed at latest revision, 2 unresolved discussions.\n\n---\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA8LVR_9MPcza0ZQNOA:b-silgyn) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n<details><summary><i>Previously, sudden6 wrote…</i></summary><blockquote>\n\nIn my opinion it would be better to write pack/unpack functions like `ipport_pack/unpack` instead of modifying the plain packet structure. \n</blockquote></details>\n\nRight. Let's wait for @kurnevsky to help you with this code for a month while you will be stopping him from fixing 0-day vulnerability.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n",
      "\n\n\n\nReview status: 0 of 2 files reviewed at latest revision, 2 unresolved discussions.\n\n---\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA8lotL1FAzQMRIBEVf:b-aldmnq) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n<details><summary><i>Previously, kpp (Roman) wrote…</i></summary><blockquote>\n\nRight. Let's wait for @kurnevsky to help you with this code for a month while you will be stopping him from fixing 0-day vulnerability.\n</blockquote></details>\n\n? I think a proper fix is better than possibly introducing new problems with a bandaid fix.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n",
      "@sudden6 merge this asap and release a new version. Then work on a clean fix. Dont let a flaw in the wild just because of review. ",
      "\n\n\n\n\n\n\n\n*[toxcore/onion.c, line 474 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7YLrQ1Ag6kDclW_WI:-LA8zKAM5uz7imytkLXQ:bl4dpbi) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L474)):*\n<details><summary><i>Previously, sudden6 wrote…</i></summary><blockquote>\n\nSince there's a check for the exact length above, I don't think this is necessary.\n</blockquote></details>\n\nAbove we check only that length of decrypted data is the same as length of encrypted minus mac bytes. There is check \"length <= 1 + SEND_3\" yet above, but it checks only that packet has enough length for onion return.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n",
      "\n\n\n\n\n\n\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA90kKeCuDcNuSZGDz3:b-r4zq94) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n<details><summary><i>Previously, sudden6 wrote…</i></summary><blockquote>\n\n? I think a proper fix is better than possibly introducing new problems with a bandaid fix.\n</blockquote></details>\n\nIt's the way the whole c-toxcore implemented - it doesn't parse packets to structs, it just works with bytes. So I suggest not to refactor it here - refactoring will bring much bigger diff.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n",
      "\n\n\n\nReview status: 0 of 2 files reviewed at latest revision, 2 unresolved discussions.\n\n---\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA9Gn0i6XdDQIKQtrRZ:b-ye8l9a) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n<details><summary><i>Previously, kurnevsky (Evgeny Kurnevsky) wrote…</i></summary><blockquote>\n\nIt's the way the whole c-toxcore implemented - it doesn't parse packets to structs, it just works with bytes. So I suggest not to refactor it here - refactoring will bring much bigger diff.\n</blockquote></details>\n\nThis code needs lots of refactoring later. I think we can defer it for now given the relative urgency.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n",
      "\n\n\n\nReviewed 2 of 2 files at r1.\nReview status: all files reviewed at latest revision, 2 unresolved discussions.\n\n---\n\n*[toxcore/onion.c, line 474 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7YLrQ1Ag6kDclW_WI:-LA9KUXgCdu6o4xVXtum:b1ke8pv) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L474)):*\n<details><summary><i>Previously, kurnevsky (Evgeny Kurnevsky) wrote…</i></summary><blockquote>\n\nAbove we check only that length of decrypted data is the same as length of encrypted minus mac bytes. There is check \"length <= 1 + SEND_3\" yet above, but it checks only that packet has enough length for onion return.\n</blockquote></details>\n\nok, didn't see this, maybe that could be an issue in other functions too, but no need to fix that in this PR\n\n---\n\n*[toxcore/onion.c, line 478 at r1](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-LA7ZZyjB0P8bGbehzeO:-LA9L419BR07rQucaEIt:b-e4ny5t) ([raw file](https://github.com/toktok/c-toxcore/blob/6b97acb773622f9abca5ef305cd55bdef1ecc484/toxcore/onion.c#L478)):*\n<details><summary><i>Previously, iphydf wrote…</i></summary><blockquote>\n\nThis code needs lots of refactoring later. I think we can defer it for now given the relative urgency.\n</blockquote></details>\n\nok for me then\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872)*\n<!-- Sent from Reviewable.io -->\n",
      "<img class=\"emoji\" title=\":lgtm_strong:\" alt=\":lgtm_strong:\" align=\"absmiddle\" src=\"https://reviewable.io/lgtm_strong.png\" height=\"20\" width=\"61\"/>\n\n---\n\nReview status: all files reviewed at latest revision, 1 unresolved discussion.\n\n---\n\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-:-LA9gf17Bo0lgwVFD8qE:b-jbsf8z)*\n<!-- Sent from Reviewable.io -->\n",
      "@iphydf Can this be merged asap plz? Then please release the 0.2.2 in emergency. Now that the flaw is disclosed, it needs to be shiped the fastest we can. Persistent groupchats can wait 0.2.3 so that this can be fixed. And clients can update their static builds.",
      "does this mean all running nodes (including bootstrap nodes and echobot and groupbot) need to be updated aswell to fix this vulnerability?\r\nor can old nodes be tolerated in the wild?",
      "If I understood this correctly, old nodes have to be updated in order to be protected, but will still work.",
      "@zoff99 old nodes have to be updated, but it will be enough to have only one updated node in onion path (3 random nodes) to be protected. Unfortunately it's not enough to update only your node to be protected yourself.",
      "if more serious vulnerabilities may be found in the future, we should think about a mechanism to shut out vulnerable nodes.",
      "Sorry, accidently closed pr.\r\n@zoff99 right, it'd be nice to have a way to get node version for this purpose.",
      "Review is very important just as with any other code, so let's not forget about that please. In the future we should think of a way for people to disclose vulnerabilities in a more secure way that doesn't put users in danger and doesn't cause everyone to panic and think of not reviewing the code. I'm not criticizing anyone here. I know that in this situation you are all doing the best you can :). It's just something that we should try to do better in the future.",
      "It is possible to send BootstrapInfo to all public nodes. There is a u32 as integer version of toxcore lib.",
      "@iphydf how can we make sure a malicous node (custom source code) can not use this or any future vulnerability?",
      "Disclaimer: I'm not very familiar with the onion module, so my review is pretty useless. I can't confirm if there is a vulnerability, or if this patch is complete or if it's correct to limit onion routing to only two of those packet kinds. What I can say, however, is that this patch looks correct as far as C code goes and it makes sense.\n\n<img class=\"emoji\" title=\":lgtm_strong:\" alt=\":lgtm_strong:\" align=\"absmiddle\" src=\"https://reviewable.io/lgtm_strong.png\" height=\"20\" width=\"61\"/>\n\n---\n\nReviewed 2 of 2 files at r1.\nReview status: all files reviewed at latest revision, 1 unresolved discussion, some commit checks broke.\n\n---\n\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-:-LAF7EPf9HYHRJQ6Eofb:bkojgw3)*\n<!-- Sent from Reviewable.io -->\n",
      "<img class=\"emoji\" title=\":lgtm_strong:\" alt=\":lgtm_strong:\" align=\"absmiddle\" src=\"https://reviewable.io/lgtm_strong.png\" height=\"20\" width=\"61\"/>\n\n---\n\nReviewed 2 of 2 files at r1.\nReview status: all files reviewed at latest revision, 1 unresolved discussion, some commit checks broke.\n\n---\n\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/toktok/c-toxcore/872#-:-LAFMPl9549fLg2CmhU7:b-jbsf8z)*\n<!-- Sent from Reviewable.io -->\n",
      "Thank you for both reporting and fixing this! :)\r\nI'm out of time tonight, but I'll push a release with this and #867 (if done, otherwise I'll cherry-pick the commit that fixes with autotools build from it) tomorrow evening.",
      "@kurnevsky Could you explain why is it not enough to update only your node to be protected yourself?",
      "Alright, I figured it out.\r\n\r\nTo answer my own question, the issue is that the final destination of an onion reply has no idea if the packet it received comes from an onion or not.\r\n\r\nFrom the [Tox spec](https://github.com/TokTok/spec/blob/master/spec.md) (linking to the md file because the website doesn't render the diagram for some reason):\r\n\r\n```\r\npeer\r\n  -> [onion1[onion2[onion3[data]]]] -> Node A\r\n  -> [onion2[onion3[data]]][sendbackA] -> Node B\r\n  -> [onion3[data]][sendbackB[sendbackA]] -> Node C\r\n  -> [data][SendbackC[sendbackB[sendbackA]]]-> Node D (end)\r\n\r\nNode D\r\n  -> [SendbackC[sendbackB[sendbackA]]][response] -> Node C\r\n  -> [sendbackB[sendbackA]][response] -> Node B\r\n  -> [sendbackA][response] -> Node A\r\n  -> [response] -> peer\r\n```\r\n\r\nYou can see that when `Node D` sends a reply back to `peer`, `peer` has no idea whether the packet received from `Node A` was sent by `Node A` on her own behalf or on someone else's behalf through onion.",
      "@nurupo you are right, that's why I suggested to restrict packet kinds. In the future we could verify onion paths (that it has at least one updated node), but it seems there is no easy way to get version of dht node. Anyway tox network should be updated (at least partly) to add such check.",
      "We could look into introducing a non-backwards compatible change into the wire protocol such that updated peers wouldn't be able to communicate with older peers, like DHT version bump or something. That way, if you are updated, you are guaranteed to be secure. Also, this would make others users aware of the update going on."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix\nConfidence Score: 0.9",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\nThe patch restricts certain packet types, preventing potential security issues. This change aims to fix a security vulnerability by controlling packet flow through the onion path.\n\n**Final Output:**\nAnalysis: The patch restricts specific packet types, indicating a security measure to prevent unauthorized packet handling.\nFinal Classification: Security Vulnerability Fix\nConfidence Score: 0.9"
}