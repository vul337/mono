{
  "cve_id": "CVE-2022-0695",
  "cwe_ids": [
    "CWE-400"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix DoS in PE/QNX/DYLDCACHE/PSX parsers ##crash\n\n* Reported by lazymio\n* Reproducer: AAA4AAAAAB4=",
  "commit_hash": "634b886e84a5c568d243e744becc6b3223e089cf",
  "git_url": "https://github.com/radareorg/radare2/commit/634b886e84a5c568d243e744becc6b3223e089cf",
  "file_path": "libr/util/buf.c",
  "func_name": "r_buf_read_at",
  "func_before": "R_API st64 r_buf_read_at(RBuffer *b, ut64 addr, ut8 *buf, ut64 len) {\n\tr_return_val_if_fail (b && buf, -1);\n\tst64 o_addr = r_buf_seek (b, 0, R_BUF_CUR);\n\tst64 r = r_buf_seek (b, addr, R_BUF_SET);\n\tif (r < 0) {\n\t\treturn r;\n\t}\n\n\tr = r_buf_read (b, buf, len);\n\tr_buf_seek (b, o_addr, R_BUF_SET);\n\treturn r;\n}",
  "abstract_func_before": "R_API st64 r_buf_read_at(RBuffer *VAR_0, ut64 VAR_1, ut8 *VAR_2, ut64 VAR_3) {\n\tr_return_val_if_fail (VAR_0 && VAR_2, -1);\n\tst64 VAR_4 = r_buf_seek (VAR_0, 0, VAR_5);\n\tst64 VAR_6 = r_buf_seek (VAR_0, VAR_1, VAR_7);\n\tif (VAR_6 < 0) {\n\t\treturn VAR_6;\n\t}\n\n\tVAR_6 = r_buf_read (VAR_0, VAR_2, VAR_3);\n\tr_buf_seek (VAR_0, VAR_4, VAR_7);\n\treturn VAR_6;\n}",
  "func_graph_path_before": null,
  "func": "R_API st64 r_buf_read_at(RBuffer *b, ut64 addr, ut8 *buf, ut64 len) {\n\tr_return_val_if_fail (b && buf, -1);\n\tst64 o_addr = r_buf_seek (b, 0, R_BUF_CUR);\n\tst64 r = r_buf_seek (b, addr, R_BUF_SET);\n\tif (r < 0) {\n\t\treturn r;\n\t}\n\tr = r_buf_read (b, buf, len);\n\tr_buf_seek (b, o_addr, R_BUF_SET);\n\treturn r;\n}",
  "abstract_func": "R_API st64 r_buf_read_at(RBuffer *VAR_0, ut64 VAR_1, ut8 *VAR_2, ut64 VAR_3) {\n\tr_return_val_if_fail (VAR_0 && VAR_2, -1);\n\tst64 VAR_4 = r_buf_seek (VAR_0, 0, VAR_5);\n\tst64 VAR_6 = r_buf_seek (VAR_0, VAR_1, VAR_7);\n\tif (VAR_6 < 0) {\n\t\treturn VAR_6;\n\t}\n\tVAR_6 = r_buf_read (VAR_0, VAR_2, VAR_3);\n\tr_buf_seek (VAR_0, VAR_4, VAR_7);\n\treturn VAR_6;\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -5,7 +5,6 @@\n \tif (r < 0) {\n \t\treturn r;\n \t}\n-\n \tr = r_buf_read (b, buf, len);\n \tr_buf_seek (b, o_addr, R_BUF_SET);\n \treturn r;",
  "diff_line_info": {
    "deleted_lines": [
      ""
    ],
    "added_lines": []
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/19747",
  "description": {
    "pr_info": {
      "title": "Fix DoS in PE/QNX/DYLDCACHE/PSX parsers ##crash",
      "number": 19747
    },
    "comment": [
      "* Reported by lazymio\r\n* Reproducer: AAA4AAAAAB4=\r\n\r\n<!--\r\nRead https://github.com/radareorg/radare2/blob/master/DEVELOPERS.md\r\n* PR title must be capitalized, concise and use ##tags\r\n* If the PR is fixing a ticket use 'Fix #1234 - ..' in the commit message\r\n* Follow the coding style, add tests and documentation if necessary\r\n-->\r\n\r\n- [ ] Mark this if you consider it ready to merge\r\n- [ ] I've added tests (optional)\r\n- [ ] I wrote some lines in the [book](https://github.com/radareorg/radare2book) (optional)\r\n\r\n**Description**\r\n\r\n<!-- explain your changes if necessary -->\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix  \nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The commit addresses a Denial of Service (DoS) vulnerability in specific parsers by modifying the read operation to prevent crashes. The code change removes a blank line and adjusts the read handling, which likely fixes an error that caused a crash when processing certain inputs, thus preventing a DoS.\n\nFinal Classification: Security Vulnerability Fix  \nConfidence Score: 0.95"
}