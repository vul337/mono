{
  "cve_id": "CVE-2021-21430",
  "cwe_ids": [
    "CWE-668"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "OpenAPITools/openapi-generator",
  "commit_msg": "use Files.createTempFile",
  "commit_hash": "2c576483f26f85b3979c6948a131f585c237109a",
  "git_url": "https://github.com/OpenAPITools/openapi-generator/commit/2c576483f26f85b3979c6948a131f585c237109a",
  "file_path": "samples/client/petstore/java/resteasy/src/main/java/org/openapitools/client/ApiClient.java",
  "func_name": "prepareDownloadFile",
  "func_before": "public File prepareDownloadFile(Response response) throws IOException {\n    String filename = null;\n    String contentDisposition = (String) response.getHeaders().getFirst(\"Content-Disposition\");\n    if (contentDisposition != null && !\"\".equals(contentDisposition)) {\n      // Get filename from the Content-Disposition header.\n      Pattern pattern = Pattern.compile(\"filename=['\\\"]?([^'\\\"\\\\s]+)['\\\"]?\");\n      Matcher matcher = pattern.matcher(contentDisposition);\n      if (matcher.find())\n        filename = matcher.group(1);\n    }\n\n    String prefix;\n    String suffix = null;\n    if (filename == null) {\n      prefix = \"download-\";\n      suffix = \"\";\n    } else {\n      int pos = filename.lastIndexOf('.');\n      if (pos == -1) {\n        prefix = filename + \"-\";\n      } else {\n        prefix = filename.substring(0, pos) + \"-\";\n        suffix = filename.substring(pos);\n      }\n      // File.createTempFile requires the prefix to be at least three characters long\n      if (prefix.length() < 3)\n        prefix = \"download-\";\n    }\n\n    if (tempFolderPath == null)\n      return File.createTempFile(prefix, suffix);\n    else\n      return File.createTempFile(prefix, suffix, new File(tempFolderPath));\n  }",
  "abstract_func_before": "public File prepareDownloadFile(Response VAR_0) throws IOException {\n    String VAR_1 = null;\n    String VAR_2 = (String) VAR_0.getHeaders().getFirst(\"Content-Disposition\");\n    if (VAR_2 != null && !\"\".equals(VAR_2)) {\n      /* COMMENT_0 */\n      Pattern VAR_3 = VAR_4.compile(\"filename=['\\\"]?([^'\\\"\\\\s]+)['\\\"]?\");\n      Matcher VAR_5 = VAR_3.matcher(VAR_2);\n      if (VAR_5.find())\n        VAR_1 = VAR_5.group(1);\n    }\n\n    String VAR_6;\n    String VAR_7 = null;\n    if (VAR_1 == null) {\n      VAR_6 = \"download-\";\n      VAR_7 = \"\";\n    } else {\n      int VAR_8 = VAR_1.lastIndexOf('.');\n      if (VAR_8 == -1) {\n        VAR_6 = VAR_1 + \"-\";\n      } else {\n        VAR_6 = VAR_1.substring(0, VAR_8) + \"-\";\n        VAR_7 = VAR_1.substring(VAR_8);\n      }\n      /* COMMENT_1 */\n      if (VAR_6.length() < 3)\n        VAR_6 = \"download-\";\n    }\n\n    if (VAR_9 == null)\n      return VAR_10.createTempFile(VAR_6, VAR_7);\n    else\n      return VAR_10.createTempFile(VAR_6, VAR_7, new File(VAR_9));\n  }",
  "func_graph_path_before": "OpenAPITools/openapi-generator/2c576483f26f85b3979c6948a131f585c237109a/ApiClient.java/vul/before/0.json",
  "func": "public File prepareDownloadFile(Response response) throws IOException {\n    String filename = null;\n    String contentDisposition = (String) response.getHeaders().getFirst(\"Content-Disposition\");\n    if (contentDisposition != null && !\"\".equals(contentDisposition)) {\n      // Get filename from the Content-Disposition header.\n      Pattern pattern = Pattern.compile(\"filename=['\\\"]?([^'\\\"\\\\s]+)['\\\"]?\");\n      Matcher matcher = pattern.matcher(contentDisposition);\n      if (matcher.find())\n        filename = matcher.group(1);\n    }\n\n    String prefix;\n    String suffix = null;\n    if (filename == null) {\n      prefix = \"download-\";\n      suffix = \"\";\n    } else {\n      int pos = filename.lastIndexOf('.');\n      if (pos == -1) {\n        prefix = filename + \"-\";\n      } else {\n        prefix = filename.substring(0, pos) + \"-\";\n        suffix = filename.substring(pos);\n      }\n      // Files.createTempFile requires the prefix to be at least three characters long\n      if (prefix.length() < 3)\n        prefix = \"download-\";\n    }\n\n    if (tempFolderPath == null)\n      return Files.createTempFile(prefix, suffix).toFile();\n    else\n      return Files.createTempFile(Paths.get(tempFolderPath), prefix, suffix).toFile();\n  }",
  "abstract_func": "public File prepareDownloadFile(Response VAR_0) throws IOException {\n    String VAR_1 = null;\n    String VAR_2 = (String) VAR_0.getHeaders().getFirst(\"Content-Disposition\");\n    if (VAR_2 != null && !\"\".equals(VAR_2)) {\n      /* COMMENT_0 */\n      Pattern VAR_3 = VAR_4.compile(\"filename=['\\\"]?([^'\\\"\\\\s]+)['\\\"]?\");\n      Matcher VAR_5 = VAR_3.matcher(VAR_2);\n      if (VAR_5.find())\n        VAR_1 = VAR_5.group(1);\n    }\n\n    String VAR_6;\n    String VAR_7 = null;\n    if (VAR_1 == null) {\n      VAR_6 = \"download-\";\n      VAR_7 = \"\";\n    } else {\n      int VAR_8 = VAR_1.lastIndexOf('.');\n      if (VAR_8 == -1) {\n        VAR_6 = VAR_1 + \"-\";\n      } else {\n        VAR_6 = VAR_1.substring(0, VAR_8) + \"-\";\n        VAR_7 = VAR_1.substring(VAR_8);\n      }\n      /* COMMENT_1 */\n      if (VAR_6.length() < 3)\n        VAR_6 = \"download-\";\n    }\n\n    if (VAR_9 == null)\n      return VAR_10.createTempFile(VAR_6, VAR_7).toFile();\n    else\n      return VAR_10.createTempFile(VAR_11.get(VAR_9), VAR_6, VAR_7).toFile();\n  }",
  "func_graph_path": "OpenAPITools/openapi-generator/2c576483f26f85b3979c6948a131f585c237109a/ApiClient.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -22,13 +22,13 @@\n         prefix = filename.substring(0, pos) + \"-\";\n         suffix = filename.substring(pos);\n       }\n-      // File.createTempFile requires the prefix to be at least three characters long\n+      // Files.createTempFile requires the prefix to be at least three characters long\n       if (prefix.length() < 3)\n         prefix = \"download-\";\n     }\n \n     if (tempFolderPath == null)\n-      return File.createTempFile(prefix, suffix);\n+      return Files.createTempFile(prefix, suffix).toFile();\n     else\n-      return File.createTempFile(prefix, suffix, new File(tempFolderPath));\n+      return Files.createTempFile(Paths.get(tempFolderPath), prefix, suffix).toFile();\n   }",
  "diff_line_info": {
    "deleted_lines": [
      "      // File.createTempFile requires the prefix to be at least three characters long",
      "      return File.createTempFile(prefix, suffix);",
      "      return File.createTempFile(prefix, suffix, new File(tempFolderPath));"
    ],
    "added_lines": [
      "      // Files.createTempFile requires the prefix to be at least three characters long",
      "      return Files.createTempFile(prefix, suffix).toFile();",
      "      return Files.createTempFile(Paths.get(tempFolderPath), prefix, suffix).toFile();"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/8787",
  "description": {
    "pr_info": {
      "title": "[Java] use Files.createTempFile instead",
      "number": 8787
    },
    "comment": [
      "- use Files.createTempFile instead to avoid potential security issues.\r\n\r\n<!-- Please check the completed items below -->\r\n### PR checklist\r\n \r\n- [x] Read the [contribution guidelines](https://github.com/openapitools/openapi-generator/blob/master/CONTRIBUTING.md).\r\n- [x] Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\r\n- [x] Run the following to [build the project](https://github.com/OpenAPITools/openapi-generator#14---build-projects) and update samples:\r\n  ```\r\n  ./mvnw clean package \r\n  ./bin/generate-samples.sh\r\n  ./bin/utils/export_docs_generators.sh\r\n  ``` \r\n  Commit all changed files. \r\n  This is important, as CI jobs will verify _all_ generator outputs of your HEAD commit as it would merge with master. \r\n  These must match the expectations made by your contribution. \r\n  You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example `./bin/generate-samples.sh bin/configs/java*`. \r\n  For Windows users, please run the script in [Git BASH](https://gitforwindows.org/).\r\n- [x] File the PR against the [correct branch](https://github.com/OpenAPITools/openapi-generator/wiki/Git-Branches): `master`, `5.1.x`, `6.0.x`\r\n- [x] If your PR is targeting a particular programming language, @mention the [technical committee](https://github.com/openapitools/openapi-generator/#62---openapi-generator-technical-committee) members, so they are more likely to review the pull request.\r\n\r\ncc @bbdouglas (2017/07) @sreeshas (2017/08) @jfiala (2017/08) @lukoyanov (2017/09) @cbornet (2017/09) @jeff9finger (2018/01) @karismann (2019/03) @Zomzog (2019/04) @lwlee2608 (2019/10) @nmuesch (2021/01)\r\n\r\n\r\n",
      "Hi @wing328  \r\n\r\nCurrently we are using openapi-generator 4.3.1, and when downloading JAVA SDK for endpoints with PDF files, we couldn't observe any temporary files in `/tmp` or` var/tmp ` folder. Could you please tell me how we can reproduce this issue ?",
      "please try the latest stable version v5.3.1 instead and open a new issue for tracking if you need help from the community.",
      "yes with stable version v5.3.1 we have no issues. I just want to analyze this issue in my environment with the previous versions. Could you please let me know the steps to reproduce this in previous versions ?",
      "the issue was reported by a user and he didn't provide details on how exactly he uncovered the issue."
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch replaces the use of `File.createTempFile` with `Files.createTempFile`, which is a modern and potentially more secure method. However, the change doesn't address a known security vulnerability but rather updates the code to use a newer API.\n\nFinal Classification: Defect Remediation & Feature Upgrades\n\nConfidence Score: 0.8"
}