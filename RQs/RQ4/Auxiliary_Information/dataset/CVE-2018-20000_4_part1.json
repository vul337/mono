{
  "cve_id": "CVE-2018-20000",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "Bedework/bw-webdav",
  "commit_msg": "secure-xml: welcome secure xml interface providing a safe parser",
  "commit_hash": "67283fb8b9609acdb1a8d2e7fefe195b4a261062",
  "git_url": "https://github.com/Bedework/bw-webdav/commit/67283fb8b9609acdb1a8d2e7fefe195b4a261062",
  "file_path": "src/main/java/org/bedework/webdav/servlet/common/PostRequestPars.java",
  "func_name": "processXml",
  "func_before": "public boolean processXml() throws WebdavException {\n    if (!isAppXml()) {\n      return false;\n    }\n\n    try {\n      reqRdr = req.getReader();\n    } catch (final Throwable t) {\n      throw new WebdavException(t);\n    }\n\n    xmlDoc = parseXml(reqRdr);\n    getTheReader = false;\n    return true;\n  }",
  "abstract_func_before": "public boolean processXml() throws WebdavException {\n    if (!isAppXml()) {\n      return false;\n    }\n\n    try {\n      VAR_0 = VAR_1.getReader();\n    } catch (final Throwable VAR_2) {\n      throw new WebdavException(VAR_2);\n    }\n\n    VAR_3 = parseXml(VAR_0);\n    VAR_4 = false;\n    return true;\n  }",
  "func_graph_path_before": "Bedework/bw-webdav/67283fb8b9609acdb1a8d2e7fefe195b4a261062/PostRequestPars.java/vul/before/0.json",
  "func": "public boolean processXml() throws WebdavException {\n    if (!isAppXml()) {\n      return false;\n    }\n\n    try {\n      reqRdr = req.getReader();\n    } catch (final Throwable t) {\n      throw new WebdavException(t);\n    }\n\n    xmlDoc = parseXmlSafely(req.getContentLength(), reqRdr);\n    getTheReader = false;\n    return true;\n  }",
  "abstract_func": "public boolean processXml() throws WebdavException {\n    if (!isAppXml()) {\n      return false;\n    }\n\n    try {\n      VAR_0 = VAR_1.getReader();\n    } catch (final Throwable VAR_2) {\n      throw new WebdavException(VAR_2);\n    }\n\n    VAR_3 = parseXmlSafely(VAR_1.getContentLength(), VAR_0);\n    VAR_4 = false;\n    return true;\n  }",
  "func_graph_path": "Bedework/bw-webdav/67283fb8b9609acdb1a8d2e7fefe195b4a261062/PostRequestPars.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -9,7 +9,7 @@\n       throw new WebdavException(t);\n     }\n \n-    xmlDoc = parseXml(reqRdr);\n+    xmlDoc = parseXmlSafely(req.getContentLength(), reqRdr);\n     getTheReader = false;\n     return true;\n   }",
  "diff_line_info": {
    "deleted_lines": [
      "    xmlDoc = parseXml(reqRdr);"
    ],
    "added_lines": [
      "    xmlDoc = parseXmlSafely(req.getContentLength(), reqRdr);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Bedework/bw-webdav/pull/1",
  "description": {
    "pr_info": {
      "title": "secure xml",
      "number": 1
    },
    "comment": [
      "I found out that this library is open to some xml vulnerabilities (xxe / ssrf)\r\nThis pull request ensures both the MethodBase and PostRequestPars types are relying on xml secure processing "
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}