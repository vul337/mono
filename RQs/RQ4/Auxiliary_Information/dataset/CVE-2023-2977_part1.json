{
  "cve_id": "CVE-2023-2977",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "OpenSC",
  "commit_msg": "pkcs15init: correct left length calculation to fix buffer overrun bug.\nFixes #2785",
  "commit_hash": "3bf3ab2f9091f984cda6dd910654ccbbe3f06a40",
  "git_url": "https://github.com/OpenSC/OpenSC/commit/3bf3ab2f9091f984cda6dd910654ccbbe3f06a40",
  "file_path": "src/pkcs15init/pkcs15-cardos.c",
  "func_name": "cardos_have_verifyrc_package",
  "func_before": "static int cardos_have_verifyrc_package(sc_card_t *card)\n{\n\tsc_apdu_t apdu;\n        u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];\n        int       r;\n\tconst u8  *p = rbuf, *q;\n\tsize_t    len, tlen = 0, ilen = 0;\n\n\tsc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);\n\tapdu.resp    = rbuf;\n\tapdu.resplen = sizeof(rbuf);\n\tapdu.lc = 0;\n\tapdu.le = 256;\n\tr = sc_transmit_apdu(card, &apdu);\n\tLOG_TEST_RET(card->ctx, r, \"APDU transmit failed\");\n\n\tif ((len = apdu.resplen) == 0)\n\t\t/* looks like no package has been installed  */\n\t\treturn 0;\n\n\twhile (len != 0) {\n\t\tp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);\n\t\tif (p == NULL)\n\t\t\treturn 0;\n\t\tif (card->type == SC_CARD_TYPE_CARDOS_M4_3)\t{\n\t\t\t/* the verifyRC package on CardOS 4.3B use Manufacturer ID 0x01\t*/\n\t\t\t/* and Package Number 0x07\t\t\t\t\t*/\n\t\t\tq = sc_asn1_find_tag(card->ctx, p, tlen, 0x01, &ilen);\n\t\t\tif (q == NULL || ilen != 4)\n\t\t\t\treturn 0;\n\t\t\tif (q[0] == 0x07)\n\t\t\t\treturn 1;\n\t\t} else if (card->type == SC_CARD_TYPE_CARDOS_M4_4)\t{\n\t\t\t/* the verifyRC package on CardOS 4.4 use Manufacturer ID 0x03\t*/\n\t\t\t/* and Package Number 0x02\t\t\t\t\t*/\n\t\t\tq = sc_asn1_find_tag(card->ctx, p, tlen, 0x03, &ilen);\n\t\t\tif (q == NULL || ilen != 4)\n\t\t\t\treturn 0;\n\t\t\tif (q[0] == 0x02)\n\t\t\t\treturn 1;\n\t\t} else\t{\n\t\t\treturn 0;\n\t\t}\n\t\tp   += tlen;\n\t\tlen -= tlen + 2;\n\t}\n\n\treturn 0;\n}",
  "abstract_func_before": "static int cardos_have_verifyrc_package(sc_card_t *VAR_0)\n{\n\tsc_apdu_t VAR_1;\n        u8        VAR_2[VAR_3];\n        int       VAR_4;\n\tconst u8  *VAR_5 = VAR_2, *VAR_6;\n\tsize_t    VAR_7, VAR_8 = 0, VAR_9 = 0;\n\n\tsc_format_apdu(VAR_0, &VAR_1, VAR_10, 0xca, 0x01, 0x88);\n\tVAR_1.resp    = VAR_2;\n\tVAR_1.resplen = sizeof(VAR_2);\n\tVAR_1.lc = 0;\n\tVAR_1.le = 256;\n\tVAR_4 = sc_transmit_apdu(VAR_0, &VAR_1);\n\tLOG_TEST_RET(VAR_0->ctx, VAR_4, \"APDU transmit failed\");\n\n\tif ((VAR_7 = VAR_1.resplen) == 0)\n\t\t/* COMMENT_0 */\n\t\treturn 0;\n\n\twhile (VAR_7 != 0) {\n\t\tVAR_5 = sc_asn1_find_tag(VAR_0->ctx, VAR_5, VAR_7, 0xe1, &VAR_8);\n\t\tif (VAR_5 == NULL)\n\t\t\treturn 0;\n\t\tif (VAR_0->type == VAR_11)\t{\n\t\t\t/* COMMENT_1 */\n\t\t\t/* COMMENT_2 */\n\t\t\tVAR_6 = sc_asn1_find_tag(VAR_0->ctx, VAR_5, VAR_8, 0x01, &VAR_9);\n\t\t\tif (VAR_6 == NULL || VAR_9 != 4)\n\t\t\t\treturn 0;\n\t\t\tif (VAR_6[0] == 0x07)\n\t\t\t\treturn 1;\n\t\t} else if (VAR_0->type == VAR_12)\t{\n\t\t\t/* COMMENT_3 */\n\t\t\t/* COMMENT_4 */\n\t\t\tVAR_6 = sc_asn1_find_tag(VAR_0->ctx, VAR_5, VAR_8, 0x03, &VAR_9);\n\t\t\tif (VAR_6 == NULL || VAR_9 != 4)\n\t\t\t\treturn 0;\n\t\t\tif (VAR_6[0] == 0x02)\n\t\t\t\treturn 1;\n\t\t} else\t{\n\t\t\treturn 0;\n\t\t}\n\t\tVAR_5   += VAR_8;\n\t\tVAR_7 -= VAR_8 + 2;\n\t}\n\n\treturn 0;\n}",
  "func_graph_path_before": "OpenSC/3bf3ab2f9091f984cda6dd910654ccbbe3f06a40/pkcs15-cardos.c/vul/before/0.json",
  "func": "static int cardos_have_verifyrc_package(sc_card_t *card)\n{\n\tsc_apdu_t apdu;\n        u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];\n        int       r;\n\tconst u8  *p = rbuf, *q, *pp;\n\tsize_t    len, tlen = 0, ilen = 0;\n\n\tsc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);\n\tapdu.resp    = rbuf;\n\tapdu.resplen = sizeof(rbuf);\n\tapdu.lc = 0;\n\tapdu.le = 256;\n\tr = sc_transmit_apdu(card, &apdu);\n\tLOG_TEST_RET(card->ctx, r, \"APDU transmit failed\");\n\n\tif ((len = apdu.resplen) == 0)\n\t\t/* looks like no package has been installed  */\n\t\treturn 0;\n\n\twhile (len != 0) {\n\t\tpp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);\n\t\tif (pp == NULL)\n\t\t\treturn 0;\n\t\tif (card->type == SC_CARD_TYPE_CARDOS_M4_3)\t{\n\t\t\t/* the verifyRC package on CardOS 4.3B use Manufacturer ID 0x01\t*/\n\t\t\t/* and Package Number 0x07\t\t\t\t\t*/\n\t\t\tq = sc_asn1_find_tag(card->ctx, pp, tlen, 0x01, &ilen);\n\t\t\tif (q == NULL || ilen != 4)\n\t\t\t\treturn 0;\n\t\t\tif (q[0] == 0x07)\n\t\t\t\treturn 1;\n\t\t} else if (card->type == SC_CARD_TYPE_CARDOS_M4_4)\t{\n\t\t\t/* the verifyRC package on CardOS 4.4 use Manufacturer ID 0x03\t*/\n\t\t\t/* and Package Number 0x02\t\t\t\t\t*/\n\t\t\tq = sc_asn1_find_tag(card->ctx, pp, tlen, 0x03, &ilen);\n\t\t\tif (q == NULL || ilen != 4)\n\t\t\t\treturn 0;\n\t\t\tif (q[0] == 0x02)\n\t\t\t\treturn 1;\n\t\t} else\t{\n\t\t\treturn 0;\n\t\t}\n\t\tp   += tlen;\n\t\tlen -= tlen + 2;\n\t}\n\n\treturn 0;\n}",
  "abstract_func": "static int cardos_have_verifyrc_package(sc_card_t *VAR_0)\n{\n\tsc_apdu_t VAR_1;\n        u8        VAR_2[VAR_3];\n        int       VAR_4;\n\tconst u8  *VAR_5 = VAR_2, *VAR_6, *VAR_7;\n\tsize_t    VAR_8, VAR_9 = 0, VAR_10 = 0;\n\n\tsc_format_apdu(VAR_0, &VAR_1, VAR_11, 0xca, 0x01, 0x88);\n\tVAR_1.resp    = VAR_2;\n\tVAR_1.resplen = sizeof(VAR_2);\n\tVAR_1.lc = 0;\n\tVAR_1.le = 256;\n\tVAR_4 = sc_transmit_apdu(VAR_0, &VAR_1);\n\tLOG_TEST_RET(VAR_0->ctx, VAR_4, \"APDU transmit failed\");\n\n\tif ((VAR_8 = VAR_1.resplen) == 0)\n\t\t/* COMMENT_0 */\n\t\treturn 0;\n\n\twhile (VAR_8 != 0) {\n\t\tVAR_7 = sc_asn1_find_tag(VAR_0->ctx, VAR_5, VAR_8, 0xe1, &VAR_9);\n\t\tif (VAR_7 == NULL)\n\t\t\treturn 0;\n\t\tif (VAR_0->type == VAR_12)\t{\n\t\t\t/* COMMENT_1 */\n\t\t\t/* COMMENT_2 */\n\t\t\tVAR_6 = sc_asn1_find_tag(VAR_0->ctx, VAR_7, VAR_9, 0x01, &VAR_10);\n\t\t\tif (VAR_6 == NULL || VAR_10 != 4)\n\t\t\t\treturn 0;\n\t\t\tif (VAR_6[0] == 0x07)\n\t\t\t\treturn 1;\n\t\t} else if (VAR_0->type == VAR_13)\t{\n\t\t\t/* COMMENT_3 */\n\t\t\t/* COMMENT_4 */\n\t\t\tVAR_6 = sc_asn1_find_tag(VAR_0->ctx, VAR_7, VAR_9, 0x03, &VAR_10);\n\t\t\tif (VAR_6 == NULL || VAR_10 != 4)\n\t\t\t\treturn 0;\n\t\t\tif (VAR_6[0] == 0x02)\n\t\t\t\treturn 1;\n\t\t} else\t{\n\t\t\treturn 0;\n\t\t}\n\t\tVAR_5   += VAR_9;\n\t\tVAR_8 -= VAR_9 + 2;\n\t}\n\n\treturn 0;\n}",
  "func_graph_path": "OpenSC/3bf3ab2f9091f984cda6dd910654ccbbe3f06a40/pkcs15-cardos.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,7 +3,7 @@\n \tsc_apdu_t apdu;\n         u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];\n         int       r;\n-\tconst u8  *p = rbuf, *q;\n+\tconst u8  *p = rbuf, *q, *pp;\n \tsize_t    len, tlen = 0, ilen = 0;\n \n \tsc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);\n@@ -19,13 +19,13 @@\n \t\treturn 0;\n \n \twhile (len != 0) {\n-\t\tp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);\n-\t\tif (p == NULL)\n+\t\tpp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);\n+\t\tif (pp == NULL)\n \t\t\treturn 0;\n \t\tif (card->type == SC_CARD_TYPE_CARDOS_M4_3)\t{\n \t\t\t/* the verifyRC package on CardOS 4.3B use Manufacturer ID 0x01\t*/\n \t\t\t/* and Package Number 0x07\t\t\t\t\t*/\n-\t\t\tq = sc_asn1_find_tag(card->ctx, p, tlen, 0x01, &ilen);\n+\t\t\tq = sc_asn1_find_tag(card->ctx, pp, tlen, 0x01, &ilen);\n \t\t\tif (q == NULL || ilen != 4)\n \t\t\t\treturn 0;\n \t\t\tif (q[0] == 0x07)\n@@ -33,7 +33,7 @@\n \t\t} else if (card->type == SC_CARD_TYPE_CARDOS_M4_4)\t{\n \t\t\t/* the verifyRC package on CardOS 4.4 use Manufacturer ID 0x03\t*/\n \t\t\t/* and Package Number 0x02\t\t\t\t\t*/\n-\t\t\tq = sc_asn1_find_tag(card->ctx, p, tlen, 0x03, &ilen);\n+\t\t\tq = sc_asn1_find_tag(card->ctx, pp, tlen, 0x03, &ilen);\n \t\t\tif (q == NULL || ilen != 4)\n \t\t\t\treturn 0;\n \t\t\tif (q[0] == 0x02)",
  "diff_line_info": {
    "deleted_lines": [
      "\tconst u8  *p = rbuf, *q;",
      "\t\tp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);",
      "\t\tif (p == NULL)",
      "\t\t\tq = sc_asn1_find_tag(card->ctx, p, tlen, 0x01, &ilen);",
      "\t\t\tq = sc_asn1_find_tag(card->ctx, p, tlen, 0x03, &ilen);"
    ],
    "added_lines": [
      "\tconst u8  *p = rbuf, *q, *pp;",
      "\t\tpp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);",
      "\t\tif (pp == NULL)",
      "\t\t\tq = sc_asn1_find_tag(card->ctx, pp, tlen, 0x01, &ilen);",
      "\t\t\tq = sc_asn1_find_tag(card->ctx, pp, tlen, 0x03, &ilen);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/OpenSC/OpenSC/pull/2787",
  "description": {
    "pr_info": {
      "title": "pkcs15init: correct left length calculation to fix buffer overrun bug.",
      "number": 2787
    },
    "comment": [
      "Fixes #2785\r\n\r\nThis PR aims to fix the buffer overrun vulnerability in src/pkcs15init/pkcs15-cardos.c, which falsely calculated the length of left bytes in buffer while looking for 2 specific tags in buffer.\r\nThis is a recurring bug as one occurence of https://github.com/advisories/GHSA-xq25-8g7f-6hc5, and the fix commit is almost the same.\r\n",
      "thank you"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}