{
  "cve_id": "CVE-2017-5617",
  "cwe_ids": [
    "CWE-918"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "blackears/svgSalamander",
  "commit_msg": "#11 - svgSalamander fix for CVE-2017-5617 was incomplete",
  "commit_hash": "826555b0a3229b6cf4671fe4de7aa51b5946b63d",
  "git_url": "https://github.com/blackears/svgSalamander/commit/826555b0a3229b6cf4671fe4de7aa51b5946b63d",
  "file_path": "svg-core/src/main/java/com/kitfox/svg/ImageSVG.java",
  "func_name": "updateTime",
  "func_before": "@Override\n    public boolean updateTime(double curTime) throws SVGException\n    {\n//        if (trackManager.getNumTracks() == 0) return false;\n        boolean changeState = super.updateTime(curTime);\n\n        //Get current values for parameters\n        StyleAttribute sty = new StyleAttribute();\n        boolean shapeChange = false;\n\n        if (getPres(sty.setName(\"x\")))\n        {\n            float newVal = sty.getFloatValueWithUnits();\n            if (newVal != x)\n            {\n                x = newVal;\n                shapeChange = true;\n            }\n        }\n\n        if (getPres(sty.setName(\"y\")))\n        {\n            float newVal = sty.getFloatValueWithUnits();\n            if (newVal != y)\n            {\n                y = newVal;\n                shapeChange = true;\n            }\n        }\n\n        if (getPres(sty.setName(\"width\")))\n        {\n            float newVal = sty.getFloatValueWithUnits();\n            if (newVal != width)\n            {\n                width = newVal;\n                shapeChange = true;\n            }\n        }\n\n        if (getPres(sty.setName(\"height\")))\n        {\n            float newVal = sty.getFloatValueWithUnits();\n            if (newVal != height)\n            {\n                height = newVal;\n                shapeChange = true;\n            }\n        }\n\n        try\n        {\n            if (getPres(sty.setName(\"xlink:href\")))\n            {\n                URI src = sty.getURIValue(getXMLBase());\n\n                URL newVal;\n                if (\"data\".equals(src.getScheme()))\n                {\n                    newVal = new URL(null, src.toASCIIString(), new Handler());\n                } else\n                {\n                    newVal = src.toURL();\n                }\n\n                if (!newVal.equals(imageSrc))\n                {\n                    imageSrc = newVal;\n                    shapeChange = true;\n                }\n            }\n        } catch (IllegalArgumentException ie)\n        {\n            Logger.getLogger(SVGConst.SVG_LOGGER).log(Level.WARNING,\n                \"Image provided with illegal value for href: \\\"\"\n                + sty.getStringValue() + '\"', ie);\n        } catch (Exception e)\n        {\n            Logger.getLogger(SVGConst.SVG_LOGGER).log(Level.WARNING,\n                \"Could not parse xlink:href\", e);\n        }\n\n\n        if (shapeChange)\n        {\n            build();\n//            diagram.getUniverse().registerImage(imageSrc);\n//\n//            //Set widths if not set\n//            BufferedImage img = diagram.getUniverse().getImage(imageSrc);\n//            if (img == null)\n//            {\n//                xform = new AffineTransform();\n//                bounds = new Rectangle2D.Float();\n//            }\n//            else\n//            {\n//                if (width == 0) width = img.getWidth();\n//                if (height == 0) height = img.getHeight();\n//\n//                //Determine image xform\n//                xform = new AffineTransform();\n////                xform.setToScale(this.width / img.getWidth(), this.height / img.getHeight());\n////                xform.translate(this.x, this.y);\n//                xform.translate(this.x, this.y);\n//                xform.scale(this.width / img.getWidth(), this.height / img.getHeight());\n//\n//                bounds = new Rectangle2D.Float(this.x, this.y, this.width, this.height);\n//            }\n//\n//            return true;\n        }\n\n        return changeState || shapeChange;\n    }",
  "abstract_func_before": "@Override\n    public boolean updateTime(double VAR_0) throws SVGException\n    {\n/* COMMENT_0 */\n        boolean VAR_1 = super.updateTime(VAR_0);\n\n        /* COMMENT_1 */\n        StyleAttribute VAR_2 = new StyleAttribute();\n        boolean VAR_3 = false;\n\n        if (getPres(VAR_2.setName(\"x\")))\n        {\n            float VAR_4 = VAR_2.getFloatValueWithUnits();\n            if (VAR_4 != VAR_5)\n            {\n                VAR_5 = VAR_4;\n                VAR_3 = true;\n            }\n        }\n\n        if (getPres(VAR_2.setName(\"y\")))\n        {\n            float VAR_4 = VAR_2.getFloatValueWithUnits();\n            if (VAR_4 != VAR_6)\n            {\n                VAR_6 = VAR_4;\n                VAR_3 = true;\n            }\n        }\n\n        if (getPres(VAR_2.setName(\"width\")))\n        {\n            float VAR_4 = VAR_2.getFloatValueWithUnits();\n            if (VAR_4 != VAR_7)\n            {\n                VAR_7 = VAR_4;\n                VAR_3 = true;\n            }\n        }\n\n        if (getPres(VAR_2.setName(\"height\")))\n        {\n            float VAR_4 = VAR_2.getFloatValueWithUnits();\n            if (VAR_4 != VAR_8)\n            {\n                VAR_8 = VAR_4;\n                VAR_3 = true;\n            }\n        }\n\n        try\n        {\n            if (getPres(VAR_2.setName(\"xlink:href\")))\n            {\n                URI VAR_9 = VAR_2.getURIValue(getXMLBase());\n\n                URL VAR_4;\n                if (\"data\".equals(VAR_9.getScheme()))\n                {\n                    VAR_4 = new URL(null, VAR_9.toASCIIString(), new Handler());\n                } else\n                {\n                    VAR_4 = VAR_9.toURL();\n                }\n\n                if (!VAR_4.equals(VAR_10))\n                {\n                    VAR_10 = VAR_4;\n                    VAR_3 = true;\n                }\n            }\n        } catch (IllegalArgumentException VAR_11)\n        {\n            VAR_12.getLogger(VAR_13.SVG_LOGGER).log(VAR_14.WARNING,\n                \"Image provided with illegal value for href: \\\"\"\n                + VAR_2.getStringValue() + '\"', VAR_11);\n        } catch (Exception VAR_15)\n        {\n            VAR_12.getLogger(VAR_13.SVG_LOGGER).log(VAR_14.WARNING,\n                \"Could not parse xlink:href\", VAR_15);\n        }\n\n\n        if (VAR_3)\n        {\n            build();\n/* COMMENT_2 */\n/* COMMENT_3 */\n/* COMMENT_4 */\n/* COMMENT_5 */\n/* COMMENT_6 */\n/* COMMENT_7 */\n/* COMMENT_8 */\n/* COMMENT_9 */\n/* COMMENT_10 */\n/* COMMENT_11 */\n/* COMMENT_7 */\n/* COMMENT_12 */\n/* COMMENT_13 */\n/* COMMENT_3 */\n/* COMMENT_14 */\n/* COMMENT_8 */\n/* COMMENT_15 */\n/* COMMENT_16 */\n/* COMMENT_17 */\n/* COMMENT_18 */\n/* COMMENT_3 */\n/* COMMENT_19 */\n/* COMMENT_10 */\n/* COMMENT_3 */\n/* COMMENT_20 */\n        }\n\n        return VAR_1 || VAR_3;\n    }",
  "func_graph_path_before": "blackears/svgSalamander/826555b0a3229b6cf4671fe4de7aa51b5946b63d/ImageSVG.java/vul/before/1.json",
  "func": "@Override\n    public boolean updateTime(double curTime) throws SVGException\n    {\n//        if (trackManager.getNumTracks() == 0) return false;\n        boolean changeState = super.updateTime(curTime);\n\n        //Get current values for parameters\n        StyleAttribute sty = new StyleAttribute();\n        boolean shapeChange = false;\n\n        if (getPres(sty.setName(\"x\")))\n        {\n            float newVal = sty.getFloatValueWithUnits();\n            if (newVal != x)\n            {\n                x = newVal;\n                shapeChange = true;\n            }\n        }\n\n        if (getPres(sty.setName(\"y\")))\n        {\n            float newVal = sty.getFloatValueWithUnits();\n            if (newVal != y)\n            {\n                y = newVal;\n                shapeChange = true;\n            }\n        }\n\n        if (getPres(sty.setName(\"width\")))\n        {\n            float newVal = sty.getFloatValueWithUnits();\n            if (newVal != width)\n            {\n                width = newVal;\n                shapeChange = true;\n            }\n        }\n\n        if (getPres(sty.setName(\"height\")))\n        {\n            float newVal = sty.getFloatValueWithUnits();\n            if (newVal != height)\n            {\n                height = newVal;\n                shapeChange = true;\n            }\n        }\n\n        try\n        {\n            if (getPres(sty.setName(\"xlink:href\")))\n            {\n                URI src = sty.getURIValue(getXMLBase());\n\n                URL newVal = null;\n                if (\"data\".equals(src.getScheme()))\n                {\n                    newVal = new URL(null, src.toASCIIString(), new Handler());\n                } else if (!diagram.getUniverse().isImageDataInlineOnly())\n                {\n                    newVal = src.toURL();\n                }\n\n                if (newVal != null && !newVal.equals(imageSrc))\n                {\n                    imageSrc = newVal;\n                    shapeChange = true;\n                }\n            }\n        } catch (IllegalArgumentException ie)\n        {\n            Logger.getLogger(SVGConst.SVG_LOGGER).log(Level.WARNING,\n                \"Image provided with illegal value for href: \\\"\"\n                + sty.getStringValue() + '\"', ie);\n        } catch (Exception e)\n        {\n            Logger.getLogger(SVGConst.SVG_LOGGER).log(Level.WARNING,\n                \"Could not parse xlink:href\", e);\n        }\n\n\n        if (shapeChange)\n        {\n            build();\n//            diagram.getUniverse().registerImage(imageSrc);\n//\n//            //Set widths if not set\n//            BufferedImage img = diagram.getUniverse().getImage(imageSrc);\n//            if (img == null)\n//            {\n//                xform = new AffineTransform();\n//                bounds = new Rectangle2D.Float();\n//            }\n//            else\n//            {\n//                if (width == 0) width = img.getWidth();\n//                if (height == 0) height = img.getHeight();\n//\n//                //Determine image xform\n//                xform = new AffineTransform();\n////                xform.setToScale(this.width / img.getWidth(), this.height / img.getHeight());\n////                xform.translate(this.x, this.y);\n//                xform.translate(this.x, this.y);\n//                xform.scale(this.width / img.getWidth(), this.height / img.getHeight());\n//\n//                bounds = new Rectangle2D.Float(this.x, this.y, this.width, this.height);\n//            }\n//\n//            return true;\n        }\n\n        return changeState || shapeChange;\n    }",
  "abstract_func": "@Override\n    public boolean updateTime(double VAR_0) throws SVGException\n    {\n/* COMMENT_0 */\n        boolean VAR_1 = super.updateTime(VAR_0);\n\n        /* COMMENT_1 */\n        StyleAttribute VAR_2 = new StyleAttribute();\n        boolean VAR_3 = false;\n\n        if (getPres(VAR_2.setName(\"x\")))\n        {\n            float VAR_4 = VAR_2.getFloatValueWithUnits();\n            if (VAR_4 != VAR_5)\n            {\n                VAR_5 = VAR_4;\n                VAR_3 = true;\n            }\n        }\n\n        if (getPres(VAR_2.setName(\"y\")))\n        {\n            float VAR_4 = VAR_2.getFloatValueWithUnits();\n            if (VAR_4 != VAR_6)\n            {\n                VAR_6 = VAR_4;\n                VAR_3 = true;\n            }\n        }\n\n        if (getPres(VAR_2.setName(\"width\")))\n        {\n            float VAR_4 = VAR_2.getFloatValueWithUnits();\n            if (VAR_4 != VAR_7)\n            {\n                VAR_7 = VAR_4;\n                VAR_3 = true;\n            }\n        }\n\n        if (getPres(VAR_2.setName(\"height\")))\n        {\n            float VAR_4 = VAR_2.getFloatValueWithUnits();\n            if (VAR_4 != VAR_8)\n            {\n                VAR_8 = VAR_4;\n                VAR_3 = true;\n            }\n        }\n\n        try\n        {\n            if (getPres(VAR_2.setName(\"xlink:href\")))\n            {\n                URI VAR_9 = VAR_2.getURIValue(getXMLBase());\n\n                URL VAR_4 = null;\n                if (\"data\".equals(VAR_9.getScheme()))\n                {\n                    VAR_4 = new URL(null, VAR_9.toASCIIString(), new Handler());\n                } else if (!VAR_10.getUniverse().isImageDataInlineOnly())\n                {\n                    VAR_4 = VAR_9.toURL();\n                }\n\n                if (VAR_4 != null && !VAR_4.equals(VAR_11))\n                {\n                    VAR_11 = VAR_4;\n                    VAR_3 = true;\n                }\n            }\n        } catch (IllegalArgumentException VAR_12)\n        {\n            VAR_13.getLogger(VAR_14.SVG_LOGGER).log(VAR_15.WARNING,\n                \"Image provided with illegal value for href: \\\"\"\n                + VAR_2.getStringValue() + '\"', VAR_12);\n        } catch (Exception VAR_16)\n        {\n            VAR_13.getLogger(VAR_14.SVG_LOGGER).log(VAR_15.WARNING,\n                \"Could not parse xlink:href\", VAR_16);\n        }\n\n\n        if (VAR_3)\n        {\n            build();\n/* COMMENT_2 */\n/* COMMENT_3 */\n/* COMMENT_4 */\n/* COMMENT_5 */\n/* COMMENT_6 */\n/* COMMENT_7 */\n/* COMMENT_8 */\n/* COMMENT_9 */\n/* COMMENT_10 */\n/* COMMENT_11 */\n/* COMMENT_7 */\n/* COMMENT_12 */\n/* COMMENT_13 */\n/* COMMENT_3 */\n/* COMMENT_14 */\n/* COMMENT_8 */\n/* COMMENT_15 */\n/* COMMENT_16 */\n/* COMMENT_17 */\n/* COMMENT_18 */\n/* COMMENT_3 */\n/* COMMENT_19 */\n/* COMMENT_10 */\n/* COMMENT_3 */\n/* COMMENT_20 */\n        }\n\n        return VAR_1 || VAR_3;\n    }",
  "func_graph_path": "blackears/svgSalamander/826555b0a3229b6cf4671fe4de7aa51b5946b63d/ImageSVG.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -54,16 +54,16 @@\n             {\n                 URI src = sty.getURIValue(getXMLBase());\n \n-                URL newVal;\n+                URL newVal = null;\n                 if (\"data\".equals(src.getScheme()))\n                 {\n                     newVal = new URL(null, src.toASCIIString(), new Handler());\n-                } else\n+                } else if (!diagram.getUniverse().isImageDataInlineOnly())\n                 {\n                     newVal = src.toURL();\n                 }\n \n-                if (!newVal.equals(imageSrc))\n+                if (newVal != null && !newVal.equals(imageSrc))\n                 {\n                     imageSrc = newVal;\n                     shapeChange = true;",
  "diff_line_info": {
    "deleted_lines": [
      "                URL newVal;",
      "                } else",
      "                if (!newVal.equals(imageSrc))"
    ],
    "added_lines": [
      "                URL newVal = null;",
      "                } else if (!diagram.getUniverse().isImageDataInlineOnly())",
      "                if (newVal != null && !newVal.equals(imageSrc))"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/blackears/svgSalamander/pull/33",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/blackears/svgSalamander/pull/33: 403 Client Error: Forbidden for url: https://api.github.com/repos/blackears/svgSalamander/pulls/33",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}