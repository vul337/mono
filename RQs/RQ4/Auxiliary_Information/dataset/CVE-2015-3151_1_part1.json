{
  "cve_id": "CVE-2015-3151",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "abrt/libreport",
  "commit_msg": "dd: harden functions against directory traversal issues\n\nTest correctness of all accessed dump dir files in all dd* functions.\nBefore this commit, the callers were allowed to pass strings like\n\"../../etc/shadow\" in the filename argument of all dd* functions.\n\nRelated: #1214457\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
  "commit_hash": "239c4f7d1f47265526b39ad70106767d00805277",
  "git_url": "https://github.com/abrt/libreport/commit/239c4f7d1f47265526b39ad70106767d00805277",
  "file_path": "src/lib/dump_dir.c",
  "func_name": "dd_get_item_size",
  "func_before": "long dd_get_item_size(struct dump_dir *dd, const char *name)\n{\n    long size = -1;\n    char *iname = concat_path_file(dd->dd_dirname, name);\n    struct stat statbuf;\n\n    if (lstat(iname, &statbuf) == 0 && S_ISREG(statbuf.st_mode))\n        size = statbuf.st_size;\n    else\n    {\n        if (errno == ENOENT)\n            size = 0;\n        else\n            perror_msg(\"Can't get size of file '%s'\", iname);\n    }\n\n    free(iname);\n\n    return size;\n}",
  "abstract_func_before": "long dd_get_item_size(struct dump_dir *VAR_0, const char *VAR_1)\n{\n    long VAR_2 = -1;\n    char *VAR_3 = concat_path_file(VAR_0->dd_dirname, VAR_1);\n    struct stat VAR_4;\n\n    if (lstat(VAR_3, &VAR_4) == 0 && S_ISREG(VAR_4.st_mode))\n        VAR_2 = VAR_4.st_size;\n    else\n    {\n        if (VAR_5 == VAR_6)\n            VAR_2 = 0;\n        else\n            perror_msg(\"Can't get size of file '%s'\", VAR_3);\n    }\n\n    free(VAR_3);\n\n    return VAR_2;\n}",
  "func_graph_path_before": "abrt/libreport/239c4f7d1f47265526b39ad70106767d00805277/dump_dir.c/vul/before/1.json",
  "func": "long dd_get_item_size(struct dump_dir *dd, const char *name)\n{\n    if (!str_is_correct_filename(name))\n        error_msg_and_die(\"Cannot get item size. '%s' is not a valid file name\", name);\n\n    long size = -1;\n    char *iname = concat_path_file(dd->dd_dirname, name);\n    struct stat statbuf;\n\n    if (lstat(iname, &statbuf) == 0 && S_ISREG(statbuf.st_mode))\n        size = statbuf.st_size;\n    else\n    {\n        if (errno == ENOENT)\n            size = 0;\n        else\n            perror_msg(\"Can't get size of file '%s'\", iname);\n    }\n\n    free(iname);\n\n    return size;\n}",
  "abstract_func": "long dd_get_item_size(struct dump_dir *VAR_0, const char *VAR_1)\n{\n    if (!str_is_correct_filename(VAR_1))\n        error_msg_and_die(\"Cannot get item size. '%s' is not a valid file name\", VAR_1);\n\n    long VAR_2 = -1;\n    char *VAR_3 = concat_path_file(VAR_0->dd_dirname, VAR_1);\n    struct stat VAR_4;\n\n    if (lstat(VAR_3, &VAR_4) == 0 && S_ISREG(VAR_4.st_mode))\n        VAR_2 = VAR_4.st_size;\n    else\n    {\n        if (VAR_5 == VAR_6)\n            VAR_2 = 0;\n        else\n            perror_msg(\"Can't get size of file '%s'\", VAR_3);\n    }\n\n    free(VAR_3);\n\n    return VAR_2;\n}",
  "func_graph_path": "abrt/libreport/239c4f7d1f47265526b39ad70106767d00805277/dump_dir.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,8 @@\n long dd_get_item_size(struct dump_dir *dd, const char *name)\n {\n+    if (!str_is_correct_filename(name))\n+        error_msg_and_die(\"Cannot get item size. '%s' is not a valid file name\", name);\n+\n     long size = -1;\n     char *iname = concat_path_file(dd->dd_dirname, name);\n     struct stat statbuf;",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "    if (!str_is_correct_filename(name))",
      "        error_msg_and_die(\"Cannot get item size. '%s' is not a valid file name\", name);",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/abrt/libreport/pull/343",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/abrt/libreport/pull/343: 403 Client Error: Forbidden for url: https://api.github.com/repos/abrt/libreport/pulls/343",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9"
}