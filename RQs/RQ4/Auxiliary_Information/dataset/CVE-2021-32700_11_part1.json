{
  "cve_id": "CVE-2021-32700",
  "cwe_ids": [
    "CWE-306"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "ballerina-platform/ballerina-lang",
  "commit_msg": "Fix central connection",
  "commit_hash": "4609ffee1744ecd16aac09303b1783bf0a525816",
  "git_url": "https://github.com/ballerina-platform/ballerina-lang/commit/4609ffee1744ecd16aac09303b1783bf0a525816",
  "file_path": "cli/ballerina-cli-module/src/main/java/org/ballerinalang/cli/module/TokenUpdater.java",
  "func_name": "handle",
  "func_before": "@Override public void handle(HttpExchange httpExchange) {\n            String token = getToken(httpExchange.getRequestURI().getPath());\n            String currentUsersHomeDir = System.getProperty(\"user.home\");\n            String settingsTomlPath = String.valueOf(Paths.get(currentUsersHomeDir, \".ballerina\", SETTINGS_TOML_FILE));\n            FileOutputStream outputStream = null;\n            try {\n                outputStream = new FileOutputStream(settingsTomlPath);\n                String str = \"[central]\\naccesstoken=\\\"\" + token + \"\\\"\";\n                outputStream.write(str.getBytes(StandardCharsets.UTF_8));\n            } catch (FileNotFoundException e) {\n                throw ErrorUtil.createCommandException(\"Settings.toml file could not be found: \" + settingsTomlPath);\n            } catch (IOException e) {\n                throw ErrorUtil.createCommandException(\n                        \"error occurred while writing to the Settings.toml file: \" + e.getMessage());\n            } finally {\n                try {\n                    if (outputStream != null) {\n                        outputStream.close();\n                    }\n                } catch (IOException e) {\n                    errStream.println(\"error occurred while closing the output stream: \" + e.getMessage());\n                }\n            }\n            outStream.println(\"token updated\");\n\n            OutputStream os = null;\n            try {\n                String response = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"/>\";\n                httpExchange.getResponseHeaders()\n                        .put(HttpHeaders.CONTENT_TYPE, Collections.singletonList(\"image/svg+xml\"));\n                httpExchange.sendResponseHeaders(HttpURLConnection.HTTP_OK,\n                        response.getBytes(StandardCharsets.UTF_8).length);\n                os = httpExchange.getResponseBody();\n                os.write(response.getBytes(StandardCharsets.UTF_8));\n            } catch (IOException e) {\n                throw ErrorUtil\n                        .createCommandException(\"error occurred while generating the response: \" + e.getMessage());\n            } finally {\n                try {\n                    if (os != null) {\n                        os.close();\n                    }\n                } catch (IOException e) {\n                    errStream.println(\"error occurred while closing the output stream: \" + e.getMessage());\n                }\n            }\n        }",
  "abstract_func_before": "@Override public void handle(HttpExchange VAR_0) {\n            String VAR_1 = getToken(VAR_0.getRequestURI().getPath());\n            String VAR_2 = VAR_3.getProperty(\"user.home\");\n            String VAR_4 = VAR_5.valueOf(VAR_6.get(VAR_2, \".ballerina\", VAR_7));\n            FileOutputStream VAR_8 = null;\n            try {\n                VAR_8 = new FileOutputStream(VAR_4);\n                String VAR_9 = \"[central]\\naccesstoken=\\\"\" + VAR_1 + \"\\\"\";\n                VAR_8.write(VAR_9.getBytes(VAR_10.UTF_8));\n            } catch (FileNotFoundException VAR_11) {\n                throw VAR_12.createCommandException(\"Settings.toml file could not be found: \" + VAR_4);\n            } catch (IOException VAR_11) {\n                throw VAR_12.createCommandException(\n                        \"error occurred while writing to the Settings.toml file: \" + VAR_11.getMessage());\n            } finally {\n                try {\n                    if (VAR_8 != null) {\n                        VAR_8.close();\n                    }\n                } catch (IOException VAR_11) {\n                    VAR_13.println(\"error occurred while closing the output stream: \" + VAR_11.getMessage());\n                }\n            }\n            VAR_14.println(\"token updated\");\n\n            OutputStream VAR_15 = null;\n            try {\n                String VAR_16 = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"/>\";\n                VAR_0.getResponseHeaders()\n                        .put(VAR_17.CONTENT_TYPE, VAR_18.singletonList(\"image/svg+xml\"));\n                VAR_0.sendResponseHeaders(VAR_19.HTTP_OK,\n                        VAR_16.getBytes(VAR_10.UTF_8).length);\n                VAR_15 = VAR_0.getResponseBody();\n                VAR_15.write(VAR_16.getBytes(VAR_10.UTF_8));\n            } catch (IOException VAR_11) {\n                throw VAR_12\n                        .createCommandException(\"error occurred while generating the response: \" + VAR_11.getMessage());\n            } finally {\n                try {\n                    if (VAR_15 != null) {\n                        VAR_15.close();\n                    }\n                } catch (IOException VAR_11) {\n                    VAR_13.println(\"error occurred while closing the output stream: \" + VAR_11.getMessage());\n                }\n            }\n        }",
  "func_graph_path_before": "ballerina-platform/ballerina-lang/4609ffee1744ecd16aac09303b1783bf0a525816/TokenUpdater.java/vul/before/0.json",
  "func": "@Override public void handle(HttpExchange httpExchange) {\n            String token = getToken(httpExchange.getRequestURI().getPath());\n            String currentUsersHomeDir = System.getProperty(\"user.home\");\n            String settingsTomlPath = String.valueOf(Paths.get(currentUsersHomeDir, \".ballerina\", SETTINGS_TOML_FILE));\n            FileOutputStream outputStream = null;\n            try {\n                outputStream = new FileOutputStream(settingsTomlPath);\n                String str = \"[central]\\naccesstoken=\\\"\" + token + \"\\\"\";\n                outputStream.write(str.getBytes(StandardCharsets.UTF_8));\n            } catch (FileNotFoundException e) {\n                throw ErrorUtil.createCommandException(\"Settings.toml file could not be found: \" + settingsTomlPath);\n            } catch (IOException e) {\n                throw ErrorUtil.createCommandException(\n                        \"error occurred while writing to the Settings.toml file: \" + e.getMessage());\n            } finally {\n                try {\n                    if (outputStream != null) {\n                        outputStream.close();\n                    }\n                } catch (IOException e) {\n                    errStream.println(\"error occurred while closing the output stream: \" + e.getMessage());\n                }\n            }\n            outStream.println(\"token updated\");\n\n            OutputStream os = null;\n            try {\n                String response = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"/>\";\n                httpExchange.getResponseHeaders()\n                        .put(HttpHeaders.CONTENT_TYPE, Collections.singletonList(\"image/svg+xml\"));\n                httpExchange.sendResponseHeaders(HttpsURLConnection.HTTP_OK,\n                                                 response.getBytes(StandardCharsets.UTF_8).length);\n                os = httpExchange.getResponseBody();\n                os.write(response.getBytes(StandardCharsets.UTF_8));\n            } catch (IOException e) {\n                throw ErrorUtil\n                        .createCommandException(\"error occurred while generating the response: \" + e.getMessage());\n            } finally {\n                try {\n                    if (os != null) {\n                        os.close();\n                    }\n                } catch (IOException e) {\n                    errStream.println(\"error occurred while closing the output stream: \" + e.getMessage());\n                }\n            }\n        }",
  "abstract_func": "@Override public void handle(HttpExchange VAR_0) {\n            String VAR_1 = getToken(VAR_0.getRequestURI().getPath());\n            String VAR_2 = VAR_3.getProperty(\"user.home\");\n            String VAR_4 = VAR_5.valueOf(VAR_6.get(VAR_2, \".ballerina\", VAR_7));\n            FileOutputStream VAR_8 = null;\n            try {\n                VAR_8 = new FileOutputStream(VAR_4);\n                String VAR_9 = \"[central]\\naccesstoken=\\\"\" + VAR_1 + \"\\\"\";\n                VAR_8.write(VAR_9.getBytes(VAR_10.UTF_8));\n            } catch (FileNotFoundException VAR_11) {\n                throw VAR_12.createCommandException(\"Settings.toml file could not be found: \" + VAR_4);\n            } catch (IOException VAR_11) {\n                throw VAR_12.createCommandException(\n                        \"error occurred while writing to the Settings.toml file: \" + VAR_11.getMessage());\n            } finally {\n                try {\n                    if (VAR_8 != null) {\n                        VAR_8.close();\n                    }\n                } catch (IOException VAR_11) {\n                    VAR_13.println(\"error occurred while closing the output stream: \" + VAR_11.getMessage());\n                }\n            }\n            VAR_14.println(\"token updated\");\n\n            OutputStream VAR_15 = null;\n            try {\n                String VAR_16 = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"/>\";\n                VAR_0.getResponseHeaders()\n                        .put(VAR_17.CONTENT_TYPE, VAR_18.singletonList(\"image/svg+xml\"));\n                VAR_0.sendResponseHeaders(VAR_19.HTTP_OK,\n                                                 VAR_16.getBytes(VAR_10.UTF_8).length);\n                VAR_15 = VAR_0.getResponseBody();\n                VAR_15.write(VAR_16.getBytes(VAR_10.UTF_8));\n            } catch (IOException VAR_11) {\n                throw VAR_12\n                        .createCommandException(\"error occurred while generating the response: \" + VAR_11.getMessage());\n            } finally {\n                try {\n                    if (VAR_15 != null) {\n                        VAR_15.close();\n                    }\n                } catch (IOException VAR_11) {\n                    VAR_13.println(\"error occurred while closing the output stream: \" + VAR_11.getMessage());\n                }\n            }\n        }",
  "func_graph_path": "ballerina-platform/ballerina-lang/4609ffee1744ecd16aac09303b1783bf0a525816/TokenUpdater.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -28,8 +28,8 @@\n                 String response = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"/>\";\n                 httpExchange.getResponseHeaders()\n                         .put(HttpHeaders.CONTENT_TYPE, Collections.singletonList(\"image/svg+xml\"));\n-                httpExchange.sendResponseHeaders(HttpURLConnection.HTTP_OK,\n-                        response.getBytes(StandardCharsets.UTF_8).length);\n+                httpExchange.sendResponseHeaders(HttpsURLConnection.HTTP_OK,\n+                                                 response.getBytes(StandardCharsets.UTF_8).length);\n                 os = httpExchange.getResponseBody();\n                 os.write(response.getBytes(StandardCharsets.UTF_8));\n             } catch (IOException e) {",
  "diff_line_info": {
    "deleted_lines": [
      "                httpExchange.sendResponseHeaders(HttpURLConnection.HTTP_OK,",
      "                        response.getBytes(StandardCharsets.UTF_8).length);"
    ],
    "added_lines": [
      "                httpExchange.sendResponseHeaders(HttpsURLConnection.HTTP_OK,",
      "                                                 response.getBytes(StandardCharsets.UTF_8).length);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/29246",
  "description": {
    "pr_info": {
      "title": "Fix central connection",
      "number": 29246
    },
    "comment": [
      "## Purpose\r\n> $Title\r\n\r\nFixes #<Issue Number>\r\n\r\n## Approach\r\n> Describe how you are implementing the solutions along with the design details.\r\n\r\n## Samples\r\n> Provide high-level details about the samples related to this feature.\r\n\r\n## Remarks\r\n> List any other known issues, related PRs, TODO items, or any other notes related to the PR.\r\n\r\n## Check List \r\n- [ ] Read the [Contributing Guide](https://github.com/ballerina-platform/ballerina-lang/blob/master/CONTRIBUTING.md)\r\n- [ ] Updated Change Log\r\n- [ ] Checked Tooling Support (#<Issue Number>)\r\n- [ ] Added necessary tests\r\n  - [ ] Unit Tests\r\n  - [ ] Spec Conformance Tests\r\n  - [ ] Integration Tests\r\n  - [ ] Ballerina By Example Tests\r\n- [ ] Increased Test Coverage   \r\n- [ ] Added necessary documentation  \r\n  - [ ] API documentation \r\n  - [ ] Module documentation in Module.md files\r\n  - [ ] Ballerina By Examples\r\n",
      "# [Codecov](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=h1) Report\n> Merging [#29246](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=desc) (4609ffe) into [ballerina-1.2.x](https://codecov.io/gh/ballerina-platform/ballerina-lang/commit/9e6464b9f28a0f707fb1e8ded125be46c1849e41?el=desc) (9e6464b) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246/graphs/tree.svg?width=650&height=150&src=pr&token=IgZRPljg71)](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=tree)\n\n```diff\n@@               Coverage Diff                @@\n##           ballerina-1.2.x   #29246   +/-   ##\n================================================\n  Coverage            14.59%   14.59%           \n================================================\n  Files                   51       51           \n  Lines                 1411     1411           \n  Branches               219      219           \n================================================\n  Hits                   206      206           \n  Misses                1189     1189           \n  Partials                16       16           \n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=footer). Last update [a3bac05...4609ffe](https://codecov.io/gh/ballerina-platform/ballerina-lang/pull/29246?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.7"
}