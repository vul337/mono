{
  "cve_id": "CVE-2021-25939",
  "cwe_ids": [
    "CWE-918"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "arangodb",
  "commit_msg": "[APM-78] Disable installation from remote URL (#15292)",
  "commit_hash": "d9b7f019d2435f107b19a59190bf9cc27d5f34dd",
  "git_url": "https://github.com/arangodb/arangodb/commit/d9b7f019d2435f107b19a59190bf9cc27d5f34dd",
  "file_path": "arangod/GeneralServer/ServerSecurityFeature.cpp",
  "func_name": "ServerSecurityFeature::collectOptions",
  "func_before": "void ServerSecurityFeature::collectOptions(std::shared_ptr<ProgramOptions> options) {\n  options->addOption(\"--server.harden\",\n                     \"lock down REST APIs that reveal version information or server \"\n                     \"internals for non-admin users\",\n                     new BooleanParameter(&_hardenedRestApi))\n                     .setIntroducedIn(30500);\n\n  options->addOption(\"--foxx.api\", \"enables Foxx management REST APIs\",\n                     new BooleanParameter(&_enableFoxxApi),\n                     arangodb::options::makeFlags(\n                     arangodb::options::Flags::DefaultNoComponents,\n                     arangodb::options::Flags::OnCoordinator,\n                     arangodb::options::Flags::OnSingle))\n                     .setIntroducedIn(30500);\n  options->addOption(\"--foxx.store\", \"enables Foxx store in web interface\",\n                     new BooleanParameter(&_enableFoxxStore),\n                     arangodb::options::makeFlags(\n                     arangodb::options::Flags::DefaultNoComponents,\n                     arangodb::options::Flags::OnCoordinator,\n                     arangodb::options::Flags::OnSingle))\n                     .setIntroducedIn(30500);\n\n}",
  "abstract_func_before": "void ServerSecurityFeature::collectOptions(std::shared_ptr<ProgramOptions> VAR_0) {\n  VAR_0->addOption(\"--server.harden\",\n                     \"lock down REST APIs that reveal version information or server \"\n                     \"internals for non-admin users\",\n                     new BooleanParameter(&VAR_1))\n                     .setIntroducedIn(30500);\n\n  VAR_0->addOption(\"--foxx.api\", \"enables Foxx management REST APIs\",\n                     new BooleanParameter(&VAR_2),\n                     arangodb::options::makeFlags(\n                     arangodb::options::Flags::DefaultNoComponents,\n                     arangodb::options::Flags::OnCoordinator,\n                     arangodb::options::Flags::OnSingle))\n                     .setIntroducedIn(30500);\n  VAR_0->addOption(\"--foxx.store\", \"enables Foxx store in web interface\",\n                     new BooleanParameter(&VAR_3),\n                     arangodb::options::makeFlags(\n                     arangodb::options::Flags::DefaultNoComponents,\n                     arangodb::options::Flags::OnCoordinator,\n                     arangodb::options::Flags::OnSingle))\n                     .setIntroducedIn(30500);\n\n}",
  "func_graph_path_before": "arangodb/d9b7f019d2435f107b19a59190bf9cc27d5f34dd/ServerSecurityFeature.cpp/vul/before/0.json",
  "func": "void ServerSecurityFeature::collectOptions(std::shared_ptr<ProgramOptions> options) {\n  options->addOption(\"--server.harden\",\n                     \"lock down REST APIs that reveal version information or server \"\n                     \"internals for non-admin users\",\n                     new BooleanParameter(&_hardenedRestApi))\n                     .setIntroducedIn(30500);\n\n  options->addOption(\"--foxx.api\", \"enables Foxx management REST APIs\",\n                     new BooleanParameter(&_enableFoxxApi),\n                     arangodb::options::makeFlags(\n                     arangodb::options::Flags::DefaultNoComponents,\n                     arangodb::options::Flags::OnCoordinator,\n                     arangodb::options::Flags::OnSingle))\n                     .setIntroducedIn(30500);\n\n  options->addOption(\"--foxx.store\", \"enables Foxx store in web interface\",\n                     new BooleanParameter(&_enableFoxxStore),\n                     arangodb::options::makeFlags(\n                     arangodb::options::Flags::DefaultNoComponents,\n                     arangodb::options::Flags::OnCoordinator,\n                     arangodb::options::Flags::OnSingle))\n                     .setIntroducedIn(30500);\n  \n  options->addOption(\"--foxx.allow-install-from-remote\", \"allow installing Foxx apps from remote URLs other than Github\",\n                     new BooleanParameter(&_foxxAllowInstallFromRemote),\n                     arangodb::options::makeFlags(\n                     arangodb::options::Flags::DefaultNoComponents,\n                     arangodb::options::Flags::OnCoordinator,\n                     arangodb::options::Flags::OnSingle))\n                     .setIntroducedIn(30805);\n}",
  "abstract_func": "void ServerSecurityFeature::collectOptions(std::shared_ptr<ProgramOptions> VAR_0) {\n  VAR_0->addOption(\"--server.harden\",\n                     \"lock down REST APIs that reveal version information or server \"\n                     \"internals for non-admin users\",\n                     new BooleanParameter(&VAR_1))\n                     .setIntroducedIn(30500);\n\n  VAR_0->addOption(\"--foxx.api\", \"enables Foxx management REST APIs\",\n                     new BooleanParameter(&VAR_2),\n                     arangodb::options::makeFlags(\n                     arangodb::options::Flags::DefaultNoComponents,\n                     arangodb::options::Flags::OnCoordinator,\n                     arangodb::options::Flags::OnSingle))\n                     .setIntroducedIn(30500);\n\n  VAR_0->addOption(\"--foxx.store\", \"enables Foxx store in web interface\",\n                     new BooleanParameter(&VAR_3),\n                     arangodb::options::makeFlags(\n                     arangodb::options::Flags::DefaultNoComponents,\n                     arangodb::options::Flags::OnCoordinator,\n                     arangodb::options::Flags::OnSingle))\n                     .setIntroducedIn(30500);\n  \n  VAR_0->addOption(\"--foxx.allow-install-from-remote\", \"allow installing Foxx apps from remote URLs other than Github\",\n                     new BooleanParameter(&VAR_4),\n                     arangodb::options::makeFlags(\n                     arangodb::options::Flags::DefaultNoComponents,\n                     arangodb::options::Flags::OnCoordinator,\n                     arangodb::options::Flags::OnSingle))\n                     .setIntroducedIn(30805);\n}",
  "func_graph_path": "arangodb/d9b7f019d2435f107b19a59190bf9cc27d5f34dd/ServerSecurityFeature.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -12,6 +12,7 @@\n                      arangodb::options::Flags::OnCoordinator,\n                      arangodb::options::Flags::OnSingle))\n                      .setIntroducedIn(30500);\n+\n   options->addOption(\"--foxx.store\", \"enables Foxx store in web interface\",\n                      new BooleanParameter(&_enableFoxxStore),\n                      arangodb::options::makeFlags(\n@@ -19,5 +20,12 @@\n                      arangodb::options::Flags::OnCoordinator,\n                      arangodb::options::Flags::OnSingle))\n                      .setIntroducedIn(30500);\n-\n+  \n+  options->addOption(\"--foxx.allow-install-from-remote\", \"allow installing Foxx apps from remote URLs other than Github\",\n+                     new BooleanParameter(&_foxxAllowInstallFromRemote),\n+                     arangodb::options::makeFlags(\n+                     arangodb::options::Flags::DefaultNoComponents,\n+                     arangodb::options::Flags::OnCoordinator,\n+                     arangodb::options::Flags::OnSingle))\n+                     .setIntroducedIn(30805);\n }",
  "diff_line_info": {
    "deleted_lines": [
      ""
    ],
    "added_lines": [
      "",
      "  ",
      "  options->addOption(\"--foxx.allow-install-from-remote\", \"allow installing Foxx apps from remote URLs other than Github\",",
      "                     new BooleanParameter(&_foxxAllowInstallFromRemote),",
      "                     arangodb::options::makeFlags(",
      "                     arangodb::options::Flags::DefaultNoComponents,",
      "                     arangodb::options::Flags::OnCoordinator,",
      "                     arangodb::options::Flags::OnSingle))",
      "                     .setIntroducedIn(30805);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/arangodb/arangodb/pull/15292",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/arangodb/arangodb/pull/15292: 403 Client Error: Forbidden for url: https://api.github.com/repos/arangodb/arangodb/pulls/15292",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95\n\nThe patch addresses a security issue by disabling remote Foxx app installations by default, adding a new security option."
}