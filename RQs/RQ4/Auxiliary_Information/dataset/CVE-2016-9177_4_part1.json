{
  "cve_id": "CVE-2016-9177",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "perwendel/spark",
  "commit_msg": "Fix for #700 - Arbitrary File Read Vulnerability",
  "commit_hash": "26b57d0596ee73c14c558463943ef0857e53b91f",
  "git_url": "https://github.com/perwendel/spark/commit/26b57d0596ee73c14c558463943ef0857e53b91f",
  "file_path": "src/main/java/spark/staticfiles/StaticFilesConfiguration.java",
  "func_name": "consume",
  "func_before": "public boolean consume(HttpServletRequest httpRequest,\n                           HttpServletResponse httpResponse) throws IOException {\n\n        if (consumeWithFileResourceHandlers(httpRequest, httpResponse)) {\n            return true;\n        }\n\n        if (consumeWithJarResourceHandler(httpRequest, httpResponse)) {\n            return true;\n        }\n\n        return false;\n    }",
  "abstract_func_before": "public boolean consume(HttpServletRequest VAR_0,\n                           HttpServletResponse VAR_1) throws IOException {\n\n        if (consumeWithFileResourceHandlers(VAR_0, VAR_1)) {\n            return true;\n        }\n\n        if (consumeWithJarResourceHandler(VAR_0, VAR_1)) {\n            return true;\n        }\n\n        return false;\n    }",
  "func_graph_path_before": "perwendel/spark/26b57d0596ee73c14c558463943ef0857e53b91f/StaticFilesConfiguration.java/vul/before/4.json",
  "func": "public boolean consume(HttpServletRequest httpRequest,\n                           HttpServletResponse httpResponse) throws IOException {\n        try {\n            if (consumeWithFileResourceHandlers(httpRequest, httpResponse)) {\n                return true;\n            }\n\n            if (consumeWithJarResourceHandler(httpRequest, httpResponse)) {\n                return true;\n            }\n        } catch (DirectoryTraversal.DirectoryTraversalDetection directoryTraversalDetection) {\n            LOG.warn(\"directoryTraversalDetection for path: \" + httpRequest.getPathInfo());\n        }\n        return false;\n    }",
  "abstract_func": "public boolean consume(HttpServletRequest VAR_0,\n                           HttpServletResponse VAR_1) throws IOException {\n        try {\n            if (consumeWithFileResourceHandlers(VAR_0, VAR_1)) {\n                return true;\n            }\n\n            if (consumeWithJarResourceHandler(VAR_0, VAR_1)) {\n                return true;\n            }\n        } catch (DirectoryTraversal.DirectoryTraversalDetection VAR_2) {\n            VAR_3.warn(\"directoryTraversalDetection for path: \" + VAR_0.getPathInfo());\n        }\n        return false;\n    }",
  "func_graph_path": "perwendel/spark/26b57d0596ee73c14c558463943ef0857e53b91f/StaticFilesConfiguration.java/vul/after/4.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,13 +1,15 @@\n public boolean consume(HttpServletRequest httpRequest,\n                            HttpServletResponse httpResponse) throws IOException {\n+        try {\n+            if (consumeWithFileResourceHandlers(httpRequest, httpResponse)) {\n+                return true;\n+            }\n \n-        if (consumeWithFileResourceHandlers(httpRequest, httpResponse)) {\n-            return true;\n+            if (consumeWithJarResourceHandler(httpRequest, httpResponse)) {\n+                return true;\n+            }\n+        } catch (DirectoryTraversal.DirectoryTraversalDetection directoryTraversalDetection) {\n+            LOG.warn(\"directoryTraversalDetection for path: \" + httpRequest.getPathInfo());\n         }\n-\n-        if (consumeWithJarResourceHandler(httpRequest, httpResponse)) {\n-            return true;\n-        }\n-\n         return false;\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "        if (consumeWithFileResourceHandlers(httpRequest, httpResponse)) {",
      "            return true;",
      "",
      "        if (consumeWithJarResourceHandler(httpRequest, httpResponse)) {",
      "            return true;",
      "        }",
      ""
    ],
    "added_lines": [
      "        try {",
      "            if (consumeWithFileResourceHandlers(httpRequest, httpResponse)) {",
      "                return true;",
      "            }",
      "            if (consumeWithJarResourceHandler(httpRequest, httpResponse)) {",
      "                return true;",
      "            }",
      "        } catch (DirectoryTraversal.DirectoryTraversalDetection directoryTraversalDetection) {",
      "            LOG.warn(\"directoryTraversalDetection for path: \" + httpRequest.getPathInfo());"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/perwendel/spark/pull/701",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/perwendel/spark/pull/701: 403 Client Error: Forbidden for url: https://api.github.com/repos/perwendel/spark/pulls/701",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}