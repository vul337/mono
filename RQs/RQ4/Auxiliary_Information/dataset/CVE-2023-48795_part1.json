{
  "cve_id": "CVE-2023-48795",
  "cwe_ids": [
    "CWE-354"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
  "cvss_is_v3": true,
  "repo_name": "hierynomus/sshj",
  "commit_msg": "Implement OpenSSH strict key exchange extension",
  "commit_hash": "94fcc960e0fb198ddec0f7efc53f95ac627fe083",
  "git_url": "https://github.com/hierynomus/sshj/commit/94fcc960e0fb198ddec0f7efc53f95ac627fe083",
  "file_path": "src/itest/java/com/hierynomus/sshj/SshdContainer.java",
  "func_name": "accept",
  "func_before": "public void accept(@NotNull DockerfileBuilder builder) {\n            builder.from(\"alpine:3.18.3\");\n            builder.run(\"apk add --no-cache openssh\");\n            builder.expose(22);\n            builder.copy(\"entrypoint.sh\", \"/entrypoint.sh\");\n\n            builder.add(\"authorized_keys\", \"/home/sshj/.ssh/authorized_keys\");\n            builder.copy(\"test-container/trusted_ca_keys\", \"/etc/ssh/trusted_ca_keys\");\n\n            for (String hostKey : hostKeys) {\n                builder.copy(hostKey, \"/etc/ssh/\" + Paths.get(hostKey).getFileName());\n                builder.copy(hostKey + \".pub\", \"/etc/ssh/\" + Paths.get(hostKey).getFileName() + \".pub\");\n            }\n\n            for (String certificate : certificates) {\n                builder.copy(certificate, \"/etc/ssh/\" + Paths.get(certificate).getFileName());\n            }\n\n\n            builder.run(\"apk add --no-cache tini\"\n                    + \" && echo \\\"root:smile\\\" | chpasswd\"\n                    + \" && adduser -D -s /bin/ash sshj\"\n                    + \" && passwd -u sshj\"\n                    + \" && echo \\\"sshj:ultrapassword\\\" | chpasswd\"\n                    + \" && chmod 600 /home/sshj/.ssh/authorized_keys\"\n                    + \" && chmod 600 /etc/ssh/ssh_host_*_key\"\n                    + \" && chmod 644 /etc/ssh/*.pub\"\n                    + \" && chmod 755 /entrypoint.sh\"\n                    + \" && chown -R sshj:sshj /home/sshj\");\n            builder.entryPoint(\"/sbin/tini\", \"/entrypoint.sh\", \"-o\", \"LogLevel=DEBUG2\");\n\n            builder.add(\"sshd_config\", \"/etc/ssh/sshd_config\");\n        }",
  "abstract_func_before": "public void accept(@NotNull DockerfileBuilder VAR_0) {\n            VAR_0.from(\"alpine:3.18.3\");\n            VAR_0.run(\"apk add --no-cache openssh\");\n            VAR_0.expose(22);\n            VAR_0.copy(\"entrypoint.sh\", \"/entrypoint.sh\");\n\n            VAR_0.add(\"authorized_keys\", \"/home/sshj/.ssh/authorized_keys\");\n            VAR_0.copy(\"test-container/trusted_ca_keys\", \"/etc/ssh/trusted_ca_keys\");\n\n            for (String VAR_1 : VAR_2) {\n                VAR_0.copy(VAR_1, \"/etc/ssh/\" + VAR_3.get(VAR_1).getFileName());\n                VAR_0.copy(VAR_1 + \".pub\", \"/etc/ssh/\" + VAR_3.get(VAR_1).getFileName() + \".pub\");\n            }\n\n            for (String VAR_4 : VAR_5) {\n                VAR_0.copy(VAR_4, \"/etc/ssh/\" + VAR_3.get(VAR_4).getFileName());\n            }\n\n\n            VAR_0.run(\"apk add --no-cache tini\"\n                    + \" && echo \\\"root:smile\\\" | chpasswd\"\n                    + \" && adduser -D -s /bin/ash sshj\"\n                    + \" && passwd -u sshj\"\n                    + \" && echo \\\"sshj:ultrapassword\\\" | chpasswd\"\n                    + \" && chmod 600 /home/sshj/.ssh/authorized_keys\"\n                    + \" && chmod 600 /etc/ssh/ssh_host_*_key\"\n                    + \" && chmod 644 /etc/ssh/*.pub\"\n                    + \" && chmod 755 /entrypoint.sh\"\n                    + \" && chown -R sshj:sshj /home/sshj\");\n            VAR_0.entryPoint(\"/sbin/tini\", \"/entrypoint.sh\", \"-o\", \"LogLevel=DEBUG2\");\n\n            VAR_0.add(\"sshd_config\", \"/etc/ssh/sshd_config\");\n        }",
  "func_graph_path_before": "hierynomus/sshj/94fcc960e0fb198ddec0f7efc53f95ac627fe083/SshdContainer.java/vul/before/0.json",
  "func": "@Override\n        public void accept(@NotNull DockerfileBuilder builder) {\n            builder.from(\"alpine:3.19.0\");\n            builder.run(\"apk add --no-cache openssh\");\n            builder.expose(22);\n            builder.copy(\"entrypoint.sh\", \"/entrypoint.sh\");\n\n            builder.add(\"authorized_keys\", \"/home/sshj/.ssh/authorized_keys\");\n            builder.copy(\"test-container/trusted_ca_keys\", \"/etc/ssh/trusted_ca_keys\");\n\n            for (String hostKey : hostKeys) {\n                builder.copy(hostKey, \"/etc/ssh/\" + Paths.get(hostKey).getFileName());\n                builder.copy(hostKey + \".pub\", \"/etc/ssh/\" + Paths.get(hostKey).getFileName() + \".pub\");\n            }\n\n            for (String certificate : certificates) {\n                builder.copy(certificate, \"/etc/ssh/\" + Paths.get(certificate).getFileName());\n            }\n\n\n            builder.run(\"apk add --no-cache tini\"\n                    + \" && echo \\\"root:smile\\\" | chpasswd\"\n                    + \" && adduser -D -s /bin/ash sshj\"\n                    + \" && passwd -u sshj\"\n                    + \" && echo \\\"sshj:ultrapassword\\\" | chpasswd\"\n                    + \" && chmod 600 /home/sshj/.ssh/authorized_keys\"\n                    + \" && chmod 600 /etc/ssh/ssh_host_*_key\"\n                    + \" && chmod 644 /etc/ssh/*.pub\"\n                    + \" && chmod 755 /entrypoint.sh\"\n                    + \" && chown -R sshj:sshj /home/sshj\");\n            builder.entryPoint(\"/sbin/tini\", \"/entrypoint.sh\", \"-o\", \"LogLevel=DEBUG2\");\n\n            builder.add(\"sshd_config\", \"/etc/ssh/sshd_config\");\n        }",
  "abstract_func": "@Override\n        public void accept(@NotNull DockerfileBuilder VAR_0) {\n            VAR_0.from(\"alpine:3.19.0\");\n            VAR_0.run(\"apk add --no-cache openssh\");\n            VAR_0.expose(22);\n            VAR_0.copy(\"entrypoint.sh\", \"/entrypoint.sh\");\n\n            VAR_0.add(\"authorized_keys\", \"/home/sshj/.ssh/authorized_keys\");\n            VAR_0.copy(\"test-container/trusted_ca_keys\", \"/etc/ssh/trusted_ca_keys\");\n\n            for (String VAR_1 : VAR_2) {\n                VAR_0.copy(VAR_1, \"/etc/ssh/\" + VAR_3.get(VAR_1).getFileName());\n                VAR_0.copy(VAR_1 + \".pub\", \"/etc/ssh/\" + VAR_3.get(VAR_1).getFileName() + \".pub\");\n            }\n\n            for (String VAR_4 : VAR_5) {\n                VAR_0.copy(VAR_4, \"/etc/ssh/\" + VAR_3.get(VAR_4).getFileName());\n            }\n\n\n            VAR_0.run(\"apk add --no-cache tini\"\n                    + \" && echo \\\"root:smile\\\" | chpasswd\"\n                    + \" && adduser -D -s /bin/ash sshj\"\n                    + \" && passwd -u sshj\"\n                    + \" && echo \\\"sshj:ultrapassword\\\" | chpasswd\"\n                    + \" && chmod 600 /home/sshj/.ssh/authorized_keys\"\n                    + \" && chmod 600 /etc/ssh/ssh_host_*_key\"\n                    + \" && chmod 644 /etc/ssh/*.pub\"\n                    + \" && chmod 755 /entrypoint.sh\"\n                    + \" && chown -R sshj:sshj /home/sshj\");\n            VAR_0.entryPoint(\"/sbin/tini\", \"/entrypoint.sh\", \"-o\", \"LogLevel=DEBUG2\");\n\n            VAR_0.add(\"sshd_config\", \"/etc/ssh/sshd_config\");\n        }",
  "func_graph_path": "hierynomus/sshj/94fcc960e0fb198ddec0f7efc53f95ac627fe083/SshdContainer.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,6 @@\n-public void accept(@NotNull DockerfileBuilder builder) {\n-            builder.from(\"alpine:3.18.3\");\n+@Override\n+        public void accept(@NotNull DockerfileBuilder builder) {\n+            builder.from(\"alpine:3.19.0\");\n             builder.run(\"apk add --no-cache openssh\");\n             builder.expose(22);\n             builder.copy(\"entrypoint.sh\", \"/entrypoint.sh\");",
  "diff_line_info": {
    "deleted_lines": [
      "public void accept(@NotNull DockerfileBuilder builder) {",
      "            builder.from(\"alpine:3.18.3\");"
    ],
    "added_lines": [
      "@Override",
      "        public void accept(@NotNull DockerfileBuilder builder) {",
      "            builder.from(\"alpine:3.19.0\");"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/hierynomus/sshj/pull/917",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/hierynomus/sshj/pull/917: 403 Client Error: Forbidden for url: https://api.github.com/repos/hierynomus/sshj/pulls/917",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.7  \n\nThe patch addresses a security vulnerability related to the Terrapin attack by updating the OpenSSH configuration. The Dockerfile update to a newer image likely includes necessary security patches, though the direct code changes are not explicitly shown."
}