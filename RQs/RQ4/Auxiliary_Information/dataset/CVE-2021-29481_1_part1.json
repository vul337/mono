{
  "cve_id": "CVE-2021-29481",
  "cwe_ids": [
    "CWE-312"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "ratpack",
  "commit_msg": "Encrypt client side session cookies by default",
  "commit_hash": "d7d240c06536a8b89a917e4ac842c337f7ea31f0",
  "git_url": "https://github.com/ratpack/ratpack/commit/d7d240c06536a8b89a917e4ac842c337f7ea31f0",
  "file_path": "ratpack-session/src/main/java/ratpack/session/clientside/ClientSideSessionModule.java",
  "func_name": "crypto",
  "func_before": "@Provides\n  @Singleton\n  Crypto crypto(ClientSideSessionConfig config) {\n    if (config.getSecretKey() == null || config.getCipherAlgorithm() == null) {\n      return NoCrypto.INSTANCE;\n    } else {\n      return new DefaultCrypto(config.getSecretKey().getBytes(CharsetUtil.UTF_8), config.getCipherAlgorithm());\n    }\n  }",
  "abstract_func_before": "@Provides\n  @Singleton\n  Crypto crypto(ClientSideSessionConfig VAR_0) {\n    if (VAR_0.getSecretKey() == null || VAR_0.getCipherAlgorithm() == null) {\n      return VAR_1.INSTANCE;\n    } else {\n      return new DefaultCrypto(VAR_0.getSecretKey().getBytes(VAR_2.UTF_8), VAR_0.getCipherAlgorithm());\n    }\n  }",
  "func_graph_path_before": "ratpack/d7d240c06536a8b89a917e4ac842c337f7ea31f0/ClientSideSessionModule.java/vul/before/0.json",
  "func": "@Provides\n  @Singleton\n  Crypto crypto(ClientSideSessionConfig config) {\n    if (config.getSecretKey() == null || config.getCipherAlgorithm() == null) {\n      return NoCrypto.INSTANCE;\n    } else {\n      return new DefaultCrypto(config.getSecretKey().getBytes(CharsetUtil.ISO_8859_1), config.getCipherAlgorithm());\n    }\n  }",
  "abstract_func": "@Provides\n  @Singleton\n  Crypto crypto(ClientSideSessionConfig VAR_0) {\n    if (VAR_0.getSecretKey() == null || VAR_0.getCipherAlgorithm() == null) {\n      return VAR_1.INSTANCE;\n    } else {\n      return new DefaultCrypto(VAR_0.getSecretKey().getBytes(VAR_2.ISO_8859_1), VAR_0.getCipherAlgorithm());\n    }\n  }",
  "func_graph_path": "ratpack/d7d240c06536a8b89a917e4ac842c337f7ea31f0/ClientSideSessionModule.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,6 +4,6 @@\n     if (config.getSecretKey() == null || config.getCipherAlgorithm() == null) {\n       return NoCrypto.INSTANCE;\n     } else {\n-      return new DefaultCrypto(config.getSecretKey().getBytes(CharsetUtil.UTF_8), config.getCipherAlgorithm());\n+      return new DefaultCrypto(config.getSecretKey().getBytes(CharsetUtil.ISO_8859_1), config.getCipherAlgorithm());\n     }\n   }",
  "diff_line_info": {
    "deleted_lines": [
      "      return new DefaultCrypto(config.getSecretKey().getBytes(CharsetUtil.UTF_8), config.getCipherAlgorithm());"
    ],
    "added_lines": [
      "      return new DefaultCrypto(config.getSecretKey().getBytes(CharsetUtil.ISO_8859_1), config.getCipherAlgorithm());"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/ratpack/ratpack/pull/1590",
  "description": {
    "pr_info": {
      "title": "Use random UUID for default client side session encryption secret",
      "number": 1590
    },
    "comment": [
      "\n\n<!-- Reviewable:start -->\nThis change isâ€‚[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/ratpack/ratpack/1590)\n<!-- Reviewable:end -->\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9\n\nThe commit message refers to encrypting session cookies, addressing a security concern. The code change modifies the charset used in encryption, which likely fixes an insecure practice. Although no CVE is mentioned, the intent is clear, leading to a confident classification."
}