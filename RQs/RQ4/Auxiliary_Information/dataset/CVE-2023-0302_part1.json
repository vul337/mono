{
  "cve_id": "CVE-2023-0302",
  "cwe_ids": [
    "CWE-74"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix ANSI Escape Sequence Injection vulns via DWARF ##vuln\n\n* Reported by @solid-snail via huntrdev\r\n* BountyID: 583133af-7ae6-4a21-beef-a4b0182cf82e\r\n* Reproducer: dwarf_test_func_patched",
  "commit_hash": "961f0e723903011d4f54c2396e44efa91fcc74ce",
  "git_url": "https://github.com/radareorg/radare2/commit/961f0e723903011d4f54c2396e44efa91fcc74ce",
  "file_path": "libr/util/str.c",
  "func_name": "r_str_ansi_strip",
  "func_before": "R_API size_t r_str_ansi_strip(char *str) {\n\tsize_t i = 0;\n\twhile (str[i]) {\n\t\tsize_t chlen = __str_ansi_length (str + i);\n\t\tif (chlen > 1) {\n\t\t\tr_str_cpy (str + i + 1, str + i + chlen);\n\t\t}\n\t\ti++;\n\t}\n\treturn i;\n}",
  "abstract_func_before": "R_API size_t r_str_ansi_strip(char *VAR_0) {\n\tsize_t VAR_1 = 0;\n\twhile (VAR_0[VAR_1]) {\n\t\tsize_t VAR_2 = __str_ansi_length (VAR_0 + VAR_1);\n\t\tif (VAR_2 > 1) {\n\t\t\tr_str_cpy (VAR_0 + VAR_1 + 1, VAR_0 + VAR_1 + VAR_2);\n\t\t}\n\t\tVAR_1++;\n\t}\n\treturn VAR_1;\n}",
  "func_graph_path_before": null,
  "func": "R_API size_t r_str_ansi_strip(char *str) {\n\tsize_t i = 0;\n\twhile (str[i]) {\n\t\tsize_t chlen = __str_ansi_length (str + i);\n\t\tif (chlen > 1) {\n\t\t\tr_str_cpy (str + i, str + i + chlen);\n\t\t} else {\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}",
  "abstract_func": "R_API size_t r_str_ansi_strip(char *VAR_0) {\n\tsize_t VAR_1 = 0;\n\twhile (VAR_0[VAR_1]) {\n\t\tsize_t VAR_2 = __str_ansi_length (VAR_0 + VAR_1);\n\t\tif (VAR_2 > 1) {\n\t\t\tr_str_cpy (VAR_0 + VAR_1, VAR_0 + VAR_1 + VAR_2);\n\t\t} else {\n\t\t\tVAR_1++;\n\t\t}\n\t}\n\treturn VAR_1;\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,9 +3,10 @@\n \twhile (str[i]) {\n \t\tsize_t chlen = __str_ansi_length (str + i);\n \t\tif (chlen > 1) {\n-\t\t\tr_str_cpy (str + i + 1, str + i + chlen);\n+\t\t\tr_str_cpy (str + i, str + i + chlen);\n+\t\t} else {\n+\t\t\ti++;\n \t\t}\n-\t\ti++;\n \t}\n \treturn i;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\t\t\tr_str_cpy (str + i + 1, str + i + chlen);",
      "\t\ti++;"
    ],
    "added_lines": [
      "\t\t\tr_str_cpy (str + i, str + i + chlen);",
      "\t\t} else {",
      "\t\t\ti++;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/21231",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/radareorg/radare2/pull/21231: 403 Client Error: Forbidden for url: https://api.github.com/repos/radareorg/radare2/pulls/21231",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "The commit message explicitly states the intention to fix a vulnerability related to ANSI escape sequence injection. The code diff modifies how the function handles escape sequences, likely preventing injection by adjusting string copying and index management. \n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}