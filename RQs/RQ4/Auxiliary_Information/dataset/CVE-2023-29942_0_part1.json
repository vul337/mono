{
  "cve_id": "CVE-2023-29942",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "llvm/llvm-project",
  "commit_msg": "[mlir][spirv] Handle failed conversions of struct elements (#70005)\n\nLLVMStructTypes could be emitted with some null elements. This caused a\r\ncrash later in the LLVMDialect verifier.\r\n\r\nWe now use `convertTypes` and check that all types were successfully converted before passing them to the `LLVMStructType` constructor.\r\n\r\nSee #59990",
  "commit_hash": "30ca16ec87206294f4ad0e9688c88f32421b343e",
  "git_url": "https://github.com/llvm/llvm-project/commit/30ca16ec87206294f4ad0e9688c88f32421b343e",
  "file_path": "mlir/lib/Conversion/SPIRVToLLVM/SPIRVToLLVM.cpp",
  "func_name": "convertStructType",
  "func_before": "static std::optional<Type> convertStructType(spirv::StructType type,\n                                             LLVMTypeConverter &converter) {\n  SmallVector<spirv::StructType::MemberDecorationInfo, 4> memberDecorations;\n  type.getMemberDecorations(memberDecorations);\n  if (!memberDecorations.empty())\n    return std::nullopt;\n  if (type.hasOffset())\n    return convertStructTypeWithOffset(type, converter);\n  return convertStructTypePacked(type, converter);\n}",
  "abstract_func_before": "static std::optional<Type> convertStructType(spirv::StructType VAR_0,\n                                             LLVMTypeConverter &VAR_1) {\n  SmallVector<spirv::StructType::MemberDecorationInfo, 4> VAR_2;\n  VAR_0.getMemberDecorations(VAR_2);\n  if (!VAR_2.empty())\n    return std::nullopt;\n  if (VAR_0.hasOffset())\n    return convertStructTypeWithOffset(VAR_0, VAR_1);\n  return convertStructTypePacked(VAR_0, VAR_1);\n}",
  "func_graph_path_before": "llvm/llvm-project/30ca16ec87206294f4ad0e9688c88f32421b343e/SPIRVToLLVM.cpp/vul/before/0.json",
  "func": "static Type convertStructType(spirv::StructType type,\n                              LLVMTypeConverter &converter) {\n  SmallVector<spirv::StructType::MemberDecorationInfo, 4> memberDecorations;\n  type.getMemberDecorations(memberDecorations);\n  if (!memberDecorations.empty())\n    return nullptr;\n  if (type.hasOffset())\n    return convertStructTypeWithOffset(type, converter);\n  return convertStructTypePacked(type, converter);\n}",
  "abstract_func": "static Type convertStructType(spirv::StructType VAR_0,\n                              LLVMTypeConverter &VAR_1) {\n  SmallVector<spirv::StructType::MemberDecorationInfo, 4> VAR_2;\n  VAR_0.getMemberDecorations(VAR_2);\n  if (!VAR_2.empty())\n    return nullptr;\n  if (VAR_0.hasOffset())\n    return convertStructTypeWithOffset(VAR_0, VAR_1);\n  return convertStructTypePacked(VAR_0, VAR_1);\n}",
  "func_graph_path": "llvm/llvm-project/30ca16ec87206294f4ad0e9688c88f32421b343e/SPIRVToLLVM.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,9 +1,9 @@\n-static std::optional<Type> convertStructType(spirv::StructType type,\n-                                             LLVMTypeConverter &converter) {\n+static Type convertStructType(spirv::StructType type,\n+                              LLVMTypeConverter &converter) {\n   SmallVector<spirv::StructType::MemberDecorationInfo, 4> memberDecorations;\n   type.getMemberDecorations(memberDecorations);\n   if (!memberDecorations.empty())\n-    return std::nullopt;\n+    return nullptr;\n   if (type.hasOffset())\n     return convertStructTypeWithOffset(type, converter);\n   return convertStructTypePacked(type, converter);",
  "diff_line_info": {
    "deleted_lines": [
      "static std::optional<Type> convertStructType(spirv::StructType type,",
      "                                             LLVMTypeConverter &converter) {",
      "    return std::nullopt;"
    ],
    "added_lines": [
      "static Type convertStructType(spirv::StructType type,",
      "                              LLVMTypeConverter &converter) {",
      "    return nullptr;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/llvm/llvm-project/pull/70005",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/llvm/llvm-project/pull/70005: 403 Client Error: Forbidden for url: https://api.github.com/repos/llvm/llvm-project/pulls/70005",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.9"
}