{
  "cve_id": "CVE-2020-36635",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
  "cvss_is_v3": true,
  "repo_name": "openmrs/openmrs-module-appointmentscheduling",
  "commit_msg": "RA-1772: Fix stored xss is appointment scheduling (#32)",
  "commit_hash": "34213c3f6ea22df427573076fb62744694f601d8",
  "git_url": "https://github.com/openmrs/openmrs-module-appointmentscheduling/commit/34213c3f6ea22df427573076fb62744694f601d8",
  "file_path": "api/src/main/java/org/openmrs/module/appointmentscheduling/validator/AppointmentTypeValidator.java",
  "func_name": "validateFieldName",
  "func_before": "private void validateFieldName(Errors errors, AppointmentType appointmentType) {\n\t\tValidationUtils.rejectIfEmptyOrWhitespace(errors, \"name\", \"error.name\");\n\t\tif (appointmentService.verifyDuplicatedAppointmentTypeName(appointmentType)) {\n\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.nameDuplicated\");\n\t\t}\n\t\tif (verifyIfNameHasMoreThan100Characters(appointmentType.getName())) {\n\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.longName.errorMessage\");\n\t\t}\n\t}",
  "abstract_func_before": "private void validateFieldName(Errors VAR_0, AppointmentType VAR_1) {\n\t\tVAR_2.rejectIfEmptyOrWhitespace(VAR_0, \"name\", \"error.name\");\n\t\tif (VAR_3.verifyDuplicatedAppointmentTypeName(VAR_1)) {\n\t\t\tVAR_0.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.nameDuplicated\");\n\t\t}\n\t\tif (verifyIfNameHasMoreThan100Characters(VAR_1.getName())) {\n\t\t\tVAR_0.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.longName.errorMessage\");\n\t\t}\n\t}",
  "func_graph_path_before": "openmrs/openmrs-module-appointmentscheduling/34213c3f6ea22df427573076fb62744694f601d8/AppointmentTypeValidator.java/vul/before/0.json",
  "func": "private void validateFieldName(Errors errors, AppointmentType appointmentType) {\n\t\tValidationUtils.rejectIfEmptyOrWhitespace(errors, \"name\", \"error.name\");\n\t\tif (appointmentService.verifyDuplicatedAppointmentTypeName(appointmentType)) {\n\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.nameDuplicated\");\n\t\t}\n\t\tif (verifyIfNameHasMoreThan100Characters(appointmentType.getName())) {\n\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.longName.errorMessage\");\n\t\t}\n\t\tif(verifyIfNameHasHtmlEncodableChars(appointmentType.getName())){\n\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.unsafeName.errorMessage\");\n\t\t}\n\t}",
  "abstract_func": "private void validateFieldName(Errors VAR_0, AppointmentType VAR_1) {\n\t\tVAR_2.rejectIfEmptyOrWhitespace(VAR_0, \"name\", \"error.name\");\n\t\tif (VAR_3.verifyDuplicatedAppointmentTypeName(VAR_1)) {\n\t\t\tVAR_0.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.nameDuplicated\");\n\t\t}\n\t\tif (verifyIfNameHasMoreThan100Characters(VAR_1.getName())) {\n\t\t\tVAR_0.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.longName.errorMessage\");\n\t\t}\n\t\tif(verifyIfNameHasHtmlEncodableChars(VAR_1.getName())){\n\t\t\tVAR_0.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.unsafeName.errorMessage\");\n\t\t}\n\t}",
  "func_graph_path": "openmrs/openmrs-module-appointmentscheduling/34213c3f6ea22df427573076fb62744694f601d8/AppointmentTypeValidator.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,4 +6,7 @@\n \t\tif (verifyIfNameHasMoreThan100Characters(appointmentType.getName())) {\n \t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.longName.errorMessage\");\n \t\t}\n+\t\tif(verifyIfNameHasHtmlEncodableChars(appointmentType.getName())){\n+\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.unsafeName.errorMessage\");\n+\t\t}\n \t}",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\t\tif(verifyIfNameHasHtmlEncodableChars(appointmentType.getName())){",
      "\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.unsafeName.errorMessage\");",
      "\t\t}"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/openmrs/openmrs-module-appointmentscheduling/pull/32",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/openmrs/openmrs-module-appointmentscheduling/pull/32: 403 Client Error: Forbidden for url: https://api.github.com/repos/openmrs/openmrs-module-appointmentscheduling/pulls/32",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}