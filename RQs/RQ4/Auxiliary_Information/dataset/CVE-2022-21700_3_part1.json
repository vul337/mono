{
  "cve_id": "CVE-2022-21700",
  "cwe_ids": [
    "CWE-400"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "micronaut-projects/micronaut-core",
  "commit_msg": "Use ConversionContext constants where possible instead of class (#2356)\n\nChanges\r\n-------\r\n * Added ArgumentConversionContext constants in ConversionContext\r\n * Replaced Argument.of and use of argument classes with\r\nConversionContext constants where possible\r\n * Added getFirst method in ConvertibleMultiValues that accepts\r\nArgumentConversionContent parameter\r\n\r\nPartially addresses issue #2355",
  "commit_hash": "b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3",
  "git_url": "https://github.com/micronaut-projects/micronaut-core/commit/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3",
  "file_path": "http/src/main/java/io/micronaut/http/HttpHeaders.java",
  "func_name": "isKeepAlive",
  "func_before": "default boolean isKeepAlive() {\n        return getFirst(CONNECTION, String.class).map(val -> val.equalsIgnoreCase(\"keep-alive\")).orElse(false);\n    }",
  "abstract_func_before": "default boolean isKeepAlive() {\n        return getFirst(VAR_0, String.class).map(VAR_1 -> VAR_1.equalsIgnoreCase(\"keep-alive\")).orElse(false);\n    }",
  "func_graph_path_before": "micronaut-projects/micronaut-core/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3/HttpHeaders.java/vul/before/4.json",
  "func": "default boolean isKeepAlive() {\n        return getFirst(CONNECTION, ConversionContext.STRING).map(val -> val.equalsIgnoreCase(\"keep-alive\")).orElse(false);\n    }",
  "abstract_func": "default boolean isKeepAlive() {\n        return getFirst(VAR_0, VAR_1.STRING).map(VAR_2 -> VAR_2.equalsIgnoreCase(\"keep-alive\")).orElse(false);\n    }",
  "func_graph_path": "micronaut-projects/micronaut-core/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3/HttpHeaders.java/vul/after/4.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,3 +1,3 @@\n default boolean isKeepAlive() {\n-        return getFirst(CONNECTION, String.class).map(val -> val.equalsIgnoreCase(\"keep-alive\")).orElse(false);\n+        return getFirst(CONNECTION, ConversionContext.STRING).map(val -> val.equalsIgnoreCase(\"keep-alive\")).orElse(false);\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "        return getFirst(CONNECTION, String.class).map(val -> val.equalsIgnoreCase(\"keep-alive\")).orElse(false);"
    ],
    "added_lines": [
      "        return getFirst(CONNECTION, ConversionContext.STRING).map(val -> val.equalsIgnoreCase(\"keep-alive\")).orElse(false);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/micronaut-projects/micronaut-core/pull/2356",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/micronaut-projects/micronaut-core/pull/2356: 403 Client Error: Forbidden for url: https://api.github.com/repos/micronaut-projects/micronaut-core/pulls/2356",
  "Bug Filter": "Supporting & Non-Core Improvements",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Supporting & Non-Core Improvements; **Confidence:** 1.0"
}