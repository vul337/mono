{
  "cve_id": "CVE-2023-30300",
  "cwe_ids": [
    "CWE-835"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "WebAssembly/wabt",
  "commit_msg": "Respond to review",
  "commit_hash": "07a33969cbc4d3b346891d062b76b29be6705c01",
  "git_url": "https://github.com/WebAssembly/wabt/commit/07a33969cbc4d3b346891d062b76b29be6705c01",
  "file_path": "src/tools/wasm2c.cc",
  "func_name": "ProgramMain",
  "func_before": "int ProgramMain(int argc, char** argv) {\n  Result result;\n\n  InitStdio();\n  ParseOptions(argc, argv);\n\n  Errors errors;\n  result = wasm2c(errors);\n  FormatErrorsToFile(errors, Location::Type::Binary);\n\n  return result != Result::Ok;\n}",
  "abstract_func_before": "int ProgramMain(int VAR_0, char** VAR_1) {\n  Result VAR_2;\n\n  InitStdio();\n  ParseOptions(VAR_0, VAR_1);\n\n  Errors VAR_3;\n  VAR_2 = wasm2c(VAR_3);\n  FormatErrorsToFile(VAR_3, Location::Type::Binary);\n\n  return VAR_2 != Result::Ok;\n}",
  "func_graph_path_before": "WebAssembly/wabt/07a33969cbc4d3b346891d062b76b29be6705c01/wasm2c.cc/vul/before/0.json",
  "func": "int ProgramMain(int argc, char** argv) {\n  Result result;\n\n  InitStdio();\n  ParseOptions(argc, argv);\n\n  Errors errors;\n  result = Wasm2cMain(errors);\n  FormatErrorsToFile(errors, Location::Type::Binary);\n\n  return result != Result::Ok;\n}",
  "abstract_func": "int ProgramMain(int VAR_0, char** VAR_1) {\n  Result VAR_2;\n\n  InitStdio();\n  ParseOptions(VAR_0, VAR_1);\n\n  Errors VAR_3;\n  VAR_2 = Wasm2cMain(VAR_3);\n  FormatErrorsToFile(VAR_3, Location::Type::Binary);\n\n  return VAR_2 != Result::Ok;\n}",
  "func_graph_path": "WebAssembly/wabt/07a33969cbc4d3b346891d062b76b29be6705c01/wasm2c.cc/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -5,7 +5,7 @@\n   ParseOptions(argc, argv);\n \n   Errors errors;\n-  result = wasm2c(errors);\n+  result = Wasm2cMain(errors);\n   FormatErrorsToFile(errors, Location::Type::Binary);\n \n   return result != Result::Ok;",
  "diff_line_info": {
    "deleted_lines": [
      "  result = wasm2c(errors);"
    ],
    "added_lines": [
      "  result = Wasm2cMain(errors);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/WebAssembly/wabt/pull/2183",
  "description": {
    "pr_info": {
      "title": "wasm2c: use CHECK_RESULT throughout workhorse function (NFC)",
      "number": 2183
    },
    "comment": [
      "This simplifies the wasm2c main-ish function to use CHECK_RESULT everywhere it can. This lets the function be written in a less nested/indented way and now validates the module before running GenerateNames.\r\n\r\nFixes #2180",
      "Because all the code moved here its hard to see where the actual fix was.  Aside from moving the code and changing the nesting what actually fixed the bug?",
      "Oh I see, in the old code `GenerateNames` was called even if validation failed.\r\n\r\nlgtm with naming nit.",
      "Thank you for fixing the hang issue in `wasm2c`. I appreciate your hard work and dedication to improving the security of the project.\r\n\r\nI am just curious the hang discovered may qualify for a CVE, and I was wondering if you would be willing to consider assigning one., if it qualifies. The hang had the potential to cause a denial of service attack, and it was discovered through rigorous testing of the software.\r\n\r\nBest,",
      "Thank you for reporting this! I had asked a bunch of questions on the original issue when I was trying and failing to replicate your report (https://github.com/WebAssembly/wabt/issues/2180#issuecomment-1486368788) -- if you want to discuss further, let's have the conversation there.",
      "Thank you for the answer, Professor. I commented in #2180 \r\n\r\nBest, \r\nKhan."
    ]
  },
  "Bug Filter": "Supporting & Non-Core Improvements",
  "Bug Filter Confidence": 0.6,
  "Bug Filter Response": "**Final Classification:** Supporting & Non-Core Improvements; **Confidence:** 0.6\n\nThe patch modifies the main function to improve error handling and reduces code nesting, which is a code refactoring and supporting improvement rather than a security fix. The changes address code structure and validation without explicitly fixing a security issue."
}