{
  "cve_id": "CVE-2019-14844",
  "cwe_ids": [
    "CWE-628"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "krb5",
  "commit_msg": "Fix KDC crash when logging PKINIT enctypes\n\nCommit a649279727490687d54becad91fde8cf7429d951 introduced a KDC crash\nbug due to transposed strlcpy() arguments.  Fix the argument order.\n\nThis bug does not affect any MIT krb5 release, but affects the Fedora\nkrb5 packages due to backports.  CVE-2019-14844 has been issued as a\nresult.\n\nticket: 8772",
  "commit_hash": "c3e62609849ab62caf52fa9b90d9ab60d365a64d",
  "git_url": "https://github.com/krb5/krb5/commit/c3e62609849ab62caf52fa9b90d9ab60d365a64d",
  "file_path": "src/kdc/kdc_util.c",
  "func_name": "enctype_name",
  "func_before": "static krb5_error_code\nenctype_name(krb5_enctype ktype, char *buf, size_t buflen)\n{\n    char *name;\n    size_t len;\n\n    if (buflen == 0)\n        return EINVAL;\n    *buf = '\\0'; /* ensure these are always valid C-strings */\n\n    if (krb5int_c_deprecated_enctype(ktype)) {\n        len = strlcpy(buf, \"DEPRECATED:\", buflen);\n        if (len >= buflen)\n            return ENOMEM;\n        buflen -= len;\n        buf += len;\n    }\n\n    /* rfc4556 recommends that clients wishing to indicate support for these\n     * pkinit algorithms include them in the etype field of the AS-REQ. */\n    if (ktype == ENCTYPE_DSA_SHA1_CMS)\n        name = \"id-dsa-with-sha1-CmsOID\";\n    else if (ktype == ENCTYPE_MD5_RSA_CMS)\n        name = \"md5WithRSAEncryption-CmsOID\";\n    else if (ktype == ENCTYPE_SHA1_RSA_CMS)\n        name = \"sha-1WithRSAEncryption-CmsOID\";\n    else if (ktype == ENCTYPE_RC2_CBC_ENV)\n        name = \"rc2-cbc-EnvOID\";\n    else if (ktype == ENCTYPE_RSA_ENV)\n        name = \"rsaEncryption-EnvOID\";\n    else if (ktype == ENCTYPE_RSA_ES_OAEP_ENV)\n        name = \"id-RSAES-OAEP-EnvOID\";\n    else if (ktype == ENCTYPE_DES3_CBC_ENV)\n        name = \"des-ede3-cbc-EnvOID\";\n    else\n        return krb5_enctype_to_name(ktype, FALSE, buf, buflen);\n\n    if (strlcpy(name, buf, buflen) >= buflen)\n        return ENOMEM;\n    return 0;\n}",
  "abstract_func_before": "static krb5_error_code\nenctype_name(krb5_enctype VAR_0, char *VAR_1, size_t VAR_2)\n{\n    char *VAR_3;\n    size_t VAR_4;\n\n    if (VAR_2 == 0)\n        return VAR_5;\n    *VAR_1 = '\\0'; /* COMMENT_0 */\n\n    if (krb5int_c_deprecated_enctype(VAR_0)) {\n        VAR_4 = strlcpy(VAR_1, \"DEPRECATED:\", VAR_2);\n        if (VAR_4 >= VAR_2)\n            return VAR_6;\n        VAR_2 -= VAR_4;\n        VAR_1 += VAR_4;\n    }\n\n    /* COMMENT_1 */\n                                                                          \n    if (VAR_0 == VAR_7)\n        VAR_3 = \"id-dsa-with-sha1-CmsOID\";\n    else if (VAR_0 == VAR_8)\n        VAR_3 = \"md5WithRSAEncryption-CmsOID\";\n    else if (VAR_0 == VAR_9)\n        VAR_3 = \"sha-1WithRSAEncryption-CmsOID\";\n    else if (VAR_0 == VAR_10)\n        VAR_3 = \"rc2-cbc-EnvOID\";\n    else if (VAR_0 == VAR_11)\n        VAR_3 = \"rsaEncryption-EnvOID\";\n    else if (VAR_0 == VAR_12)\n        VAR_3 = \"id-RSAES-OAEP-EnvOID\";\n    else if (VAR_0 == VAR_13)\n        VAR_3 = \"des-ede3-cbc-EnvOID\";\n    else\n        return krb5_enctype_to_name(VAR_0, FALSE, VAR_1, VAR_2);\n\n    if (strlcpy(VAR_3, VAR_1, VAR_2) >= VAR_2)\n        return VAR_6;\n    return 0;\n}",
  "func_graph_path_before": "krb5/c3e62609849ab62caf52fa9b90d9ab60d365a64d/kdc_util.c/vul/before/0.json",
  "func": "static krb5_error_code\nenctype_name(krb5_enctype ktype, char *buf, size_t buflen)\n{\n    char *name;\n    size_t len;\n\n    if (buflen == 0)\n        return EINVAL;\n    *buf = '\\0'; /* ensure these are always valid C-strings */\n\n    if (krb5int_c_deprecated_enctype(ktype)) {\n        len = strlcpy(buf, \"DEPRECATED:\", buflen);\n        if (len >= buflen)\n            return ENOMEM;\n        buflen -= len;\n        buf += len;\n    }\n\n    /* rfc4556 recommends that clients wishing to indicate support for these\n     * pkinit algorithms include them in the etype field of the AS-REQ. */\n    if (ktype == ENCTYPE_DSA_SHA1_CMS)\n        name = \"id-dsa-with-sha1-CmsOID\";\n    else if (ktype == ENCTYPE_MD5_RSA_CMS)\n        name = \"md5WithRSAEncryption-CmsOID\";\n    else if (ktype == ENCTYPE_SHA1_RSA_CMS)\n        name = \"sha-1WithRSAEncryption-CmsOID\";\n    else if (ktype == ENCTYPE_RC2_CBC_ENV)\n        name = \"rc2-cbc-EnvOID\";\n    else if (ktype == ENCTYPE_RSA_ENV)\n        name = \"rsaEncryption-EnvOID\";\n    else if (ktype == ENCTYPE_RSA_ES_OAEP_ENV)\n        name = \"id-RSAES-OAEP-EnvOID\";\n    else if (ktype == ENCTYPE_DES3_CBC_ENV)\n        name = \"des-ede3-cbc-EnvOID\";\n    else\n        return krb5_enctype_to_name(ktype, FALSE, buf, buflen);\n\n    if (strlcpy(buf, name, buflen) >= buflen)\n        return ENOMEM;\n    return 0;\n}",
  "abstract_func": "static krb5_error_code\nenctype_name(krb5_enctype VAR_0, char *VAR_1, size_t VAR_2)\n{\n    char *VAR_3;\n    size_t VAR_4;\n\n    if (VAR_2 == 0)\n        return VAR_5;\n    *VAR_1 = '\\0'; /* COMMENT_0 */\n\n    if (krb5int_c_deprecated_enctype(VAR_0)) {\n        VAR_4 = strlcpy(VAR_1, \"DEPRECATED:\", VAR_2);\n        if (VAR_4 >= VAR_2)\n            return VAR_6;\n        VAR_2 -= VAR_4;\n        VAR_1 += VAR_4;\n    }\n\n    /* COMMENT_1 */\n                                                                          \n    if (VAR_0 == VAR_7)\n        VAR_3 = \"id-dsa-with-sha1-CmsOID\";\n    else if (VAR_0 == VAR_8)\n        VAR_3 = \"md5WithRSAEncryption-CmsOID\";\n    else if (VAR_0 == VAR_9)\n        VAR_3 = \"sha-1WithRSAEncryption-CmsOID\";\n    else if (VAR_0 == VAR_10)\n        VAR_3 = \"rc2-cbc-EnvOID\";\n    else if (VAR_0 == VAR_11)\n        VAR_3 = \"rsaEncryption-EnvOID\";\n    else if (VAR_0 == VAR_12)\n        VAR_3 = \"id-RSAES-OAEP-EnvOID\";\n    else if (VAR_0 == VAR_13)\n        VAR_3 = \"des-ede3-cbc-EnvOID\";\n    else\n        return krb5_enctype_to_name(VAR_0, FALSE, VAR_1, VAR_2);\n\n    if (strlcpy(VAR_1, VAR_3, VAR_2) >= VAR_2)\n        return VAR_6;\n    return 0;\n}",
  "func_graph_path": "krb5/c3e62609849ab62caf52fa9b90d9ab60d365a64d/kdc_util.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -35,7 +35,7 @@\n     else\n         return krb5_enctype_to_name(ktype, FALSE, buf, buflen);\n \n-    if (strlcpy(name, buf, buflen) >= buflen)\n+    if (strlcpy(buf, name, buflen) >= buflen)\n         return ENOMEM;\n     return 0;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "    if (strlcpy(name, buf, buflen) >= buflen)"
    ],
    "added_lines": [
      "    if (strlcpy(buf, name, buflen) >= buflen)"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/krb5/krb5/pull/981",
  "description": {
    "pr_info": {
      "title": "Fix KDC crash when logging PKINIT enctypes",
      "number": 981
    },
    "comment": [
      "[It doesn't look like there's any existing way to send PKINIT enctypes in an AS or TGS request with the current code.  I tested manually by changing krb5int_parse_enctype_list() to add the enctype I wanted.\r\n\r\nWhile testing this I noted that new enctypes will generate strings like \"DEPRECATED:(5000)\" in the KDC log, because krb5int_c_deprecated_enctype() returns true for unknown enctypes.  This requires some thought; an enctype we don't recognize could be either too old or too new to be on the list.  PKINIT enctypes are also marked as deprecated because they were never in the libk5crypto list, and it's unclear whether this is correct.]\r\n\r\nCommit a649279727490687d54becad91fde8cf7429d951 introduced a KDC crash\r\nbug due to transposed strlcpy() arguments.  Fix the argument order.\r\n\r\nThis bug does not affect any MIT krb5 release, but affects the Fedora\r\nkrb5 packages due to backports.  CVE-2019-14844 has been issued as a\r\nresult.\r\n",
      "The \"DEPRECATED\" issue is interesting, but I think the only real worry is that we mark newer enctypes that way.\r\n\r\nRFC 4556 section 3.1.4 says this about the pkinit enctypes:\r\n\r\n> The practice of assigning Kerberos encryption type numbers to indicate support for CMS algorithms is considered deprecated, and new numbers should not be assigned for this purpose.  Instead, the supportedCMSTypes field should be used to identify the algorithms supported by the client and the preference order of the client.\r\n\r\nBut it follows that with:\r\n\r\n> For maximum interoperability, however, PKINIT clients wishing to indicate to the KDC the support for one or more of the algorithms listed above SHOULD include the corresponding encryption type number(s) in the etype field of the AS-REQ.\r\n\r\nDoes that meet the krb5 requirements for deprecation?  It seems a little handwavy, but my feeling is yes.  If not, it may be time to get started on an I-D for their explicit deprecation..."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}