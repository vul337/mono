{
  "cve_id": "CVE-2022-29184",
  "cwe_ids": [
    "CWE-77"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "gocd",
  "commit_msg": "Improve escaping of arguments when constructing Hg command calls",
  "commit_hash": "37d35115db2ada2190173f9413cfe1bc6c295ecb",
  "git_url": "https://github.com/gocd/gocd/commit/37d35115db2ada2190173f9413cfe1bc6c295ecb",
  "file_path": "domain/src/main/java/com/thoughtworks/go/domain/materials/mercurial/HgCommand.java",
  "func_name": "checkConnection",
  "func_before": "public void checkConnection(UrlArgument repositoryURL) {\n        execute(createCommandLine(\"hg\").withArgs(\"id\", \"--id\").withArg(repositoryURL).withNonArgSecrets(secrets).withEncoding(\"utf-8\"), new NamedProcessTag(repositoryURL.forDisplay()));\n    }",
  "abstract_func_before": "public void checkConnection(UrlArgument VAR_0) {\n        execute(createCommandLine(\"hg\").withArgs(\"id\", \"--id\").withArg(VAR_0).withNonArgSecrets(VAR_1).withEncoding(\"utf-8\"), new NamedProcessTag(VAR_0.forDisplay()));\n    }",
  "func_graph_path_before": "gocd/37d35115db2ada2190173f9413cfe1bc6c295ecb/HgCommand.java/vul/before/6.json",
  "func": "public void checkConnection(UrlArgument repositoryURL) {\n        CommandLine hg = createCommandLine(\"hg\")\n                .withArgs(\"id\", \"--id\", \"--\")\n                .withArg(repositoryURL)\n                .withNonArgSecrets(secrets)\n                .withEncoding(\"UTF-8\");\n        execute(hg, new NamedProcessTag(repositoryURL.forDisplay()));\n    }",
  "abstract_func": "public void checkConnection(UrlArgument VAR_0) {\n        CommandLine VAR_1 = createCommandLine(\"hg\")\n                .withArgs(\"id\", \"--id\", \"--\")\n                .withArg(VAR_0)\n                .withNonArgSecrets(VAR_2)\n                .withEncoding(\"UTF-8\");\n        execute(VAR_1, new NamedProcessTag(VAR_0.forDisplay()));\n    }",
  "func_graph_path": "gocd/37d35115db2ada2190173f9413cfe1bc6c295ecb/HgCommand.java/vul/after/6.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,3 +1,8 @@\n public void checkConnection(UrlArgument repositoryURL) {\n-        execute(createCommandLine(\"hg\").withArgs(\"id\", \"--id\").withArg(repositoryURL).withNonArgSecrets(secrets).withEncoding(\"utf-8\"), new NamedProcessTag(repositoryURL.forDisplay()));\n+        CommandLine hg = createCommandLine(\"hg\")\n+                .withArgs(\"id\", \"--id\", \"--\")\n+                .withArg(repositoryURL)\n+                .withNonArgSecrets(secrets)\n+                .withEncoding(\"UTF-8\");\n+        execute(hg, new NamedProcessTag(repositoryURL.forDisplay()));\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "        execute(createCommandLine(\"hg\").withArgs(\"id\", \"--id\").withArg(repositoryURL).withNonArgSecrets(secrets).withEncoding(\"utf-8\"), new NamedProcessTag(repositoryURL.forDisplay()));"
    ],
    "added_lines": [
      "        CommandLine hg = createCommandLine(\"hg\")",
      "                .withArgs(\"id\", \"--id\", \"--\")",
      "                .withArg(repositoryURL)",
      "                .withNonArgSecrets(secrets)",
      "                .withEncoding(\"UTF-8\");",
      "        execute(hg, new NamedProcessTag(repositoryURL.forDisplay()));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/gocd/gocd/pull/10240",
  "description": {
    "pr_info": {
      "title": "Improve hg command building",
      "number": 10240
    },
    "comment": [
      "Improve the way we build Mercurial command args to ensure branch and repo URL are effectively escaped."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}