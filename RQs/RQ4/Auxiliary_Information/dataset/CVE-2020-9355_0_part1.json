{
  "cve_id": "CVE-2020-9355",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "danfruehauf/NetworkManager-ssh",
  "commit_msg": "Remove extra options\n\nAfter analyzing some privilege escalation possibilites, it was decided\nit is best to remove extra options",
  "commit_hash": "5d88cd89795352b5df54cc0ebb6a0076b8c89ee4",
  "git_url": "https://github.com/danfruehauf/NetworkManager-ssh/commit/5d88cd89795352b5df54cc0ebb6a0076b8c89ee4",
  "file_path": "properties/advanced-dialog.c",
  "func_name": "advanced_dialog_new_hash_from_dialog",
  "func_before": "GHashTable *\nadvanced_dialog_new_hash_from_dialog (GtkWidget *dialog, GError **error)\n{\n\tGHashTable  *hash;\n\tGtkWidget   *widget;\n\tGtkBuilder  *builder;\n\n\tg_return_val_if_fail (dialog != NULL, NULL);\n\tif (error)\n\t\tg_return_val_if_fail (*error == NULL, NULL);\n\n\tbuilder = g_object_get_data (G_OBJECT (dialog), \"builder\");\n\tg_return_val_if_fail (builder != NULL, NULL);\n\n\thash = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_free);\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"tunmtu_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n\t\tint tunmtu_size;\n\n\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"tunmtu_spinbutton\"));\n\t\ttunmtu_size = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (widget));\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_TUNNEL_MTU), g_strdup_printf (\"%d\", tunmtu_size));\n\t}\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"port_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n\t\tint port;\n\n\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"port_spinbutton\"));\n\t\tport = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (widget));\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_PORT), g_strdup_printf (\"%d\", port));\n\t}\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"extra_opts_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n\t\tconst gchar *extra_options;\n\n\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"extra_opts_entry\"));\n\t\textra_options = gtk_entry_get_text (GTK_ENTRY (widget));\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_EXTRA_OPTS), g_strdup(extra_options));\n\t}\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"remote_dev_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n\t\tint remote_dev;\n\n\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"remote_dev_spinbutton\"));\n\t\tremote_dev = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (widget));\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_REMOTE_DEV), g_strdup_printf (\"%d\", remote_dev));\n\t}\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"tap_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget)))\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_TAP_DEV), g_strdup (YES));\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"remote_username_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n\t\tconst gchar *remote_username;\n\n\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"remote_username_entry\"));\n\t\tremote_username = gtk_entry_get_text (GTK_ENTRY (widget));\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_REMOTE_USERNAME), g_strdup(remote_username));\n\t}\n\n\treturn hash;\n}",
  "abstract_func_before": "GHashTable *\nadvanced_dialog_new_hash_from_dialog (GtkWidget *VAR_0, GError **VAR_1)\n{\n\tGHashTable  *VAR_2;\n\tGtkWidget   *VAR_3;\n\tGtkBuilder  *VAR_4;\n\n\tg_return_val_if_fail (VAR_0 != NULL, NULL);\n\tif (VAR_1)\n\t\tg_return_val_if_fail (*VAR_1 == NULL, NULL);\n\n\tVAR_4 = g_object_get_data (G_OBJECT (VAR_0), \"builder\");\n\tg_return_val_if_fail (VAR_4 != NULL, NULL);\n\n\tVAR_2 = g_hash_table_new_full (VAR_5, VAR_6, VAR_7, VAR_7);\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"tunmtu_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3))) {\n\t\tint VAR_8;\n\n\t\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"tunmtu_spinbutton\"));\n\t\tVAR_8 = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (VAR_3));\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_9), g_strdup_printf (\"%d\", VAR_8));\n\t}\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"port_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3))) {\n\t\tint VAR_10;\n\n\t\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"port_spinbutton\"));\n\t\tVAR_10 = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (VAR_3));\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_11), g_strdup_printf (\"%d\", VAR_10));\n\t}\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"extra_opts_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3))) {\n\t\tconst gchar *VAR_12;\n\n\t\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"extra_opts_entry\"));\n\t\tVAR_12 = gtk_entry_get_text (GTK_ENTRY (VAR_3));\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_13), g_strdup(VAR_12));\n\t}\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"remote_dev_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3))) {\n\t\tint VAR_14;\n\n\t\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"remote_dev_spinbutton\"));\n\t\tVAR_14 = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (VAR_3));\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_15), g_strdup_printf (\"%d\", VAR_14));\n\t}\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"tap_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3)))\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_16), g_strdup (VAR_17));\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"remote_username_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3))) {\n\t\tconst gchar *VAR_18;\n\n\t\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"remote_username_entry\"));\n\t\tVAR_18 = gtk_entry_get_text (GTK_ENTRY (VAR_3));\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_19), g_strdup(VAR_18));\n\t}\n\n\treturn VAR_2;\n}",
  "func_graph_path_before": "danfruehauf/NetworkManager-ssh/5d88cd89795352b5df54cc0ebb6a0076b8c89ee4/advanced-dialog.c/vul/before/1.json",
  "func": "GHashTable *\nadvanced_dialog_new_hash_from_dialog (GtkWidget *dialog, GError **error)\n{\n\tGHashTable  *hash;\n\tGtkWidget   *widget;\n\tGtkBuilder  *builder;\n\n\tg_return_val_if_fail (dialog != NULL, NULL);\n\tif (error)\n\t\tg_return_val_if_fail (*error == NULL, NULL);\n\n\tbuilder = g_object_get_data (G_OBJECT (dialog), \"builder\");\n\tg_return_val_if_fail (builder != NULL, NULL);\n\n\thash = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_free);\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"tunmtu_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n\t\tint tunmtu_size;\n\n\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"tunmtu_spinbutton\"));\n\t\ttunmtu_size = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (widget));\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_TUNNEL_MTU), g_strdup_printf (\"%d\", tunmtu_size));\n\t}\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"port_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n\t\tint port;\n\n\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"port_spinbutton\"));\n\t\tport = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (widget));\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_PORT), g_strdup_printf (\"%d\", port));\n\t}\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"remote_dev_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n\t\tint remote_dev;\n\n\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"remote_dev_spinbutton\"));\n\t\tremote_dev = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (widget));\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_REMOTE_DEV), g_strdup_printf (\"%d\", remote_dev));\n\t}\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"tap_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget)))\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_TAP_DEV), g_strdup (YES));\n\n\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"remote_username_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n\t\tconst gchar *remote_username;\n\n\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"remote_username_entry\"));\n\t\tremote_username = gtk_entry_get_text (GTK_ENTRY (widget));\n\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_REMOTE_USERNAME), g_strdup(remote_username));\n\t}\n\n\treturn hash;\n}",
  "abstract_func": "GHashTable *\nadvanced_dialog_new_hash_from_dialog (GtkWidget *VAR_0, GError **VAR_1)\n{\n\tGHashTable  *VAR_2;\n\tGtkWidget   *VAR_3;\n\tGtkBuilder  *VAR_4;\n\n\tg_return_val_if_fail (VAR_0 != NULL, NULL);\n\tif (VAR_1)\n\t\tg_return_val_if_fail (*VAR_1 == NULL, NULL);\n\n\tVAR_4 = g_object_get_data (G_OBJECT (VAR_0), \"builder\");\n\tg_return_val_if_fail (VAR_4 != NULL, NULL);\n\n\tVAR_2 = g_hash_table_new_full (VAR_5, VAR_6, VAR_7, VAR_7);\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"tunmtu_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3))) {\n\t\tint VAR_8;\n\n\t\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"tunmtu_spinbutton\"));\n\t\tVAR_8 = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (VAR_3));\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_9), g_strdup_printf (\"%d\", VAR_8));\n\t}\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"port_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3))) {\n\t\tint VAR_10;\n\n\t\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"port_spinbutton\"));\n\t\tVAR_10 = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (VAR_3));\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_11), g_strdup_printf (\"%d\", VAR_10));\n\t}\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"remote_dev_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3))) {\n\t\tint VAR_12;\n\n\t\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"remote_dev_spinbutton\"));\n\t\tVAR_12 = gtk_spin_button_get_value_as_int (GTK_SPIN_BUTTON (VAR_3));\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_13), g_strdup_printf (\"%d\", VAR_12));\n\t}\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"tap_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3)))\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_14), g_strdup (VAR_15));\n\n\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"remote_username_checkbutton\"));\n\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (VAR_3))) {\n\t\tconst gchar *VAR_16;\n\n\t\tVAR_3 = GTK_WIDGET (gtk_builder_get_object (VAR_4, \"remote_username_entry\"));\n\t\tVAR_16 = gtk_entry_get_text (GTK_ENTRY (VAR_3));\n\t\tg_hash_table_insert (VAR_2, g_strdup (VAR_17), g_strdup(VAR_16));\n\t}\n\n\treturn VAR_2;\n}",
  "func_graph_path": "danfruehauf/NetworkManager-ssh/5d88cd89795352b5df54cc0ebb6a0076b8c89ee4/advanced-dialog.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -32,15 +32,6 @@\n \t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_PORT), g_strdup_printf (\"%d\", port));\n \t}\n \n-\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"extra_opts_checkbutton\"));\n-\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n-\t\tconst gchar *extra_options;\n-\n-\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"extra_opts_entry\"));\n-\t\textra_options = gtk_entry_get_text (GTK_ENTRY (widget));\n-\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_EXTRA_OPTS), g_strdup(extra_options));\n-\t}\n-\n \twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"remote_dev_checkbutton\"));\n \tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {\n \t\tint remote_dev;",
  "diff_line_info": {
    "deleted_lines": [
      "\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"extra_opts_checkbutton\"));",
      "\tif (gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (widget))) {",
      "\t\tconst gchar *extra_options;",
      "",
      "\t\twidget = GTK_WIDGET (gtk_builder_get_object (builder, \"extra_opts_entry\"));",
      "\t\textra_options = gtk_entry_get_text (GTK_ENTRY (widget));",
      "\t\tg_hash_table_insert (hash, g_strdup (NM_SSH_KEY_EXTRA_OPTS), g_strdup(extra_options));",
      "\t}",
      ""
    ],
    "added_lines": []
  },
  "is_vul": true,
  "pr_url": "https://github.com/danfruehauf/NetworkManager-ssh/pull/98",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/danfruehauf/NetworkManager-ssh/pull/98: 403 Client Error: Forbidden for url: https://api.github.com/repos/danfruehauf/NetworkManager-ssh/pulls/98",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}