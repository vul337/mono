{
  "cve_id": "CVE-2019-13623",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "NationalSecurityAgency/ghidra",
  "commit_msg": "GT-3001 (#789) fix RestoreTask to safely extract files from zip.\n\nAbstracted guts of GFileSystemExtractAllTask, reused in RestoreTask.\nFixed NPE in RestoreTask if restore was canceled.",
  "commit_hash": "6c0171c9200b4490deb94abf3c92d1b3da59f9bf",
  "git_url": "https://github.com/NationalSecurityAgency/ghidra/commit/6c0171c9200b4490deb94abf3c92d1b3da59f9bf",
  "file_path": "Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/archive/ArchivePlugin.java",
  "func_name": "archiveProject",
  "func_before": "private void archiveProject() {\n\n\t\tFrontEndTool feTool = (FrontEndTool) tool;\n\t\tProject activeProject = AppInfo.getActiveProject();\n\t\tif (activeProject.getToolManager().getRunningTools().length > 0) {\n\t\t\tMsg.showInfo(getClass(), tool.getToolFrame(), TOOL_RUNNING_TITLE,\n\t\t\t\t\t\"You must close running tools before starting the archive process.\");\n\t\t\treturn;\n\t\t}\n\n\t\tactiveProject.saveToolTemplate(\"FRONTEND\", feTool.saveToolToToolTemplate());\n\t\tactiveProject.save();\n\n\t\tif (archiveDialog == null) {\n\t\t\tarchiveDialog = new ArchiveDialog(this);\n\t\t}\n\n\t\tProjectLocator projectLocator = activeProject.getProjectLocator();\n\t\tString archivePathName = getArchivePathName(projectLocator);\n\t\tif (!archiveDialog.showDialog(projectLocator, archivePathName, tool)) {\n\t\t\treturn;\n\t\t}\n\n\t\tarchivePathName = archiveDialog.getArchivePathName();\n\n\t\tFile archiveJar = new File(archivePathName);\n\t\tFile parentFile = archiveJar.getParentFile();\n\t\tPreferences.setProperty(LAST_ARCHIVE_DIR, parentFile.getAbsolutePath());\n\n\t\tisArchiving = true;\n\t\tarchivingListener = new TaskListener() {\n\t\t\t@Override\n\t\t\tpublic void taskCompleted(Task task) {\n\t\t\t\tisArchiving = false;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void taskCancelled(Task task) {\n\t\t\t\tisArchiving = false;\n\t\t\t}\n\t\t};\n\n\t\tTask task = new ArchiveTask(activeProject, archiveJar);\n\t\ttask.addTaskListener(archivingListener);\n\t\tnew TaskLauncher(task, tool.getToolFrame());\n\t}",
  "abstract_func_before": "private void archiveProject() {\n\n\t\tFrontEndTool VAR_0 = (FrontEndTool) VAR_1;\n\t\tProject VAR_2 = VAR_3.getActiveProject();\n\t\tif (VAR_2.getToolManager().getRunningTools().length > 0) {\n\t\t\tVAR_4.showInfo(getClass(), VAR_1.getToolFrame(), VAR_5,\n\t\t\t\t\t\"You must close running tools before starting the archive process.\");\n\t\t\treturn;\n\t\t}\n\n\t\tVAR_2.saveToolTemplate(\"FRONTEND\", VAR_0.saveToolToToolTemplate());\n\t\tVAR_2.save();\n\n\t\tif (VAR_6 == null) {\n\t\t\tVAR_6 = new ArchiveDialog(this);\n\t\t}\n\n\t\tProjectLocator VAR_7 = VAR_2.getProjectLocator();\n\t\tString VAR_8 = getArchivePathName(VAR_7);\n\t\tif (!VAR_6.showDialog(VAR_7, VAR_8, VAR_1)) {\n\t\t\treturn;\n\t\t}\n\n\t\tVAR_8 = VAR_6.getArchivePathName();\n\n\t\tFile VAR_9 = new File(VAR_8);\n\t\tFile VAR_10 = VAR_9.getParentFile();\n\t\tVAR_11.setProperty(VAR_12, VAR_10.getAbsolutePath());\n\n\t\tVAR_13 = true;\n\t\tVAR_14 = new TaskListener() {\n\t\t\t@Override\n\t\t\tpublic void taskCompleted(Task VAR_15) {\n\t\t\t\tVAR_13 = false;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void taskCancelled(Task VAR_15) {\n\t\t\t\tVAR_13 = false;\n\t\t\t}\n\t\t};\n\n\t\tTask VAR_15 = new ArchiveTask(VAR_2, VAR_9);\n\t\tVAR_15.addTaskListener(VAR_14);\n\t\tnew TaskLauncher(VAR_15, VAR_1.getToolFrame());\n\t}",
  "func_graph_path_before": "NationalSecurityAgency/ghidra/6c0171c9200b4490deb94abf3c92d1b3da59f9bf/ArchivePlugin.java/vul/before/0.json",
  "func": "private void archiveProject() {\n\n\t\tFrontEndTool feTool = (FrontEndTool) tool;\n\t\tProject activeProject = AppInfo.getActiveProject();\n\t\tif (activeProject.getToolManager().getRunningTools().length > 0) {\n\t\t\tMsg.showInfo(getClass(), tool.getToolFrame(), TOOL_RUNNING_TITLE,\n\t\t\t\t\"You must close running tools before starting the archive process.\");\n\t\t\treturn;\n\t\t}\n\n\t\tactiveProject.saveToolTemplate(\"FRONTEND\", feTool.saveToolToToolTemplate());\n\t\tactiveProject.save();\n\n\t\tif (archiveDialog == null) {\n\t\t\tarchiveDialog = new ArchiveDialog(this);\n\t\t}\n\n\t\tProjectLocator projectLocator = activeProject.getProjectLocator();\n\t\tString archivePathName = getArchivePathName(projectLocator);\n\t\tif (!archiveDialog.showDialog(projectLocator, archivePathName, tool)) {\n\t\t\treturn;\n\t\t}\n\n\t\tarchivePathName = archiveDialog.getArchivePathName();\n\n\t\tFile archiveJar = new File(archivePathName);\n\t\tFile parentFile = archiveJar.getParentFile();\n\t\tPreferences.setProperty(LAST_ARCHIVE_DIR, parentFile.getAbsolutePath());\n\n\t\tisArchiving = true;\n\t\tarchivingListener = new TaskListener() {\n\t\t\t@Override\n\t\t\tpublic void taskCompleted(Task task) {\n\t\t\t\tisArchiving = false;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void taskCancelled(Task task) {\n\t\t\t\tisArchiving = false;\n\t\t\t}\n\t\t};\n\n\t\tTask task = new ArchiveTask(activeProject, archiveJar);\n\t\ttask.addTaskListener(archivingListener);\n\t\tnew TaskLauncher(task, tool.getToolFrame());\n\t}",
  "abstract_func": "private void archiveProject() {\n\n\t\tFrontEndTool VAR_0 = (FrontEndTool) VAR_1;\n\t\tProject VAR_2 = VAR_3.getActiveProject();\n\t\tif (VAR_2.getToolManager().getRunningTools().length > 0) {\n\t\t\tVAR_4.showInfo(getClass(), VAR_1.getToolFrame(), VAR_5,\n\t\t\t\t\"You must close running tools before starting the archive process.\");\n\t\t\treturn;\n\t\t}\n\n\t\tVAR_2.saveToolTemplate(\"FRONTEND\", VAR_0.saveToolToToolTemplate());\n\t\tVAR_2.save();\n\n\t\tif (VAR_6 == null) {\n\t\t\tVAR_6 = new ArchiveDialog(this);\n\t\t}\n\n\t\tProjectLocator VAR_7 = VAR_2.getProjectLocator();\n\t\tString VAR_8 = getArchivePathName(VAR_7);\n\t\tif (!VAR_6.showDialog(VAR_7, VAR_8, VAR_1)) {\n\t\t\treturn;\n\t\t}\n\n\t\tVAR_8 = VAR_6.getArchivePathName();\n\n\t\tFile VAR_9 = new File(VAR_8);\n\t\tFile VAR_10 = VAR_9.getParentFile();\n\t\tVAR_11.setProperty(VAR_12, VAR_10.getAbsolutePath());\n\n\t\tVAR_13 = true;\n\t\tVAR_14 = new TaskListener() {\n\t\t\t@Override\n\t\t\tpublic void taskCompleted(Task VAR_15) {\n\t\t\t\tVAR_13 = false;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void taskCancelled(Task VAR_15) {\n\t\t\t\tVAR_13 = false;\n\t\t\t}\n\t\t};\n\n\t\tTask VAR_15 = new ArchiveTask(VAR_2, VAR_9);\n\t\tVAR_15.addTaskListener(VAR_14);\n\t\tnew TaskLauncher(VAR_15, VAR_1.getToolFrame());\n\t}",
  "func_graph_path": "NationalSecurityAgency/ghidra/6c0171c9200b4490deb94abf3c92d1b3da59f9bf/ArchivePlugin.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,7 +4,7 @@\n \t\tProject activeProject = AppInfo.getActiveProject();\n \t\tif (activeProject.getToolManager().getRunningTools().length > 0) {\n \t\t\tMsg.showInfo(getClass(), tool.getToolFrame(), TOOL_RUNNING_TITLE,\n-\t\t\t\t\t\"You must close running tools before starting the archive process.\");\n+\t\t\t\t\"You must close running tools before starting the archive process.\");\n \t\t\treturn;\n \t\t}\n ",
  "diff_line_info": {
    "deleted_lines": [
      "\t\t\t\t\t\"You must close running tools before starting the archive process.\");"
    ],
    "added_lines": [
      "\t\t\t\t\"You must close running tools before starting the archive process.\");"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/NationalSecurityAgency/ghidra/pull/812",
  "description": {
    "pr_info": {
      "title": "GT-3001 (#789) fix RestoreTask to safely extract files from zip.",
      "number": 812
    },
    "comment": [
      "Abstracted guts of GFileSystemExtractAllTask, reused in RestoreTask.\r\nFixed NPE in RestoreTask if restore was canceled.\r\n\r\nFixes #789. "
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.6,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.6"
}