{
  "cve_id": "CVE-2023-26257",
  "cwe_ids": [
    "CWE-401"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "COVESA/dlt-daemon",
  "commit_msg": "Fix memory leak\n\nFree the ecuid_conf in case of memory alllocated\n\nSigned-off-by: Le Van Khanh <Khanh.LeVan@vn.bosch.com>",
  "commit_hash": "b6149e203f919c899fefc702a17fbb78bdec3700",
  "git_url": "https://github.com/COVESA/dlt-daemon/commit/b6149e203f919c899fefc702a17fbb78bdec3700",
  "file_path": "src/console/dlt-control-common.c",
  "func_name": "set_ecuid",
  "func_before": "void set_ecuid(char *ecuid)\n{\n    char *ecuid_conf = NULL;\n\n    if (local_ecuid != ecuid) {\n        /* If user pass NULL, read ECUId from dlt.conf */\n        if (ecuid == NULL) {\n            if (dlt_parse_config_param(\"ECUId\", &ecuid_conf) == 0) {\n                memset(local_ecuid, 0, DLT_CTRL_ECUID_LEN);\n                strncpy(local_ecuid, ecuid_conf, DLT_CTRL_ECUID_LEN);\n                local_ecuid[DLT_CTRL_ECUID_LEN - 1] = '\\0';\n            }\n            else {\n                pr_error(\"Cannot read ECUid from dlt.conf\\n\");\n            }\n        }\n        else {\n            /* Set user passed ECUID */\n            memset(local_ecuid, 0, DLT_CTRL_ECUID_LEN);\n            strncpy(local_ecuid, ecuid, DLT_CTRL_ECUID_LEN);\n            local_ecuid[DLT_CTRL_ECUID_LEN - 1] = '\\0';\n        }\n    }\n}",
  "abstract_func_before": "void set_ecuid(char *VAR_0)\n{\n    char *VAR_1 = NULL;\n\n    if (VAR_2 != VAR_0) {\n        /* COMMENT_0 */\n        if (VAR_0 == NULL) {\n            if (dlt_parse_config_param(\"ECUId\", &VAR_1) == 0) {\n                memset(VAR_2, 0, VAR_3);\n                strncpy(VAR_2, VAR_1, VAR_3);\n                VAR_2[VAR_3 - 1] = '\\0';\n            }\n            else {\n                pr_error(\"Cannot read ECUid from dlt.conf\\n\");\n            }\n        }\n        else {\n            /* COMMENT_1 */\n            memset(VAR_2, 0, VAR_3);\n            strncpy(VAR_2, VAR_0, VAR_3);\n            VAR_2[VAR_3 - 1] = '\\0';\n        }\n    }\n}",
  "func_graph_path_before": "COVESA/dlt-daemon/b6149e203f919c899fefc702a17fbb78bdec3700/dlt-control-common.c/vul/before/0.json",
  "func": "void set_ecuid(char *ecuid)\n{\n    char *ecuid_conf = NULL;\n\n    if (local_ecuid != ecuid) {\n        /* If user pass NULL, read ECUId from dlt.conf */\n        if (ecuid == NULL) {\n            if (dlt_parse_config_param(\"ECUId\", &ecuid_conf) == 0) {\n                memset(local_ecuid, 0, DLT_CTRL_ECUID_LEN);\n                strncpy(local_ecuid, ecuid_conf, DLT_CTRL_ECUID_LEN);\n                if (ecuid_conf !=NULL)\n                    free(ecuid_conf);\n                local_ecuid[DLT_CTRL_ECUID_LEN - 1] = '\\0';\n            }\n            else {\n                pr_error(\"Cannot read ECUid from dlt.conf\\n\");\n            }\n        }\n        else {\n            /* Set user passed ECUID */\n            memset(local_ecuid, 0, DLT_CTRL_ECUID_LEN);\n            strncpy(local_ecuid, ecuid, DLT_CTRL_ECUID_LEN);\n            local_ecuid[DLT_CTRL_ECUID_LEN - 1] = '\\0';\n        }\n    }\n}",
  "abstract_func": "void set_ecuid(char *VAR_0)\n{\n    char *VAR_1 = NULL;\n\n    if (VAR_2 != VAR_0) {\n        /* COMMENT_0 */\n        if (VAR_0 == NULL) {\n            if (dlt_parse_config_param(\"ECUId\", &VAR_1) == 0) {\n                memset(VAR_2, 0, VAR_3);\n                strncpy(VAR_2, VAR_1, VAR_3);\n                if (VAR_1 !=NULL)\n                    free(VAR_1);\n                VAR_2[VAR_3 - 1] = '\\0';\n            }\n            else {\n                pr_error(\"Cannot read ECUid from dlt.conf\\n\");\n            }\n        }\n        else {\n            /* COMMENT_1 */\n            memset(VAR_2, 0, VAR_3);\n            strncpy(VAR_2, VAR_0, VAR_3);\n            VAR_2[VAR_3 - 1] = '\\0';\n        }\n    }\n}",
  "func_graph_path": "COVESA/dlt-daemon/b6149e203f919c899fefc702a17fbb78bdec3700/dlt-control-common.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -8,6 +8,8 @@\n             if (dlt_parse_config_param(\"ECUId\", &ecuid_conf) == 0) {\n                 memset(local_ecuid, 0, DLT_CTRL_ECUID_LEN);\n                 strncpy(local_ecuid, ecuid_conf, DLT_CTRL_ECUID_LEN);\n+                if (ecuid_conf !=NULL)\n+                    free(ecuid_conf);\n                 local_ecuid[DLT_CTRL_ECUID_LEN - 1] = '\\0';\n             }\n             else {",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "                if (ecuid_conf !=NULL)",
      "                    free(ecuid_conf);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/COVESA/dlt-daemon/pull/441",
  "description": {
    "pr_info": {
      "title": "Fix memory leak",
      "number": 441
    },
    "comment": [
      "Free the ecuid_conf in case of memory alllocated\r\n\r\nSigned-off-by: Le Van Khanh <Khanh.LeVan@vn.bosch.com>",
      "@lvklevankhanh \r\nIt's really good. The patch worked fine.\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9  \nStep-by-step explanation: The commit message explicitly mentions a \"Fix memory leak,\" which indicates a security concern. The code diff adds a free() call, which remediates the memory leak. The vulnerability description aligns with the commit, confirming it's a security fix.\n\n**Answer:**  \n**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9"
}