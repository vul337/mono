{
  "cve_id": "CVE-2022-2526",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "systemd",
  "commit_msg": "resolved: pin stream while calling callbacks for it\n\nThese callbacks might unref the stream, but we still have to access it,\nlet's hence ref it explicitly.\n\nMaybe fixes: #10725",
  "commit_hash": "d973d94dec349fb676fdd844f6fe2ada3538f27c",
  "git_url": "https://github.com/systemd/systemd/commit/d973d94dec349fb676fdd844f6fe2ada3538f27c",
  "file_path": "src/resolve/resolved-dns-stream.c",
  "func_name": "dns_stream_complete",
  "func_before": "static int dns_stream_complete(DnsStream *s, int error) {\n        assert(s);\n\n#if ENABLE_DNS_OVER_TLS\n        if (s->encrypted) {\n                int r;\n\n                r = dnstls_stream_shutdown(s, error);\n                if (r != -EAGAIN)\n                        dns_stream_stop(s);\n        } else\n#endif\n                dns_stream_stop(s);\n\n        if (s->complete)\n                s->complete(s, error);\n        else /* the default action if no completion function is set is to close the stream */\n                dns_stream_unref(s);\n\n        return 0;\n}",
  "abstract_func_before": "static int dns_stream_complete(DnsStream *VAR_0, int VAR_1) {\n        assert(VAR_0);\n\n#if VAR_2\n        if (VAR_0->encrypted) {\n                int VAR_3;\n\n                VAR_3 = dnstls_stream_shutdown(VAR_0, VAR_1);\n                if (VAR_3 != -VAR_4)\n                        dns_stream_stop(VAR_0);\n        } else\n#endif\n                dns_stream_stop(VAR_0);\n\n        if (VAR_0->complete)\n                VAR_0->complete(VAR_0, VAR_1);\n        else /* COMMENT_0 */\n                dns_stream_unref(VAR_0);\n\n        return 0;\n}",
  "func_graph_path_before": "systemd/d973d94dec349fb676fdd844f6fe2ada3538f27c/resolved-dns-stream.c/vul/before/0.json",
  "func": "static int dns_stream_complete(DnsStream *s, int error) {\n        _cleanup_(dns_stream_unrefp) _unused_ DnsStream *ref = dns_stream_ref(s); /* Protect stream while we process it */\n\n        assert(s);\n\n#if ENABLE_DNS_OVER_TLS\n        if (s->encrypted) {\n                int r;\n\n                r = dnstls_stream_shutdown(s, error);\n                if (r != -EAGAIN)\n                        dns_stream_stop(s);\n        } else\n#endif\n                dns_stream_stop(s);\n\n        if (s->complete)\n                s->complete(s, error);\n        else /* the default action if no completion function is set is to close the stream */\n                dns_stream_unref(s);\n\n        return 0;\n}",
  "abstract_func": "static int dns_stream_complete(DnsStream *VAR_0, int VAR_1) {\n        VAR_2(dns_stream_unrefp) VAR_3 DnsStream *VAR_4 = dns_stream_ref(VAR_0); /* COMMENT_0 */\n\n        assert(VAR_0);\n\n#if VAR_5\n        if (VAR_0->encrypted) {\n                int VAR_6;\n\n                VAR_6 = dnstls_stream_shutdown(VAR_0, VAR_1);\n                if (VAR_6 != -VAR_7)\n                        dns_stream_stop(VAR_0);\n        } else\n#endif\n                dns_stream_stop(VAR_0);\n\n        if (VAR_0->complete)\n                VAR_0->complete(VAR_0, VAR_1);\n        else /* COMMENT_1 */\n                dns_stream_unref(VAR_0);\n\n        return 0;\n}",
  "func_graph_path": "systemd/d973d94dec349fb676fdd844f6fe2ada3538f27c/resolved-dns-stream.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,6 @@\n static int dns_stream_complete(DnsStream *s, int error) {\n+        _cleanup_(dns_stream_unrefp) _unused_ DnsStream *ref = dns_stream_ref(s); /* Protect stream while we process it */\n+\n         assert(s);\n \n #if ENABLE_DNS_OVER_TLS",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        _cleanup_(dns_stream_unrefp) _unused_ DnsStream *ref = dns_stream_ref(s); /* Protect stream while we process it */",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/systemd/systemd/pull/11055",
  "description": {
    "pr_info": {
      "title": "a number of resolved fixes",
      "number": 11055
    },
    "comment": [
      "I was trying to figure out the cause of #10725 and found some memory corruption issues, which this PR fixes. So I am pretty sure this fixes #10725, but not entirely... Still sure enough to say this:\r\n\r\nFixes: #10725 \r\n\r\nSome testing would be useful, in particular if #10725 can be reproduced somehow (I couldn't). \r\n\r\nMaybe @irtimmer (as the original author of the DNS-over-TLS code), any chance you can have a look at these, if these make sense to you?",
      "travis-ci fails with the following error:\r\n```\r\n../src/resolve/resolved-dns-stream.c:52:49: error: unused variable 'ref' [-Werror,-Wunused-variable]\r\n        _cleanup_(dns_stream_unrefp) DnsStream *ref = dns_stream_ref(s); /* Protect stream while we process it */\r\n                                                ^\r\n1 error generated.\r\n```\r\nPlease add `_unused_` attribute.\r\n\r\nBTW, changes seem to be reasonable.",
      "Force pushed a new version with `_unused_` added. No other changes.",
      "Taking liberty to make this with the green label, given that @yuwata found these changes \"reasonable\" ;-)"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}