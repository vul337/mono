{
  "cve_id": "CVE-2021-41959",
  "cwe_ids": [
    "CWE-401"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "jerryscript-project/jerryscript",
  "commit_msg": "Fix leaking lastIndex values in RegExp built-ins\n\nFixes #4781. This is a followup fix after #4166.\n\nJerryScript-DCO-1.0-Signed-off-by: Csaba Osztrogon√°c csaba.osztrogonac@h-lab.eu",
  "commit_hash": "baf01585b4a818b087a1ec77f99fe7ea6c653a10",
  "git_url": "https://github.com/jerryscript-project/jerryscript/commit/baf01585b4a818b087a1ec77f99fe7ea6c653a10",
  "file_path": "jerry-core/ecma/operations/ecma-regexp-object.c",
  "func_name": "ecma_regexp_match_helper",
  "func_before": "ecma_value_t\necma_regexp_match_helper (ecma_value_t this_arg, /**< this argument */\n                          ecma_value_t string_arg) /**< source string */\n{\n  if (!ecma_is_value_object (this_arg))\n  {\n    return ecma_raise_type_error (ECMA_ERR_MSG (\"Argument 'this' is not an object\"));\n  }\n\n  ecma_string_t *str_p = ecma_op_to_string (string_arg);\n\n  if (JERRY_UNLIKELY (str_p == NULL))\n  {\n    return ECMA_VALUE_ERROR;\n  }\n\n  ecma_object_t *obj_p = ecma_get_object_from_value (this_arg);\n\n  ecma_value_t global_value = ecma_op_object_get_by_magic_id (obj_p, LIT_MAGIC_STRING_GLOBAL);\n\n  if (ECMA_IS_VALUE_ERROR (global_value))\n  {\n    ecma_deref_ecma_string (str_p);\n    return global_value;\n  }\n\n  bool global = ecma_op_to_boolean (global_value);\n\n  ecma_free_value (global_value);\n\n  if (!global)\n  {\n    ecma_value_t result = ecma_op_regexp_exec (this_arg, str_p);\n    ecma_deref_ecma_string (str_p);\n    return result;\n  }\n\n#if JERRY_ESNEXT\n  ecma_value_t full_unicode_value = ecma_op_object_get_by_magic_id (obj_p, LIT_MAGIC_STRING_UNICODE);\n\n  if (ECMA_IS_VALUE_ERROR (full_unicode_value))\n  {\n    ecma_deref_ecma_string (str_p);\n    return full_unicode_value;\n  }\n\n  bool full_unicode = ecma_op_to_boolean (full_unicode_value);\n\n  ecma_free_value (full_unicode_value);\n#endif /* JERRY_ESNEXT */\n\n  ecma_value_t set_status = ecma_op_object_put (obj_p,\n                                                ecma_get_magic_string (LIT_MAGIC_STRING_LASTINDEX_UL),\n                                                ecma_make_uint32_value (0),\n                                                true);\n\n  if (ECMA_IS_VALUE_ERROR (set_status))\n  {\n    ecma_deref_ecma_string (str_p);\n    return set_status;\n  }\n\n  ecma_value_t ret_value = ECMA_VALUE_ERROR;\n  ecma_object_t *result_array_p = ecma_op_new_array_object (0);\n  uint32_t n = 0;\n\n  while (true)\n  {\n    ecma_value_t result_value = ecma_op_regexp_exec (this_arg, str_p);\n\n    if (ECMA_IS_VALUE_ERROR (result_value))\n    {\n      goto result_cleanup;\n    }\n\n    if (ecma_is_value_null (result_value))\n    {\n      if (n == 0)\n      {\n        ret_value = ECMA_VALUE_NULL;\n        goto result_cleanup;\n      }\n\n      ecma_deref_ecma_string (str_p);\n      return ecma_make_object_value (result_array_p);\n    }\n\n    ecma_object_t *result_value_p = ecma_get_object_from_value (result_value);\n    ecma_value_t match_value = ecma_op_object_get_by_index (result_value_p, 0);\n\n    ecma_deref_object (result_value_p);\n\n    if (ECMA_IS_VALUE_ERROR (match_value))\n    {\n      goto result_cleanup;\n    }\n\n    ecma_string_t *match_str_p = ecma_op_to_string (match_value);\n    ecma_free_value (match_value);\n\n    if (JERRY_UNLIKELY (match_str_p == NULL))\n    {\n      goto result_cleanup;\n    }\n\n    ecma_value_t new_prop = ecma_builtin_helper_def_prop_by_index (result_array_p,\n                                                                   n,\n                                                                   ecma_make_string_value (match_str_p),\n                                                                   ECMA_PROPERTY_CONFIGURABLE_ENUMERABLE_WRITABLE);\n\n    JERRY_ASSERT (!ECMA_IS_VALUE_ERROR (new_prop));\n\n    const bool is_match_empty = ecma_string_is_empty (match_str_p);\n    ecma_deref_ecma_string (match_str_p);\n\n    if (is_match_empty)\n    {\n      ecma_value_t last_index = ecma_op_object_get_by_magic_id (obj_p, LIT_MAGIC_STRING_LASTINDEX_UL);\n\n      if (ECMA_IS_VALUE_ERROR (last_index))\n      {\n        goto result_cleanup;\n      }\n\n#if JERRY_ESNEXT\n      ecma_length_t index;\n      ecma_value_t length_value = ecma_op_to_length (last_index, &index);\n\n      ecma_free_value (last_index);\n\n      if (ECMA_IS_VALUE_ERROR (length_value))\n      {\n        goto result_cleanup;\n      }\n\n      index = ecma_op_advance_string_index (str_p, index, full_unicode);\n\n      last_index = ecma_make_length_value (index);\n      ecma_value_t next_set_status = ecma_op_object_put (obj_p,\n                                                         ecma_get_magic_string (LIT_MAGIC_STRING_LASTINDEX_UL),\n                                                         ecma_make_length_value (index),\n                                                         true);\n#else /* !JERRY_ESNEXT */\n      ecma_number_t index = ecma_get_number_from_value (last_index);\n      ecma_free_value (last_index);\n\n      last_index = ecma_make_number_value (index + 1);\n      ecma_value_t next_set_status = ecma_op_object_put (obj_p,\n                                                         ecma_get_magic_string (LIT_MAGIC_STRING_LASTINDEX_UL),\n                                                         last_index,\n                                                         true);\n\n#endif /* JERRY_ESNEXT */\n      ecma_free_value (last_index);\n\n      if (ECMA_IS_VALUE_ERROR (next_set_status))\n      {\n        goto result_cleanup;\n      }\n    }\n\n    n++;\n  }\n\nresult_cleanup:\n  ecma_deref_ecma_string (str_p);\n  ecma_deref_object (result_array_p);\n  return ret_value;\n}",
  "abstract_func_before": "ecma_value_t\necma_regexp_match_helper (ecma_value_t VAR_0, /* COMMENT_0 */\n                          ecma_value_t VAR_1) /* COMMENT_1 */\n{\n  if (!ecma_is_value_object (VAR_0))\n  {\n    return ecma_raise_type_error (ECMA_ERR_MSG (\"Argument 'this' is not an object\"));\n  }\n\n  ecma_string_t *VAR_2 = ecma_op_to_string (VAR_1);\n\n  if (JERRY_UNLIKELY (VAR_2 == NULL))\n  {\n    return VAR_3;\n  }\n\n  ecma_object_t *VAR_4 = ecma_get_object_from_value (VAR_0);\n\n  ecma_value_t VAR_5 = ecma_op_object_get_by_magic_id (VAR_4, VAR_6);\n\n  if (ECMA_IS_VALUE_ERROR (VAR_5))\n  {\n    ecma_deref_ecma_string (VAR_2);\n    return VAR_5;\n  }\n\n  bool VAR_7 = ecma_op_to_boolean (VAR_5);\n\n  ecma_free_value (VAR_5);\n\n  if (!VAR_7)\n  {\n    ecma_value_t VAR_8 = ecma_op_regexp_exec (VAR_0, VAR_2);\n    ecma_deref_ecma_string (VAR_2);\n    return VAR_8;\n  }\n\n#if VAR_9\n  ecma_value_t VAR_10 = ecma_op_object_get_by_magic_id (VAR_4, VAR_11);\n\n  if (ECMA_IS_VALUE_ERROR (VAR_10))\n  {\n    ecma_deref_ecma_string (VAR_2);\n    return VAR_10;\n  }\n\n  bool VAR_12 = ecma_op_to_boolean (VAR_10);\n\n  ecma_free_value (VAR_10);\n#endif /* COMMENT_2 */\n\n  ecma_value_t VAR_13 = ecma_op_object_put (VAR_4,\n                                                ecma_get_magic_string (VAR_14),\n                                                ecma_make_uint32_value (0),\n                                                true);\n\n  if (ECMA_IS_VALUE_ERROR (VAR_13))\n  {\n    ecma_deref_ecma_string (VAR_2);\n    return VAR_13;\n  }\n\n  ecma_value_t VAR_15 = VAR_3;\n  ecma_object_t *VAR_16 = ecma_op_new_array_object (0);\n  uint32_t VAR_17 = 0;\n\n  while (true)\n  {\n    ecma_value_t VAR_18 = ecma_op_regexp_exec (VAR_0, VAR_2);\n\n    if (ECMA_IS_VALUE_ERROR (VAR_18))\n    {\n      goto result_cleanup;\n    }\n\n    if (ecma_is_value_null (VAR_18))\n    {\n      if (VAR_17 == 0)\n      {\n        VAR_15 = VAR_19;\n        goto result_cleanup;\n      }\n\n      ecma_deref_ecma_string (VAR_2);\n      return ecma_make_object_value (VAR_16);\n    }\n\n    ecma_object_t *VAR_20 = ecma_get_object_from_value (VAR_18);\n    ecma_value_t VAR_21 = ecma_op_object_get_by_index (VAR_20, 0);\n\n    ecma_deref_object (VAR_20);\n\n    if (ECMA_IS_VALUE_ERROR (VAR_21))\n    {\n      goto result_cleanup;\n    }\n\n    ecma_string_t *VAR_22 = ecma_op_to_string (VAR_21);\n    ecma_free_value (VAR_21);\n\n    if (JERRY_UNLIKELY (VAR_22 == NULL))\n    {\n      goto result_cleanup;\n    }\n\n    ecma_value_t VAR_23 = ecma_builtin_helper_def_prop_by_index (VAR_16,\n                                                                   VAR_17,\n                                                                   ecma_make_string_value (VAR_22),\n                                                                   VAR_24);\n\n    JERRY_ASSERT (!ECMA_IS_VALUE_ERROR (VAR_23));\n\n    const bool VAR_25 = ecma_string_is_empty (VAR_22);\n    ecma_deref_ecma_string (VAR_22);\n\n    if (VAR_25)\n    {\n      ecma_value_t VAR_26 = ecma_op_object_get_by_magic_id (VAR_4, VAR_14);\n\n      if (ECMA_IS_VALUE_ERROR (VAR_26))\n      {\n        goto result_cleanup;\n      }\n\n#if VAR_9\n      ecma_length_t VAR_27;\n      ecma_value_t VAR_28 = ecma_op_to_length (VAR_26, &VAR_27);\n\n      ecma_free_value (VAR_26);\n\n      if (ECMA_IS_VALUE_ERROR (VAR_28))\n      {\n        goto result_cleanup;\n      }\n\n      VAR_27 = ecma_op_advance_string_index (VAR_2, VAR_27, VAR_12);\n\n      VAR_26 = ecma_make_length_value (VAR_27);\n      ecma_value_t VAR_29 = ecma_op_object_put (VAR_4,\n                                                         ecma_get_magic_string (VAR_14),\n                                                         ecma_make_length_value (VAR_27),\n                                                         true);\n#else /* COMMENT_3 */\n      ecma_number_t VAR_27 = ecma_get_number_from_value (VAR_26);\n      ecma_free_value (VAR_26);\n\n      VAR_26 = ecma_make_number_value (VAR_27 + 1);\n      ecma_value_t VAR_29 = ecma_op_object_put (VAR_4,\n                                                         ecma_get_magic_string (VAR_14),\n                                                         VAR_26,\n                                                         true);\n\n#endif /* COMMENT_2 */\n      ecma_free_value (VAR_26);\n\n      if (ECMA_IS_VALUE_ERROR (VAR_29))\n      {\n        goto result_cleanup;\n      }\n    }\n\n    VAR_17++;\n  }\n\nresult_cleanup:\n  ecma_deref_ecma_string (VAR_2);\n  ecma_deref_object (VAR_16);\n  return VAR_15;\n}",
  "func_graph_path_before": "jerryscript-project/jerryscript/baf01585b4a818b087a1ec77f99fe7ea6c653a10/ecma-regexp-object.c/vul/before/0.json",
  "func": "ecma_value_t\necma_regexp_match_helper (ecma_value_t this_arg, /**< this argument */\n                          ecma_value_t string_arg) /**< source string */\n{\n  if (!ecma_is_value_object (this_arg))\n  {\n    return ecma_raise_type_error (ECMA_ERR_MSG (\"Argument 'this' is not an object\"));\n  }\n\n  ecma_string_t *str_p = ecma_op_to_string (string_arg);\n\n  if (JERRY_UNLIKELY (str_p == NULL))\n  {\n    return ECMA_VALUE_ERROR;\n  }\n\n  ecma_object_t *obj_p = ecma_get_object_from_value (this_arg);\n\n  ecma_value_t global_value = ecma_op_object_get_by_magic_id (obj_p, LIT_MAGIC_STRING_GLOBAL);\n\n  if (ECMA_IS_VALUE_ERROR (global_value))\n  {\n    ecma_deref_ecma_string (str_p);\n    return global_value;\n  }\n\n  bool global = ecma_op_to_boolean (global_value);\n\n  ecma_free_value (global_value);\n\n  if (!global)\n  {\n    ecma_value_t result = ecma_op_regexp_exec (this_arg, str_p);\n    ecma_deref_ecma_string (str_p);\n    return result;\n  }\n\n#if JERRY_ESNEXT\n  ecma_value_t full_unicode_value = ecma_op_object_get_by_magic_id (obj_p, LIT_MAGIC_STRING_UNICODE);\n\n  if (ECMA_IS_VALUE_ERROR (full_unicode_value))\n  {\n    ecma_deref_ecma_string (str_p);\n    return full_unicode_value;\n  }\n\n  bool full_unicode = ecma_op_to_boolean (full_unicode_value);\n\n  ecma_free_value (full_unicode_value);\n#endif /* JERRY_ESNEXT */\n\n  ecma_value_t set_status = ecma_op_object_put (obj_p,\n                                                ecma_get_magic_string (LIT_MAGIC_STRING_LASTINDEX_UL),\n                                                ecma_make_uint32_value (0),\n                                                true);\n\n  if (ECMA_IS_VALUE_ERROR (set_status))\n  {\n    ecma_deref_ecma_string (str_p);\n    return set_status;\n  }\n\n  ecma_value_t ret_value = ECMA_VALUE_ERROR;\n  ecma_object_t *result_array_p = ecma_op_new_array_object (0);\n  uint32_t n = 0;\n\n  while (true)\n  {\n    ecma_value_t result_value = ecma_op_regexp_exec (this_arg, str_p);\n\n    if (ECMA_IS_VALUE_ERROR (result_value))\n    {\n      goto result_cleanup;\n    }\n\n    if (ecma_is_value_null (result_value))\n    {\n      if (n == 0)\n      {\n        ret_value = ECMA_VALUE_NULL;\n        goto result_cleanup;\n      }\n\n      ecma_deref_ecma_string (str_p);\n      return ecma_make_object_value (result_array_p);\n    }\n\n    ecma_object_t *result_value_p = ecma_get_object_from_value (result_value);\n    ecma_value_t match_value = ecma_op_object_get_by_index (result_value_p, 0);\n\n    ecma_deref_object (result_value_p);\n\n    if (ECMA_IS_VALUE_ERROR (match_value))\n    {\n      goto result_cleanup;\n    }\n\n    ecma_string_t *match_str_p = ecma_op_to_string (match_value);\n    ecma_free_value (match_value);\n\n    if (JERRY_UNLIKELY (match_str_p == NULL))\n    {\n      goto result_cleanup;\n    }\n\n    ecma_value_t new_prop = ecma_builtin_helper_def_prop_by_index (result_array_p,\n                                                                   n,\n                                                                   ecma_make_string_value (match_str_p),\n                                                                   ECMA_PROPERTY_CONFIGURABLE_ENUMERABLE_WRITABLE);\n\n    JERRY_ASSERT (!ECMA_IS_VALUE_ERROR (new_prop));\n\n    const bool is_match_empty = ecma_string_is_empty (match_str_p);\n    ecma_deref_ecma_string (match_str_p);\n\n    if (is_match_empty)\n    {\n      ecma_value_t last_index = ecma_op_object_get_by_magic_id (obj_p, LIT_MAGIC_STRING_LASTINDEX_UL);\n\n      if (ECMA_IS_VALUE_ERROR (last_index))\n      {\n        goto result_cleanup;\n      }\n\n#if JERRY_ESNEXT\n      ecma_length_t index;\n      ecma_value_t length_value = ecma_op_to_length (last_index, &index);\n\n      ecma_free_value (last_index);\n\n      if (ECMA_IS_VALUE_ERROR (length_value))\n      {\n        goto result_cleanup;\n      }\n\n      index = ecma_op_advance_string_index (str_p, index, full_unicode);\n\n      last_index = ecma_make_length_value (index);\n      ecma_value_t next_set_status = ecma_op_object_put (obj_p,\n                                                         ecma_get_magic_string (LIT_MAGIC_STRING_LASTINDEX_UL),\n                                                         last_index,\n                                                         true);\n#else /* !JERRY_ESNEXT */\n      ecma_number_t index = ecma_get_number_from_value (last_index);\n      ecma_free_value (last_index);\n\n      last_index = ecma_make_number_value (index + 1);\n      ecma_value_t next_set_status = ecma_op_object_put (obj_p,\n                                                         ecma_get_magic_string (LIT_MAGIC_STRING_LASTINDEX_UL),\n                                                         last_index,\n                                                         true);\n\n#endif /* JERRY_ESNEXT */\n      ecma_free_value (last_index);\n\n      if (ECMA_IS_VALUE_ERROR (next_set_status))\n      {\n        goto result_cleanup;\n      }\n    }\n\n    n++;\n  }\n\nresult_cleanup:\n  ecma_deref_ecma_string (str_p);\n  ecma_deref_object (result_array_p);\n  return ret_value;\n}",
  "abstract_func": "ecma_value_t\necma_regexp_match_helper (ecma_value_t VAR_0, /* COMMENT_0 */\n                          ecma_value_t VAR_1) /* COMMENT_1 */\n{\n  if (!ecma_is_value_object (VAR_0))\n  {\n    return ecma_raise_type_error (ECMA_ERR_MSG (\"Argument 'this' is not an object\"));\n  }\n\n  ecma_string_t *VAR_2 = ecma_op_to_string (VAR_1);\n\n  if (JERRY_UNLIKELY (VAR_2 == NULL))\n  {\n    return VAR_3;\n  }\n\n  ecma_object_t *VAR_4 = ecma_get_object_from_value (VAR_0);\n\n  ecma_value_t VAR_5 = ecma_op_object_get_by_magic_id (VAR_4, VAR_6);\n\n  if (ECMA_IS_VALUE_ERROR (VAR_5))\n  {\n    ecma_deref_ecma_string (VAR_2);\n    return VAR_5;\n  }\n\n  bool VAR_7 = ecma_op_to_boolean (VAR_5);\n\n  ecma_free_value (VAR_5);\n\n  if (!VAR_7)\n  {\n    ecma_value_t VAR_8 = ecma_op_regexp_exec (VAR_0, VAR_2);\n    ecma_deref_ecma_string (VAR_2);\n    return VAR_8;\n  }\n\n#if VAR_9\n  ecma_value_t VAR_10 = ecma_op_object_get_by_magic_id (VAR_4, VAR_11);\n\n  if (ECMA_IS_VALUE_ERROR (VAR_10))\n  {\n    ecma_deref_ecma_string (VAR_2);\n    return VAR_10;\n  }\n\n  bool VAR_12 = ecma_op_to_boolean (VAR_10);\n\n  ecma_free_value (VAR_10);\n#endif /* COMMENT_2 */\n\n  ecma_value_t VAR_13 = ecma_op_object_put (VAR_4,\n                                                ecma_get_magic_string (VAR_14),\n                                                ecma_make_uint32_value (0),\n                                                true);\n\n  if (ECMA_IS_VALUE_ERROR (VAR_13))\n  {\n    ecma_deref_ecma_string (VAR_2);\n    return VAR_13;\n  }\n\n  ecma_value_t VAR_15 = VAR_3;\n  ecma_object_t *VAR_16 = ecma_op_new_array_object (0);\n  uint32_t VAR_17 = 0;\n\n  while (true)\n  {\n    ecma_value_t VAR_18 = ecma_op_regexp_exec (VAR_0, VAR_2);\n\n    if (ECMA_IS_VALUE_ERROR (VAR_18))\n    {\n      goto result_cleanup;\n    }\n\n    if (ecma_is_value_null (VAR_18))\n    {\n      if (VAR_17 == 0)\n      {\n        VAR_15 = VAR_19;\n        goto result_cleanup;\n      }\n\n      ecma_deref_ecma_string (VAR_2);\n      return ecma_make_object_value (VAR_16);\n    }\n\n    ecma_object_t *VAR_20 = ecma_get_object_from_value (VAR_18);\n    ecma_value_t VAR_21 = ecma_op_object_get_by_index (VAR_20, 0);\n\n    ecma_deref_object (VAR_20);\n\n    if (ECMA_IS_VALUE_ERROR (VAR_21))\n    {\n      goto result_cleanup;\n    }\n\n    ecma_string_t *VAR_22 = ecma_op_to_string (VAR_21);\n    ecma_free_value (VAR_21);\n\n    if (JERRY_UNLIKELY (VAR_22 == NULL))\n    {\n      goto result_cleanup;\n    }\n\n    ecma_value_t VAR_23 = ecma_builtin_helper_def_prop_by_index (VAR_16,\n                                                                   VAR_17,\n                                                                   ecma_make_string_value (VAR_22),\n                                                                   VAR_24);\n\n    JERRY_ASSERT (!ECMA_IS_VALUE_ERROR (VAR_23));\n\n    const bool VAR_25 = ecma_string_is_empty (VAR_22);\n    ecma_deref_ecma_string (VAR_22);\n\n    if (VAR_25)\n    {\n      ecma_value_t VAR_26 = ecma_op_object_get_by_magic_id (VAR_4, VAR_14);\n\n      if (ECMA_IS_VALUE_ERROR (VAR_26))\n      {\n        goto result_cleanup;\n      }\n\n#if VAR_9\n      ecma_length_t VAR_27;\n      ecma_value_t VAR_28 = ecma_op_to_length (VAR_26, &VAR_27);\n\n      ecma_free_value (VAR_26);\n\n      if (ECMA_IS_VALUE_ERROR (VAR_28))\n      {\n        goto result_cleanup;\n      }\n\n      VAR_27 = ecma_op_advance_string_index (VAR_2, VAR_27, VAR_12);\n\n      VAR_26 = ecma_make_length_value (VAR_27);\n      ecma_value_t VAR_29 = ecma_op_object_put (VAR_4,\n                                                         ecma_get_magic_string (VAR_14),\n                                                         VAR_26,\n                                                         true);\n#else /* COMMENT_3 */\n      ecma_number_t VAR_27 = ecma_get_number_from_value (VAR_26);\n      ecma_free_value (VAR_26);\n\n      VAR_26 = ecma_make_number_value (VAR_27 + 1);\n      ecma_value_t VAR_29 = ecma_op_object_put (VAR_4,\n                                                         ecma_get_magic_string (VAR_14),\n                                                         VAR_26,\n                                                         true);\n\n#endif /* COMMENT_2 */\n      ecma_free_value (VAR_26);\n\n      if (ECMA_IS_VALUE_ERROR (VAR_29))\n      {\n        goto result_cleanup;\n      }\n    }\n\n    VAR_17++;\n  }\n\nresult_cleanup:\n  ecma_deref_ecma_string (VAR_2);\n  ecma_deref_object (VAR_16);\n  return VAR_15;\n}",
  "func_graph_path": "jerryscript-project/jerryscript/baf01585b4a818b087a1ec77f99fe7ea6c653a10/ecma-regexp-object.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -138,7 +138,7 @@\n       last_index = ecma_make_length_value (index);\n       ecma_value_t next_set_status = ecma_op_object_put (obj_p,\n                                                          ecma_get_magic_string (LIT_MAGIC_STRING_LASTINDEX_UL),\n-                                                         ecma_make_length_value (index),\n+                                                         last_index,\n                                                          true);\n #else /* !JERRY_ESNEXT */\n       ecma_number_t index = ecma_get_number_from_value (last_index);",
  "diff_line_info": {
    "deleted_lines": [
      "                                                         ecma_make_length_value (index),"
    ],
    "added_lines": [
      "                                                         last_index,"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/jerryscript-project/jerryscript/pull/4787",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/jerryscript-project/jerryscript/pull/4787: 403 Client Error: Forbidden for url: https://api.github.com/repos/jerryscript-project/jerryscript/pulls/4787",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}