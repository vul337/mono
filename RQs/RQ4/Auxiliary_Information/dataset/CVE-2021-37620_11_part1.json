{
  "cve_id": "CVE-2021-37620",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "Exiv2/exiv2",
  "commit_msg": "Safer std::vector indexing.",
  "commit_hash": "76e313745e813f80e8910aceb2210af3ad8cf897",
  "git_url": "https://github.com/Exiv2/exiv2/commit/76e313745e813f80e8910aceb2210af3ad8cf897",
  "file_path": "src/basicio.cpp",
  "func_name": "FileIo::size",
  "func_before": "size_t FileIo::size() const\n    {\n        // Flush and commit only if the file is open for writing\n        if (p_->fp_ != 0 && (p_->openMode_[0] != 'r' || p_->openMode_[1] == '+')) {\n            std::fflush(p_->fp_);\n#if defined WIN32 && !defined __CYGWIN__\n            // This is required on msvcrt before stat after writing to a file\n            _commit(_fileno(p_->fp_));\n#endif\n        }\n\n        Impl::StructStat buf;\n        int ret = p_->stat(buf);\n\n        if (ret != 0) return -1;\n        return buf.st_size;\n    }",
  "abstract_func_before": "size_t FileIo::size() const\n    {\n        /* COMMENT_0 */\n        if (VAR_0->fp_ != 0 && (VAR_0->openMode_[0] != 'r' || VAR_0->openMode_[1] == '+')) {\n            std::fflush(VAR_0->fp_);\n#if defined VAR_1 && !defined VAR_2\n            /* COMMENT_1 */\n            _commit(_fileno(VAR_0->fp_));\n#endif\n        }\n\n        Impl::StructStat VAR_3;\n        int VAR_4 = VAR_0->stat(VAR_3);\n\n        if (VAR_4 != 0) return -1;\n        return VAR_3.st_size;\n    }",
  "func_graph_path_before": "Exiv2/exiv2/76e313745e813f80e8910aceb2210af3ad8cf897/basicio.cpp/vul/before/2.json",
  "func": "size_t FileIo::size() const\n    {\n        // Flush and commit only if the file is open for writing\n        if (p_->fp_ != 0 && (p_->openMode_.at(0) != 'r' || p_->openMode_.at(1) == '+')) {\n            std::fflush(p_->fp_);\n#if defined WIN32 && !defined __CYGWIN__\n            // This is required on msvcrt before stat after writing to a file\n            _commit(_fileno(p_->fp_));\n#endif\n        }\n\n        Impl::StructStat buf;\n        int ret = p_->stat(buf);\n\n        if (ret != 0) return -1;\n        return buf.st_size;\n    }",
  "abstract_func": "size_t FileIo::size() const\n    {\n        /* COMMENT_0 */\n        if (VAR_0->fp_ != 0 && (VAR_0->openMode_.at(0) != 'r' || VAR_0->openMode_.at(1) == '+')) {\n            std::fflush(VAR_0->fp_);\n#if defined VAR_1 && !defined VAR_2\n            /* COMMENT_1 */\n            _commit(_fileno(VAR_0->fp_));\n#endif\n        }\n\n        Impl::StructStat VAR_3;\n        int VAR_4 = VAR_0->stat(VAR_3);\n\n        if (VAR_4 != 0) return -1;\n        return VAR_3.st_size;\n    }",
  "func_graph_path": "Exiv2/exiv2/76e313745e813f80e8910aceb2210af3ad8cf897/basicio.cpp/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,7 @@\n size_t FileIo::size() const\n     {\n         // Flush and commit only if the file is open for writing\n-        if (p_->fp_ != 0 && (p_->openMode_[0] != 'r' || p_->openMode_[1] == '+')) {\n+        if (p_->fp_ != 0 && (p_->openMode_.at(0) != 'r' || p_->openMode_.at(1) == '+')) {\n             std::fflush(p_->fp_);\n #if defined WIN32 && !defined __CYGWIN__\n             // This is required on msvcrt before stat after writing to a file",
  "diff_line_info": {
    "deleted_lines": [
      "        if (p_->fp_ != 0 && (p_->openMode_[0] != 'r' || p_->openMode_[1] == '+')) {"
    ],
    "added_lines": [
      "        if (p_->fp_ != 0 && (p_->openMode_.at(0) != 'r' || p_->openMode_.at(1) == '+')) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/sridharb1/exiv2/pull/4",
  "description": {
    "pr_info": {
      "title": "0.27 maintenance",
      "number": 4
    },
    "comment": []
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Output:**\n**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.9"
}