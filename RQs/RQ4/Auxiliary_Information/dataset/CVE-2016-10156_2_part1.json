{
  "cve_id": "CVE-2016-10156",
  "cwe_ids": [
    "CWE-264"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "systemd",
  "commit_msg": "util-lib: use MODE_INVALID as invalid value for mode_t everywhere",
  "commit_hash": "ee735086f8670be1591fa9593e80dd60163a7a2f",
  "git_url": "https://github.com/systemd/systemd/commit/ee735086f8670be1591fa9593e80dd60163a7a2f",
  "file_path": "src/basic/fs-util.c",
  "func_name": "touch",
  "func_before": "int touch(const char *path) {\n        return touch_file(path, false, USEC_INFINITY, UID_INVALID, GID_INVALID, 0);\n}",
  "abstract_func_before": "int touch(const char *VAR_0) {\n        return touch_file(VAR_0, false, VAR_1, VAR_2, VAR_3, 0);\n}",
  "func_graph_path_before": "systemd/ee735086f8670be1591fa9593e80dd60163a7a2f/fs-util.c/vul/before/1.json",
  "func": "int touch(const char *path) {\n        return touch_file(path, false, USEC_INFINITY, UID_INVALID, GID_INVALID, MODE_INVALID);\n}",
  "abstract_func": "int touch(const char *VAR_0) {\n        return touch_file(VAR_0, false, VAR_1, VAR_2, VAR_3, VAR_4);\n}",
  "func_graph_path": "systemd/ee735086f8670be1591fa9593e80dd60163a7a2f/fs-util.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,3 +1,3 @@\n int touch(const char *path) {\n-        return touch_file(path, false, USEC_INFINITY, UID_INVALID, GID_INVALID, 0);\n+        return touch_file(path, false, USEC_INFINITY, UID_INVALID, GID_INVALID, MODE_INVALID);\n }",
  "diff_line_info": {
    "deleted_lines": [
      "        return touch_file(path, false, USEC_INFINITY, UID_INVALID, GID_INVALID, 0);"
    ],
    "added_lines": [
      "        return touch_file(path, false, USEC_INFINITY, UID_INVALID, GID_INVALID, MODE_INVALID);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/systemd/systemd/pull/1854",
  "description": {
    "pr_info": {
      "title": "Dependency engine improvements",
      "number": 1854
    },
    "comment": [
      "A variety of fixes. \n\nMost important is a fix for 3d793d2 which broke the boot for pretty much all cases. @filbranden please have a look at this one, as it extends extract_first_word().\n\n@philips for you I sat down and documented all automatic unit dependencies. Please have a look. It's one of the issues you had in your systemd.conf talk.\n",
      "EXTRACT_RETAIN_ESCAPE looks good to me.\n\nI was working on the support for backticks and I came up with something similar for variables and specifiers: https://github.com/filbranden/systemd/commit/6fda28ec6d47d928588c9f24d6028cd746895a68\n\nI like your \"retain\" name so I might use something similar over there too...\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.7  \n\nThe patch modifies the use of an invalid mode value, addressing a bug in core logic without explicitly referencing a security issue. The confidence is moderate because the fix is clear but lacks explicit security context."
}