{
  "cve_id": "CVE-2023-44487",
  "cwe_ids": [
    "CWE-400"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "envoyproxy/envoy",
  "commit_msg": "Limit the number of HTTP requests processed from a connection in I/O cycle\n\nSigned-off-by: Yan Avlasov <yavlasov@google.com>\n\nSigned-off-by: Ryan Northey <ryan@synca.io>",
  "commit_hash": "cf687ac66b60f14a71e2a7e552943f138922a71d",
  "git_url": "https://github.com/envoyproxy/envoy/commit/cf687ac66b60f14a71e2a7e552943f138922a71d",
  "file_path": "source/common/http/conn_manager_impl.h",
  "func_name": "State",
  "func_before": "State()\n          : codec_saw_local_complete_(false), codec_encode_complete_(false),\n            on_reset_stream_called_(false), is_zombie_stream_(false), successful_upgrade_(false),\n            is_internally_destroyed_(false), is_internally_created_(false), is_tunneling_(false),\n            decorated_propagate_(true) {}",
  "abstract_func_before": "State()\n          : codec_saw_local_complete_(false), codec_encode_complete_(false),\n            on_reset_stream_called_(false), is_zombie_stream_(false), successful_upgrade_(false),\n            is_internally_destroyed_(false), is_internally_created_(false), is_tunneling_(false),\n            decorated_propagate_(true) {}",
  "func_graph_path_before": null,
  "func": "State()\n          : codec_saw_local_complete_(false), codec_encode_complete_(false),\n            on_reset_stream_called_(false), is_zombie_stream_(false), successful_upgrade_(false),\n            is_internally_destroyed_(false), is_internally_created_(false), is_tunneling_(false),\n            decorated_propagate_(true), deferred_to_next_io_iteration_(false) {}",
  "abstract_func": "State()\n          : codec_saw_local_complete_(false), codec_encode_complete_(false),\n            on_reset_stream_called_(false), is_zombie_stream_(false), successful_upgrade_(false),\n            is_internally_destroyed_(false), is_internally_created_(false), is_tunneling_(false),\n            decorated_propagate_(true), deferred_to_next_io_iteration_(false) {}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,4 +2,4 @@\n           : codec_saw_local_complete_(false), codec_encode_complete_(false),\n             on_reset_stream_called_(false), is_zombie_stream_(false), successful_upgrade_(false),\n             is_internally_destroyed_(false), is_internally_created_(false), is_tunneling_(false),\n-            decorated_propagate_(true) {}\n+            decorated_propagate_(true), deferred_to_next_io_iteration_(false) {}",
  "diff_line_info": {
    "deleted_lines": [
      "            decorated_propagate_(true) {}"
    ],
    "added_lines": [
      "            decorated_propagate_(true), deferred_to_next_io_iteration_(false) {}"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/envoyproxy/envoy/pull/30055",
  "description": {
    "pr_info": {
      "title": "http: Fix CVE CVE-2023-44487",
      "number": 30055
    },
    "comment": [
      "<!--\r\n!!!ATTENTION!!!\r\n\r\nIf you are fixing *any* crash or *any* potential security issue, *do not*\r\nopen a pull request in this repo. Please report the issue via emailing\r\nenvoy-security@googlegroups.com where the issue will be triaged appropriately.\r\nThank you in advance for helping to keep Envoy secure.\r\n\r\n!!!ATTENTION!!!\r\n\r\nFor an explanation of how to fill out the fields, please see the relevant section\r\nin [PULL_REQUESTS.md](https://github.com/envoyproxy/envoy/blob/main/PULL_REQUESTS.md)\r\n-->\r\n\r\nCommit Message:\r\nAdditional Description:\r\nRisk Level:\r\nTesting:\r\nDocs Changes:\r\nRelease Notes:\r\nPlatform Specific Features:\r\n[Optional Runtime guard:]\r\n[Optional Fixes #Issue]\r\n[Optional Fixes commit #PR or SHA]\r\n[Optional Deprecated:]\r\n[Optional [API Considerations](https://github.com/envoyproxy/envoy/blob/main/api/review_checklist.md):]\r\n",
      "CC @envoyproxy/runtime-guard-changes: FYI only for changes made to `(source/common/runtime/runtime_features.cc)`.\n\n\n<details>\n\t<summary>:cat:</summary>\n\nCaused by: https://github.com/envoyproxy/envoy/pull/30055 was opened by phlax.\n\nsee: [more](https://github.com/envoyproxy/envoy/pull/30055), [trace](https://prod.repokitteh.app/traces/ui/envoyproxy/envoy/ae59df20-6764-11ee-8d82-8654fbd73ccb).\n</details>",
      "should we document the stats in `docs/root/configuration/http/http_conn_man/stats.rst`? I need to blame to find this commit to get more sense on `http.downstream_rq_too_many_premature_resets`",
      "Hi,\r\n\r\nI'm trying to analyze the impact from our users perspective what these new parameters are introducing for them.\r\n\r\n`overload.premature_reset_min_stream_lifetime_seconds` and `overload.premature_reset_total_stream_count` as I understood are for identifying that rapid reset attack is happening. Or if not the actual attack then some misbehavior of client. [Rapid reset](https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76)\r\n\r\nAnd `http.max_requests_per_io_cycle` is to help serving requests that are not related to the attack.\r\n\r\nBut in practice what does this mean:\r\n - If we set http.max_requests_per_io_cycle to 1 than Envoy will switch between TCP sockets after it processes 1 request in each?\r\n - Is this switch expected to be costly CPU wise?\r\n - how does Envoy work without setting these parameters? \r\n\r\nAlso I couldn't find definition in your repo on what I/O cycle means for you. Can you please explain?\r\n\r\nThanks in advance!"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.7\n\nThe commit message suggests an optimization to limit HTTP requests per connection, which falls under core logic enhancement. The code diff modifies stream handling, indicating a functional improvement. Although the vulnerability description lacks security context, the changes don't seem to address a security issue explicitly. Thus, it's classified as a non-security defect remediation with moderate confidence.\n\n**Step-by-Step Explanation:**\n\n1. **Commit Analysis:** The message indicates optimizing request handling, suggesting a performance fix, not a security one.\n2. **Code Diff:** Adds a variable for deferring processing, affecting core functionality.\n3. **No Security Indicators:** No CVE or security terms in the description, so it's not a security fix.\n4. **Classification:** Falls under feature upgrades or bug fixes, hence Defect Remediation.\n5. **Confidence:** Moderate (0.7) due to lack of explicit security mention but clear functional change.\n\n**Final Answer:**\n\n**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.7"
}