{
  "cve_id": "CVE-2016-7043",
  "cwe_ids": [
    "CWE-260"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "kiegroup/droolsjbpm-integration",
  "commit_msg": "[RHBMS-4312] Loading pasword from a keystore",
  "commit_hash": "e916032edd47aa46d15f3a11909b4804ee20a7e8",
  "git_url": "https://github.com/kiegroup/droolsjbpm-integration/commit/e916032edd47aa46d15f3a11909b4804ee20a7e8",
  "file_path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/controller/DefaultRestControllerImpl.java",
  "func_name": "startContainer",
  "func_before": "public void startContainer(String containerId) {\n\n        KieServerState currentState = context.getStateRepository().load(KieServerEnvironment.getServerId());\n        Set<String> controllers = currentState.getControllers();\n\n        KieServerConfig config = currentState.getConfiguration();\n        if (controllers != null && !controllers.isEmpty()) {\n            for (String controllerUrl : controllers) {\n\n                if (controllerUrl != null && !controllerUrl.isEmpty()) {\n                    String connectAndSyncUrl = controllerUrl + \"/management/servers/\" + KieServerEnvironment.getServerId() + \"/containers/\" + containerId + \"/status/started\";\n\n                    String userName = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n                    String password = loadPassword(config);\n                    String token = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_TOKEN);\n\n                    try {\n                        makeHttpPostRequestAndCreateCustomResponse(connectAndSyncUrl, \"\", null, userName, password, token);\n                        break;\n                    } catch (Exception e) {\n                        // let's check all other controllers in case of running in cluster of controllers\n                        logger.warn(\"Exception encountered while syncing with controller at {} error {}\", connectAndSyncUrl, e.getCause() == null ? e.getMessage() : e.getCause().getMessage());\n                        logger.debug(\"Exception encountered while syncing with controller at {} error {}\", connectAndSyncUrl, e.getMessage(), e);\n                    }\n\n                }\n            }\n\n        }\n    }",
  "abstract_func_before": "public void startContainer(String VAR_0) {\n\n        KieServerState VAR_1 = VAR_2.getStateRepository().load(VAR_3.getServerId());\n        Set<String> VAR_4 = VAR_1.getControllers();\n\n        KieServerConfig VAR_5 = VAR_1.getConfiguration();\n        if (VAR_4 != null && !VAR_4.isEmpty()) {\n            for (String VAR_6 : VAR_4) {\n\n                if (VAR_6 != null && !VAR_6.isEmpty()) {\n                    String VAR_7 = VAR_6 + \"/management/servers/\" + VAR_3.getServerId() + \"/containers/\" + VAR_0 + \"/status/started\";\n\n                    String VAR_8 = VAR_5.getConfigItemValue(VAR_9.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n                    String VAR_10 = loadPassword(VAR_5);\n                    String VAR_11 = VAR_5.getConfigItemValue(VAR_9.CFG_KIE_CONTROLLER_TOKEN);\n\n                    try {\n                        makeHttpPostRequestAndCreateCustomResponse(VAR_7, \"\", null, VAR_8, VAR_10, VAR_11);\n                        break;\n                    } catch (Exception VAR_12) {\n                        /* COMMENT_0 */\n                        VAR_13.warn(\"Exception encountered while syncing with controller at {} error {}\", VAR_7, VAR_12.getCause() == null ? VAR_12.getMessage() : VAR_12.getCause().getMessage());\n                        VAR_13.debug(\"Exception encountered while syncing with controller at {} error {}\", VAR_7, VAR_12.getMessage(), VAR_12);\n                    }\n\n                }\n            }\n\n        }\n    }",
  "func_graph_path_before": "kiegroup/droolsjbpm-integration/e916032edd47aa46d15f3a11909b4804ee20a7e8/DefaultRestControllerImpl.java/vul/before/1.json",
  "func": "public void startContainer(String containerId) {\n\n        KieServerState currentState = context.getStateRepository().load(KieServerEnvironment.getServerId());\n        Set<String> controllers = currentState.getControllers();\n\n        KieServerConfig config = currentState.getConfiguration();\n        if (controllers != null && !controllers.isEmpty()) {\n            for (String controllerUrl : controllers) {\n\n                if (controllerUrl != null && !controllerUrl.isEmpty()) {\n                    String connectAndSyncUrl = controllerUrl + \"/management/servers/\" + KieServerEnvironment.getServerId() + \"/containers/\" + containerId + \"/status/started\";\n\n                    String userName = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n                    String password = loadControllerPassword(config);\n                    String token = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_TOKEN);\n\n                    try {\n                        makeHttpPostRequestAndCreateCustomResponse(connectAndSyncUrl, \"\", null, userName, password, token);\n                        break;\n                    } catch (Exception e) {\n                        // let's check all other controllers in case of running in cluster of controllers\n                        logger.warn(\"Exception encountered while syncing with controller at {} error {}\", connectAndSyncUrl, e.getCause() == null ? e.getMessage() : e.getCause().getMessage());\n                        logger.debug(\"Exception encountered while syncing with controller at {} error {}\", connectAndSyncUrl, e.getMessage(), e);\n                    }\n\n                }\n            }\n\n        }\n    }",
  "abstract_func": "public void startContainer(String VAR_0) {\n\n        KieServerState VAR_1 = VAR_2.getStateRepository().load(VAR_3.getServerId());\n        Set<String> VAR_4 = VAR_1.getControllers();\n\n        KieServerConfig VAR_5 = VAR_1.getConfiguration();\n        if (VAR_4 != null && !VAR_4.isEmpty()) {\n            for (String VAR_6 : VAR_4) {\n\n                if (VAR_6 != null && !VAR_6.isEmpty()) {\n                    String VAR_7 = VAR_6 + \"/management/servers/\" + VAR_3.getServerId() + \"/containers/\" + VAR_0 + \"/status/started\";\n\n                    String VAR_8 = VAR_5.getConfigItemValue(VAR_9.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n                    String VAR_10 = loadControllerPassword(VAR_5);\n                    String VAR_11 = VAR_5.getConfigItemValue(VAR_9.CFG_KIE_CONTROLLER_TOKEN);\n\n                    try {\n                        makeHttpPostRequestAndCreateCustomResponse(VAR_7, \"\", null, VAR_8, VAR_10, VAR_11);\n                        break;\n                    } catch (Exception VAR_12) {\n                        /* COMMENT_0 */\n                        VAR_13.warn(\"Exception encountered while syncing with controller at {} error {}\", VAR_7, VAR_12.getCause() == null ? VAR_12.getMessage() : VAR_12.getCause().getMessage());\n                        VAR_13.debug(\"Exception encountered while syncing with controller at {} error {}\", VAR_7, VAR_12.getMessage(), VAR_12);\n                    }\n\n                }\n            }\n\n        }\n    }",
  "func_graph_path": "kiegroup/droolsjbpm-integration/e916032edd47aa46d15f3a11909b4804ee20a7e8/DefaultRestControllerImpl.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -11,7 +11,7 @@\n                     String connectAndSyncUrl = controllerUrl + \"/management/servers/\" + KieServerEnvironment.getServerId() + \"/containers/\" + containerId + \"/status/started\";\n \n                     String userName = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_USER, \"kieserver\");\n-                    String password = loadPassword(config);\n+                    String password = loadControllerPassword(config);\n                     String token = config.getConfigItemValue(KieServerConstants.CFG_KIE_CONTROLLER_TOKEN);\n \n                     try {",
  "diff_line_info": {
    "deleted_lines": [
      "                    String password = loadPassword(config);"
    ],
    "added_lines": [
      "                    String password = loadControllerPassword(config);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/1273",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/kiegroup/droolsjbpm-integration/pull/1273: 403 Client Error: Forbidden for url: https://api.github.com/repos/kiegroup/droolsjbpm-integration/pulls/1273",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.6,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.6"
}