{
  "cve_id": "CVE-2020-36434",
  "cwe_ids": [
    "CWE-415"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "FillZpp/sys-info-rs",
  "commit_msg": "Make Disk Info Thread-Safe on Linux",
  "commit_hash": "4fda8b6a5ffbea03d05fcfc0a89594e6ca495fc7",
  "git_url": "https://github.com/FillZpp/sys-info-rs/commit/4fda8b6a5ffbea03d05fcfc0a89594e6ca495fc7",
  "file_path": "c/linux.c",
  "func_name": "device_space",
  "func_before": "float device_space(char *mount, char *device, double *total_size, double *total_free)\n{\n\tstruct statvfs svfs;\n\tdouble blocksize;\n\tdouble free;\n\tdouble size;\n\t/* The percent used: used/total * 100 */\n\tfloat pct=0.0;\n\n\t/* Avoid multiply-mounted disks - not done in df. */\n\tif (seen_before(device)) return pct;\n\n\tif (statvfs(mount, &svfs)) {\n\t\t/* Ignore funky devices... */\n\t\treturn pct;\n\t}\n\n\tfree = svfs.f_bavail;\n\tsize  = svfs.f_blocks;\n\tblocksize = svfs.f_bsize;\n\t/* Keep running sum of total used, free local disk space. */\n\t*total_size += size * blocksize;\n\t*total_free += free * blocksize;\n\t/* The percentage of space used on this partition. */\n\tpct = size ? ((size - free) / (float) size) * 100 : 0.0;\n\treturn pct;\n}",
  "abstract_func_before": "float device_space(char *VAR_0, char *VAR_1, double *VAR_2, double *VAR_3)\n{\n\tstruct statvfs VAR_4;\n\tdouble VAR_5;\n\tdouble VAR_6;\n\tdouble VAR_7;\n\t/* COMMENT_0 */\n\tfloat VAR_8=0.0;\n\n\t/* COMMENT_1 */\n\tif (seen_before(VAR_1)) return VAR_8;\n\n\tif (statvfs(VAR_0, &VAR_4)) {\n\t\t/* COMMENT_2 */\n\t\treturn VAR_8;\n\t}\n\n\tVAR_6 = VAR_4.f_bavail;\n\tVAR_7  = VAR_4.f_blocks;\n\tVAR_5 = VAR_4.f_bsize;\n\t/* COMMENT_3 */\n\t*VAR_2 += VAR_7 * VAR_5;\n\t*VAR_3 += VAR_6 * VAR_5;\n\t/* COMMENT_4 */\n\tVAR_8 = VAR_7 ? ((VAR_7 - VAR_6) / (float) VAR_7) * 100 : 0.0;\n\treturn VAR_8;\n}",
  "func_graph_path_before": "FillZpp/sys-info-rs/4fda8b6a5ffbea03d05fcfc0a89594e6ca495fc7/linux.c/vul/before/1.json",
  "func": "float device_space(struct nlist **DFhashvector, char *mount, char *device, double *total_size, double *total_free)\n{\n\tstruct statvfs svfs;\n\tdouble blocksize;\n\tdouble free;\n\tdouble size;\n\t/* The percent used: used/total * 100 */\n\tfloat pct=0.0;\n\n\t/* Avoid multiply-mounted disks - not done in df. */\n\tif (seen_before(DFhashvector, device)) return pct;\n\n\tif (statvfs(mount, &svfs)) {\n\t\t/* Ignore funky devices... */\n\t\treturn pct;\n\t}\n\n\tfree = svfs.f_bavail;\n\tsize  = svfs.f_blocks;\n\tblocksize = svfs.f_bsize;\n\t/* Keep running sum of total used, free local disk space. */\n\t*total_size += size * blocksize;\n\t*total_free += free * blocksize;\n\t/* The percentage of space used on this partition. */\n\tpct = size ? ((size - free) / (float) size) * 100 : 0.0;\n\treturn pct;\n}",
  "abstract_func": "float device_space(struct nlist **VAR_0, char *VAR_1, char *VAR_2, double *VAR_3, double *VAR_4)\n{\n\tstruct statvfs VAR_5;\n\tdouble VAR_6;\n\tdouble VAR_7;\n\tdouble VAR_8;\n\t/* COMMENT_0 */\n\tfloat VAR_9=0.0;\n\n\t/* COMMENT_1 */\n\tif (seen_before(VAR_0, VAR_2)) return VAR_9;\n\n\tif (statvfs(VAR_1, &VAR_5)) {\n\t\t/* COMMENT_2 */\n\t\treturn VAR_9;\n\t}\n\n\tVAR_7 = VAR_5.f_bavail;\n\tVAR_8  = VAR_5.f_blocks;\n\tVAR_6 = VAR_5.f_bsize;\n\t/* COMMENT_3 */\n\t*VAR_3 += VAR_8 * VAR_6;\n\t*VAR_4 += VAR_7 * VAR_6;\n\t/* COMMENT_4 */\n\tVAR_9 = VAR_8 ? ((VAR_8 - VAR_7) / (float) VAR_8) * 100 : 0.0;\n\treturn VAR_9;\n}",
  "func_graph_path": "FillZpp/sys-info-rs/4fda8b6a5ffbea03d05fcfc0a89594e6ca495fc7/linux.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,4 @@\n-float device_space(char *mount, char *device, double *total_size, double *total_free)\n+float device_space(struct nlist **DFhashvector, char *mount, char *device, double *total_size, double *total_free)\n {\n \tstruct statvfs svfs;\n \tdouble blocksize;\n@@ -8,7 +8,7 @@\n \tfloat pct=0.0;\n \n \t/* Avoid multiply-mounted disks - not done in df. */\n-\tif (seen_before(device)) return pct;\n+\tif (seen_before(DFhashvector, device)) return pct;\n \n \tif (statvfs(mount, &svfs)) {\n \t\t/* Ignore funky devices... */",
  "diff_line_info": {
    "deleted_lines": [
      "float device_space(char *mount, char *device, double *total_size, double *total_free)",
      "\tif (seen_before(device)) return pct;"
    ],
    "added_lines": [
      "float device_space(struct nlist **DFhashvector, char *mount, char *device, double *total_size, double *total_free)",
      "\tif (seen_before(DFhashvector, device)) return pct;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/FillZpp/sys-info-rs/pull/84",
  "description": {
    "pr_info": {
      "title": "Make Disk Info Thread-Safe on Linux",
      "number": 84
    },
    "comment": [
      "Closes #63\r\n\r\nPass the `DFhashvector` around as an argument instead of using a global variable.\r\n\r\npossible alternatives: a lock"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.8"
}