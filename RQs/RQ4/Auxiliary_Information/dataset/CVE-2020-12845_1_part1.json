{
  "cve_id": "CVE-2020-12845",
  "cwe_ids": [
    "CWE-476"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "cherokee/webserver",
  "commit_msg": "Don't process empty input for cherokee_validator_parse_basic and cherokee_validator_parse_digest",
  "commit_hash": "1542244907b4c0a595444640341b2daea91d5767",
  "git_url": "https://github.com/cherokee/webserver/commit/1542244907b4c0a595444640341b2daea91d5767",
  "file_path": "cherokee/validator.c",
  "func_name": "cherokee_validator_parse_basic",
  "func_before": "ret_t\ncherokee_validator_parse_basic (cherokee_validator_t *validator, char *str, cuint_t str_len)\n{\n\tchar              *colon;\n\tcherokee_buffer_t  auth = CHEROKEE_BUF_INIT;\n\n\t/* Decode base64\n\t */\n\tcherokee_buffer_add (&auth, str, str_len);\n\tcherokee_buffer_decode_base64 (&auth);\n\n\t/* Look for the user:passwd structure\n\t */\n\tcolon = strchr (auth.buf, ':');\n\tif (colon == NULL)\n\t\tgoto error;\n\n\t/* Copy user and password\n\t */\n\tcherokee_buffer_add (&validator->user, auth.buf, colon - auth.buf);\n\tcherokee_buffer_add (&validator->passwd, colon+1, auth.len  - ((colon+1) - auth.buf));\n\n\tTRACE (ENTRIES, \"Parse basic auth got user=%s, passwd=%s\\n\", validator->user.buf, validator->passwd.buf);\n\n\t/* Clean up and exit\n\t */\n\tcherokee_buffer_mrproper (&auth);\n\treturn ret_ok;\n\nerror:\n\tcherokee_buffer_mrproper (&auth);\n\treturn ret_error;\n}",
  "abstract_func_before": "ret_t\ncherokee_validator_parse_basic (cherokee_validator_t *VAR_0, char *VAR_1, cuint_t VAR_2)\n{\n\tchar              *VAR_3;\n\tcherokee_buffer_t  VAR_4 = VAR_5;\n\n\t/* COMMENT_0 */\n    \n\tcherokee_buffer_add (&VAR_4, VAR_1, VAR_2);\n\tcherokee_buffer_decode_base64 (&VAR_4);\n\n\t/* COMMENT_2 */\n    \n\tVAR_3 = strchr (VAR_4.buf, ':');\n\tif (VAR_3 == NULL)\n\t\tgoto error;\n\n\t/* COMMENT_4 */\n    \n\tcherokee_buffer_add (&VAR_0->user, VAR_4.buf, VAR_3 - VAR_4.buf);\n\tcherokee_buffer_add (&VAR_0->passwd, VAR_3+1, VAR_4.len  - ((VAR_3+1) - VAR_4.buf));\n\n\tTRACE (VAR_6, \"Parse basic auth got user=%s, passwd=%s\\n\", VAR_0->user.buf, VAR_0->passwd.buf);\n\n\t/* COMMENT_6 */\n    \n\tcherokee_buffer_mrproper (&VAR_4);\n\treturn VAR_7;\n\nerror:\n\tcherokee_buffer_mrproper (&VAR_4);\n\treturn VAR_8;\n}",
  "func_graph_path_before": "cherokee/webserver/1542244907b4c0a595444640341b2daea91d5767/validator.c/vul/before/0.json",
  "func": "ret_t\ncherokee_validator_parse_basic (cherokee_validator_t *validator, char *str, cuint_t str_len)\n{\n\tchar              *colon;\n\tcherokee_buffer_t  auth = CHEROKEE_BUF_INIT;\n\n\t/* Guard empty input\n\t */\n\tif (unlikely(str == NULL || str_len == 0))\n\t\tgoto error;\n\n\t/* Decode base64\n\t */\n\tcherokee_buffer_add (&auth, str, str_len);\n\tcherokee_buffer_decode_base64 (&auth);\n\n\t/* Look for the user:passwd structure\n\t */\n\tcolon = strchr (auth.buf, ':');\n\tif (colon == NULL)\n\t\tgoto error;\n\n\t/* Copy user and password\n\t */\n\tcherokee_buffer_add (&validator->user, auth.buf, colon - auth.buf);\n\tcherokee_buffer_add (&validator->passwd, colon+1, auth.len  - ((colon+1) - auth.buf));\n\n\tTRACE (ENTRIES, \"Parse basic auth got user=%s, passwd=%s\\n\", validator->user.buf, validator->passwd.buf);\n\n\t/* Clean up and exit\n\t */\n\tcherokee_buffer_mrproper (&auth);\n\treturn ret_ok;\n\nerror:\n\tcherokee_buffer_mrproper (&auth);\n\treturn ret_error;\n}",
  "abstract_func": "ret_t\ncherokee_validator_parse_basic (cherokee_validator_t *VAR_0, char *VAR_1, cuint_t VAR_2)\n{\n\tchar              *VAR_3;\n\tcherokee_buffer_t  VAR_4 = VAR_5;\n\n\t/* COMMENT_0 */\n    \n\tif (unlikely(VAR_1 == NULL || VAR_2 == 0))\n\t\tgoto error;\n\n\t/* COMMENT_2 */\n    \n\tcherokee_buffer_add (&VAR_4, VAR_1, VAR_2);\n\tcherokee_buffer_decode_base64 (&VAR_4);\n\n\t/* COMMENT_4 */\n    \n\tVAR_3 = strchr (VAR_4.buf, ':');\n\tif (VAR_3 == NULL)\n\t\tgoto error;\n\n\t/* COMMENT_6 */\n    \n\tcherokee_buffer_add (&VAR_0->user, VAR_4.buf, VAR_3 - VAR_4.buf);\n\tcherokee_buffer_add (&VAR_0->passwd, VAR_3+1, VAR_4.len  - ((VAR_3+1) - VAR_4.buf));\n\n\tTRACE (VAR_6, \"Parse basic auth got user=%s, passwd=%s\\n\", VAR_0->user.buf, VAR_0->passwd.buf);\n\n\t/* COMMENT_8 */\n    \n\tcherokee_buffer_mrproper (&VAR_4);\n\treturn VAR_7;\n\nerror:\n\tcherokee_buffer_mrproper (&VAR_4);\n\treturn VAR_8;\n}",
  "func_graph_path": "cherokee/webserver/1542244907b4c0a595444640341b2daea91d5767/validator.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,6 +3,11 @@\n {\n \tchar              *colon;\n \tcherokee_buffer_t  auth = CHEROKEE_BUF_INIT;\n+\n+\t/* Guard empty input\n+\t */\n+\tif (unlikely(str == NULL || str_len == 0))\n+\t\tgoto error;\n \n \t/* Decode base64\n \t */",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "",
      "\t/* Guard empty input",
      "\t */",
      "\tif (unlikely(str == NULL || str_len == 0))",
      "\t\tgoto error;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/cherokee/webserver/pull/1243",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/cherokee/webserver/pull/1243: 403 Client Error: Forbidden for url: https://api.github.com/repos/cherokee/webserver/pulls/1243",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9  \n\nThe commit addresses an empty input handling in functions that parse HTTP headers, adding a security guard. This prevents potential issues like crashes or exploitation due to improper input, indicating a security fix. The confidence is high as changes align clearly with the security purpose."
}