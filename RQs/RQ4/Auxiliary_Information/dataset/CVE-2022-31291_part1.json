{
  "cve_id": "CVE-2022-31291",
  "cwe_ids": [
    "CWE-415"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "COVESA/dlt-daemon",
  "commit_msg": "Fix a double-free bug.\n\nIn the dlt_config_file_set_section function of dlt_config_file_parser.c:\n  s-name is not set to null after free.\n  It will be freed again in the dlt_config_file_release function.\n\nSigned-off-by: Zhongyang.Bao <Zhongyang.Bao@zeekrlife.com>",
  "commit_hash": "44c814c469eb89cca218a41341d9de5016c5d096",
  "git_url": "https://github.com/COVESA/dlt-daemon/commit/44c814c469eb89cca218a41341d9de5016c5d096",
  "file_path": "src/shared/dlt_config_file_parser.c",
  "func_name": "dlt_config_file_set_section",
  "func_before": "static int dlt_config_file_set_section(DltConfigFile *file, char *name)\n{\n    int section = file->num_sections;\n\n    /* check if adding another section would exceed max number of sections */\n    if (section >= DLT_CONFIG_FILE_SECTIONS_MAX) {\n        dlt_log(LOG_WARNING, \"Cannot store more sections\\n\");\n        return -1; /* reached max number of sections */\n    }\n\n    /* do not store section with same name again */\n    if (dlt_config_file_is_section_name(file, name) != 0) {\n        dlt_log(LOG_WARNING, \"Cannot store section name again\\n\");\n        return -1;\n    }\n\n    DltConfigFileSection *s = &file->sections[section];\n\n    /* alloc data for entries */\n    s->name = calloc(sizeof(char), DLT_CONFIG_FILE_ENTRY_MAX_LEN + 1);\n\n    if (s->name == NULL) {\n        dlt_log(LOG_ERR, \"Cannot allocate memory for internal data structure\\n\");\n        return -1;\n    }\n\n    s->keys = calloc(sizeof(char), DLT_CONFIG_FILE_ENTRY_MAX_LEN * DLT_CONFIG_FILE_KEYS_MAX + 1);\n\n    if (s->keys == NULL) {\n        free(s->name);\n        dlt_log(LOG_ERR, \"Cannot allocate memory for internal data structure\\n\");\n        return -1;\n    }\n\n    strncpy(file->sections[section].name, name, DLT_CONFIG_FILE_ENTRY_MAX_LEN);\n    file->num_sections += 1;\n    return 0;\n}",
  "abstract_func_before": "static int dlt_config_file_set_section(DltConfigFile *VAR_0, char *VAR_1)\n{\n    int VAR_2 = VAR_0->num_sections;\n\n    /* COMMENT_0 */\n    if (VAR_2 >= VAR_3) {\n        dlt_log(VAR_4, \"Cannot store more sections\\n\");\n        return -1; /* COMMENT_1 */\n    }\n\n    /* COMMENT_2 */\n    if (dlt_config_file_is_section_name(VAR_0, VAR_1) != 0) {\n        dlt_log(VAR_4, \"Cannot store section name again\\n\");\n        return -1;\n    }\n\n    DltConfigFileSection *VAR_5 = &VAR_0->sections[VAR_2];\n\n    /* COMMENT_3 */\n    VAR_5->name = calloc(sizeof(char), VAR_6 + 1);\n\n    if (VAR_5->name == NULL) {\n        dlt_log(VAR_7, \"Cannot allocate memory for internal data structure\\n\");\n        return -1;\n    }\n\n    VAR_5->keys = calloc(sizeof(char), VAR_6 * VAR_8 + 1);\n\n    if (VAR_5->keys == NULL) {\n        free(VAR_5->name);\n        dlt_log(VAR_7, \"Cannot allocate memory for internal data structure\\n\");\n        return -1;\n    }\n\n    strncpy(VAR_0->sections[VAR_2].name, VAR_1, VAR_6);\n    VAR_0->num_sections += 1;\n    return 0;\n}",
  "func_graph_path_before": "COVESA/dlt-daemon/44c814c469eb89cca218a41341d9de5016c5d096/dlt_config_file_parser.c/vul/before/0.json",
  "func": "static int dlt_config_file_set_section(DltConfigFile *file, char *name)\n{\n    int section = file->num_sections;\n\n    /* check if adding another section would exceed max number of sections */\n    if (section >= DLT_CONFIG_FILE_SECTIONS_MAX) {\n        dlt_log(LOG_WARNING, \"Cannot store more sections\\n\");\n        return -1; /* reached max number of sections */\n    }\n\n    /* do not store section with same name again */\n    if (dlt_config_file_is_section_name(file, name) != 0) {\n        dlt_log(LOG_WARNING, \"Cannot store section name again\\n\");\n        return -1;\n    }\n\n    DltConfigFileSection *s = &file->sections[section];\n\n    /* alloc data for entries */\n    s->name = calloc(sizeof(char), DLT_CONFIG_FILE_ENTRY_MAX_LEN + 1);\n\n    if (s->name == NULL) {\n        dlt_log(LOG_ERR, \"Cannot allocate memory for internal data structure\\n\");\n        return -1;\n    }\n\n    s->keys = calloc(sizeof(char), DLT_CONFIG_FILE_ENTRY_MAX_LEN * DLT_CONFIG_FILE_KEYS_MAX + 1);\n\n    if (s->keys == NULL) {\n        free(s->name);\n        s->name = NULL;\n        dlt_log(LOG_ERR, \"Cannot allocate memory for internal data structure\\n\");\n        return -1;\n    }\n\n    strncpy(file->sections[section].name, name, DLT_CONFIG_FILE_ENTRY_MAX_LEN);\n    file->num_sections += 1;\n    return 0;\n}",
  "abstract_func": "static int dlt_config_file_set_section(DltConfigFile *VAR_0, char *VAR_1)\n{\n    int VAR_2 = VAR_0->num_sections;\n\n    /* COMMENT_0 */\n    if (VAR_2 >= VAR_3) {\n        dlt_log(VAR_4, \"Cannot store more sections\\n\");\n        return -1; /* COMMENT_1 */\n    }\n\n    /* COMMENT_2 */\n    if (dlt_config_file_is_section_name(VAR_0, VAR_1) != 0) {\n        dlt_log(VAR_4, \"Cannot store section name again\\n\");\n        return -1;\n    }\n\n    DltConfigFileSection *VAR_5 = &VAR_0->sections[VAR_2];\n\n    /* COMMENT_3 */\n    VAR_5->name = calloc(sizeof(char), VAR_6 + 1);\n\n    if (VAR_5->name == NULL) {\n        dlt_log(VAR_7, \"Cannot allocate memory for internal data structure\\n\");\n        return -1;\n    }\n\n    VAR_5->keys = calloc(sizeof(char), VAR_6 * VAR_8 + 1);\n\n    if (VAR_5->keys == NULL) {\n        free(VAR_5->name);\n        VAR_5->name = NULL;\n        dlt_log(VAR_7, \"Cannot allocate memory for internal data structure\\n\");\n        return -1;\n    }\n\n    strncpy(VAR_0->sections[VAR_2].name, VAR_1, VAR_6);\n    VAR_0->num_sections += 1;\n    return 0;\n}",
  "func_graph_path": "COVESA/dlt-daemon/44c814c469eb89cca218a41341d9de5016c5d096/dlt_config_file_parser.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -28,6 +28,7 @@\n \n     if (s->keys == NULL) {\n         free(s->name);\n+        s->name = NULL;\n         dlt_log(LOG_ERR, \"Cannot allocate memory for internal data structure\\n\");\n         return -1;\n     }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        s->name = NULL;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/COVESA/dlt-daemon/pull/376",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/COVESA/dlt-daemon/pull/376: 403 Client Error: Forbidden for url: https://api.github.com/repos/COVESA/dlt-daemon/pulls/376",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 1.0"
}