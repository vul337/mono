{
  "cve_id": "CVE-2023-4322",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix 1byte heap oobread in the brainfuck disassembler\n\n* https://huntr.dev/bounties/06e2484c-d6f1-4497-af67-26549be9fffd/\n* Kudos to @7resp4ss for reporting",
  "commit_hash": "ba919adb74ac368bf76b150a00347ded78b572dd",
  "git_url": "https://github.com/radareorg/radare2/commit/ba919adb74ac368bf76b150a00347ded78b572dd",
  "file_path": "libr/core/cmd_anal.c",
  "func_name": "cmd_anal_ucall_ref",
  "func_before": "static void cmd_anal_ucall_ref(RCore *core, ut64 addr) {\n\tRAnalFunction * fcn = r_anal_get_function_at (core->anal, addr);\n\tif (fcn) {\n\t\tr_cons_printf (\" ; %s\", fcn->name);\n\t} else {\n\t\tr_cons_printf (\" ; 0x%\" PFMT64x, addr);\n\t}\n}",
  "abstract_func_before": "static void cmd_anal_ucall_ref(RCore *VAR_0, ut64 VAR_1) {\n\tRAnalFunction * VAR_2 = r_anal_get_function_at (VAR_0->anal, VAR_1);\n\tif (VAR_2) {\n\t\tr_cons_printf (\" ; %s\", VAR_2->name);\n\t} else {\n\t\tr_cons_printf (\" ; 0x%\" VAR_3, VAR_1);\n\t}\n}",
  "func_graph_path_before": "radareorg/radare2/ba919adb74ac368bf76b150a00347ded78b572dd/cmd_anal.c/vul/before/0.json",
  "func": "static void cmd_anal_ucall_ref(RCore *core, ut64 addr) {\n\tRAnalFunction *fcn = r_anal_get_function_at (core->anal, addr);\n\tif (fcn) {\n\t\tr_cons_printf (\" ; %s\", fcn->name);\n\t} else {\n\t\tr_cons_printf (\" ; 0x%\" PFMT64x, addr);\n\t}\n}",
  "abstract_func": "static void cmd_anal_ucall_ref(RCore *VAR_0, ut64 VAR_1) {\n\tRAnalFunction *VAR_2 = r_anal_get_function_at (VAR_0->anal, VAR_1);\n\tif (VAR_2) {\n\t\tr_cons_printf (\" ; %s\", VAR_2->name);\n\t} else {\n\t\tr_cons_printf (\" ; 0x%\" VAR_3, VAR_1);\n\t}\n}",
  "func_graph_path": "radareorg/radare2/ba919adb74ac368bf76b150a00347ded78b572dd/cmd_anal.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,5 @@\n static void cmd_anal_ucall_ref(RCore *core, ut64 addr) {\n-\tRAnalFunction * fcn = r_anal_get_function_at (core->anal, addr);\n+\tRAnalFunction *fcn = r_anal_get_function_at (core->anal, addr);\n \tif (fcn) {\n \t\tr_cons_printf (\" ; %s\", fcn->name);\n \t} else {",
  "diff_line_info": {
    "deleted_lines": [
      "\tRAnalFunction * fcn = r_anal_get_function_at (core->anal, addr);"
    ],
    "added_lines": [
      "\tRAnalFunction *fcn = r_anal_get_function_at (core->anal, addr);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/22154",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/radareorg/radare2/pull/22154: 403 Client Error: Forbidden for url: https://api.github.com/repos/radareorg/radare2/pulls/22154",
  "Bug Filter": "Supporting & Non-Core Improvements",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Supporting & Non-Core Improvements; **Confidence:** 0.95"
}