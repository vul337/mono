{
  "cve_id": "CVE-2023-1495",
  "cwe_ids": [
    "CWE-89"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "getrebuild/rebuild",
  "commit_msg": "H5 sync2 (#595)\n\n* style: 目录样式gh\r\n\r\n* style: J_new\r\n\r\n* feat: advListFilterTabs\r\n\r\n* feat: nav-copyto\r\n\r\n* enh: 助记码全拼\r\n\r\n* enh: 地图搜索选点\r\n\r\n* enh: topnav\r\n\r\n* list pn\r\n\r\n* .form-line.v33\r\n\r\n* open TAG\r\n\r\n* KVS addShutdownHook\r\n\r\n* fix: #594\r\n\r\n---------\r\n\r\nCo-authored-by: devezhao <zhaofang123@gmail.com>",
  "commit_hash": "c9474f84e5f376dd2ade2078e3039961a9425da7",
  "git_url": "https://github.com/getrebuild/rebuild/commit/c9474f84e5f376dd2ade2078e3039961a9425da7",
  "file_path": "src/main/java/com/rebuild/web/files/FileListController.java",
  "func_name": "listFile",
  "func_before": "@GetMapping(\"list-file\")\n    public JSON listFile(HttpServletRequest request) {\n        final ID user = getRequestUser(request);\n        int pageNo = getIntParameter(request, \"pageNo\", 1);\n        int pageSize = getIntParameter(request, \"pageSize\", 100);\n\n        String sort = getParameter(request, \"sort\");\n        String q = getParameter(request, \"q\");\n        // 从相关记录\n        ID related = getIdParameter(request, \"related\");\n\n        // Entity(code) or Folder(ID/ALL)\n        String entry = getParameter(request, \"entry\");\n\n        int useEntity = 0;\n        ID useFolder = null;\n\n        if (NumberUtils.isNumber(entry)) {\n            useEntity = NumberUtils.toInt(entry);\n        } else if (ID.isId(entry)) {\n            useFolder = ID.valueOf(entry);\n        }\n\n        // 支持查询 ID\n        if (related == null && ID.isId(q) && useEntity > 0) {\n            related = ID.valueOf(q);\n            q = null;\n        }\n\n        List<String> sqlWhere = new ArrayList<>();\n        if (StringUtils.isNotBlank(q)) {\n            sqlWhere.add(String.format(\"filePath like '%%%s%%'\", StringEscapeUtils.escapeSql(q)));\n        }\n\n        // 附件\n        if (useEntity > 0) {\n            if (useEntity == EntityHelper.Feeds) {\n                sqlWhere.add(String.format(\n                        \"(belongEntity = %d or belongEntity = %d)\", useEntity, EntityHelper.FeedsComment));\n            } else if (useEntity == EntityHelper.ProjectTask) {\n                sqlWhere.add(String.format(\n                        \"(belongEntity = %d or belongEntity = %d)\", useEntity, EntityHelper.ProjectTaskComment));\n            } else if (useEntity > 1) {\n                Entity entityMeta = MetadataHelper.getEntity(useEntity);\n                if (entityMeta.getDetailEntity() != null) {\n                    sqlWhere.add(String.format(\n                            \"(belongEntity = %d or belongEntity = %d)\", useEntity, entityMeta.getDetailEntity().getEntityCode()));\n                } else {\n                    sqlWhere.add(\"belongEntity = \" + useEntity);\n                }\n\n            } else {\n                // 查看全部实体\n                if (UserHelper.isAdmin(user)) {\n                    sqlWhere.add(\"belongEntity > 0\");\n                } else {\n                    String entityWhere = \"( belongEntity = \" +\n                            StringUtils.join(getAllowEntities(user, true), \" or belongEntity = \") + \" )\";\n                    sqlWhere.add(entityWhere);\n                }\n            }\n        }\n        // 文件\n        else {\n            sqlWhere.add(\"belongEntity = 0\");\n\n            // 可访问目录\n            Set<ID> accessable = FilesHelper.getAccessableFolders(user);\n\n            if (useFolder != null) {\n                if (accessable.contains(useFolder)) {\n                    Set<ID> fs = new HashSet<>();\n                    fs.add(useFolder);\n                    fs.addAll(FilesHelper.getChildFolders(useFolder));\n                    // 移除不可访问的\n                    fs.removeIf(id -> !accessable.contains(id));\n                    sqlWhere.add(String.format(\n                            \"inFolder in ('%s')\", StringUtils.join(fs, \"','\")));\n                } else {\n                    sqlWhere.add(\"(1=2)\");\n                }\n\n            } else {\n                if (accessable.isEmpty()) {\n                    sqlWhere.add(\"inFolder is null\");\n                } else {\n                    sqlWhere.add(String.format(\n                            \"(inFolder is null or inFolder in ('%s'))\", StringUtils.join(accessable, \"','\")));\n                }\n            }\n        }\n\n        if (related != null) {\n            sqlWhere.add(String.format(\"relatedRecord = '%s'\", related));\n        }\n\n        String sql = \"select attachmentId,filePath,fileType,fileSize,createdBy,modifiedOn,inFolder,relatedRecord from Attachment where (1=1) and (isDeleted = ?)\";\n        sql = sql.replace(\"(1=1)\", StringUtils.join(sqlWhere.iterator(), \" and \"));\n        if (\"older\".equals(sort)) {\n            sql += \" order by createdOn asc\";\n        } else {\n            sql += \" order by modifiedOn desc\";\n        }\n\n        Object[][] array = Application.createQueryNoFilter(sql)\n                .setParameter(1, false)\n                .setLimit(pageSize, pageNo * pageSize - pageSize)\n                .array();\n\n        JSONArray files = new JSONArray();\n        for (Object[] o : array) {\n            JSONObject item = new JSONObject();\n            item.put(\"id\", o[0]);\n            item.put(\"filePath\", o[1]);\n            item.put(\"fileType\", o[2]);\n            item.put(\"fileSize\", FileUtils.byteCountToDisplaySize(ObjectUtils.toLong(o[3])));\n            item.put(\"uploadBy\", new Object[]{o[4], UserHelper.getName((ID) o[4])});\n            item.put(\"uploadOn\", I18nUtils.formatDate((Date) o[5]));\n            item.put(\"inFolder\", o[6]);\n\n            ID relatedRecord = (ID) o[7];\n            if (relatedRecord != null && MetadataHelper.containsEntity(relatedRecord.getEntityCode())) {\n                Entity belongEntity = MetadataHelper.getEntity(relatedRecord.getEntityCode());\n                item.put(\"relatedRecord\", new Object[]{relatedRecord, EasyMetaFactory.getLabel(belongEntity)});\n            }\n\n            files.add(item);\n        }\n        return files;\n    }",
  "abstract_func_before": "@GetMapping(\"list-file\")\n    public JSON listFile(HttpServletRequest VAR_0) {\n        final ID VAR_1 = getRequestUser(VAR_0);\n        int VAR_2 = getIntParameter(VAR_0, \"pageNo\", 1);\n        int VAR_3 = getIntParameter(VAR_0, \"pageSize\", 100);\n\n        String VAR_4 = getParameter(VAR_0, \"sort\");\n        String VAR_5 = getParameter(VAR_0, \"q\");\n        /* COMMENT_0 */\n        ID VAR_6 = getIdParameter(VAR_0, \"related\");\n\n        /* COMMENT_1 */\n        String VAR_7 = getParameter(VAR_0, \"entry\");\n\n        int VAR_8 = 0;\n        ID VAR_9 = null;\n\n        if (VAR_10.isNumber(VAR_7)) {\n            VAR_8 = VAR_10.toInt(VAR_7);\n        } else if (VAR_11.isId(VAR_7)) {\n            VAR_9 = VAR_11.valueOf(VAR_7);\n        }\n\n        /* COMMENT_2 */\n        if (VAR_6 == null && VAR_11.isId(VAR_5) && VAR_8 > 0) {\n            VAR_6 = VAR_11.valueOf(VAR_5);\n            VAR_5 = null;\n        }\n\n        List<String> VAR_12 = new ArrayList<>();\n        if (VAR_13.isNotBlank(VAR_5)) {\n            VAR_12.add(VAR_14.format(\"filePath like '%%%s%%'\", VAR_15.escapeSql(VAR_5)));\n        }\n\n        /* COMMENT_3 */\n        if (VAR_8 > 0) {\n            if (VAR_8 == VAR_16.Feeds) {\n                VAR_12.add(VAR_14.format(\n                        \"(belongEntity = %d or belongEntity = %d)\", VAR_8, VAR_16.FeedsComment));\n            } else if (VAR_8 == VAR_16.ProjectTask) {\n                VAR_12.add(VAR_14.format(\n                        \"(belongEntity = %d or belongEntity = %d)\", VAR_8, VAR_16.ProjectTaskComment));\n            } else if (VAR_8 > 1) {\n                Entity VAR_17 = VAR_18.getEntity(VAR_8);\n                if (VAR_17.getDetailEntity() != null) {\n                    VAR_12.add(VAR_14.format(\n                            \"(belongEntity = %d or belongEntity = %d)\", VAR_8, VAR_17.getDetailEntity().getEntityCode()));\n                } else {\n                    VAR_12.add(\"belongEntity = \" + VAR_8);\n                }\n\n            } else {\n                /* COMMENT_4 */\n                if (VAR_19.isAdmin(VAR_1)) {\n                    VAR_12.add(\"belongEntity > 0\");\n                } else {\n                    String VAR_20 = \"( belongEntity = \" +\n                            VAR_13.join(getAllowEntities(VAR_1, true), \" or belongEntity = \") + \" )\";\n                    VAR_12.add(VAR_20);\n                }\n            }\n        }\n        /* COMMENT_5 */\n        else {\n            VAR_12.add(\"belongEntity = 0\");\n\n            /* COMMENT_6 */\n            Set<ID> VAR_21 = VAR_22.getAccessableFolders(VAR_1);\n\n            if (VAR_9 != null) {\n                if (VAR_21.contains(VAR_9)) {\n                    Set<ID> VAR_23 = new HashSet<>();\n                    VAR_23.add(VAR_9);\n                    VAR_23.addAll(VAR_22.getChildFolders(VAR_9));\n                    /* COMMENT_7 */\n                    VAR_23.removeIf(VAR_24 -> !VAR_21.contains(VAR_24));\n                    VAR_12.add(VAR_14.format(\n                            \"inFolder in ('%s')\", VAR_13.join(VAR_23, \"','\")));\n                } else {\n                    VAR_12.add(\"(1=2)\");\n                }\n\n            } else {\n                if (VAR_21.isEmpty()) {\n                    VAR_12.add(\"inFolder is null\");\n                } else {\n                    VAR_12.add(VAR_14.format(\n                            \"(inFolder is null or inFolder in ('%s'))\", VAR_13.join(VAR_21, \"','\")));\n                }\n            }\n        }\n\n        if (VAR_6 != null) {\n            VAR_12.add(VAR_14.format(\"relatedRecord = '%s'\", VAR_6));\n        }\n\n        String VAR_25 = \"select attachmentId,filePath,fileType,fileSize,createdBy,modifiedOn,inFolder,relatedRecord from Attachment where (1=1) and (isDeleted = ?)\";\n        VAR_25 = VAR_25.replace(\"(1=1)\", VAR_13.join(VAR_12.iterator(), \" and \"));\n        if (\"older\".equals(VAR_4)) {\n            VAR_25 += \" order by createdOn asc\";\n        } else {\n            VAR_25 += \" order by modifiedOn desc\";\n        }\n\n        Object[][] VAR_26 = VAR_27.createQueryNoFilter(VAR_25)\n                .setParameter(1, false)\n                .setLimit(VAR_3, VAR_2 * VAR_3 - VAR_3)\n                .array();\n\n        JSONArray VAR_28 = new JSONArray();\n        for (Object[] VAR_29 : VAR_26) {\n            JSONObject VAR_30 = new JSONObject();\n            VAR_30.put(\"id\", VAR_29[0]);\n            VAR_30.put(\"filePath\", VAR_29[1]);\n            VAR_30.put(\"fileType\", VAR_29[2]);\n            VAR_30.put(\"fileSize\", VAR_31.byteCountToDisplaySize(VAR_32.toLong(VAR_29[3])));\n            VAR_30.put(\"uploadBy\", new Object[]{VAR_29[4], VAR_19.getName((ID) VAR_29[4])});\n            VAR_30.put(\"uploadOn\", VAR_33.formatDate((Date) VAR_29[5]));\n            VAR_30.put(\"inFolder\", VAR_29[6]);\n\n            ID VAR_34 = (ID) VAR_29[7];\n            if (VAR_34 != null && VAR_18.containsEntity(VAR_34.getEntityCode())) {\n                Entity VAR_35 = VAR_18.getEntity(VAR_34.getEntityCode());\n                VAR_30.put(\"relatedRecord\", new Object[]{VAR_34, VAR_36.getLabel(VAR_35)});\n            }\n\n            VAR_28.add(VAR_30);\n        }\n        return VAR_28;\n    }",
  "func_graph_path_before": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/FileListController.java/vul/before/0.json",
  "func": "@GetMapping(\"list-file\")\n    public JSON listFile(HttpServletRequest request) {\n        final ID user = getRequestUser(request);\n        int pageNo = getIntParameter(request, \"pageNo\", 1);\n        int pageSize = getIntParameter(request, \"pageSize\", 100);\n\n        String sort = getParameter(request, \"sort\");\n        String q = getParameter(request, \"q\");\n        // 从相关记录\n        ID related = getIdParameter(request, \"related\");\n\n        // Entity(code) or Folder(ID/ALL)\n        String entry = getParameter(request, \"entry\");\n\n        int useEntity = 0;\n        ID useFolder = null;\n\n        if (NumberUtils.isNumber(entry)) {\n            useEntity = NumberUtils.toInt(entry);\n        } else if (ID.isId(entry)) {\n            useFolder = ID.valueOf(entry);\n        }\n\n        // 支持查询 ID\n        if (related == null && ID.isId(q) && useEntity > 0) {\n            related = ID.valueOf(q);\n            q = null;\n        }\n\n        List<String> sqlWhere = new ArrayList<>();\n        if (StringUtils.isNotBlank(q)) {\n            sqlWhere.add(String.format(\"filePath like '%%%s%%'\", CommonsUtils.escapeSql(q)));\n        }\n\n        // 附件\n        if (useEntity > 0) {\n            if (useEntity == EntityHelper.Feeds) {\n                sqlWhere.add(String.format(\n                        \"(belongEntity = %d or belongEntity = %d)\", useEntity, EntityHelper.FeedsComment));\n            } else if (useEntity == EntityHelper.ProjectTask) {\n                sqlWhere.add(String.format(\n                        \"(belongEntity = %d or belongEntity = %d)\", useEntity, EntityHelper.ProjectTaskComment));\n            } else if (useEntity > 1) {\n                Entity entityMeta = MetadataHelper.getEntity(useEntity);\n                if (entityMeta.getDetailEntity() != null) {\n                    sqlWhere.add(String.format(\n                            \"(belongEntity = %d or belongEntity = %d)\", useEntity, entityMeta.getDetailEntity().getEntityCode()));\n                } else {\n                    sqlWhere.add(\"belongEntity = \" + useEntity);\n                }\n\n            } else {\n                // 查看全部实体\n                if (UserHelper.isAdmin(user)) {\n                    sqlWhere.add(\"belongEntity > 0\");\n                } else {\n                    String entityWhere = \"( belongEntity = \" +\n                            StringUtils.join(getAllowEntities(user, true), \" or belongEntity = \") + \" )\";\n                    sqlWhere.add(entityWhere);\n                }\n            }\n        }\n        // 文件\n        else {\n            sqlWhere.add(\"belongEntity = 0\");\n\n            // 可访问目录\n            Set<ID> accessable = FilesHelper.getAccessableFolders(user);\n\n            if (useFolder != null) {\n                if (accessable.contains(useFolder)) {\n                    Set<ID> fs = new HashSet<>();\n                    fs.add(useFolder);\n                    fs.addAll(FilesHelper.getChildFolders(useFolder));\n                    // 移除不可访问的\n                    fs.removeIf(id -> !accessable.contains(id));\n                    sqlWhere.add(String.format(\n                            \"inFolder in ('%s')\", StringUtils.join(fs, \"','\")));\n                } else {\n                    sqlWhere.add(\"(1=2)\");\n                }\n\n            } else {\n                if (accessable.isEmpty()) {\n                    sqlWhere.add(\"inFolder is null\");\n                } else {\n                    sqlWhere.add(String.format(\n                            \"(inFolder is null or inFolder in ('%s'))\", StringUtils.join(accessable, \"','\")));\n                }\n            }\n        }\n\n        if (related != null) {\n            sqlWhere.add(String.format(\"relatedRecord = '%s'\", related));\n        }\n\n        String sql = \"select attachmentId,filePath,fileType,fileSize,createdBy,modifiedOn,inFolder,relatedRecord from Attachment where (1=1) and (isDeleted = ?)\";\n        sql = sql.replace(\"(1=1)\", StringUtils.join(sqlWhere.iterator(), \" and \"));\n        if (\"older\".equals(sort)) {\n            sql += \" order by createdOn asc\";\n        } else {\n            sql += \" order by modifiedOn desc\";\n        }\n\n        Object[][] array = Application.createQueryNoFilter(sql)\n                .setParameter(1, false)\n                .setLimit(pageSize, pageNo * pageSize - pageSize)\n                .array();\n\n        JSONArray files = new JSONArray();\n        for (Object[] o : array) {\n            JSONObject item = new JSONObject();\n            item.put(\"id\", o[0]);\n            item.put(\"filePath\", o[1]);\n            item.put(\"fileType\", o[2]);\n            item.put(\"fileSize\", FileUtils.byteCountToDisplaySize(ObjectUtils.toLong(o[3])));\n            item.put(\"uploadBy\", new Object[]{o[4], UserHelper.getName((ID) o[4])});\n            item.put(\"uploadOn\", I18nUtils.formatDate((Date) o[5]));\n            item.put(\"inFolder\", o[6]);\n\n            ID relatedRecord = (ID) o[7];\n            if (relatedRecord != null && MetadataHelper.containsEntity(relatedRecord.getEntityCode())) {\n                Entity belongEntity = MetadataHelper.getEntity(relatedRecord.getEntityCode());\n                item.put(\"relatedRecord\", new Object[]{relatedRecord, EasyMetaFactory.getLabel(belongEntity)});\n            }\n\n            files.add(item);\n        }\n        return files;\n    }",
  "abstract_func": "@GetMapping(\"list-file\")\n    public JSON listFile(HttpServletRequest VAR_0) {\n        final ID VAR_1 = getRequestUser(VAR_0);\n        int VAR_2 = getIntParameter(VAR_0, \"pageNo\", 1);\n        int VAR_3 = getIntParameter(VAR_0, \"pageSize\", 100);\n\n        String VAR_4 = getParameter(VAR_0, \"sort\");\n        String VAR_5 = getParameter(VAR_0, \"q\");\n        /* COMMENT_0 */\n        ID VAR_6 = getIdParameter(VAR_0, \"related\");\n\n        /* COMMENT_1 */\n        String VAR_7 = getParameter(VAR_0, \"entry\");\n\n        int VAR_8 = 0;\n        ID VAR_9 = null;\n\n        if (VAR_10.isNumber(VAR_7)) {\n            VAR_8 = VAR_10.toInt(VAR_7);\n        } else if (VAR_11.isId(VAR_7)) {\n            VAR_9 = VAR_11.valueOf(VAR_7);\n        }\n\n        /* COMMENT_2 */\n        if (VAR_6 == null && VAR_11.isId(VAR_5) && VAR_8 > 0) {\n            VAR_6 = VAR_11.valueOf(VAR_5);\n            VAR_5 = null;\n        }\n\n        List<String> VAR_12 = new ArrayList<>();\n        if (VAR_13.isNotBlank(VAR_5)) {\n            VAR_12.add(VAR_14.format(\"filePath like '%%%s%%'\", VAR_15.escapeSql(VAR_5)));\n        }\n\n        /* COMMENT_3 */\n        if (VAR_8 > 0) {\n            if (VAR_8 == VAR_16.Feeds) {\n                VAR_12.add(VAR_14.format(\n                        \"(belongEntity = %d or belongEntity = %d)\", VAR_8, VAR_16.FeedsComment));\n            } else if (VAR_8 == VAR_16.ProjectTask) {\n                VAR_12.add(VAR_14.format(\n                        \"(belongEntity = %d or belongEntity = %d)\", VAR_8, VAR_16.ProjectTaskComment));\n            } else if (VAR_8 > 1) {\n                Entity VAR_17 = VAR_18.getEntity(VAR_8);\n                if (VAR_17.getDetailEntity() != null) {\n                    VAR_12.add(VAR_14.format(\n                            \"(belongEntity = %d or belongEntity = %d)\", VAR_8, VAR_17.getDetailEntity().getEntityCode()));\n                } else {\n                    VAR_12.add(\"belongEntity = \" + VAR_8);\n                }\n\n            } else {\n                /* COMMENT_4 */\n                if (VAR_19.isAdmin(VAR_1)) {\n                    VAR_12.add(\"belongEntity > 0\");\n                } else {\n                    String VAR_20 = \"( belongEntity = \" +\n                            VAR_13.join(getAllowEntities(VAR_1, true), \" or belongEntity = \") + \" )\";\n                    VAR_12.add(VAR_20);\n                }\n            }\n        }\n        /* COMMENT_5 */\n        else {\n            VAR_12.add(\"belongEntity = 0\");\n\n            /* COMMENT_6 */\n            Set<ID> VAR_21 = VAR_22.getAccessableFolders(VAR_1);\n\n            if (VAR_9 != null) {\n                if (VAR_21.contains(VAR_9)) {\n                    Set<ID> VAR_23 = new HashSet<>();\n                    VAR_23.add(VAR_9);\n                    VAR_23.addAll(VAR_22.getChildFolders(VAR_9));\n                    /* COMMENT_7 */\n                    VAR_23.removeIf(VAR_24 -> !VAR_21.contains(VAR_24));\n                    VAR_12.add(VAR_14.format(\n                            \"inFolder in ('%s')\", VAR_13.join(VAR_23, \"','\")));\n                } else {\n                    VAR_12.add(\"(1=2)\");\n                }\n\n            } else {\n                if (VAR_21.isEmpty()) {\n                    VAR_12.add(\"inFolder is null\");\n                } else {\n                    VAR_12.add(VAR_14.format(\n                            \"(inFolder is null or inFolder in ('%s'))\", VAR_13.join(VAR_21, \"','\")));\n                }\n            }\n        }\n\n        if (VAR_6 != null) {\n            VAR_12.add(VAR_14.format(\"relatedRecord = '%s'\", VAR_6));\n        }\n\n        String VAR_25 = \"select attachmentId,filePath,fileType,fileSize,createdBy,modifiedOn,inFolder,relatedRecord from Attachment where (1=1) and (isDeleted = ?)\";\n        VAR_25 = VAR_25.replace(\"(1=1)\", VAR_13.join(VAR_12.iterator(), \" and \"));\n        if (\"older\".equals(VAR_4)) {\n            VAR_25 += \" order by createdOn asc\";\n        } else {\n            VAR_25 += \" order by modifiedOn desc\";\n        }\n\n        Object[][] VAR_26 = VAR_27.createQueryNoFilter(VAR_25)\n                .setParameter(1, false)\n                .setLimit(VAR_3, VAR_2 * VAR_3 - VAR_3)\n                .array();\n\n        JSONArray VAR_28 = new JSONArray();\n        for (Object[] VAR_29 : VAR_26) {\n            JSONObject VAR_30 = new JSONObject();\n            VAR_30.put(\"id\", VAR_29[0]);\n            VAR_30.put(\"filePath\", VAR_29[1]);\n            VAR_30.put(\"fileType\", VAR_29[2]);\n            VAR_30.put(\"fileSize\", VAR_31.byteCountToDisplaySize(VAR_32.toLong(VAR_29[3])));\n            VAR_30.put(\"uploadBy\", new Object[]{VAR_29[4], VAR_19.getName((ID) VAR_29[4])});\n            VAR_30.put(\"uploadOn\", VAR_33.formatDate((Date) VAR_29[5]));\n            VAR_30.put(\"inFolder\", VAR_29[6]);\n\n            ID VAR_34 = (ID) VAR_29[7];\n            if (VAR_34 != null && VAR_18.containsEntity(VAR_34.getEntityCode())) {\n                Entity VAR_35 = VAR_18.getEntity(VAR_34.getEntityCode());\n                VAR_30.put(\"relatedRecord\", new Object[]{VAR_34, VAR_36.getLabel(VAR_35)});\n            }\n\n            VAR_28.add(VAR_30);\n        }\n        return VAR_28;\n    }",
  "func_graph_path": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/FileListController.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -29,7 +29,7 @@\n \n         List<String> sqlWhere = new ArrayList<>();\n         if (StringUtils.isNotBlank(q)) {\n-            sqlWhere.add(String.format(\"filePath like '%%%s%%'\", StringEscapeUtils.escapeSql(q)));\n+            sqlWhere.add(String.format(\"filePath like '%%%s%%'\", CommonsUtils.escapeSql(q)));\n         }\n \n         // 附件",
  "diff_line_info": {
    "deleted_lines": [
      "            sqlWhere.add(String.format(\"filePath like '%%%s%%'\", StringEscapeUtils.escapeSql(q)));"
    ],
    "added_lines": [
      "            sqlWhere.add(String.format(\"filePath like '%%%s%%'\", CommonsUtils.escapeSql(q)));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/getrebuild/rebuild/pull/595",
  "description": {
    "pr_info": {
      "title": "H5 sync2",
      "number": 595
    },
    "comment": [
      "Most styles:\r\n1. Nav copy\r\n2. Arrow for form line \r\n3. Quick-code full-pinyin\r\n4. Open Tag of field\r\n5. feat: `advListFilterTabs` (boss-key)\r\n6. Map search\r\n7. feat: Can input page-no on list\r\n8. CVE fix"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}