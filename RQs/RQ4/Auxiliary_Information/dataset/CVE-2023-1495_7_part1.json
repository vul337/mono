{
  "cve_id": "CVE-2023-1495",
  "cwe_ids": [
    "CWE-89"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "getrebuild/rebuild",
  "commit_msg": "H5 sync2 (#595)\n\n* style: 目录样式gh\r\n\r\n* style: J_new\r\n\r\n* feat: advListFilterTabs\r\n\r\n* feat: nav-copyto\r\n\r\n* enh: 助记码全拼\r\n\r\n* enh: 地图搜索选点\r\n\r\n* enh: topnav\r\n\r\n* list pn\r\n\r\n* .form-line.v33\r\n\r\n* open TAG\r\n\r\n* KVS addShutdownHook\r\n\r\n* fix: #594\r\n\r\n---------\r\n\r\nCo-authored-by: devezhao <zhaofang123@gmail.com>",
  "commit_hash": "c9474f84e5f376dd2ade2078e3039961a9425da7",
  "git_url": "https://github.com/getrebuild/rebuild/commit/c9474f84e5f376dd2ade2078e3039961a9425da7",
  "file_path": "src/main/java/com/rebuild/web/general/GeneralListController.java",
  "func_name": "pageList",
  "func_before": "@GetMapping(\"list\")\n    public ModelAndView pageList(@PathVariable String entity,\n                                 HttpServletRequest request, HttpServletResponse response)\n            throws IOException {\n        final ID user = getRequestUser(request);\n        final Entity listEntity = checkPageOfEntity(user, entity, response);\n        if (listEntity == null) return null;\n\n        final EasyEntity easyEntity = EasyMetaFactory.valueOf(listEntity);\n\n        String listPage = listEntity.getMainEntity() != null ? \"/general/detail-list\" : \"/general/record-list\";\n        int listMode = ObjectUtils.toInt(easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_MODE), 1);\n        if (listMode == 2) {\n            listPage = \"/general/record-list2\";  // Mode2\n        }\n\n        ModelAndView mv = createModelAndView(listPage, entity, user);\n\n        // 列表相关权限\n        mv.getModel().put(ZeroEntry.AllowCustomDataList.name(),\n                Application.getPrivilegesManager().allow(user, ZeroEntry.AllowCustomDataList));\n        mv.getModel().put(ZeroEntry.AllowDataExport.name(),\n                Application.getPrivilegesManager().allow(user, ZeroEntry.AllowDataExport));\n        mv.getModel().put(ZeroEntry.AllowBatchUpdate.name(),\n                Application.getPrivilegesManager().allow(user, ZeroEntry.AllowBatchUpdate));\n\n        JSON listConfig = null;\n\n        if (listMode == 1) {\n            listConfig = DataListManager.instance.getListFields(entity, user);\n\n            // 扩展配置\n            String advListHideFilters = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_HIDE_FILTERS);\n            String advListHideCharts = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_HIDE_CHARTS);\n            String advListShowCategory = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_SHOWCATEGORY);\n            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_HIDE_FILTERS, advListHideFilters);\n            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_HIDE_CHARTS, advListHideCharts);\n            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_SHOWCATEGORY, StringUtils.isNotBlank(advListShowCategory));\n\n            mv.getModel().put(\"hideAside\",\n                    BooleanUtils.toBoolean(advListHideFilters) && BooleanUtils.toBoolean(advListHideCharts) && StringUtils.isBlank(advListShowCategory));\n\n            // 查询面板\n\n            String advListFilterpane = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_FILTERPANE);\n            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_FILTERPANE, advListFilterpane);\n\n            if (BooleanUtils.toBoolean(advListFilterpane)) {\n                JSONArray paneFields = new JSONArray();\n                for (String field : DataListManager.instance.getListFilterPaneFields(user, entity)) {\n                    if (AdvFilterParser.VF_ACU.equals(field)) {\n                        JSONObject vf = (JSONObject) EasyMetaFactory.valueOf(listEntity.getField(EntityHelper.ApprovalLastUser)).toJSON();\n                        vf.put(\"name\", AdvFilterParser.VF_ACU);\n                        vf.put(\"label\", Language.L(\"当前审批人\"));\n                        paneFields.add(vf);\n                    } else {\n                        paneFields.add(EasyMetaFactory.valueOf(listEntity.getField(field)).toJSON());\n                    }\n                }\n                mv.getModel().put(\"paneFields\", paneFields);\n            }\n\n        } else if (listMode == 2) {\n            listConfig = DataListManager.instance.getFieldsLayoutMode2(listEntity);\n\n            // 明细列表\n            if (listEntity.getMainEntity() != null) mv.getModel().put(\"DataListType\", \"DetailList\");\n        }\n\n        mv.getModel().put(\"DataListConfig\", JSON.toJSONString(listConfig));\n\n        // 快速查询\n        mv.getModel().put(\"quickFieldsLabel\", getQuickFieldsLabel(listEntity));\n\n        return mv;\n    }",
  "abstract_func_before": "@GetMapping(\"list\")\n    public ModelAndView pageList(@PathVariable String VAR_0,\n                                 HttpServletRequest VAR_1, HttpServletResponse VAR_2)\n            throws IOException {\n        final ID VAR_3 = getRequestUser(VAR_1);\n        final Entity VAR_4 = checkPageOfEntity(VAR_3, VAR_0, VAR_2);\n        if (VAR_4 == null) return null;\n\n        final EasyEntity VAR_5 = VAR_6.valueOf(VAR_4);\n\n        String VAR_7 = VAR_4.getMainEntity() != null ? \"/general/detail-list\" : \"/general/record-list\";\n        int VAR_8 = VAR_9.toInt(VAR_5.getExtraAttr(VAR_10.ADV_LIST_MODE), 1);\n        if (VAR_8 == 2) {\n            VAR_7 = \"/general/record-list2\";  /* COMMENT_0 */\n        }\n\n        ModelAndView VAR_11 = createModelAndView(VAR_7, VAR_0, VAR_3);\n\n        /* COMMENT_1 */\n        VAR_11.getModel().put(VAR_12.AllowCustomDataList.name(),\n                VAR_13.getPrivilegesManager().allow(VAR_3, VAR_12.AllowCustomDataList));\n        VAR_11.getModel().put(VAR_12.AllowDataExport.name(),\n                VAR_13.getPrivilegesManager().allow(VAR_3, VAR_12.AllowDataExport));\n        VAR_11.getModel().put(VAR_12.AllowBatchUpdate.name(),\n                VAR_13.getPrivilegesManager().allow(VAR_3, VAR_12.AllowBatchUpdate));\n\n        JSON VAR_14 = null;\n\n        if (VAR_8 == 1) {\n            VAR_14 = VAR_15.instance.getListFields(VAR_0, VAR_3);\n\n            /* COMMENT_2 */\n            String VAR_16 = VAR_5.getExtraAttr(VAR_10.ADV_LIST_HIDE_FILTERS);\n            String VAR_17 = VAR_5.getExtraAttr(VAR_10.ADV_LIST_HIDE_CHARTS);\n            String VAR_18 = VAR_5.getExtraAttr(VAR_10.ADV_LIST_SHOWCATEGORY);\n            VAR_11.getModel().put(VAR_10.ADV_LIST_HIDE_FILTERS, VAR_16);\n            VAR_11.getModel().put(VAR_10.ADV_LIST_HIDE_CHARTS, VAR_17);\n            VAR_11.getModel().put(VAR_10.ADV_LIST_SHOWCATEGORY, VAR_19.isNotBlank(VAR_18));\n\n            VAR_11.getModel().put(\"hideAside\",\n                    VAR_20.toBoolean(VAR_16) && VAR_20.toBoolean(VAR_17) && VAR_19.isBlank(VAR_18));\n\n            /* COMMENT_3 */\n\n            String VAR_21 = VAR_5.getExtraAttr(VAR_10.ADV_LIST_FILTERPANE);\n            VAR_11.getModel().put(VAR_10.ADV_LIST_FILTERPANE, VAR_21);\n\n            if (VAR_20.toBoolean(VAR_21)) {\n                JSONArray VAR_22 = new JSONArray();\n                for (String VAR_23 : VAR_15.instance.getListFilterPaneFields(VAR_3, VAR_0)) {\n                    if (VAR_24.VF_ACU.equals(VAR_23)) {\n                        JSONObject VAR_25 = (JSONObject) VAR_6.valueOf(VAR_4.getField(VAR_26.ApprovalLastUser)).toJSON();\n                        VAR_25.put(\"name\", VAR_24.VF_ACU);\n                        VAR_25.put(\"label\", VAR_27.L(\"当前审批人\"));\n                        VAR_22.add(VAR_25);\n                    } else {\n                        VAR_22.add(VAR_6.valueOf(VAR_4.getField(VAR_23)).toJSON());\n                    }\n                }\n                VAR_11.getModel().put(\"paneFields\", VAR_22);\n            }\n\n        } else if (VAR_8 == 2) {\n            VAR_14 = VAR_15.instance.getFieldsLayoutMode2(VAR_4);\n\n            /* COMMENT_4 */\n            if (VAR_4.getMainEntity() != null) VAR_11.getModel().put(\"DataListType\", \"DetailList\");\n        }\n\n        VAR_11.getModel().put(\"DataListConfig\", VAR_28.toJSONString(VAR_14));\n\n        /* COMMENT_5 */\n        VAR_11.getModel().put(\"quickFieldsLabel\", getQuickFieldsLabel(VAR_4));\n\n        return VAR_11;\n    }",
  "func_graph_path_before": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/GeneralListController.java/vul/before/0.json",
  "func": "@GetMapping(\"list\")\n    public ModelAndView pageList(@PathVariable String entity,\n                                 HttpServletRequest request, HttpServletResponse response)\n            throws IOException {\n        final ID user = getRequestUser(request);\n        final Entity listEntity = checkPageOfEntity(user, entity, response);\n        if (listEntity == null) return null;\n\n        final EasyEntity easyEntity = EasyMetaFactory.valueOf(listEntity);\n\n        String listPage = listEntity.getMainEntity() != null ? \"/general/detail-list\" : \"/general/record-list\";\n        int listMode = ObjectUtils.toInt(easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_MODE), 1);\n        if (listMode == 2) {\n            listPage = \"/general/record-list2\";  // Mode2\n        }\n\n        ModelAndView mv = createModelAndView(listPage, entity, user);\n\n        // 列表相关权限\n        mv.getModel().put(ZeroEntry.AllowCustomDataList.name(),\n                Application.getPrivilegesManager().allow(user, ZeroEntry.AllowCustomDataList));\n        mv.getModel().put(ZeroEntry.AllowDataExport.name(),\n                Application.getPrivilegesManager().allow(user, ZeroEntry.AllowDataExport));\n        mv.getModel().put(ZeroEntry.AllowBatchUpdate.name(),\n                Application.getPrivilegesManager().allow(user, ZeroEntry.AllowBatchUpdate));\n\n        JSON listConfig = null;\n\n        if (listMode == 1) {\n            listConfig = DataListManager.instance.getListFields(entity, user);\n\n            // 侧栏\n\n            String advListHideFilters = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_HIDE_FILTERS);\n            String advListHideCharts = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_HIDE_CHARTS);\n            String advListShowCategory = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_SHOWCATEGORY);\n            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_HIDE_FILTERS, advListHideFilters);\n            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_HIDE_CHARTS, advListHideCharts);\n            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_SHOWCATEGORY, StringUtils.isNotBlank(advListShowCategory));\n\n            mv.getModel().put(\"hideAside\",\n                    BooleanUtils.toBoolean(advListHideFilters) && BooleanUtils.toBoolean(advListHideCharts) && StringUtils.isBlank(advListShowCategory));\n\n            // 查询面板\n\n            String advListFilterPane = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_FILTERPANE);\n            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_FILTERPANE, advListFilterPane);\n\n            if (BooleanUtils.toBoolean(advListFilterPane)) {\n                JSONArray paneFields = new JSONArray();\n                for (String field : DataListManager.instance.getListFilterPaneFields(user, entity)) {\n                    if (AdvFilterParser.VF_ACU.equals(field)) {\n                        JSONObject vf = (JSONObject) EasyMetaFactory.valueOf(listEntity.getField(EntityHelper.ApprovalLastUser)).toJSON();\n                        vf.put(\"name\", AdvFilterParser.VF_ACU);\n                        vf.put(\"label\", Language.L(\"当前审批人\"));\n                        paneFields.add(vf);\n                    } else {\n                        paneFields.add(EasyMetaFactory.valueOf(listEntity.getField(field)).toJSON());\n                    }\n                }\n                mv.getModel().put(\"paneFields\", paneFields);\n            }\n\n            // 查询页签 v3.3\n\n            String advListFilterTabs = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_FILTERTABS);\n            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_FILTERTABS, advListFilterTabs);\n\n        } else if (listMode == 2) {\n            listConfig = DataListManager.instance.getFieldsLayoutMode2(listEntity);\n\n            // 明细列表\n            if (listEntity.getMainEntity() != null) mv.getModel().put(\"DataListType\", \"DetailList\");\n        }\n\n        mv.getModel().put(\"DataListConfig\", JSON.toJSONString(listConfig));\n\n        // 快速查询\n        mv.getModel().put(\"quickFieldsLabel\", getQuickFieldsLabel(listEntity));\n\n        return mv;\n    }",
  "abstract_func": "@GetMapping(\"list\")\n    public ModelAndView pageList(@PathVariable String VAR_0,\n                                 HttpServletRequest VAR_1, HttpServletResponse VAR_2)\n            throws IOException {\n        final ID VAR_3 = getRequestUser(VAR_1);\n        final Entity VAR_4 = checkPageOfEntity(VAR_3, VAR_0, VAR_2);\n        if (VAR_4 == null) return null;\n\n        final EasyEntity VAR_5 = VAR_6.valueOf(VAR_4);\n\n        String VAR_7 = VAR_4.getMainEntity() != null ? \"/general/detail-list\" : \"/general/record-list\";\n        int VAR_8 = VAR_9.toInt(VAR_5.getExtraAttr(VAR_10.ADV_LIST_MODE), 1);\n        if (VAR_8 == 2) {\n            VAR_7 = \"/general/record-list2\";  /* COMMENT_0 */\n        }\n\n        ModelAndView VAR_11 = createModelAndView(VAR_7, VAR_0, VAR_3);\n\n        /* COMMENT_1 */\n        VAR_11.getModel().put(VAR_12.AllowCustomDataList.name(),\n                VAR_13.getPrivilegesManager().allow(VAR_3, VAR_12.AllowCustomDataList));\n        VAR_11.getModel().put(VAR_12.AllowDataExport.name(),\n                VAR_13.getPrivilegesManager().allow(VAR_3, VAR_12.AllowDataExport));\n        VAR_11.getModel().put(VAR_12.AllowBatchUpdate.name(),\n                VAR_13.getPrivilegesManager().allow(VAR_3, VAR_12.AllowBatchUpdate));\n\n        JSON VAR_14 = null;\n\n        if (VAR_8 == 1) {\n            VAR_14 = VAR_15.instance.getListFields(VAR_0, VAR_3);\n\n            /* COMMENT_2 */\n\n            String VAR_16 = VAR_5.getExtraAttr(VAR_10.ADV_LIST_HIDE_FILTERS);\n            String VAR_17 = VAR_5.getExtraAttr(VAR_10.ADV_LIST_HIDE_CHARTS);\n            String VAR_18 = VAR_5.getExtraAttr(VAR_10.ADV_LIST_SHOWCATEGORY);\n            VAR_11.getModel().put(VAR_10.ADV_LIST_HIDE_FILTERS, VAR_16);\n            VAR_11.getModel().put(VAR_10.ADV_LIST_HIDE_CHARTS, VAR_17);\n            VAR_11.getModel().put(VAR_10.ADV_LIST_SHOWCATEGORY, VAR_19.isNotBlank(VAR_18));\n\n            VAR_11.getModel().put(\"hideAside\",\n                    VAR_20.toBoolean(VAR_16) && VAR_20.toBoolean(VAR_17) && VAR_19.isBlank(VAR_18));\n\n            /* COMMENT_3 */\n\n            String VAR_21 = VAR_5.getExtraAttr(VAR_10.ADV_LIST_FILTERPANE);\n            VAR_11.getModel().put(VAR_10.ADV_LIST_FILTERPANE, VAR_21);\n\n            if (VAR_20.toBoolean(VAR_21)) {\n                JSONArray VAR_22 = new JSONArray();\n                for (String VAR_23 : VAR_15.instance.getListFilterPaneFields(VAR_3, VAR_0)) {\n                    if (VAR_24.VF_ACU.equals(VAR_23)) {\n                        JSONObject VAR_25 = (JSONObject) VAR_6.valueOf(VAR_4.getField(VAR_26.ApprovalLastUser)).toJSON();\n                        VAR_25.put(\"name\", VAR_24.VF_ACU);\n                        VAR_25.put(\"label\", VAR_27.L(\"当前审批人\"));\n                        VAR_22.add(VAR_25);\n                    } else {\n                        VAR_22.add(VAR_6.valueOf(VAR_4.getField(VAR_23)).toJSON());\n                    }\n                }\n                VAR_11.getModel().put(\"paneFields\", VAR_22);\n            }\n\n            /* COMMENT_4 */\n\n            String VAR_28 = VAR_5.getExtraAttr(VAR_10.ADV_LIST_FILTERTABS);\n            VAR_11.getModel().put(VAR_10.ADV_LIST_FILTERTABS, VAR_28);\n\n        } else if (VAR_8 == 2) {\n            VAR_14 = VAR_15.instance.getFieldsLayoutMode2(VAR_4);\n\n            /* COMMENT_5 */\n            if (VAR_4.getMainEntity() != null) VAR_11.getModel().put(\"DataListType\", \"DetailList\");\n        }\n\n        VAR_11.getModel().put(\"DataListConfig\", VAR_29.toJSONString(VAR_14));\n\n        /* COMMENT_6 */\n        VAR_11.getModel().put(\"quickFieldsLabel\", getQuickFieldsLabel(VAR_4));\n\n        return VAR_11;\n    }",
  "func_graph_path": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/GeneralListController.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -29,7 +29,8 @@\n         if (listMode == 1) {\n             listConfig = DataListManager.instance.getListFields(entity, user);\n \n-            // 扩展配置\n+            // 侧栏\n+\n             String advListHideFilters = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_HIDE_FILTERS);\n             String advListHideCharts = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_HIDE_CHARTS);\n             String advListShowCategory = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_SHOWCATEGORY);\n@@ -42,10 +43,10 @@\n \n             // 查询面板\n \n-            String advListFilterpane = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_FILTERPANE);\n-            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_FILTERPANE, advListFilterpane);\n+            String advListFilterPane = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_FILTERPANE);\n+            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_FILTERPANE, advListFilterPane);\n \n-            if (BooleanUtils.toBoolean(advListFilterpane)) {\n+            if (BooleanUtils.toBoolean(advListFilterPane)) {\n                 JSONArray paneFields = new JSONArray();\n                 for (String field : DataListManager.instance.getListFilterPaneFields(user, entity)) {\n                     if (AdvFilterParser.VF_ACU.equals(field)) {\n@@ -59,6 +60,11 @@\n                 }\n                 mv.getModel().put(\"paneFields\", paneFields);\n             }\n+\n+            // 查询页签 v3.3\n+\n+            String advListFilterTabs = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_FILTERTABS);\n+            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_FILTERTABS, advListFilterTabs);\n \n         } else if (listMode == 2) {\n             listConfig = DataListManager.instance.getFieldsLayoutMode2(listEntity);",
  "diff_line_info": {
    "deleted_lines": [
      "            // 扩展配置",
      "            String advListFilterpane = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_FILTERPANE);",
      "            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_FILTERPANE, advListFilterpane);",
      "            if (BooleanUtils.toBoolean(advListFilterpane)) {"
    ],
    "added_lines": [
      "            // 侧栏",
      "",
      "            String advListFilterPane = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_FILTERPANE);",
      "            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_FILTERPANE, advListFilterPane);",
      "            if (BooleanUtils.toBoolean(advListFilterPane)) {",
      "",
      "            // 查询页签 v3.3",
      "",
      "            String advListFilterTabs = easyEntity.getExtraAttr(EasyEntityConfigProps.ADV_LIST_FILTERTABS);",
      "            mv.getModel().put(EasyEntityConfigProps.ADV_LIST_FILTERTABS, advListFilterTabs);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/getrebuild/rebuild/pull/595",
  "description": {
    "pr_info": {
      "title": "H5 sync2",
      "number": 595
    },
    "comment": [
      "Most styles:\r\n1. Nav copy\r\n2. Arrow for form line \r\n3. Quick-code full-pinyin\r\n4. Open Tag of field\r\n5. feat: `advListFilterTabs` (boss-key)\r\n6. Map search\r\n7. feat: Can input page-no on list\r\n8. CVE fix"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades;  \n**Confidence:** 0.8"
}