{
  "cve_id": "CVE-2016-10750",
  "cwe_ids": [
    "CWE-502"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "hazelcast",
  "commit_msg": "Add basic protection against untrusted deserialization.",
  "commit_hash": "c1c31359a1df953e79a9ca9b6c54b3cdbfef11e9",
  "git_url": "https://github.com/hazelcast/hazelcast/commit/c1c31359a1df953e79a9ca9b6c54b3cdbfef11e9",
  "file_path": "hazelcast/src/main/java/com/hazelcast/nio/IOUtil.java",
  "func_name": "resolveClass",
  "func_before": "@Override\n        protected Class<?> resolveClass(ObjectStreamClass desc) throws ClassNotFoundException {\n            return ClassLoaderUtil.loadClass(classLoader, desc.getName());\n        }",
  "abstract_func_before": "@Override\n        protected Class<?> resolveClass(ObjectStreamClass VAR_0) throws ClassNotFoundException {\n            return VAR_1.loadClass(VAR_2, VAR_0.getName());\n        }",
  "func_graph_path_before": "hazelcast/c1c31359a1df953e79a9ca9b6c54b3cdbfef11e9/IOUtil.java/vul/before/0.json",
  "func": "@Override\n        protected Class<?> resolveClass(ObjectStreamClass desc) throws ClassNotFoundException {\n            String name = desc.getName();\n            if (classFilter != null) {\n                classFilter.filter(name);\n            }\n            return ClassLoaderUtil.loadClass(classLoader, name);\n        }",
  "abstract_func": "@Override\n        protected Class<?> resolveClass(ObjectStreamClass VAR_0) throws ClassNotFoundException {\n            String VAR_1 = VAR_0.getName();\n            if (VAR_2 != null) {\n                VAR_2.filter(VAR_1);\n            }\n            return VAR_3.loadClass(VAR_4, VAR_1);\n        }",
  "func_graph_path": "hazelcast/c1c31359a1df953e79a9ca9b6c54b3cdbfef11e9/IOUtil.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,8 @@\n @Override\n         protected Class<?> resolveClass(ObjectStreamClass desc) throws ClassNotFoundException {\n-            return ClassLoaderUtil.loadClass(classLoader, desc.getName());\n+            String name = desc.getName();\n+            if (classFilter != null) {\n+                classFilter.filter(name);\n+            }\n+            return ClassLoaderUtil.loadClass(classLoader, name);\n         }",
  "diff_line_info": {
    "deleted_lines": [
      "            return ClassLoaderUtil.loadClass(classLoader, desc.getName());"
    ],
    "added_lines": [
      "            String name = desc.getName();",
      "            if (classFilter != null) {",
      "                classFilter.filter(name);",
      "            }",
      "            return ClassLoaderUtil.loadClass(classLoader, name);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/hazelcast/hazelcast/pull/12230",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/hazelcast/hazelcast/pull/12230: 403 Client Error: Forbidden for url: https://api.github.com/repos/hazelcast/hazelcast/pulls/12230",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}