{
  "cve_id": "CVE-2021-32700",
  "cwe_ids": [
    "CWE-306"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "ballerina-platform/ballerina-lang",
  "commit_msg": "Fix central connection",
  "commit_hash": "4609ffee1744ecd16aac09303b1783bf0a525816",
  "git_url": "https://github.com/ballerina-platform/ballerina-lang/commit/4609ffee1744ecd16aac09303b1783bf0a525816",
  "file_path": "cli/ballerina-cli-module/src/main/java/org/ballerinalang/cli/module/Pull.java",
  "func_name": "execute",
  "func_before": "public static void execute(String url, String modulePathInBaloCache, String moduleNameWithOrg, String proxyHost,\n            int proxyPort, String proxyUsername, String proxyPassword, String supportedVersionRange, boolean isBuild,\n            boolean isNightlyBuild, String langSpecVersion, String platform) {\n        if (isBuild) {\n            logFormatter = new BuildLogFormatter();\n        }\n\n        HttpURLConnection conn = null;\n        try {\n            initializeSsl();\n            conn = createHttpUrlConnection(convertToUrl(url + supportedVersionRange), proxyHost, proxyPort,\n                    proxyUsername, proxyPassword);\n\n            conn.setInstanceFollowRedirects(false);\n            setRequestMethod(conn, Utils.RequestMethod.GET);\n\n            // Set headers\n            conn.setRequestProperty(BALLERINA_PLATFORM, platform);\n            conn.setRequestProperty(BAL_LANG_SPEC_VERSION, langSpecVersion);\n            conn.setRequestProperty(HttpHeaders.ACCEPT_ENCODING, IDENTITY);\n\n            boolean redirect = false;\n            // 302 - Module is found\n            // Other - Error occurred, json returned with the error message\n            if (getStatusCode(conn) == HttpURLConnection.HTTP_MOVED_TEMP) {\n                redirect = true;\n            } else {\n                handleErrorResponse(conn, url, moduleNameWithOrg);\n            }\n\n            if (redirect) {\n                // get redirect url from \"location\" header field\n                String newUrl = conn.getHeaderField(HttpHeaders.LOCATION);\n                String contentDisposition = conn.getHeaderField(HttpHeaders.CONTENT_DISPOSITION);\n\n                conn = createHttpUrlConnection(convertToUrl(newUrl), proxyHost, proxyPort, proxyUsername,\n                        proxyPassword);\n                conn.setRequestProperty(HttpHeaders.CONTENT_DISPOSITION, contentDisposition);\n\n                createBaloInHomeRepo(conn, modulePathInBaloCache, moduleNameWithOrg, isNightlyBuild, newUrl,\n                        contentDisposition);\n            }\n        } catch (Exception e) {\n            throw ErrorUtil.createCommandException(e.getMessage());\n        } finally {\n            if (conn != null) {\n                conn.disconnect();\n            }\n            Authenticator.setDefault(null);\n        }\n    }",
  "abstract_func_before": "public static void execute(String VAR_0, String VAR_1, String VAR_2, String VAR_3,\n            int VAR_4, String VAR_5, String VAR_6, String VAR_7, boolean VAR_8,\n            boolean VAR_9, String VAR_10, String VAR_11) {\n        if (VAR_8) {\n            VAR_12 = new BuildLogFormatter();\n        }\n\n        HttpURLConnection VAR_13 = null;\n        try {\n            initializeSsl();\n            VAR_13 = createHttpUrlConnection(convertToUrl(VAR_0 + VAR_7), VAR_3, VAR_4,\n                    VAR_5, VAR_6);\n\n            VAR_13.setInstanceFollowRedirects(false);\n            setRequestMethod(VAR_13, VAR_14.RequestMethod.GET);\n\n            /* COMMENT_0 */\n            VAR_13.setRequestProperty(VAR_15, VAR_11);\n            VAR_13.setRequestProperty(VAR_16, VAR_10);\n            VAR_13.setRequestProperty(VAR_17.ACCEPT_ENCODING, VAR_18);\n\n            boolean VAR_19 = false;\n            /* COMMENT_1 */\n            /* COMMENT_2 */\n            if (getStatusCode(VAR_13) == VAR_20.HTTP_MOVED_TEMP) {\n                VAR_19 = true;\n            } else {\n                handleErrorResponse(VAR_13, VAR_0, VAR_2);\n            }\n\n            if (VAR_19) {\n                /* COMMENT_3 */\n                String VAR_21 = VAR_13.getHeaderField(VAR_17.LOCATION);\n                String VAR_22 = VAR_13.getHeaderField(VAR_17.CONTENT_DISPOSITION);\n\n                VAR_13 = createHttpUrlConnection(convertToUrl(VAR_21), VAR_3, VAR_4, VAR_5,\n                        VAR_6);\n                VAR_13.setRequestProperty(VAR_17.CONTENT_DISPOSITION, VAR_22);\n\n                createBaloInHomeRepo(VAR_13, VAR_1, VAR_2, VAR_9, VAR_21,\n                        VAR_22);\n            }\n        } catch (Exception VAR_23) {\n            throw VAR_24.createCommandException(VAR_23.getMessage());\n        } finally {\n            if (VAR_13 != null) {\n                VAR_13.disconnect();\n            }\n            VAR_25.setDefault(null);\n        }\n    }",
  "func_graph_path_before": "ballerina-platform/ballerina-lang/4609ffee1744ecd16aac09303b1783bf0a525816/Pull.java/vul/before/0.json",
  "func": "public static void execute(String url, String modulePathInBaloCache, String moduleNameWithOrg, String proxyHost,\n            int proxyPort, String proxyUsername, String proxyPassword, String supportedVersionRange, boolean isBuild,\n            boolean isNightlyBuild, String langSpecVersion, String platform) {\n        if (isBuild) {\n            logFormatter = new BuildLogFormatter();\n        }\n\n        HttpsURLConnection conn = null;\n        try {\n            conn = createHttpsUrlConnection(convertToUrl(url + supportedVersionRange), proxyHost, proxyPort,\n                                            proxyUsername, proxyPassword);\n\n            conn.setInstanceFollowRedirects(false);\n            setRequestMethod(conn, Utils.RequestMethod.GET);\n\n            // Set headers\n            conn.setRequestProperty(BALLERINA_PLATFORM, platform);\n            conn.setRequestProperty(BAL_LANG_SPEC_VERSION, langSpecVersion);\n            conn.setRequestProperty(HttpHeaders.ACCEPT_ENCODING, IDENTITY);\n\n            boolean redirect = false;\n            // 302 - Module is found\n            // Other - Error occurred, json returned with the error message\n            if (getStatusCode(conn) == HttpsURLConnection.HTTP_MOVED_TEMP) {\n                redirect = true;\n            } else {\n                handleErrorResponse(conn, url, moduleNameWithOrg);\n            }\n\n            if (redirect) {\n                // get redirect url from \"location\" header field\n                String newUrl = conn.getHeaderField(HttpHeaders.LOCATION);\n                String contentDisposition = conn.getHeaderField(HttpHeaders.CONTENT_DISPOSITION);\n\n                conn = createHttpsUrlConnection(convertToUrl(newUrl), proxyHost, proxyPort, proxyUsername,\n                                                proxyPassword);\n                conn.setRequestProperty(HttpHeaders.CONTENT_DISPOSITION, contentDisposition);\n\n                createBaloInHomeRepo(conn, modulePathInBaloCache, moduleNameWithOrg, isNightlyBuild, newUrl,\n                        contentDisposition);\n            }\n        } catch (Exception e) {\n            throw ErrorUtil.createCommandException(e.getMessage());\n        } finally {\n            if (conn != null) {\n                conn.disconnect();\n            }\n            Authenticator.setDefault(null);\n        }\n    }",
  "abstract_func": "public static void execute(String VAR_0, String VAR_1, String VAR_2, String VAR_3,\n            int VAR_4, String VAR_5, String VAR_6, String VAR_7, boolean VAR_8,\n            boolean VAR_9, String VAR_10, String VAR_11) {\n        if (VAR_8) {\n            VAR_12 = new BuildLogFormatter();\n        }\n\n        HttpsURLConnection VAR_13 = null;\n        try {\n            VAR_13 = createHttpsUrlConnection(convertToUrl(VAR_0 + VAR_7), VAR_3, VAR_4,\n                                            VAR_5, VAR_6);\n\n            VAR_13.setInstanceFollowRedirects(false);\n            setRequestMethod(VAR_13, VAR_14.RequestMethod.GET);\n\n            /* COMMENT_0 */\n            VAR_13.setRequestProperty(VAR_15, VAR_11);\n            VAR_13.setRequestProperty(VAR_16, VAR_10);\n            VAR_13.setRequestProperty(VAR_17.ACCEPT_ENCODING, VAR_18);\n\n            boolean VAR_19 = false;\n            /* COMMENT_1 */\n            /* COMMENT_2 */\n            if (getStatusCode(VAR_13) == VAR_20.HTTP_MOVED_TEMP) {\n                VAR_19 = true;\n            } else {\n                handleErrorResponse(VAR_13, VAR_0, VAR_2);\n            }\n\n            if (VAR_19) {\n                /* COMMENT_3 */\n                String VAR_21 = VAR_13.getHeaderField(VAR_17.LOCATION);\n                String VAR_22 = VAR_13.getHeaderField(VAR_17.CONTENT_DISPOSITION);\n\n                VAR_13 = createHttpsUrlConnection(convertToUrl(VAR_21), VAR_3, VAR_4, VAR_5,\n                                                VAR_6);\n                VAR_13.setRequestProperty(VAR_17.CONTENT_DISPOSITION, VAR_22);\n\n                createBaloInHomeRepo(VAR_13, VAR_1, VAR_2, VAR_9, VAR_21,\n                        VAR_22);\n            }\n        } catch (Exception VAR_23) {\n            throw VAR_24.createCommandException(VAR_23.getMessage());\n        } finally {\n            if (VAR_13 != null) {\n                VAR_13.disconnect();\n            }\n            VAR_25.setDefault(null);\n        }\n    }",
  "func_graph_path": "ballerina-platform/ballerina-lang/4609ffee1744ecd16aac09303b1783bf0a525816/Pull.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -5,11 +5,10 @@\n             logFormatter = new BuildLogFormatter();\n         }\n \n-        HttpURLConnection conn = null;\n+        HttpsURLConnection conn = null;\n         try {\n-            initializeSsl();\n-            conn = createHttpUrlConnection(convertToUrl(url + supportedVersionRange), proxyHost, proxyPort,\n-                    proxyUsername, proxyPassword);\n+            conn = createHttpsUrlConnection(convertToUrl(url + supportedVersionRange), proxyHost, proxyPort,\n+                                            proxyUsername, proxyPassword);\n \n             conn.setInstanceFollowRedirects(false);\n             setRequestMethod(conn, Utils.RequestMethod.GET);\n@@ -22,7 +21,7 @@\n             boolean redirect = false;\n             // 302 - Module is found\n             // Other - Error occurred, json returned with the error message\n-            if (getStatusCode(conn) == HttpURLConnection.HTTP_MOVED_TEMP) {\n+            if (getStatusCode(conn) == HttpsURLConnection.HTTP_MOVED_TEMP) {\n                 redirect = true;\n             } else {\n                 handleErrorResponse(conn, url, moduleNameWithOrg);\n@@ -33,8 +32,8 @@\n                 String newUrl = conn.getHeaderField(HttpHeaders.LOCATION);\n                 String contentDisposition = conn.getHeaderField(HttpHeaders.CONTENT_DISPOSITION);\n \n-                conn = createHttpUrlConnection(convertToUrl(newUrl), proxyHost, proxyPort, proxyUsername,\n-                        proxyPassword);\n+                conn = createHttpsUrlConnection(convertToUrl(newUrl), proxyHost, proxyPort, proxyUsername,\n+                                                proxyPassword);\n                 conn.setRequestProperty(HttpHeaders.CONTENT_DISPOSITION, contentDisposition);\n \n                 createBaloInHomeRepo(conn, modulePathInBaloCache, moduleNameWithOrg, isNightlyBuild, newUrl,",
  "diff_line_info": {
    "deleted_lines": [
      "        HttpURLConnection conn = null;",
      "            initializeSsl();",
      "            conn = createHttpUrlConnection(convertToUrl(url + supportedVersionRange), proxyHost, proxyPort,",
      "                    proxyUsername, proxyPassword);",
      "            if (getStatusCode(conn) == HttpURLConnection.HTTP_MOVED_TEMP) {",
      "                conn = createHttpUrlConnection(convertToUrl(newUrl), proxyHost, proxyPort, proxyUsername,",
      "                        proxyPassword);"
    ],
    "added_lines": [
      "        HttpsURLConnection conn = null;",
      "            conn = createHttpsUrlConnection(convertToUrl(url + supportedVersionRange), proxyHost, proxyPort,",
      "                                            proxyUsername, proxyPassword);",
      "            if (getStatusCode(conn) == HttpsURLConnection.HTTP_MOVED_TEMP) {",
      "                conn = createHttpsUrlConnection(convertToUrl(newUrl), proxyHost, proxyPort, proxyUsername,",
      "                                                proxyPassword);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/29246",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/ballerina-platform/ballerina-lang/pull/29246: 403 Client Error: Forbidden for url: https://api.github.com/repos/ballerina-platform/ballerina-lang/pulls/29246",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "The patch modifies the connection handling from HTTP to HTTPS, which is a security improvement. The code changes are consistent with the intent to fix the central connection's security by encrypting data in transit.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}