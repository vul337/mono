{
  "cve_id": "CVE-2022-1809",
  "cwe_ids": [
    "CWE-824"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix crash in vtable analysis on UB ##crash\n\n* Reported by @greatergoodest via huntrdev\n* BountyID 0730a95e-c485-4ff2-9a5d-bb3abfda0b17\n* Reproducer: minified_crash",
  "commit_hash": "919e3ac1a13f753c73e7a8e8d8bb4a143218732d",
  "git_url": "https://github.com/radareorg/radare2/commit/919e3ac1a13f753c73e7a8e8d8bb4a143218732d",
  "file_path": "libr/anal/vtable.c",
  "func_name": "vtable_is_value_in_text_section",
  "func_before": "static bool vtable_is_value_in_text_section(RVTableContext *context, ut64 curAddress, ut64 *value) {\n\t//value at the current address\n\tut64 curAddressValue;\n\tif (!context->read_addr (context->anal, curAddress, &curAddressValue)) {\n\t\treturn false;\n\t}\n\t//if the value is in text section\n\tbool ret = vtable_addr_in_text_section (context, curAddressValue);\n\tif (value) {\n\t\t*value = curAddressValue;\n\t}\n\treturn ret;\n}",
  "abstract_func_before": "static bool vtable_is_value_in_text_section(RVTableContext *VAR_0, ut64 VAR_1, ut64 *VAR_2) {\n\t/* COMMENT_0 */\n\tut64 VAR_3;\n\tif (!VAR_0->read_addr (VAR_0->anal, VAR_1, &VAR_3)) {\n\t\treturn false;\n\t}\n\t/* COMMENT_1 */\n\tbool VAR_4 = vtable_addr_in_text_section (VAR_0, VAR_3);\n\tif (VAR_2) {\n\t\t*VAR_2 = VAR_3;\n\t}\n\treturn VAR_4;\n}",
  "func_graph_path_before": "radareorg/radare2/919e3ac1a13f753c73e7a8e8d8bb4a143218732d/vtable.c/vul/before/2.json",
  "func": "static bool vtable_is_value_in_text_section(RVTableContext *context, ut64 curAddress, ut64 *value) {\n\t//value at the current address\n\tut64 curAddressValue = UT64_MAX;\n\tif (!context->read_addr (context->anal, curAddress, &curAddressValue)) {\n\t\treturn false;\n\t}\n\t//if the value is in text section\n\tbool ret = vtable_addr_in_text_section (context, curAddressValue);\n\tif (value) {\n\t\t*value = curAddressValue;\n\t}\n\treturn ret;\n}",
  "abstract_func": "static bool vtable_is_value_in_text_section(RVTableContext *VAR_0, ut64 VAR_1, ut64 *VAR_2) {\n\t/* COMMENT_0 */\n\tut64 VAR_3 = VAR_4;\n\tif (!VAR_0->read_addr (VAR_0->anal, VAR_1, &VAR_3)) {\n\t\treturn false;\n\t}\n\t/* COMMENT_1 */\n\tbool VAR_5 = vtable_addr_in_text_section (VAR_0, VAR_3);\n\tif (VAR_2) {\n\t\t*VAR_2 = VAR_3;\n\t}\n\treturn VAR_5;\n}",
  "func_graph_path": "radareorg/radare2/919e3ac1a13f753c73e7a8e8d8bb4a143218732d/vtable.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,6 @@\n static bool vtable_is_value_in_text_section(RVTableContext *context, ut64 curAddress, ut64 *value) {\n \t//value at the current address\n-\tut64 curAddressValue;\n+\tut64 curAddressValue = UT64_MAX;\n \tif (!context->read_addr (context->anal, curAddress, &curAddressValue)) {\n \t\treturn false;\n \t}",
  "diff_line_info": {
    "deleted_lines": [
      "\tut64 curAddressValue;"
    ],
    "added_lines": [
      "\tut64 curAddressValue = UT64_MAX;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/20146",
  "description": {
    "pr_info": {
      "title": "Fix crash in vtable analysis on UB ##crash",
      "number": 20146
    },
    "comment": [
      "* Reported by @greatergoodest via huntrdev\r\n* BountyID 0730a95e-c485-4ff2-9a5d-bb3abfda0b17\r\n* Reproducer: minified_crash\r\n\r\n<!--\r\nRead https://github.com/radareorg/radare2/blob/master/DEVELOPERS.md\r\n* PR title must be capitalized, concise and use ##tags\r\n* If the PR is fixing a ticket use 'Fix #1234 - ..' in the commit message\r\n* Follow the coding style, add tests and documentation if necessary\r\n-->\r\n\r\n- [ ] Mark this if you consider it ready to merge\r\n- [ ] I've added tests (optional)\r\n- [ ] I wrote some lines in the [book](https://github.com/radareorg/radare2book) (optional)\r\n\r\n**Description**\r\n\r\n<!-- explain your changes if necessary -->\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "The commit addresses a crash in the vtable analysis by initializing a variable to prevent undefined behavior, which likely fixes a crash that could be a security issue. However, there's no explicit CVE reference.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.8"
}