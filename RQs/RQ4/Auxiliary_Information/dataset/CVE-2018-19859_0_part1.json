{
  "cve_id": "CVE-2018-19859",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "OpenRefine",
  "commit_msg": "Fix zip slip vulnerability. Closes #1840.",
  "commit_hash": "e243e73e4064de87a913946bd320fbbe246da656",
  "git_url": "https://github.com/OpenRefine/OpenRefine/commit/e243e73e4064de87a913946bd320fbbe246da656",
  "file_path": "main/src/com/google/refine/importing/ImportingUtilities.java",
  "func_name": "allocateFile",
  "func_before": "static public File allocateFile(File dir, String name) {\n        int q = name.indexOf('?');\n        if (q > 0) {\n            name = name.substring(0, q);\n        }\n        \n        File file = new File(dir, name);\n        \n        int dot = name.indexOf('.');\n        String prefix = dot < 0 ? name : name.substring(0, dot);\n        String suffix = dot < 0 ? \"\" : name.substring(dot);\n        int index = 2;\n        while (file.exists()) {\n            file = new File(dir, prefix + \"-\" + index++ + suffix);\n        }\n        \n        file.getParentFile().mkdirs();\n        \n        return file;\n    }",
  "abstract_func_before": "static public File allocateFile(File VAR_0, String VAR_1) {\n        int VAR_2 = VAR_1.indexOf('?');\n        if (VAR_2 > 0) {\n            VAR_1 = VAR_1.substring(0, VAR_2);\n        }\n        \n        File VAR_3 = new File(VAR_0, VAR_1);\n        \n        int VAR_4 = VAR_1.indexOf('.');\n        String VAR_5 = VAR_4 < 0 ? VAR_1 : VAR_1.substring(0, VAR_4);\n        String VAR_6 = VAR_4 < 0 ? \"\" : VAR_1.substring(VAR_4);\n        int VAR_7 = 2;\n        while (VAR_3.exists()) {\n            VAR_3 = new File(VAR_0, VAR_5 + \"-\" + VAR_7++ + VAR_6);\n        }\n        \n        VAR_3.getParentFile().mkdirs();\n        \n        return VAR_3;\n    }",
  "func_graph_path_before": "OpenRefine/e243e73e4064de87a913946bd320fbbe246da656/ImportingUtilities.java/vul/before/0.json",
  "func": "static public File allocateFile(File dir, String name) {\n        int q = name.indexOf('?');\n        if (q > 0) {\n            name = name.substring(0, q);\n        }\n        \n        File file = new File(dir, name);     \n        // For CVE-2018-19859, issue #1840\n        if (!file.toPath().normalize().startsWith(dir.toPath().normalize())) {\n        \tthrow new IllegalArgumentException(\"Zip archives with files escaping their root directory are not allowed.\");\n        }\n        \n        int dot = name.indexOf('.');\n        String prefix = dot < 0 ? name : name.substring(0, dot);\n        String suffix = dot < 0 ? \"\" : name.substring(dot);\n        int index = 2;\n        while (file.exists()) {\n            file = new File(dir, prefix + \"-\" + index++ + suffix);\n        }\n        \n        file.getParentFile().mkdirs();\n        \n        return file;\n    }",
  "abstract_func": "static public File allocateFile(File VAR_0, String VAR_1) {\n        int VAR_2 = VAR_1.indexOf('?');\n        if (VAR_2 > 0) {\n            VAR_1 = VAR_1.substring(0, VAR_2);\n        }\n        \n        File VAR_3 = new File(VAR_0, VAR_1);     \n        /* COMMENT_0 */\n        if (!VAR_3.toPath().normalize().startsWith(VAR_0.toPath().normalize())) {\n        \tthrow new IllegalArgumentException(\"Zip archives with files escaping their root directory are not allowed.\");\n        }\n        \n        int VAR_4 = VAR_1.indexOf('.');\n        String VAR_5 = VAR_4 < 0 ? VAR_1 : VAR_1.substring(0, VAR_4);\n        String VAR_6 = VAR_4 < 0 ? \"\" : VAR_1.substring(VAR_4);\n        int VAR_7 = 2;\n        while (VAR_3.exists()) {\n            VAR_3 = new File(VAR_0, VAR_5 + \"-\" + VAR_7++ + VAR_6);\n        }\n        \n        VAR_3.getParentFile().mkdirs();\n        \n        return VAR_3;\n    }",
  "func_graph_path": "OpenRefine/e243e73e4064de87a913946bd320fbbe246da656/ImportingUtilities.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,7 +4,11 @@\n             name = name.substring(0, q);\n         }\n         \n-        File file = new File(dir, name);\n+        File file = new File(dir, name);     \n+        // For CVE-2018-19859, issue #1840\n+        if (!file.toPath().normalize().startsWith(dir.toPath().normalize())) {\n+        \tthrow new IllegalArgumentException(\"Zip archives with files escaping their root directory are not allowed.\");\n+        }\n         \n         int dot = name.indexOf('.');\n         String prefix = dot < 0 ? name : name.substring(0, dot);",
  "diff_line_info": {
    "deleted_lines": [
      "        File file = new File(dir, name);"
    ],
    "added_lines": [
      "        File file = new File(dir, name);     ",
      "        // For CVE-2018-19859, issue #1840",
      "        if (!file.toPath().normalize().startsWith(dir.toPath().normalize())) {",
      "        \tthrow new IllegalArgumentException(\"Zip archives with files escaping their root directory are not allowed.\");",
      "        }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/1901",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/OpenRefine/OpenRefine/pull/1901: 403 Client Error: Forbidden for url: https://api.github.com/repos/OpenRefine/OpenRefine/pulls/1901",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 1.0"
}