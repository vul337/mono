{
  "cve_id": "CVE-2023-1495",
  "cwe_ids": [
    "CWE-89"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "getrebuild/rebuild",
  "commit_msg": "H5 sync2 (#595)\n\n* style: 目录样式gh\r\n\r\n* style: J_new\r\n\r\n* feat: advListFilterTabs\r\n\r\n* feat: nav-copyto\r\n\r\n* enh: 助记码全拼\r\n\r\n* enh: 地图搜索选点\r\n\r\n* enh: topnav\r\n\r\n* list pn\r\n\r\n* .form-line.v33\r\n\r\n* open TAG\r\n\r\n* KVS addShutdownHook\r\n\r\n* fix: #594\r\n\r\n---------\r\n\r\nCo-authored-by: devezhao <zhaofang123@gmail.com>",
  "commit_hash": "c9474f84e5f376dd2ade2078e3039961a9425da7",
  "git_url": "https://github.com/getrebuild/rebuild/commit/c9474f84e5f376dd2ade2078e3039961a9425da7",
  "file_path": "src/main/java/com/rebuild/core/support/general/ProtocolFilterParser.java",
  "func_name": "parseCategory",
  "func_before": "protected String parseCategory(String entity, String value) {\n        Entity rootEntity = MetadataHelper.getEntity(entity);\n        Field categoryField = DataListCategory.instance.getFieldOfCategory(rootEntity);\n        if (categoryField == null || StringUtils.isBlank(value)) return \"(9=9)\";\n\n        DisplayType dt = EasyMetaFactory.getDisplayType(categoryField);\n        value = StringEscapeUtils.escapeSql(value);\n\n        if (dt == DisplayType.MULTISELECT) {\n            return String.format(\"%s && %d\", categoryField.getName(), ObjectUtils.toInt(value));\n        } else if (dt == DisplayType.N2NREFERENCE) {\n            return String.format(\n                    \"exists (select recordId from NreferenceItem where ^%s = recordId and belongField = '%s' and referenceId = '%s')\",\n                    rootEntity.getPrimaryField().getName(), categoryField.getName(), value);\n        } else if (dt == DisplayType.DATETIME || dt == DisplayType.DATE) {\n            String s = value + \"0000-01-01 00:00:00\".substring(value.length());\n            String e = value + \"0000-12-31 23:59:59\".substring(value.length());\n            if (dt == DisplayType.DATE) {\n                s = s.split(\" \")[0];\n                e = e.split(\" \")[0];\n            }\n            return MessageFormat.format(\"({0} >= ''{1}'' and {0} <= ''{2}'')\", categoryField.getName(), s, e);\n        }  else {\n            return String.format(\"%s = '%s'\", categoryField.getName(), value);\n        }\n    }",
  "abstract_func_before": "protected String parseCategory(String VAR_0, String VAR_1) {\n        Entity VAR_2 = VAR_3.getEntity(VAR_0);\n        Field VAR_4 = VAR_5.instance.getFieldOfCategory(VAR_2);\n        if (VAR_4 == null || VAR_6.isBlank(VAR_1)) return \"(9=9)\";\n\n        DisplayType VAR_7 = VAR_8.getDisplayType(VAR_4);\n        VAR_1 = VAR_9.escapeSql(VAR_1);\n\n        if (VAR_7 == VAR_10.MULTISELECT) {\n            return VAR_11.format(\"%s && %d\", VAR_4.getName(), VAR_12.toInt(VAR_1));\n        } else if (VAR_7 == VAR_10.N2NREFERENCE) {\n            return VAR_11.format(\n                    \"exists (select recordId from NreferenceItem where ^%s = recordId and belongField = '%s' and referenceId = '%s')\",\n                    VAR_2.getPrimaryField().getName(), VAR_4.getName(), VAR_1);\n        } else if (VAR_7 == VAR_10.DATETIME || VAR_7 == VAR_10.DATE) {\n            String VAR_13 = VAR_1 + \"0000-01-01 00:00:00\".substring(VAR_1.length());\n            String VAR_14 = VAR_1 + \"0000-12-31 23:59:59\".substring(VAR_1.length());\n            if (VAR_7 == VAR_10.DATE) {\n                VAR_13 = VAR_13.split(\" \")[0];\n                VAR_14 = VAR_14.split(\" \")[0];\n            }\n            return VAR_15.format(\"({0} >= ''{1}'' and {0} <= ''{2}'')\", VAR_4.getName(), VAR_13, VAR_14);\n        }  else {\n            return VAR_11.format(\"%s = '%s'\", VAR_4.getName(), VAR_1);\n        }\n    }",
  "func_graph_path_before": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/ProtocolFilterParser.java/vul/before/0.json",
  "func": "protected String parseCategory(String entity, String value) {\n        Entity rootEntity = MetadataHelper.getEntity(entity);\n        Field categoryField = DataListCategory.instance.getFieldOfCategory(rootEntity);\n        if (categoryField == null || StringUtils.isBlank(value)) return \"(9=9)\";\n\n        DisplayType dt = EasyMetaFactory.getDisplayType(categoryField);\n        value = CommonsUtils.escapeSql(value);\n\n        if (dt == DisplayType.MULTISELECT) {\n            return String.format(\"%s && %d\", categoryField.getName(), ObjectUtils.toInt(value));\n        } else if (dt == DisplayType.N2NREFERENCE) {\n            return String.format(\n                    \"exists (select recordId from NreferenceItem where ^%s = recordId and belongField = '%s' and referenceId = '%s')\",\n                    rootEntity.getPrimaryField().getName(), categoryField.getName(), value);\n        } else if (dt == DisplayType.DATETIME || dt == DisplayType.DATE) {\n            String s = value + \"0000-01-01 00:00:00\".substring(value.length());\n            String e = value + \"0000-12-31 23:59:59\".substring(value.length());\n            if (dt == DisplayType.DATE) {\n                s = s.split(\" \")[0];\n                e = e.split(\" \")[0];\n            }\n            return MessageFormat.format(\"({0} >= ''{1}'' and {0} <= ''{2}'')\", categoryField.getName(), s, e);\n        }  else {\n            return String.format(\"%s = '%s'\", categoryField.getName(), value);\n        }\n    }",
  "abstract_func": "protected String parseCategory(String VAR_0, String VAR_1) {\n        Entity VAR_2 = VAR_3.getEntity(VAR_0);\n        Field VAR_4 = VAR_5.instance.getFieldOfCategory(VAR_2);\n        if (VAR_4 == null || VAR_6.isBlank(VAR_1)) return \"(9=9)\";\n\n        DisplayType VAR_7 = VAR_8.getDisplayType(VAR_4);\n        VAR_1 = VAR_9.escapeSql(VAR_1);\n\n        if (VAR_7 == VAR_10.MULTISELECT) {\n            return VAR_11.format(\"%s && %d\", VAR_4.getName(), VAR_12.toInt(VAR_1));\n        } else if (VAR_7 == VAR_10.N2NREFERENCE) {\n            return VAR_11.format(\n                    \"exists (select recordId from NreferenceItem where ^%s = recordId and belongField = '%s' and referenceId = '%s')\",\n                    VAR_2.getPrimaryField().getName(), VAR_4.getName(), VAR_1);\n        } else if (VAR_7 == VAR_10.DATETIME || VAR_7 == VAR_10.DATE) {\n            String VAR_13 = VAR_1 + \"0000-01-01 00:00:00\".substring(VAR_1.length());\n            String VAR_14 = VAR_1 + \"0000-12-31 23:59:59\".substring(VAR_1.length());\n            if (VAR_7 == VAR_10.DATE) {\n                VAR_13 = VAR_13.split(\" \")[0];\n                VAR_14 = VAR_14.split(\" \")[0];\n            }\n            return VAR_15.format(\"({0} >= ''{1}'' and {0} <= ''{2}'')\", VAR_4.getName(), VAR_13, VAR_14);\n        }  else {\n            return VAR_11.format(\"%s = '%s'\", VAR_4.getName(), VAR_1);\n        }\n    }",
  "func_graph_path": "getrebuild/rebuild/c9474f84e5f376dd2ade2078e3039961a9425da7/ProtocolFilterParser.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,7 +4,7 @@\n         if (categoryField == null || StringUtils.isBlank(value)) return \"(9=9)\";\n \n         DisplayType dt = EasyMetaFactory.getDisplayType(categoryField);\n-        value = StringEscapeUtils.escapeSql(value);\n+        value = CommonsUtils.escapeSql(value);\n \n         if (dt == DisplayType.MULTISELECT) {\n             return String.format(\"%s && %d\", categoryField.getName(), ObjectUtils.toInt(value));",
  "diff_line_info": {
    "deleted_lines": [
      "        value = StringEscapeUtils.escapeSql(value);"
    ],
    "added_lines": [
      "        value = CommonsUtils.escapeSql(value);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/getrebuild/rebuild/pull/595",
  "description": {
    "pr_info": {
      "title": "H5 sync2",
      "number": 595
    },
    "comment": [
      "Most styles:\r\n1. Nav copy\r\n2. Arrow for form line \r\n3. Quick-code full-pinyin\r\n4. Open Tag of field\r\n5. feat: `advListFilterTabs` (boss-key)\r\n6. Map search\r\n7. feat: Can input page-no on list\r\n8. CVE fix"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}