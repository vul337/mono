{
  "cve_id": "CVE-2023-24821",
  "cwe_ids": [
    "CWE-787",
    "CWE-191"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "RIOT-OS/RIOT",
  "commit_msg": "gnrc_sixlowpan_frag_rb: fix integer underflow in _6lo_frag_size()\n\n(cherry picked from commit 9728f727e75d7d78dbfb5918e0de1b938b7b6d2c)",
  "commit_hash": "bd31010231f5340e21410595dd95afc86bbfd341",
  "git_url": "https://github.com/RIOT-OS/RIOT/commit/bd31010231f5340e21410595dd95afc86bbfd341",
  "file_path": "sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c",
  "func_name": "_6lo_frag_size",
  "func_before": "static size_t _6lo_frag_size(gnrc_pktsnip_t *pkt, size_t offset, uint8_t *data)\n{\n    size_t frag_size;\n\n    if (offset == 0) {\n        frag_size = pkt->size - sizeof(sixlowpan_frag_t);\n        if (data[0] == SIXLOWPAN_UNCOMP) {\n            /* subtract SIXLOWPAN_UNCOMP byte from fragment size,\n             * data pointer must be changed by caller (see _rbuf_add()) */\n            frag_size--;\n        }\n    }\n    else {\n        frag_size = pkt->size - sizeof(sixlowpan_frag_n_t);\n    }\n    return frag_size;\n}",
  "abstract_func_before": "static size_t _6lo_frag_size(gnrc_pktsnip_t *VAR_0, size_t VAR_1, uint8_t *VAR_2)\n{\n    size_t VAR_3;\n\n    if (VAR_1 == 0) {\n        VAR_3 = VAR_0->size - sizeof(VAR_4);\n        if (VAR_2[0] == VAR_5) {\n            /* COMMENT_0 */\n                                                                          \n            VAR_3--;\n        }\n    }\n    else {\n        VAR_3 = VAR_0->size - sizeof(VAR_6);\n    }\n    return VAR_3;\n}",
  "func_graph_path_before": "RIOT-OS/RIOT/bd31010231f5340e21410595dd95afc86bbfd341/gnrc_sixlowpan_frag_rb.c/vul/before/0.json",
  "func": "static size_t _6lo_frag_size(gnrc_pktsnip_t *pkt, size_t offset, uint8_t *data)\n{\n    size_t frag_size;\n\n    if (offset == 0) {\n        if (pkt->size < sizeof(sixlowpan_frag_t)) {\n            return 0;\n        }\n        frag_size = pkt->size - sizeof(sixlowpan_frag_t);\n        if (data[0] == SIXLOWPAN_UNCOMP) {\n            /* subtract SIXLOWPAN_UNCOMP byte from fragment size,\n             * data pointer must be changed by caller (see _rbuf_add()) */\n            frag_size--;\n        }\n    }\n    else {\n        if (pkt->size < sizeof(sixlowpan_frag_n_t)) {\n            return 0;\n        }\n        frag_size = pkt->size - sizeof(sixlowpan_frag_n_t);\n    }\n    return frag_size;\n}",
  "abstract_func": "static size_t _6lo_frag_size(gnrc_pktsnip_t *VAR_0, size_t VAR_1, uint8_t *VAR_2)\n{\n    size_t VAR_3;\n\n    if (VAR_1 == 0) {\n        if (VAR_0->size < sizeof(VAR_4)) {\n            return 0;\n        }\n        VAR_3 = VAR_0->size - sizeof(VAR_4);\n        if (VAR_2[0] == VAR_5) {\n            /* COMMENT_0 */\n                                                                          \n            VAR_3--;\n        }\n    }\n    else {\n        if (VAR_0->size < sizeof(VAR_6)) {\n            return 0;\n        }\n        VAR_3 = VAR_0->size - sizeof(VAR_6);\n    }\n    return VAR_3;\n}",
  "func_graph_path": "RIOT-OS/RIOT/bd31010231f5340e21410595dd95afc86bbfd341/gnrc_sixlowpan_frag_rb.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,6 +3,9 @@\n     size_t frag_size;\n \n     if (offset == 0) {\n+        if (pkt->size < sizeof(sixlowpan_frag_t)) {\n+            return 0;\n+        }\n         frag_size = pkt->size - sizeof(sixlowpan_frag_t);\n         if (data[0] == SIXLOWPAN_UNCOMP) {\n             /* subtract SIXLOWPAN_UNCOMP byte from fragment size,\n@@ -11,6 +14,9 @@\n         }\n     }\n     else {\n+        if (pkt->size < sizeof(sixlowpan_frag_n_t)) {\n+            return 0;\n+        }\n         frag_size = pkt->size - sizeof(sixlowpan_frag_n_t);\n     }\n     return frag_size;",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        if (pkt->size < sizeof(sixlowpan_frag_t)) {",
      "            return 0;",
      "        }",
      "        if (pkt->size < sizeof(sixlowpan_frag_n_t)) {",
      "            return 0;",
      "        }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/RIOT-OS/RIOT/pull/18820",
  "description": {
    "pr_info": {
      "title": "gnrc_sixlowpan: Various hardening fixes [backport 2022.10]",
      "number": 18820
    },
    "comment": [
      "# Backport of #18817\n\n<!--\r\nThe RIOT community cares a lot about code quality.\r\nTherefore, before describing what your contribution is about, we would like\r\nyou to make sure that your modifications are compliant with the RIOT\r\ncoding conventions, see https://github.com/RIOT-OS/RIOT/blob/master/CODING_CONVENTIONS.md.\r\n-->\r\n\r\n### Contribution description\r\nTitle says everything\r\n<!--\r\nPut here the description of your contribution:\r\n- describe which part(s) of RIOT is (are) involved\r\n- if it's a bug fix, describe the bug that it solves and how it is solved\r\n- you can also give more information to reviewers about how to test your changes\r\n-->\r\n\r\n\r\n### Testing procedure\r\nFragmentation and header compression (e.g. as outlined in Release Specs 4 and 6) should still work.\r\n<!--\r\nDetails steps to test your contribution:\r\n- which test/example to compile for which board and is there a 'test' command\r\n- how to know that it was not working/available in master\r\n- the expected success test output\r\n-->\r\n\r\n\r\n### Issues/PRs references\r\n\r\n<!--\r\nExamples: Fixes #1234. See also #5678. Depends on PR #9876.\r\n\r\nPlease use keywords (e.g., fixes, resolve) with the links to the issues you\r\nresolved, this way they will be automatically closed when your pull request\r\nis merged. See https://help.github.com/articles/closing-issues-using-keywords/.\r\n-->\r\n",
      "### Murdock results\n\n:heavy_check_mark: [PASSED](https://ci-prod.riot-os.org/details/269929bb39cb48648e9091595a754f80)\n\ne82cab6a94fa7865162bb7ac3705d5a461b1207d tests/unittests: fix get_frame_hdr_len tests for hardened parsing\n\n|  Success  |  Failures  |  Total  |  Runtime  |\n| :-------: | :--------: | :-----: | :-------: |\n| 2006 | 0 | 2006 | 07m:46s |\n\n\n#### Artifacts\n- [Documentation preview](https://ci-prod.riot-os.org/results/269929bb39cb48648e9091595a754f80/doc-preview/)\n\n**This only reflects a subset of all builds from https://ci-prod.riot-os.org. Please refer to https://ci.riot-os.org for a complete build for now.**\n\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "The patch addresses an integer underflow, a security issue that can lead to unexpected behavior, by adding boundary checks in the _6lo_frag_size function.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}