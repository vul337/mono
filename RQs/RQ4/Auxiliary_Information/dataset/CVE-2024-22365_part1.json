{
  "cve_id": "CVE-2024-22365",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "linux-pam",
  "commit_msg": "pam_namespace: protect_dir(): use O_DIRECTORY to prevent local DoS situations\n\nWithout O_DIRECTORY the path crawling logic is subject to e.g. FIFOs\nbeing placed in user controlled directories, causing the PAM module to\nblock indefinitely during `openat()`.\n\nPass O_DIRECTORY to cause the `openat()` to fail if the path does not\nrefer to a directory.\n\nWith this the check whether the final path element is a directory\nbecomes unnecessary, drop it.",
  "commit_hash": "031bb5a5d0d950253b68138b498dc93be69a64cb",
  "git_url": "https://github.com/linux-pam/linux-pam/commit/031bb5a5d0d950253b68138b498dc93be69a64cb",
  "file_path": "modules/pam_namespace/pam_namespace.c",
  "func_name": "protect_dir",
  "func_before": "static int protect_dir(const char *path, mode_t mode, int do_mkdir,\n\tstruct instance_data *idata)\n{\n\tchar *p = strdup(path);\n\tchar *d;\n\tchar *dir = p;\n\tint dfd = AT_FDCWD;\n\tint dfd_next;\n\tint save_errno;\n\tint flags = O_RDONLY;\n\tint rv = -1;\n\tstruct stat st;\n\n\tif (p == NULL) {\n\t\tgoto error;\n\t}\n\n\tif (*dir == '/') {\n\t\tdfd = open(\"/\", flags);\n\t\tif (dfd == -1) {\n\t\t\tgoto error;\n\t\t}\n\t\tdir++;\t/* assume / is safe */\n\t}\n\n\twhile ((d=strchr(dir, '/')) != NULL) {\n\t\t*d = '\\0';\n\t\tdfd_next = openat(dfd, dir, flags);\n\t\tif (dfd_next == -1) {\n\t\t\tgoto error;\n\t\t}\n\n\t\tif (dfd != AT_FDCWD)\n\t\t\tclose(dfd);\n\t\tdfd = dfd_next;\n\n\t\tif (fstat(dfd, &st) != 0) {\n\t\t\tgoto error;\n\t\t}\n\n\t\tif (flags & O_NOFOLLOW) {\n\t\t\t/* we are inside user-owned dir - protect */\n\t\t\tif (protect_mount(dfd, p, idata) == -1)\n\t\t\t\tgoto error;\n\t\t} else if (st.st_uid != 0 || st.st_gid != 0 ||\n\t\t\t(st.st_mode & S_IWOTH)) {\n\t\t\t/* do not follow symlinks on subdirectories */\n\t\t\tflags |= O_NOFOLLOW;\n\t\t}\n\n\t\t*d = '/';\n\t\tdir = d + 1;\n\t}\n\n\trv = openat(dfd, dir, flags);\n\n\tif (rv == -1) {\n\t\tif (!do_mkdir || mkdirat(dfd, dir, mode) != 0) {\n\t\t\tgoto error;\n\t\t}\n\t\trv = openat(dfd, dir, flags);\n\t}\n\n\tif (rv != -1) {\n\t\tif (fstat(rv, &st) != 0) {\n\t\t\tsave_errno = errno;\n\t\t\tclose(rv);\n\t\t\trv = -1;\n\t\t\terrno = save_errno;\n\t\t\tgoto error;\n\t\t}\n\t\tif (!S_ISDIR(st.st_mode)) {\n\t\t\tclose(rv);\n\t\t\terrno = ENOTDIR;\n\t\t\trv = -1;\n\t\t\tgoto error;\n\t\t}\n\t}\n\n\tif (flags & O_NOFOLLOW) {\n\t\t/* we are inside user-owned dir - protect */\n\t\tif (protect_mount(rv, p, idata) == -1) {\n\t\t\tsave_errno = errno;\n\t\t\tclose(rv);\n\t\t\trv = -1;\n\t\t\terrno = save_errno;\n\t\t}\n\t}\n\nerror:\n\tsave_errno = errno;\n\tfree(p);\n\tif (dfd != AT_FDCWD && dfd >= 0)\n\t\tclose(dfd);\n\terrno = save_errno;\n\n\treturn rv;\n}",
  "abstract_func_before": "static int protect_dir(const char *VAR_0, mode_t VAR_1, int VAR_2,\n\tstruct instance_data *VAR_3)\n{\n\tchar *VAR_4 = strdup(VAR_0);\n\tchar *VAR_5;\n\tchar *VAR_6 = VAR_4;\n\tint VAR_7 = VAR_8;\n\tint VAR_9;\n\tint VAR_10;\n\tint VAR_11 = VAR_12;\n\tint VAR_13 = -1;\n\tstruct stat VAR_14;\n\n\tif (VAR_4 == NULL) {\n\t\tgoto error;\n\t}\n\n\tif (*VAR_6 == '/') {\n\t\tVAR_7 = open(\"/\", VAR_11);\n\t\tif (VAR_7 == -1) {\n\t\t\tgoto error;\n\t\t}\n\t\tVAR_6++;\t/* COMMENT_0 */\n\t}\n\n\twhile ((VAR_5=strchr(VAR_6, '/')) != NULL) {\n\t\t*VAR_5 = '\\0';\n\t\tVAR_9 = openat(VAR_7, VAR_6, VAR_11);\n\t\tif (VAR_9 == -1) {\n\t\t\tgoto error;\n\t\t}\n\n\t\tif (VAR_7 != VAR_8)\n\t\t\tclose(VAR_7);\n\t\tVAR_7 = VAR_9;\n\n\t\tif (fstat(VAR_7, &VAR_14) != 0) {\n\t\t\tgoto error;\n\t\t}\n\n\t\tif (VAR_11 & VAR_15) {\n\t\t\t/* COMMENT_1 */\n\t\t\tif (protect_mount(VAR_7, VAR_4, VAR_3) == -1)\n\t\t\t\tgoto error;\n\t\t} else if (VAR_14.st_uid != 0 || VAR_14.st_gid != 0 ||\n\t\t\t(VAR_14.st_mode & VAR_16)) {\n\t\t\t/* COMMENT_2 */\n\t\t\tVAR_11 |= VAR_15;\n\t\t}\n\n\t\t*VAR_5 = '/';\n\t\tVAR_6 = VAR_5 + 1;\n\t}\n\n\tVAR_13 = openat(VAR_7, VAR_6, VAR_11);\n\n\tif (VAR_13 == -1) {\n\t\tif (!VAR_2 || mkdirat(VAR_7, VAR_6, VAR_1) != 0) {\n\t\t\tgoto error;\n\t\t}\n\t\tVAR_13 = openat(VAR_7, VAR_6, VAR_11);\n\t}\n\n\tif (VAR_13 != -1) {\n\t\tif (fstat(VAR_13, &VAR_14) != 0) {\n\t\t\tVAR_10 = VAR_17;\n\t\t\tclose(VAR_13);\n\t\t\tVAR_13 = -1;\n\t\t\tVAR_17 = VAR_10;\n\t\t\tgoto error;\n\t\t}\n\t\tif (!S_ISDIR(VAR_14.st_mode)) {\n\t\t\tclose(VAR_13);\n\t\t\tVAR_17 = VAR_18;\n\t\t\tVAR_13 = -1;\n\t\t\tgoto error;\n\t\t}\n\t}\n\n\tif (VAR_11 & VAR_15) {\n\t\t/* COMMENT_1 */\n\t\tif (protect_mount(VAR_13, VAR_4, VAR_3) == -1) {\n\t\t\tVAR_10 = VAR_17;\n\t\t\tclose(VAR_13);\n\t\t\tVAR_13 = -1;\n\t\t\tVAR_17 = VAR_10;\n\t\t}\n\t}\n\nerror:\n\tVAR_10 = VAR_17;\n\tfree(VAR_4);\n\tif (VAR_7 != VAR_8 && VAR_7 >= 0)\n\t\tclose(VAR_7);\n\tVAR_17 = VAR_10;\n\n\treturn VAR_13;\n}",
  "func_graph_path_before": "linux-pam/031bb5a5d0d950253b68138b498dc93be69a64cb/pam_namespace.c/vul/before/0.json",
  "func": "static int protect_dir(const char *path, mode_t mode, int do_mkdir,\n\tstruct instance_data *idata)\n{\n\tchar *p = strdup(path);\n\tchar *d;\n\tchar *dir = p;\n\tint dfd = AT_FDCWD;\n\tint dfd_next;\n\tint save_errno;\n\tint flags = O_RDONLY | O_DIRECTORY;\n\tint rv = -1;\n\tstruct stat st;\n\n\tif (p == NULL) {\n\t\tgoto error;\n\t}\n\n\tif (*dir == '/') {\n\t\tdfd = open(\"/\", flags);\n\t\tif (dfd == -1) {\n\t\t\tgoto error;\n\t\t}\n\t\tdir++;\t/* assume / is safe */\n\t}\n\n\twhile ((d=strchr(dir, '/')) != NULL) {\n\t\t*d = '\\0';\n\t\tdfd_next = openat(dfd, dir, flags);\n\t\tif (dfd_next == -1) {\n\t\t\tgoto error;\n\t\t}\n\n\t\tif (dfd != AT_FDCWD)\n\t\t\tclose(dfd);\n\t\tdfd = dfd_next;\n\n\t\tif (fstat(dfd, &st) != 0) {\n\t\t\tgoto error;\n\t\t}\n\n\t\tif (flags & O_NOFOLLOW) {\n\t\t\t/* we are inside user-owned dir - protect */\n\t\t\tif (protect_mount(dfd, p, idata) == -1)\n\t\t\t\tgoto error;\n\t\t} else if (st.st_uid != 0 || st.st_gid != 0 ||\n\t\t\t(st.st_mode & S_IWOTH)) {\n\t\t\t/* do not follow symlinks on subdirectories */\n\t\t\tflags |= O_NOFOLLOW;\n\t\t}\n\n\t\t*d = '/';\n\t\tdir = d + 1;\n\t}\n\n\trv = openat(dfd, dir, flags);\n\n\tif (rv == -1) {\n\t\tif (!do_mkdir || mkdirat(dfd, dir, mode) != 0) {\n\t\t\tgoto error;\n\t\t}\n\t\trv = openat(dfd, dir, flags);\n\t}\n\n\tif (flags & O_NOFOLLOW) {\n\t\t/* we are inside user-owned dir - protect */\n\t\tif (protect_mount(rv, p, idata) == -1) {\n\t\t\tsave_errno = errno;\n\t\t\tclose(rv);\n\t\t\trv = -1;\n\t\t\terrno = save_errno;\n\t\t}\n\t}\n\nerror:\n\tsave_errno = errno;\n\tfree(p);\n\tif (dfd != AT_FDCWD && dfd >= 0)\n\t\tclose(dfd);\n\terrno = save_errno;\n\n\treturn rv;\n}",
  "abstract_func": "static int protect_dir(const char *VAR_0, mode_t VAR_1, int VAR_2,\n\tstruct instance_data *VAR_3)\n{\n\tchar *VAR_4 = strdup(VAR_0);\n\tchar *VAR_5;\n\tchar *VAR_6 = VAR_4;\n\tint VAR_7 = VAR_8;\n\tint VAR_9;\n\tint VAR_10;\n\tint VAR_11 = VAR_12 | VAR_13;\n\tint VAR_14 = -1;\n\tstruct stat VAR_15;\n\n\tif (VAR_4 == NULL) {\n\t\tgoto error;\n\t}\n\n\tif (*VAR_6 == '/') {\n\t\tVAR_7 = open(\"/\", VAR_11);\n\t\tif (VAR_7 == -1) {\n\t\t\tgoto error;\n\t\t}\n\t\tVAR_6++;\t/* COMMENT_0 */\n\t}\n\n\twhile ((VAR_5=strchr(VAR_6, '/')) != NULL) {\n\t\t*VAR_5 = '\\0';\n\t\tVAR_9 = openat(VAR_7, VAR_6, VAR_11);\n\t\tif (VAR_9 == -1) {\n\t\t\tgoto error;\n\t\t}\n\n\t\tif (VAR_7 != VAR_8)\n\t\t\tclose(VAR_7);\n\t\tVAR_7 = VAR_9;\n\n\t\tif (fstat(VAR_7, &VAR_15) != 0) {\n\t\t\tgoto error;\n\t\t}\n\n\t\tif (VAR_11 & VAR_16) {\n\t\t\t/* COMMENT_1 */\n\t\t\tif (protect_mount(VAR_7, VAR_4, VAR_3) == -1)\n\t\t\t\tgoto error;\n\t\t} else if (VAR_15.st_uid != 0 || VAR_15.st_gid != 0 ||\n\t\t\t(VAR_15.st_mode & VAR_17)) {\n\t\t\t/* COMMENT_2 */\n\t\t\tVAR_11 |= VAR_16;\n\t\t}\n\n\t\t*VAR_5 = '/';\n\t\tVAR_6 = VAR_5 + 1;\n\t}\n\n\tVAR_14 = openat(VAR_7, VAR_6, VAR_11);\n\n\tif (VAR_14 == -1) {\n\t\tif (!VAR_2 || mkdirat(VAR_7, VAR_6, VAR_1) != 0) {\n\t\t\tgoto error;\n\t\t}\n\t\tVAR_14 = openat(VAR_7, VAR_6, VAR_11);\n\t}\n\n\tif (VAR_11 & VAR_16) {\n\t\t/* COMMENT_1 */\n\t\tif (protect_mount(VAR_14, VAR_4, VAR_3) == -1) {\n\t\t\tVAR_10 = VAR_18;\n\t\t\tclose(VAR_14);\n\t\t\tVAR_14 = -1;\n\t\t\tVAR_18 = VAR_10;\n\t\t}\n\t}\n\nerror:\n\tVAR_10 = VAR_18;\n\tfree(VAR_4);\n\tif (VAR_7 != VAR_8 && VAR_7 >= 0)\n\t\tclose(VAR_7);\n\tVAR_18 = VAR_10;\n\n\treturn VAR_14;\n}",
  "func_graph_path": "linux-pam/031bb5a5d0d950253b68138b498dc93be69a64cb/pam_namespace.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,7 +7,7 @@\n \tint dfd = AT_FDCWD;\n \tint dfd_next;\n \tint save_errno;\n-\tint flags = O_RDONLY;\n+\tint flags = O_RDONLY | O_DIRECTORY;\n \tint rv = -1;\n \tstruct stat st;\n \n@@ -61,22 +61,6 @@\n \t\trv = openat(dfd, dir, flags);\n \t}\n \n-\tif (rv != -1) {\n-\t\tif (fstat(rv, &st) != 0) {\n-\t\t\tsave_errno = errno;\n-\t\t\tclose(rv);\n-\t\t\trv = -1;\n-\t\t\terrno = save_errno;\n-\t\t\tgoto error;\n-\t\t}\n-\t\tif (!S_ISDIR(st.st_mode)) {\n-\t\t\tclose(rv);\n-\t\t\terrno = ENOTDIR;\n-\t\t\trv = -1;\n-\t\t\tgoto error;\n-\t\t}\n-\t}\n-\n \tif (flags & O_NOFOLLOW) {\n \t\t/* we are inside user-owned dir - protect */\n \t\tif (protect_mount(rv, p, idata) == -1) {",
  "diff_line_info": {
    "deleted_lines": [
      "\tint flags = O_RDONLY;",
      "\tif (rv != -1) {",
      "\t\tif (fstat(rv, &st) != 0) {",
      "\t\t\tsave_errno = errno;",
      "\t\t\tclose(rv);",
      "\t\t\trv = -1;",
      "\t\t\terrno = save_errno;",
      "\t\t\tgoto error;",
      "\t\t}",
      "\t\tif (!S_ISDIR(st.st_mode)) {",
      "\t\t\tclose(rv);",
      "\t\t\terrno = ENOTDIR;",
      "\t\t\trv = -1;",
      "\t\t\tgoto error;",
      "\t\t}",
      "\t}",
      ""
    ],
    "added_lines": [
      "\tint flags = O_RDONLY | O_DIRECTORY;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/linux-pam/linux-pam/pull/732",
  "description": {
    "pr_info": {
      "title": "Prepare for 1.6.0 release",
      "number": 732
    },
    "comment": [
      "* configure.ac (AC_INIT): Raise version to 1.6.0.\r\n* po/Linux-PAM.pot (Project-Id-Version): Likewise.\r\n* NEWS: Update.\r\n\r\nResolves: https://github.com/linux-pam/linux-pam/issues/690"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 0.9"
}