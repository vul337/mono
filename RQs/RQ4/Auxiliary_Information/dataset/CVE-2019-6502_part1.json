{
  "cve_id": "CVE-2019-6502",
  "cwe_ids": [
    "CWE-401"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "OpenSC",
  "commit_msg": "Small memory leak fix (CVE-2019-6502 in #1586)\n\nCVE-2019-6502 was assigned to what appears to be a very minor\nmemory leak that only occurs on an error-case in a CLI tool.\nIf util_connect_card fails, we still need to release the sc\ncontext previously allocated by sc_context_create else memory\nwill leak.",
  "commit_hash": "0d7967549751b7032f22b437106b41444aff0ba9",
  "git_url": "https://github.com/OpenSC/OpenSC/commit/0d7967549751b7032f22b437106b41444aff0ba9",
  "file_path": "src/tools/eidenv.c",
  "func_name": "main",
  "func_before": "int main(int argc, char **argv)\n{\n\tsc_context_t *ctx = NULL;\n\tsc_context_param_t ctx_param;\n\tsc_card_t *card = NULL;\n\tint r;\n\n\t/* get options */\n\tdecode_options(argc, argv);\n\n\t/* connect to the card */\n\tmemset(&ctx_param, 0, sizeof(ctx_param));\n\tctx_param.ver      = 0;\n\tctx_param.app_name = app_name;\n\n\tr = sc_context_create(&ctx, &ctx_param);\n\tif (r) {\n\tfprintf(stderr, \"Failed to establish context: %s\\n\",\n\t\tsc_strerror(r));\n\t\treturn 1;\n\t}\n\tr = util_connect_card(ctx, &card, opt_reader, opt_wait, 0);\n\tif (r) {\n\t\tfprintf(stderr, \"Failed to connect to card: %s\\n\", sc_strerror(r));\n\t\treturn 1;\n\t}\n\n\t/* Check card type */\n\tif (card->type == SC_CARD_TYPE_MCRD_ESTEID_V30)\n\t\tdo_esteid(card);\n\telse if (card->type == SC_CARD_TYPE_BELPIC_EID)\n\t\tdo_belpic(card);\n\telse {\n\t\tfprintf(stderr, \"Not an EstEID or Belpic card!\\n\");\n\t\tgoto out;\n\t}\n\n\tif (exec_program) {\n\t\tchar *const largv[] = {exec_program, NULL};\n\t\tsc_unlock(card);\n\t\tsc_disconnect_card(card);\n\t\tsc_release_context(ctx);\n\t\texecv(exec_program, largv);\n\t\t/* we should not get here */\n\t\tperror(\"execv()\");\n\t\texit(1);\n\t}\n\nout:\n\tsc_unlock(card);\n\tsc_disconnect_card(card);\n\tsc_release_context(ctx);\n\texit(exit_status);\n}",
  "abstract_func_before": "int main(int VAR_0, char **VAR_1)\n{\n\tsc_context_t *VAR_2 = NULL;\n\tsc_context_param_t VAR_3;\n\tsc_card_t *VAR_4 = NULL;\n\tint VAR_5;\n\n\t/* COMMENT_0 */\n\tdecode_options(VAR_0, VAR_1);\n\n\t/* COMMENT_1 */\n\tmemset(&VAR_3, 0, sizeof(VAR_3));\n\tVAR_3.ver      = 0;\n\tVAR_3.app_name = VAR_6;\n\n\tVAR_5 = sc_context_create(&VAR_2, &VAR_3);\n\tif (VAR_5) {\n\tfprintf(VAR_7, \"Failed to establish context: %s\\n\",\n\t\tsc_strerror(VAR_5));\n\t\treturn 1;\n\t}\n\tVAR_5 = util_connect_card(VAR_2, &VAR_4, VAR_8, VAR_9, 0);\n\tif (VAR_5) {\n\t\tfprintf(VAR_7, \"Failed to connect to card: %s\\n\", sc_strerror(VAR_5));\n\t\treturn 1;\n\t}\n\n\t/* COMMENT_2 */\n\tif (VAR_4->type == VAR_10)\n\t\tdo_esteid(VAR_4);\n\telse if (VAR_4->type == VAR_11)\n\t\tdo_belpic(VAR_4);\n\telse {\n\t\tfprintf(VAR_7, \"Not an EstEID or Belpic card!\\n\");\n\t\tgoto out;\n\t}\n\n\tif (VAR_12) {\n\t\tchar *const VAR_13[] = {VAR_12, NULL};\n\t\tsc_unlock(VAR_4);\n\t\tsc_disconnect_card(VAR_4);\n\t\tsc_release_context(VAR_2);\n\t\texecv(VAR_12, VAR_13);\n\t\t/* COMMENT_3 */\n\t\tperror(\"execv()\");\n\t\texit(1);\n\t}\n\nout:\n\tsc_unlock(VAR_4);\n\tsc_disconnect_card(VAR_4);\n\tsc_release_context(VAR_2);\n\texit(VAR_14);\n}",
  "func_graph_path_before": "OpenSC/0d7967549751b7032f22b437106b41444aff0ba9/eidenv.c/vul/before/0.json",
  "func": "int main(int argc, char **argv)\n{\n\tsc_context_t *ctx = NULL;\n\tsc_context_param_t ctx_param;\n\tsc_card_t *card = NULL;\n\tint r;\n\n\t/* get options */\n\tdecode_options(argc, argv);\n\n\t/* connect to the card */\n\tmemset(&ctx_param, 0, sizeof(ctx_param));\n\tctx_param.ver      = 0;\n\tctx_param.app_name = app_name;\n\n\tr = sc_context_create(&ctx, &ctx_param);\n\tif (r) {\n\tfprintf(stderr, \"Failed to establish context: %s\\n\",\n\t\tsc_strerror(r));\n\t\treturn 1;\n\t}\n\tr = util_connect_card(ctx, &card, opt_reader, opt_wait, 0);\n\tif (r) {\n\t\tfprintf(stderr, \"Failed to connect to card: %s\\n\", sc_strerror(r));\n\t\tsc_release_context(ctx);\n\t\treturn 1;\n\t}\n\n\t/* Check card type */\n\tif (card->type == SC_CARD_TYPE_MCRD_ESTEID_V30)\n\t\tdo_esteid(card);\n\telse if (card->type == SC_CARD_TYPE_BELPIC_EID)\n\t\tdo_belpic(card);\n\telse {\n\t\tfprintf(stderr, \"Not an EstEID or Belpic card!\\n\");\n\t\tgoto out;\n\t}\n\n\tif (exec_program) {\n\t\tchar *const largv[] = {exec_program, NULL};\n\t\tsc_unlock(card);\n\t\tsc_disconnect_card(card);\n\t\tsc_release_context(ctx);\n\t\texecv(exec_program, largv);\n\t\t/* we should not get here */\n\t\tperror(\"execv()\");\n\t\texit(1);\n\t}\n\nout:\n\tsc_unlock(card);\n\tsc_disconnect_card(card);\n\tsc_release_context(ctx);\n\texit(exit_status);\n}",
  "abstract_func": "int main(int VAR_0, char **VAR_1)\n{\n\tsc_context_t *VAR_2 = NULL;\n\tsc_context_param_t VAR_3;\n\tsc_card_t *VAR_4 = NULL;\n\tint VAR_5;\n\n\t/* COMMENT_0 */\n\tdecode_options(VAR_0, VAR_1);\n\n\t/* COMMENT_1 */\n\tmemset(&VAR_3, 0, sizeof(VAR_3));\n\tVAR_3.ver      = 0;\n\tVAR_3.app_name = VAR_6;\n\n\tVAR_5 = sc_context_create(&VAR_2, &VAR_3);\n\tif (VAR_5) {\n\tfprintf(VAR_7, \"Failed to establish context: %s\\n\",\n\t\tsc_strerror(VAR_5));\n\t\treturn 1;\n\t}\n\tVAR_5 = util_connect_card(VAR_2, &VAR_4, VAR_8, VAR_9, 0);\n\tif (VAR_5) {\n\t\tfprintf(VAR_7, \"Failed to connect to card: %s\\n\", sc_strerror(VAR_5));\n\t\tsc_release_context(VAR_2);\n\t\treturn 1;\n\t}\n\n\t/* COMMENT_2 */\n\tif (VAR_4->type == VAR_10)\n\t\tdo_esteid(VAR_4);\n\telse if (VAR_4->type == VAR_11)\n\t\tdo_belpic(VAR_4);\n\telse {\n\t\tfprintf(VAR_7, \"Not an EstEID or Belpic card!\\n\");\n\t\tgoto out;\n\t}\n\n\tif (VAR_12) {\n\t\tchar *const VAR_13[] = {VAR_12, NULL};\n\t\tsc_unlock(VAR_4);\n\t\tsc_disconnect_card(VAR_4);\n\t\tsc_release_context(VAR_2);\n\t\texecv(VAR_12, VAR_13);\n\t\t/* COMMENT_3 */\n\t\tperror(\"execv()\");\n\t\texit(1);\n\t}\n\nout:\n\tsc_unlock(VAR_4);\n\tsc_disconnect_card(VAR_4);\n\tsc_release_context(VAR_2);\n\texit(VAR_14);\n}",
  "func_graph_path": "OpenSC/0d7967549751b7032f22b437106b41444aff0ba9/eidenv.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -22,6 +22,7 @@\n \tr = util_connect_card(ctx, &card, opt_reader, opt_wait, 0);\n \tif (r) {\n \t\tfprintf(stderr, \"Failed to connect to card: %s\\n\", sc_strerror(r));\n+\t\tsc_release_context(ctx);\n \t\treturn 1;\n \t}\n ",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\t\tsc_release_context(ctx);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/OpenSC/OpenSC/pull/1616",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/OpenSC/OpenSC/pull/1616: 403 Client Error: Forbidden for url: https://api.github.com/repos/OpenSC/OpenSC/pulls/1616",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0\n\nThe patch explicitly references a CVE (CVE-2019-6502), indicating a security fix. The code change adds `sc_release_context` to prevent a memory leak, aligning perfectly with the commit message and vulnerability description. This clearly addresses a security issue, so it's classified as a security fix with high confidence."
}