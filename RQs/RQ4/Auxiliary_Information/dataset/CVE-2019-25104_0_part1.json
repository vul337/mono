{
  "cve_id": "CVE-2019-25104",
  "cwe_ids": [
    "CWE-404"
  ],
  "cvss_vector": "AV:A/AC:L/Au:S/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "rtcwcoop",
  "commit_msg": "fixed exploit where server crash by spamming team command\n\n********************\nERROR: G_Alloc: failed on allocation of 27248 bytes\n********************\n----- Server Shutdown (Server crashed: G_Alloc: failed on allocation of 27248 bytes) -----\n\nreplaced G_Alloc -> trap_Alloc\n\nanyway POOLSIZE for G_Alloc will fill up quickly just changing team in game menu",
  "commit_hash": "f2cd18bc2e1cbca8c4b78bee9c392272bd5f42ac",
  "git_url": "https://github.com/rtcwcoop/rtcwcoop/commit/f2cd18bc2e1cbca8c4b78bee9c392272bd5f42ac",
  "file_path": "code/game/ai_cast_script.c",
  "func_name": "AICast_ScriptLoad",
  "func_before": "void AICast_ScriptLoad( void ) {\n\tchar filename[MAX_QPATH];\n\tvmCvar_t mapname;\n\tfileHandle_t f;\n\tint len;\n\n\tlevel.scriptAI = NULL;\n\n\ttrap_Cvar_VariableStringBuffer( \"ai_scriptName\", filename, sizeof( filename ) );\n\tif ( strlen( filename ) > 0 ) {\n\t\ttrap_Cvar_Register( &mapname, \"ai_scriptName\", \"\", CVAR_ROM );\n\t} else {\n\t\ttrap_Cvar_Register( &mapname, \"mapname\", \"\", CVAR_SERVERINFO | CVAR_ROM );\n\t}\n\tQ_strncpyz( filename, \"maps/\", sizeof( filename ) );\n\tQ_strcat( filename, sizeof( filename ), mapname.string );\n\tif ( g_gametype.integer <= GT_COOP ) {\n\t\tQ_strcat( filename, sizeof( filename ), \".coop.ai\" );\n\t} else {\n\t\tQ_strcat( filename, sizeof( filename ), \".ai\" );\n\t}\n\n\tlen = trap_FS_FOpenFile( filename, &f, FS_READ );\n\n\tG_Printf( \"Loading: %s\\n\", filename );\n\n\tif ( len < 0 ) {\n\t\treturn;\n\t}\n\n\tlevel.scriptAI = G_Alloc( len );\n\ttrap_FS_Read( level.scriptAI, len, f );\n\n\ttrap_FS_FCloseFile( f );\n\n\treturn;\n}",
  "abstract_func_before": "void AICast_ScriptLoad( void ) {\n\tchar VAR_0[VAR_1];\n\tvmCvar_t VAR_2;\n\tfileHandle_t VAR_3;\n\tint VAR_4;\n\n\tVAR_5.scriptAI = NULL;\n\n\ttrap_Cvar_VariableStringBuffer( \"ai_scriptName\", VAR_0, sizeof( VAR_0 ) );\n\tif ( strlen( VAR_0 ) > 0 ) {\n\t\ttrap_Cvar_Register( &VAR_2, \"ai_scriptName\", \"\", VAR_6 );\n\t} else {\n\t\ttrap_Cvar_Register( &VAR_2, \"mapname\", \"\", VAR_7 | VAR_6 );\n\t}\n\tQ_strncpyz( VAR_0, \"maps/\", sizeof( VAR_0 ) );\n\tQ_strcat( VAR_0, sizeof( VAR_0 ), VAR_2.string );\n\tif ( VAR_8.integer <= VAR_9 ) {\n\t\tQ_strcat( VAR_0, sizeof( VAR_0 ), \".coop.ai\" );\n\t} else {\n\t\tQ_strcat( VAR_0, sizeof( VAR_0 ), \".ai\" );\n\t}\n\n\tVAR_4 = trap_FS_FOpenFile( VAR_0, &VAR_3, VAR_10 );\n\n\tG_Printf( \"Loading: %s\\n\", VAR_0 );\n\n\tif ( VAR_4 < 0 ) {\n\t\treturn;\n\t}\n\n\tVAR_5.scriptAI = G_Alloc( VAR_4 );\n\ttrap_FS_Read( VAR_5.scriptAI, VAR_4, VAR_3 );\n\n\ttrap_FS_FCloseFile( VAR_3 );\n\n\treturn;\n}",
  "func_graph_path_before": "rtcwcoop/f2cd18bc2e1cbca8c4b78bee9c392272bd5f42ac/ai_cast_script.c/vul/before/1.json",
  "func": "void AICast_ScriptLoad( void ) {\n\tchar filename[MAX_QPATH];\n\tvmCvar_t mapname;\n\tfileHandle_t f;\n\tint len;\n\n\tlevel.scriptAI = NULL;\n\n\ttrap_Cvar_VariableStringBuffer( \"ai_scriptName\", filename, sizeof( filename ) );\n\tif ( strlen( filename ) > 0 ) {\n\t\ttrap_Cvar_Register( &mapname, \"ai_scriptName\", \"\", CVAR_ROM );\n\t} else {\n\t\ttrap_Cvar_Register( &mapname, \"mapname\", \"\", CVAR_SERVERINFO | CVAR_ROM );\n\t}\n\tQ_strncpyz( filename, \"maps/\", sizeof( filename ) );\n\tQ_strcat( filename, sizeof( filename ), mapname.string );\n\tif ( g_gametype.integer <= GT_COOP ) {\n\t\tQ_strcat( filename, sizeof( filename ), \".coop.ai\" );\n\t} else {\n\t\tQ_strcat( filename, sizeof( filename ), \".ai\" );\n\t}\n\n\tlen = trap_FS_FOpenFile( filename, &f, FS_READ );\n\n\tG_Printf( \"Loading: %s\\n\", filename );\n\n\tif ( len < 0 ) {\n\t\treturn;\n\t}\n\n\tlevel.scriptAI = trap_Alloc( len );\n\ttrap_FS_Read( level.scriptAI, len, f );\n\n\ttrap_FS_FCloseFile( f );\n\n\treturn;\n}",
  "abstract_func": "void AICast_ScriptLoad( void ) {\n\tchar VAR_0[VAR_1];\n\tvmCvar_t VAR_2;\n\tfileHandle_t VAR_3;\n\tint VAR_4;\n\n\tVAR_5.scriptAI = NULL;\n\n\ttrap_Cvar_VariableStringBuffer( \"ai_scriptName\", VAR_0, sizeof( VAR_0 ) );\n\tif ( strlen( VAR_0 ) > 0 ) {\n\t\ttrap_Cvar_Register( &VAR_2, \"ai_scriptName\", \"\", VAR_6 );\n\t} else {\n\t\ttrap_Cvar_Register( &VAR_2, \"mapname\", \"\", VAR_7 | VAR_6 );\n\t}\n\tQ_strncpyz( VAR_0, \"maps/\", sizeof( VAR_0 ) );\n\tQ_strcat( VAR_0, sizeof( VAR_0 ), VAR_2.string );\n\tif ( VAR_8.integer <= VAR_9 ) {\n\t\tQ_strcat( VAR_0, sizeof( VAR_0 ), \".coop.ai\" );\n\t} else {\n\t\tQ_strcat( VAR_0, sizeof( VAR_0 ), \".ai\" );\n\t}\n\n\tVAR_4 = trap_FS_FOpenFile( VAR_0, &VAR_3, VAR_10 );\n\n\tG_Printf( \"Loading: %s\\n\", VAR_0 );\n\n\tif ( VAR_4 < 0 ) {\n\t\treturn;\n\t}\n\n\tVAR_5.scriptAI = trap_Alloc( VAR_4 );\n\ttrap_FS_Read( VAR_5.scriptAI, VAR_4, VAR_3 );\n\n\ttrap_FS_FCloseFile( VAR_3 );\n\n\treturn;\n}",
  "func_graph_path": "rtcwcoop/f2cd18bc2e1cbca8c4b78bee9c392272bd5f42ac/ai_cast_script.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -28,7 +28,7 @@\n \t\treturn;\n \t}\n \n-\tlevel.scriptAI = G_Alloc( len );\n+\tlevel.scriptAI = trap_Alloc( len );\n \ttrap_FS_Read( level.scriptAI, len, f );\n \n \ttrap_FS_FCloseFile( f );",
  "diff_line_info": {
    "deleted_lines": [
      "\tlevel.scriptAI = G_Alloc( len );"
    ],
    "added_lines": [
      "\tlevel.scriptAI = trap_Alloc( len );"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/rtcwcoop/rtcwcoop/pull/45",
  "description": {
    "pr_info": {
      "title": "fixed exploit where server crash by spamming team command",
      "number": 45
    },
    "comment": [
      "********************\r\nERROR: G_Alloc: failed on allocation of 27248 bytes\r\n********************\r\n----- Server Shutdown (Server crashed: G_Alloc: failed on allocation of 27248 bytes) -----\r\n\r\nreplaced G_Alloc -> trap_Alloc\r\n\r\nanyway POOLSIZE for G_Alloc will fill up quickly just by changing team in game menu",
      "CVE-2019-25104 was apparently assigned for this denial of service."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0\n\nThe patch addresses a server crash exploit by modifying memory allocation, which is a critical security fix."
}