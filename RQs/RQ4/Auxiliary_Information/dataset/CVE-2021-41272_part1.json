{
  "cve_id": "CVE-2021-41272",
  "cwe_ids": [
    "CWE-681"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "hyperledger/besu",
  "commit_msg": "Shift Optimization (#3039)\n\nReduce shift calculations to shifts that may have an actual result.\r\n\r\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>",
  "commit_hash": "4170524ac3b45185704fcfbdeeb71b0b05dfa0a1",
  "git_url": "https://github.com/hyperledger/besu/commit/4170524ac3b45185704fcfbdeeb71b0b05dfa0a1",
  "file_path": "evm/src/main/java/org/hyperledger/besu/evm/operation/SarOperation.java",
  "func_name": "executeFixedCostOperation",
  "func_before": "@Override\n  public Operation.OperationResult executeFixedCostOperation(\n      final MessageFrame frame, final EVM evm) {\n\n    Bytes shiftAmount = frame.popStackItem();\n    final Bytes value = leftPad(frame.popStackItem());\n    final boolean negativeNumber = value.get(0) < 0;\n    if (shiftAmount.size() > 4 && (shiftAmount = shiftAmount.trimLeadingZeros()).size() > 4) {\n      frame.pushStackItem(negativeNumber ? ALL_BITS : UInt256.ZERO);\n    } else {\n      final int shiftAmountInt = shiftAmount.toInt();\n\n      if (shiftAmountInt >= 256) {\n        frame.pushStackItem(negativeNumber ? ALL_BITS : UInt256.ZERO);\n      } else {\n        // first perform standard shift right.\n        Bytes result = value.shiftRight(shiftAmountInt);\n\n        // if a negative number, carry through the sign.\n        if (negativeNumber) {\n          final Bytes32 significantBits = ALL_BITS.shiftLeft(256 - shiftAmountInt);\n          result = result.or(significantBits);\n        }\n        frame.pushStackItem(result);\n      }\n    }\n    return successResponse;\n  }",
  "abstract_func_before": "@Override\n  public Operation.OperationResult executeFixedCostOperation(\n      final MessageFrame VAR_0, final EVM VAR_1) {\n\n    Bytes VAR_2 = VAR_0.popStackItem();\n    final Bytes VAR_3 = leftPad(VAR_0.popStackItem());\n    final boolean VAR_4 = VAR_3.get(0) < 0;\n    if (VAR_2.size() > 4 && (VAR_2 = VAR_2.trimLeadingZeros()).size() > 4) {\n      VAR_0.pushStackItem(VAR_4 ? VAR_5 : VAR_6.ZERO);\n    } else {\n      final int VAR_7 = VAR_2.toInt();\n\n      if (VAR_7 >= 256) {\n        VAR_0.pushStackItem(VAR_4 ? VAR_5 : VAR_6.ZERO);\n      } else {\n        /* COMMENT_0 */\n        Bytes VAR_8 = VAR_3.shiftRight(VAR_7);\n\n        /* COMMENT_1 */\n        if (VAR_4) {\n          final Bytes32 VAR_9 = VAR_5.shiftLeft(256 - VAR_7);\n          VAR_8 = VAR_8.or(VAR_9);\n        }\n        VAR_0.pushStackItem(VAR_8);\n      }\n    }\n    return VAR_10;\n  }",
  "func_graph_path_before": "hyperledger/besu/4170524ac3b45185704fcfbdeeb71b0b05dfa0a1/SarOperation.java/vul/before/0.json",
  "func": "@Override\n  public Operation.OperationResult executeFixedCostOperation(\n      final MessageFrame frame, final EVM evm) {\n\n    Bytes shiftAmount = frame.popStackItem();\n    final Bytes value = leftPad(frame.popStackItem());\n    final boolean negativeNumber = value.get(0) < 0;\n    if (shiftAmount.size() > 4 && (shiftAmount = shiftAmount.trimLeadingZeros()).size() > 4) {\n      frame.pushStackItem(negativeNumber ? ALL_BITS : UInt256.ZERO);\n    } else {\n      final int shiftAmountInt = shiftAmount.toInt();\n\n      if (shiftAmountInt >= 256 || shiftAmountInt < 0) {\n        frame.pushStackItem(negativeNumber ? ALL_BITS : UInt256.ZERO);\n      } else {\n        // first perform standard shift right.\n        Bytes result = value.shiftRight(shiftAmountInt);\n\n        // if a negative number, carry through the sign.\n        if (negativeNumber) {\n          final Bytes32 significantBits = ALL_BITS.shiftLeft(256 - shiftAmountInt);\n          result = result.or(significantBits);\n        }\n        frame.pushStackItem(result);\n      }\n    }\n    return successResponse;\n  }",
  "abstract_func": "@Override\n  public Operation.OperationResult executeFixedCostOperation(\n      final MessageFrame VAR_0, final EVM VAR_1) {\n\n    Bytes VAR_2 = VAR_0.popStackItem();\n    final Bytes VAR_3 = leftPad(VAR_0.popStackItem());\n    final boolean VAR_4 = VAR_3.get(0) < 0;\n    if (VAR_2.size() > 4 && (VAR_2 = VAR_2.trimLeadingZeros()).size() > 4) {\n      VAR_0.pushStackItem(VAR_4 ? VAR_5 : VAR_6.ZERO);\n    } else {\n      final int VAR_7 = VAR_2.toInt();\n\n      if (VAR_7 >= 256 || VAR_7 < 0) {\n        VAR_0.pushStackItem(VAR_4 ? VAR_5 : VAR_6.ZERO);\n      } else {\n        /* COMMENT_0 */\n        Bytes VAR_8 = VAR_3.shiftRight(VAR_7);\n\n        /* COMMENT_1 */\n        if (VAR_4) {\n          final Bytes32 VAR_9 = VAR_5.shiftLeft(256 - VAR_7);\n          VAR_8 = VAR_8.or(VAR_9);\n        }\n        VAR_0.pushStackItem(VAR_8);\n      }\n    }\n    return VAR_10;\n  }",
  "func_graph_path": "hyperledger/besu/4170524ac3b45185704fcfbdeeb71b0b05dfa0a1/SarOperation.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -10,7 +10,7 @@\n     } else {\n       final int shiftAmountInt = shiftAmount.toInt();\n \n-      if (shiftAmountInt >= 256) {\n+      if (shiftAmountInt >= 256 || shiftAmountInt < 0) {\n         frame.pushStackItem(negativeNumber ? ALL_BITS : UInt256.ZERO);\n       } else {\n         // first perform standard shift right.",
  "diff_line_info": {
    "deleted_lines": [
      "      if (shiftAmountInt >= 256) {"
    ],
    "added_lines": [
      "      if (shiftAmountInt >= 256 || shiftAmountInt < 0) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/hyperledger/besu/pull/3039",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/hyperledger/besu/pull/3039: 403 Client Error: Forbidden for url: https://api.github.com/repos/hyperledger/besu/pulls/3039",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.7"
}