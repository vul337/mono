{
  "cve_id": "CVE-2020-7226",
  "cwe_ids": [
    "CWE-770"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "vt-middleware/cryptacular",
  "commit_msg": "Define new ciphertext header format.\n\nNew format does not allocate any memory until HMAC check passes, which\nguards against untrusted input. All encryption components have been\nupdated to use the new header, while preserving backward compatibility\nto decrypt messages encrypted with the old format. The decoding process\nfor the old header has been hardened to impose reasonable limits on header\nfields: nonce sizes up to 255 bytes, key names up to 500 bytes.\n\nFixes #52.",
  "commit_hash": "8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
  "git_url": "https://github.com/vt-middleware/cryptacular/commit/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
  "file_path": "src/main/java/org/cryptacular/util/CipherUtil.java",
  "func_name": "decrypt",
  "func_before": "public static byte[] decrypt(final AEADBlockCipher cipher, final SecretKey key, final byte[] data)\n      throws CryptoException, EncodingException\n  {\n    final CiphertextHeader header = CiphertextHeader.decode(data);\n    final byte[] nonce = header.getNonce();\n    final byte[] hbytes = header.encode();\n    cipher.init(false, new AEADParameters(new KeyParameter(key.getEncoded()), MAC_SIZE_BITS, nonce, hbytes));\n    return decrypt(new AEADBlockCipherAdapter(cipher), data, header.getLength());\n  }",
  "abstract_func_before": "public static byte[] decrypt(final AEADBlockCipher VAR_0, final SecretKey VAR_1, final byte[] VAR_2)\n      throws CryptoException, EncodingException\n  {\n    final CiphertextHeader VAR_3 = VAR_4.decode(VAR_2);\n    final byte[] VAR_5 = VAR_3.getNonce();\n    final byte[] VAR_6 = VAR_3.encode();\n    VAR_0.init(false, new AEADParameters(new KeyParameter(VAR_1.getEncoded()), VAR_7, VAR_5, VAR_6));\n    return decrypt(new AEADBlockCipherAdapter(VAR_0), VAR_2, VAR_3.getLength());\n  }",
  "func_graph_path_before": "vt-middleware/cryptacular/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25/CipherUtil.java/vul/before/3.json",
  "func": "public static byte[] decrypt(final AEADBlockCipher cipher, final SecretKey key, final byte[] data)\n      throws CryptoException, EncodingException\n  {\n    final CiphertextHeader header = decodeHeader(data, String -> key);\n    final byte[] nonce = header.getNonce();\n    final byte[] hbytes = header.encode();\n    cipher.init(false, new AEADParameters(new KeyParameter(key.getEncoded()), MAC_SIZE_BITS, nonce, hbytes));\n    return decrypt(new AEADBlockCipherAdapter(cipher), data, header.getLength());\n  }",
  "abstract_func": "public static byte[] decrypt(final AEADBlockCipher VAR_0, final SecretKey VAR_1, final byte[] VAR_2)\n      throws CryptoException, EncodingException\n  {\n    final CiphertextHeader VAR_3 = decodeHeader(VAR_2, VAR_4 -> VAR_1);\n    final byte[] VAR_5 = VAR_3.getNonce();\n    final byte[] VAR_6 = VAR_3.encode();\n    VAR_0.init(false, new AEADParameters(new KeyParameter(VAR_1.getEncoded()), VAR_7, VAR_5, VAR_6));\n    return decrypt(new AEADBlockCipherAdapter(VAR_0), VAR_2, VAR_3.getLength());\n  }",
  "func_graph_path": "vt-middleware/cryptacular/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25/CipherUtil.java/vul/after/3.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,7 @@\n public static byte[] decrypt(final AEADBlockCipher cipher, final SecretKey key, final byte[] data)\n       throws CryptoException, EncodingException\n   {\n-    final CiphertextHeader header = CiphertextHeader.decode(data);\n+    final CiphertextHeader header = decodeHeader(data, String -> key);\n     final byte[] nonce = header.getNonce();\n     final byte[] hbytes = header.encode();\n     cipher.init(false, new AEADParameters(new KeyParameter(key.getEncoded()), MAC_SIZE_BITS, nonce, hbytes));",
  "diff_line_info": {
    "deleted_lines": [
      "    final CiphertextHeader header = CiphertextHeader.decode(data);"
    ],
    "added_lines": [
      "    final CiphertextHeader header = decodeHeader(data, String -> key);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/vt-middleware/cryptacular/pull/53",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/vt-middleware/cryptacular/pull/53: 403 Client Error: Forbidden for url: https://api.github.com/repos/vt-middleware/cryptacular/pulls/53",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 0.9\n\nThe commit address improves security by guarding against untrusted input through delayed memory allocation and input validation, aligning with known security fix patterns."
}