{
  "cve_id": "CVE-2017-11728",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "libming",
  "commit_msg": "Fix various overflows in OpCode and readBytes\n\n* OpCode: Add a check to avoid reading the stack when n < 1\n\n    In this case, print a debug warning and return error code -998\n\n* readBytes: When size < 0, set it to zero (don't read anything)\n\nThis commit fixes CVE-2017-11728 (Fixes #82), CVE-2017-11729 (Fixes #79),\nCVE-2017-11730 (Fixes #81) and CVE-2017-11731 (Fixes #84).",
  "commit_hash": "2027b24f403a859016a70bbdc79a8da1d6f128eb",
  "git_url": "https://github.com/libming/libming/commit/2027b24f403a859016a70bbdc79a8da1d6f128eb",
  "file_path": "util/read.c",
  "func_name": "readBytes",
  "func_before": "char *readBytes(FILE *f,int size)\n{\n  int i;\n  char *buf;\n\n  buf = (char *)malloc(sizeof(char)*size);\n\n  for(i=0;i<size;i++)\n  {\n    buf[i]=(char)readUInt8(f);\n  }\n\n  return buf;\n}",
  "abstract_func_before": "char *readBytes(FILE *VAR_0,int VAR_1)\n{\n  int VAR_2;\n  char *VAR_3;\n\n  VAR_3 = (char *)malloc(sizeof(char)*VAR_1);\n\n  for(VAR_2=0;VAR_2<VAR_1;VAR_2++)\n  {\n    VAR_3[VAR_2]=(char)readUInt8(VAR_0);\n  }\n\n  return VAR_3;\n}",
  "func_graph_path_before": "libming/2027b24f403a859016a70bbdc79a8da1d6f128eb/read.c/vul/before/0.json",
  "func": "char *readBytes(FILE *f,int size)\n{\n\n  if (size < 1) {\n#if DEBUG\n    SWF_warn(\"readBytes: want to read %i < 1 bytes: Handling a 0\\n\", size);\n#endif\n    size = 0;\n  }\n\n  int i;\n  char *buf;\n\n  buf = (char *)malloc(sizeof(char)*size);\n\n  for(i=0;i<size;i++)\n  {\n    buf[i]=(char)readUInt8(f);\n  }\n\n  return buf;\n}",
  "abstract_func": "char *readBytes(FILE *VAR_0,int VAR_1)\n{\n\n  if (VAR_1 < 1) {\n#if VAR_2\n    SWF_warn(\"readBytes: want to read %i < 1 bytes: Handling a 0\\n\", VAR_1);\n#endif\n    VAR_1 = 0;\n  }\n\n  int VAR_3;\n  char *VAR_4;\n\n  VAR_4 = (char *)malloc(sizeof(char)*VAR_1);\n\n  for(VAR_3=0;VAR_3<VAR_1;VAR_3++)\n  {\n    VAR_4[VAR_3]=(char)readUInt8(VAR_0);\n  }\n\n  return VAR_4;\n}",
  "func_graph_path": "libming/2027b24f403a859016a70bbdc79a8da1d6f128eb/read.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,13 @@\n char *readBytes(FILE *f,int size)\n {\n+\n+  if (size < 1) {\n+#if DEBUG\n+    SWF_warn(\"readBytes: want to read %i < 1 bytes: Handling a 0\\n\", size);\n+#endif\n+    size = 0;\n+  }\n+\n   int i;\n   char *buf;\n ",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "",
      "  if (size < 1) {",
      "#if DEBUG",
      "    SWF_warn(\"readBytes: want to read %i < 1 bytes: Handling a 0\\n\", size);",
      "#endif",
      "    size = 0;",
      "  }",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libming/libming/pull/89",
  "description": {
    "pr_info": {
      "title": "Fix various overflows in OpCode and readBytes",
      "number": 89
    },
    "comment": [
      "* _OpCode_: Add a check to avoid reading the stack when n < 1.\r\n  In this case, print a debug warning and return error code -998\r\n\r\n* _readBytes_: When size < 0, set it to zero (don't read anything) and print a warning\r\n\r\nThis commit fixes CVE-2017-117{28,29,30} (#82, #81 and #79).",
      "Applying this patch will also fix CVE-2017-11731 (#84) :+1: ",
      "Would you mind including \"Fixes #xx\" \"Fixes #yy\" etc. in the commit log so the relevant tickets are automatically closed on merge ? Also please add an entry in the NEWS file so there's nothing else for me to do other than merging :)\r\n\r\nThanks! ",
      "> ￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼Would you mind including \"Fixes #xx\" \"Fixes #yy\" etc. in the commit log so the relevant tickets are automatically closed on merge ? Also please add an entry in the NEWS file so there's nothing else for me to do other than merging :)\r\n\r\nCommit updated :)",
      "Thanks !"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}