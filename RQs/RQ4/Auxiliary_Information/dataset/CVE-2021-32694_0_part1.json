{
  "cve_id": "CVE-2021-32694",
  "cwe_ids": [
    "CWE-248"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "nextcloud/android",
  "commit_msg": "Do not crash if wrong deep login url is used\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>",
  "commit_hash": "9343bdd85d70625a90e0c952897957a102c2421b",
  "git_url": "https://github.com/nextcloud/android/commit/9343bdd85d70625a90e0c952897957a102c2421b",
  "file_path": "src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java",
  "func_name": "onServiceConnected",
  "func_before": "@Override\n        public void onServiceConnected(ComponentName component, IBinder service) {\n            if (component.equals(\n                new ComponentName(AuthenticatorActivity.this, OperationsService.class)\n            )) {\n                mOperationsServiceBinder = (OperationsServiceBinder) service;\n\n                Uri data = getIntent().getData();\n                if (data != null && data.toString().startsWith(getString(R.string.login_data_own_scheme))) {\n                    String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n                    LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());\n\n                    try {\n                        mServerInfo.mBaseUrl = AuthenticatorUrlUtils.normalizeUrlSuffix(loginUrlInfo.serverAddress);\n                        webViewUser = loginUrlInfo.username;\n                        webViewPassword = loginUrlInfo.password;\n                        doOnResumeAndBound();\n                        checkOcServer();\n                    } catch (Exception e) {\n                        mServerStatusIcon = R.drawable.ic_alert;\n                        mServerStatusText = getString(R.string.qr_could_not_be_read);\n                        showServerStatus();\n                    }\n                } else {\n                    doOnResumeAndBound();\n                }\n            }\n        }",
  "abstract_func_before": "@Override\n        public void onServiceConnected(ComponentName VAR_0, IBinder VAR_1) {\n            if (VAR_0.equals(\n                new ComponentName(VAR_2.this, OperationsService.class)\n            )) {\n                VAR_3 = (OperationsServiceBinder) VAR_1;\n\n                Uri VAR_4 = getIntent().getData();\n                if (VAR_4 != null && VAR_4.toString().startsWith(getString(VAR_5.string.login_data_own_scheme))) {\n                    String VAR_6 = getString(VAR_5.string.login_data_own_scheme) + VAR_7 + \"login/\";\n                    LoginUrlInfo VAR_8 = parseLoginDataUrl(VAR_6, VAR_4.toString());\n\n                    try {\n                        VAR_9.mBaseUrl = VAR_10.normalizeUrlSuffix(VAR_8.serverAddress);\n                        VAR_11 = VAR_8.username;\n                        VAR_12 = VAR_8.password;\n                        doOnResumeAndBound();\n                        checkOcServer();\n                    } catch (Exception VAR_13) {\n                        VAR_14 = VAR_5.drawable.ic_alert;\n                        VAR_15 = getString(VAR_5.string.qr_could_not_be_read);\n                        showServerStatus();\n                    }\n                } else {\n                    doOnResumeAndBound();\n                }\n            }\n        }",
  "func_graph_path_before": "nextcloud/android/9343bdd85d70625a90e0c952897957a102c2421b/AuthenticatorActivity.java/vul/before/1.json",
  "func": "@Override\n        public void onServiceConnected(ComponentName component, IBinder service) {\n            if (component.equals(\n                new ComponentName(AuthenticatorActivity.this, OperationsService.class)\n            )) {\n                mOperationsServiceBinder = (OperationsServiceBinder) service;\n\n                Uri data = getIntent().getData();\n                if (data != null && data.toString().startsWith(getString(R.string.login_data_own_scheme))) {\n                    try {\n                        String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n                        LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());\n\n                        mServerInfo.mBaseUrl = AuthenticatorUrlUtils.normalizeUrlSuffix(loginUrlInfo.serverAddress);\n                        webViewUser = loginUrlInfo.username;\n                        webViewPassword = loginUrlInfo.password;\n                        doOnResumeAndBound();\n                        checkOcServer();\n                    } catch (Exception e) {\n                        mServerStatusIcon = R.drawable.ic_alert;\n                        mServerStatusText = getString(R.string.qr_could_not_be_read);\n                        showServerStatus();\n                    }\n                } else {\n                    doOnResumeAndBound();\n                }\n            }\n        }",
  "abstract_func": "@Override\n        public void onServiceConnected(ComponentName VAR_0, IBinder VAR_1) {\n            if (VAR_0.equals(\n                new ComponentName(VAR_2.this, OperationsService.class)\n            )) {\n                VAR_3 = (OperationsServiceBinder) VAR_1;\n\n                Uri VAR_4 = getIntent().getData();\n                if (VAR_4 != null && VAR_4.toString().startsWith(getString(VAR_5.string.login_data_own_scheme))) {\n                    try {\n                        String VAR_6 = getString(VAR_5.string.login_data_own_scheme) + VAR_7 + \"login/\";\n                        LoginUrlInfo VAR_8 = parseLoginDataUrl(VAR_6, VAR_4.toString());\n\n                        VAR_9.mBaseUrl = VAR_10.normalizeUrlSuffix(VAR_8.serverAddress);\n                        VAR_11 = VAR_8.username;\n                        VAR_12 = VAR_8.password;\n                        doOnResumeAndBound();\n                        checkOcServer();\n                    } catch (Exception VAR_13) {\n                        VAR_14 = VAR_5.drawable.ic_alert;\n                        VAR_15 = getString(VAR_5.string.qr_could_not_be_read);\n                        showServerStatus();\n                    }\n                } else {\n                    doOnResumeAndBound();\n                }\n            }\n        }",
  "func_graph_path": "nextcloud/android/9343bdd85d70625a90e0c952897957a102c2421b/AuthenticatorActivity.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,10 +7,10 @@\n \n                 Uri data = getIntent().getData();\n                 if (data != null && data.toString().startsWith(getString(R.string.login_data_own_scheme))) {\n-                    String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n-                    LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());\n+                    try {\n+                        String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n+                        LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());\n \n-                    try {\n                         mServerInfo.mBaseUrl = AuthenticatorUrlUtils.normalizeUrlSuffix(loginUrlInfo.serverAddress);\n                         webViewUser = loginUrlInfo.username;\n                         webViewPassword = loginUrlInfo.password;",
  "diff_line_info": {
    "deleted_lines": [
      "                    String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";",
      "                    LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());",
      "                    try {"
    ],
    "added_lines": [
      "                    try {",
      "                        String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";",
      "                        LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/nextcloud/android/pull/7919",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/nextcloud/android/pull/7919: 403 Client Error: Forbidden for url: https://api.github.com/repos/nextcloud/android/pulls/7919",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.9"
}