{
  "cve_id": "CVE-2024-23322",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "envoyproxy/envoy",
  "commit_msg": "Fix crash when idle and request per try timeouts occur within backoff interval\n\nFix [CVE-2024-23322](https://github.com/envoyproxy/envoy/security/advisories/GHSA-6p83-mfmh-qv38)\n\nSigned-off-by: Yan Avlasov <yavlasov@google.com>\nSigned-off-by: Ryan Northey <ryan@synca.io>\n\nSigned-off-by: yanavlasov <yavlasov@google.com>",
  "commit_hash": "843f9e6a123ed47ce139b421c14e7126f2ac685e",
  "git_url": "https://github.com/envoyproxy/envoy/commit/843f9e6a123ed47ce139b421c14e7126f2ac685e",
  "file_path": "source/common/router/upstream_request.cc",
  "func_name": "UpstreamRequest::onPerTryIdleTimeout",
  "func_before": "void UpstreamRequest::onPerTryIdleTimeout() {\n  ENVOY_STREAM_LOG(debug, \"upstream per try idle timeout\", *parent_.callbacks());\n  stream_info_.setResponseFlag(StreamInfo::CoreResponseFlag::StreamIdleTimeout);\n  parent_.onPerTryIdleTimeout(*this);\n}",
  "abstract_func_before": "void UpstreamRequest::onPerTryIdleTimeout() {\n  ENVOY_STREAM_LOG(VAR_0, \"upstream per try idle timeout\", *VAR_1.callbacks());\n  VAR_2.setResponseFlag(StreamInfo::CoreResponseFlag::StreamIdleTimeout);\n  VAR_1.onPerTryIdleTimeout(*this);\n}",
  "func_graph_path_before": "envoyproxy/envoy/843f9e6a123ed47ce139b421c14e7126f2ac685e/upstream_request.cc/vul/before/1.json",
  "func": "void UpstreamRequest::onPerTryIdleTimeout() {\n  ENVOY_STREAM_LOG(debug, \"upstream per try idle timeout\", *parent_.callbacks());\n  if (per_try_timeout_) {\n    // Disable the per try idle timer, so it does not trigger further retries\n    per_try_timeout_->disableTimer();\n  }\n  stream_info_.setResponseFlag(StreamInfo::CoreResponseFlag::StreamIdleTimeout);\n  parent_.onPerTryIdleTimeout(*this);\n}",
  "abstract_func": "void UpstreamRequest::onPerTryIdleTimeout() {\n  ENVOY_STREAM_LOG(VAR_0, \"upstream per try idle timeout\", *VAR_1.callbacks());\n  if (VAR_2) {\n    /* COMMENT_0 */\n    VAR_2->disableTimer();\n  }\n  VAR_3.setResponseFlag(StreamInfo::CoreResponseFlag::StreamIdleTimeout);\n  VAR_1.onPerTryIdleTimeout(*this);\n}",
  "func_graph_path": "envoyproxy/envoy/843f9e6a123ed47ce139b421c14e7126f2ac685e/upstream_request.cc/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,9 @@\n void UpstreamRequest::onPerTryIdleTimeout() {\n   ENVOY_STREAM_LOG(debug, \"upstream per try idle timeout\", *parent_.callbacks());\n+  if (per_try_timeout_) {\n+    // Disable the per try idle timer, so it does not trigger further retries\n+    per_try_timeout_->disableTimer();\n+  }\n   stream_info_.setResponseFlag(StreamInfo::CoreResponseFlag::StreamIdleTimeout);\n   parent_.onPerTryIdleTimeout(*this);\n }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "  if (per_try_timeout_) {",
      "    // Disable the per try idle timer, so it does not trigger further retries",
      "    per_try_timeout_->disableTimer();",
      "  }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/envoyproxy/envoy/pull/32300",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/envoyproxy/envoy/pull/32300: 403 Client Error: Forbidden for url: https://api.github.com/repos/envoyproxy/envoy/pulls/32300",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}