{
  "cve_id": "CVE-2023-31490",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "FRRouting/frr",
  "commit_msg": "bgpd: Ensure stream received has enough data\n\nBGP_PREFIX_SID_SRV6_L3_SERVICE attributes must not\nfully trust the length value specified in the nlri.\nAlways ensure that the amount of data we need to read\ncan be fullfilled.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>",
  "commit_hash": "06431bfa7570f169637ebb5898f0b0cc3b010802",
  "git_url": "https://github.com/FRRouting/frr/commit/06431bfa7570f169637ebb5898f0b0cc3b010802",
  "file_path": "bgpd/bgp_attr.c",
  "func_name": "bgp_attr_psid_sub",
  "func_before": "static enum bgp_attr_parse_ret\nbgp_attr_psid_sub(uint8_t type, uint16_t length,\n\t\t  struct bgp_attr_parser_args *args)\n{\n\tstruct peer *const peer = args->peer;\n\tstruct attr *const attr = args->attr;\n\tuint32_t label_index;\n\tstruct in6_addr ipv6_sid;\n\tuint32_t srgb_base;\n\tuint32_t srgb_range;\n\tint srgb_count;\n\tuint8_t sid_type, sid_flags;\n\n\tif (type == BGP_PREFIX_SID_LABEL_INDEX) {\n\t\tif (STREAM_READABLE(peer->curr) < length\n\t\t    || length != BGP_PREFIX_SID_LABEL_INDEX_LENGTH) {\n\t\t\tflog_err(EC_BGP_ATTR_LEN,\n\t\t\t\t \"Prefix SID label index length is %hu instead of %u\",\n\t\t\t\t length, BGP_PREFIX_SID_LABEL_INDEX_LENGTH);\n\t\t\treturn bgp_attr_malformed(args,\n\t\t\t\t\t\t  BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\t\t\t  args->total);\n\t\t}\n\n\t\t/* Ignore flags and reserved */\n\t\tstream_getc(peer->curr);\n\t\tstream_getw(peer->curr);\n\n\t\t/* Fetch the label index and see if it is valid. */\n\t\tlabel_index = stream_getl(peer->curr);\n\t\tif (label_index == BGP_INVALID_LABEL_INDEX)\n\t\t\treturn bgp_attr_malformed(args, BGP_NOTIFY_UPDATE_OPT_ATTR_ERR,\n\t\t\t\t\t\t  args->total);\n\n\t\t/* Store label index; subsequently, we'll check on\n\t\t * address-family */\n\t\tattr->label_index = label_index;\n\t}\n\n\t/* Placeholder code for the IPv6 SID type */\n\telse if (type == BGP_PREFIX_SID_IPV6) {\n\t\tif (STREAM_READABLE(peer->curr) < length\n\t\t    || length != BGP_PREFIX_SID_IPV6_LENGTH) {\n\t\t\tflog_err(EC_BGP_ATTR_LEN,\n\t\t\t\t \"Prefix SID IPv6 length is %hu instead of %u\",\n\t\t\t\t length, BGP_PREFIX_SID_IPV6_LENGTH);\n\t\t\treturn bgp_attr_malformed(args,\n\t\t\t\t\t\t  BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\t\t\t  args->total);\n\t\t}\n\n\t\t/* Ignore reserved */\n\t\tstream_getc(peer->curr);\n\t\tstream_getw(peer->curr);\n\n\t\tstream_get(&ipv6_sid, peer->curr, 16);\n\t}\n\n\t/* Placeholder code for the Originator SRGB type */\n\telse if (type == BGP_PREFIX_SID_ORIGINATOR_SRGB) {\n\t\t/*\n\t\t * ietf-idr-bgp-prefix-sid-05:\n\t\t *     Length is the total length of the value portion of the\n\t\t *     TLV: 2 + multiple of 6.\n\t\t *\n\t\t * peer->curr stream readp should be at the beginning of the 16\n\t\t * bit flag field at this point in the code.\n\t\t */\n\n\t\t/*\n\t\t * Check that the TLV length field is sane: at least 2 bytes of\n\t\t * flag, and at least 1 SRGB (these are 6 bytes each)\n\t\t */\n\t\tif (length < (2 + BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH)) {\n\t\t\tflog_err(\n\t\t\t\tEC_BGP_ATTR_LEN,\n\t\t\t\t\"Prefix SID Originator SRGB length field claims length of %hu bytes, but the minimum for this TLV type is %u\",\n\t\t\t\tlength,\n\t\t\t\t2 + BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH);\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\targs->total);\n\t\t}\n\n\t\t/*\n\t\t * Check that we actually have at least as much data as\n\t\t * specified by the length field\n\t\t */\n\t\tif (STREAM_READABLE(peer->curr) < length) {\n\t\t\tflog_err(EC_BGP_ATTR_LEN,\n\t\t\t\t \"Prefix SID Originator SRGB specifies length %hu, but only %zu bytes remain\",\n\t\t\t\t length, STREAM_READABLE(peer->curr));\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\targs->total);\n\t\t}\n\n\t\t/*\n\t\t * Check that the portion of the TLV containing the sequence of\n\t\t * SRGBs corresponds to a multiple of the SRGB size; to get\n\t\t * that length, we skip the 16 bit flags field\n\t\t */\n\t\tstream_getw(peer->curr);\n\t\tlength -= 2;\n\t\tif (length % BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH) {\n\t\t\tflog_err(\n\t\t\t\tEC_BGP_ATTR_LEN,\n\t\t\t\t\"Prefix SID Originator SRGB length field claims attribute SRGB sequence section is %hubytes, but it must be a multiple of %u\",\n\t\t\t\tlength, BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH);\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\targs->total);\n\t\t}\n\n\t\tsrgb_count = length / BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH;\n\n\t\tfor (int i = 0; i < srgb_count; i++) {\n\t\t\tstream_get(&srgb_base, peer->curr, 3);\n\t\t\tstream_get(&srgb_range, peer->curr, 3);\n\t\t}\n\t}\n\n\t/* Placeholder code for the VPN-SID Service type */\n\telse if (type == BGP_PREFIX_SID_VPN_SID) {\n\t\tif (STREAM_READABLE(peer->curr) < length\n\t\t    || length != BGP_PREFIX_SID_VPN_SID_LENGTH) {\n\t\t\tflog_err(EC_BGP_ATTR_LEN,\n\t\t\t\t \"Prefix SID VPN SID length is %hu instead of %u\",\n\t\t\t\t length, BGP_PREFIX_SID_VPN_SID_LENGTH);\n\t\t\treturn bgp_attr_malformed(args,\n\t\t\t\t\t\t  BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\t\t\t  args->total);\n\t\t}\n\n\t\t/* Parse VPN-SID Sub-TLV */\n\t\tstream_getc(peer->curr);               /* reserved  */\n\t\tsid_type = stream_getc(peer->curr);    /* sid_type  */\n\t\tsid_flags = stream_getc(peer->curr);   /* sid_flags */\n\t\tstream_get(&ipv6_sid, peer->curr,\n\t\t\t   sizeof(ipv6_sid)); /* sid_value */\n\n\t\t/* Log VPN-SID Sub-TLV */\n\t\tif (BGP_DEBUG(vpn, VPN_LEAK_LABEL))\n\t\t\tzlog_debug(\n\t\t\t\t\"%s: vpn-sid: sid %pI6, sid-type 0x%02x sid-flags 0x%02x\",\n\t\t\t\t__func__, &ipv6_sid, sid_type, sid_flags);\n\n\t\t/* Configure from Info */\n\t\tif (attr->srv6_vpn) {\n\t\t\tflog_err(EC_BGP_ATTRIBUTE_REPEATED,\n\t\t\t\t \"Prefix SID SRv6 VPN field repeated\");\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\targs, BGP_NOTIFY_UPDATE_MAL_ATTR, args->total);\n\t\t}\n\t\tattr->srv6_vpn = XCALLOC(MTYPE_BGP_SRV6_VPN,\n\t\t\t\t\t sizeof(struct bgp_attr_srv6_vpn));\n\t\tattr->srv6_vpn->sid_flags = sid_flags;\n\t\tsid_copy(&attr->srv6_vpn->sid, &ipv6_sid);\n\t\tattr->srv6_vpn = srv6_vpn_intern(attr->srv6_vpn);\n\t}\n\n\t/* Placeholder code for the SRv6 L3 Service type */\n\telse if (type == BGP_PREFIX_SID_SRV6_L3_SERVICE) {\n\t\tif (STREAM_READABLE(peer->curr) < length) {\n\t\t\tflog_err(\n\t\t\t\tEC_BGP_ATTR_LEN,\n\t\t\t\t\"Prefix SID SRv6 L3-Service length is %hu, but only %zu bytes remain\",\n\t\t\t\tlength, STREAM_READABLE(peer->curr));\n\t\t\treturn bgp_attr_malformed(args,\n\t\t\t\t BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\t args->total);\n\t\t}\n\n\t\t/* ignore reserved */\n\t\tstream_getc(peer->curr);\n\n\t\treturn bgp_attr_srv6_service(args);\n\t}\n\n\t/* Placeholder code for Unsupported TLV */\n\telse {\n\n\t\tif (STREAM_READABLE(peer->curr) < length) {\n\t\t\tflog_err(\n\t\t\t\tEC_BGP_ATTR_LEN,\n\t\t\t\t\"Prefix SID SRv6 length is %hu - too long, only %zu remaining in this UPDATE\",\n\t\t\t\tlength, STREAM_READABLE(peer->curr));\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\targs->total);\n\t\t}\n\n\t\tif (bgp_debug_update(peer, NULL, NULL, 1))\n\t\t\tzlog_debug(\n\t\t\t\t\"%s attr Prefix-SID sub-type=%u is not supported, skipped\",\n\t\t\t\tpeer->host, type);\n\n\t\tstream_forward_getp(peer->curr, length);\n\t}\n\n\treturn BGP_ATTR_PARSE_PROCEED;\n}",
  "abstract_func_before": "static enum bgp_attr_parse_ret\nbgp_attr_psid_sub(uint8_t VAR_0, uint16_t VAR_1,\n\t\t  struct bgp_attr_parser_args *VAR_2)\n{\n\tstruct peer *const peer = VAR_2->peer;\n\tstruct attr *const attr = VAR_2->attr;\n\tuint32_t VAR_3;\n\tstruct in6_addr VAR_4;\n\tuint32_t VAR_5;\n\tuint32_t VAR_6;\n\tint VAR_7;\n\tuint8_t VAR_8, VAR_9;\n\n\tif (VAR_0 == VAR_10) {\n\t\tif (STREAM_READABLE(peer->curr) < VAR_1\n\t\t    || VAR_1 != VAR_11) {\n\t\t\tflog_err(VAR_12,\n\t\t\t\t \"Prefix SID label index length is %hu instead of %u\",\n\t\t\t\t VAR_1, VAR_11);\n\t\t\treturn bgp_attr_malformed(VAR_2,\n\t\t\t\t\t\t  VAR_13,\n\t\t\t\t\t\t  VAR_2->total);\n\t\t}\n\n\t\t/* COMMENT_0 */\n\t\tstream_getc(peer->curr);\n\t\tstream_getw(peer->curr);\n\n\t\t/* COMMENT_1 */\n\t\tVAR_3 = stream_getl(peer->curr);\n\t\tif (VAR_3 == VAR_14)\n\t\t\treturn bgp_attr_malformed(VAR_2, VAR_15,\n\t\t\t\t\t\t  VAR_2->total);\n\n\t\t/* COMMENT_2 */\n                      \n\t\tattr->label_index = VAR_3;\n\t}\n\n\t/* COMMENT_4 */\n\telse if (VAR_0 == VAR_16) {\n\t\tif (STREAM_READABLE(peer->curr) < VAR_1\n\t\t    || VAR_1 != VAR_17) {\n\t\t\tflog_err(VAR_12,\n\t\t\t\t \"Prefix SID IPv6 length is %hu instead of %u\",\n\t\t\t\t VAR_1, VAR_17);\n\t\t\treturn bgp_attr_malformed(VAR_2,\n\t\t\t\t\t\t  VAR_13,\n\t\t\t\t\t\t  VAR_2->total);\n\t\t}\n\n\t\t/* COMMENT_5 */\n\t\tstream_getc(peer->curr);\n\t\tstream_getw(peer->curr);\n\n\t\tstream_get(&VAR_4, peer->curr, 16);\n\t}\n\n\t/* COMMENT_6 */\n\telse if (VAR_0 == VAR_18) {\n\t\t/* COMMENT_7 */\n                                \n                                                               \n                                \n    \n                                                                 \n                                              \n     \n\n\t\t/* COMMENT_15 */\n                                                                 \n                                                       \n     \n\t\tif (VAR_1 < (2 + VAR_19)) {\n\t\t\tflog_err(\n\t\t\t\tVAR_12,\n\t\t\t\t\"Prefix SID Originator SRGB length field claims length of %hu bytes, but the minimum for this TLV type is %u\",\n\t\t\t\tVAR_1,\n\t\t\t\t2 + VAR_19);\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\tVAR_2, VAR_13,\n\t\t\t\tVAR_2->total);\n\t\t}\n\n\t\t/* COMMENT_19 */\n                                                         \n                                  \n     \n\t\tif (STREAM_READABLE(peer->curr) < VAR_1) {\n\t\t\tflog_err(VAR_12,\n\t\t\t\t \"Prefix SID Originator SRGB specifies length %hu, but only %zu bytes remain\",\n\t\t\t\t VAR_1, STREAM_READABLE(peer->curr));\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\tVAR_2, VAR_13,\n\t\t\t\tVAR_2->total);\n\t\t}\n\n\t\t/* COMMENT_23 */\n                                                                 \n                                                             \n                                                \n     \n\t\tstream_getw(peer->curr);\n\t\tVAR_1 -= 2;\n\t\tif (VAR_1 % VAR_19) {\n\t\t\tflog_err(\n\t\t\t\tVAR_12,\n\t\t\t\t\"Prefix SID Originator SRGB length field claims attribute SRGB sequence section is %hubytes, but it must be a multiple of %u\",\n\t\t\t\tVAR_1, VAR_19);\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\tVAR_2, VAR_13,\n\t\t\t\tVAR_2->total);\n\t\t}\n\n\t\tVAR_7 = VAR_1 / VAR_19;\n\n\t\tfor (int VAR_20 = 0; VAR_20 < VAR_7; VAR_20++) {\n\t\t\tstream_get(&VAR_5, peer->curr, 3);\n\t\t\tstream_get(&VAR_6, peer->curr, 3);\n\t\t}\n\t}\n\n\t/* COMMENT_28 */\n\telse if (VAR_0 == VAR_21) {\n\t\tif (STREAM_READABLE(peer->curr) < VAR_1\n\t\t    || VAR_1 != VAR_22) {\n\t\t\tflog_err(VAR_12,\n\t\t\t\t \"Prefix SID VPN SID length is %hu instead of %u\",\n\t\t\t\t VAR_1, VAR_22);\n\t\t\treturn bgp_attr_malformed(VAR_2,\n\t\t\t\t\t\t  VAR_13,\n\t\t\t\t\t\t  VAR_2->total);\n\t\t}\n\n\t\t/* COMMENT_29 */\n\t\tstream_getc(peer->curr);               /* COMMENT_30 */\n\t\tVAR_8 = stream_getc(peer->curr);    /* COMMENT_31 */\n\t\tVAR_9 = stream_getc(peer->curr);   /* COMMENT_32 */\n\t\tstream_get(&VAR_4, peer->curr,\n\t\t\t   sizeof(VAR_4)); /* COMMENT_33 */\n\n\t\t/* COMMENT_34 */\n\t\tif (BGP_DEBUG(VAR_23, VAR_24))\n\t\t\tzlog_debug(\n\t\t\t\t\"%s: vpn-sid: sid %pI6, sid-type 0x%02x sid-flags 0x%02x\",\n\t\t\t\tVAR_25, &VAR_4, VAR_8, VAR_9);\n\n\t\t/* COMMENT_35 */\n\t\tif (attr->srv6_vpn) {\n\t\t\tflog_err(VAR_26,\n\t\t\t\t \"Prefix SID SRv6 VPN field repeated\");\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\tVAR_2, VAR_27, VAR_2->total);\n\t\t}\n\t\tattr->srv6_vpn = XCALLOC(VAR_28,\n\t\t\t\t\t sizeof(struct bgp_attr_srv6_vpn));\n\t\tattr->srv6_vpn->sid_flags = VAR_9;\n\t\tsid_copy(&attr->srv6_vpn->sid, &VAR_4);\n\t\tattr->srv6_vpn = srv6_vpn_intern(attr->srv6_vpn);\n\t}\n\n\t/* COMMENT_36 */\n\telse if (VAR_0 == VAR_29) {\n\t\tif (STREAM_READABLE(peer->curr) < VAR_1) {\n\t\t\tflog_err(\n\t\t\t\tVAR_12,\n\t\t\t\t\"Prefix SID SRv6 L3-Service length is %hu, but only %zu bytes remain\",\n\t\t\t\tVAR_1, STREAM_READABLE(peer->curr));\n\t\t\treturn bgp_attr_malformed(VAR_2,\n\t\t\t\t VAR_13,\n\t\t\t\t VAR_2->total);\n\t\t}\n\n\t\t/* COMMENT_37 */\n\t\tstream_getc(peer->curr);\n\n\t\treturn bgp_attr_srv6_service(VAR_2);\n\t}\n\n\t/* COMMENT_38 */\n\telse {\n\n\t\tif (STREAM_READABLE(peer->curr) < VAR_1) {\n\t\t\tflog_err(\n\t\t\t\tVAR_12,\n\t\t\t\t\"Prefix SID SRv6 length is %hu - too long, only %zu remaining in this UPDATE\",\n\t\t\t\tVAR_1, STREAM_READABLE(peer->curr));\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\tVAR_2, VAR_13,\n\t\t\t\tVAR_2->total);\n\t\t}\n\n\t\tif (bgp_debug_update(peer, NULL, NULL, 1))\n\t\t\tzlog_debug(\n\t\t\t\t\"%s attr Prefix-SID sub-type=%u is not supported, skipped\",\n\t\t\t\tpeer->host, VAR_0);\n\n\t\tstream_forward_getp(peer->curr, VAR_1);\n\t}\n\n\treturn VAR_30;\n}",
  "func_graph_path_before": "FRRouting/frr/06431bfa7570f169637ebb5898f0b0cc3b010802/bgp_attr.c/vul/before/0.json",
  "func": "static enum bgp_attr_parse_ret\nbgp_attr_psid_sub(uint8_t type, uint16_t length,\n\t\t  struct bgp_attr_parser_args *args)\n{\n\tstruct peer *const peer = args->peer;\n\tstruct attr *const attr = args->attr;\n\tuint32_t label_index;\n\tstruct in6_addr ipv6_sid;\n\tuint32_t srgb_base;\n\tuint32_t srgb_range;\n\tint srgb_count;\n\tuint8_t sid_type, sid_flags;\n\n\t/*\n\t * Check that we actually have at least as much data as\n\t * specified by the length field\n\t */\n\tif (STREAM_READABLE(peer->curr) < length) {\n\t\tflog_err(\n\t\t\tEC_BGP_ATTR_LEN,\n\t\t\t\"Prefix SID specifies length %hu, but only %zu bytes remain\",\n\t\t\tlength, STREAM_READABLE(peer->curr));\n\t\treturn bgp_attr_malformed(args, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\t\t  args->total);\n\t}\n\n\tif (type == BGP_PREFIX_SID_LABEL_INDEX) {\n\t\tif (length != BGP_PREFIX_SID_LABEL_INDEX_LENGTH) {\n\t\t\tflog_err(EC_BGP_ATTR_LEN,\n\t\t\t\t \"Prefix SID label index length is %hu instead of %u\",\n\t\t\t\t length, BGP_PREFIX_SID_LABEL_INDEX_LENGTH);\n\t\t\treturn bgp_attr_malformed(args,\n\t\t\t\t\t\t  BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\t\t\t  args->total);\n\t\t}\n\n\t\t/* Ignore flags and reserved */\n\t\tstream_getc(peer->curr);\n\t\tstream_getw(peer->curr);\n\n\t\t/* Fetch the label index and see if it is valid. */\n\t\tlabel_index = stream_getl(peer->curr);\n\t\tif (label_index == BGP_INVALID_LABEL_INDEX)\n\t\t\treturn bgp_attr_malformed(args, BGP_NOTIFY_UPDATE_OPT_ATTR_ERR,\n\t\t\t\t\t\t  args->total);\n\n\t\t/* Store label index; subsequently, we'll check on\n\t\t * address-family */\n\t\tattr->label_index = label_index;\n\t} else if (type == BGP_PREFIX_SID_IPV6) {\n\t\tif (length != BGP_PREFIX_SID_IPV6_LENGTH) {\n\t\t\tflog_err(EC_BGP_ATTR_LEN,\n\t\t\t\t \"Prefix SID IPv6 length is %hu instead of %u\",\n\t\t\t\t length, BGP_PREFIX_SID_IPV6_LENGTH);\n\t\t\treturn bgp_attr_malformed(args,\n\t\t\t\t\t\t  BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\t\t\t  args->total);\n\t\t}\n\n\t\t/* Ignore reserved */\n\t\tstream_getc(peer->curr);\n\t\tstream_getw(peer->curr);\n\n\t\tstream_get(&ipv6_sid, peer->curr, 16);\n\t} else if (type == BGP_PREFIX_SID_ORIGINATOR_SRGB) {\n\t\t/*\n\t\t * ietf-idr-bgp-prefix-sid-05:\n\t\t *     Length is the total length of the value portion of the\n\t\t *     TLV: 2 + multiple of 6.\n\t\t *\n\t\t * peer->curr stream readp should be at the beginning of the 16\n\t\t * bit flag field at this point in the code.\n\t\t */\n\n\t\t/*\n\t\t * Check that the TLV length field is sane: at least 2 bytes of\n\t\t * flag, and at least 1 SRGB (these are 6 bytes each)\n\t\t */\n\t\tif (length < (2 + BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH)) {\n\t\t\tflog_err(\n\t\t\t\tEC_BGP_ATTR_LEN,\n\t\t\t\t\"Prefix SID Originator SRGB length field claims length of %hu bytes, but the minimum for this TLV type is %u\",\n\t\t\t\tlength,\n\t\t\t\t2 + BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH);\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\targs->total);\n\t\t}\n\n\t\t/*\n\t\t * Check that the portion of the TLV containing the sequence of\n\t\t * SRGBs corresponds to a multiple of the SRGB size; to get\n\t\t * that length, we skip the 16 bit flags field\n\t\t */\n\t\tstream_getw(peer->curr);\n\t\tlength -= 2;\n\t\tif (length % BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH) {\n\t\t\tflog_err(\n\t\t\t\tEC_BGP_ATTR_LEN,\n\t\t\t\t\"Prefix SID Originator SRGB length field claims attribute SRGB sequence section is %hubytes, but it must be a multiple of %u\",\n\t\t\t\tlength, BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH);\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\targs->total);\n\t\t}\n\n\t\tsrgb_count = length / BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH;\n\n\t\tfor (int i = 0; i < srgb_count; i++) {\n\t\t\tstream_get(&srgb_base, peer->curr, 3);\n\t\t\tstream_get(&srgb_range, peer->curr, 3);\n\t\t}\n\t} else if (type == BGP_PREFIX_SID_VPN_SID) {\n\t\tif (length != BGP_PREFIX_SID_VPN_SID_LENGTH) {\n\t\t\tflog_err(EC_BGP_ATTR_LEN,\n\t\t\t\t \"Prefix SID VPN SID length is %hu instead of %u\",\n\t\t\t\t length, BGP_PREFIX_SID_VPN_SID_LENGTH);\n\t\t\treturn bgp_attr_malformed(args,\n\t\t\t\t\t\t  BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\t\t\t  args->total);\n\t\t}\n\n\t\t/* Parse VPN-SID Sub-TLV */\n\t\tstream_getc(peer->curr);               /* reserved  */\n\t\tsid_type = stream_getc(peer->curr);    /* sid_type  */\n\t\tsid_flags = stream_getc(peer->curr);   /* sid_flags */\n\t\tstream_get(&ipv6_sid, peer->curr,\n\t\t\t   sizeof(ipv6_sid)); /* sid_value */\n\n\t\t/* Log VPN-SID Sub-TLV */\n\t\tif (BGP_DEBUG(vpn, VPN_LEAK_LABEL))\n\t\t\tzlog_debug(\n\t\t\t\t\"%s: vpn-sid: sid %pI6, sid-type 0x%02x sid-flags 0x%02x\",\n\t\t\t\t__func__, &ipv6_sid, sid_type, sid_flags);\n\n\t\t/* Configure from Info */\n\t\tif (attr->srv6_vpn) {\n\t\t\tflog_err(EC_BGP_ATTRIBUTE_REPEATED,\n\t\t\t\t \"Prefix SID SRv6 VPN field repeated\");\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\targs, BGP_NOTIFY_UPDATE_MAL_ATTR, args->total);\n\t\t}\n\t\tattr->srv6_vpn = XCALLOC(MTYPE_BGP_SRV6_VPN,\n\t\t\t\t\t sizeof(struct bgp_attr_srv6_vpn));\n\t\tattr->srv6_vpn->sid_flags = sid_flags;\n\t\tsid_copy(&attr->srv6_vpn->sid, &ipv6_sid);\n\t\tattr->srv6_vpn = srv6_vpn_intern(attr->srv6_vpn);\n\t} else if (type == BGP_PREFIX_SID_SRV6_L3_SERVICE) {\n\t\tif (STREAM_READABLE(peer->curr) < 1) {\n\t\t\tflog_err(\n\t\t\t\tEC_BGP_ATTR_LEN,\n\t\t\t\t\"Prefix SID SRV6 L3 Service not enough data left, it must be at least 1 byte\");\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n\t\t\t\targs->total);\n\t\t}\n\t\t/* ignore reserved */\n\t\tstream_getc(peer->curr);\n\n\t\treturn bgp_attr_srv6_service(args);\n\t}\n\t/* Placeholder code for Unsupported TLV */\n\telse {\n\t\tif (bgp_debug_update(peer, NULL, NULL, 1))\n\t\t\tzlog_debug(\n\t\t\t\t\"%s attr Prefix-SID sub-type=%u is not supported, skipped\",\n\t\t\t\tpeer->host, type);\n\n\t\tstream_forward_getp(peer->curr, length);\n\t}\n\n\treturn BGP_ATTR_PARSE_PROCEED;\n}",
  "abstract_func": "static enum bgp_attr_parse_ret\nbgp_attr_psid_sub(uint8_t VAR_0, uint16_t VAR_1,\n\t\t  struct bgp_attr_parser_args *VAR_2)\n{\n\tstruct peer *const peer = VAR_2->peer;\n\tstruct attr *const attr = VAR_2->attr;\n\tuint32_t VAR_3;\n\tstruct in6_addr VAR_4;\n\tuint32_t VAR_5;\n\tuint32_t VAR_6;\n\tint VAR_7;\n\tuint8_t VAR_8, VAR_9;\n\n\t/* COMMENT_0 */\n                                                        \n                                 \n    \n\tif (STREAM_READABLE(peer->curr) < VAR_1) {\n\t\tflog_err(\n\t\t\tVAR_10,\n\t\t\t\"Prefix SID specifies length %hu, but only %zu bytes remain\",\n\t\t\tVAR_1, STREAM_READABLE(peer->curr));\n\t\treturn bgp_attr_malformed(VAR_2, VAR_11,\n\t\t\t\t\t  VAR_2->total);\n\t}\n\n\tif (VAR_0 == VAR_12) {\n\t\tif (VAR_1 != VAR_13) {\n\t\t\tflog_err(VAR_10,\n\t\t\t\t \"Prefix SID label index length is %hu instead of %u\",\n\t\t\t\t VAR_1, VAR_13);\n\t\t\treturn bgp_attr_malformed(VAR_2,\n\t\t\t\t\t\t  VAR_11,\n\t\t\t\t\t\t  VAR_2->total);\n\t\t}\n\n\t\t/* COMMENT_4 */\n\t\tstream_getc(peer->curr);\n\t\tstream_getw(peer->curr);\n\n\t\t/* COMMENT_5 */\n\t\tVAR_3 = stream_getl(peer->curr);\n\t\tif (VAR_3 == VAR_14)\n\t\t\treturn bgp_attr_malformed(VAR_2, VAR_15,\n\t\t\t\t\t\t  VAR_2->total);\n\n\t\t/* COMMENT_6 */\n                      \n\t\tattr->label_index = VAR_3;\n\t} else if (VAR_0 == VAR_16) {\n\t\tif (VAR_1 != VAR_17) {\n\t\t\tflog_err(VAR_10,\n\t\t\t\t \"Prefix SID IPv6 length is %hu instead of %u\",\n\t\t\t\t VAR_1, VAR_17);\n\t\t\treturn bgp_attr_malformed(VAR_2,\n\t\t\t\t\t\t  VAR_11,\n\t\t\t\t\t\t  VAR_2->total);\n\t\t}\n\n\t\t/* COMMENT_8 */\n\t\tstream_getc(peer->curr);\n\t\tstream_getw(peer->curr);\n\n\t\tstream_get(&VAR_4, peer->curr, 16);\n\t} else if (VAR_0 == VAR_18) {\n\t\t/* COMMENT_9 */\n                                \n                                                               \n                                \n    \n                                                                 \n                                              \n     \n\n\t\t/* COMMENT_17 */\n                                                                 \n                                                       \n     \n\t\tif (VAR_1 < (2 + VAR_19)) {\n\t\t\tflog_err(\n\t\t\t\tVAR_10,\n\t\t\t\t\"Prefix SID Originator SRGB length field claims length of %hu bytes, but the minimum for this TLV type is %u\",\n\t\t\t\tVAR_1,\n\t\t\t\t2 + VAR_19);\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\tVAR_2, VAR_11,\n\t\t\t\tVAR_2->total);\n\t\t}\n\n\t\t/* COMMENT_21 */\n                                                                 \n                                                             \n                                                \n     \n\t\tstream_getw(peer->curr);\n\t\tVAR_1 -= 2;\n\t\tif (VAR_1 % VAR_19) {\n\t\t\tflog_err(\n\t\t\t\tVAR_10,\n\t\t\t\t\"Prefix SID Originator SRGB length field claims attribute SRGB sequence section is %hubytes, but it must be a multiple of %u\",\n\t\t\t\tVAR_1, VAR_19);\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\tVAR_2, VAR_11,\n\t\t\t\tVAR_2->total);\n\t\t}\n\n\t\tVAR_7 = VAR_1 / VAR_19;\n\n\t\tfor (int VAR_20 = 0; VAR_20 < VAR_7; VAR_20++) {\n\t\t\tstream_get(&VAR_5, peer->curr, 3);\n\t\t\tstream_get(&VAR_6, peer->curr, 3);\n\t\t}\n\t} else if (VAR_0 == VAR_21) {\n\t\tif (VAR_1 != VAR_22) {\n\t\t\tflog_err(VAR_10,\n\t\t\t\t \"Prefix SID VPN SID length is %hu instead of %u\",\n\t\t\t\t VAR_1, VAR_22);\n\t\t\treturn bgp_attr_malformed(VAR_2,\n\t\t\t\t\t\t  VAR_11,\n\t\t\t\t\t\t  VAR_2->total);\n\t\t}\n\n\t\t/* COMMENT_26 */\n\t\tstream_getc(peer->curr);               /* COMMENT_27 */\n\t\tVAR_8 = stream_getc(peer->curr);    /* COMMENT_28 */\n\t\tVAR_9 = stream_getc(peer->curr);   /* COMMENT_29 */\n\t\tstream_get(&VAR_4, peer->curr,\n\t\t\t   sizeof(VAR_4)); /* COMMENT_30 */\n\n\t\t/* COMMENT_31 */\n\t\tif (BGP_DEBUG(VAR_23, VAR_24))\n\t\t\tzlog_debug(\n\t\t\t\t\"%s: vpn-sid: sid %pI6, sid-type 0x%02x sid-flags 0x%02x\",\n\t\t\t\tVAR_25, &VAR_4, VAR_8, VAR_9);\n\n\t\t/* COMMENT_32 */\n\t\tif (attr->srv6_vpn) {\n\t\t\tflog_err(VAR_26,\n\t\t\t\t \"Prefix SID SRv6 VPN field repeated\");\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\tVAR_2, VAR_27, VAR_2->total);\n\t\t}\n\t\tattr->srv6_vpn = XCALLOC(VAR_28,\n\t\t\t\t\t sizeof(struct bgp_attr_srv6_vpn));\n\t\tattr->srv6_vpn->sid_flags = VAR_9;\n\t\tsid_copy(&attr->srv6_vpn->sid, &VAR_4);\n\t\tattr->srv6_vpn = srv6_vpn_intern(attr->srv6_vpn);\n\t} else if (VAR_0 == VAR_29) {\n\t\tif (STREAM_READABLE(peer->curr) < 1) {\n\t\t\tflog_err(\n\t\t\t\tVAR_10,\n\t\t\t\t\"Prefix SID SRV6 L3 Service not enough data left, it must be at least 1 byte\");\n\t\t\treturn bgp_attr_malformed(\n\t\t\t\tVAR_2, VAR_11,\n\t\t\t\tVAR_2->total);\n\t\t}\n\t\t/* COMMENT_33 */\n\t\tstream_getc(peer->curr);\n\n\t\treturn bgp_attr_srv6_service(VAR_2);\n\t}\n\t/* COMMENT_34 */\n\telse {\n\t\tif (bgp_debug_update(peer, NULL, NULL, 1))\n\t\t\tzlog_debug(\n\t\t\t\t\"%s attr Prefix-SID sub-type=%u is not supported, skipped\",\n\t\t\t\tpeer->host, VAR_0);\n\n\t\tstream_forward_getp(peer->curr, VAR_1);\n\t}\n\n\treturn VAR_30;\n}",
  "func_graph_path": "FRRouting/frr/06431bfa7570f169637ebb5898f0b0cc3b010802/bgp_attr.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -11,9 +11,21 @@\n \tint srgb_count;\n \tuint8_t sid_type, sid_flags;\n \n+\t/*\n+\t * Check that we actually have at least as much data as\n+\t * specified by the length field\n+\t */\n+\tif (STREAM_READABLE(peer->curr) < length) {\n+\t\tflog_err(\n+\t\t\tEC_BGP_ATTR_LEN,\n+\t\t\t\"Prefix SID specifies length %hu, but only %zu bytes remain\",\n+\t\t\tlength, STREAM_READABLE(peer->curr));\n+\t\treturn bgp_attr_malformed(args, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n+\t\t\t\t\t  args->total);\n+\t}\n+\n \tif (type == BGP_PREFIX_SID_LABEL_INDEX) {\n-\t\tif (STREAM_READABLE(peer->curr) < length\n-\t\t    || length != BGP_PREFIX_SID_LABEL_INDEX_LENGTH) {\n+\t\tif (length != BGP_PREFIX_SID_LABEL_INDEX_LENGTH) {\n \t\t\tflog_err(EC_BGP_ATTR_LEN,\n \t\t\t\t \"Prefix SID label index length is %hu instead of %u\",\n \t\t\t\t length, BGP_PREFIX_SID_LABEL_INDEX_LENGTH);\n@@ -35,12 +47,8 @@\n \t\t/* Store label index; subsequently, we'll check on\n \t\t * address-family */\n \t\tattr->label_index = label_index;\n-\t}\n-\n-\t/* Placeholder code for the IPv6 SID type */\n-\telse if (type == BGP_PREFIX_SID_IPV6) {\n-\t\tif (STREAM_READABLE(peer->curr) < length\n-\t\t    || length != BGP_PREFIX_SID_IPV6_LENGTH) {\n+\t} else if (type == BGP_PREFIX_SID_IPV6) {\n+\t\tif (length != BGP_PREFIX_SID_IPV6_LENGTH) {\n \t\t\tflog_err(EC_BGP_ATTR_LEN,\n \t\t\t\t \"Prefix SID IPv6 length is %hu instead of %u\",\n \t\t\t\t length, BGP_PREFIX_SID_IPV6_LENGTH);\n@@ -54,10 +62,7 @@\n \t\tstream_getw(peer->curr);\n \n \t\tstream_get(&ipv6_sid, peer->curr, 16);\n-\t}\n-\n-\t/* Placeholder code for the Originator SRGB type */\n-\telse if (type == BGP_PREFIX_SID_ORIGINATOR_SRGB) {\n+\t} else if (type == BGP_PREFIX_SID_ORIGINATOR_SRGB) {\n \t\t/*\n \t\t * ietf-idr-bgp-prefix-sid-05:\n \t\t *     Length is the total length of the value portion of the\n@@ -77,19 +82,6 @@\n \t\t\t\t\"Prefix SID Originator SRGB length field claims length of %hu bytes, but the minimum for this TLV type is %u\",\n \t\t\t\tlength,\n \t\t\t\t2 + BGP_PREFIX_SID_ORIGINATOR_SRGB_LENGTH);\n-\t\t\treturn bgp_attr_malformed(\n-\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n-\t\t\t\targs->total);\n-\t\t}\n-\n-\t\t/*\n-\t\t * Check that we actually have at least as much data as\n-\t\t * specified by the length field\n-\t\t */\n-\t\tif (STREAM_READABLE(peer->curr) < length) {\n-\t\t\tflog_err(EC_BGP_ATTR_LEN,\n-\t\t\t\t \"Prefix SID Originator SRGB specifies length %hu, but only %zu bytes remain\",\n-\t\t\t\t length, STREAM_READABLE(peer->curr));\n \t\t\treturn bgp_attr_malformed(\n \t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n \t\t\t\targs->total);\n@@ -118,12 +110,8 @@\n \t\t\tstream_get(&srgb_base, peer->curr, 3);\n \t\t\tstream_get(&srgb_range, peer->curr, 3);\n \t\t}\n-\t}\n-\n-\t/* Placeholder code for the VPN-SID Service type */\n-\telse if (type == BGP_PREFIX_SID_VPN_SID) {\n-\t\tif (STREAM_READABLE(peer->curr) < length\n-\t\t    || length != BGP_PREFIX_SID_VPN_SID_LENGTH) {\n+\t} else if (type == BGP_PREFIX_SID_VPN_SID) {\n+\t\tif (length != BGP_PREFIX_SID_VPN_SID_LENGTH) {\n \t\t\tflog_err(EC_BGP_ATTR_LEN,\n \t\t\t\t \"Prefix SID VPN SID length is %hu instead of %u\",\n \t\t\t\t length, BGP_PREFIX_SID_VPN_SID_LENGTH);\n@@ -157,39 +145,22 @@\n \t\tattr->srv6_vpn->sid_flags = sid_flags;\n \t\tsid_copy(&attr->srv6_vpn->sid, &ipv6_sid);\n \t\tattr->srv6_vpn = srv6_vpn_intern(attr->srv6_vpn);\n-\t}\n-\n-\t/* Placeholder code for the SRv6 L3 Service type */\n-\telse if (type == BGP_PREFIX_SID_SRV6_L3_SERVICE) {\n-\t\tif (STREAM_READABLE(peer->curr) < length) {\n+\t} else if (type == BGP_PREFIX_SID_SRV6_L3_SERVICE) {\n+\t\tif (STREAM_READABLE(peer->curr) < 1) {\n \t\t\tflog_err(\n \t\t\t\tEC_BGP_ATTR_LEN,\n-\t\t\t\t\"Prefix SID SRv6 L3-Service length is %hu, but only %zu bytes remain\",\n-\t\t\t\tlength, STREAM_READABLE(peer->curr));\n-\t\t\treturn bgp_attr_malformed(args,\n-\t\t\t\t BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n-\t\t\t\t args->total);\n+\t\t\t\t\"Prefix SID SRV6 L3 Service not enough data left, it must be at least 1 byte\");\n+\t\t\treturn bgp_attr_malformed(\n+\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n+\t\t\t\targs->total);\n \t\t}\n-\n \t\t/* ignore reserved */\n \t\tstream_getc(peer->curr);\n \n \t\treturn bgp_attr_srv6_service(args);\n \t}\n-\n \t/* Placeholder code for Unsupported TLV */\n \telse {\n-\n-\t\tif (STREAM_READABLE(peer->curr) < length) {\n-\t\t\tflog_err(\n-\t\t\t\tEC_BGP_ATTR_LEN,\n-\t\t\t\t\"Prefix SID SRv6 length is %hu - too long, only %zu remaining in this UPDATE\",\n-\t\t\t\tlength, STREAM_READABLE(peer->curr));\n-\t\t\treturn bgp_attr_malformed(\n-\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,\n-\t\t\t\targs->total);\n-\t\t}\n-\n \t\tif (bgp_debug_update(peer, NULL, NULL, 1))\n \t\t\tzlog_debug(\n \t\t\t\t\"%s attr Prefix-SID sub-type=%u is not supported, skipped\",",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tif (STREAM_READABLE(peer->curr) < length",
      "\t\t    || length != BGP_PREFIX_SID_LABEL_INDEX_LENGTH) {",
      "\t}",
      "",
      "\t/* Placeholder code for the IPv6 SID type */",
      "\telse if (type == BGP_PREFIX_SID_IPV6) {",
      "\t\tif (STREAM_READABLE(peer->curr) < length",
      "\t\t    || length != BGP_PREFIX_SID_IPV6_LENGTH) {",
      "\t}",
      "",
      "\t/* Placeholder code for the Originator SRGB type */",
      "\telse if (type == BGP_PREFIX_SID_ORIGINATOR_SRGB) {",
      "\t\t\treturn bgp_attr_malformed(",
      "\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,",
      "\t\t\t\targs->total);",
      "\t\t}",
      "",
      "\t\t/*",
      "\t\t * Check that we actually have at least as much data as",
      "\t\t * specified by the length field",
      "\t\t */",
      "\t\tif (STREAM_READABLE(peer->curr) < length) {",
      "\t\t\tflog_err(EC_BGP_ATTR_LEN,",
      "\t\t\t\t \"Prefix SID Originator SRGB specifies length %hu, but only %zu bytes remain\",",
      "\t\t\t\t length, STREAM_READABLE(peer->curr));",
      "\t}",
      "",
      "\t/* Placeholder code for the VPN-SID Service type */",
      "\telse if (type == BGP_PREFIX_SID_VPN_SID) {",
      "\t\tif (STREAM_READABLE(peer->curr) < length",
      "\t\t    || length != BGP_PREFIX_SID_VPN_SID_LENGTH) {",
      "\t}",
      "",
      "\t/* Placeholder code for the SRv6 L3 Service type */",
      "\telse if (type == BGP_PREFIX_SID_SRV6_L3_SERVICE) {",
      "\t\tif (STREAM_READABLE(peer->curr) < length) {",
      "\t\t\t\t\"Prefix SID SRv6 L3-Service length is %hu, but only %zu bytes remain\",",
      "\t\t\t\tlength, STREAM_READABLE(peer->curr));",
      "\t\t\treturn bgp_attr_malformed(args,",
      "\t\t\t\t BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,",
      "\t\t\t\t args->total);",
      "",
      "",
      "",
      "\t\tif (STREAM_READABLE(peer->curr) < length) {",
      "\t\t\tflog_err(",
      "\t\t\t\tEC_BGP_ATTR_LEN,",
      "\t\t\t\t\"Prefix SID SRv6 length is %hu - too long, only %zu remaining in this UPDATE\",",
      "\t\t\t\tlength, STREAM_READABLE(peer->curr));",
      "\t\t\treturn bgp_attr_malformed(",
      "\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,",
      "\t\t\t\targs->total);",
      "\t\t}",
      ""
    ],
    "added_lines": [
      "\t/*",
      "\t * Check that we actually have at least as much data as",
      "\t * specified by the length field",
      "\t */",
      "\tif (STREAM_READABLE(peer->curr) < length) {",
      "\t\tflog_err(",
      "\t\t\tEC_BGP_ATTR_LEN,",
      "\t\t\t\"Prefix SID specifies length %hu, but only %zu bytes remain\",",
      "\t\t\tlength, STREAM_READABLE(peer->curr));",
      "\t\treturn bgp_attr_malformed(args, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,",
      "\t\t\t\t\t  args->total);",
      "\t}",
      "",
      "\t\tif (length != BGP_PREFIX_SID_LABEL_INDEX_LENGTH) {",
      "\t} else if (type == BGP_PREFIX_SID_IPV6) {",
      "\t\tif (length != BGP_PREFIX_SID_IPV6_LENGTH) {",
      "\t} else if (type == BGP_PREFIX_SID_ORIGINATOR_SRGB) {",
      "\t} else if (type == BGP_PREFIX_SID_VPN_SID) {",
      "\t\tif (length != BGP_PREFIX_SID_VPN_SID_LENGTH) {",
      "\t} else if (type == BGP_PREFIX_SID_SRV6_L3_SERVICE) {",
      "\t\tif (STREAM_READABLE(peer->curr) < 1) {",
      "\t\t\t\t\"Prefix SID SRV6 L3 Service not enough data left, it must be at least 1 byte\");",
      "\t\t\treturn bgp_attr_malformed(",
      "\t\t\t\targs, BGP_NOTIFY_UPDATE_ATTR_LENG_ERR,",
      "\t\t\t\targs->total);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/FRRouting/frr/pull/12454",
  "description": {
    "pr_info": {
      "title": "bgpd: Ensure stream received has enough data",
      "number": 12454
    },
    "comment": [
      "BGP_PREFIX_SID_SRV6_L3_SERVICE attributes must not fully trust the length value specified in the nlri. Always ensure that the amount of data we need to read can be fullfilled.\r\n\r\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\r\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>\r\n\r\nCloses https://github.com/FRRouting/frr/issues/13099",
      "<details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6U18I386/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-8716/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-8716/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5U18I386/ErrorLog/log_topotests.txt\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Ubuntu 20.04 deb pkg check\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 9\n- Debian 10 deb pkg check\n- Debian 9 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 i386 part 8\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 amd64 part 9\n- Addresssanitizer topotests part 4\n- Addresssanitizer topotests part 5\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests debian 10 amd64 part 1\n- Topotests debian 10 amd64 part 4\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 3\n- Addresssanitizer topotests part 0\n- Static analyzer (clang)\n- Addresssanitizer topotests part 2\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 arm8 part 2\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 amd64 part 7\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 arm8 part 8\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 7\n- Addresssanitizer topotests part 6\n- CentOS 7 rpm pkg check\n- Fedora 29 rpm pkg check\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 arm8 part 4\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6U18I386/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-8716/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO6DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-8716/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-8716/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8716/artifact/TOPO5U18I386/ErrorLog/log_topotests.txt\n</details>\n\n    Report for bgp_attr.c | 2 issues\n    ===============================================\n    < ERROR: else should follow close brace '}'\n    < #2910: FILE: /tmp/f1-128948/bgp_attr.c:2910:\n\n</details>\n\n</details>",
      "<details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-8720/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6U18I386/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-8720/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5U18I386/ErrorLog/log_topotests.txt\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 1\n- Ubuntu 20.04 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 3\n- Addresssanitizer topotests part 8\n- Debian 10 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 3\n- Addresssanitizer topotests part 4\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 1\n- Topotests debian 10 amd64 part 4\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 i386 part 9\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 3\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 0\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 i386 part 7\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 amd64 part 7\n- Addresssanitizer topotests part 6\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 amd64 part 2\n- CentOS 7 rpm pkg check\n- Fedora 29 rpm pkg check\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 arm8 part 4\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 arm8 part 9\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5U18AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-8720/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6U18I386/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-8720/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO6DEB10AMD64/ErrorLog/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-8720/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-8720/artifact/TOPO5U18I386/ErrorLog/log_topotests.txt\n</details>\n\n    Report for bgp_attr.c | 2 issues\n    ===============================================\n    < ERROR: else should follow close brace '}'\n    < #2910: FILE: /tmp/f1-757987/bgp_attr.c:2910:\n\n</details>\n\n</details>",
      "rerunning to see if we can clean this up ...\r\nci:rerun",
      "<details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-9275/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6DEB10AMD64/TopotestLogs/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18I386/TopotestDetails/\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-9275/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5DEB10AMD64/TopotestLogs/log_topotests.txt\nTopotests debian 10 amd64 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5DEB10AMD64/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18AMD64/TopotestLogs/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 9: Failed (click for details)</summary>\nTopotests debian 10 amd64 part 9: Unknown Log <TopotestLogs>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO9DEB10AMD64/TopotestLogs/\nTopotests debian 10 amd64 part 9: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18I386/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18AMD64/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 amd64 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18AMD64/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 amd64 part 7\n- Topotests Ubuntu 18.04 i386 part 0\n- Addresssanitizer topotests part 3\n- Addresssanitizer topotests part 2\n- Fedora 29 rpm pkg check\n- CentOS 7 rpm pkg check\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 amd64 part 3\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 arm8 part 8\n- Ubuntu 18.04 deb pkg check\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests debian 10 amd64 part 3\n- Topotests Ubuntu 18.04 i386 part 8\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 8\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests Ubuntu 18.04 arm8 part 9\n- Debian 9 deb pkg check\n- Addresssanitizer topotests part 4\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 8\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 0\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 amd64 part 9\n- Addresssanitizer topotests part 7\n- Ubuntu 20.04 deb pkg check\n- Ubuntu 16.04 deb pkg check\n- Debian 10 deb pkg check\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests debian 10 amd64 part 1\n- Addresssanitizer topotests part 5\n</details>\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 6: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 6: No useful log found\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6DEB10AMD64-9275/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6DEB10AMD64/TopotestLogs/log_topotests.txt\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18I386-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18I386/TopotestDetails/\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5DEB10AMD64-9275/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5DEB10AMD64/TopotestLogs/log_topotests.txt\nTopotests debian 10 amd64 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5DEB10AMD64/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18AMD64-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18AMD64/TopotestLogs/log_topotests.txt\n</details>\n<details>\n<summary>Topotests debian 10 amd64 part 9: Failed (click for details)</summary>\nTopotests debian 10 amd64 part 9: Unknown Log <TopotestLogs>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO9DEB10AMD64/TopotestLogs/\nTopotests debian 10 amd64 part 9: No useful log found\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 6: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO6U18I386-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 6__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 6: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO6U18I386/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 5: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO5U18AMD64-9275/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 5__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18AMD64/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 amd64 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18AMD64/TopotestDetails/\n</details>\n<details>\n<summary>Topotests Ubuntu 18.04 arm8 part 5: Failed (click for details)</summary>\nTopotests Ubuntu 18.04 arm8 part 5: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-9275/artifact/TOPO5U18ARM8/TopotestDetails/\nTopotests Ubuntu 18.04 arm8 part 5: No useful log found\n</details>\n\n    Report for bgp_attr.c | 2 issues\n    ===============================================\n    < ERROR: else should follow close brace '}'\n    < #2910: FILE: /tmp/f1-3511988/bgp_attr.c:2910:\n\n</details>\n\n</details>",
      "<details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nTest incomplete. See below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10388/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Incomplete\n<details><summary>Addresssanitizer topotests part 3: Incomplete</summary>\n(check logs for details)</details>\n<details>\n<summary>Topotests debian 10 amd64 part 9: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO9DEB10AMD64-10388/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 9__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10388/artifact/TOPO9DEB10AMD64/TopotestLogs/log_topotests.txt\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Static analyzer (clang)\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests debian 10 amd64 part 2\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 amd64 part 8\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 5\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 amd64 part 9\n- Ubuntu 20.04 deb pkg check\n- Ubuntu 18.04 deb pkg check\n- Debian 10 deb pkg check\n- Addresssanitizer topotests part 6\n- Addresssanitizer topotests part 5\n- Topotests Ubuntu 18.04 arm8 part 3\n- Topotests debian 10 amd64 part 1\n- Addresssanitizer topotests part 4\n- Topotests debian 10 amd64 part 3\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests debian 10 amd64 part 5\n- Topotests debian 10 amd64 part 0\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests Ubuntu 18.04 i386 part 6\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 6\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 amd64 part 7\n- Fedora 29 rpm pkg check\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 amd64 part 2\n- CentOS 7 rpm pkg check\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 arm8 part 4\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 arm8 part 9\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 3\n</details>\n\n</details>",
      "<details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10388/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    Report for bgp_attr.c | 2 issues\n    ===============================================\n    < ERROR: else should follow close brace '}'\n    < #2967: FILE: /tmp/f1-338092/bgp_attr.c:2967:\n\n</details>\n\n</details>",
      "<details><summary>Continuous Integration Result: SUCCESSFUL</summary>\n\n#  Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10408/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n### Warnings Generated during build:\n\n<details><summary>Checkout code: Successful with additional warnings</summary>\n\n    Report for bgp_attr.c | 2 issues\n    ===============================================\n    < ERROR: else should follow close brace '}'\n    < #2967: FILE: /tmp/f1-1926053/bgp_attr.c:2967:\n\n</details>\n\n</details>",
      "<details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10437/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 i386 part 2: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO2U18I386-10437/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 i386 part 2__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10437/artifact/TOPO2U18I386/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 i386 part 2: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10437/artifact/TOPO2U18I386/TopotestDetails/\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 1\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 arm8 part 6\n- Addresssanitizer topotests part 3\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 amd64 part 7\n- Fedora 29 rpm pkg check\n- Topotests debian 10 amd64 part 0\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 7\n- Topotests debian 10 amd64 part 5\n- CentOS 7 rpm pkg check\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests Ubuntu 18.04 amd64 part 3\n- Addresssanitizer topotests part 6\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests debian 10 amd64 part 8\n- Addresssanitizer topotests part 0\n- Topotests debian 10 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 4\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 9\n- Ubuntu 20.04 deb pkg check\n- Debian 10 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Addresssanitizer topotests part 4\n- Topotests Ubuntu 18.04 amd64 part 9\n- Debian 9 deb pkg check\n- Topotests Ubuntu 18.04 i386 part 8\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 arm8 part 5\n- Topotests debian 10 amd64 part 4\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 arm8 part 3\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 1\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 amd64 part 8\n- Ubuntu 16.04 deb pkg check\n</details>\n\n</details>",
      "ci:rerun ",
      "<details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10443/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests Ubuntu 18.04 amd64 part 7: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO7U18AMD64-10443/test\n\n\n__Topology Tests failed for Topotests Ubuntu 18.04 amd64 part 7__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10443/artifact/TOPO7U18AMD64/TopotestLogs/log_topotests.txt\nTopotests Ubuntu 18.04 amd64 part 7: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10443/artifact/TOPO7U18AMD64/TopotestDetails/\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Topotests Ubuntu 18.04 i386 part 6\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 amd64 part 5\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 4\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests Ubuntu 18.04 arm8 part 7\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 6\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 1\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests debian 10 amd64 part 5\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests debian 10 amd64 part 0\n- Addresssanitizer topotests part 3\n- Topotests debian 10 amd64 part 9\n- Topotests Ubuntu 18.04 arm8 part 8\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 i386 part 7\n- Fedora 29 rpm pkg check\n- CentOS 7 rpm pkg check\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests Ubuntu 18.04 i386 part 5\n- Ubuntu 18.04 deb pkg check\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests Ubuntu 18.04 arm8 part 9\n- Ubuntu 20.04 deb pkg check\n- Debian 9 deb pkg check\n- Debian 10 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests Ubuntu 18.04 amd64 part 1\n- Topotests Ubuntu 18.04 i386 part 3\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 i386 part 8\n- Topotests Ubuntu 18.04 amd64 part 9\n- Topotests debian 10 amd64 part 4\n- Addresssanitizer topotests part 7\n- Addresssanitizer topotests part 4\n- Topotests Ubuntu 18.04 arm8 part 5\n- Topotests debian 10 amd64 part 1\n- Topotests Ubuntu 18.04 arm8 part 3\n- Addresssanitizer topotests part 5\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 2\n- Topotests Ubuntu 18.04 arm8 part 0\n- Static analyzer (clang)\n- Topotests debian 10 amd64 part 3\n- Addresssanitizer topotests part 0\n</details>\n\n</details>",
      "ci:rerun another stupid ci failure",
      "<details><summary>Continuous Integration Result: FAILED</summary>\n\n#  Continuous Integration Result: FAILED\n\nSee below for issues.\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10447/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n### Get source / Pull Request: Successful\n### Building Stage: Successful\n### Basic Tests: Failed\n<details>\n<summary>Topotests debian 10 amd64 part 3: Failed (click for details)</summary>\n\nTopology Test Results are at https://ci1.netdef.org/browse/FRR-PULLREQ2-TOPO3DEB10AMD64-10447/test\n\n\n__Topology Tests failed for Topotests debian 10 amd64 part 3__\n   see full log at https://ci1.netdef.org/browse/FRR-PULLREQ2-10447/artifact/TOPO3DEB10AMD64/TopotestLogs/log_topotests.txt\nTopotests debian 10 amd64 part 3: Unknown Log <TopotestDetails>\n    URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10447/artifact/TOPO3DEB10AMD64/TopotestDetails/\n</details>\n<details><summary>Successful on other platforms/tests</summary>\n\n- Ubuntu 16.04 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 5\n- Topotests debian 10 amd64 part 5\n- Topotests Ubuntu 18.04 arm8 part 2\n- Topotests Ubuntu 18.04 i386 part 1\n- Topotests Ubuntu 18.04 i386 part 6\n- Topotests Ubuntu 18.04 amd64 part 4\n- Addresssanitizer topotests part 9\n- Topotests Ubuntu 18.04 arm8 part 6\n- Topotests Ubuntu 18.04 arm8 part 7\n- Addresssanitizer topotests part 3\n- Topotests debian 10 amd64 part 6\n- Topotests Ubuntu 18.04 i386 part 7\n- Topotests Ubuntu 18.04 arm8 part 1\n- Addresssanitizer topotests part 7\n- Topotests Ubuntu 18.04 i386 part 2\n- Topotests Ubuntu 18.04 arm8 part 8\n- Topotests debian 10 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 7\n- Addresssanitizer topotests part 6\n- Topotests Ubuntu 18.04 i386 part 5\n- Topotests Ubuntu 18.04 i386 part 0\n- Topotests debian 10 amd64 part 9\n- Fedora 29 rpm pkg check\n- CentOS 7 rpm pkg check\n- Topotests Ubuntu 18.04 amd64 part 0\n- Topotests Ubuntu 18.04 amd64 part 3\n- Topotests Ubuntu 18.04 amd64 part 2\n- Topotests debian 10 amd64 part 8\n- Topotests Ubuntu 18.04 arm8 part 4\n- Topotests Ubuntu 18.04 arm8 part 9\n- Addresssanitizer topotests part 2\n- Topotests Ubuntu 18.04 amd64 part 1\n- Debian 9 deb pkg check\n- Ubuntu 18.04 deb pkg check\n- Ubuntu 20.04 deb pkg check\n- Addresssanitizer topotests part 1\n- Topotests Ubuntu 18.04 i386 part 4\n- Topotests debian 10 amd64 part 7\n- Topotests Ubuntu 18.04 amd64 part 9\n- Addresssanitizer topotests part 8\n- Topotests Ubuntu 18.04 i386 part 3\n- Topotests Ubuntu 18.04 i386 part 8\n- Debian 10 deb pkg check\n- Topotests Ubuntu 18.04 amd64 part 6\n- Topotests Ubuntu 18.04 arm8 part 3\n- Addresssanitizer topotests part 4\n- Topotests debian 10 amd64 part 1\n- Addresssanitizer topotests part 5\n- Topotests debian 10 amd64 part 4\n- Topotests Ubuntu 18.04 arm8 part 5\n- Topotests Ubuntu 18.04 arm8 part 0\n- Topotests Ubuntu 18.04 i386 part 9\n- Topotests Ubuntu 18.04 amd64 part 8\n- Topotests debian 10 amd64 part 2\n- Addresssanitizer topotests part 0\n- Static analyzer (clang)\n</details>\n\n</details>",
      "# Continuous Integration Result: SUCCESSFUL\n\nCongratulations, this patch passed basic tests\n\nTested-by: NetDEF / OpenSourceRouting.org CI System\n\nCI System Testrun URL: https://ci1.netdef.org/browse/FRR-PULLREQ2-10447/\n\nThis is a comment from an automated CI system.\nFor questions and feedback in regards to this CI system, please feel free to email\nMartin Winter - mwinter (at) opensourcerouting.org.\n\n\n",
      "@Mergifyio backport stable/8.5 stable/8.4",
      "> backport stable/8.5 stable/8.4\n\n#### ✅ Backports have been created\n\n<details>\n\n* [#13781 bgpd: Ensure stream received has enough data (backport #12454)](https://github.com/FRRouting/frr/pull/13781) has been created for branch `stable/8.5`\n* [#13782 bgpd: Ensure stream received has enough data (backport #12454)](https://github.com/FRRouting/frr/pull/13782) has been created for branch `stable/8.4`\n\n</details>\n\n\n<!---\nDO NOT EDIT\n-*- Mergify Payload -*-\n{\"command\": \"backport stable/8.5 stable/8.4\", \"conclusion\": \"success\"}\n-*- Mergify Payload End -*-\n-->"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0  \n\nThe commit addresses a buffer overflow risk by validating input lengths, ensuring security."
}