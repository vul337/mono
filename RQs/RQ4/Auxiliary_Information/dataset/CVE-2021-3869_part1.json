{
  "cve_id": "CVE-2021-3869",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "stanfordnlp/CoreNLP",
  "commit_msg": "Attempt to prevent external document attacks by wrapping DocumentBuilderFactory with a bunch of attribute changes",
  "commit_hash": "5d83f1e8482ca304db8be726cad89554c88f136a",
  "git_url": "https://github.com/stanfordnlp/CoreNLP/commit/5d83f1e8482ca304db8be726cad89554c88f136a",
  "file_path": "src/edu/stanford/nlp/time/XMLUtils.java",
  "func_name": "parseElement",
  "func_before": "public static Element parseElement(String xml) {\n    try {\n      DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();\n      DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();\n      Document doc = docBuilder.parse(new ByteArrayInputStream(xml.getBytes()));\n      return doc.getDocumentElement();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }",
  "abstract_func_before": "public static Element parseElement(String VAR_0) {\n    try {\n      DocumentBuilderFactory VAR_1 = VAR_2.newInstance();\n      DocumentBuilder VAR_3 = VAR_1.newDocumentBuilder();\n      Document VAR_4 = VAR_3.parse(new ByteArrayInputStream(VAR_0.getBytes()));\n      return VAR_4.getDocumentElement();\n    } catch (Exception VAR_5) {\n      throw new RuntimeException(VAR_5);\n    }\n  }",
  "func_graph_path_before": "stanfordnlp/CoreNLP/5d83f1e8482ca304db8be726cad89554c88f136a/XMLUtils.java/vul/before/0.json",
  "func": "public static Element parseElement(String xml) {\n    try {\n      DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();\n      DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();\n      Document doc = docBuilder.parse(new ByteArrayInputStream(xml.getBytes()));\n      return doc.getDocumentElement();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }",
  "abstract_func": "public static Element parseElement(String VAR_0) {\n    try {\n      DocumentBuilderFactory VAR_1 = safeDocumentBuilderFactory();\n      DocumentBuilder VAR_2 = VAR_1.newDocumentBuilder();\n      Document VAR_3 = VAR_2.parse(new ByteArrayInputStream(VAR_0.getBytes()));\n      return VAR_3.getDocumentElement();\n    } catch (Exception VAR_4) {\n      throw new RuntimeException(VAR_4);\n    }\n  }",
  "func_graph_path": "stanfordnlp/CoreNLP/5d83f1e8482ca304db8be726cad89554c88f136a/XMLUtils.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,6 @@\n public static Element parseElement(String xml) {\n     try {\n-      DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();\n+      DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();\n       DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();\n       Document doc = docBuilder.parse(new ByteArrayInputStream(xml.getBytes()));\n       return doc.getDocumentElement();",
  "diff_line_info": {
    "deleted_lines": [
      "      DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();"
    ],
    "added_lines": [
      "      DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/stanfordnlp/CoreNLP/pull/1200",
  "description": {
    "pr_info": {
      "title": "Attempt to prevent external document attacks by wrapping DocumentBuilâ€¦",
      "number": 1200
    },
    "comment": [
      "Attempt to prevent external document attacks by wrapping DocumentBuilderFactory with a bunch of attribute changes"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95  \nThe changes are intended to prevent external document attacks, suggesting a security vulnerability fix. The code modification uses a safer DocumentBuilderFactory, aligning with the security-focused commit message."
}