{
  "cve_id": "CVE-2020-14033",
  "cwe_ids": [
    "CWE-120"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "meetecho/janus-gateway",
  "commit_msg": "Fix sscanf-related security issues",
  "commit_hash": "fb85040405495748dbc7c4850b97da9b67b7b47b",
  "git_url": "https://github.com/meetecho/janus-gateway/commit/fb85040405495748dbc7c4850b97da9b67b7b47b",
  "file_path": "utils.c",
  "func_name": "janus_get_codec_from_pt",
  "func_before": "const char *janus_get_codec_from_pt(const char *sdp, int pt) {\n\tif(!sdp || pt < 0)\n\t\treturn NULL;\n\tif(pt == 0)\n\t\treturn \"pcmu\";\n\tif(pt == 8)\n\t\treturn \"pcma\";\n\tif(pt == 9)\n\t\treturn \"g722\";\n\t/* Look for the mapping */\n\tchar rtpmap[50];\n\tg_snprintf(rtpmap, 50, \"a=rtpmap:%d \", pt);\n\tconst char *line = strstr(sdp, \"m=\");\n\twhile(line) {\n\t\tchar *next = strchr(line, '\\n');\n\t\tif(next) {\n\t\t\t*next = '\\0';\n\t\t\tif(strstr(line, rtpmap)) {\n\t\t\t\t/* Gotcha! */\n\t\t\t\tchar name[100];\n\t\t\t\tif(sscanf(line, \"a=rtpmap:%d %s\", &pt, name) == 2) {\n\t\t\t\t\t*next = '\\n';\n\t\t\t\t\tif(strstr(name, \"vp8\") || strstr(name, \"VP8\"))\n\t\t\t\t\t\treturn \"vp8\";\n\t\t\t\t\tif(strstr(name, \"vp9\") || strstr(name, \"VP9\"))\n\t\t\t\t\t\treturn \"vp9\";\n\t\t\t\t\tif(strstr(name, \"h264\") || strstr(name, \"H264\"))\n\t\t\t\t\t\treturn \"h264\";\n\t\t\t\t\tif(strstr(name, \"av1\") || strstr(name, \"AV1\"))\n\t\t\t\t\t\treturn \"av1\";\n\t\t\t\t\tif(strstr(name, \"h265\") || strstr(name, \"H265\"))\n\t\t\t\t\t\treturn \"h265\";\n\t\t\t\t\tif(strstr(name, \"opus\") || strstr(name, \"OPUS\"))\n\t\t\t\t\t\treturn \"opus\";\n\t\t\t\t\tif(strstr(name, \"pcmu\") || strstr(name, \"PCMU\"))\n\t\t\t\t\t\treturn \"pcmu\";\n\t\t\t\t\tif(strstr(name, \"pcma\") || strstr(name, \"PCMA\"))\n\t\t\t\t\t\treturn \"pcma\";\n\t\t\t\t\tif(strstr(name, \"g722\") || strstr(name, \"G722\"))\n\t\t\t\t\t\treturn \"g722\";\n\t\t\t\t\tif(strstr(name, \"isac/16\") || strstr(name, \"ISAC/16\"))\n\t\t\t\t\t\treturn \"isac16\";\n\t\t\t\t\tif(strstr(name, \"isac/32\") || strstr(name, \"ISAC/32\"))\n\t\t\t\t\t\treturn \"isac32\";\n\t\t\t\t\tJANUS_LOG(LOG_ERR, \"Unsupported codec '%s'\\n\", name);\n\t\t\t\t\treturn NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t\t*next = '\\n';\n\t\t}\n\t\tline = next ? (next+1) : NULL;\n\t}\n\treturn NULL;\n}",
  "abstract_func_before": "const char *janus_get_codec_from_pt(const char *VAR_0, int VAR_1) {\n\tif(!VAR_0 || VAR_1 < 0)\n\t\treturn NULL;\n\tif(VAR_1 == 0)\n\t\treturn \"pcmu\";\n\tif(VAR_1 == 8)\n\t\treturn \"pcma\";\n\tif(VAR_1 == 9)\n\t\treturn \"g722\";\n\t/* COMMENT_0 */\n\tchar VAR_2[50];\n\tg_snprintf(VAR_2, 50, \"a=rtpmap:%d \", VAR_1);\n\tconst char *VAR_3 = strstr(VAR_0, \"m=\");\n\twhile(VAR_3) {\n\t\tchar *VAR_4 = strchr(VAR_3, '\\n');\n\t\tif(VAR_4) {\n\t\t\t*VAR_4 = '\\0';\n\t\t\tif(strstr(VAR_3, VAR_2)) {\n\t\t\t\t/* COMMENT_1 */\n\t\t\t\tchar VAR_5[100];\n\t\t\t\tif(sscanf(VAR_3, \"a=rtpmap:%d %s\", &VAR_1, VAR_5) == 2) {\n\t\t\t\t\t*VAR_4 = '\\n';\n\t\t\t\t\tif(strstr(VAR_5, \"vp8\") || strstr(VAR_5, \"VP8\"))\n\t\t\t\t\t\treturn \"vp8\";\n\t\t\t\t\tif(strstr(VAR_5, \"vp9\") || strstr(VAR_5, \"VP9\"))\n\t\t\t\t\t\treturn \"vp9\";\n\t\t\t\t\tif(strstr(VAR_5, \"h264\") || strstr(VAR_5, \"H264\"))\n\t\t\t\t\t\treturn \"h264\";\n\t\t\t\t\tif(strstr(VAR_5, \"av1\") || strstr(VAR_5, \"AV1\"))\n\t\t\t\t\t\treturn \"av1\";\n\t\t\t\t\tif(strstr(VAR_5, \"h265\") || strstr(VAR_5, \"H265\"))\n\t\t\t\t\t\treturn \"h265\";\n\t\t\t\t\tif(strstr(VAR_5, \"opus\") || strstr(VAR_5, \"OPUS\"))\n\t\t\t\t\t\treturn \"opus\";\n\t\t\t\t\tif(strstr(VAR_5, \"pcmu\") || strstr(VAR_5, \"PCMU\"))\n\t\t\t\t\t\treturn \"pcmu\";\n\t\t\t\t\tif(strstr(VAR_5, \"pcma\") || strstr(VAR_5, \"PCMA\"))\n\t\t\t\t\t\treturn \"pcma\";\n\t\t\t\t\tif(strstr(VAR_5, \"g722\") || strstr(VAR_5, \"G722\"))\n\t\t\t\t\t\treturn \"g722\";\n\t\t\t\t\tif(strstr(VAR_5, \"isac/16\") || strstr(VAR_5, \"ISAC/16\"))\n\t\t\t\t\t\treturn \"isac16\";\n\t\t\t\t\tif(strstr(VAR_5, \"isac/32\") || strstr(VAR_5, \"ISAC/32\"))\n\t\t\t\t\t\treturn \"isac32\";\n\t\t\t\t\tJANUS_LOG(VAR_6, \"Unsupported codec '%s'\\n\", VAR_5);\n\t\t\t\t\treturn NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t\t*VAR_4 = '\\n';\n\t\t}\n\t\tVAR_3 = VAR_4 ? (VAR_4+1) : NULL;\n\t}\n\treturn NULL;\n}",
  "func_graph_path_before": "meetecho/janus-gateway/fb85040405495748dbc7c4850b97da9b67b7b47b/utils.c/vul/before/0.json",
  "func": "const char *janus_get_codec_from_pt(const char *sdp, int pt) {\n\tif(!sdp || pt < 0)\n\t\treturn NULL;\n\tif(pt == 0)\n\t\treturn \"pcmu\";\n\tif(pt == 8)\n\t\treturn \"pcma\";\n\tif(pt == 9)\n\t\treturn \"g722\";\n\t/* Look for the mapping */\n\tchar rtpmap[50];\n\tg_snprintf(rtpmap, 50, \"a=rtpmap:%d \", pt);\n\tconst char *line = strstr(sdp, \"m=\");\n\twhile(line) {\n\t\tchar *next = strchr(line, '\\n');\n\t\tif(next) {\n\t\t\t*next = '\\0';\n\t\t\tif(strstr(line, rtpmap)) {\n\t\t\t\t/* Gotcha! */\n\t\t\t\tchar name[100];\n\t\t\t\tif(sscanf(line, \"a=rtpmap:%d %99s\", &pt, name) == 2) {\n\t\t\t\t\t*next = '\\n';\n\t\t\t\t\tif(strstr(name, \"vp8\") || strstr(name, \"VP8\"))\n\t\t\t\t\t\treturn \"vp8\";\n\t\t\t\t\tif(strstr(name, \"vp9\") || strstr(name, \"VP9\"))\n\t\t\t\t\t\treturn \"vp9\";\n\t\t\t\t\tif(strstr(name, \"h264\") || strstr(name, \"H264\"))\n\t\t\t\t\t\treturn \"h264\";\n\t\t\t\t\tif(strstr(name, \"av1\") || strstr(name, \"AV1\"))\n\t\t\t\t\t\treturn \"av1\";\n\t\t\t\t\tif(strstr(name, \"h265\") || strstr(name, \"H265\"))\n\t\t\t\t\t\treturn \"h265\";\n\t\t\t\t\tif(strstr(name, \"opus\") || strstr(name, \"OPUS\"))\n\t\t\t\t\t\treturn \"opus\";\n\t\t\t\t\tif(strstr(name, \"pcmu\") || strstr(name, \"PCMU\"))\n\t\t\t\t\t\treturn \"pcmu\";\n\t\t\t\t\tif(strstr(name, \"pcma\") || strstr(name, \"PCMA\"))\n\t\t\t\t\t\treturn \"pcma\";\n\t\t\t\t\tif(strstr(name, \"g722\") || strstr(name, \"G722\"))\n\t\t\t\t\t\treturn \"g722\";\n\t\t\t\t\tif(strstr(name, \"isac/16\") || strstr(name, \"ISAC/16\"))\n\t\t\t\t\t\treturn \"isac16\";\n\t\t\t\t\tif(strstr(name, \"isac/32\") || strstr(name, \"ISAC/32\"))\n\t\t\t\t\t\treturn \"isac32\";\n\t\t\t\t\tJANUS_LOG(LOG_ERR, \"Unsupported codec '%s'\\n\", name);\n\t\t\t\t\treturn NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t\t*next = '\\n';\n\t\t}\n\t\tline = next ? (next+1) : NULL;\n\t}\n\treturn NULL;\n}",
  "abstract_func": "const char *janus_get_codec_from_pt(const char *VAR_0, int VAR_1) {\n\tif(!VAR_0 || VAR_1 < 0)\n\t\treturn NULL;\n\tif(VAR_1 == 0)\n\t\treturn \"pcmu\";\n\tif(VAR_1 == 8)\n\t\treturn \"pcma\";\n\tif(VAR_1 == 9)\n\t\treturn \"g722\";\n\t/* COMMENT_0 */\n\tchar VAR_2[50];\n\tg_snprintf(VAR_2, 50, \"a=rtpmap:%d \", VAR_1);\n\tconst char *VAR_3 = strstr(VAR_0, \"m=\");\n\twhile(VAR_3) {\n\t\tchar *VAR_4 = strchr(VAR_3, '\\n');\n\t\tif(VAR_4) {\n\t\t\t*VAR_4 = '\\0';\n\t\t\tif(strstr(VAR_3, VAR_2)) {\n\t\t\t\t/* COMMENT_1 */\n\t\t\t\tchar VAR_5[100];\n\t\t\t\tif(sscanf(VAR_3, \"a=rtpmap:%d %99s\", &VAR_1, VAR_5) == 2) {\n\t\t\t\t\t*VAR_4 = '\\n';\n\t\t\t\t\tif(strstr(VAR_5, \"vp8\") || strstr(VAR_5, \"VP8\"))\n\t\t\t\t\t\treturn \"vp8\";\n\t\t\t\t\tif(strstr(VAR_5, \"vp9\") || strstr(VAR_5, \"VP9\"))\n\t\t\t\t\t\treturn \"vp9\";\n\t\t\t\t\tif(strstr(VAR_5, \"h264\") || strstr(VAR_5, \"H264\"))\n\t\t\t\t\t\treturn \"h264\";\n\t\t\t\t\tif(strstr(VAR_5, \"av1\") || strstr(VAR_5, \"AV1\"))\n\t\t\t\t\t\treturn \"av1\";\n\t\t\t\t\tif(strstr(VAR_5, \"h265\") || strstr(VAR_5, \"H265\"))\n\t\t\t\t\t\treturn \"h265\";\n\t\t\t\t\tif(strstr(VAR_5, \"opus\") || strstr(VAR_5, \"OPUS\"))\n\t\t\t\t\t\treturn \"opus\";\n\t\t\t\t\tif(strstr(VAR_5, \"pcmu\") || strstr(VAR_5, \"PCMU\"))\n\t\t\t\t\t\treturn \"pcmu\";\n\t\t\t\t\tif(strstr(VAR_5, \"pcma\") || strstr(VAR_5, \"PCMA\"))\n\t\t\t\t\t\treturn \"pcma\";\n\t\t\t\t\tif(strstr(VAR_5, \"g722\") || strstr(VAR_5, \"G722\"))\n\t\t\t\t\t\treturn \"g722\";\n\t\t\t\t\tif(strstr(VAR_5, \"isac/16\") || strstr(VAR_5, \"ISAC/16\"))\n\t\t\t\t\t\treturn \"isac16\";\n\t\t\t\t\tif(strstr(VAR_5, \"isac/32\") || strstr(VAR_5, \"ISAC/32\"))\n\t\t\t\t\t\treturn \"isac32\";\n\t\t\t\t\tJANUS_LOG(VAR_6, \"Unsupported codec '%s'\\n\", VAR_5);\n\t\t\t\t\treturn NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t\t*VAR_4 = '\\n';\n\t\t}\n\t\tVAR_3 = VAR_4 ? (VAR_4+1) : NULL;\n\t}\n\treturn NULL;\n}",
  "func_graph_path": "meetecho/janus-gateway/fb85040405495748dbc7c4850b97da9b67b7b47b/utils.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -18,7 +18,7 @@\n \t\t\tif(strstr(line, rtpmap)) {\n \t\t\t\t/* Gotcha! */\n \t\t\t\tchar name[100];\n-\t\t\t\tif(sscanf(line, \"a=rtpmap:%d %s\", &pt, name) == 2) {\n+\t\t\t\tif(sscanf(line, \"a=rtpmap:%d %99s\", &pt, name) == 2) {\n \t\t\t\t\t*next = '\\n';\n \t\t\t\t\tif(strstr(name, \"vp8\") || strstr(name, \"VP8\"))\n \t\t\t\t\t\treturn \"vp8\";",
  "diff_line_info": {
    "deleted_lines": [
      "\t\t\t\tif(sscanf(line, \"a=rtpmap:%d %s\", &pt, name) == 2) {"
    ],
    "added_lines": [
      "\t\t\t\tif(sscanf(line, \"a=rtpmap:%d %99s\", &pt, name) == 2) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/meetecho/janus-gateway/pull/2229",
  "description": {
    "pr_info": {
      "title": "Fix sscanf-related security issues",
      "number": 2229
    },
    "comment": [
      "We've been notified about a couple of security issues related to a broken usage of sscanf (reserved IDs: CVE-2020-14033, CVE-2020-14034, discovered by Marat Gayanov at Digital Security dsec.ru). Using that information, we extended the fix to a couple of other locations where the issue was present but not reported.\r\n\r\nMerging right away, considering these are important fixes and I can't replicate them anymore."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}