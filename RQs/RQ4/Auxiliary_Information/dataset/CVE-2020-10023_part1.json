{
  "cve_id": "CVE-2020-10023",
  "cwe_ids": [
    "CWE-120"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "zephyrproject-rtos/zephyr",
  "commit_msg": "shell: utils: Fix buffer overrun in shell_spaces_trim\n\nThe third argument in memmove can possible be greater than remaining\nbuffer size. Just ensuring that memmove will changes bytes only inside\nthe string buffer and nothing else.\n\nSigned-off-by: Flavio Ceolin <flavio.ceolin@intel.com>",
  "commit_hash": "abba6d7774cdd73665e69f6aa45f42439729e414",
  "git_url": "https://github.com/zephyrproject-rtos/zephyr/commit/abba6d7774cdd73665e69f6aa45f42439729e414",
  "file_path": "subsys/shell/shell_utils.c",
  "func_name": "shell_spaces_trim",
  "func_before": "void shell_spaces_trim(char *str)\n{\n\tu16_t len = shell_strlen(str);\n\tu16_t shift = 0U;\n\n\tif (!str) {\n\t\treturn;\n\t}\n\n\tfor (u16_t i = 0; i < len - 1; i++) {\n\t\tif (isspace((int)str[i])) {\n\t\t\tfor (u16_t j = i + 1; j < len; j++) {\n\t\t\t\tif (isspace((int)str[j])) {\n\t\t\t\t\tshift++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (shift > 0) {\n\t\t\t\t\t/* +1 for EOS */\n\t\t\t\t\tmemmove(&str[i + 1],\n\t\t\t\t\t\t&str[j],\n\t\t\t\t\t\tlen - shift + 1);\n\t\t\t\t\tlen -= shift;\n\t\t\t\t\tshift = 0U;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}",
  "abstract_func_before": "void shell_spaces_trim(char *VAR_0)\n{\n\tu16_t VAR_1 = shell_strlen(VAR_0);\n\tu16_t VAR_2 = 0U;\n\n\tif (!VAR_0) {\n\t\treturn;\n\t}\n\n\tfor (u16_t VAR_3 = 0; VAR_3 < VAR_1 - 1; VAR_3++) {\n\t\tif (isspace((int)VAR_0[VAR_3])) {\n\t\t\tfor (u16_t VAR_4 = VAR_3 + 1; VAR_4 < VAR_1; VAR_4++) {\n\t\t\t\tif (isspace((int)VAR_0[VAR_4])) {\n\t\t\t\t\tVAR_2++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (VAR_2 > 0) {\n\t\t\t\t\t/* COMMENT_0 */\n\t\t\t\t\tmemmove(&VAR_0[VAR_3 + 1],\n\t\t\t\t\t\t&VAR_0[VAR_4],\n\t\t\t\t\t\tVAR_1 - VAR_2 + 1);\n\t\t\t\t\tVAR_1 -= VAR_2;\n\t\t\t\t\tVAR_2 = 0U;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}",
  "func_graph_path_before": "zephyrproject-rtos/zephyr/abba6d7774cdd73665e69f6aa45f42439729e414/shell_utils.c/vul/before/0.json",
  "func": "void shell_spaces_trim(char *str)\n{\n\tu16_t len = shell_strlen(str);\n\tu16_t shift = 0U;\n\n\tif (!str) {\n\t\treturn;\n\t}\n\n\tfor (u16_t i = 0; i < len - 1; i++) {\n\t\tif (isspace((int)str[i])) {\n\t\t\tfor (u16_t j = i + 1; j < len; j++) {\n\t\t\t\tif (isspace((int)str[j])) {\n\t\t\t\t\tshift++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (shift > 0) {\n\t\t\t\t\t/* +1 for EOS */\n\t\t\t\t\tmemmove(&str[i + 1],\n\t\t\t\t\t\t&str[j],\n\t\t\t\t\t\tlen - j + 1);\n\t\t\t\t\tlen -= shift;\n\t\t\t\t\tshift = 0U;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}",
  "abstract_func": "void shell_spaces_trim(char *VAR_0)\n{\n\tu16_t VAR_1 = shell_strlen(VAR_0);\n\tu16_t VAR_2 = 0U;\n\n\tif (!VAR_0) {\n\t\treturn;\n\t}\n\n\tfor (u16_t VAR_3 = 0; VAR_3 < VAR_1 - 1; VAR_3++) {\n\t\tif (isspace((int)VAR_0[VAR_3])) {\n\t\t\tfor (u16_t VAR_4 = VAR_3 + 1; VAR_4 < VAR_1; VAR_4++) {\n\t\t\t\tif (isspace((int)VAR_0[VAR_4])) {\n\t\t\t\t\tVAR_2++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (VAR_2 > 0) {\n\t\t\t\t\t/* COMMENT_0 */\n\t\t\t\t\tmemmove(&VAR_0[VAR_3 + 1],\n\t\t\t\t\t\t&VAR_0[VAR_4],\n\t\t\t\t\t\tVAR_1 - VAR_4 + 1);\n\t\t\t\t\tVAR_1 -= VAR_2;\n\t\t\t\t\tVAR_2 = 0U;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}",
  "func_graph_path": "zephyrproject-rtos/zephyr/abba6d7774cdd73665e69f6aa45f42439729e414/shell_utils.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -19,7 +19,7 @@\n \t\t\t\t\t/* +1 for EOS */\n \t\t\t\t\tmemmove(&str[i + 1],\n \t\t\t\t\t\t&str[j],\n-\t\t\t\t\t\tlen - shift + 1);\n+\t\t\t\t\t\tlen - j + 1);\n \t\t\t\t\tlen -= shift;\n \t\t\t\t\tshift = 0U;\n \t\t\t\t}",
  "diff_line_info": {
    "deleted_lines": [
      "\t\t\t\t\t\tlen - shift + 1);"
    ],
    "added_lines": [
      "\t\t\t\t\t\tlen - j + 1);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/zephyrproject-rtos/zephyr/pull/23646",
  "description": {
    "pr_info": {
      "title": "Backport v1.14: shell: utils: Fix buffer overrun in shell_spaces_trim",
      "number": 23646
    },
    "comment": [
      "The third argument in memmove can possible be greater than remaining\r\nbuffer size. Just ensuring that memmove will changes bytes only inside\r\nthe string buffer and nothing else.\r\n\r\nSigned-off-by: Flavio Ceolin <flavio.ceolin@intel.com>\r\n\r\nBackporting #23304 to 1.14 branch"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "The patch addresses a buffer overrun issue, which is a security vulnerability, by correcting the memmove call parameters to prevent writing beyond the buffer's limits.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}