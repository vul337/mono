{
  "cve_id": "CVE-2019-13623",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "NationalSecurityAgency/ghidra",
  "commit_msg": "GT-3001 (#789) fix RestoreTask to safely extract files from zip.\n\nAbstracted guts of GFileSystemExtractAllTask, reused in RestoreTask.\nFixed NPE in RestoreTask if restore was canceled.",
  "commit_hash": "6c0171c9200b4490deb94abf3c92d1b3da59f9bf",
  "git_url": "https://github.com/NationalSecurityAgency/ghidra/commit/6c0171c9200b4490deb94abf3c92d1b3da59f9bf",
  "file_path": "Ghidra/Features/Base/src/main/java/ghidra/plugins/fsbrowser/tasks/GFileSystemExtractAllTask.java",
  "func_name": "handleUnexpectedException",
  "func_before": "private boolean handleUnexpectedException(GFile file, Exception e) {\n\t\terrorredFiles.put(file.getFSRL(), e.getMessage());\n\n\t\tif (skipAllErrors) {\n\t\t\treturn true;\n\t\t}\n\n\t\tint option = OptionDialog.showOptionDialog(parentComponent, \"Error Extracting File\",\n\t\t\t\"There was a problem copying file \" + file.getPath() + \"\\n\\n\" + e.getMessage() +\n\t\t\t\t\"\\n\\nSkip this file and continue or cancel entire operation?\",\n\t\t\t\"Skip && Continue\", \"Skip All\");\n\t\tif (option == OptionDialog.OPTION_TWO /* Skip All */) {\n\t\t\tskipAllErrors = true;\n\t\t}\n\n\t\tif (!skipAllErrors && option != OptionDialog.OPTION_ONE /* ie. != Skip this one*/) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}",
  "abstract_func_before": "private boolean handleUnexpectedException(GFile VAR_0, Exception VAR_1) {\n\t\tVAR_2.put(VAR_0.getFSRL(), VAR_1.getMessage());\n\n\t\tif (VAR_3) {\n\t\t\treturn true;\n\t\t}\n\n\t\tint VAR_4 = VAR_5.showOptionDialog(VAR_6, \"Error Extracting File\",\n\t\t\t\"There was a problem copying file \" + VAR_0.getPath() + \"\\n\\n\" + VAR_1.getMessage() +\n\t\t\t\t\"\\n\\nSkip this file and continue or cancel entire operation?\",\n\t\t\t\"Skip && Continue\", \"Skip All\");\n\t\tif (VAR_4 == VAR_5.OPTION_TWO /* COMMENT_0 */) {\n\t\t\tVAR_3 = true;\n\t\t}\n\n\t\tif (!VAR_3 && VAR_4 != VAR_5.OPTION_ONE /* COMMENT_1 */) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}",
  "func_graph_path_before": "NationalSecurityAgency/ghidra/6c0171c9200b4490deb94abf3c92d1b3da59f9bf/GFileSystemExtractAllTask.java/vul/before/0.json",
  "func": "@Override\n\tprotected boolean handleUnexpectedException(GFile file, Exception e) {\n\t\terrorredFiles.put(file.getFSRL(), e.getMessage());\n\n\t\tif (skipAllErrors) {\n\t\t\treturn true;\n\t\t}\n\n\t\tint option = OptionDialog.showOptionDialog(parentComponent, \"Error Extracting File\",\n\t\t\t\"There was a problem copying file \" + file.getPath() + \"\\n\\n\" + e.getMessage() +\n\t\t\t\t\"\\n\\nSkip this file and continue or cancel entire operation?\",\n\t\t\t\"Skip && Continue\", \"Skip All\");\n\t\tif (option == OptionDialog.OPTION_TWO /* Skip All */) {\n\t\t\tskipAllErrors = true;\n\t\t}\n\n\t\tif (!skipAllErrors && option != OptionDialog.OPTION_ONE /* ie. != Skip this one*/) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}",
  "abstract_func": "@Override\n\tprotected boolean handleUnexpectedException(GFile VAR_0, Exception VAR_1) {\n\t\tVAR_2.put(VAR_0.getFSRL(), VAR_1.getMessage());\n\n\t\tif (VAR_3) {\n\t\t\treturn true;\n\t\t}\n\n\t\tint VAR_4 = VAR_5.showOptionDialog(VAR_6, \"Error Extracting File\",\n\t\t\t\"There was a problem copying file \" + VAR_0.getPath() + \"\\n\\n\" + VAR_1.getMessage() +\n\t\t\t\t\"\\n\\nSkip this file and continue or cancel entire operation?\",\n\t\t\t\"Skip && Continue\", \"Skip All\");\n\t\tif (VAR_4 == VAR_5.OPTION_TWO /* COMMENT_0 */) {\n\t\t\tVAR_3 = true;\n\t\t}\n\n\t\tif (!VAR_3 && VAR_4 != VAR_5.OPTION_ONE /* COMMENT_1 */) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}",
  "func_graph_path": "NationalSecurityAgency/ghidra/6c0171c9200b4490deb94abf3c92d1b3da59f9bf/GFileSystemExtractAllTask.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,5 @@\n-private boolean handleUnexpectedException(GFile file, Exception e) {\n+@Override\n+\tprotected boolean handleUnexpectedException(GFile file, Exception e) {\n \t\terrorredFiles.put(file.getFSRL(), e.getMessage());\n \n \t\tif (skipAllErrors) {",
  "diff_line_info": {
    "deleted_lines": [
      "private boolean handleUnexpectedException(GFile file, Exception e) {"
    ],
    "added_lines": [
      "@Override",
      "\tprotected boolean handleUnexpectedException(GFile file, Exception e) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/NationalSecurityAgency/ghidra/pull/812",
  "description": {
    "pr_info": {
      "title": "GT-3001 (#789) fix RestoreTask to safely extract files from zip.",
      "number": 812
    },
    "comment": [
      "Abstracted guts of GFileSystemExtractAllTask, reused in RestoreTask.\r\nFixed NPE in RestoreTask if restore was canceled.\r\n\r\nFixes #789. "
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.8"
}