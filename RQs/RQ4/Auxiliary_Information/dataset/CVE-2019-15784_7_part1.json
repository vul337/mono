{
  "cve_id": "CVE-2019-15784",
  "cwe_ids": [
    "CWE-129"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "Haivision/srt",
  "commit_msg": "[core] CSndUList initial size is reduced to 512 elements",
  "commit_hash": "64875fa98ff6afd2f21a9727970fb4333efe95de",
  "git_url": "https://github.com/Haivision/srt/commit/64875fa98ff6afd2f21a9727970fb4333efe95de",
  "file_path": "srtcore/queue.cpp",
  "func_name": "CSndUList::pop",
  "func_before": "int CSndUList::pop(sockaddr*& addr, CPacket& pkt)\n{\n   CGuard listguard(m_ListLock);\n\n   if (-1 == m_iLastEntry)\n      return -1;\n\n   // no pop until the next schedulled time\n   uint64_t ts;\n   CTimer::rdtsc(ts);\n   if (ts < m_pHeap[0]->m_llTimeStamp_tk)\n      return -1;\n\n   CUDT* u = m_pHeap[0]->m_pUDT;\n   remove_(u);\n\n#define UST(field) ( (u->m_b##field) ? \"+\" : \"-\" ) << #field << \" \"\n\n   HLOGC(mglog.Debug, log << \"SND:pop: requesting packet from @\" << u->socketID()\n           << \" STATUS: \"\n           << UST(Listening)\n           << UST(Connecting)\n           << UST(Connected)\n           << UST(Closing)\n           << UST(Shutdown)\n           << UST(Broken)\n           << UST(PeerHealth)\n           << UST(Opened)\n        );\n#undef UST\n\n   if (!u->m_bConnected || u->m_bBroken)\n      return -1;\n\n   // pack a packet from the socket\n   if (u->packData(pkt, ts) <= 0)\n      return -1;\n\n   addr = u->m_pPeerAddr;\n\n   // insert a new entry, ts is the next processing time\n   if (ts > 0)\n      insert_norealloc(ts, u);\n\n   return 1;\n}",
  "abstract_func_before": "int CSndUList::pop(sockaddr*& VAR_0, CPacket& VAR_1)\n{\n   CGuard listguard(m_ListLock);\n\n   if (-1 == VAR_2)\n      return -1;\n\n   /* COMMENT_0 */\n   uint64_t VAR_3;\n   CTimer::rdtsc(VAR_3);\n   if (VAR_3 < VAR_4[0]->m_llTimeStamp_tk)\n      return -1;\n\n   CUDT* VAR_5 = VAR_4[0]->m_pUDT;\n   remove_(VAR_5);\n\n#define UST(VAR_6) ( (u->m_b##field) ? \"+\" : \"-\" ) << #field << \" \"\n\n   HLOGC(VAR_7.Debug, VAR_8 << \"SND:pop: requesting packet from @\" << VAR_5->socketID()\n           << \" STATUS: \"\n           << UST(VAR_9)\n           << UST(VAR_10)\n           << UST(VAR_11)\n           << UST(VAR_12)\n           << UST(VAR_13)\n           << UST(VAR_14)\n           << UST(VAR_15)\n           << UST(VAR_16)\n        );\n#undef UST\n\n   if (!VAR_5->m_bConnected || VAR_5->m_bBroken)\n      return -1;\n\n   /* COMMENT_1 */\n   if (VAR_5->packData(VAR_1, VAR_3) <= 0)\n      return -1;\n\n   VAR_0 = VAR_5->m_pPeerAddr;\n\n   /* COMMENT_2 */\n   if (VAR_3 > 0)\n      insert_norealloc(VAR_3, VAR_5);\n\n   return 1;\n}",
  "func_graph_path_before": "Haivision/srt/64875fa98ff6afd2f21a9727970fb4333efe95de/queue.cpp/vul/before/5.json",
  "func": "int CSndUList::pop(sockaddr*& addr, CPacket& pkt)\n{\n   CGuard listguard(m_ListLock);\n\n   if (-1 == m_iLastEntry)\n      return -1;\n\n   // no pop until the next schedulled time\n   uint64_t ts;\n   CTimer::rdtsc(ts);\n   if (ts < m_pHeap[0]->m_llTimeStamp_tk)\n      return -1;\n\n   CUDT* u = m_pHeap[0]->m_pUDT;\n   remove_(u);\n\n#define UST(field) ( (u->m_b##field) ? \"+\" : \"-\" ) << #field << \" \"\n\n   HLOGC(mglog.Debug, log << \"SND:pop: requesting packet from @\" << u->socketID()\n           << \" STATUS: \"\n           << UST(Listening)\n           << UST(Connecting)\n           << UST(Connected)\n           << UST(Closing)\n           << UST(Shutdown)\n           << UST(Broken)\n           << UST(PeerHealth)\n           << UST(Opened)\n        );\n#undef UST\n\n   if (!u->m_bConnected || u->m_bBroken)\n      return -1;\n\n   // pack a packet from the socket\n   if (u->packData(pkt, ts) <= 0)\n      return -1;\n\n   addr = u->m_pPeerAddr;\n\n   // insert a new entry, ts is the next processing time\n   if (ts > 0)\n      insert_norealloc_(ts, u);\n\n   return 1;\n}",
  "abstract_func": "int CSndUList::pop(sockaddr*& VAR_0, CPacket& VAR_1)\n{\n   CGuard listguard(m_ListLock);\n\n   if (-1 == VAR_2)\n      return -1;\n\n   /* COMMENT_0 */\n   uint64_t VAR_3;\n   CTimer::rdtsc(VAR_3);\n   if (VAR_3 < VAR_4[0]->m_llTimeStamp_tk)\n      return -1;\n\n   CUDT* VAR_5 = VAR_4[0]->m_pUDT;\n   remove_(VAR_5);\n\n#define UST(VAR_6) ( (u->m_b##field) ? \"+\" : \"-\" ) << #field << \" \"\n\n   HLOGC(VAR_7.Debug, VAR_8 << \"SND:pop: requesting packet from @\" << VAR_5->socketID()\n           << \" STATUS: \"\n           << UST(VAR_9)\n           << UST(VAR_10)\n           << UST(VAR_11)\n           << UST(VAR_12)\n           << UST(VAR_13)\n           << UST(VAR_14)\n           << UST(VAR_15)\n           << UST(VAR_16)\n        );\n#undef UST\n\n   if (!VAR_5->m_bConnected || VAR_5->m_bBroken)\n      return -1;\n\n   /* COMMENT_1 */\n   if (VAR_5->packData(VAR_1, VAR_3) <= 0)\n      return -1;\n\n   VAR_0 = VAR_5->m_pPeerAddr;\n\n   /* COMMENT_2 */\n   if (VAR_3 > 0)\n      insert_norealloc_(VAR_3, VAR_5);\n\n   return 1;\n}",
  "func_graph_path": "Haivision/srt/64875fa98ff6afd2f21a9727970fb4333efe95de/queue.cpp/vul/after/5.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -40,7 +40,7 @@\n \n    // insert a new entry, ts is the next processing time\n    if (ts > 0)\n-      insert_norealloc(ts, u);\n+      insert_norealloc_(ts, u);\n \n    return 1;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "      insert_norealloc(ts, u);"
    ],
    "added_lines": [
      "      insert_norealloc_(ts, u);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Haivision/srt/pull/811",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/Haivision/srt/pull/811: 403 Client Error: Forbidden for url: https://api.github.com/repos/Haivision/srt/pulls/811",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.8"
}