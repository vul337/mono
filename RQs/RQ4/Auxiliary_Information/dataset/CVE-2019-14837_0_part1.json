{
  "cve_id": "CVE-2019-14837",
  "cwe_ids": [
    "CWE-798"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "keycloak",
  "commit_msg": "KEYCLOAK-10780 Stop creating placeholder e-mails for service accounts (#228)",
  "commit_hash": "9a7c1a91a59ab85e7f8889a505be04a71580777f",
  "git_url": "https://github.com/keycloak/keycloak/commit/9a7c1a91a59ab85e7f8889a505be04a71580777f",
  "file_path": "services/src/main/java/org/keycloak/services/managers/ClientManager.java",
  "func_name": "clientIdChanged",
  "func_before": "public void clientIdChanged(ClientModel client, String newClientId) {\n        logger.debugf(\"Updating clientId from '%s' to '%s'\", client.getClientId(), newClientId);\n\n        UserModel serviceAccountUser = realmManager.getSession().users().getServiceAccount(client);\n        if (serviceAccountUser != null) {\n            String username = ServiceAccountConstants.SERVICE_ACCOUNT_USER_PREFIX + newClientId;\n            serviceAccountUser.setUsername(username);\n            serviceAccountUser.setEmail(username + \"@placeholder.org\");\n        }\n    }",
  "abstract_func_before": "public void clientIdChanged(ClientModel VAR_0, String VAR_1) {\n        VAR_2.debugf(\"Updating clientId from '%s' to '%s'\", VAR_0.getClientId(), VAR_1);\n\n        UserModel VAR_3 = VAR_4.getSession().users().getServiceAccount(VAR_0);\n        if (VAR_3 != null) {\n            String VAR_5 = VAR_6.SERVICE_ACCOUNT_USER_PREFIX + VAR_1;\n            VAR_3.setUsername(VAR_5);\n            VAR_3.setEmail(VAR_5 + \"@placeholder.org\");\n        }\n    }",
  "func_graph_path_before": "keycloak/9a7c1a91a59ab85e7f8889a505be04a71580777f/ClientManager.java/vul/before/1.json",
  "func": "public void clientIdChanged(ClientModel client, String newClientId) {\n        logger.debugf(\"Updating clientId from '%s' to '%s'\", client.getClientId(), newClientId);\n\n        UserModel serviceAccountUser = realmManager.getSession().users().getServiceAccount(client);\n        if (serviceAccountUser != null) {\n            String username = ServiceAccountConstants.SERVICE_ACCOUNT_USER_PREFIX + newClientId;\n            serviceAccountUser.setUsername(username);\n        }\n    }",
  "abstract_func": "public void clientIdChanged(ClientModel VAR_0, String VAR_1) {\n        VAR_2.debugf(\"Updating clientId from '%s' to '%s'\", VAR_0.getClientId(), VAR_1);\n\n        UserModel VAR_3 = VAR_4.getSession().users().getServiceAccount(VAR_0);\n        if (VAR_3 != null) {\n            String VAR_5 = VAR_6.SERVICE_ACCOUNT_USER_PREFIX + VAR_1;\n            VAR_3.setUsername(VAR_5);\n        }\n    }",
  "func_graph_path": "keycloak/9a7c1a91a59ab85e7f8889a505be04a71580777f/ClientManager.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -5,6 +5,5 @@\n         if (serviceAccountUser != null) {\n             String username = ServiceAccountConstants.SERVICE_ACCOUNT_USER_PREFIX + newClientId;\n             serviceAccountUser.setUsername(username);\n-            serviceAccountUser.setEmail(username + \"@placeholder.org\");\n         }\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "            serviceAccountUser.setEmail(username + \"@placeholder.org\");"
    ],
    "added_lines": []
  },
  "is_vul": true,
  "pr_url": "https://github.com/keycloak/keycloak/pull/6486",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/keycloak/keycloak/pull/6486: 403 Client Error: Forbidden for url: https://api.github.com/repos/keycloak/keycloak/pulls/6486",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.7"
}