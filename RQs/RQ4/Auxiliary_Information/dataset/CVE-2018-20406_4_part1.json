{
  "cve_id": "CVE-2018-20406",
  "cwe_ids": [
    "CWE-190"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "python/cpython",
  "commit_msg": "closes bpo-34656: Avoid relying on signed overflow in _pickle memos. (GH-9261)",
  "commit_hash": "a4ae828ee416a66d8c7bf5ee71d653c2cc6a26dd",
  "git_url": "https://github.com/python/cpython/commit/a4ae828ee416a66d8c7bf5ee71d653c2cc6a26dd",
  "file_path": "Modules/_pickle.c",
  "func_name": "_Unpickler_MemoPut",
  "func_before": "static int\n_Unpickler_MemoPut(UnpicklerObject *self, Py_ssize_t idx, PyObject *value)\n{\n    PyObject *old_item;\n\n    if (idx >= self->memo_size) {\n        if (_Unpickler_ResizeMemoList(self, idx * 2) < 0)\n            return -1;\n        assert(idx < self->memo_size);\n    }\n    Py_INCREF(value);\n    old_item = self->memo[idx];\n    self->memo[idx] = value;\n    if (old_item != NULL) {\n        Py_DECREF(old_item);\n    }\n    else {\n        self->memo_len++;\n    }\n    return 0;\n}",
  "abstract_func_before": "static int\n_Unpickler_MemoPut(UnpicklerObject *VAR_0, Py_ssize_t VAR_1, PyObject *VAR_2)\n{\n    PyObject *VAR_3;\n\n    if (VAR_1 >= VAR_0->memo_size) {\n        if (_Unpickler_ResizeMemoList(VAR_0, VAR_1 * 2) < 0)\n            return -1;\n        assert(VAR_1 < VAR_0->memo_size);\n    }\n    Py_INCREF(VAR_2);\n    VAR_3 = VAR_0->memo[VAR_1];\n    VAR_0->memo[VAR_1] = VAR_2;\n    if (VAR_3 != NULL) {\n        Py_DECREF(VAR_3);\n    }\n    else {\n        VAR_0->memo_len++;\n    }\n    return 0;\n}",
  "func_graph_path_before": "python/cpython/a4ae828ee416a66d8c7bf5ee71d653c2cc6a26dd/_pickle.c/vul/before/5.json",
  "func": "static int\n_Unpickler_MemoPut(UnpicklerObject *self, size_t idx, PyObject *value)\n{\n    PyObject *old_item;\n\n    if (idx >= self->memo_size) {\n        if (_Unpickler_ResizeMemoList(self, idx * 2) < 0)\n            return -1;\n        assert(idx < self->memo_size);\n    }\n    Py_INCREF(value);\n    old_item = self->memo[idx];\n    self->memo[idx] = value;\n    if (old_item != NULL) {\n        Py_DECREF(old_item);\n    }\n    else {\n        self->memo_len++;\n    }\n    return 0;\n}",
  "abstract_func": "static int\n_Unpickler_MemoPut(UnpicklerObject *VAR_0, size_t VAR_1, PyObject *VAR_2)\n{\n    PyObject *VAR_3;\n\n    if (VAR_1 >= VAR_0->memo_size) {\n        if (_Unpickler_ResizeMemoList(VAR_0, VAR_1 * 2) < 0)\n            return -1;\n        assert(VAR_1 < VAR_0->memo_size);\n    }\n    Py_INCREF(VAR_2);\n    VAR_3 = VAR_0->memo[VAR_1];\n    VAR_0->memo[VAR_1] = VAR_2;\n    if (VAR_3 != NULL) {\n        Py_DECREF(VAR_3);\n    }\n    else {\n        VAR_0->memo_len++;\n    }\n    return 0;\n}",
  "func_graph_path": "python/cpython/a4ae828ee416a66d8c7bf5ee71d653c2cc6a26dd/_pickle.c/vul/after/5.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,5 @@\n static int\n-_Unpickler_MemoPut(UnpicklerObject *self, Py_ssize_t idx, PyObject *value)\n+_Unpickler_MemoPut(UnpicklerObject *self, size_t idx, PyObject *value)\n {\n     PyObject *old_item;\n ",
  "diff_line_info": {
    "deleted_lines": [
      "_Unpickler_MemoPut(UnpicklerObject *self, Py_ssize_t idx, PyObject *value)"
    ],
    "added_lines": [
      "_Unpickler_MemoPut(UnpicklerObject *self, size_t idx, PyObject *value)"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/python/cpython/pull/9261",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/python/cpython/pull/9261: 403 Client Error: Forbidden for url: https://api.github.com/repos/python/cpython/pulls/9261",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "Step-by-step explanation:\n\n1. **Commit Message Analysis:** The message addresses an overflow issue, a known security problem.\n\n2. **Code Diff Review:** Changes the type to unsigned, preventing overflow.\n\n3. **Context from Linked Issue:** Reference to bpo-1621 indicates a security vulnerability.\n\n4. **Consistency Check:** Commit description matches the code changes.\n\n5. **Impact:** Mitigates a potential security exploit in unpickling.\n\n**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}