{
  "cve_id": "CVE-2022-29184",
  "cwe_ids": [
    "CWE-77"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "gocd",
  "commit_msg": "Improve escaping of arguments when constructing Hg command calls",
  "commit_hash": "37d35115db2ada2190173f9413cfe1bc6c295ecb",
  "git_url": "https://github.com/gocd/gocd/commit/37d35115db2ada2190173f9413cfe1bc6c295ecb",
  "file_path": "domain/src/main/java/com/thoughtworks/go/domain/materials/mercurial/HgCommand.java",
  "func_name": "templatePath",
  "func_before": "private String templatePath() {\n        if (templatePath == null) {\n            String file = HgCommand.class.getResource(\"/hg.template\").getFile();\n            try {\n                templatePath = URLDecoder.decode(new File(file).getAbsolutePath(), \"UTF-8\");\n            } catch (UnsupportedEncodingException e) {\n                templatePath = URLDecoder.decode(new File(file).getAbsolutePath());\n            }\n        }\n        return templatePath;\n    }",
  "abstract_func_before": "private String templatePath() {\n        if (VAR_0 == null) {\n            String VAR_1 = HgCommand.class.getResource(\"/hg.template\").getFile();\n            try {\n                VAR_0 = VAR_2.decode(new File(VAR_1).getAbsolutePath(), \"UTF-8\");\n            } catch (UnsupportedEncodingException VAR_3) {\n                VAR_0 = VAR_2.decode(new File(VAR_1).getAbsolutePath());\n            }\n        }\n        return VAR_0;\n    }",
  "func_graph_path_before": "gocd/37d35115db2ada2190173f9413cfe1bc6c295ecb/HgCommand.java/vul/before/0.json",
  "func": "private String templatePath() {\n        if (templatePath == null) {\n            String file = HgCommand.class.getResource(\"/hg.template\").getFile();\n            templatePath = URLDecoder.decode(new File(file).getAbsolutePath(), StandardCharsets.UTF_8);\n        }\n        return templatePath;\n    }",
  "abstract_func": "private String templatePath() {\n        if (VAR_0 == null) {\n            String VAR_1 = HgCommand.class.getResource(\"/hg.template\").getFile();\n            VAR_0 = VAR_2.decode(new File(VAR_1).getAbsolutePath(), VAR_3.UTF_8);\n        }\n        return VAR_0;\n    }",
  "func_graph_path": "gocd/37d35115db2ada2190173f9413cfe1bc6c295ecb/HgCommand.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,11 +1,7 @@\n private String templatePath() {\n         if (templatePath == null) {\n             String file = HgCommand.class.getResource(\"/hg.template\").getFile();\n-            try {\n-                templatePath = URLDecoder.decode(new File(file).getAbsolutePath(), \"UTF-8\");\n-            } catch (UnsupportedEncodingException e) {\n-                templatePath = URLDecoder.decode(new File(file).getAbsolutePath());\n-            }\n+            templatePath = URLDecoder.decode(new File(file).getAbsolutePath(), StandardCharsets.UTF_8);\n         }\n         return templatePath;\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "            try {",
      "                templatePath = URLDecoder.decode(new File(file).getAbsolutePath(), \"UTF-8\");",
      "            } catch (UnsupportedEncodingException e) {",
      "                templatePath = URLDecoder.decode(new File(file).getAbsolutePath());",
      "            }"
    ],
    "added_lines": [
      "            templatePath = URLDecoder.decode(new File(file).getAbsolutePath(), StandardCharsets.UTF_8);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/gocd/gocd/pull/10240",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/gocd/gocd/pull/10240: 403 Client Error: Forbidden for url: https://api.github.com/repos/gocd/gocd/pulls/10240",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}