{
  "cve_id": "CVE-2022-29183",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "gocd",
  "commit_msg": "Escape any HTML that happens to be inside an error message when rendering as HTML",
  "commit_hash": "bda81084c0401234b168437cf35a63390e3064d1",
  "git_url": "https://github.com/gocd/gocd/commit/bda81084c0401234b168437cf35a63390e3064d1",
  "file_path": "spark/spark-base/src/main/java/com/thoughtworks/go/spark/HtmlErrorPage.java",
  "func_name": "errorPage",
  "func_before": "public static String errorPage(int code, String message) {\n        return Holder.INSTANCE.replaceAll(buildRegex(\"status_code\"), valueOf(code))\n                .replaceAll(buildRegex(\"error_message\"), message);\n    }",
  "abstract_func_before": "public static String errorPage(int VAR_0, String VAR_1) {\n        return VAR_2.INSTANCE.replaceAll(buildRegex(\"status_code\"), valueOf(VAR_0))\n                .replaceAll(buildRegex(\"error_message\"), VAR_1);\n    }",
  "func_graph_path_before": "gocd/bda81084c0401234b168437cf35a63390e3064d1/HtmlErrorPage.java/vul/before/0.json",
  "func": "public static String errorPage(int code, String message) {\n        return Holder.INSTANCE.replaceAll(buildRegex(\"status_code\"), valueOf(code))\n                .replaceAll(buildRegex(\"error_message\"), StringEscapeUtils.escapeHtml4(message));\n    }",
  "abstract_func": "public static String errorPage(int VAR_0, String VAR_1) {\n        return VAR_2.INSTANCE.replaceAll(buildRegex(\"status_code\"), valueOf(VAR_0))\n                .replaceAll(buildRegex(\"error_message\"), VAR_3.escapeHtml4(VAR_1));\n    }",
  "func_graph_path": "gocd/bda81084c0401234b168437cf35a63390e3064d1/HtmlErrorPage.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,4 @@\n public static String errorPage(int code, String message) {\n         return Holder.INSTANCE.replaceAll(buildRegex(\"status_code\"), valueOf(code))\n-                .replaceAll(buildRegex(\"error_message\"), message);\n+                .replaceAll(buildRegex(\"error_message\"), StringEscapeUtils.escapeHtml4(message));\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "                .replaceAll(buildRegex(\"error_message\"), message);"
    ],
    "added_lines": [
      "                .replaceAll(buildRegex(\"error_message\"), StringEscapeUtils.escapeHtml4(message));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/gocd/gocd/pull/9829",
  "description": {
    "pr_info": {
      "title": "Escape HTML in rendered error messages",
      "number": 9829
    },
    "comment": [
      "Ensures anything inside an error message does not render as HTML on the error page."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}