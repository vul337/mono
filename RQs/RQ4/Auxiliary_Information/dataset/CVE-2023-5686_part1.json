{
  "cve_id": "CVE-2023-5686",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix oobread in the java disassembler ##asan\n\n* Causes UB when performing analysis, not exploitable\n* https://huntr.com/bounties/bbfe1f76-8fa1-4a8c-909d-65b16e970be0/\n* Reported by @gandalf4a",
  "commit_hash": "1bdda93e348c160c84e30da3637acef26d0348de",
  "git_url": "https://github.com/radareorg/radare2/commit/1bdda93e348c160c84e30da3637acef26d0348de",
  "file_path": "shlr/java/code.c",
  "func_name": "java_print_opcode",
  "func_before": "R_API int java_print_opcode(RBinJavaObj *obj, ut64 addr, int idx, const ut8 *bytes, int len, char *output, int outlen) {\n\tif (idx < 0 || idx >= JAVA_OPS_COUNT) {\n\t\treturn -1;\n\t}\n\tchar *arg = NULL;\n\tint sz = 0;\n\tut32 val_one = 0;\n\tut32 val_two = 0;\n\tut8 op_byte = JAVA_OPS[idx].byte;\n\tif (IN_SWITCH_OP) {\n\t\treturn handle_switch_op (addr, bytes, len, output, outlen);\n\t}\n\tR_LOG_DEBUG (\"Handling the following opcode %s expects: %d byte(s), BYTES_CONSUMED: 0x%04\"PFMT64x,\n\t\t\tJAVA_OPS[idx].name, JAVA_OPS[idx].size, BYTES_CONSUMED);\n\tswitch (op_byte) {\n\tcase 0x10: // \"bipush\"\n\t\tif (len > 1) {\n\t\t\tsnprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, (char) bytes[1]);\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x11:\n\t\tif (len > 2) {\n\t\t\tsnprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, (int)USHORT (bytes, 1));\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x15: // \"iload\"\n\tcase 0x16: // \"lload\"\n\tcase 0x17: // \"fload\"\n\tcase 0x18: // \"dload\"\n\tcase 0x19: // \"aload\"\n\tcase 0x37: // \"lstore\"\n\tcase 0x38: // \"fstore\"\n\tcase 0x39: // \"dstore\"\n\tcase 0x3a: // \"astore\"\n\tcase 0xbc: // \"newarray\"\n\tcase 0xa9: // ret <var-num>\n\t\tif (len > 1) {\n\t\t\tsnprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, bytes[1]);\n\t\t\toutput[outlen-1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t} else {\n\t\t\t// ERROR\n\t\t\treturn 0;\n\t\t}\n\t\tbreak;\n\tcase 0x12: // ldc\n\t\tif (len > 1) {\n\t\t\targ = r_bin_java_resolve_without_space (obj, (ut16)bytes[1]);\n\t\t\tif (arg) {\n\t\t\t\tsnprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);\n\t\t\t\tfree (arg);\n\t\t\t} else {\n\t\t\t\tsnprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1));\n\t\t\t}\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x13:\n\tcase 0x14:\n\t\tif (len > 2) {\n\t\t\targ = r_bin_java_resolve_without_space (obj, (int)USHORT (bytes, 1));\n\t\t\tif (arg) {\n\t\t\t\tsnprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);\n\t\t\t\tfree (arg);\n\t\t\t} else {\n\t\t\t\tsnprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1));\n\t\t\t}\n\t\t\toutput[outlen-1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x84: // iinc\n\t\tif (len > 2) {\n\t\t\tval_one = (ut32)bytes[1];\n\t\t\tval_two = (ut32) bytes[2];\n\t\t\tsnprintf (output, outlen, \"%s %d %d\", JAVA_OPS[idx].name, val_one, val_two);\n\t\t\toutput[outlen-1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x99: // ifeq\n\tcase 0x9a: // ifne\n\tcase 0x9b: // iflt\n\tcase 0x9c: // ifge\n\tcase 0x9d: // ifgt\n\tcase 0x9e: // ifle\n\tcase 0x9f: // if_icmpeq\n\tcase 0xa0: // if_icmpne\n\tcase 0xa1: // if_icmplt\n\tcase 0xa2: // if_icmpge\n\tcase 0xa3: // if_icmpgt\n\tcase 0xa4: // if_icmple\n\tcase 0xa5: // if_acmpne\n\tcase 0xa6: // if_acmpne\n\tcase 0xa7: // goto\n\tcase 0xa8: // jsr\n\t\tif (len > 1) {\n\t\t\tsnprintf (output, outlen, \"%s 0x%04\"PFMT64x, JAVA_OPS[idx].name,\n\t\t\t\t\t(addr + (short)USHORT (bytes, 1)));\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\t\t// XXX - Figure out what constitutes the [<high>] value\n\tcase 0xab: // tableswitch\n\tcase 0xaa: // tableswitch\n\t\tsz = enter_switch_op (addr, bytes, len);\n\t\tsnprintf (output, outlen, \"%s default: 0x%04\"PFMT64x,\n\t\t\t\tJAVA_OPS[idx].name,\n\t\t\t\t(ut64)(SWITCH_OP.def_jmp+SWITCH_OP.addr));\n\t\treturn update_bytes_consumed (sz);\n\tcase 0xb6: // invokevirtual\n\tcase 0xb7: // invokespecial\n\tcase 0xb8: // invokestatic\n\tcase 0xb9: // invokeinterface\n\tcase 0xba: // invokedynamic\n\t\tif (len > 2) {\n\t\t\targ = r_bin_java_resolve_without_space (obj, (int)USHORT (bytes, 1));\n\t\t\tif (arg) {\n\t\t\t\tsnprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);\n\t\t\t\tfree (arg);\n\t\t\t} else {\n\t\t\t\tsnprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1) );\n\t\t\t}\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0xbb: // new\n\tcase 0xbd: // anewarray\n\tcase 0xc0: // checkcast\n\tcase 0xc1: // instance of\n\t\tif (len > 2) {\n\t\t\targ = r_bin_java_resolve_without_space (obj, (int)USHORT (bytes, 1));\n\t\t\tif (arg) {\n\t\t\t\tsnprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);\n\t\t\t\tfree (arg);\n\t\t\t} else {\n\t\t\t\tsnprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1) );\n\t\t\t}\n\t\t\toutput[outlen-1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0xb2: // getstatic\n\tcase 0xb3: // putstatic\n\tcase 0xb4: // getfield\n\tcase 0xb5: // putfield\n\t\tif (len > 2) {\n\t\t\targ = r_bin_java_resolve_with_space (obj, (int)USHORT (bytes, 1));\n\t\t\tif (arg) {\n\t\t\t\tsnprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);\n\t\t\t\tfree (arg);\n\t\t\t} else {\n\t\t\t\tsnprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1) );\n\t\t\t}\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/* process arguments */\n\tif (JAVA_OPS[idx].size > len) {\n\t\tsnprintf (output, outlen, \"truncated\");\n\t\treturn -1;\n\t}\n\tswitch (JAVA_OPS[idx].size) {\n\tcase 1: snprintf (output, outlen, \"%s\", JAVA_OPS[idx].name);\n\t\tbreak;\n\tcase 2: snprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, bytes[1]);\n\t\tbreak;\n\tcase 3: snprintf (output, outlen, \"%s 0x%04x 0x%04x\", JAVA_OPS[idx].name, bytes[0], bytes[1]);\n\t\tbreak;\n\tcase 5: snprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, bytes[1]);\n\t\tbreak;\n\t}\n\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n}",
  "abstract_func_before": "R_API int java_print_opcode(RBinJavaObj *VAR_0, ut64 VAR_1, int VAR_2, const ut8 *VAR_3, int VAR_4, char *VAR_5, int VAR_6) {\n\tif (VAR_2 < 0 || VAR_2 >= VAR_7) {\n\t\treturn -1;\n\t}\n\tchar *VAR_8 = NULL;\n\tint VAR_9 = 0;\n\tut32 VAR_10 = 0;\n\tut32 VAR_11 = 0;\n\tut8 VAR_12 = VAR_13[VAR_2].byte;\n\tif (VAR_14) {\n\t\treturn handle_switch_op (VAR_1, VAR_3, VAR_4, VAR_5, VAR_6);\n\t}\n\tR_LOG_DEBUG (\"Handling the following opcode %s expects: %d byte(s), BYTES_CONSUMED: 0x%04\"VAR_15,\n\t\t\tVAR_13[VAR_2].name, VAR_13[VAR_2].size, VAR_16);\n\tswitch (VAR_12) {\n\tcase 0x10: /* COMMENT_0 */\n\t\tif (VAR_4 > 1) {\n\t\t\tsnprintf (VAR_5, VAR_6, \"%s %d\", VAR_13[VAR_2].name, (char) VAR_3[1]);\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x11:\n\t\tif (VAR_4 > 2) {\n\t\t\tsnprintf (VAR_5, VAR_6, \"%s %d\", VAR_13[VAR_2].name, (int)USHORT (VAR_3, 1));\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x15: /* COMMENT_1 */\n\tcase 0x16: /* COMMENT_2 */\n\tcase 0x17: /* COMMENT_3 */\n\tcase 0x18: /* COMMENT_4 */\n\tcase 0x19: /* COMMENT_5 */\n\tcase 0x37: /* COMMENT_6 */\n\tcase 0x38: /* COMMENT_7 */\n\tcase 0x39: /* COMMENT_8 */\n\tcase 0x3a: /* COMMENT_9 */\n\tcase 0xbc: /* COMMENT_10 */\n\tcase 0xa9: /* COMMENT_11 */\n\t\tif (VAR_4 > 1) {\n\t\t\tsnprintf (VAR_5, VAR_6, \"%s %d\", VAR_13[VAR_2].name, VAR_3[1]);\n\t\t\tVAR_5[VAR_6-1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t} else {\n\t\t\t/* COMMENT_12 */\n\t\t\treturn 0;\n\t\t}\n\t\tbreak;\n\tcase 0x12: /* COMMENT_13 */\n\t\tif (VAR_4 > 1) {\n\t\t\tVAR_8 = r_bin_java_resolve_without_space (VAR_0, (ut16)VAR_3[1]);\n\t\t\tif (VAR_8) {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s %s\", VAR_13[VAR_2].name, VAR_8);\n\t\t\t\tfree (VAR_8);\n\t\t\t} else {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s #%d\", VAR_13[VAR_2].name, USHORT (VAR_3, 1));\n\t\t\t}\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x13:\n\tcase 0x14:\n\t\tif (VAR_4 > 2) {\n\t\t\tVAR_8 = r_bin_java_resolve_without_space (VAR_0, (int)USHORT (VAR_3, 1));\n\t\t\tif (VAR_8) {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s %s\", VAR_13[VAR_2].name, VAR_8);\n\t\t\t\tfree (VAR_8);\n\t\t\t} else {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s #%d\", VAR_13[VAR_2].name, USHORT (VAR_3, 1));\n\t\t\t}\n\t\t\tVAR_5[VAR_6-1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x84: /* COMMENT_14 */\n\t\tif (VAR_4 > 2) {\n\t\t\tVAR_10 = (ut32)VAR_3[1];\n\t\t\tVAR_11 = (ut32) VAR_3[2];\n\t\t\tsnprintf (VAR_5, VAR_6, \"%s %d %d\", VAR_13[VAR_2].name, VAR_10, VAR_11);\n\t\t\tVAR_5[VAR_6-1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x99: /* COMMENT_15 */\n\tcase 0x9a: /* COMMENT_16 */\n\tcase 0x9b: /* COMMENT_17 */\n\tcase 0x9c: /* COMMENT_18 */\n\tcase 0x9d: /* COMMENT_19 */\n\tcase 0x9e: /* COMMENT_20 */\n\tcase 0x9f: /* COMMENT_21 */\n\tcase 0xa0: /* COMMENT_22 */\n\tcase 0xa1: /* COMMENT_23 */\n\tcase 0xa2: /* COMMENT_24 */\n\tcase 0xa3: /* COMMENT_25 */\n\tcase 0xa4: /* COMMENT_26 */\n\tcase 0xa5: /* COMMENT_27 */\n\tcase 0xa6: /* COMMENT_27 */\n\tcase 0xa7: /* COMMENT_28 */\n\tcase 0xa8: /* COMMENT_29 */\n\t\tif (VAR_4 > 1) {\n\t\t\tsnprintf (VAR_5, VAR_6, \"%s 0x%04\"VAR_15, VAR_13[VAR_2].name,\n\t\t\t\t\t(VAR_1 + (short)USHORT (VAR_3, 1)));\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\t\t/* COMMENT_30 */\n\tcase 0xab: /* COMMENT_31 */\n\tcase 0xaa: /* COMMENT_31 */\n\t\tVAR_9 = enter_switch_op (VAR_1, VAR_3, VAR_4);\n\t\tsnprintf (VAR_5, VAR_6, \"%s default: 0x%04\"VAR_15,\n\t\t\t\tVAR_13[VAR_2].name,\n\t\t\t\t(ut64)(VAR_17.def_jmp+VAR_17.addr));\n\t\treturn update_bytes_consumed (VAR_9);\n\tcase 0xb6: /* COMMENT_32 */\n\tcase 0xb7: /* COMMENT_33 */\n\tcase 0xb8: /* COMMENT_34 */\n\tcase 0xb9: /* COMMENT_35 */\n\tcase 0xba: /* COMMENT_36 */\n\t\tif (VAR_4 > 2) {\n\t\t\tVAR_8 = r_bin_java_resolve_without_space (VAR_0, (int)USHORT (VAR_3, 1));\n\t\t\tif (VAR_8) {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s %s\", VAR_13[VAR_2].name, VAR_8);\n\t\t\t\tfree (VAR_8);\n\t\t\t} else {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s #%d\", VAR_13[VAR_2].name, USHORT (VAR_3, 1) );\n\t\t\t}\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0xbb: /* COMMENT_37 */\n\tcase 0xbd: /* COMMENT_38 */\n\tcase 0xc0: /* COMMENT_39 */\n\tcase 0xc1: /* COMMENT_40 */\n\t\tif (VAR_4 > 2) {\n\t\t\tVAR_8 = r_bin_java_resolve_without_space (VAR_0, (int)USHORT (VAR_3, 1));\n\t\t\tif (VAR_8) {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s %s\", VAR_13[VAR_2].name, VAR_8);\n\t\t\t\tfree (VAR_8);\n\t\t\t} else {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s #%d\", VAR_13[VAR_2].name, USHORT (VAR_3, 1) );\n\t\t\t}\n\t\t\tVAR_5[VAR_6-1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0xb2: /* COMMENT_41 */\n\tcase 0xb3: /* COMMENT_42 */\n\tcase 0xb4: /* COMMENT_43 */\n\tcase 0xb5: /* COMMENT_44 */\n\t\tif (VAR_4 > 2) {\n\t\t\tVAR_8 = r_bin_java_resolve_with_space (VAR_0, (int)USHORT (VAR_3, 1));\n\t\t\tif (VAR_8) {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s %s\", VAR_13[VAR_2].name, VAR_8);\n\t\t\t\tfree (VAR_8);\n\t\t\t} else {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s #%d\", VAR_13[VAR_2].name, USHORT (VAR_3, 1) );\n\t\t\t}\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/* COMMENT_45 */\n\tif (VAR_13[VAR_2].size > VAR_4) {\n\t\tsnprintf (VAR_5, VAR_6, \"truncated\");\n\t\treturn -1;\n\t}\n\tswitch (VAR_13[VAR_2].size) {\n\tcase 1: snprintf (VAR_5, VAR_6, \"%s\", VAR_13[VAR_2].name);\n\t\tbreak;\n\tcase 2: snprintf (VAR_5, VAR_6, \"%s %d\", VAR_13[VAR_2].name, VAR_3[1]);\n\t\tbreak;\n\tcase 3: snprintf (VAR_5, VAR_6, \"%s 0x%04x 0x%04x\", VAR_13[VAR_2].name, VAR_3[0], VAR_3[1]);\n\t\tbreak;\n\tcase 5: snprintf (VAR_5, VAR_6, \"%s %d\", VAR_13[VAR_2].name, VAR_3[1]);\n\t\tbreak;\n\t}\n\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n}",
  "func_graph_path_before": null,
  "func": "R_API int java_print_opcode(RBinJavaObj *obj, ut64 addr, int idx, const ut8 *bytes, int len, char *output, int outlen) {\n\tif (idx < 0 || idx >= JAVA_OPS_COUNT) {\n\t\treturn -1;\n\t}\n\tchar *arg = NULL;\n\tint sz = 0;\n\tut32 val_one = 0;\n\tut32 val_two = 0;\n\tut8 op_byte = JAVA_OPS[idx].byte;\n\tif (IN_SWITCH_OP) {\n\t\treturn handle_switch_op (addr, bytes, len, output, outlen);\n\t}\n\tR_LOG_DEBUG (\"Handling the following opcode %s expects: %d byte(s), BYTES_CONSUMED: 0x%04\"PFMT64x,\n\t\t\tJAVA_OPS[idx].name, JAVA_OPS[idx].size, BYTES_CONSUMED);\n\tswitch (op_byte) {\n\tcase 0x10: // \"bipush\"\n\t\tif (len > 1) {\n\t\t\tsnprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, (char) bytes[1]);\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x11:\n\t\tif (len > 2) {\n\t\t\tsnprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, (int)USHORT (bytes, 1));\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x15: // \"iload\"\n\tcase 0x16: // \"lload\"\n\tcase 0x17: // \"fload\"\n\tcase 0x18: // \"dload\"\n\tcase 0x19: // \"aload\"\n\tcase 0x37: // \"lstore\"\n\tcase 0x38: // \"fstore\"\n\tcase 0x39: // \"dstore\"\n\tcase 0x3a: // \"astore\"\n\tcase 0xbc: // \"newarray\"\n\tcase 0xa9: // ret <var-num>\n\t\tif (len > 1) {\n\t\t\tsnprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, bytes[1]);\n\t\t\toutput[outlen-1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t} else {\n\t\t\t// ERROR\n\t\t\treturn 0;\n\t\t}\n\t\tbreak;\n\tcase 0x12: // ldc\n\t\tif (len > 1) {\n\t\t\targ = r_bin_java_resolve_without_space (obj, (ut16)bytes[1]);\n\t\t\tif (arg) {\n\t\t\t\tsnprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);\n\t\t\t\tfree (arg);\n\t\t\t} else {\n\t\t\t\tsnprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1));\n\t\t\t}\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x13:\n\tcase 0x14:\n\t\tif (len > 2) {\n\t\t\targ = r_bin_java_resolve_without_space (obj, (int)USHORT (bytes, 1));\n\t\t\tif (arg) {\n\t\t\t\tsnprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);\n\t\t\t\tfree (arg);\n\t\t\t} else {\n\t\t\t\tsnprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1));\n\t\t\t}\n\t\t\toutput[outlen-1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x84: // iinc\n\t\tif (len > 2) {\n\t\t\tval_one = (ut32)bytes[1];\n\t\t\tval_two = (ut32) bytes[2];\n\t\t\tsnprintf (output, outlen, \"%s %d %d\", JAVA_OPS[idx].name, val_one, val_two);\n\t\t\toutput[outlen-1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x99: // ifeq\n\tcase 0x9a: // ifne\n\tcase 0x9b: // iflt\n\tcase 0x9c: // ifge\n\tcase 0x9d: // ifgt\n\tcase 0x9e: // ifle\n\tcase 0x9f: // if_icmpeq\n\tcase 0xa0: // if_icmpne\n\tcase 0xa1: // if_icmplt\n\tcase 0xa2: // if_icmpge\n\tcase 0xa3: // if_icmpgt\n\tcase 0xa4: // if_icmple\n\tcase 0xa5: // if_acmpne\n\tcase 0xa6: // if_acmpne\n\tcase 0xa7: // goto\n\tcase 0xa8: // jsr\n\t\tif (len > 3) {\n\t\t\tconst short delta = USHORT (bytes, 1);\n\t\t\tsnprintf (output, outlen, \"%s 0x%04\"PFMT64x, JAVA_OPS[idx].name, addr + delta);\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\t\t// XXX - Figure out what constitutes the [<high>] value\n\tcase 0xab: // tableswitch\n\tcase 0xaa: // tableswitch\n\t\tsz = enter_switch_op (addr, bytes, len);\n\t\tsnprintf (output, outlen, \"%s default: 0x%04\"PFMT64x,\n\t\t\t\tJAVA_OPS[idx].name,\n\t\t\t\t(ut64)(SWITCH_OP.def_jmp+SWITCH_OP.addr));\n\t\treturn update_bytes_consumed (sz);\n\tcase 0xb6: // invokevirtual\n\tcase 0xb7: // invokespecial\n\tcase 0xb8: // invokestatic\n\tcase 0xb9: // invokeinterface\n\tcase 0xba: // invokedynamic\n\t\tif (len > 2) {\n\t\t\targ = r_bin_java_resolve_without_space (obj, (int)USHORT (bytes, 1));\n\t\t\tif (arg) {\n\t\t\t\tsnprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);\n\t\t\t\tfree (arg);\n\t\t\t} else {\n\t\t\t\tsnprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1) );\n\t\t\t}\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0xbb: // new\n\tcase 0xbd: // anewarray\n\tcase 0xc0: // checkcast\n\tcase 0xc1: // instance of\n\t\tif (len > 2) {\n\t\t\targ = r_bin_java_resolve_without_space (obj, (int)USHORT (bytes, 1));\n\t\t\tif (arg) {\n\t\t\t\tsnprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);\n\t\t\t\tfree (arg);\n\t\t\t} else {\n\t\t\t\tsnprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1) );\n\t\t\t}\n\t\t\toutput[outlen-1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\tcase 0xb2: // getstatic\n\tcase 0xb3: // putstatic\n\tcase 0xb4: // getfield\n\tcase 0xb5: // putfield\n\t\tif (len > 2) {\n\t\t\targ = r_bin_java_resolve_with_space (obj, (int)USHORT (bytes, 1));\n\t\t\tif (arg) {\n\t\t\t\tsnprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);\n\t\t\t\tfree (arg);\n\t\t\t} else {\n\t\t\t\tsnprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1) );\n\t\t\t}\n\t\t\toutput[outlen - 1] = 0;\n\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/* process arguments */\n\tif (JAVA_OPS[idx].size > len) {\n\t\tsnprintf (output, outlen, \"truncated\");\n\t\treturn -1;\n\t}\n\tswitch (JAVA_OPS[idx].size) {\n\tcase 1: snprintf (output, outlen, \"%s\", JAVA_OPS[idx].name);\n\t\tbreak;\n\tcase 2: snprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, bytes[1]);\n\t\tbreak;\n\tcase 3: snprintf (output, outlen, \"%s 0x%04x 0x%04x\", JAVA_OPS[idx].name, bytes[0], bytes[1]);\n\t\tbreak;\n\tcase 5: snprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, bytes[1]);\n\t\tbreak;\n\t}\n\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n}",
  "abstract_func": "R_API int java_print_opcode(RBinJavaObj *VAR_0, ut64 VAR_1, int VAR_2, const ut8 *VAR_3, int VAR_4, char *VAR_5, int VAR_6) {\n\tif (VAR_2 < 0 || VAR_2 >= VAR_7) {\n\t\treturn -1;\n\t}\n\tchar *VAR_8 = NULL;\n\tint VAR_9 = 0;\n\tut32 VAR_10 = 0;\n\tut32 VAR_11 = 0;\n\tut8 VAR_12 = VAR_13[VAR_2].byte;\n\tif (VAR_14) {\n\t\treturn handle_switch_op (VAR_1, VAR_3, VAR_4, VAR_5, VAR_6);\n\t}\n\tR_LOG_DEBUG (\"Handling the following opcode %s expects: %d byte(s), BYTES_CONSUMED: 0x%04\"VAR_15,\n\t\t\tVAR_13[VAR_2].name, VAR_13[VAR_2].size, VAR_16);\n\tswitch (VAR_12) {\n\tcase 0x10: /* COMMENT_0 */\n\t\tif (VAR_4 > 1) {\n\t\t\tsnprintf (VAR_5, VAR_6, \"%s %d\", VAR_13[VAR_2].name, (char) VAR_3[1]);\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x11:\n\t\tif (VAR_4 > 2) {\n\t\t\tsnprintf (VAR_5, VAR_6, \"%s %d\", VAR_13[VAR_2].name, (int)USHORT (VAR_3, 1));\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x15: /* COMMENT_1 */\n\tcase 0x16: /* COMMENT_2 */\n\tcase 0x17: /* COMMENT_3 */\n\tcase 0x18: /* COMMENT_4 */\n\tcase 0x19: /* COMMENT_5 */\n\tcase 0x37: /* COMMENT_6 */\n\tcase 0x38: /* COMMENT_7 */\n\tcase 0x39: /* COMMENT_8 */\n\tcase 0x3a: /* COMMENT_9 */\n\tcase 0xbc: /* COMMENT_10 */\n\tcase 0xa9: /* COMMENT_11 */\n\t\tif (VAR_4 > 1) {\n\t\t\tsnprintf (VAR_5, VAR_6, \"%s %d\", VAR_13[VAR_2].name, VAR_3[1]);\n\t\t\tVAR_5[VAR_6-1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t} else {\n\t\t\t/* COMMENT_12 */\n\t\t\treturn 0;\n\t\t}\n\t\tbreak;\n\tcase 0x12: /* COMMENT_13 */\n\t\tif (VAR_4 > 1) {\n\t\t\tVAR_8 = r_bin_java_resolve_without_space (VAR_0, (ut16)VAR_3[1]);\n\t\t\tif (VAR_8) {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s %s\", VAR_13[VAR_2].name, VAR_8);\n\t\t\t\tfree (VAR_8);\n\t\t\t} else {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s #%d\", VAR_13[VAR_2].name, USHORT (VAR_3, 1));\n\t\t\t}\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x13:\n\tcase 0x14:\n\t\tif (VAR_4 > 2) {\n\t\t\tVAR_8 = r_bin_java_resolve_without_space (VAR_0, (int)USHORT (VAR_3, 1));\n\t\t\tif (VAR_8) {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s %s\", VAR_13[VAR_2].name, VAR_8);\n\t\t\t\tfree (VAR_8);\n\t\t\t} else {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s #%d\", VAR_13[VAR_2].name, USHORT (VAR_3, 1));\n\t\t\t}\n\t\t\tVAR_5[VAR_6-1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x84: /* COMMENT_14 */\n\t\tif (VAR_4 > 2) {\n\t\t\tVAR_10 = (ut32)VAR_3[1];\n\t\t\tVAR_11 = (ut32) VAR_3[2];\n\t\t\tsnprintf (VAR_5, VAR_6, \"%s %d %d\", VAR_13[VAR_2].name, VAR_10, VAR_11);\n\t\t\tVAR_5[VAR_6-1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0x99: /* COMMENT_15 */\n\tcase 0x9a: /* COMMENT_16 */\n\tcase 0x9b: /* COMMENT_17 */\n\tcase 0x9c: /* COMMENT_18 */\n\tcase 0x9d: /* COMMENT_19 */\n\tcase 0x9e: /* COMMENT_20 */\n\tcase 0x9f: /* COMMENT_21 */\n\tcase 0xa0: /* COMMENT_22 */\n\tcase 0xa1: /* COMMENT_23 */\n\tcase 0xa2: /* COMMENT_24 */\n\tcase 0xa3: /* COMMENT_25 */\n\tcase 0xa4: /* COMMENT_26 */\n\tcase 0xa5: /* COMMENT_27 */\n\tcase 0xa6: /* COMMENT_27 */\n\tcase 0xa7: /* COMMENT_28 */\n\tcase 0xa8: /* COMMENT_29 */\n\t\tif (VAR_4 > 3) {\n\t\t\tconst short VAR_17 = USHORT (VAR_3, 1);\n\t\t\tsnprintf (VAR_5, VAR_6, \"%s 0x%04\"VAR_15, VAR_13[VAR_2].name, VAR_1 + VAR_17);\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\t\t/* COMMENT_30 */\n\tcase 0xab: /* COMMENT_31 */\n\tcase 0xaa: /* COMMENT_31 */\n\t\tVAR_9 = enter_switch_op (VAR_1, VAR_3, VAR_4);\n\t\tsnprintf (VAR_5, VAR_6, \"%s default: 0x%04\"VAR_15,\n\t\t\t\tVAR_13[VAR_2].name,\n\t\t\t\t(ut64)(VAR_18.def_jmp+VAR_18.addr));\n\t\treturn update_bytes_consumed (VAR_9);\n\tcase 0xb6: /* COMMENT_32 */\n\tcase 0xb7: /* COMMENT_33 */\n\tcase 0xb8: /* COMMENT_34 */\n\tcase 0xb9: /* COMMENT_35 */\n\tcase 0xba: /* COMMENT_36 */\n\t\tif (VAR_4 > 2) {\n\t\t\tVAR_8 = r_bin_java_resolve_without_space (VAR_0, (int)USHORT (VAR_3, 1));\n\t\t\tif (VAR_8) {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s %s\", VAR_13[VAR_2].name, VAR_8);\n\t\t\t\tfree (VAR_8);\n\t\t\t} else {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s #%d\", VAR_13[VAR_2].name, USHORT (VAR_3, 1) );\n\t\t\t}\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0xbb: /* COMMENT_37 */\n\tcase 0xbd: /* COMMENT_38 */\n\tcase 0xc0: /* COMMENT_39 */\n\tcase 0xc1: /* COMMENT_40 */\n\t\tif (VAR_4 > 2) {\n\t\t\tVAR_8 = r_bin_java_resolve_without_space (VAR_0, (int)USHORT (VAR_3, 1));\n\t\t\tif (VAR_8) {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s %s\", VAR_13[VAR_2].name, VAR_8);\n\t\t\t\tfree (VAR_8);\n\t\t\t} else {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s #%d\", VAR_13[VAR_2].name, USHORT (VAR_3, 1) );\n\t\t\t}\n\t\t\tVAR_5[VAR_6-1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\tcase 0xb2: /* COMMENT_41 */\n\tcase 0xb3: /* COMMENT_42 */\n\tcase 0xb4: /* COMMENT_43 */\n\tcase 0xb5: /* COMMENT_44 */\n\t\tif (VAR_4 > 2) {\n\t\t\tVAR_8 = r_bin_java_resolve_with_space (VAR_0, (int)USHORT (VAR_3, 1));\n\t\t\tif (VAR_8) {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s %s\", VAR_13[VAR_2].name, VAR_8);\n\t\t\t\tfree (VAR_8);\n\t\t\t} else {\n\t\t\t\tsnprintf (VAR_5, VAR_6, \"%s #%d\", VAR_13[VAR_2].name, USHORT (VAR_3, 1) );\n\t\t\t}\n\t\t\tVAR_5[VAR_6 - 1] = 0;\n\t\t\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/* COMMENT_45 */\n\tif (VAR_13[VAR_2].size > VAR_4) {\n\t\tsnprintf (VAR_5, VAR_6, \"truncated\");\n\t\treturn -1;\n\t}\n\tswitch (VAR_13[VAR_2].size) {\n\tcase 1: snprintf (VAR_5, VAR_6, \"%s\", VAR_13[VAR_2].name);\n\t\tbreak;\n\tcase 2: snprintf (VAR_5, VAR_6, \"%s %d\", VAR_13[VAR_2].name, VAR_3[1]);\n\t\tbreak;\n\tcase 3: snprintf (VAR_5, VAR_6, \"%s 0x%04x 0x%04x\", VAR_13[VAR_2].name, VAR_3[0], VAR_3[1]);\n\t\tbreak;\n\tcase 5: snprintf (VAR_5, VAR_6, \"%s %d\", VAR_13[VAR_2].name, VAR_3[1]);\n\t\tbreak;\n\t}\n\treturn update_bytes_consumed (VAR_13[VAR_2].size);\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -99,9 +99,9 @@\n \tcase 0xa6: // if_acmpne\n \tcase 0xa7: // goto\n \tcase 0xa8: // jsr\n-\t\tif (len > 1) {\n-\t\t\tsnprintf (output, outlen, \"%s 0x%04\"PFMT64x, JAVA_OPS[idx].name,\n-\t\t\t\t\t(addr + (short)USHORT (bytes, 1)));\n+\t\tif (len > 3) {\n+\t\t\tconst short delta = USHORT (bytes, 1);\n+\t\t\tsnprintf (output, outlen, \"%s 0x%04\"PFMT64x, JAVA_OPS[idx].name, addr + delta);\n \t\t\toutput[outlen - 1] = 0;\n \t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);\n \t\t}",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tif (len > 1) {",
      "\t\t\tsnprintf (output, outlen, \"%s 0x%04\"PFMT64x, JAVA_OPS[idx].name,",
      "\t\t\t\t\t(addr + (short)USHORT (bytes, 1)));"
    ],
    "added_lines": [
      "\t\tif (len > 3) {",
      "\t\t\tconst short delta = USHORT (bytes, 1);",
      "\t\t\tsnprintf (output, outlen, \"%s 0x%04\"PFMT64x, JAVA_OPS[idx].name, addr + delta);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/22331",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/radareorg/radare2/pull/22331: 403 Client Error: Forbidden for url: https://api.github.com/repos/radareorg/radare2/pulls/22331",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 0.9"
}