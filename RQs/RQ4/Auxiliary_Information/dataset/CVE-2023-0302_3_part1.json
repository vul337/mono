{
  "cve_id": "CVE-2023-0302",
  "cwe_ids": [
    "CWE-74"
  ],
  "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix ANSI Escape Sequence Injection vulns via DWARF ##vuln\n\n* Reported by @solid-snail via huntrdev\r\n* BountyID: 583133af-7ae6-4a21-beef-a4b0182cf82e\r\n* Reproducer: dwarf_test_func_patched",
  "commit_hash": "961f0e723903011d4f54c2396e44efa91fcc74ce",
  "git_url": "https://github.com/radareorg/radare2/commit/961f0e723903011d4f54c2396e44efa91fcc74ce",
  "file_path": "libr/bin/dwarf.c",
  "func_name": "add_sdb_addrline",
  "func_before": "static inline void add_sdb_addrline(Sdb *s, ut64 addr, const char *file, ut64 line, int mode, PrintfCallback print) {\n\tconst char *p;\n\tchar *fileline;\n\tchar offset[SDB_NUM_BUFSZ];\n\tchar *offset_ptr;\n\n\tif (!s || !file) {\n\t\treturn;\n\t}\n\tp = r_str_rchr (file, NULL, '/');\n\tif (p) {\n\t\tp++;\n\t} else {\n\t\tp = file;\n\t}\n\t// includedirs and properly check full paths\n\tswitch (mode) {\n\tcase 1:\n\tcase 'r':\n\tcase '*':\n\t\tprint (\"CL %s:%d 0x%08\"PFMT64x\"\\n\", p, (int)line, addr);\n\t\tbreak;\n\t}\n#if 0\n\t/* THIS IS TOO SLOW */\n\tif (r_file_exists (file)) {\n\t\tp = file;\n\t}\n#else\n\tp = file;\n#endif\n\tfileline = r_str_newf (\"%s|%\"PFMT64d, p, line);\n\toffset_ptr = sdb_itoa (addr, 16, offset, sizeof (offset));\n\tsdb_add (s, offset_ptr, fileline, 0);\n\tsdb_add (s, fileline, offset_ptr, 0);\n\tfree (fileline);\n}",
  "abstract_func_before": "static inline void add_sdb_addrline(Sdb *VAR_0, ut64 VAR_1, const char *VAR_2, ut64 VAR_3, int VAR_4, PrintfCallback VAR_5) {\n\tconst char *VAR_6;\n\tchar *VAR_7;\n\tchar VAR_8[VAR_9];\n\tchar *VAR_10;\n\n\tif (!VAR_0 || !VAR_2) {\n\t\treturn;\n\t}\n\tVAR_6 = r_str_rchr (VAR_2, NULL, '/');\n\tif (VAR_6) {\n\t\tVAR_6++;\n\t} else {\n\t\tVAR_6 = VAR_2;\n\t}\n\t/* COMMENT_0 */\n\tswitch (VAR_4) {\n\tcase 1:\n\tcase 'r':\n\tcase '*':\n\t\tVAR_5 (\"CL %s:%d 0x%08\"VAR_11\"\\n\", VAR_6, (int)VAR_3, VAR_1);\n\t\tbreak;\n\t}\n#if 0\n\t/* COMMENT_1 */\n\tif (r_file_exists (VAR_2)) {\n\t\tVAR_6 = VAR_2;\n\t}\n#else\n\tVAR_6 = VAR_2;\n#endif\n\tVAR_7 = r_str_newf (\"%s|%\"VAR_12, VAR_6, VAR_3);\n\tVAR_10 = sdb_itoa (VAR_1, 16, VAR_8, sizeof (VAR_8));\n\tsdb_add (VAR_0, VAR_10, VAR_7, 0);\n\tsdb_add (VAR_0, VAR_7, VAR_10, 0);\n\tfree (VAR_7);\n}",
  "func_graph_path_before": "radareorg/radare2/961f0e723903011d4f54c2396e44efa91fcc74ce/dwarf.c/vul/before/2.json",
  "func": "static inline void add_sdb_addrline(Sdb *s, ut64 addr, const char *file, ut64 line, int mode, PrintfCallback print) {\n\tconst char *p;\n\tchar offset[SDB_NUM_BUFSZ];\n\tchar *offset_ptr;\n\n\tif (!s || !file) {\n\t\treturn;\n\t}\n\tp = r_str_rchr (file, NULL, '/');\n\tif (p) {\n\t\tp++;\n\t} else {\n\t\tp = file;\n\t}\n\t// includedirs and properly check full paths\n\tswitch (mode) {\n\tcase 1:\n\tcase 'r':\n\tcase '*':\n\t\tprint (\"CL %s:%d 0x%08\"PFMT64x\"\\n\", p, (int)line, addr);\n\t\tbreak;\n\t}\n#if 0\n\t/* THIS IS TOO SLOW */\n\tif (r_file_exists (file)) {\n\t\tp = file;\n\t}\n#else\n\tp = file;\n#endif\n\tchar *fileline = r_str_newf (\"%s|%\"PFMT64d, p, line);\n\tr_str_ansi_strip (fileline);\n\tr_str_replace_ch (fileline, '\\n', 0, true);\n\tr_str_replace_ch (fileline, '\\t', 0, true);\n\toffset_ptr = sdb_itoa (addr, 16, offset, sizeof (offset));\n\tsdb_add (s, offset_ptr, fileline, 0);\n\tsdb_add (s, fileline, offset_ptr, 0);\n\tfree (fileline);\n}",
  "abstract_func": "static inline void add_sdb_addrline(Sdb *VAR_0, ut64 VAR_1, const char *VAR_2, ut64 VAR_3, int VAR_4, PrintfCallback VAR_5) {\n\tconst char *VAR_6;\n\tchar VAR_7[VAR_8];\n\tchar *VAR_9;\n\n\tif (!VAR_0 || !VAR_2) {\n\t\treturn;\n\t}\n\tVAR_6 = r_str_rchr (VAR_2, NULL, '/');\n\tif (VAR_6) {\n\t\tVAR_6++;\n\t} else {\n\t\tVAR_6 = VAR_2;\n\t}\n\t/* COMMENT_0 */\n\tswitch (VAR_4) {\n\tcase 1:\n\tcase 'r':\n\tcase '*':\n\t\tVAR_5 (\"CL %s:%d 0x%08\"VAR_10\"\\n\", VAR_6, (int)VAR_3, VAR_1);\n\t\tbreak;\n\t}\n#if 0\n\t/* COMMENT_1 */\n\tif (r_file_exists (VAR_2)) {\n\t\tVAR_6 = VAR_2;\n\t}\n#else\n\tVAR_6 = VAR_2;\n#endif\n\tchar *VAR_11 = r_str_newf (\"%s|%\"VAR_12, VAR_6, VAR_3);\n\tr_str_ansi_strip (VAR_11);\n\tr_str_replace_ch (VAR_11, '\\n', 0, true);\n\tr_str_replace_ch (VAR_11, '\\t', 0, true);\n\tVAR_9 = sdb_itoa (VAR_1, 16, VAR_7, sizeof (VAR_7));\n\tsdb_add (VAR_0, VAR_9, VAR_11, 0);\n\tsdb_add (VAR_0, VAR_11, VAR_9, 0);\n\tfree (VAR_11);\n}",
  "func_graph_path": "radareorg/radare2/961f0e723903011d4f54c2396e44efa91fcc74ce/dwarf.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,5 @@\n static inline void add_sdb_addrline(Sdb *s, ut64 addr, const char *file, ut64 line, int mode, PrintfCallback print) {\n \tconst char *p;\n-\tchar *fileline;\n \tchar offset[SDB_NUM_BUFSZ];\n \tchar *offset_ptr;\n \n@@ -29,7 +28,10 @@\n #else\n \tp = file;\n #endif\n-\tfileline = r_str_newf (\"%s|%\"PFMT64d, p, line);\n+\tchar *fileline = r_str_newf (\"%s|%\"PFMT64d, p, line);\n+\tr_str_ansi_strip (fileline);\n+\tr_str_replace_ch (fileline, '\\n', 0, true);\n+\tr_str_replace_ch (fileline, '\\t', 0, true);\n \toffset_ptr = sdb_itoa (addr, 16, offset, sizeof (offset));\n \tsdb_add (s, offset_ptr, fileline, 0);\n \tsdb_add (s, fileline, offset_ptr, 0);",
  "diff_line_info": {
    "deleted_lines": [
      "\tchar *fileline;",
      "\tfileline = r_str_newf (\"%s|%\"PFMT64d, p, line);"
    ],
    "added_lines": [
      "\tchar *fileline = r_str_newf (\"%s|%\"PFMT64d, p, line);",
      "\tr_str_ansi_strip (fileline);",
      "\tr_str_replace_ch (fileline, '\\n', 0, true);",
      "\tr_str_replace_ch (fileline, '\\t', 0, true);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/21231",
  "description": {
    "pr_info": {
      "title": "Colorz",
      "number": 21231
    },
    "comment": [
      "<!--\r\nRead https://github.com/radareorg/radare2/blob/master/DEVELOPERS.md\r\n* PR title must be capitalized, concise and use ##tags\r\n* If the PR is fixing a ticket use 'Fix #1234 - ..' in the commit message\r\n* Follow the coding style, add tests and documentation if necessary\r\n-->\r\n\r\n- [ ] Mark this if you consider it ready to merge\r\n- [ ] I've added tests (optional)\r\n- [ ] I wrote some lines in the [book](https://github.com/radareorg/radare2book) (optional)\r\n\r\n**Description**\r\n\r\n<!-- explain your changes if necessary -->\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}