{
  "cve_id": "CVE-2018-20227",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "eclipse-rdf4j/rdf4j",
  "commit_msg": "Verify that zip file entries don't try to escape the parent dir + test\n\nSigned-off-by: Bart Hanssens <bart.hanssens@bosa.fgov.be>",
  "commit_hash": "df15a4d7a8f2789c043b27c9eafe1b30316cfa79",
  "git_url": "https://github.com/eclipse-rdf4j/rdf4j/commit/df15a4d7a8f2789c043b27c9eafe1b30316cfa79",
  "file_path": "util/src/main/java/org/eclipse/rdf4j/common/io/ZipUtil.java",
  "func_name": "writeEntry",
  "func_before": "public static void writeEntry(ZipFile zipFile, ZipEntry entry, File destDir)\n\t\tthrows IOException\n\t{\n\t\tFile outFile = new File(destDir, entry.getName());\n\n\t\tif (entry.isDirectory()) {\n\t\t\toutFile.mkdirs();\n\t\t}\n\t\telse {\n\t\t\toutFile.getParentFile().mkdirs();\n\n\t\t\ttry (InputStream in = zipFile.getInputStream(entry)) {\n\t\t\t\tIOUtil.writeStream(in, outFile);\n\t\t\t}\n\t\t}\n\t}",
  "abstract_func_before": "public static void writeEntry(ZipFile VAR_0, ZipEntry VAR_1, File VAR_2)\n\t\tthrows IOException\n\t{\n\t\tFile VAR_3 = new File(VAR_2, VAR_1.getName());\n\n\t\tif (VAR_1.isDirectory()) {\n\t\t\tVAR_3.mkdirs();\n\t\t}\n\t\telse {\n\t\t\tVAR_3.getParentFile().mkdirs();\n\n\t\t\ttry (InputStream VAR_4 = VAR_0.getInputStream(VAR_1)) {\n\t\t\t\tVAR_5.writeStream(VAR_4, VAR_3);\n\t\t\t}\n\t\t}\n\t}",
  "func_graph_path_before": "eclipse-rdf4j/rdf4j/df15a4d7a8f2789c043b27c9eafe1b30316cfa79/ZipUtil.java/vul/before/2.json",
  "func": "public static void writeEntry(ZipFile zipFile, ZipEntry entry, File destDir) throws IOException {\n\t\tFile outFile = new File(destDir, entry.getName());\n\n\t\tif (! outFile.getCanonicalFile().toPath().startsWith(destDir.toPath())) {\n\t\t\tthrow new IOException(\"Zip entry outside destination directory: \" + entry.getName());\n\t\t}\n\t\t\t\t\n\t\tif (entry.isDirectory()) {\n\t\t\toutFile.mkdirs();\n\t\t} else {\n\t\t\toutFile.getParentFile().mkdirs();\n\n\t\t\ttry (InputStream in = zipFile.getInputStream(entry)) {\n\t\t\t\tIOUtil.writeStream(in, outFile);\n\t\t\t}\n\t\t}\n\t}",
  "abstract_func": "public static void writeEntry(ZipFile VAR_0, ZipEntry VAR_1, File VAR_2) throws IOException {\n\t\tFile VAR_3 = new File(VAR_2, VAR_1.getName());\n\n\t\tif (! VAR_3.getCanonicalFile().toPath().startsWith(VAR_2.toPath())) {\n\t\t\tthrow new IOException(\"Zip entry outside destination directory: \" + VAR_1.getName());\n\t\t}\n\t\t\t\t\n\t\tif (VAR_1.isDirectory()) {\n\t\t\tVAR_3.mkdirs();\n\t\t} else {\n\t\t\tVAR_3.getParentFile().mkdirs();\n\n\t\t\ttry (InputStream VAR_4 = VAR_0.getInputStream(VAR_1)) {\n\t\t\t\tVAR_5.writeStream(VAR_4, VAR_3);\n\t\t\t}\n\t\t}\n\t}",
  "func_graph_path": "eclipse-rdf4j/rdf4j/df15a4d7a8f2789c043b27c9eafe1b30316cfa79/ZipUtil.java/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,12 +1,13 @@\n-public static void writeEntry(ZipFile zipFile, ZipEntry entry, File destDir)\n-\t\tthrows IOException\n-\t{\n+public static void writeEntry(ZipFile zipFile, ZipEntry entry, File destDir) throws IOException {\n \t\tFile outFile = new File(destDir, entry.getName());\n \n+\t\tif (! outFile.getCanonicalFile().toPath().startsWith(destDir.toPath())) {\n+\t\t\tthrow new IOException(\"Zip entry outside destination directory: \" + entry.getName());\n+\t\t}\n+\t\t\t\t\n \t\tif (entry.isDirectory()) {\n \t\t\toutFile.mkdirs();\n-\t\t}\n-\t\telse {\n+\t\t} else {\n \t\t\toutFile.getParentFile().mkdirs();\n \n \t\t\ttry (InputStream in = zipFile.getInputStream(entry)) {",
  "diff_line_info": {
    "deleted_lines": [
      "public static void writeEntry(ZipFile zipFile, ZipEntry entry, File destDir)",
      "\t\tthrows IOException",
      "\t{",
      "\t\t}",
      "\t\telse {"
    ],
    "added_lines": [
      "public static void writeEntry(ZipFile zipFile, ZipEntry entry, File destDir) throws IOException {",
      "\t\tif (! outFile.getCanonicalFile().toPath().startsWith(destDir.toPath())) {",
      "\t\t\tthrow new IOException(\"Zip entry outside destination directory: \" + entry.getName());",
      "\t\t}",
      "\t\t\t\t",
      "\t\t} else {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/eclipse-rdf4j/rdf4j/pull/1211",
  "description": {
    "pr_info": {
      "title": "Verify that zip file entries don't try to escape the parent dir + test",
      "number": 1211
    },
    "comment": [
      "This PR addresses GitHub issue: #1210 .\r\n\r\nBriefly describe the changes proposed in this PR:\r\n\r\n* Check if zip file entries try to 'escape' / 'break out' of the directory  (i.e. tricks like `../../../etc/`)\r\n* Added test to check if a file \r\n* Minor code formatting\r\n",
      "Great that you made tests!"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "The patch adds a security check to prevent zip entries from escaping their intended directory, which is a security vulnerability fix. \n\n**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}