{
  "cve_id": "CVE-2023-31438",
  "cwe_ids": [
    "CWE-354"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
  "cvss_is_v3": true,
  "repo_name": "systemd",
  "commit_msg": "journalctl: verify sealed log epochs are continuous\n\nCurrently empty epochs are not sealed. This allows an attacker to truncate\na sealed log and continue it without any problems showing when verifying the\nlog.\n\nThis partially addresses CVE-2023-31438. One way to extend this change to\naddress CVE-2023-31438 completely, would be to verify that there is exactly\none seal per epoch (and not sealing when the epoch has not ended yet).\n\nthe change also adds a journal-file flag: HEADER_COMPATIBLE_SEALED_CONTINUOUS\nthis flag indicates that a journal file is sealed continuously and decides whether\nany missing crypto epochs should trigger a warning or an error.",
  "commit_hash": "8d7b0958cdb505047e5a66029468b8d12b8a7add",
  "git_url": "https://github.com/systemd/systemd/commit/8d7b0958cdb505047e5a66029468b8d12b8a7add",
  "file_path": "src/libsystemd/sd-journal/journal-authenticate.c",
  "func_name": "journal_file_fsprg_evolve",
  "func_before": "int journal_file_fsprg_evolve(JournalFile *f, uint64_t realtime) {\n        uint64_t goal, epoch;\n        int r;\n\n        assert(f);\n\n        if (!JOURNAL_HEADER_SEALED(f->header))\n                return 0;\n\n        r = journal_file_get_epoch(f, realtime, &goal);\n        if (r < 0)\n                return r;\n\n        epoch = FSPRG_GetEpoch(f->fsprg_state);\n        if (epoch < goal)\n                log_debug(\"Evolving FSPRG key from epoch %\"PRIu64\" to %\"PRIu64\".\", epoch, goal);\n\n        for (;;) {\n                if (epoch > goal)\n                        return -ESTALE;\n                if (epoch == goal)\n                        return 0;\n\n                FSPRG_Evolve(f->fsprg_state);\n                epoch = FSPRG_GetEpoch(f->fsprg_state);\n        }\n}",
  "abstract_func_before": "int journal_file_fsprg_evolve(JournalFile *VAR_0, uint64_t VAR_1) {\n        uint64_t VAR_2, VAR_3;\n        int VAR_4;\n\n        assert(VAR_0);\n\n        if (!JOURNAL_HEADER_SEALED(VAR_0->header))\n                return 0;\n\n        VAR_4 = journal_file_get_epoch(VAR_0, VAR_1, &VAR_2);\n        if (VAR_4 < 0)\n                return VAR_4;\n\n        VAR_3 = FSPRG_GetEpoch(VAR_0->fsprg_state);\n        if (VAR_3 < VAR_2)\n                log_debug(\"Evolving FSPRG key from epoch %\"VAR_5\" to %\"VAR_5\".\", VAR_3, VAR_2);\n\n        for (;;) {\n                if (VAR_3 > VAR_2)\n                        return -VAR_6;\n                if (VAR_3 == VAR_2)\n                        return 0;\n\n                FSPRG_Evolve(VAR_0->fsprg_state);\n                VAR_3 = FSPRG_GetEpoch(VAR_0->fsprg_state);\n        }\n}",
  "func_graph_path_before": "systemd/8d7b0958cdb505047e5a66029468b8d12b8a7add/journal-authenticate.c/vul/before/1.json",
  "func": "int journal_file_fsprg_evolve(JournalFile *f, uint64_t realtime) {\n        uint64_t goal, epoch;\n        int r;\n\n        assert(f);\n\n        if (!JOURNAL_HEADER_SEALED(f->header))\n                return 0;\n\n        r = journal_file_get_epoch(f, realtime, &goal);\n        if (r < 0)\n                return r;\n\n        epoch = FSPRG_GetEpoch(f->fsprg_state);\n        if (epoch < goal)\n                log_debug(\"Evolving FSPRG key from epoch %\"PRIu64\" to %\"PRIu64\".\", epoch, goal);\n\n        for (;;) {\n                if (epoch > goal)\n                        return -ESTALE;\n                if (epoch == goal)\n                        return 0;\n\n                FSPRG_Evolve(f->fsprg_state);\n                epoch = FSPRG_GetEpoch(f->fsprg_state);\n                if (epoch < goal) {\n                        r = journal_file_append_tag(f);\n                        if (r < 0)\n                                return r;\n                }\n        }\n}",
  "abstract_func": "int journal_file_fsprg_evolve(JournalFile *VAR_0, uint64_t VAR_1) {\n        uint64_t VAR_2, VAR_3;\n        int VAR_4;\n\n        assert(VAR_0);\n\n        if (!JOURNAL_HEADER_SEALED(VAR_0->header))\n                return 0;\n\n        VAR_4 = journal_file_get_epoch(VAR_0, VAR_1, &VAR_2);\n        if (VAR_4 < 0)\n                return VAR_4;\n\n        VAR_3 = FSPRG_GetEpoch(VAR_0->fsprg_state);\n        if (VAR_3 < VAR_2)\n                log_debug(\"Evolving FSPRG key from epoch %\"VAR_5\" to %\"VAR_5\".\", VAR_3, VAR_2);\n\n        for (;;) {\n                if (VAR_3 > VAR_2)\n                        return -VAR_6;\n                if (VAR_3 == VAR_2)\n                        return 0;\n\n                FSPRG_Evolve(VAR_0->fsprg_state);\n                VAR_3 = FSPRG_GetEpoch(VAR_0->fsprg_state);\n                if (VAR_3 < VAR_2) {\n                        VAR_4 = journal_file_append_tag(VAR_0);\n                        if (VAR_4 < 0)\n                                return VAR_4;\n                }\n        }\n}",
  "func_graph_path": "systemd/8d7b0958cdb505047e5a66029468b8d12b8a7add/journal-authenticate.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -23,5 +23,10 @@\n \n                 FSPRG_Evolve(f->fsprg_state);\n                 epoch = FSPRG_GetEpoch(f->fsprg_state);\n+                if (epoch < goal) {\n+                        r = journal_file_append_tag(f);\n+                        if (r < 0)\n+                                return r;\n+                }\n         }\n }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "                if (epoch < goal) {",
      "                        r = journal_file_append_tag(f);",
      "                        if (r < 0)",
      "                                return r;",
      "                }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/systemd/systemd/pull/28886",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/systemd/systemd/pull/28886: 403 Client Error: Forbidden for url: https://api.github.com/repos/systemd/systemd/pulls/28886",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}