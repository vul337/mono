{
  "cve_id": "CVE-2020-7226",
  "cwe_ids": [
    "CWE-770"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "vt-middleware/cryptacular",
  "commit_msg": "Define new ciphertext header format.\n\nNew format does not allocate any memory until HMAC check passes, which\nguards against untrusted input. All encryption components have been\nupdated to use the new header, while preserving backward compatibility\nto decrypt messages encrypted with the old format. The decoding process\nfor the old header has been hardened to impose reasonable limits on header\nfields: nonce sizes up to 255 bytes, key names up to 500 bytes.\n\nFixes #52.",
  "commit_hash": "8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
  "git_url": "https://github.com/vt-middleware/cryptacular/commit/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
  "file_path": "src/main/java/org/cryptacular/util/CipherUtil.java",
  "func_name": "encrypt",
  "func_before": "public static byte[] encrypt(final BlockCipher cipher, final SecretKey key, final Nonce nonce, final byte[] data)\n    throws CryptoException\n  {\n    final byte[] iv = nonce.generate();\n    final byte[] header = new CiphertextHeader(iv).encode();\n    final PaddedBufferedBlockCipher padded = new PaddedBufferedBlockCipher(cipher, new PKCS7Padding());\n    padded.init(true, new ParametersWithIV(new KeyParameter(key.getEncoded()), iv));\n    return encrypt(new BufferedBlockCipherAdapter(padded), header, data);\n  }",
  "abstract_func_before": "public static byte[] encrypt(final BlockCipher VAR_0, final SecretKey VAR_1, final Nonce VAR_2, final byte[] VAR_3)\n    throws CryptoException\n  {\n    final byte[] VAR_4 = VAR_2.generate();\n    final byte[] VAR_5 = new CiphertextHeader(VAR_4).encode();\n    final PaddedBufferedBlockCipher VAR_6 = new PaddedBufferedBlockCipher(VAR_0, new PKCS7Padding());\n    VAR_6.init(true, new ParametersWithIV(new KeyParameter(VAR_1.getEncoded()), VAR_4));\n    return encrypt(new BufferedBlockCipherAdapter(VAR_6), VAR_5, VAR_3);\n  }",
  "func_graph_path_before": "vt-middleware/cryptacular/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25/CipherUtil.java/vul/before/5.json",
  "func": "public static byte[] encrypt(final BlockCipher cipher, final SecretKey key, final Nonce nonce, final byte[] data)\n    throws CryptoException\n  {\n    final byte[] iv = nonce.generate();\n    final byte[] header = new CiphertextHeaderV2(iv, \"1\").encode(key);\n    final PaddedBufferedBlockCipher padded = new PaddedBufferedBlockCipher(cipher, new PKCS7Padding());\n    padded.init(true, new ParametersWithIV(new KeyParameter(key.getEncoded()), iv));\n    return encrypt(new BufferedBlockCipherAdapter(padded), header, data);\n  }",
  "abstract_func": "public static byte[] encrypt(final BlockCipher VAR_0, final SecretKey VAR_1, final Nonce VAR_2, final byte[] VAR_3)\n    throws CryptoException\n  {\n    final byte[] VAR_4 = VAR_2.generate();\n    final byte[] VAR_5 = new CiphertextHeaderV2(VAR_4, \"1\").encode(VAR_1);\n    final PaddedBufferedBlockCipher VAR_6 = new PaddedBufferedBlockCipher(VAR_0, new PKCS7Padding());\n    VAR_6.init(true, new ParametersWithIV(new KeyParameter(VAR_1.getEncoded()), VAR_4));\n    return encrypt(new BufferedBlockCipherAdapter(VAR_6), VAR_5, VAR_3);\n  }",
  "func_graph_path": "vt-middleware/cryptacular/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25/CipherUtil.java/vul/after/5.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,7 +2,7 @@\n     throws CryptoException\n   {\n     final byte[] iv = nonce.generate();\n-    final byte[] header = new CiphertextHeader(iv).encode();\n+    final byte[] header = new CiphertextHeaderV2(iv, \"1\").encode(key);\n     final PaddedBufferedBlockCipher padded = new PaddedBufferedBlockCipher(cipher, new PKCS7Padding());\n     padded.init(true, new ParametersWithIV(new KeyParameter(key.getEncoded()), iv));\n     return encrypt(new BufferedBlockCipherAdapter(padded), header, data);",
  "diff_line_info": {
    "deleted_lines": [
      "    final byte[] header = new CiphertextHeader(iv).encode();"
    ],
    "added_lines": [
      "    final byte[] header = new CiphertextHeaderV2(iv, \"1\").encode(key);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/vt-middleware/cryptacular/pull/53",
  "description": {
    "pr_info": {
      "title": "Define new ciphertext header format.",
      "number": 53
    },
    "comment": [
      "New format does not allocate any memory until HMAC check passes, which\r\nguards against untrusted input. All encryption components have been\r\nupdated to use the new header, while preserving backward compatibility\r\nto decrypt messages encrypted with the old format. The decoding process\r\nfor the old header has been hardened to impose reasonable limits on header\r\nfields: nonce sizes up to 255 bytes, key names up to 500 bytes.\r\n\r\nFixes #52."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95"
}