{
  "cve_id": "CVE-2021-45429",
  "cwe_ids": [
    "CWE-120"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "VirusTotal/yara",
  "commit_msg": "Fix issue #1616\n\nThis is a more comprehensive fix than #1617, it adds new functions to the API for getting/setting uint32 and uint64 settings.  Using these functions is preferable over calling `yr_(get|set)_configuration` directly.",
  "commit_hash": "b34b7e74c862c129b801832b6b85401fbada2b01",
  "git_url": "https://github.com/VirusTotal/yara/commit/b34b7e74c862c129b801832b6b85401fbada2b01",
  "file_path": "libyara/libyara.c",
  "func_name": "yr_get_configuration",
  "func_before": "YR_API int yr_get_configuration(YR_CONFIG_NAME name, void *dest)\n{\n  if (dest == NULL)\n    return ERROR_INTERNAL_FATAL_ERROR;\n\n  switch (name)\n  {  // lump all the cases using same types together in one cascade\n  case YR_CONFIG_STACK_SIZE:\n  case YR_CONFIG_MAX_STRINGS_PER_RULE:\n  case YR_CONFIG_MAX_MATCH_DATA:\n    *(uint32_t *) dest = yr_cfgs[name].ui32;\n    break;\n\n  case YR_CONFIG_MAX_PROCESS_MEMORY_CHUNK:\n    *(uint64_t *) dest = yr_cfgs[name].ui64;\n    break;\n\n  default:\n    return ERROR_INTERNAL_FATAL_ERROR;\n  }\n\n  return ERROR_SUCCESS;\n}",
  "abstract_func_before": "YR_API VAR_0 yr_get_configuration(YR_CONFIG_NAME VAR_1, void *VAR_2)\n{\n  if (VAR_2 == NULL)\n    return VAR_3;\n\n  switch (VAR_1)\n  {  /* COMMENT_0 */\n  case VAR_4:\n  case VAR_5:\n  case VAR_6:\n    *(uint32_t *) VAR_2 = VAR_7[VAR_1].ui32;\n    break;\n\n  case VAR_8:\n    *(uint64_t *) VAR_2 = VAR_7[VAR_1].ui64;\n    break;\n\n  default:\n    return VAR_3;\n  }\n\n  return VAR_9;\n}",
  "func_graph_path_before": null,
  "func": "YR_API int yr_get_configuration(YR_CONFIG_NAME name, void *dest)\n{\n  if (dest == NULL)\n    return ERROR_INVALID_ARGUMENT;\n\n  switch (name)\n  {  // lump all the cases using same types together in one cascade\n  case YR_CONFIG_STACK_SIZE:\n  case YR_CONFIG_MAX_STRINGS_PER_RULE:\n  case YR_CONFIG_MAX_MATCH_DATA:\n    *(uint32_t *) dest = yr_cfgs[name].ui32;\n    break;\n\n  case YR_CONFIG_MAX_PROCESS_MEMORY_CHUNK:\n    *(uint64_t *) dest = yr_cfgs[name].ui64;\n    break;\n\n  default:\n    return ERROR_INVALID_ARGUMENT;\n  }\n\n  return ERROR_SUCCESS;\n}",
  "abstract_func": "YR_API VAR_0 yr_get_configuration(YR_CONFIG_NAME VAR_1, void *VAR_2)\n{\n  if (VAR_2 == NULL)\n    return VAR_3;\n\n  switch (VAR_1)\n  {  /* COMMENT_0 */\n  case VAR_4:\n  case VAR_5:\n  case VAR_6:\n    *(uint32_t *) VAR_2 = VAR_7[VAR_1].ui32;\n    break;\n\n  case VAR_8:\n    *(uint64_t *) VAR_2 = VAR_7[VAR_1].ui64;\n    break;\n\n  default:\n    return VAR_3;\n  }\n\n  return VAR_9;\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,7 @@\n YR_API int yr_get_configuration(YR_CONFIG_NAME name, void *dest)\n {\n   if (dest == NULL)\n-    return ERROR_INTERNAL_FATAL_ERROR;\n+    return ERROR_INVALID_ARGUMENT;\n \n   switch (name)\n   {  // lump all the cases using same types together in one cascade\n@@ -16,7 +16,7 @@\n     break;\n \n   default:\n-    return ERROR_INTERNAL_FATAL_ERROR;\n+    return ERROR_INVALID_ARGUMENT;\n   }\n \n   return ERROR_SUCCESS;",
  "diff_line_info": {
    "deleted_lines": [
      "    return ERROR_INTERNAL_FATAL_ERROR;",
      "    return ERROR_INTERNAL_FATAL_ERROR;"
    ],
    "added_lines": [
      "    return ERROR_INVALID_ARGUMENT;",
      "    return ERROR_INVALID_ARGUMENT;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/VirusTotal/yara/pull/1621",
  "description": {
    "pr_info": {
      "title": "Fix issue #1616",
      "number": 1621
    },
    "comment": [
      "This is a more comprehensive fix than #1617, it adds new functions to the API for getting/setting uint32 and uint64 settings.  Using these functions is preferable over calling `yr_(get|set)_configuration` directly."
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.85,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.85\n\nThe patch modifies the error handling in the configuration function, changing the error code returned for invalid or null arguments. This addresses a specific bug, improving the function's correctness without being a security fix. The confidence is high due to the clear code changes, though the commit message's mention of adding new functions creates some ambiguity, reducing the score slightly."
}