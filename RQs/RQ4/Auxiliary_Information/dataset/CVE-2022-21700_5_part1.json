{
  "cve_id": "CVE-2022-21700",
  "cwe_ids": [
    "CWE-400"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "micronaut-projects/micronaut-core",
  "commit_msg": "Use ConversionContext constants where possible instead of class (#2356)\n\nChanges\r\n-------\r\n * Added ArgumentConversionContext constants in ConversionContext\r\n * Replaced Argument.of and use of argument classes with\r\nConversionContext constants where possible\r\n * Added getFirst method in ConvertibleMultiValues that accepts\r\nArgumentConversionContent parameter\r\n\r\nPartially addresses issue #2355",
  "commit_hash": "b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3",
  "git_url": "https://github.com/micronaut-projects/micronaut-core/commit/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3",
  "file_path": "http-client/src/main/java/io/micronaut/http/client/exceptions/HttpClientErrorDecoder.java",
  "func_name": "getErrorType",
  "func_before": "default Argument<?> getErrorType(MediaType mediaType) {\n        if (mediaType.equals(MediaType.APPLICATION_JSON_TYPE)) {\n            return Argument.of(JsonError.class);\n        } else if (mediaType.equals(MediaType.APPLICATION_VND_ERROR_TYPE)) {\n            return Argument.of(VndError.class);\n        } else {\n            return Argument.of(String.class);\n        }\n    }",
  "abstract_func_before": "default Argument<?> getErrorType(MediaType VAR_0) {\n        if (VAR_0.equals(VAR_1.APPLICATION_JSON_TYPE)) {\n            return VAR_2.of(JsonError.class);\n        } else if (VAR_0.equals(VAR_1.APPLICATION_VND_ERROR_TYPE)) {\n            return VAR_2.of(VndError.class);\n        } else {\n            return VAR_2.of(String.class);\n        }\n    }",
  "func_graph_path_before": "micronaut-projects/micronaut-core/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3/HttpClientErrorDecoder.java/vul/before/0.json",
  "func": "default Argument<?> getErrorType(MediaType mediaType) {\n        if (mediaType.equals(MediaType.APPLICATION_JSON_TYPE)) {\n            return Argument.of(JsonError.class);\n        } else if (mediaType.equals(MediaType.APPLICATION_VND_ERROR_TYPE)) {\n            return Argument.of(VndError.class);\n        } else {\n            return Argument.STRING;\n        }\n    }",
  "abstract_func": "default Argument<?> getErrorType(MediaType VAR_0) {\n        if (VAR_0.equals(VAR_1.APPLICATION_JSON_TYPE)) {\n            return VAR_2.of(JsonError.class);\n        } else if (VAR_0.equals(VAR_1.APPLICATION_VND_ERROR_TYPE)) {\n            return VAR_2.of(VndError.class);\n        } else {\n            return VAR_2.STRING;\n        }\n    }",
  "func_graph_path": "micronaut-projects/micronaut-core/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3/HttpClientErrorDecoder.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,6 +4,6 @@\n         } else if (mediaType.equals(MediaType.APPLICATION_VND_ERROR_TYPE)) {\n             return Argument.of(VndError.class);\n         } else {\n-            return Argument.of(String.class);\n+            return Argument.STRING;\n         }\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "            return Argument.of(String.class);"
    ],
    "added_lines": [
      "            return Argument.STRING;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/micronaut-projects/micronaut-core/pull/2356",
  "description": {
    "pr_info": {
      "title": "Use Argument constants where possible instead of class",
      "number": 2356
    },
    "comment": [
      "Changes\r\n-------\r\n * Added ArgumentConversionContext constants in ConversionContext\r\n * Replaced Argument.of and use of argument classes with\r\nConversionContext constants where possible\r\n * Added getFirst method in ConvertibleMultiValues that accepts\r\nArgumentConversionContent parameter\r\n\r\nPartially addresses issue #2355",
      "Nice progress"
    ]
  },
  "Bug Filter": "Supporting & Non-Core Improvements",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "Final Classification: Supporting & Non-Core Improvements; Confidence: 0.9"
}