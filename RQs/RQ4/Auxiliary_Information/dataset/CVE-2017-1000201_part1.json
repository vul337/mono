{
  "cve_id": "CVE-2017-1000201",
  "cwe_ids": [
    "CWE-20"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "open-iscsi/tcmu-runner",
  "commit_msg": "fixed local DoS when UnregisterHandler was called for a not existing handler\n\nAny user with DBUS access could cause a SEGFAULT in tcmu-runner by\nrunning something like this:\n\ndbus-send --system --print-reply --dest=org.kernel.TCMUService1 /org/kernel/TCMUService1/HandlerManager1 org.kernel.TCMUService1.HandlerManager1.UnregisterHandler string:123",
  "commit_hash": "e2d953050766ac538615a811c64b34358614edce",
  "git_url": "https://github.com/open-iscsi/tcmu-runner/commit/e2d953050766ac538615a811c64b34358614edce",
  "file_path": "main.c",
  "func_name": "on_unregister_handler",
  "func_before": "static gboolean\non_unregister_handler(TCMUService1HandlerManager1 *interface,\n\t\t      GDBusMethodInvocation *invocation,\n\t\t      gchar *subtype,\n\t\t      gpointer user_data)\n{\n\tstruct tcmur_handler *handler = find_handler_by_subtype(subtype);\n\tstruct dbus_info *info = handler->opaque;\n\n\tif (!handler) {\n\t\tg_dbus_method_invocation_return_value(invocation,\n\t\t\tg_variant_new(\"(bs)\", FALSE,\n\t\t\t\t      \"unknown subtype\"));\n\t\treturn TRUE;\n\t}\n\tdbus_unexport_handler(handler);\n\ttcmur_unregister_handler(handler);\n\tg_bus_unwatch_name(info->watcher_id);\n\tg_free(info);\n\tg_free(handler);\n\tg_dbus_method_invocation_return_value(invocation,\n\t\tg_variant_new(\"(bs)\", TRUE, \"succeeded\"));\n\treturn TRUE;\n}",
  "abstract_func_before": "static gboolean\non_unregister_handler(TCMUService1HandlerManager1 *VAR_0,\n\t\t      GDBusMethodInvocation *VAR_1,\n\t\t      gchar *VAR_2,\n\t\t      gpointer VAR_3)\n{\n\tstruct tcmur_handler *VAR_4 = find_handler_by_subtype(VAR_2);\n\tstruct dbus_info *VAR_5 = VAR_4->opaque;\n\n\tif (!VAR_4) {\n\t\tg_dbus_method_invocation_return_value(VAR_1,\n\t\t\tg_variant_new(\"(bs)\", FALSE,\n\t\t\t\t      \"unknown subtype\"));\n\t\treturn TRUE;\n\t}\n\tdbus_unexport_handler(VAR_4);\n\ttcmur_unregister_handler(VAR_4);\n\tg_bus_unwatch_name(VAR_5->watcher_id);\n\tg_free(VAR_5);\n\tg_free(VAR_4);\n\tg_dbus_method_invocation_return_value(VAR_1,\n\t\tg_variant_new(\"(bs)\", TRUE, \"succeeded\"));\n\treturn TRUE;\n}",
  "func_graph_path_before": "open-iscsi/tcmu-runner/e2d953050766ac538615a811c64b34358614edce/main.c/vul/before/0.json",
  "func": "static gboolean\non_unregister_handler(TCMUService1HandlerManager1 *interface,\n\t\t      GDBusMethodInvocation *invocation,\n\t\t      gchar *subtype,\n\t\t      gpointer user_data)\n{\n\tstruct tcmur_handler *handler = find_handler_by_subtype(subtype);\n\tstruct dbus_info *info = handler ? handler->opaque : NULL;\n\n\tif (!handler) {\n\t\tg_dbus_method_invocation_return_value(invocation,\n\t\t\tg_variant_new(\"(bs)\", FALSE,\n\t\t\t\t      \"unknown subtype\"));\n\t\treturn TRUE;\n\t}\n\tdbus_unexport_handler(handler);\n\ttcmur_unregister_handler(handler);\n\tg_bus_unwatch_name(info->watcher_id);\n\tg_free(info);\n\tg_free(handler);\n\tg_dbus_method_invocation_return_value(invocation,\n\t\tg_variant_new(\"(bs)\", TRUE, \"succeeded\"));\n\treturn TRUE;\n}",
  "abstract_func": "static gboolean\non_unregister_handler(TCMUService1HandlerManager1 *VAR_0,\n\t\t      GDBusMethodInvocation *VAR_1,\n\t\t      gchar *VAR_2,\n\t\t      gpointer VAR_3)\n{\n\tstruct tcmur_handler *VAR_4 = find_handler_by_subtype(VAR_2);\n\tstruct dbus_info *VAR_5 = VAR_4 ? VAR_4->opaque : NULL;\n\n\tif (!VAR_4) {\n\t\tg_dbus_method_invocation_return_value(VAR_1,\n\t\t\tg_variant_new(\"(bs)\", FALSE,\n\t\t\t\t      \"unknown subtype\"));\n\t\treturn TRUE;\n\t}\n\tdbus_unexport_handler(VAR_4);\n\ttcmur_unregister_handler(VAR_4);\n\tg_bus_unwatch_name(VAR_5->watcher_id);\n\tg_free(VAR_5);\n\tg_free(VAR_4);\n\tg_dbus_method_invocation_return_value(VAR_1,\n\t\tg_variant_new(\"(bs)\", TRUE, \"succeeded\"));\n\treturn TRUE;\n}",
  "func_graph_path": "open-iscsi/tcmu-runner/e2d953050766ac538615a811c64b34358614edce/main.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -5,7 +5,7 @@\n \t\t      gpointer user_data)\n {\n \tstruct tcmur_handler *handler = find_handler_by_subtype(subtype);\n-\tstruct dbus_info *info = handler->opaque;\n+\tstruct dbus_info *info = handler ? handler->opaque : NULL;\n \n \tif (!handler) {\n \t\tg_dbus_method_invocation_return_value(invocation,",
  "diff_line_info": {
    "deleted_lines": [
      "\tstruct dbus_info *info = handler->opaque;"
    ],
    "added_lines": [
      "\tstruct dbus_info *info = handler ? handler->opaque : NULL;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/open-iscsi/tcmu-runner/pull/200",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/open-iscsi/tcmu-runner/pull/200: 403 Client Error: Forbidden for url: https://api.github.com/repos/open-iscsi/tcmu-runner/pulls/200",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}