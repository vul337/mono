{
  "cve_id": "CVE-2020-24621",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "openmrs/openmrs-module-uiframework",
  "commit_msg": "UIFR-215: Do not allow loading arbitrary files",
  "commit_hash": "0422fa52c7eba3d96cce2936cb92897dca4b680a",
  "git_url": "https://github.com/openmrs/openmrs-module-uiframework/commit/0422fa52c7eba3d96cce2936cb92897dca4b680a",
  "file_path": "api/src/main/java/org/openmrs/ui/framework/resource/ResourceFactory.java",
  "func_name": "getResource",
  "func_before": "public File getResource(String providerName, String resourcePath) {\n\t\tif (providerName == null) {\n\t\t\tfor (ResourceProvider provider : resourceProviders.values()) {\n\t\t\t\tFile ret = provider.getResource(resourcePath);\n\t\t\t\tif (ret != null)\n\t\t\t\t\treturn ret;\n\t\t\t}\n\t\t\t// not found in any registered provider\n\t\t\treturn null;\n\t\t} else {\n\t\t\tResourceProvider provider = resourceProviders.get(providerName);\n\t\t\treturn provider.getResource(resourcePath);\n\t\t}\n\t}",
  "abstract_func_before": "public File getResource(String VAR_0, String VAR_1) {\n\t\tif (VAR_0 == null) {\n\t\t\tfor (ResourceProvider VAR_2 : VAR_3.values()) {\n\t\t\t\tFile VAR_4 = VAR_2.getResource(VAR_1);\n\t\t\t\tif (VAR_4 != null)\n\t\t\t\t\treturn VAR_4;\n\t\t\t}\n\t\t\t/* COMMENT_0 */\n\t\t\treturn null;\n\t\t} else {\n\t\t\tResourceProvider VAR_2 = VAR_3.get(VAR_0);\n\t\t\treturn VAR_2.getResource(VAR_1);\n\t\t}\n\t}",
  "func_graph_path_before": "openmrs/openmrs-module-uiframework/0422fa52c7eba3d96cce2936cb92897dca4b680a/ResourceFactory.java/vul/before/1.json",
  "func": "public File getResource(String providerName, String resourcePath) {\n\t\tif (resourcePath == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!resourcePath.equals(FilenameUtils.normalize(resourcePath))) {\n\t\t\tlog.warn(\"Attempted to load file via directory traversal using path: {}\", resourcePath);\n\t\t\treturn null;\n\t\t}\n\n\t\tif (providerName == null) {\n\t\t\tfor (ResourceProvider provider : resourceProviders.values()) {\n\t\t\t\tFile ret = provider.getResource(resourcePath);\n\t\t\t\tif (ret != null)\n\t\t\t\t\treturn ret;\n\t\t\t}\n\t\t\t// not found in any registered provider\n\t\t\treturn null;\n\t\t} else {\n\t\t\tResourceProvider provider = resourceProviders.get(providerName);\n\t\t\treturn provider.getResource(resourcePath);\n\t\t}\n\t}",
  "abstract_func": "public File getResource(String VAR_0, String VAR_1) {\n\t\tif (VAR_1 == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!VAR_1.equals(VAR_2.normalize(VAR_1))) {\n\t\t\tVAR_3.warn(\"Attempted to load file via directory traversal using path: {}\", VAR_1);\n\t\t\treturn null;\n\t\t}\n\n\t\tif (VAR_0 == null) {\n\t\t\tfor (ResourceProvider VAR_4 : VAR_5.values()) {\n\t\t\t\tFile VAR_6 = VAR_4.getResource(VAR_1);\n\t\t\t\tif (VAR_6 != null)\n\t\t\t\t\treturn VAR_6;\n\t\t\t}\n\t\t\t/* COMMENT_0 */\n\t\t\treturn null;\n\t\t} else {\n\t\t\tResourceProvider VAR_4 = VAR_5.get(VAR_0);\n\t\t\treturn VAR_4.getResource(VAR_1);\n\t\t}\n\t}",
  "func_graph_path": "openmrs/openmrs-module-uiframework/0422fa52c7eba3d96cce2936cb92897dca4b680a/ResourceFactory.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,13 @@\n public File getResource(String providerName, String resourcePath) {\n+\t\tif (resourcePath == null) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tif (!resourcePath.equals(FilenameUtils.normalize(resourcePath))) {\n+\t\t\tlog.warn(\"Attempted to load file via directory traversal using path: {}\", resourcePath);\n+\t\t\treturn null;\n+\t\t}\n+\n \t\tif (providerName == null) {\n \t\t\tfor (ResourceProvider provider : resourceProviders.values()) {\n \t\t\t\tFile ret = provider.getResource(resourcePath);",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\t\tif (resourcePath == null) {",
      "\t\t\treturn null;",
      "\t\t}",
      "",
      "\t\tif (!resourcePath.equals(FilenameUtils.normalize(resourcePath))) {",
      "\t\t\tlog.warn(\"Attempted to load file via directory traversal using path: {}\", resourcePath);",
      "\t\t\treturn null;",
      "\t\t}",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/openmrs/openmrs-module-uiframework/pull/59",
  "description": {
    "pr_info": {
      "title": "UIFR-215: Do not allow loading arbitrary files",
      "number": 59
    },
    "comment": [
      "This prevents the load of files via absolute paths or path traversal. Ticket is [here](https://issues.openmrs.org/browse/UIFR-215)."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0  \n\n**Step-by-Step Explanation:**\n\n1. **Commit Message:** Mentions preventing arbitrary file loading, suggesting a security concern.\n2. **Vulnerability Description:** Clearly states prevention of file loading via absolute paths or traversal, linking to a known security issue (CWE-22).\n3. **Code Diff:** Introduces checks to prevent directory traversal, a common security fix.\n\nAll parts align perfectly to indicate a security vulnerability fix with high confidence."
}