{
  "cve_id": "CVE-2020-19861",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "NLnetLabs/ldns",
  "commit_msg": "* bugfix #51: Heap Out-of-bound Read vulnerability in\n  ldns_nsec3_salt_data reported by pokerfacett.",
  "commit_hash": "136ec420437041fe13f344a2053e774f9050cc38",
  "git_url": "https://github.com/NLnetLabs/ldns/commit/136ec420437041fe13f344a2053e774f9050cc38",
  "file_path": "dnssec.c",
  "func_name": "ldns_nsec3_salt_data",
  "func_before": "uint8_t *\nldns_nsec3_salt_data(const ldns_rr *nsec3_rr)\n{\n\tuint8_t salt_length;\n\tuint8_t *salt;\n\n\tldns_rdf *salt_rdf = ldns_nsec3_salt(nsec3_rr);\n\tif (salt_rdf && ldns_rdf_size(salt_rdf) > 0) {\n\t    \tsalt_length = ldns_rdf_data(salt_rdf)[0];\n\t\tsalt = LDNS_XMALLOC(uint8_t, salt_length);\n                if(!salt) return NULL;\n\t\tmemcpy(salt, &ldns_rdf_data(salt_rdf)[1], salt_length);\n\t\treturn salt;\n\t}\n\treturn NULL;\n}",
  "abstract_func_before": "uint8_t *\nldns_nsec3_salt_data(const ldns_rr *VAR_0)\n{\n\tuint8_t VAR_1;\n\tuint8_t *VAR_2;\n\n\tldns_rdf *VAR_3 = ldns_nsec3_salt(VAR_0);\n\tif (VAR_3 && ldns_rdf_size(VAR_3) > 0) {\n\t    \tVAR_1 = ldns_rdf_data(VAR_3)[0];\n\t\tVAR_2 = LDNS_XMALLOC(uint8_t, VAR_1);\n                if(!VAR_2) return NULL;\n\t\tmemcpy(VAR_2, &ldns_rdf_data(VAR_3)[1], VAR_1);\n\t\treturn VAR_2;\n\t}\n\treturn NULL;\n}",
  "func_graph_path_before": "NLnetLabs/ldns/136ec420437041fe13f344a2053e774f9050cc38/dnssec.c/vul/before/0.json",
  "func": "uint8_t *\nldns_nsec3_salt_data(const ldns_rr *nsec3_rr)\n{\n\tuint8_t salt_length;\n\tuint8_t *salt;\n\n\tldns_rdf *salt_rdf = ldns_nsec3_salt(nsec3_rr);\n\tif (salt_rdf && ldns_rdf_size(salt_rdf) > 0) {\n\t    \tsalt_length = ldns_rdf_data(salt_rdf)[0];\n\t\tif((size_t)salt_length+1 > ldns_rdf_size(salt_rdf))\n\t\t\treturn NULL;\n\t\tsalt = LDNS_XMALLOC(uint8_t, salt_length);\n                if(!salt) return NULL;\n\t\tmemcpy(salt, &ldns_rdf_data(salt_rdf)[1], salt_length);\n\t\treturn salt;\n\t}\n\treturn NULL;\n}",
  "abstract_func": "uint8_t *\nldns_nsec3_salt_data(const ldns_rr *VAR_0)\n{\n\tuint8_t VAR_1;\n\tuint8_t *VAR_2;\n\n\tldns_rdf *VAR_3 = ldns_nsec3_salt(VAR_0);\n\tif (VAR_3 && ldns_rdf_size(VAR_3) > 0) {\n\t    \tVAR_1 = ldns_rdf_data(VAR_3)[0];\n\t\tif((size_t)VAR_1+1 > ldns_rdf_size(VAR_3))\n\t\t\treturn NULL;\n\t\tVAR_2 = LDNS_XMALLOC(uint8_t, VAR_1);\n                if(!VAR_2) return NULL;\n\t\tmemcpy(VAR_2, &ldns_rdf_data(VAR_3)[1], VAR_1);\n\t\treturn VAR_2;\n\t}\n\treturn NULL;\n}",
  "func_graph_path": "NLnetLabs/ldns/136ec420437041fe13f344a2053e774f9050cc38/dnssec.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,6 +7,8 @@\n \tldns_rdf *salt_rdf = ldns_nsec3_salt(nsec3_rr);\n \tif (salt_rdf && ldns_rdf_size(salt_rdf) > 0) {\n \t    \tsalt_length = ldns_rdf_data(salt_rdf)[0];\n+\t\tif((size_t)salt_length+1 > ldns_rdf_size(salt_rdf))\n+\t\t\treturn NULL;\n \t\tsalt = LDNS_XMALLOC(uint8_t, salt_length);\n                 if(!salt) return NULL;\n \t\tmemcpy(salt, &ldns_rdf_data(salt_rdf)[1], salt_length);",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\t\tif((size_t)salt_length+1 > ldns_rdf_size(salt_rdf))",
      "\t\t\treturn NULL;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/NLnetLabs/ldns/pull/144",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/NLnetLabs/ldns/pull/144: 403 Client Error: Forbidden for url: https://api.github.com/repos/NLnetLabs/ldns/pulls/144",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "The patch addresses an out-of-bound read vulnerability by adding a boundary check, which prevents accessing memory beyond allocated limits. The commit message and code changes are consistent, clearly indicating a security fix.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}