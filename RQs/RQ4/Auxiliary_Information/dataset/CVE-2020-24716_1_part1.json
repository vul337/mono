{
  "cve_id": "CVE-2020-24716",
  "cwe_ids": [
    "CWE-863",
    "CWE-276"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "openzfs/zfs",
  "commit_msg": "FreeBSD: Fix UNIX permissions checking\n\nReviewed-by: Ryan Moeller <ryan@iXsystems.com>\r\nReviewed-by: Brian Behlendorf <behlendorf1@llnl.gov>\r\nSigned-off-by: Matt Macy <mmacy@FreeBSD.org>\r\nCloses #10727",
  "commit_hash": "716b53d0a14c72bda16c0872565dd1909757e73f",
  "git_url": "https://github.com/openzfs/zfs/commit/716b53d0a14c72bda16c0872565dd1909757e73f",
  "file_path": "module/zfs/zfs_fuid.c",
  "func_name": "zfs_fuid_map_id",
  "func_before": "uid_t\nzfs_fuid_map_id(zfsvfs_t *zfsvfs, uint64_t fuid,\n    cred_t *cr, zfs_fuid_type_t type)\n{\n#ifdef HAVE_KSID\n\tuint32_t index = FUID_INDEX(fuid);\n\tconst char *domain;\n\tuid_t id;\n\n\tif (index == 0)\n\t\treturn (fuid);\n\n\tdomain = zfs_fuid_find_by_idx(zfsvfs, index);\n\tASSERT(domain != NULL);\n\n\tif (type == ZFS_OWNER || type == ZFS_ACE_USER) {\n\t\t(void) kidmap_getuidbysid(crgetzone(cr), domain,\n\t\t    FUID_RID(fuid), &id);\n\t} else {\n\t\t(void) kidmap_getgidbysid(crgetzone(cr), domain,\n\t\t    FUID_RID(fuid), &id);\n\t}\n\treturn (id);\n#else\n\t/*\n\t * The Linux port only supports POSIX IDs, use the passed id.\n\t */\n\treturn (fuid);\n#endif /* HAVE_KSID */\n}",
  "abstract_func_before": "uid_t\nzfs_fuid_map_id(zfsvfs_t *VAR_0, uint64_t VAR_1,\n    cred_t *VAR_2, zfs_fuid_type_t VAR_3)\n{\n#ifdef VAR_4\n\tuint32_t VAR_5 = FUID_INDEX(VAR_1);\n\tconst char *VAR_6;\n\tuid_t VAR_7;\n\n\tif (VAR_5 == 0)\n\t\treturn (VAR_1);\n\n\tVAR_6 = zfs_fuid_find_by_idx(VAR_0, VAR_5);\n\tASSERT(VAR_6 != NULL);\n\n\tif (VAR_3 == VAR_8 || VAR_3 == VAR_9) {\n\t\t(void) kidmap_getuidbysid(crgetzone(VAR_2), VAR_6,\n\t\t    FUID_RID(VAR_1), &VAR_7);\n\t} else {\n\t\t(void) kidmap_getgidbysid(crgetzone(VAR_2), VAR_6,\n\t\t    FUID_RID(VAR_1), &VAR_7);\n\t}\n\treturn (VAR_7);\n#else\n\t/* COMMENT_0 */\n                                                              \n    \n\treturn (VAR_1);\n#endif /* COMMENT_3 */\n}",
  "func_graph_path_before": "openzfs/zfs/716b53d0a14c72bda16c0872565dd1909757e73f/zfs_fuid.c/vul/before/2.json",
  "func": "uid_t\nzfs_fuid_map_id(zfsvfs_t *zfsvfs, uint64_t fuid,\n    cred_t *cr, zfs_fuid_type_t type)\n{\n\tuint32_t index = FUID_INDEX(fuid);\n\n\tif (index == 0)\n\t\treturn (fuid);\n\n\treturn (UID_NOBODY);\n}",
  "abstract_func": "uid_t\nzfs_fuid_map_id(zfsvfs_t *VAR_0, uint64_t VAR_1,\n    cred_t *VAR_2, zfs_fuid_type_t VAR_3)\n{\n\tuint32_t VAR_4 = FUID_INDEX(VAR_1);\n\n\tif (VAR_4 == 0)\n\t\treturn (VAR_1);\n\n\treturn (VAR_5);\n}",
  "func_graph_path": "openzfs/zfs/716b53d0a14c72bda16c0872565dd1909757e73f/zfs_fuid.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,29 +2,10 @@\n zfs_fuid_map_id(zfsvfs_t *zfsvfs, uint64_t fuid,\n     cred_t *cr, zfs_fuid_type_t type)\n {\n-#ifdef HAVE_KSID\n \tuint32_t index = FUID_INDEX(fuid);\n-\tconst char *domain;\n-\tuid_t id;\n \n \tif (index == 0)\n \t\treturn (fuid);\n \n-\tdomain = zfs_fuid_find_by_idx(zfsvfs, index);\n-\tASSERT(domain != NULL);\n-\n-\tif (type == ZFS_OWNER || type == ZFS_ACE_USER) {\n-\t\t(void) kidmap_getuidbysid(crgetzone(cr), domain,\n-\t\t    FUID_RID(fuid), &id);\n-\t} else {\n-\t\t(void) kidmap_getgidbysid(crgetzone(cr), domain,\n-\t\t    FUID_RID(fuid), &id);\n-\t}\n-\treturn (id);\n-#else\n-\t/*\n-\t * The Linux port only supports POSIX IDs, use the passed id.\n-\t */\n-\treturn (fuid);\n-#endif /* HAVE_KSID */\n+\treturn (UID_NOBODY);\n }",
  "diff_line_info": {
    "deleted_lines": [
      "#ifdef HAVE_KSID",
      "\tconst char *domain;",
      "\tuid_t id;",
      "\tdomain = zfs_fuid_find_by_idx(zfsvfs, index);",
      "\tASSERT(domain != NULL);",
      "",
      "\tif (type == ZFS_OWNER || type == ZFS_ACE_USER) {",
      "\t\t(void) kidmap_getuidbysid(crgetzone(cr), domain,",
      "\t\t    FUID_RID(fuid), &id);",
      "\t} else {",
      "\t\t(void) kidmap_getgidbysid(crgetzone(cr), domain,",
      "\t\t    FUID_RID(fuid), &id);",
      "\t}",
      "\treturn (id);",
      "#else",
      "\t/*",
      "\t * The Linux port only supports POSIX IDs, use the passed id.",
      "\t */",
      "\treturn (fuid);",
      "#endif /* HAVE_KSID */"
    ],
    "added_lines": [
      "\treturn (UID_NOBODY);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/openzfs/zfs/pull/10727",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/openzfs/zfs/pull/10727: 403 Client Error: Forbidden for url: https://api.github.com/repos/openzfs/zfs/pulls/10727",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}