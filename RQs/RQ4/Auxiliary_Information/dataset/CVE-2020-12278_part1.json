{
  "cve_id": "CVE-2020-12278",
  "cwe_ids": [
    "CWE-706"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "libgit2",
  "commit_msg": "path: also guard `.gitmodules` against NTFS Alternate Data Streams\n\nWe just safe-guarded `.git` against NTFS Alternate Data Stream-related\nattack vectors, and now it is time to do the same for `.gitmodules`.\n\nNote: In the added regression test, we refrain from verifying all kinds\nof variations between short names and NTFS Alternate Data Streams: as\nthe new code disallows _all_ Alternate Data Streams of `.gitmodules`, it\nis enough to test one in order to know that all of them are guarded\nagainst.\n\nSigned-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>",
  "commit_hash": "e1832eb20a7089f6383cfce474f213157f5300cb",
  "git_url": "https://github.com/libgit2/libgit2/commit/e1832eb20a7089f6383cfce474f213157f5300cb",
  "file_path": "src/path.c",
  "func_name": "only_spaces_and_dots",
  "func_before": "GIT_INLINE(bool) only_spaces_and_dots(const char *path)\n{\n\tconst char *c = path;\n\n\tfor (;; c++) {\n\t\tif (*c == '\\0')\n\t\t\treturn true;\n\t\tif (*c != ' ' && *c != '.')\n\t\t\treturn false;\n\t}\n\n\treturn true;\n}",
  "abstract_func_before": "VAR_0(bool) only_spaces_and_dots(const char *VAR_1)\n{\n\tconst char *VAR_2 = VAR_1;\n\n\tfor (;; VAR_2++) {\n\t\tif (*VAR_2 == '\\0')\n\t\t\treturn true;\n\t\tif (*VAR_2 != ' ' && *VAR_2 != '.')\n\t\t\treturn false;\n\t}\n\n\treturn true;\n}",
  "func_graph_path_before": null,
  "func": "GIT_INLINE(bool) only_spaces_and_dots(const char *path)\n{\n\tconst char *c = path;\n\n\tfor (;; c++) {\n\t\tif (*c == '\\0' || *c == ':')\n\t\t\treturn true;\n\t\tif (*c != ' ' && *c != '.')\n\t\t\treturn false;\n\t}\n\n\treturn true;\n}",
  "abstract_func": "VAR_0(bool) only_spaces_and_dots(const char *VAR_1)\n{\n\tconst char *VAR_2 = VAR_1;\n\n\tfor (;; VAR_2++) {\n\t\tif (*VAR_2 == '\\0' || *VAR_2 == ':')\n\t\t\treturn true;\n\t\tif (*VAR_2 != ' ' && *VAR_2 != '.')\n\t\t\treturn false;\n\t}\n\n\treturn true;\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,7 +3,7 @@\n \tconst char *c = path;\n \n \tfor (;; c++) {\n-\t\tif (*c == '\\0')\n+\t\tif (*c == '\\0' || *c == ':')\n \t\t\treturn true;\n \t\tif (*c != ' ' && *c != '.')\n \t\t\treturn false;",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tif (*c == '\\0')"
    ],
    "added_lines": [
      "\t\tif (*c == '\\0' || *c == ':')"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libgit2/libgit2/pull/5331",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/libgit2/libgit2/pull/5331: 403 Client Error: Forbidden for url: https://api.github.com/repos/libgit2/libgit2/pulls/5331",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Output:**  \n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0  \n\nThe commit addresses a known security vulnerability (CVE-2019-1352) by guarding against NTFS Alternate Data Streams for `.gitmodules`, consistent with the code changes that add checks to prevent such attacks. The confidence level is 1.0 because the information is clear and consistent across all provided inputs."
}