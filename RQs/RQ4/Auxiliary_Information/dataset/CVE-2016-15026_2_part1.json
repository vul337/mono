{
  "cve_id": "CVE-2016-15026",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "AV:L/AC:L/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "3breadt/dd-plist",
  "commit_msg": "1) Take steps to guard against external XXE attacks (except, note that <!DOCTYPE> cannot be disabled in XML plists).\n2) Resolve the actual PLIST DTD from inside the JAR file itself, and prevent resolution of other external XML resources.\n3) Make XMLPlistParser.getDocBuilder public",
  "commit_hash": "8c954e8d9f6f6863729e50105a8abf3f87fff74c",
  "git_url": "https://github.com/3breadt/dd-plist/commit/8c954e8d9f6f6863729e50105a8abf3f87fff74c",
  "file_path": "src/main/java/com/dd/plist/XMLPropertyListParser.java",
  "func_name": "parse",
  "func_before": "public static NSObject parse(InputStream is) throws ParserConfigurationException, IOException, SAXException, PropertyListFormatException, ParseException {\n        DocumentBuilder docBuilder = getDocBuilder();\n\n        Document doc = docBuilder.parse(is);\n\n        return parse(doc);\n    }",
  "abstract_func_before": "public static NSObject parse(InputStream VAR_0) throws ParserConfigurationException, IOException, SAXException, PropertyListFormatException, ParseException {\n        DocumentBuilder VAR_1 = getDocBuilder();\n\n        Document VAR_2 = VAR_1.parse(VAR_0);\n\n        return parse(VAR_2);\n    }",
  "func_graph_path_before": "3breadt/dd-plist/8c954e8d9f6f6863729e50105a8abf3f87fff74c/XMLPropertyListParser.java/vul/before/3.json",
  "func": "public static NSObject parse(InputStream is)\n                throws ParserConfigurationException, IOException, SAXException, PropertyListFormatException, ParseException {\n\n        return parse(getDocBuilder().parse(is));\n    }",
  "abstract_func": "public static NSObject parse(InputStream VAR_0)\n                throws ParserConfigurationException, IOException, SAXException, PropertyListFormatException, ParseException {\n\n        return parse(getDocBuilder().parse(VAR_0));\n    }",
  "func_graph_path": "3breadt/dd-plist/8c954e8d9f6f6863729e50105a8abf3f87fff74c/XMLPropertyListParser.java/vul/after/3.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,5 @@\n-public static NSObject parse(InputStream is) throws ParserConfigurationException, IOException, SAXException, PropertyListFormatException, ParseException {\n-        DocumentBuilder docBuilder = getDocBuilder();\n+public static NSObject parse(InputStream is)\n+                throws ParserConfigurationException, IOException, SAXException, PropertyListFormatException, ParseException {\n \n-        Document doc = docBuilder.parse(is);\n-\n-        return parse(doc);\n+        return parse(getDocBuilder().parse(is));\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "public static NSObject parse(InputStream is) throws ParserConfigurationException, IOException, SAXException, PropertyListFormatException, ParseException {",
      "        DocumentBuilder docBuilder = getDocBuilder();",
      "        Document doc = docBuilder.parse(is);",
      "",
      "        return parse(doc);"
    ],
    "added_lines": [
      "public static NSObject parse(InputStream is)",
      "                throws ParserConfigurationException, IOException, SAXException, PropertyListFormatException, ParseException {",
      "        return parse(getDocBuilder().parse(is));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/3breadt/dd-plist/pull/26",
  "description": {
    "pr_info": {
      "title": "Protect XML parsing against XXE attacks and load DTD from JAR",
      "number": 26
    },
    "comment": [
      "1) Take steps to guard against XXE attacks (note that <!DOCTYPE> cannot be disabled in XML plists). See: https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet#Java\n2) Resolve the actual PLIST DTD from inside the JAR file itself, and prevent resolution of other external XML resources.\n3) Make XMLPlistParser.getDocBuilder public.\n",
      "First of all, I greatly appreciate your effort to make this library more secure.\n\n_Regarding 1)_\n\nThe code, especially setting the features, needs to be tested under Android because it uses a different DocumentBuilder implementation than the Oracle JRE. And so far this library has remained Android compatible. Have you done this?\n\n_Regarding 2)_\n\nI would not redistribute the DTD which originates from http://www.apple.com/DTDs/PropertyList-1.0.dtd and thus may be copyrighted by Apple Inc.\nThat is why the current DocumentBuilder uses an EntityResolver which returns an empty input stream.\n\nAs DTD validation is anyway disabled I see no reason to change that behavior. Or does this in any way compromise the fix against XXE attacks?\n",
      "Fair enough, I haven't tested whether these properties work on Android.  I could wrap each in a try/catch block in case they're not supported.  And I understand your copyright concern, I guess it's not strictly necessary to have there anyway unless one wants to validate the XML document.  I'll update this PR.\n",
      "Sounds good, thanks!\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9  \n\nThe commit explicitly addresses XXE attacks and prevents external XML resource resolution, indicating a clear security fix. The code changes support this by modifying how the XML parser operates, aligning with the vulnerability description."
}