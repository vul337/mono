{
  "cve_id": "CVE-2021-40656",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "libsixel",
  "commit_msg": "[error_diffuse] don't diffuse into the void",
  "commit_hash": "dc96cdc27fb53e8595af67aaf68001033c808e42",
  "git_url": "https://github.com/libsixel/libsixel/commit/dc96cdc27fb53e8595af67aaf68001033c808e42",
  "file_path": "src/quant.c",
  "func_name": "diffuse_fs",
  "func_before": "static void\ndiffuse_fs(unsigned char *data, int width, int height,\n           int x, int y, int depth, int error)\n{\n    int pos;\n\n    pos = y * width + x;\n\n    /* Floyd Steinberg Method\n     *          curr    7/16\n     *  3/16    5/48    1/16\n     */\n    if (x < width - 1 && y < height - 1) {\n        /* add error to the right cell */\n        error_diffuse(data, pos + width * 0 + 1, depth, error, 7, 16);\n        /* add error to the left-bottom cell */\n        error_diffuse(data, pos + width * 1 - 1, depth, error, 3, 16);\n        /* add error to the bottom cell */\n        error_diffuse(data, pos + width * 1 + 0, depth, error, 5, 16);\n        /* add error to the right-bottom cell */\n        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 16);\n    }\n}",
  "abstract_func_before": "static void\ndiffuse_fs(unsigned char *VAR_0, int VAR_1, int VAR_2,\n           int VAR_3, int VAR_4, int VAR_5, int VAR_6)\n{\n    int VAR_7;\n\n    VAR_7 = VAR_4 * VAR_1 + VAR_3;\n\n    /* COMMENT_0 */\n                            \n                            \n       \n    if (VAR_3 < VAR_1 - 1 && VAR_4 < VAR_2 - 1) {\n        /* COMMENT_4 */\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 0 + 1, VAR_5, VAR_6, 7, 16);\n        /* COMMENT_5 */\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 - 1, VAR_5, VAR_6, 3, 16);\n        /* COMMENT_6 */\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 + 0, VAR_5, VAR_6, 5, 16);\n        /* COMMENT_7 */\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 + 1, VAR_5, VAR_6, 1, 16);\n    }\n}",
  "func_graph_path_before": "libsixel/dc96cdc27fb53e8595af67aaf68001033c808e42/quant.c/vul/before/1.json",
  "func": "static void\ndiffuse_fs(unsigned char *data, int width, int height,\n           int x, int y, int depth, int error)\n{\n    int pos;\n\n    pos = y * width + x;\n\n    /* Floyd Steinberg Method\n     *          curr    7/16\n     *  3/16    5/48    1/16\n     */\n    if (x < width - 1 && y < height - 1) {\n        /* add error to the right cell */\n        error_diffuse(data, pos + width * 0 + 1, depth, error, 7, 16, width * height);\n        /* add error to the left-bottom cell */\n        error_diffuse(data, pos + width * 1 - 1, depth, error, 3, 16, width * height);\n        /* add error to the bottom cell */\n        error_diffuse(data, pos + width * 1 + 0, depth, error, 5, 16, width * height);\n        /* add error to the right-bottom cell */\n        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 16, width * height);\n    }\n}",
  "abstract_func": "static void\ndiffuse_fs(unsigned char *VAR_0, int VAR_1, int VAR_2,\n           int VAR_3, int VAR_4, int VAR_5, int VAR_6)\n{\n    int VAR_7;\n\n    VAR_7 = VAR_4 * VAR_1 + VAR_3;\n\n    /* COMMENT_0 */\n                            \n                            \n       \n    if (VAR_3 < VAR_1 - 1 && VAR_4 < VAR_2 - 1) {\n        /* COMMENT_4 */\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 0 + 1, VAR_5, VAR_6, 7, 16, VAR_1 * VAR_2);\n        /* COMMENT_5 */\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 - 1, VAR_5, VAR_6, 3, 16, VAR_1 * VAR_2);\n        /* COMMENT_6 */\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 + 0, VAR_5, VAR_6, 5, 16, VAR_1 * VAR_2);\n        /* COMMENT_7 */\n        error_diffuse(VAR_0, VAR_7 + VAR_1 * 1 + 1, VAR_5, VAR_6, 1, 16, VAR_1 * VAR_2);\n    }\n}",
  "func_graph_path": "libsixel/dc96cdc27fb53e8595af67aaf68001033c808e42/quant.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -12,12 +12,12 @@\n      */\n     if (x < width - 1 && y < height - 1) {\n         /* add error to the right cell */\n-        error_diffuse(data, pos + width * 0 + 1, depth, error, 7, 16);\n+        error_diffuse(data, pos + width * 0 + 1, depth, error, 7, 16, width * height);\n         /* add error to the left-bottom cell */\n-        error_diffuse(data, pos + width * 1 - 1, depth, error, 3, 16);\n+        error_diffuse(data, pos + width * 1 - 1, depth, error, 3, 16, width * height);\n         /* add error to the bottom cell */\n-        error_diffuse(data, pos + width * 1 + 0, depth, error, 5, 16);\n+        error_diffuse(data, pos + width * 1 + 0, depth, error, 5, 16, width * height);\n         /* add error to the right-bottom cell */\n-        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 16);\n+        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 16, width * height);\n     }\n }",
  "diff_line_info": {
    "deleted_lines": [
      "        error_diffuse(data, pos + width * 0 + 1, depth, error, 7, 16);",
      "        error_diffuse(data, pos + width * 1 - 1, depth, error, 3, 16);",
      "        error_diffuse(data, pos + width * 1 + 0, depth, error, 5, 16);",
      "        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 16);"
    ],
    "added_lines": [
      "        error_diffuse(data, pos + width * 0 + 1, depth, error, 7, 16, width * height);",
      "        error_diffuse(data, pos + width * 1 - 1, depth, error, 3, 16, width * height);",
      "        error_diffuse(data, pos + width * 1 + 0, depth, error, 5, 16, width * height);",
      "        error_diffuse(data, pos + width * 1 + 1, depth, error, 1, 16, width * height);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libsixel/libsixel/pull/26",
  "description": {
    "pr_info": {
      "title": "[error_diffuse] don't diffuse into the void",
      "number": 26
    },
    "comment": [
      "Fixes the invalid accesses noted by @a4865g in #25. Simple and inelegant, but robust fix. Closes #25."
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.85,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.85"
}