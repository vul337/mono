{
  "cve_id": "CVE-2024-25679",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:L",
  "cvss_is_v3": true,
  "repo_name": "p-quic/pquic",
  "commit_msg": "discard the keys after handshake is done; use the correct original_destination_connection_id; discard the re-transmission packets correctly; limit the active_connection_id",
  "commit_hash": "2dbc6bbd71ddffe0f040016240541658b6e3ebba",
  "git_url": "https://github.com/p-quic/pquic/commit/2dbc6bbd71ddffe0f040016240541658b6e3ebba",
  "file_path": "picoquic/sender.c",
  "func_name": "get_checksum_length",
  "func_before": "protoop_arg_t get_checksum_length(picoquic_cnx_t *cnx)\n{\n    int is_cleartext_mode = (int) cnx->protoop_inputv[0];\n    uint32_t ret = 16;\n\n    if (is_cleartext_mode || cnx->crypto_context[2].aead_encrypt == NULL) {\n        ret = picoquic_aead_get_checksum_length(cnx->crypto_context[0].aead_encrypt);\n    } else {\n        ret = picoquic_aead_get_checksum_length(cnx->crypto_context[2].aead_encrypt);\n    }\n\n    return (protoop_arg_t) ret;\n}",
  "abstract_func_before": "protoop_arg_t get_checksum_length(picoquic_cnx_t *VAR_0)\n{\n    int VAR_1 = (int) VAR_0->protoop_inputv[0];\n    uint32_t VAR_2 = 16;\n\n    if (VAR_1 || VAR_0->crypto_context[2].aead_encrypt == NULL) {\n        VAR_2 = picoquic_aead_get_checksum_length(VAR_0->crypto_context[0].aead_encrypt);\n    } else {\n        VAR_2 = picoquic_aead_get_checksum_length(VAR_0->crypto_context[2].aead_encrypt);\n    }\n\n    return (protoop_arg_t) VAR_2;\n}",
  "func_graph_path_before": "p-quic/pquic/2dbc6bbd71ddffe0f040016240541658b6e3ebba/sender.c/vul/before/0.json",
  "func": "protoop_arg_t get_checksum_length(picoquic_cnx_t *cnx)\n{\n    int is_cleartext_mode = (int) cnx->protoop_inputv[0];\n    uint32_t ret = 16;\n\n    if (is_cleartext_mode && cnx->crypto_context[2].aead_encrypt == NULL && cnx->crypto_context[0].aead_encrypt != NULL) {\n        ret = picoquic_aead_get_checksum_length(cnx->crypto_context[0].aead_encrypt);\n    } else if (cnx->crypto_context[2].aead_encrypt != NULL) {\n        ret = picoquic_aead_get_checksum_length(cnx->crypto_context[2].aead_encrypt);\n    } else if(cnx->crypto_context[3].aead_encrypt != NULL) {\n        ret = picoquic_aead_get_checksum_length(cnx->crypto_context[3].aead_encrypt);\n    }\n\n    return (protoop_arg_t) ret;\n}",
  "abstract_func": "protoop_arg_t get_checksum_length(picoquic_cnx_t *VAR_0)\n{\n    int VAR_1 = (int) VAR_0->protoop_inputv[0];\n    uint32_t VAR_2 = 16;\n\n    if (VAR_1 && VAR_0->crypto_context[2].aead_encrypt == NULL && VAR_0->crypto_context[0].aead_encrypt != NULL) {\n        VAR_2 = picoquic_aead_get_checksum_length(VAR_0->crypto_context[0].aead_encrypt);\n    } else if (VAR_0->crypto_context[2].aead_encrypt != NULL) {\n        VAR_2 = picoquic_aead_get_checksum_length(VAR_0->crypto_context[2].aead_encrypt);\n    } else if(VAR_0->crypto_context[3].aead_encrypt != NULL) {\n        VAR_2 = picoquic_aead_get_checksum_length(VAR_0->crypto_context[3].aead_encrypt);\n    }\n\n    return (protoop_arg_t) VAR_2;\n}",
  "func_graph_path": "p-quic/pquic/2dbc6bbd71ddffe0f040016240541658b6e3ebba/sender.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,10 +3,12 @@\n     int is_cleartext_mode = (int) cnx->protoop_inputv[0];\n     uint32_t ret = 16;\n \n-    if (is_cleartext_mode || cnx->crypto_context[2].aead_encrypt == NULL) {\n+    if (is_cleartext_mode && cnx->crypto_context[2].aead_encrypt == NULL && cnx->crypto_context[0].aead_encrypt != NULL) {\n         ret = picoquic_aead_get_checksum_length(cnx->crypto_context[0].aead_encrypt);\n-    } else {\n+    } else if (cnx->crypto_context[2].aead_encrypt != NULL) {\n         ret = picoquic_aead_get_checksum_length(cnx->crypto_context[2].aead_encrypt);\n+    } else if(cnx->crypto_context[3].aead_encrypt != NULL) {\n+        ret = picoquic_aead_get_checksum_length(cnx->crypto_context[3].aead_encrypt);\n     }\n \n     return (protoop_arg_t) ret;",
  "diff_line_info": {
    "deleted_lines": [
      "    if (is_cleartext_mode || cnx->crypto_context[2].aead_encrypt == NULL) {",
      "    } else {"
    ],
    "added_lines": [
      "    if (is_cleartext_mode && cnx->crypto_context[2].aead_encrypt == NULL && cnx->crypto_context[0].aead_encrypt != NULL) {",
      "    } else if (cnx->crypto_context[2].aead_encrypt != NULL) {",
      "    } else if(cnx->crypto_context[3].aead_encrypt != NULL) {",
      "        ret = picoquic_aead_get_checksum_length(cnx->crypto_context[3].aead_encrypt);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/p-quic/pquic/pull/39",
  "description": {
    "pr_info": {
      "title": "Minor Fix",
      "number": 39
    },
    "comment": [
      "Hi, I try to fix the bugs in #34 #35 #36 and #38.\r\n\r\nCan you validate these fixes please.\r\n",
      "The code looks good. Have you done any test to ensure it fixes these issues ?"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.7\n\n**Step-by-Step Explanation:**\n\n1. **Input Analysis:**\n   - The commit message indicates handling of connection IDs and packet discarding, which are functional changes.\n   - The vulnerability description refers to bug fixes without security context.\n   - The code diff modifies crypto context checks, affecting checksum calculations.\n\n2. **Consistency Check:**\n   - Changes in code align with commit message regarding connection handling and encryption contexts.\n\n3. **Purpose Evaluation:**\n   - The code changes pertain to correct function logic for checksum calculation, not to security flaws.\n\n4. **Security Vulnerability Assessment:**\n   - No mention of CVE or security terms; changes address functionality rather than security.\n\n5. **Non-Security Classification:**\n   - Classifies under \"Defect Remediation & Feature Upgrades\" for core function fixes.\n\n6. **Confidence Scoring:**\n   - 0.7 due to indirect relation to security without explicit mention and clear functional focus."
}