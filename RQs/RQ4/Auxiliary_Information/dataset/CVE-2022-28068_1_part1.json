{
  "cve_id": "CVE-2022-28068",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix oobread crash in DWARF parser (tests_64924) ##crash\n\nReported by giantbranch of NSFOCUS TIANJI Lab",
  "commit_hash": "637f4bd1af6752e28e0a9998e954e2e9ce6fa992",
  "git_url": "https://github.com/radareorg/radare2/commit/637f4bd1af6752e28e0a9998e954e2e9ce6fa992",
  "file_path": "libr/bin/dwarf.c",
  "func_name": "dwarf_read_address",
  "func_before": "static inline ut64 dwarf_read_address(size_t size, const ut8 **buf, const ut8 *buf_end) {\n\tut64 result;\n\tswitch (size) {\n\t\tcase 2:\n\t\tresult = READ16 (*buf); break;\n\t\tcase 4:\n\t\tresult = READ32 (*buf); break;\n\t\tcase 8:\n\t\tresult = READ64 (*buf); break;\n\t\tdefault:\n\t\tresult = 0;\n\t\t*buf += size;\n\t\teprintf (\"Weird dwarf address size: %zu.\", size);\n\t}\n\treturn result;\n}",
  "abstract_func_before": "static inline ut64 dwarf_read_address(size_t VAR_0, const ut8 **VAR_1, const ut8 *VAR_2) {\n\tut64 VAR_3;\n\tswitch (VAR_0) {\n\t\tcase 2:\n\t\tVAR_3 = READ16 (*VAR_1); break;\n\t\tcase 4:\n\t\tVAR_3 = READ32 (*VAR_1); break;\n\t\tcase 8:\n\t\tVAR_3 = READ64 (*VAR_1); break;\n\t\tdefault:\n\t\tVAR_3 = 0;\n\t\t*VAR_1 += VAR_0;\n\t\teprintf (\"Weird dwarf address size: %zu.\", VAR_0);\n\t}\n\treturn VAR_3;\n}",
  "func_graph_path_before": "radareorg/radare2/637f4bd1af6752e28e0a9998e954e2e9ce6fa992/dwarf.c/vul/before/1.json",
  "func": "static inline ut64 dwarf_read_address(size_t size, const ut8 **buf, const ut8 *buf_end) {\n\tut64 result;\n\tswitch (size) {\n\tcase 2: result = READ16 (*buf); break;\n\tcase 4: result = READ32 (*buf); break;\n\tcase 8: result = READ64 (*buf); break;\n\tdefault:\n\t\tresult = 0;\n\t\t*buf += size;\n\t\teprintf (\"Weird dwarf address size: %zu.\", size);\n\t}\n\treturn result;\n}",
  "abstract_func": "static inline ut64 dwarf_read_address(size_t VAR_0, const ut8 **VAR_1, const ut8 *VAR_2) {\n\tut64 VAR_3;\n\tswitch (VAR_0) {\n\tcase 2: VAR_3 = READ16 (*VAR_1); break;\n\tcase 4: VAR_3 = READ32 (*VAR_1); break;\n\tcase 8: VAR_3 = READ64 (*VAR_1); break;\n\tdefault:\n\t\tVAR_3 = 0;\n\t\t*VAR_1 += VAR_0;\n\t\teprintf (\"Weird dwarf address size: %zu.\", VAR_0);\n\t}\n\treturn VAR_3;\n}",
  "func_graph_path": "radareorg/radare2/637f4bd1af6752e28e0a9998e954e2e9ce6fa992/dwarf.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,13 +1,10 @@\n static inline ut64 dwarf_read_address(size_t size, const ut8 **buf, const ut8 *buf_end) {\n \tut64 result;\n \tswitch (size) {\n-\t\tcase 2:\n-\t\tresult = READ16 (*buf); break;\n-\t\tcase 4:\n-\t\tresult = READ32 (*buf); break;\n-\t\tcase 8:\n-\t\tresult = READ64 (*buf); break;\n-\t\tdefault:\n+\tcase 2: result = READ16 (*buf); break;\n+\tcase 4: result = READ32 (*buf); break;\n+\tcase 8: result = READ64 (*buf); break;\n+\tdefault:\n \t\tresult = 0;\n \t\t*buf += size;\n \t\teprintf (\"Weird dwarf address size: %zu.\", size);",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tcase 2:",
      "\t\tresult = READ16 (*buf); break;",
      "\t\tcase 4:",
      "\t\tresult = READ32 (*buf); break;",
      "\t\tcase 8:",
      "\t\tresult = READ64 (*buf); break;",
      "\t\tdefault:"
    ],
    "added_lines": [
      "\tcase 2: result = READ16 (*buf); break;",
      "\tcase 4: result = READ32 (*buf); break;",
      "\tcase 8: result = READ64 (*buf); break;",
      "\tdefault:"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/19349",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/radareorg/radare2/pull/19349: 403 Client Error: Forbidden for url: https://api.github.com/repos/radareorg/radare2/pulls/19349",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "The patch addresses an out-of-bounds read vulnerability in the DWARF parser, which is a security concern. The code modifies the buffer handling to prevent crashes, confirming it's a security fix. \n\n**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9\n\nThe confidence is at 0.9 because the commit message and code changes clearly target a security issue, and the external report adds validity, though the vulnerability description lacks specifics beyond a template. \n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}