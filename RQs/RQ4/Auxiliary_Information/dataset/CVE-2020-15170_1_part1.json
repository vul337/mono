{
  "cve_id": "CVE-2020-15170",
  "cwe_ids": [
    "CWE-20"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "apolloconfig/apollo",
  "commit_msg": "add access control support for admin service",
  "commit_hash": "ae9ba6cfd32ed80469f162e5e3583e2477862ddf",
  "git_url": "https://github.com/apolloconfig/apollo/commit/ae9ba6cfd32ed80469f162e5e3583e2477862ddf",
  "file_path": "apollo-core/src/main/java/com/ctrip/framework/apollo/core/signature/Signature.java",
  "func_name": "buildHttpHeaders",
  "func_before": "public static Map<String, String> buildHttpHeaders(String url, String appId, String secret) {\n    long currentTimeMillis = System.currentTimeMillis();\n    String timestamp = String.valueOf(currentTimeMillis);\n\n    String pathWithQuery = url2PathWithQuery(url);\n    String signature = signature(timestamp, pathWithQuery, secret);\n\n    Map<String, String> headers = Maps.newHashMap();\n    headers.put(HTTP_HEADER_AUTHORIZATION, String.format(AUTHORIZATION_FORMAT, appId, signature));\n    headers.put(HTTP_HEADER_TIMESTAMP, timestamp);\n    return headers;\n  }",
  "abstract_func_before": "public static Map<String, String> buildHttpHeaders(String VAR_0, String VAR_1, String VAR_2) {\n    long VAR_3 = VAR_4.currentTimeMillis();\n    String VAR_5 = VAR_6.valueOf(VAR_3);\n\n    String VAR_7 = url2PathWithQuery(VAR_0);\n    String VAR_8 = signature(VAR_5, VAR_7, VAR_2);\n\n    Map<String, String> VAR_9 = VAR_10.newHashMap();\n    VAR_9.put(VAR_11, VAR_6.format(VAR_12, VAR_1, VAR_8));\n    VAR_9.put(VAR_13, VAR_5);\n    return VAR_9;\n  }",
  "func_graph_path_before": "apolloconfig/apollo/ae9ba6cfd32ed80469f162e5e3583e2477862ddf/Signature.java/vul/before/0.json",
  "func": "public static Map<String, String> buildHttpHeaders(String url, String appId, String secret) {\n    long currentTimeMillis = System.currentTimeMillis();\n    String timestamp = String.valueOf(currentTimeMillis);\n\n    String pathWithQuery = url2PathWithQuery(url);\n    String signature = signature(timestamp, pathWithQuery, secret);\n\n    Map<String, String> headers = Maps.newHashMap();\n    headers.put(HttpHeaders.AUTHORIZATION, String.format(AUTHORIZATION_FORMAT, appId, signature));\n    headers.put(HTTP_HEADER_TIMESTAMP, timestamp);\n    return headers;\n  }",
  "abstract_func": "public static Map<String, String> buildHttpHeaders(String VAR_0, String VAR_1, String VAR_2) {\n    long VAR_3 = VAR_4.currentTimeMillis();\n    String VAR_5 = VAR_6.valueOf(VAR_3);\n\n    String VAR_7 = url2PathWithQuery(VAR_0);\n    String VAR_8 = signature(VAR_5, VAR_7, VAR_2);\n\n    Map<String, String> VAR_9 = VAR_10.newHashMap();\n    VAR_9.put(VAR_11.AUTHORIZATION, VAR_6.format(VAR_12, VAR_1, VAR_8));\n    VAR_9.put(VAR_13, VAR_5);\n    return VAR_9;\n  }",
  "func_graph_path": "apolloconfig/apollo/ae9ba6cfd32ed80469f162e5e3583e2477862ddf/Signature.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,7 +6,7 @@\n     String signature = signature(timestamp, pathWithQuery, secret);\n \n     Map<String, String> headers = Maps.newHashMap();\n-    headers.put(HTTP_HEADER_AUTHORIZATION, String.format(AUTHORIZATION_FORMAT, appId, signature));\n+    headers.put(HttpHeaders.AUTHORIZATION, String.format(AUTHORIZATION_FORMAT, appId, signature));\n     headers.put(HTTP_HEADER_TIMESTAMP, timestamp);\n     return headers;\n   }",
  "diff_line_info": {
    "deleted_lines": [
      "    headers.put(HTTP_HEADER_AUTHORIZATION, String.format(AUTHORIZATION_FORMAT, appId, signature));"
    ],
    "added_lines": [
      "    headers.put(HttpHeaders.AUTHORIZATION, String.format(AUTHORIZATION_FORMAT, appId, signature));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/apolloconfig/apollo/pull/3233",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/apolloconfig/apollo/pull/3233: 403 Client Error: Forbidden for url: https://api.github.com/repos/apolloconfig/apollo/pulls/3233",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.9"
}