{
  "cve_id": "CVE-2022-38667",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_is_v3": true,
  "repo_name": "CrowCpp/Crow",
  "commit_msg": "Prevent HTTP pipelining which Crow doesn't support.",
  "commit_hash": "fba01dc76d6ea940ad7c8392e8f39f9647241d8e",
  "git_url": "https://github.com/CrowCpp/Crow/commit/fba01dc76d6ea940ad7c8392e8f39f9647241d8e",
  "file_path": "include/crow/parser.h",
  "func_name": "on_message_begin",
  "func_before": "static int on_message_begin(http_parser* self_)\n        {\n            HTTPParser* self = static_cast<HTTPParser*>(self_);\n            self->clear();\n            return 0;\n        }",
  "abstract_func_before": "static int on_message_begin(http_parser* VAR_0)\n        {\n            HTTPParser* VAR_1 = VAR_2<HTTPParser*>(VAR_0);\n            VAR_1->clear();\n            return 0;\n        }",
  "func_graph_path_before": "CrowCpp/Crow/fba01dc76d6ea940ad7c8392e8f39f9647241d8e/parser.h/vul/before/1.json",
  "func": "static int on_message_begin(http_parser* self_)\n        {\n            HTTPParser* self = static_cast<HTTPParser*>(self_);\n            return 0;\n        }",
  "abstract_func": "static int on_message_begin(http_parser* VAR_0)\n        {\n            HTTPParser* VAR_1 = VAR_2<HTTPParser*>(VAR_0);\n            return 0;\n        }",
  "func_graph_path": "CrowCpp/Crow/fba01dc76d6ea940ad7c8392e8f39f9647241d8e/parser.h/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,5 @@\n static int on_message_begin(http_parser* self_)\n         {\n             HTTPParser* self = static_cast<HTTPParser*>(self_);\n-            self->clear();\n             return 0;\n         }",
  "diff_line_info": {
    "deleted_lines": [
      "            self->clear();"
    ],
    "added_lines": []
  },
  "is_vul": true,
  "pr_url": "https://github.com/CrowCpp/Crow/pull/524",
  "description": {
    "pr_info": {
      "title": "Prevent HTTP pipelining",
      "number": 524
    },
    "comment": [
      "Fixes a potential use-after-free vulnerability where using HTTP pipelining could cause Crow to execute code related to a connection after deleting it.\r\n\r\nIt also fixes a small bug where websocket connections could be established with invalid HTTP requests (ones that don't have a `Host` header)\r\n\r\nThanks to hebi Gynvael Coldwind for discovering and reporting the vulnerability."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.98,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.98\n\nThe patch addresses a use-after-free vulnerability, which is a clear security issue. The code changes directly fix the problematic behavior related to HTTP pipelining, confirming it's a security fix with high confidence."
}