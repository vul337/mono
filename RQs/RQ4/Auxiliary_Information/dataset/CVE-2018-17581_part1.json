{
  "cve_id": "CVE-2018-17581",
  "cwe_ids": [
    "CWE-400"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "Exiv2/exiv2",
  "commit_msg": "Fix #460 by adding more checks in CiffDirectory::readDirectory",
  "commit_hash": "b3d077dcaefb6747fff8204490f33eba5a144edb",
  "git_url": "https://github.com/Exiv2/exiv2/commit/b3d077dcaefb6747fff8204490f33eba5a144edb",
  "file_path": "src/crwimage_int.cpp",
  "func_name": "CiffDirectory::readDirectory",
  "func_before": "void CiffDirectory::readDirectory(const byte* pData,\n                                      uint32_t    size,\n                                      ByteOrder   byteOrder)\n    {\n        uint32_t o = getULong(pData + size - 4, byteOrder);\n        if (size < 2 || o > size-2) throw Error(kerNotACrwImage);\n        uint16_t count = getUShort(pData + o, byteOrder);\n#ifdef DEBUG\n        std::cout << \"Directory at offset \" << std::dec << o\n                  <<\", \" << count << \" entries \\n\";\n#endif\n        o += 2;\n        for (uint16_t i = 0; i < count; ++i) {\n            if (o + 10 > size) throw Error(kerNotACrwImage);\n            uint16_t tag = getUShort(pData + o, byteOrder);\n            CiffComponent::AutoPtr m;\n            switch (CiffComponent::typeId(tag)) {\n            case directory: m = CiffComponent::AutoPtr(new CiffDirectory); break;\n            default: m = CiffComponent::AutoPtr(new CiffEntry); break;\n            }\n            m->setDir(this->tag());\n            m->read(pData, size, o, byteOrder);\n            add(m);\n            o += 10;\n        }\n    }",
  "abstract_func_before": "void CiffDirectory::readDirectory(const byte* VAR_0,\n                                      uint32_t    VAR_1,\n                                      ByteOrder   VAR_2)\n    {\n        uint32_t VAR_3 = getULong(VAR_0 + VAR_1 - 4, VAR_2);\n        if (VAR_1 < 2 || VAR_3 > VAR_1-2) throw Error(VAR_4);\n        uint16_t VAR_5 = getUShort(VAR_0 + VAR_3, VAR_2);\n#ifdef VAR_6\n        std::cout << \"Directory at offset \" << std::dec << VAR_3\n                  <<\", \" << VAR_5 << \" entries \\n\";\n#endif\n        VAR_3 += 2;\n        for (uint16_t VAR_7 = 0; VAR_7 < VAR_5; ++VAR_7) {\n            if (VAR_3 + 10 > VAR_1) throw Error(VAR_4);\n            uint16_t VAR_8 = getUShort(VAR_0 + VAR_3, VAR_2);\n            CiffComponent::AutoPtr VAR_9;\n            switch (CiffComponent::typeId(VAR_8)) {\n            case VAR_10: VAR_9 = CiffComponent::AutoPtr(new CiffDirectory); break;\n            default: VAR_9 = CiffComponent::AutoPtr(new CiffEntry); break;\n            }\n            VAR_9->setDir(this->tag());\n            VAR_9->read(VAR_0, VAR_1, VAR_3, VAR_2);\n            add(VAR_9);\n            VAR_3 += 10;\n        }\n    }",
  "func_graph_path_before": "Exiv2/exiv2/b3d077dcaefb6747fff8204490f33eba5a144edb/crwimage_int.cpp/vul/before/0.json",
  "func": "void CiffDirectory::readDirectory(const byte* pData,\n                                      uint32_t    size,\n                                      ByteOrder   byteOrder)\n    {\n        if (size < 4)\n            throw Error(kerCorruptedMetadata);\n        uint32_t o = getULong(pData + size - 4, byteOrder);\n        if ( o+2 > size )\n            throw Error(kerCorruptedMetadata);\n        uint16_t count = getUShort(pData + o, byteOrder);\n#ifdef DEBUG\n        std::cout << \"Directory at offset \" << std::dec << o\n                  <<\", \" << count << \" entries \\n\";\n#endif\n        o += 2;\n        if ( (o + (count * 10)) > size )\n            throw Error(kerCorruptedMetadata);\n\n        for (uint16_t i = 0; i < count; ++i) {\n            uint16_t tag = getUShort(pData + o, byteOrder);\n            CiffComponent::AutoPtr m;\n            switch (CiffComponent::typeId(tag)) {\n            case directory: m = CiffComponent::AutoPtr(new CiffDirectory); break;\n            default: m = CiffComponent::AutoPtr(new CiffEntry); break;\n            }\n            m->setDir(this->tag());\n            m->read(pData, size, o, byteOrder);\n            add(m);\n            o += 10;\n        }\n    }",
  "abstract_func": "void CiffDirectory::readDirectory(const byte* VAR_0,\n                                      uint32_t    VAR_1,\n                                      ByteOrder   VAR_2)\n    {\n        if (VAR_1 < 4)\n            throw Error(VAR_3);\n        uint32_t VAR_4 = getULong(VAR_0 + VAR_1 - 4, VAR_2);\n        if ( VAR_4+2 > VAR_1 )\n            throw Error(VAR_3);\n        uint16_t VAR_5 = getUShort(VAR_0 + VAR_4, VAR_2);\n#ifdef VAR_6\n        std::cout << \"Directory at offset \" << std::dec << VAR_4\n                  <<\", \" << VAR_5 << \" entries \\n\";\n#endif\n        VAR_4 += 2;\n        if ( (VAR_4 + (VAR_5 * 10)) > VAR_1 )\n            throw Error(VAR_3);\n\n        for (uint16_t VAR_7 = 0; VAR_7 < VAR_5; ++VAR_7) {\n            uint16_t VAR_8 = getUShort(VAR_0 + VAR_4, VAR_2);\n            CiffComponent::AutoPtr VAR_9;\n            switch (CiffComponent::typeId(VAR_8)) {\n            case VAR_10: VAR_9 = CiffComponent::AutoPtr(new CiffDirectory); break;\n            default: VAR_9 = CiffComponent::AutoPtr(new CiffEntry); break;\n            }\n            VAR_9->setDir(this->tag());\n            VAR_9->read(VAR_0, VAR_1, VAR_4, VAR_2);\n            add(VAR_9);\n            VAR_4 += 10;\n        }\n    }",
  "func_graph_path": "Exiv2/exiv2/b3d077dcaefb6747fff8204490f33eba5a144edb/crwimage_int.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,16 +2,21 @@\n                                       uint32_t    size,\n                                       ByteOrder   byteOrder)\n     {\n+        if (size < 4)\n+            throw Error(kerCorruptedMetadata);\n         uint32_t o = getULong(pData + size - 4, byteOrder);\n-        if (size < 2 || o > size-2) throw Error(kerNotACrwImage);\n+        if ( o+2 > size )\n+            throw Error(kerCorruptedMetadata);\n         uint16_t count = getUShort(pData + o, byteOrder);\n #ifdef DEBUG\n         std::cout << \"Directory at offset \" << std::dec << o\n                   <<\", \" << count << \" entries \\n\";\n #endif\n         o += 2;\n+        if ( (o + (count * 10)) > size )\n+            throw Error(kerCorruptedMetadata);\n+\n         for (uint16_t i = 0; i < count; ++i) {\n-            if (o + 10 > size) throw Error(kerNotACrwImage);\n             uint16_t tag = getUShort(pData + o, byteOrder);\n             CiffComponent::AutoPtr m;\n             switch (CiffComponent::typeId(tag)) {",
  "diff_line_info": {
    "deleted_lines": [
      "        if (size < 2 || o > size-2) throw Error(kerNotACrwImage);",
      "            if (o + 10 > size) throw Error(kerNotACrwImage);"
    ],
    "added_lines": [
      "        if (size < 4)",
      "            throw Error(kerCorruptedMetadata);",
      "        if ( o+2 > size )",
      "            throw Error(kerCorruptedMetadata);",
      "        if ( (o + (count * 10)) > size )",
      "            throw Error(kerCorruptedMetadata);",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Exiv2/exiv2/pull/481",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/Exiv2/exiv2/pull/481: 403 Client Error: Forbidden for url: https://api.github.com/repos/Exiv2/exiv2/pulls/481",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.8"
}