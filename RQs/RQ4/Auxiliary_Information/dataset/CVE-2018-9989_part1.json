{
  "cve_id": "CVE-2018-9989",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "Mbed-TLS/mbedtls",
  "commit_msg": "Add bounds check before length read",
  "commit_hash": "740b218386083dc708ce98ccc94a63a95cd5629e",
  "git_url": "https://github.com/Mbed-TLS/mbedtls/commit/740b218386083dc708ce98ccc94a63a95cd5629e",
  "file_path": "library/ssl_cli.c",
  "func_name": "ssl_parse_server_psk_hint",
  "func_before": "static int ssl_parse_server_psk_hint( mbedtls_ssl_context *ssl,\n                                      unsigned char **p,\n                                      unsigned char *end )\n{\n    int ret = MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE;\n    size_t  len;\n    ((void) ssl);\n\n    /*\n     * PSK parameters:\n     *\n     * opaque psk_identity_hint<0..2^16-1>;\n     */\n    len = (*p)[0] << 8 | (*p)[1];\n    *p += 2;\n\n    if( (*p) + len > end )\n    {\n        MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"\n                                    \"(psk_identity_hint length)\" ) );\n        return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );\n    }\n\n    /*\n     * Note: we currently ignore the PKS identity hint, as we only allow one\n     * PSK to be provisionned on the client. This could be changed later if\n     * someone needs that feature.\n     */\n    *p += len;\n    ret = 0;\n\n    return( ret );\n}",
  "abstract_func_before": "static int ssl_parse_server_psk_hint( mbedtls_ssl_context *VAR_0,\n                                      unsigned char **VAR_1,\n                                      unsigned char *VAR_2 )\n{\n    int VAR_3 = VAR_4;\n    size_t  VAR_5;\n    ((void) VAR_0);\n\n    /* COMMENT_0 */\n                      \n      \n                                           \n       \n    VAR_5 = (*VAR_1)[0] << 8 | (*VAR_1)[1];\n    *VAR_1 += 2;\n\n    if( (*VAR_1) + VAR_5 > VAR_2 )\n    {\n        MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"\n                                    \"(psk_identity_hint length)\" ) );\n        return( VAR_6 );\n    }\n\n    /* COMMENT_5 */\n                                                                            \n                                                                           \n                                  \n       \n    *VAR_1 += VAR_5;\n    VAR_3 = 0;\n\n    return( VAR_3 );\n}",
  "func_graph_path_before": "Mbed-TLS/mbedtls/740b218386083dc708ce98ccc94a63a95cd5629e/ssl_cli.c/vul/before/0.json",
  "func": "static int ssl_parse_server_psk_hint( mbedtls_ssl_context *ssl,\n                                      unsigned char **p,\n                                      unsigned char *end )\n{\n    int ret = MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE;\n    size_t  len;\n    ((void) ssl);\n\n    /*\n     * PSK parameters:\n     *\n     * opaque psk_identity_hint<0..2^16-1>;\n     */\n    if( (*p) > end - 2 )\n    {\n        MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"\n                                    \"(psk_identity_hint length)\" ) );\n        return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );\n    }\n    len = (*p)[0] << 8 | (*p)[1];\n    *p += 2;\n\n    if( (*p) + len > end )\n    {\n        MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"\n                                    \"(psk_identity_hint length)\" ) );\n        return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );\n    }\n\n    /*\n     * Note: we currently ignore the PKS identity hint, as we only allow one\n     * PSK to be provisionned on the client. This could be changed later if\n     * someone needs that feature.\n     */\n    *p += len;\n    ret = 0;\n\n    return( ret );\n}",
  "abstract_func": "static int ssl_parse_server_psk_hint( mbedtls_ssl_context *VAR_0,\n                                      unsigned char **VAR_1,\n                                      unsigned char *VAR_2 )\n{\n    int VAR_3 = VAR_4;\n    size_t  VAR_5;\n    ((void) VAR_0);\n\n    /* COMMENT_0 */\n                      \n      \n                                           \n       \n    if( (*VAR_1) > VAR_2 - 2 )\n    {\n        MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"\n                                    \"(psk_identity_hint length)\" ) );\n        return( VAR_6 );\n    }\n    VAR_5 = (*VAR_1)[0] << 8 | (*VAR_1)[1];\n    *VAR_1 += 2;\n\n    if( (*VAR_1) + VAR_5 > VAR_2 )\n    {\n        MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"\n                                    \"(psk_identity_hint length)\" ) );\n        return( VAR_6 );\n    }\n\n    /* COMMENT_5 */\n                                                                            \n                                                                           \n                                  \n       \n    *VAR_1 += VAR_5;\n    VAR_3 = 0;\n\n    return( VAR_3 );\n}",
  "func_graph_path": "Mbed-TLS/mbedtls/740b218386083dc708ce98ccc94a63a95cd5629e/ssl_cli.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -11,6 +11,12 @@\n      *\n      * opaque psk_identity_hint<0..2^16-1>;\n      */\n+    if( (*p) > end - 2 )\n+    {\n+        MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"\n+                                    \"(psk_identity_hint length)\" ) );\n+        return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );\n+    }\n     len = (*p)[0] << 8 | (*p)[1];\n     *p += 2;\n ",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "    if( (*p) > end - 2 )",
      "    {",
      "        MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"",
      "                                    \"(psk_identity_hint length)\" ) );",
      "        return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );",
      "    }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Mbed-TLS/mbedtls/pull/1440",
  "description": {
    "pr_info": {
      "title": "IOTSSL-1878 buffer overflow in server psk hint parsing",
      "number": 1440
    },
    "comment": [
      "## Description\r\nThis PR prevents two buffer overflow errors from happening in the ssl_parse_server_psk_hint function.\r\n\r\n\r\n## Status\r\n**READY**\r\n\r\n## Requires Backporting\r\nYES\r\nThis fix should most probably be backported to all supported branches as the vulnerabilities aren't version speciffic.\r\n\r\n## Migrations\r\nNO\r\n\r\n## Additional comments\r\nNone\r\n\r\n## Todos\r\n- [ ] Tests maybe?\r\n\r\n## Steps to test or reproduce\r\nNone prepared\r\n",
      "Please add a changelog entry and backport to 2.1 and 2.7.",
      "retest",
      "retest",
      "CI passed except for timing tests on FreeBSD (known issue). Ok to merge."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}