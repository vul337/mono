{
  "cve_id": "CVE-2018-1000618",
  "cwe_ids": [
    "CWE-674"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "EOSIO/eos",
  "commit_msg": "Add limit to recursion",
  "commit_hash": "cf7209e703e6d3f7a5413e0cb1fe88a4d8e4b38d",
  "git_url": "https://github.com/EOSIO/eos/commit/cf7209e703e6d3f7a5413e0cb1fe88a4d8e4b38d",
  "file_path": "libraries/chain/include/eosio/chain/abi_serializer.hpp",
  "func_name": "abi_from_variant::extract",
  "func_before": "void abi_from_variant::extract( const variant& v, M& o, Resolver resolver ) {\n      const variant_object& vo = v.get_object();\n      fc::reflector<M>::visit( abi_from_variant_visitor<M, decltype(resolver)>( vo, o, resolver ) );\n   }",
  "abstract_func_before": "void abi_from_variant::extract( const variant& VAR_0, M& VAR_1, Resolver VAR_2 ) {\n      const variant_object& VAR_3 = VAR_0.get_object();\n      fc::reflector<M>::visit( VAR_4<M, decltype(VAR_2)>( VAR_3, VAR_1, VAR_2 ) );\n   }",
  "func_graph_path_before": "EOSIO/eos/cf7209e703e6d3f7a5413e0cb1fe88a4d8e4b38d/abi_serializer.hpp/vul/before/3.json",
  "func": "void abi_from_variant::extract( const variant& v, M& o, Resolver resolver, size_t recursion_depth ) {\n      FC_ASSERT( ++recursion_depth < abi_serializer::max_recursion_depth, \"recursive definition, max_recursion_depth\" );\n      const variant_object& vo = v.get_object();\n      fc::reflector<M>::visit( abi_from_variant_visitor<M, decltype(resolver)>( vo, o, resolver, recursion_depth ) );\n   }",
  "abstract_func": "void abi_from_variant::extract( const variant& VAR_0, M& VAR_1, Resolver VAR_2, size_t VAR_3 ) {\n      FC_ASSERT( ++VAR_3 < abi_serializer::max_recursion_depth, \"recursive definition, max_recursion_depth\" );\n      const variant_object& VAR_4 = VAR_0.get_object();\n      fc::reflector<M>::visit( VAR_5<M, decltype(VAR_2)>( VAR_4, VAR_1, VAR_2, VAR_3 ) );\n   }",
  "func_graph_path": "EOSIO/eos/cf7209e703e6d3f7a5413e0cb1fe88a4d8e4b38d/abi_serializer.hpp/vul/after/3.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,5 @@\n-void abi_from_variant::extract( const variant& v, M& o, Resolver resolver ) {\n+void abi_from_variant::extract( const variant& v, M& o, Resolver resolver, size_t recursion_depth ) {\n+      FC_ASSERT( ++recursion_depth < abi_serializer::max_recursion_depth, \"recursive definition, max_recursion_depth\" );\n       const variant_object& vo = v.get_object();\n-      fc::reflector<M>::visit( abi_from_variant_visitor<M, decltype(resolver)>( vo, o, resolver ) );\n+      fc::reflector<M>::visit( abi_from_variant_visitor<M, decltype(resolver)>( vo, o, resolver, recursion_depth ) );\n    }",
  "diff_line_info": {
    "deleted_lines": [
      "void abi_from_variant::extract( const variant& v, M& o, Resolver resolver ) {",
      "      fc::reflector<M>::visit( abi_from_variant_visitor<M, decltype(resolver)>( vo, o, resolver ) );"
    ],
    "added_lines": [
      "void abi_from_variant::extract( const variant& v, M& o, Resolver resolver, size_t recursion_depth ) {",
      "      FC_ASSERT( ++recursion_depth < abi_serializer::max_recursion_depth, \"recursive definition, max_recursion_depth\" );",
      "      fc::reflector<M>::visit( abi_from_variant_visitor<M, decltype(resolver)>( vo, o, resolver, recursion_depth ) );"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/EOSIO/eos/pull/4112",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/EOSIO/eos/pull/4112: 403 Client Error: Forbidden for url: https://api.github.com/repos/EOSIO/eos/pulls/4112",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "The patch adds a recursion depth limit to prevent potential stack overflow attacks, addressing a security concern.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}