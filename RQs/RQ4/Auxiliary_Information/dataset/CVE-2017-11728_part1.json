{
  "cve_id": "CVE-2017-11728",
  "cwe_ids": [
    "CWE-125"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "libming",
  "commit_msg": "Fix various overflows in OpCode and readBytes\n\n* OpCode: Add a check to avoid reading the stack when n < 1\n\n    In this case, print a debug warning and return error code -998\n\n* readBytes: When size < 0, set it to zero (don't read anything)\n\nThis commit fixes CVE-2017-11728 (Fixes #82), CVE-2017-11729 (Fixes #79),\nCVE-2017-11730 (Fixes #81) and CVE-2017-11731 (Fixes #84).",
  "commit_hash": "2027b24f403a859016a70bbdc79a8da1d6f128eb",
  "git_url": "https://github.com/libming/libming/commit/2027b24f403a859016a70bbdc79a8da1d6f128eb",
  "file_path": "util/decompile.c",
  "func_name": "OpCode",
  "func_before": "static inline int OpCode(SWF_ACTION *actions, int n, int maxn)\n{\n\tif(!n || n >= maxn)\n\t{\n#if DEBUG\n\t\tSWF_warn(\"OpCode: want %i, max %i\\n\", n, maxn);\n#endif\n\t\treturn -999;\n\t}\n\treturn actions[n].SWF_ACTIONRECORD.ActionCode;\n}",
  "abstract_func_before": "static inline int OpCode(SWF_ACTION *VAR_0, int VAR_1, int VAR_2)\n{\n\tif(!VAR_1 || VAR_1 >= VAR_2)\n\t{\n#if VAR_3\n\t\tSWF_warn(\"OpCode: want %i, max %i\\n\", VAR_1, VAR_2);\n#endif\n\t\treturn -999;\n\t}\n\treturn VAR_0[VAR_1].SWF_ACTIONRECORD.ActionCode;\n}",
  "func_graph_path_before": "libming/2027b24f403a859016a70bbdc79a8da1d6f128eb/decompile.c/vul/before/0.json",
  "func": "static inline int OpCode(SWF_ACTION *actions, int n, int maxn)\n{\n\tif(!n || n >= maxn)\n\t{\n#if DEBUG\n\t\tSWF_warn(\"OpCode: want %i, max %i\\n\", n, maxn);\n#endif\n\t\treturn -999;\n\t} else if (n < 1) {\n\n#if DEBUG\n\t\tSWF_warn(\"OpCode: want %i < 1\\n\", n);\n#endif\n\t\treturn -998;\n        }\n\treturn actions[n].SWF_ACTIONRECORD.ActionCode;\n}",
  "abstract_func": "static inline int OpCode(SWF_ACTION *VAR_0, int VAR_1, int VAR_2)\n{\n\tif(!VAR_1 || VAR_1 >= VAR_2)\n\t{\n#if VAR_3\n\t\tSWF_warn(\"OpCode: want %i, max %i\\n\", VAR_1, VAR_2);\n#endif\n\t\treturn -999;\n\t} else if (VAR_1 < 1) {\n\n#if VAR_3\n\t\tSWF_warn(\"OpCode: want %i < 1\\n\", VAR_1);\n#endif\n\t\treturn -998;\n        }\n\treturn VAR_0[VAR_1].SWF_ACTIONRECORD.ActionCode;\n}",
  "func_graph_path": "libming/2027b24f403a859016a70bbdc79a8da1d6f128eb/decompile.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,6 +6,12 @@\n \t\tSWF_warn(\"OpCode: want %i, max %i\\n\", n, maxn);\n #endif\n \t\treturn -999;\n-\t}\n+\t} else if (n < 1) {\n+\n+#if DEBUG\n+\t\tSWF_warn(\"OpCode: want %i < 1\\n\", n);\n+#endif\n+\t\treturn -998;\n+        }\n \treturn actions[n].SWF_ACTIONRECORD.ActionCode;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\t}"
    ],
    "added_lines": [
      "\t} else if (n < 1) {",
      "",
      "#if DEBUG",
      "\t\tSWF_warn(\"OpCode: want %i < 1\\n\", n);",
      "#endif",
      "\t\treturn -998;",
      "        }"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libming/libming/pull/89",
  "description": {
    "pr_info": {
      "title": "Fix various overflows in OpCode and readBytes",
      "number": 89
    },
    "comment": [
      "* _OpCode_: Add a check to avoid reading the stack when n < 1.\r\n  In this case, print a debug warning and return error code -998\r\n\r\n* _readBytes_: When size < 0, set it to zero (don't read anything) and print a warning\r\n\r\nThis commit fixes CVE-2017-117{28,29,30} (#82, #81 and #79).",
      "Applying this patch will also fix CVE-2017-11731 (#84) :+1: ",
      "Would you mind including \"Fixes #xx\" \"Fixes #yy\" etc. in the commit log so the relevant tickets are automatically closed on merge ? Also please add an entry in the NEWS file so there's nothing else for me to do other than merging :)\r\n\r\nThanks! ",
      "> ￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼Would you mind including \"Fixes #xx\" \"Fixes #yy\" etc. in the commit log so the relevant tickets are automatically closed on merge ? Also please add an entry in the NEWS file so there's nothing else for me to do other than merging :)\r\n\r\nCommit updated :)",
      "Thanks !"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95  \nThe patch fixes specific CVEs by adding overflow checks, clearly addressing security issues. The high confidence stems from the explicit mention of CVEs and code changes that directly address security risks."
}