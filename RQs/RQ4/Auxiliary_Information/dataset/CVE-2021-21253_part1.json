{
  "cve_id": "CVE-2021-21253",
  "cwe_ids": [
    "CWE-916"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "bijaythapaa/OnlineVotingSystem",
  "commit_msg": "Add a salt to SHA-256 hash",
  "commit_hash": "0181cb0272857696c8eb3e44fcf6cb014ff90f09",
  "git_url": "https://github.com/bijaythapaa/OnlineVotingSystem/commit/0181cb0272857696c8eb3e44fcf6cb014ff90f09",
  "file_path": "src/com/bijay/onlinevotingsystem/controller/SHA256.java",
  "func_name": "getSHA",
  "func_before": "public String getSHA(String password) {\n\n\t\ttry {\n\t\t\t// Static getInstance method is called with hashing SHA\n\t\t\tMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n\n\t\t\t// digest() method called\n\t\t\t// to calculate message digest of an input\n\t\t\t// and return array of byte\n\t\t\tbyte[] messageDigest = md.digest(password.getBytes());\n\n\t\t\t// Convert byte array into signum representation\n\t\t\tBigInteger no = new BigInteger(1, messageDigest);\n\n\t\t\t// Convert message digest into hex value\n\t\t\tString hashPass = no.toString(16);\n\n\t\t\twhile (hashPass.length() < 32) {\n\t\t\t\thashPass = \"0\" + hashPass;\n\t\t\t}\n\t\t\treturn hashPass;\n\n\t\t\t// For specifying wrong message digest algorithms\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\te.printStackTrace();\n\t\t\treturn null;\n\t\t}\n\t}",
  "abstract_func_before": "public String getSHA(String VAR_0) {\n\n\t\ttry {\n\t\t\t/* COMMENT_0 */\n\t\t\tMessageDigest VAR_1 = VAR_2.getInstance(\"SHA-256\");\n\n\t\t\t/* COMMENT_1 */\n\t\t\t/* COMMENT_2 */\n\t\t\t/* COMMENT_3 */\n\t\t\tbyte[] VAR_3 = VAR_1.digest(VAR_0.getBytes());\n\n\t\t\t/* COMMENT_4 */\n\t\t\tBigInteger VAR_4 = new BigInteger(1, VAR_3);\n\n\t\t\t/* COMMENT_5 */\n\t\t\tString VAR_5 = VAR_4.toString(16);\n\n\t\t\twhile (VAR_5.length() < 32) {\n\t\t\t\tVAR_5 = \"0\" + VAR_5;\n\t\t\t}\n\t\t\treturn VAR_5;\n\n\t\t\t/* COMMENT_6 */\n\t\t} catch (NoSuchAlgorithmException VAR_6) {\n\t\t\tVAR_6.printStackTrace();\n\t\t\treturn null;\n\t\t}\n\t}",
  "func_graph_path_before": "bijaythapaa/OnlineVotingSystem/0181cb0272857696c8eb3e44fcf6cb014ff90f09/SHA256.java/vul/before/0.json",
  "func": "public String getSHA(String password) {\n\t\ttry {\n\t\t\tbyte[] salt = getSalt();\n\t\t\tString cipher = getCipher(password, salt);\n\t\t\t\n\t\t\treturn cipher;\n\n\t\t\t// For specifying wrong message digest algorithms\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\te.printStackTrace();\n\t\t\treturn null;\n\t\t}\n\t}",
  "abstract_func": "public String getSHA(String VAR_0) {\n\t\ttry {\n\t\t\tbyte[] VAR_1 = getSalt();\n\t\t\tString VAR_2 = getCipher(VAR_0, VAR_1);\n\t\t\t\n\t\t\treturn VAR_2;\n\n\t\t\t/* COMMENT_0 */\n\t\t} catch (NoSuchAlgorithmException VAR_3) {\n\t\t\tVAR_3.printStackTrace();\n\t\t\treturn null;\n\t\t}\n\t}",
  "func_graph_path": "bijaythapaa/OnlineVotingSystem/0181cb0272857696c8eb3e44fcf6cb014ff90f09/SHA256.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,24 +1,9 @@\n public String getSHA(String password) {\n-\n \t\ttry {\n-\t\t\t// Static getInstance method is called with hashing SHA\n-\t\t\tMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n-\n-\t\t\t// digest() method called\n-\t\t\t// to calculate message digest of an input\n-\t\t\t// and return array of byte\n-\t\t\tbyte[] messageDigest = md.digest(password.getBytes());\n-\n-\t\t\t// Convert byte array into signum representation\n-\t\t\tBigInteger no = new BigInteger(1, messageDigest);\n-\n-\t\t\t// Convert message digest into hex value\n-\t\t\tString hashPass = no.toString(16);\n-\n-\t\t\twhile (hashPass.length() < 32) {\n-\t\t\t\thashPass = \"0\" + hashPass;\n-\t\t\t}\n-\t\t\treturn hashPass;\n+\t\t\tbyte[] salt = getSalt();\n+\t\t\tString cipher = getCipher(password, salt);\n+\t\t\t\n+\t\t\treturn cipher;\n \n \t\t\t// For specifying wrong message digest algorithms\n \t\t} catch (NoSuchAlgorithmException e) {",
  "diff_line_info": {
    "deleted_lines": [
      "",
      "\t\t\t// Static getInstance method is called with hashing SHA",
      "\t\t\tMessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
      "",
      "\t\t\t// digest() method called",
      "\t\t\t// to calculate message digest of an input",
      "\t\t\t// and return array of byte",
      "\t\t\tbyte[] messageDigest = md.digest(password.getBytes());",
      "",
      "\t\t\t// Convert byte array into signum representation",
      "\t\t\tBigInteger no = new BigInteger(1, messageDigest);",
      "",
      "\t\t\t// Convert message digest into hex value",
      "\t\t\tString hashPass = no.toString(16);",
      "",
      "\t\t\twhile (hashPass.length() < 32) {",
      "\t\t\t\thashPass = \"0\" + hashPass;",
      "\t\t\t}",
      "\t\t\treturn hashPass;"
    ],
    "added_lines": [
      "\t\t\tbyte[] salt = getSalt();",
      "\t\t\tString cipher = getCipher(password, salt);",
      "\t\t\t",
      "\t\t\treturn cipher;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/bijaythapaa/OnlineVotingSystem/pull/2",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/bijaythapaa/OnlineVotingSystem/pull/2: 403 Client Error: Forbidden for url: https://api.github.com/repos/bijaythapaa/OnlineVotingSystem/pulls/2",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}