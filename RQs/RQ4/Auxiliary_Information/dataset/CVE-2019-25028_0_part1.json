{
  "cve_id": "CVE-2019-25028",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "vaadin/framework",
  "commit_msg": "Sanitize caption used in Grid header \n\nCherry pick of https://github.com/vaadin/framework/pull/11644",
  "commit_hash": "b9ba10adaa06a0977c531f878c3f0046b67f9cc0",
  "git_url": "https://github.com/vaadin/framework/commit/b9ba10adaa06a0977c531f878c3f0046b67f9cc0",
  "file_path": "server/src/main/java/com/vaadin/ui/Grid.java",
  "func_name": "setHeaderCaption",
  "func_before": "public Column setHeaderCaption(String caption)\n                throws IllegalStateException {\n            checkColumnIsAttached();\n            if (caption == null) {\n                caption = \"\"; // Render null as empty\n            }\n            state.headerCaption = caption;\n\n            HeaderRow row = grid.getHeader().getDefaultRow();\n            if (row != null) {\n                row.getCell(grid.getPropertyIdByColumnId(state.id))\n                        .setText(caption);\n            }\n            return this;\n        }",
  "abstract_func_before": "public Column setHeaderCaption(String VAR_0)\n                throws IllegalStateException {\n            checkColumnIsAttached();\n            if (VAR_0 == null) {\n                VAR_0 = \"\"; /* COMMENT_0 */\n            }\n            VAR_1.headerCaption = VAR_0;\n\n            HeaderRow VAR_2 = VAR_3.getHeader().getDefaultRow();\n            if (VAR_2 != null) {\n                VAR_2.getCell(VAR_3.getPropertyIdByColumnId(VAR_1.id))\n                        .setText(VAR_0);\n            }\n            return this;\n        }",
  "func_graph_path_before": "vaadin/framework/b9ba10adaa06a0977c531f878c3f0046b67f9cc0/Grid.java/vul/before/0.json",
  "func": "public Column setHeaderCaption(String caption)\n                throws IllegalStateException {\n            checkColumnIsAttached();\n            if (caption == null) {\n                caption = \"\"; // Render null as empty\n            }\n            caption = Jsoup.parse(caption).text();\n            state.headerCaption = caption;\n\n            HeaderRow row = grid.getHeader().getDefaultRow();\n            if (row != null) {\n                row.getCell(grid.getPropertyIdByColumnId(state.id))\n                        .setText(caption);\n            }\n            return this;\n        }",
  "abstract_func": "public Column setHeaderCaption(String VAR_0)\n                throws IllegalStateException {\n            checkColumnIsAttached();\n            if (VAR_0 == null) {\n                VAR_0 = \"\"; /* COMMENT_0 */\n            }\n            VAR_0 = VAR_1.parse(VAR_0).text();\n            VAR_2.headerCaption = VAR_0;\n\n            HeaderRow VAR_3 = VAR_4.getHeader().getDefaultRow();\n            if (VAR_3 != null) {\n                VAR_3.getCell(VAR_4.getPropertyIdByColumnId(VAR_2.id))\n                        .setText(VAR_0);\n            }\n            return this;\n        }",
  "func_graph_path": "vaadin/framework/b9ba10adaa06a0977c531f878c3f0046b67f9cc0/Grid.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,6 +4,7 @@\n             if (caption == null) {\n                 caption = \"\"; // Render null as empty\n             }\n+            caption = Jsoup.parse(caption).text();\n             state.headerCaption = caption;\n \n             HeaderRow row = grid.getHeader().getDefaultRow();",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "            caption = Jsoup.parse(caption).text();"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/vaadin/framework/pull/11645",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/vaadin/framework/pull/11645: 403 Client Error: Forbidden for url: https://api.github.com/repos/vaadin/framework/pulls/11645",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.95  \nThe patch introduces HTML sanitization using Jsoup, likely to prevent XSS attacks, aligning with the commit message about sanitization. High confidence due to clear intent and relevant code change."
}