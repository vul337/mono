{
  "cve_id": "CVE-2019-1010251",
  "cwe_ids": [
    "CWE-20"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "OISF/suricata",
  "commit_msg": "teredo: be stricter on what to consider valid teredo\n\nInvalid Teredo can lead to valid DNS traffic (or other UDP traffic)\nbeing misdetected as Teredo. This leads to false negatives in the\nUDP payload inspection.\n\nMake the teredo code only consider a packet teredo if the encapsulated\ndata was decoded without any 'invalid' events being set.\n\nBug #2736.",
  "commit_hash": "11f3659f64a4e42e90cb3c09fcef66894205aefe",
  "git_url": "https://github.com/OISF/suricata/commit/11f3659f64a4e42e90cb3c09fcef66894205aefe",
  "file_path": "src/decode.c",
  "func_name": "DecodeTunnel",
  "func_before": "int DecodeTunnel(ThreadVars *tv, DecodeThreadVars *dtv, Packet *p,\n        uint8_t *pkt, uint32_t len, PacketQueue *pq, enum DecodeTunnelProto proto)\n{\n    switch (proto) {\n        case DECODE_TUNNEL_PPP:\n            return DecodePPP(tv, dtv, p, pkt, len, pq);\n        case DECODE_TUNNEL_IPV4:\n            return DecodeIPV4(tv, dtv, p, pkt, len, pq);\n        case DECODE_TUNNEL_IPV6:\n            return DecodeIPV6(tv, dtv, p, pkt, len, pq);\n        case DECODE_TUNNEL_VLAN:\n            return DecodeVLAN(tv, dtv, p, pkt, len, pq);\n        case DECODE_TUNNEL_ETHERNET:\n            return DecodeEthernet(tv, dtv, p, pkt, len, pq);\n        case DECODE_TUNNEL_ERSPAN:\n            return DecodeERSPAN(tv, dtv, p, pkt, len, pq);\n        default:\n            SCLogInfo(\"FIXME: DecodeTunnel: protocol %\" PRIu32 \" not supported.\", proto);\n            break;\n    }\n    return TM_ECODE_OK;\n}",
  "abstract_func_before": "int DecodeTunnel(ThreadVars *VAR_0, DecodeThreadVars *VAR_1, Packet *VAR_2,\n        uint8_t *VAR_3, uint32_t VAR_4, PacketQueue *VAR_5, enum DecodeTunnelProto VAR_6)\n{\n    switch (VAR_6) {\n        case VAR_7:\n            return DecodePPP(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        case VAR_8:\n            return DecodeIPV4(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        case VAR_9:\n            return DecodeIPV6(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        case VAR_10:\n            return DecodeVLAN(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        case VAR_11:\n            return DecodeEthernet(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        case VAR_12:\n            return DecodeERSPAN(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        default:\n            SCLogInfo(\"FIXME: DecodeTunnel: protocol %\" VAR_13 \" not supported.\", VAR_6);\n            break;\n    }\n    return VAR_14;\n}",
  "func_graph_path_before": "OISF/suricata/11f3659f64a4e42e90cb3c09fcef66894205aefe/decode.c/vul/before/1.json",
  "func": "int DecodeTunnel(ThreadVars *tv, DecodeThreadVars *dtv, Packet *p,\n        uint8_t *pkt, uint32_t len, PacketQueue *pq, enum DecodeTunnelProto proto)\n{\n    switch (proto) {\n        case DECODE_TUNNEL_PPP:\n            return DecodePPP(tv, dtv, p, pkt, len, pq);\n        case DECODE_TUNNEL_IPV4:\n            return DecodeIPV4(tv, dtv, p, pkt, len, pq);\n        case DECODE_TUNNEL_IPV6:\n        case DECODE_TUNNEL_IPV6_TEREDO:\n            return DecodeIPV6(tv, dtv, p, pkt, len, pq);\n        case DECODE_TUNNEL_VLAN:\n            return DecodeVLAN(tv, dtv, p, pkt, len, pq);\n        case DECODE_TUNNEL_ETHERNET:\n            return DecodeEthernet(tv, dtv, p, pkt, len, pq);\n        case DECODE_TUNNEL_ERSPAN:\n            return DecodeERSPAN(tv, dtv, p, pkt, len, pq);\n        default:\n            SCLogDebug(\"FIXME: DecodeTunnel: protocol %\" PRIu32 \" not supported.\", proto);\n            break;\n    }\n    return TM_ECODE_OK;\n}",
  "abstract_func": "int DecodeTunnel(ThreadVars *VAR_0, DecodeThreadVars *VAR_1, Packet *VAR_2,\n        uint8_t *VAR_3, uint32_t VAR_4, PacketQueue *VAR_5, enum DecodeTunnelProto VAR_6)\n{\n    switch (VAR_6) {\n        case VAR_7:\n            return DecodePPP(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        case VAR_8:\n            return DecodeIPV4(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        case VAR_9:\n        case VAR_10:\n            return DecodeIPV6(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        case VAR_11:\n            return DecodeVLAN(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        case VAR_12:\n            return DecodeEthernet(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        case VAR_13:\n            return DecodeERSPAN(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n        default:\n            SCLogDebug(\"FIXME: DecodeTunnel: protocol %\" VAR_14 \" not supported.\", VAR_6);\n            break;\n    }\n    return VAR_15;\n}",
  "func_graph_path": "OISF/suricata/11f3659f64a4e42e90cb3c09fcef66894205aefe/decode.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -7,6 +7,7 @@\n         case DECODE_TUNNEL_IPV4:\n             return DecodeIPV4(tv, dtv, p, pkt, len, pq);\n         case DECODE_TUNNEL_IPV6:\n+        case DECODE_TUNNEL_IPV6_TEREDO:\n             return DecodeIPV6(tv, dtv, p, pkt, len, pq);\n         case DECODE_TUNNEL_VLAN:\n             return DecodeVLAN(tv, dtv, p, pkt, len, pq);\n@@ -15,7 +16,7 @@\n         case DECODE_TUNNEL_ERSPAN:\n             return DecodeERSPAN(tv, dtv, p, pkt, len, pq);\n         default:\n-            SCLogInfo(\"FIXME: DecodeTunnel: protocol %\" PRIu32 \" not supported.\", proto);\n+            SCLogDebug(\"FIXME: DecodeTunnel: protocol %\" PRIu32 \" not supported.\", proto);\n             break;\n     }\n     return TM_ECODE_OK;",
  "diff_line_info": {
    "deleted_lines": [
      "            SCLogInfo(\"FIXME: DecodeTunnel: protocol %\" PRIu32 \" not supported.\", proto);"
    ],
    "added_lines": [
      "        case DECODE_TUNNEL_IPV6_TEREDO:",
      "            SCLogDebug(\"FIXME: DecodeTunnel: protocol %\" PRIu32 \" not supported.\", proto);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/OISF/suricata/pull/3590",
  "description": {
    "pr_info": {
      "title": "Next/20181218/v8",
      "number": 3590
    },
    "comment": [
      "Describe changes:\r\n- as #3589, but make IPv6 decoder a bit more strict\r\n\r\n[PRScript](https://redmine.openinfosecfoundation.org/projects/suricata/wiki/PRscript) output (if applicable):\r\nN/A\r\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}