{
  "cve_id": "CVE-2022-0695",
  "cwe_ids": [
    "CWE-400"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "radareorg/radare2",
  "commit_msg": "Fix DoS in PE/QNX/DYLDCACHE/PSX parsers ##crash\n\n* Reported by lazymio\n* Reproducer: AAA4AAAAAB4=",
  "commit_hash": "634b886e84a5c568d243e744becc6b3223e089cf",
  "git_url": "https://github.com/radareorg/radare2/commit/634b886e84a5c568d243e744becc6b3223e089cf",
  "file_path": "libr/util/buf.c",
  "func_name": "r_buf_fread_at",
  "func_before": "R_API st64 r_buf_fread_at(RBuffer *b, ut64 addr, ut8 *buf, const char *fmt, int n) {\n\tr_return_val_if_fail (b && buf && fmt, -1);\n\tst64 o_addr = r_buf_seek (b, 0, R_BUF_CUR);\n\tst64 r = r_buf_seek (b, addr, R_BUF_SET);\n\tif (r < 0) {\n\t\treturn r;\n\t}\n\tr = r_buf_fread (b, buf, fmt, n);\n\tr_buf_seek (b, o_addr, R_BUF_SET);\n\treturn r;\n}",
  "abstract_func_before": "R_API st64 r_buf_fread_at(RBuffer *VAR_0, ut64 VAR_1, ut8 *VAR_2, const char *VAR_3, int VAR_4) {\n\tr_return_val_if_fail (VAR_0 && VAR_2 && VAR_3, -1);\n\tst64 VAR_5 = r_buf_seek (VAR_0, 0, VAR_6);\n\tst64 VAR_7 = r_buf_seek (VAR_0, VAR_1, VAR_8);\n\tif (VAR_7 < 0) {\n\t\treturn VAR_7;\n\t}\n\tVAR_7 = r_buf_fread (VAR_0, VAR_2, VAR_3, VAR_4);\n\tr_buf_seek (VAR_0, VAR_5, VAR_8);\n\treturn VAR_7;\n}",
  "func_graph_path_before": null,
  "func": "R_API st64 r_buf_fread_at(RBuffer *b, ut64 addr, ut8 *buf, const char *fmt, int n) {\n\tr_return_val_if_fail (b && buf && fmt, -1);\n\tst64 o_addr = r_buf_seek (b, 0, R_BUF_CUR);\n\tst64 r = r_buf_seek (b, addr, R_BUF_SET);\n\tif (r < 0) {\n\t\treturn r;\n\t}\n\tr = r_buf_fread (b, buf, fmt, n);\n\t(void)r_buf_seek (b, o_addr, R_BUF_SET);\n\treturn r;\n}",
  "abstract_func": "R_API st64 r_buf_fread_at(RBuffer *VAR_0, ut64 VAR_1, ut8 *VAR_2, const char *VAR_3, int VAR_4) {\n\tr_return_val_if_fail (VAR_0 && VAR_2 && VAR_3, -1);\n\tst64 VAR_5 = r_buf_seek (VAR_0, 0, VAR_6);\n\tst64 VAR_7 = r_buf_seek (VAR_0, VAR_1, VAR_8);\n\tif (VAR_7 < 0) {\n\t\treturn VAR_7;\n\t}\n\tVAR_7 = r_buf_fread (VAR_0, VAR_2, VAR_3, VAR_4);\n\t(void)r_buf_seek (VAR_0, VAR_5, VAR_8);\n\treturn VAR_7;\n}",
  "func_graph_path": null,
  "diff_func": "--- func_before\n+++ func_after\n@@ -6,6 +6,6 @@\n \t\treturn r;\n \t}\n \tr = r_buf_fread (b, buf, fmt, n);\n-\tr_buf_seek (b, o_addr, R_BUF_SET);\n+\t(void)r_buf_seek (b, o_addr, R_BUF_SET);\n \treturn r;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\tr_buf_seek (b, o_addr, R_BUF_SET);"
    ],
    "added_lines": [
      "\t(void)r_buf_seek (b, o_addr, R_BUF_SET);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/radareorg/radare2/pull/19747",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/radareorg/radare2/pull/19747: 403 Client Error: Forbidden for url: https://api.github.com/repos/radareorg/radare2/pulls/19747",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}