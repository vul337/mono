{
  "cve_id": "CVE-2016-1133",
  "cwe_ids": [
    "CWE-Other"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "h2o",
  "commit_msg": "uri-escape the redirect path",
  "commit_hash": "461ae1ae6d9c11441f5a622175b211aba104e9b2",
  "git_url": "https://github.com/h2o/h2o/commit/461ae1ae6d9c11441f5a622175b211aba104e9b2",
  "file_path": "lib/handler/redirect.c",
  "func_name": "on_req",
  "func_before": "static int on_req(h2o_handler_t *_self, h2o_req_t *req)\n{\n    h2o_redirect_handler_t *self = (void *)_self;\n\n    /* build the URL */\n    h2o_iovec_t path =\n        h2o_iovec_init(req->path_normalized.base + req->pathconf->path.len, req->path_normalized.len - req->pathconf->path.len);\n    h2o_iovec_t query = req->query_at != SIZE_MAX ? h2o_iovec_init(req->path.base + req->query_at, req->path.len - req->query_at)\n                                                  : h2o_iovec_init(H2O_STRLIT(\"\"));\n    h2o_iovec_t dest = h2o_concat(&req->pool, self->prefix, path, query);\n\n    if (self->internal) {\n        redirect_internally(self, req, dest);\n    } else {\n        h2o_send_redirect(req, self->status, \"Redirected\", dest.base, dest.len);\n    }\n\n    return 0;\n}",
  "abstract_func_before": "static int on_req(h2o_handler_t *VAR_0, h2o_req_t *VAR_1)\n{\n    h2o_redirect_handler_t *VAR_2 = (void *)VAR_0;\n\n    /* COMMENT_0 */\n    h2o_iovec_t VAR_3 =\n        h2o_iovec_init(VAR_1->path_normalized.base + VAR_1->pathconf->path.len, VAR_1->path_normalized.len - VAR_1->pathconf->path.len);\n    h2o_iovec_t VAR_4 = VAR_1->query_at != VAR_5 ? h2o_iovec_init(VAR_1->path.base + VAR_1->query_at, VAR_1->path.len - VAR_1->query_at)\n                                                  : h2o_iovec_init(H2O_STRLIT(\"\"));\n    h2o_iovec_t VAR_6 = h2o_concat(&VAR_1->pool, VAR_2->prefix, VAR_3, VAR_4);\n\n    if (VAR_2->internal) {\n        redirect_internally(VAR_2, VAR_1, VAR_6);\n    } else {\n        h2o_send_redirect(VAR_1, VAR_2->status, \"Redirected\", VAR_6.base, VAR_6.len);\n    }\n\n    return 0;\n}",
  "func_graph_path_before": "h2o/461ae1ae6d9c11441f5a622175b211aba104e9b2/redirect.c/vul/before/0.json",
  "func": "static int on_req(h2o_handler_t *_self, h2o_req_t *req)\n{\n    h2o_redirect_handler_t *self = (void *)_self;\n\n    /* build the URL */\n    h2o_iovec_t path =\n        h2o_iovec_init(req->path_normalized.base + req->pathconf->path.len, req->path_normalized.len - req->pathconf->path.len);\n    path = h2o_uri_escape(&req->pool, path.base, path.len, \"/@\");\n    h2o_iovec_t query = req->query_at != SIZE_MAX ? h2o_iovec_init(req->path.base + req->query_at, req->path.len - req->query_at)\n                                                  : h2o_iovec_init(H2O_STRLIT(\"\"));\n    h2o_iovec_t dest = h2o_concat(&req->pool, self->prefix, path, query);\n\n    if (self->internal) {\n        redirect_internally(self, req, dest);\n    } else {\n        h2o_send_redirect(req, self->status, \"Redirected\", dest.base, dest.len);\n    }\n\n    return 0;\n}",
  "abstract_func": "static int on_req(h2o_handler_t *VAR_0, h2o_req_t *VAR_1)\n{\n    h2o_redirect_handler_t *VAR_2 = (void *)VAR_0;\n\n    /* COMMENT_0 */\n    h2o_iovec_t VAR_3 =\n        h2o_iovec_init(VAR_1->path_normalized.base + VAR_1->pathconf->path.len, VAR_1->path_normalized.len - VAR_1->pathconf->path.len);\n    VAR_3 = h2o_uri_escape(&VAR_1->pool, VAR_3.base, VAR_3.len, \"/@\");\n    h2o_iovec_t VAR_4 = VAR_1->query_at != VAR_5 ? h2o_iovec_init(VAR_1->path.base + VAR_1->query_at, VAR_1->path.len - VAR_1->query_at)\n                                                  : h2o_iovec_init(H2O_STRLIT(\"\"));\n    h2o_iovec_t VAR_6 = h2o_concat(&VAR_1->pool, VAR_2->prefix, VAR_3, VAR_4);\n\n    if (VAR_2->internal) {\n        redirect_internally(VAR_2, VAR_1, VAR_6);\n    } else {\n        h2o_send_redirect(VAR_1, VAR_2->status, \"Redirected\", VAR_6.base, VAR_6.len);\n    }\n\n    return 0;\n}",
  "func_graph_path": "h2o/461ae1ae6d9c11441f5a622175b211aba104e9b2/redirect.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -5,6 +5,7 @@\n     /* build the URL */\n     h2o_iovec_t path =\n         h2o_iovec_init(req->path_normalized.base + req->pathconf->path.len, req->path_normalized.len - req->pathconf->path.len);\n+    path = h2o_uri_escape(&req->pool, path.base, path.len, \"/@\");\n     h2o_iovec_t query = req->query_at != SIZE_MAX ? h2o_iovec_init(req->path.base + req->query_at, req->path.len - req->query_at)\n                                                   : h2o_iovec_init(H2O_STRLIT(\"\"));\n     h2o_iovec_t dest = h2o_concat(&req->pool, self->prefix, path, query);",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "    path = h2o_uri_escape(&req->pool, path.base, path.len, \"/@\");"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/h2o/h2o/pull/684",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/h2o/h2o/pull/684: 403 Client Error: Forbidden for url: https://api.github.com/repos/h2o/h2o/pulls/684",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0\n\n**Final Output:**  \n**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}