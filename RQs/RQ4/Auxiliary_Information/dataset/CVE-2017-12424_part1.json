{
  "cve_id": "CVE-2017-12424",
  "cwe_ids": [
    "CWE-119"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "shadow-maint/shadow",
  "commit_msg": "Fix buffer overflow if NULL line is present in db.\n\nIf ptr->line == NULL for an entry, the first cycle will exit,\nbut the second one will happily write past entries buffer.\nWe actually do not want to exit the first cycle prematurely\non ptr->line == NULL.\nSigned-off-by: Tomas Mraz <tmraz@fedoraproject.org>",
  "commit_hash": "954e3d2e7113e9ac06632aee3c69b8d818cc8952",
  "git_url": "https://github.com/shadow-maint/shadow/commit/954e3d2e7113e9ac06632aee3c69b8d818cc8952",
  "file_path": "lib/commonio.c",
  "func_name": "commonio_sort",
  "func_before": "int\ncommonio_sort (struct commonio_db *db, int (*cmp) (const void *, const void *))\n{\n\tstruct commonio_entry **entries, *ptr;\n\tsize_t n = 0, i;\n#if KEEP_NIS_AT_END\n\tstruct commonio_entry *nis = NULL;\n#endif\n\n\tfor (ptr = db->head;\n\t        (NULL != ptr)\n#if KEEP_NIS_AT_END\n\t     && (NULL != ptr->line)\n\t     && (   ('+' != ptr->line[0])\n\t         && ('-' != ptr->line[0]))\n#endif\n\t     ;\n\t     ptr = ptr->next) {\n\t\tn++;\n\t}\n#if KEEP_NIS_AT_END\n\tif ((NULL != ptr) && (NULL != ptr->line)) {\n\t\tnis = ptr;\n\t}\n#endif\n\n\tif (n <= 1) {\n\t\treturn 0;\n\t}\n\n\tentries = malloc (n * sizeof (struct commonio_entry *));\n\tif (entries == NULL) {\n\t\treturn -1;\n\t}\n\n\tn = 0;\n\tfor (ptr = db->head;\n#if KEEP_NIS_AT_END\n\t     nis != ptr;\n#else\n\t     NULL != ptr;\n#endif\n/*@ -nullderef @*/\n\t     ptr = ptr->next\n/*@ +nullderef @*/\n\t    ) {\n\t\tentries[n] = ptr;\n\t\tn++;\n\t}\n\tqsort (entries, n, sizeof (struct commonio_entry *), cmp);\n\n\t/* Take care of the head and tail separately */\n\tdb->head = entries[0];\n\tn--;\n#if KEEP_NIS_AT_END\n\tif (NULL == nis)\n#endif\n\t{\n\t\tdb->tail = entries[n];\n\t}\n\tdb->head->prev = NULL;\n\tdb->head->next = entries[1];\n\tentries[n]->prev = entries[n - 1];\n#if KEEP_NIS_AT_END\n\tentries[n]->next = nis;\n#else\n\tentries[n]->next = NULL;\n#endif\n\n\t/* Now other elements have prev and next entries */\n\tfor (i = 1; i < n; i++) {\n\t\tentries[i]->prev = entries[i - 1];\n\t\tentries[i]->next = entries[i + 1];\n\t}\n\n\tfree (entries);\n\tdb->changed = true;\n\n\treturn 0;\n}",
  "abstract_func_before": "int\ncommonio_sort (struct commonio_db *VAR_0, int (*VAR_1) (const void *, const void *))\n{\n\tstruct commonio_entry **VAR_2, *VAR_3;\n\tsize_t VAR_4 = 0, VAR_5;\n#if VAR_6\n\tstruct commonio_entry *VAR_7 = NULL;\n#endif\n\n\tfor (VAR_3 = VAR_0->head;\n\t        (NULL != VAR_3)\n#if VAR_6\n\t     && (NULL != VAR_3->line)\n\t     && (   ('+' != VAR_3->line[0])\n\t         && ('-' != VAR_3->line[0]))\n#endif\n\t     ;\n\t     VAR_3 = VAR_3->next) {\n\t\tVAR_4++;\n\t}\n#if VAR_6\n\tif ((NULL != VAR_3) && (NULL != VAR_3->line)) {\n\t\tVAR_7 = VAR_3;\n\t}\n#endif\n\n\tif (VAR_4 <= 1) {\n\t\treturn 0;\n\t}\n\n\tVAR_2 = malloc (VAR_4 * sizeof (struct commonio_entry *));\n\tif (VAR_2 == NULL) {\n\t\treturn -1;\n\t}\n\n\tVAR_4 = 0;\n\tfor (VAR_3 = VAR_0->head;\n#if VAR_6\n\t     VAR_7 != VAR_3;\n#else\n\t     NULL != VAR_3;\n#endif\n/* COMMENT_0 */\n\t     VAR_3 = VAR_3->next\n/* COMMENT_1 */\n\t    ) {\n\t\tVAR_2[VAR_4] = VAR_3;\n\t\tVAR_4++;\n\t}\n\tqsort (VAR_2, VAR_4, sizeof (struct commonio_entry *), VAR_1);\n\n\t/* COMMENT_2 */\n\tVAR_0->head = VAR_2[0];\n\tVAR_4--;\n#if VAR_6\n\tif (NULL == VAR_7)\n#endif\n\t{\n\t\tVAR_0->tail = VAR_2[VAR_4];\n\t}\n\tVAR_0->head->prev = NULL;\n\tVAR_0->head->next = VAR_2[1];\n\tVAR_2[VAR_4]->prev = VAR_2[VAR_4 - 1];\n#if VAR_6\n\tVAR_2[VAR_4]->next = VAR_7;\n#else\n\tVAR_2[VAR_4]->next = NULL;\n#endif\n\n\t/* COMMENT_3 */\n\tfor (VAR_5 = 1; VAR_5 < VAR_4; VAR_5++) {\n\t\tVAR_2[VAR_5]->prev = VAR_2[VAR_5 - 1];\n\t\tVAR_2[VAR_5]->next = VAR_2[VAR_5 + 1];\n\t}\n\n\tfree (VAR_2);\n\tVAR_0->changed = true;\n\n\treturn 0;\n}",
  "func_graph_path_before": "shadow-maint/shadow/954e3d2e7113e9ac06632aee3c69b8d818cc8952/commonio.c/vul/before/0.json",
  "func": "int\ncommonio_sort (struct commonio_db *db, int (*cmp) (const void *, const void *))\n{\n\tstruct commonio_entry **entries, *ptr;\n\tsize_t n = 0, i;\n#if KEEP_NIS_AT_END\n\tstruct commonio_entry *nis = NULL;\n#endif\n\n\tfor (ptr = db->head;\n\t        (NULL != ptr)\n#if KEEP_NIS_AT_END\n\t     && ((NULL == ptr->line)\n\t         || (('+' != ptr->line[0])\n\t             && ('-' != ptr->line[0])))\n#endif\n\t     ;\n\t     ptr = ptr->next) {\n\t\tn++;\n\t}\n#if KEEP_NIS_AT_END\n\tif (NULL != ptr) {\n\t\tnis = ptr;\n\t}\n#endif\n\n\tif (n <= 1) {\n\t\treturn 0;\n\t}\n\n\tentries = malloc (n * sizeof (struct commonio_entry *));\n\tif (entries == NULL) {\n\t\treturn -1;\n\t}\n\n\tn = 0;\n\tfor (ptr = db->head;\n#if KEEP_NIS_AT_END\n\t     nis != ptr;\n#else\n\t     NULL != ptr;\n#endif\n/*@ -nullderef @*/\n\t     ptr = ptr->next\n/*@ +nullderef @*/\n\t    ) {\n\t\tentries[n] = ptr;\n\t\tn++;\n\t}\n\tqsort (entries, n, sizeof (struct commonio_entry *), cmp);\n\n\t/* Take care of the head and tail separately */\n\tdb->head = entries[0];\n\tn--;\n#if KEEP_NIS_AT_END\n\tif (NULL == nis)\n#endif\n\t{\n\t\tdb->tail = entries[n];\n\t}\n\tdb->head->prev = NULL;\n\tdb->head->next = entries[1];\n\tentries[n]->prev = entries[n - 1];\n#if KEEP_NIS_AT_END\n\tentries[n]->next = nis;\n#else\n\tentries[n]->next = NULL;\n#endif\n\n\t/* Now other elements have prev and next entries */\n\tfor (i = 1; i < n; i++) {\n\t\tentries[i]->prev = entries[i - 1];\n\t\tentries[i]->next = entries[i + 1];\n\t}\n\n\tfree (entries);\n\tdb->changed = true;\n\n\treturn 0;\n}",
  "abstract_func": "int\ncommonio_sort (struct commonio_db *VAR_0, int (*VAR_1) (const void *, const void *))\n{\n\tstruct commonio_entry **VAR_2, *VAR_3;\n\tsize_t VAR_4 = 0, VAR_5;\n#if VAR_6\n\tstruct commonio_entry *VAR_7 = NULL;\n#endif\n\n\tfor (VAR_3 = VAR_0->head;\n\t        (NULL != VAR_3)\n#if VAR_6\n\t     && ((NULL == VAR_3->line)\n\t         || (('+' != VAR_3->line[0])\n\t             && ('-' != VAR_3->line[0])))\n#endif\n\t     ;\n\t     VAR_3 = VAR_3->next) {\n\t\tVAR_4++;\n\t}\n#if VAR_6\n\tif (NULL != VAR_3) {\n\t\tVAR_7 = VAR_3;\n\t}\n#endif\n\n\tif (VAR_4 <= 1) {\n\t\treturn 0;\n\t}\n\n\tVAR_2 = malloc (VAR_4 * sizeof (struct commonio_entry *));\n\tif (VAR_2 == NULL) {\n\t\treturn -1;\n\t}\n\n\tVAR_4 = 0;\n\tfor (VAR_3 = VAR_0->head;\n#if VAR_6\n\t     VAR_7 != VAR_3;\n#else\n\t     NULL != VAR_3;\n#endif\n/* COMMENT_0 */\n\t     VAR_3 = VAR_3->next\n/* COMMENT_1 */\n\t    ) {\n\t\tVAR_2[VAR_4] = VAR_3;\n\t\tVAR_4++;\n\t}\n\tqsort (VAR_2, VAR_4, sizeof (struct commonio_entry *), VAR_1);\n\n\t/* COMMENT_2 */\n\tVAR_0->head = VAR_2[0];\n\tVAR_4--;\n#if VAR_6\n\tif (NULL == VAR_7)\n#endif\n\t{\n\t\tVAR_0->tail = VAR_2[VAR_4];\n\t}\n\tVAR_0->head->prev = NULL;\n\tVAR_0->head->next = VAR_2[1];\n\tVAR_2[VAR_4]->prev = VAR_2[VAR_4 - 1];\n#if VAR_6\n\tVAR_2[VAR_4]->next = VAR_7;\n#else\n\tVAR_2[VAR_4]->next = NULL;\n#endif\n\n\t/* COMMENT_3 */\n\tfor (VAR_5 = 1; VAR_5 < VAR_4; VAR_5++) {\n\t\tVAR_2[VAR_5]->prev = VAR_2[VAR_5 - 1];\n\t\tVAR_2[VAR_5]->next = VAR_2[VAR_5 + 1];\n\t}\n\n\tfree (VAR_2);\n\tVAR_0->changed = true;\n\n\treturn 0;\n}",
  "func_graph_path": "shadow-maint/shadow/954e3d2e7113e9ac06632aee3c69b8d818cc8952/commonio.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -10,16 +10,16 @@\n \tfor (ptr = db->head;\n \t        (NULL != ptr)\n #if KEEP_NIS_AT_END\n-\t     && (NULL != ptr->line)\n-\t     && (   ('+' != ptr->line[0])\n-\t         && ('-' != ptr->line[0]))\n+\t     && ((NULL == ptr->line)\n+\t         || (('+' != ptr->line[0])\n+\t             && ('-' != ptr->line[0])))\n #endif\n \t     ;\n \t     ptr = ptr->next) {\n \t\tn++;\n \t}\n #if KEEP_NIS_AT_END\n-\tif ((NULL != ptr) && (NULL != ptr->line)) {\n+\tif (NULL != ptr) {\n \t\tnis = ptr;\n \t}\n #endif",
  "diff_line_info": {
    "deleted_lines": [
      "\t     && (NULL != ptr->line)",
      "\t     && (   ('+' != ptr->line[0])",
      "\t         && ('-' != ptr->line[0]))",
      "\tif ((NULL != ptr) && (NULL != ptr->line)) {"
    ],
    "added_lines": [
      "\t     && ((NULL == ptr->line)",
      "\t         || (('+' != ptr->line[0])",
      "\t             && ('-' != ptr->line[0])))",
      "\tif (NULL != ptr) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/shadow-maint/shadow/pull/70",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/shadow-maint/shadow/pull/70: 403 Client Error: Forbidden for url: https://api.github.com/repos/shadow-maint/shadow/pulls/70",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}