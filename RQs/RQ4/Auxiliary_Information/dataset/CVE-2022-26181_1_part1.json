{
  "cve_id": "CVE-2022-26181",
  "cwe_ids": [
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "dropbox/lepton",
  "commit_msg": "Fix wild free.\n\n`huffdata` is initially allocated using `aligned_dealloc` but can be\nreplaced with `data2` which is allocated using `custom_calloc`.\nThis can cause a wild free when `aligned_dealloc(huffdata)` is called.\nFix by replacing allocation sites with aligned_alloc.\n\nNoticed and fixed a similar problem with `hdrdata`.",
  "commit_hash": "4e591ffd0127ac064c4749e523458a923b29cc75",
  "git_url": "https://github.com/dropbox/lepton/commit/4e591ffd0127ac064c4749e523458a923b29cc75",
  "file_path": "src/lepton/bitops.cc",
  "func_name": "abitwriter::~abitwriter",
  "func_before": "abitwriter::~abitwriter( void )\n{\n\t// free memory if pointer was not given out\n    if ( fmem )\tcustom_free( data2 );\n}",
  "abstract_func_before": "abitwriter::~VAR_0( void )\n{\n\t/* COMMENT_0 */\n    if ( VAR_1 )\tcustom_free( VAR_2 );\n}",
  "func_graph_path_before": "dropbox/lepton/4e591ffd0127ac064c4749e523458a923b29cc75/bitops.cc/vul/before/2.json",
  "func": "abitwriter::~abitwriter( void )\n{\n\t// free memory if pointer was not given out\n    if ( fmem )\taligned_dealloc( data2 );\n}",
  "abstract_func": "abitwriter::~VAR_0( void )\n{\n\t/* COMMENT_0 */\n    if ( VAR_1 )\taligned_dealloc( VAR_2 );\n}",
  "func_graph_path": "dropbox/lepton/4e591ffd0127ac064c4749e523458a923b29cc75/bitops.cc/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,5 @@\n abitwriter::~abitwriter( void )\n {\n \t// free memory if pointer was not given out\n-    if ( fmem )\tcustom_free( data2 );\n+    if ( fmem )\taligned_dealloc( data2 );\n }",
  "diff_line_info": {
    "deleted_lines": [
      "    if ( fmem )\tcustom_free( data2 );"
    ],
    "added_lines": [
      "    if ( fmem )\taligned_dealloc( data2 );"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/dropbox/lepton/pull/155",
  "description": {
    "pr_info": {
      "title": "Fix wild free.",
      "number": 155
    },
    "comment": [
      "`huffdata` is initially allocated using `aligned_dealloc` but can be\r\nreplaced with `data2` which is allocated using `custom_calloc`.\r\nThis can cause a wild free when `aligned_dealloc(huffdata)` is called.\r\nFix by replacing allocation sites with aligned_alloc.\r\n\r\nNoticed and fixed a similar problem with `hdrdata`.\r\n\r\nFixes #154."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}