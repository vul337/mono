{
  "cve_id": "CVE-2020-12649",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "sirdude/gurbalib",
  "commit_msg": "Update help.c",
  "commit_hash": "7fb572c700229ec29a83ebf7b5f67c62eece6082",
  "git_url": "https://github.com/sirdude/gurbalib/commit/7fb572c700229ec29a83ebf7b5f67c62eece6082",
  "file_path": "lib/cmds/player/help.c",
  "func_name": "main",
  "func_before": "static void main(string arg) {\n   string file, *exparg;\n   int szof;\n   \n   /* remove capability of path traversal */\n   /* discoverd by David Byrne of X-Force Red */\n   exparg = explode(arg, \"/\");\n   szof = sizeof(exparg);\n   if (szof > 1) {\n      return 1;\n   }\n\n   if (!alsos) {\n      setup_alsos();\n   }\n\n   if (empty_str(arg) || (arg == \"help\")) {\n      this_player()->more(usage());\n      return;\n   }\n\n   if (sscanf(arg, \"-%s\", arg)) {\n      this_player()->more(usage());\n      return;\n   }\n\n   file = normalize_path(arg, \"/doc/help/\");\n   if (show_help(file)) {\n      return;\n   }\n\n   if (query_wizard(this_player())) {\n      file = normalize_path(arg, \"/doc/help/wiz/\");\n      if (show_help(file)) {\n         return;\n      }\n   }\n\n   if (show_help_for_command(arg)) {\n      return;\n   }\n\n   write(capitalize(arg) + \": Unknown help topic.\");\n   if (query_wizard(this_player())) {\n      write(\"Try one of the following for more info:\\n\");\n      write(\"\\tman \" + arg + \"\\n\");\n      write(\"\\t\" + arg + \" -h\\n\");\n   } else {\n      write(\"If \" + arg + \" is a command, for more info try: \" + \n         arg + \" -h\\n\");\n   }\n   LOG_D->write_log(\"help\", this_player()->query_Name() +\n      \" on \" + ctime(time()) + \": \" + arg + \"\\n\");\n   return;\n}",
  "abstract_func_before": "static void main(string VAR_0) {\n   string VAR_1, *VAR_2;\n   int VAR_3;\n   \n   /* COMMENT_0 */\n   /* COMMENT_1 */\n   VAR_2 = explode(VAR_0, \"/\");\n   VAR_3 = sizeof(VAR_2);\n   if (VAR_3 > 1) {\n      return 1;\n   }\n\n   if (!VAR_4) {\n      setup_alsos();\n   }\n\n   if (empty_str(VAR_0) || (VAR_0 == \"help\")) {\n      this_player()->more(usage());\n      return;\n   }\n\n   if (sscanf(VAR_0, \"-%s\", VAR_0)) {\n      this_player()->more(usage());\n      return;\n   }\n\n   VAR_1 = normalize_path(VAR_0, \"/doc/help/\");\n   if (show_help(VAR_1)) {\n      return;\n   }\n\n   if (query_wizard(this_player())) {\n      VAR_1 = normalize_path(VAR_0, \"/doc/help/wiz/\");\n      if (show_help(VAR_1)) {\n         return;\n      }\n   }\n\n   if (show_help_for_command(VAR_0)) {\n      return;\n   }\n\n   write(capitalize(VAR_0) + \": Unknown help topic.\");\n   if (query_wizard(this_player())) {\n      write(\"Try one of the following for more info:\\n\");\n      write(\"\\tman \" + VAR_0 + \"\\n\");\n      write(\"\\t\" + VAR_0 + \" -h\\n\");\n   } else {\n      write(\"If \" + VAR_0 + \" is a command, for more info try: \" + \n         VAR_0 + \" -h\\n\");\n   }\n   VAR_5->write_log(\"help\", this_player()->query_Name() +\n      \" on \" + ctime(time()) + \": \" + VAR_0 + \"\\n\");\n   return;\n}",
  "func_graph_path_before": "sirdude/gurbalib/7fb572c700229ec29a83ebf7b5f67c62eece6082/help.c/vul/before/0.json",
  "func": "static void main(string arg) {\n   string file, *exparg;\n   int szof;\n   \n   /* remove capability of path traversal */\n   /* discoverd by David Byrne of X-Force Red */\n   /* CVE-2020-12649 */\n   exparg = explode(arg, \"/\");\n   szof = sizeof(exparg);\n   if (szof > 1) {\n      return 1;\n   }\n\n   if (!alsos) {\n      setup_alsos();\n   }\n\n   if (empty_str(arg) || (arg == \"help\")) {\n      this_player()->more(usage());\n      return;\n   }\n\n   if (sscanf(arg, \"-%s\", arg)) {\n      this_player()->more(usage());\n      return;\n   }\n\n   file = normalize_path(arg, \"/doc/help/\");\n   if (show_help(file)) {\n      return;\n   }\n\n   if (query_wizard(this_player())) {\n      file = normalize_path(arg, \"/doc/help/wiz/\");\n      if (show_help(file)) {\n         return;\n      }\n   }\n\n   if (show_help_for_command(arg)) {\n      return;\n   }\n\n   write(capitalize(arg) + \": Unknown help topic.\");\n   if (query_wizard(this_player())) {\n      write(\"Try one of the following for more info:\\n\");\n      write(\"\\tman \" + arg + \"\\n\");\n      write(\"\\t\" + arg + \" -h\\n\");\n   } else {\n      write(\"If \" + arg + \" is a command, for more info try: \" + \n         arg + \" -h\\n\");\n   }\n   LOG_D->write_log(\"help\", this_player()->query_Name() +\n      \" on \" + ctime(time()) + \": \" + arg + \"\\n\");\n   return;\n}",
  "abstract_func": "static void main(string VAR_0) {\n   string VAR_1, *VAR_2;\n   int VAR_3;\n   \n   /* COMMENT_0 */\n   /* COMMENT_1 */\n   /* COMMENT_2 */\n   VAR_2 = explode(VAR_0, \"/\");\n   VAR_3 = sizeof(VAR_2);\n   if (VAR_3 > 1) {\n      return 1;\n   }\n\n   if (!VAR_4) {\n      setup_alsos();\n   }\n\n   if (empty_str(VAR_0) || (VAR_0 == \"help\")) {\n      this_player()->more(usage());\n      return;\n   }\n\n   if (sscanf(VAR_0, \"-%s\", VAR_0)) {\n      this_player()->more(usage());\n      return;\n   }\n\n   VAR_1 = normalize_path(VAR_0, \"/doc/help/\");\n   if (show_help(VAR_1)) {\n      return;\n   }\n\n   if (query_wizard(this_player())) {\n      VAR_1 = normalize_path(VAR_0, \"/doc/help/wiz/\");\n      if (show_help(VAR_1)) {\n         return;\n      }\n   }\n\n   if (show_help_for_command(VAR_0)) {\n      return;\n   }\n\n   write(capitalize(VAR_0) + \": Unknown help topic.\");\n   if (query_wizard(this_player())) {\n      write(\"Try one of the following for more info:\\n\");\n      write(\"\\tman \" + VAR_0 + \"\\n\");\n      write(\"\\t\" + VAR_0 + \" -h\\n\");\n   } else {\n      write(\"If \" + VAR_0 + \" is a command, for more info try: \" + \n         VAR_0 + \" -h\\n\");\n   }\n   VAR_5->write_log(\"help\", this_player()->query_Name() +\n      \" on \" + ctime(time()) + \": \" + VAR_0 + \"\\n\");\n   return;\n}",
  "func_graph_path": "sirdude/gurbalib/7fb572c700229ec29a83ebf7b5f67c62eece6082/help.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,6 +4,7 @@\n    \n    /* remove capability of path traversal */\n    /* discoverd by David Byrne of X-Force Red */\n+   /* CVE-2020-12649 */\n    exparg = explode(arg, \"/\");\n    szof = sizeof(exparg);\n    if (szof > 1) {",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "   /* CVE-2020-12649 */"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/sirdude/gurbalib/pull/39",
  "description": {
    "pr_info": {
      "title": "Patch 2",
      "number": 39
    },
    "comment": [
      "CVE Fix, plus the missing pk code, sorry parts of the code was missing, I did a bad copy and paste from my other source tree",
      "Can you take out the help bits after that I'll commit."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}