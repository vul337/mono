{
  "cve_id": "CVE-2018-5251",
  "cwe_ids": [
    "CWE-681"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "libming",
  "commit_msg": "Fix left shift of a negative value in readSBits.\n\nCheck for !number before left-shifting by (number-1).\n\nThis commit fixes CVE-2018-5294 (fixes #97).",
  "commit_hash": "9141f1df0d6ecb84f298633ba03569bbf5c842d0",
  "git_url": "https://github.com/libming/libming/commit/9141f1df0d6ecb84f298633ba03569bbf5c842d0",
  "file_path": "util/read.c",
  "func_name": "readSBits",
  "func_before": "int readSBits(FILE *f, int number)\n{\n  int num = readBits(f, number);\n\n  if(num & (1<<(number-1)))\n    return num - (1<<number);\n  else\n    return num;\n}",
  "abstract_func_before": "int readSBits(FILE *VAR_0, int VAR_1)\n{\n  int VAR_2 = readBits(VAR_0, VAR_1);\n\n  if(VAR_2 & (1<<(VAR_1-1)))\n    return VAR_2 - (1<<VAR_1);\n  else\n    return VAR_2;\n}",
  "func_graph_path_before": "libming/9141f1df0d6ecb84f298633ba03569bbf5c842d0/read.c/vul/before/0.json",
  "func": "int readSBits(FILE *f, int number)\n{\n  int num = readBits(f, number);\n\n  if(number && num & (1<<(number-1)))\n    return num - (1<<number);\n  else\n    return num;\n}",
  "abstract_func": "int readSBits(FILE *VAR_0, int VAR_1)\n{\n  int VAR_2 = readBits(VAR_0, VAR_1);\n\n  if(VAR_1 && VAR_2 & (1<<(VAR_1-1)))\n    return VAR_2 - (1<<VAR_1);\n  else\n    return VAR_2;\n}",
  "func_graph_path": "libming/9141f1df0d6ecb84f298633ba03569bbf5c842d0/read.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,7 +2,7 @@\n {\n   int num = readBits(f, number);\n \n-  if(num & (1<<(number-1)))\n+  if(number && num & (1<<(number-1)))\n     return num - (1<<number);\n   else\n     return num;",
  "diff_line_info": {
    "deleted_lines": [
      "  if(num & (1<<(number-1)))"
    ],
    "added_lines": [
      "  if(number && num & (1<<(number-1)))"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libming/libming/pull/100",
  "description": {
    "pr_info": {
      "title": "Fix various undefined behavior sources in util/read.c",
      "number": 100
    },
    "comment": [
      "* in `readUInt32` and `readSInt32`: cast the result of `readUInt8(f)` before left shifting by 24 in order to avoid out of range shift.\r\n* In `readSBits`: make sure that `number` isn't 0 before left-shifting by `(number-1)`.\r\n\r\nThis PR addresses #97 and #98.",
      "Oh, wait, I forgot the NEWS entry.\r\n\r\nAlso: I didn't request CVE numbers for these issues because I was too unsure about their security implications.",
      "it would be great to have automated tests added to prove the need for these patches, although I understand it isn't straightforward to produce them",
      "I have added the NEWS entries as a separate commit. If needed, I can rebase and wrap them into the patches.\r\n\r\nConcerning the automated tests: Well, I think that the need for these patches is proved as long as those two issues are easily reproducible with the pocs (see bug reports). Also, these issues are quite common, you can find the exact same bug as #98 [here](https://github.com/nothings/stb/issues/152) for example.\r\n\r\nNevertheless I agree that it would be great to have regression tests. At least it would have avoided #98 (regression introduced in d468907).\r\n\r\nUnfortunately I'm probably not going to have time to write these tests in the next weeks. We could maybe open a bug report as a reminder.",
      "Hum, while having a look at the Debian Security Tracker I just noticed that these two issues have actually been assigned CVE numbers CVE-2018-5251 and CVE-2018-5294. Please do not merge, I'll rebase everything a provide updated commit messages.",
      "Done. I have updated commit messages and NEWS entries to mention CVE numbers."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 1.0"
}