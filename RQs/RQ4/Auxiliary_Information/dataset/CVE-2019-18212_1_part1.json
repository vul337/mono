{
  "cve_id": "CVE-2019-18212",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N",
  "cvss_is_v3": false,
  "repo_name": "eclipse/lemminx",
  "commit_msg": "Reject download of resource which are not in the cache folder (url which\nuses several ../../).\n\nSigned-off-by: azerr <azerr@redhat.com>",
  "commit_hash": "e37c399aa266be1b7a43061d4afc43dc230410d2",
  "git_url": "https://github.com/eclipse/lemminx/commit/e37c399aa266be1b7a43061d4afc43dc230410d2",
  "file_path": "org.eclipse.lsp4xml/src/main/java/org/eclipse/lsp4xml/utils/FilesUtils.java",
  "func_name": "convertToWindowsPath",
  "func_before": "public static String convertToWindowsPath(String pathString) {\n\t\tString pathSlash = getFilePathSlash(pathString);\n\t\tif(pathString.startsWith(pathSlash) ) {\n\t\t\tif(pathString.length() > 3) {\n\t\t\t\tchar letter = pathString.charAt(1);\n\t\t\t\tchar colon = pathString.charAt(2);\n\t\t\t\tif(Character.isLetter(letter) && ':' == colon) {\n\t\t\t\t\tpathString = pathString.substring(1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pathString.replace(\"/\", \"\\\\\");\n\t}",
  "abstract_func_before": "public static String convertToWindowsPath(String VAR_0) {\n\t\tString VAR_1 = getFilePathSlash(VAR_0);\n\t\tif(VAR_0.startsWith(VAR_1) ) {\n\t\t\tif(VAR_0.length() > 3) {\n\t\t\t\tchar VAR_2 = VAR_0.charAt(1);\n\t\t\t\tchar VAR_3 = VAR_0.charAt(2);\n\t\t\t\tif(VAR_4.isLetter(VAR_2) && ':' == VAR_3) {\n\t\t\t\t\tVAR_0 = VAR_0.substring(1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn VAR_0.replace(\"/\", \"\\\\\");\n\t}",
  "func_graph_path_before": "eclipse/lemminx/e37c399aa266be1b7a43061d4afc43dc230410d2/FilesUtils.java/vul/before/1.json",
  "func": "public static String convertToWindowsPath(String pathString) {\n\t\tString pathSlash = getFilePathSlash(pathString);\n\t\tif (pathString.startsWith(pathSlash)) {\n\t\t\tif (pathString.length() > 3) {\n\t\t\t\tchar letter = pathString.charAt(1);\n\t\t\t\tchar colon = pathString.charAt(2);\n\t\t\t\tif (Character.isLetter(letter) && ':' == colon) {\n\t\t\t\t\tpathString = pathString.substring(1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pathString.replace(\"/\", \"\\\\\");\n\t}",
  "abstract_func": "public static String convertToWindowsPath(String VAR_0) {\n\t\tString VAR_1 = getFilePathSlash(VAR_0);\n\t\tif (VAR_0.startsWith(VAR_1)) {\n\t\t\tif (VAR_0.length() > 3) {\n\t\t\t\tchar VAR_2 = VAR_0.charAt(1);\n\t\t\t\tchar VAR_3 = VAR_0.charAt(2);\n\t\t\t\tif (VAR_4.isLetter(VAR_2) && ':' == VAR_3) {\n\t\t\t\t\tVAR_0 = VAR_0.substring(1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn VAR_0.replace(\"/\", \"\\\\\");\n\t}",
  "func_graph_path": "eclipse/lemminx/e37c399aa266be1b7a43061d4afc43dc230410d2/FilesUtils.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,10 +1,10 @@\n public static String convertToWindowsPath(String pathString) {\n \t\tString pathSlash = getFilePathSlash(pathString);\n-\t\tif(pathString.startsWith(pathSlash) ) {\n-\t\t\tif(pathString.length() > 3) {\n+\t\tif (pathString.startsWith(pathSlash)) {\n+\t\t\tif (pathString.length() > 3) {\n \t\t\t\tchar letter = pathString.charAt(1);\n \t\t\t\tchar colon = pathString.charAt(2);\n-\t\t\t\tif(Character.isLetter(letter) && ':' == colon) {\n+\t\t\t\tif (Character.isLetter(letter) && ':' == colon) {\n \t\t\t\t\tpathString = pathString.substring(1);\n \t\t\t\t}\n \t\t\t}",
  "diff_line_info": {
    "deleted_lines": [
      "\t\tif(pathString.startsWith(pathSlash) ) {",
      "\t\t\tif(pathString.length() > 3) {",
      "\t\t\t\tif(Character.isLetter(letter) && ':' == colon) {"
    ],
    "added_lines": [
      "\t\tif (pathString.startsWith(pathSlash)) {",
      "\t\t\tif (pathString.length() > 3) {",
      "\t\t\t\tif (Character.isLetter(letter) && ':' == colon) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/eclipse-lemminx/lemminx/pull/567",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/eclipse-lemminx/lemminx/pull/567: 403 Client Error: Forbidden for url: https://api.github.com/repos/eclipse-lemminx/lemminx/pulls/567",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.7  \n\nThe commit message indicates a security fix by describing a change to reject downloads from URLs that attempt to access resources outside the cache folder using directory traversal. However, the code changes focus on path manipulation without explicit security measures, suggesting a possible disconnect. Despite this, the intent aligns with preventing unauthorized access, hence classifying it as a security fix with moderate confidence."
}