{
  "cve_id": "CVE-2022-40757",
  "cwe_ids": [
    "CWE-119"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "Samsung/mTower",
  "commit_msg": "Fixed CVE-2022-40760\n\nSigned-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>",
  "commit_hash": "ab9d06d51ff8c3eab9ba9ea85e422179dbd12b15",
  "git_url": "https://github.com/Samsung/mTower/commit/ab9d06d51ff8c3eab9ba9ea85e422179dbd12b15",
  "file_path": "tee/lib/libutee/tee_api_operations.c",
  "func_name": "TEE_MACComputeFinal",
  "func_before": "TEE_Result TEE_MACComputeFinal(TEE_OperationHandle operation,\n\t\t\t       const void *message, uint32_t messageLen,\n\t\t\t       void *mac, uint32_t *macLen)\n{\n\tTEE_Result res;\n\tuint64_t ml;\n\n\tif (operation == TEE_HANDLE_NULL ||\n\t    (message == NULL && messageLen != 0) ||\n\t    mac == NULL ||\n\t    macLen == NULL) {\n\t\tres = TEE_ERROR_BAD_PARAMETERS;\n\t\tgoto out;\n\t}\n\n\tif (operation->info.operationClass != TEE_OPERATION_MAC) {\n\t\tres = TEE_ERROR_BAD_PARAMETERS;\n\t\tgoto out;\n\t}\n\n\tif ((operation->info.handleState & TEE_HANDLE_FLAG_INITIALIZED) == 0) {\n\t\tres = TEE_ERROR_BAD_PARAMETERS;\n\t\tgoto out;\n\t}\n\n\tif (operation->operationState != TEE_OPERATION_STATE_ACTIVE) {\n\t\tres = TEE_ERROR_BAD_PARAMETERS;\n\t\tgoto out;\n\t}\n\n\tml = *macLen;\n\tres = utee_hash_final(operation->state, message, messageLen, mac, &ml);\n\t*macLen = ml;\n\tif (res != TEE_SUCCESS)\n\t\tgoto out;\n\n\toperation->info.handleState &= ~TEE_HANDLE_FLAG_INITIALIZED;\n\n\toperation->operationState = TEE_OPERATION_STATE_INITIAL;\n\nout:\n\tif (res != TEE_SUCCESS &&\n\t    res != TEE_ERROR_SHORT_BUFFER)\n\t\tTEE_Panic(res);\n\n\treturn res;\n}",
  "abstract_func_before": "TEE_Result TEE_MACComputeFinal(TEE_OperationHandle VAR_0,\n\t\t\t       const void *VAR_1, uint32_t VAR_2,\n\t\t\t       void *VAR_3, uint32_t *VAR_4)\n{\n\tTEE_Result VAR_5;\n\tuint64_t VAR_6;\n\n\tif (VAR_0 == VAR_7 ||\n\t    (VAR_1 == NULL && VAR_2 != 0) ||\n\t    VAR_3 == NULL ||\n\t    VAR_4 == NULL) {\n\t\tVAR_5 = VAR_8;\n\t\tgoto out;\n\t}\n\n\tif (VAR_0->info.operationClass != VAR_9) {\n\t\tVAR_5 = VAR_8;\n\t\tgoto out;\n\t}\n\n\tif ((VAR_0->info.handleState & VAR_10) == 0) {\n\t\tVAR_5 = VAR_8;\n\t\tgoto out;\n\t}\n\n\tif (VAR_0->operationState != VAR_11) {\n\t\tVAR_5 = VAR_8;\n\t\tgoto out;\n\t}\n\n\tVAR_6 = *VAR_4;\n\tVAR_5 = utee_hash_final(VAR_0->state, VAR_1, VAR_2, VAR_3, &VAR_6);\n\t*VAR_4 = VAR_6;\n\tif (VAR_5 != VAR_12)\n\t\tgoto out;\n\n\tVAR_0->info.handleState &= ~VAR_10;\n\n\tVAR_0->operationState = VAR_13;\n\nout:\n\tif (VAR_5 != VAR_12 &&\n\t    VAR_5 != VAR_14)\n\t\tTEE_Panic(VAR_5);\n\n\treturn VAR_5;\n}",
  "func_graph_path_before": "Samsung/mTower/ab9d06d51ff8c3eab9ba9ea85e422179dbd12b15/tee_api_operations.c/vul/before/1.json",
  "func": "TEE_Result TEE_MACComputeFinal(TEE_OperationHandle operation,\n\t\t\t       const void *message, uint32_t messageLen,\n\t\t\t       void *mac, uint32_t *macLen)\n{\n\tTEE_Result res;\n\tuint64_t ml;\n\n\tif (operation == TEE_HANDLE_NULL ||\n\t    (message == NULL && messageLen != 0) ||\n\t    mac == NULL ||\n\t    macLen == NULL) {\n\t\tres = TEE_ERROR_BAD_PARAMETERS;\n\t\tgoto out;\n\t}\n\n\tif (operation->info.operationClass != TEE_OPERATION_MAC) {\n\t\tres = TEE_ERROR_BAD_PARAMETERS;\n\t\tgoto out;\n\t}\n\n\tif ((operation->info.handleState & TEE_HANDLE_FLAG_INITIALIZED) == 0) {\n\t\tres = TEE_ERROR_BAD_PARAMETERS;\n\t\tgoto out;\n\t}\n\n\tif (operation->operationState != TEE_OPERATION_STATE_ACTIVE) {\n\t\tres = TEE_ERROR_BAD_PARAMETERS;\n\t\tgoto out;\n\t}\n\n\tif (CONFIG_MAX_CRYPTO_CHUNK_SIZE < *macLen) {\n\t\tres = TEE_ERROR_BAD_PARAMETERS;\n\t\tgoto out;\n\t}\n\n\tml = *macLen;\n\tres = utee_hash_final(operation->state, message, messageLen, mac, &ml);\n\t*macLen = ml;\n\tif (res != TEE_SUCCESS)\n\t\tgoto out;\n\n\toperation->info.handleState &= ~TEE_HANDLE_FLAG_INITIALIZED;\n\n\toperation->operationState = TEE_OPERATION_STATE_INITIAL;\n\nout:\n\tif (res != TEE_SUCCESS &&\n\t    res != TEE_ERROR_SHORT_BUFFER)\n\t\tTEE_Panic(res);\n\n\treturn res;\n}",
  "abstract_func": "TEE_Result TEE_MACComputeFinal(TEE_OperationHandle VAR_0,\n\t\t\t       const void *VAR_1, uint32_t VAR_2,\n\t\t\t       void *VAR_3, uint32_t *VAR_4)\n{\n\tTEE_Result VAR_5;\n\tuint64_t VAR_6;\n\n\tif (VAR_0 == VAR_7 ||\n\t    (VAR_1 == NULL && VAR_2 != 0) ||\n\t    VAR_3 == NULL ||\n\t    VAR_4 == NULL) {\n\t\tVAR_5 = VAR_8;\n\t\tgoto out;\n\t}\n\n\tif (VAR_0->info.operationClass != VAR_9) {\n\t\tVAR_5 = VAR_8;\n\t\tgoto out;\n\t}\n\n\tif ((VAR_0->info.handleState & VAR_10) == 0) {\n\t\tVAR_5 = VAR_8;\n\t\tgoto out;\n\t}\n\n\tif (VAR_0->operationState != VAR_11) {\n\t\tVAR_5 = VAR_8;\n\t\tgoto out;\n\t}\n\n\tif (VAR_12 < *VAR_4) {\n\t\tVAR_5 = VAR_8;\n\t\tgoto out;\n\t}\n\n\tVAR_6 = *VAR_4;\n\tVAR_5 = utee_hash_final(VAR_0->state, VAR_1, VAR_2, VAR_3, &VAR_6);\n\t*VAR_4 = VAR_6;\n\tif (VAR_5 != VAR_13)\n\t\tgoto out;\n\n\tVAR_0->info.handleState &= ~VAR_10;\n\n\tVAR_0->operationState = VAR_14;\n\nout:\n\tif (VAR_5 != VAR_13 &&\n\t    VAR_5 != VAR_15)\n\t\tTEE_Panic(VAR_5);\n\n\treturn VAR_5;\n}",
  "func_graph_path": "Samsung/mTower/ab9d06d51ff8c3eab9ba9ea85e422179dbd12b15/tee_api_operations.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -28,6 +28,11 @@\n \t\tgoto out;\n \t}\n \n+\tif (CONFIG_MAX_CRYPTO_CHUNK_SIZE < *macLen) {\n+\t\tres = TEE_ERROR_BAD_PARAMETERS;\n+\t\tgoto out;\n+\t}\n+\n \tml = *macLen;\n \tres = utee_hash_final(operation->state, message, messageLen, mac, &ml);\n \t*macLen = ml;",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\tif (CONFIG_MAX_CRYPTO_CHUNK_SIZE < *macLen) {",
      "\t\tres = TEE_ERROR_BAD_PARAMETERS;",
      "\t\tgoto out;",
      "\t}",
      ""
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Samsung/mTower/pull/90",
  "description": {
    "pr_info": {
      "title": "Fixed CVE-2022-40760",
      "number": 90
    },
    "comment": [
      "Signed-off-by: Taras Drozdovskyi <t.drozdovsky@samsung.com>\r\n\r\nFixes #81\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] My code follows the style guidelines of this project\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [ ] Any dependent changes have been merged and published in downstream modules"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 1.0"
}