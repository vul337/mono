{
  "cve_id": "CVE-2016-10156",
  "cwe_ids": [
    "CWE-264"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "systemd",
  "commit_msg": "util-lib: use MODE_INVALID as invalid value for mode_t everywhere",
  "commit_hash": "ee735086f8670be1591fa9593e80dd60163a7a2f",
  "git_url": "https://github.com/systemd/systemd/commit/ee735086f8670be1591fa9593e80dd60163a7a2f",
  "file_path": "src/basic/fs-util.c",
  "func_name": "touch_file",
  "func_before": "int touch_file(const char *path, bool parents, usec_t stamp, uid_t uid, gid_t gid, mode_t mode) {\n        _cleanup_close_ int fd;\n        int r;\n\n        assert(path);\n\n        if (parents)\n                mkdir_parents(path, 0755);\n\n        fd = open(path, O_WRONLY|O_CREAT|O_CLOEXEC|O_NOCTTY, mode > 0 ? mode : 0644);\n        if (fd < 0)\n                return -errno;\n\n        if (mode > 0) {\n                r = fchmod(fd, mode);\n                if (r < 0)\n                        return -errno;\n        }\n\n        if (uid != UID_INVALID || gid != GID_INVALID) {\n                r = fchown(fd, uid, gid);\n                if (r < 0)\n                        return -errno;\n        }\n\n        if (stamp != USEC_INFINITY) {\n                struct timespec ts[2];\n\n                timespec_store(&ts[0], stamp);\n                ts[1] = ts[0];\n                r = futimens(fd, ts);\n        } else\n                r = futimens(fd, NULL);\n        if (r < 0)\n                return -errno;\n\n        return 0;\n}",
  "abstract_func_before": "int touch_file(const char *VAR_0, bool VAR_1, usec_t VAR_2, uid_t VAR_3, gid_t VAR_4, mode_t VAR_5) {\n        _cleanup_close_ int VAR_6;\n        int VAR_7;\n\n        assert(VAR_0);\n\n        if (VAR_1)\n                mkdir_parents(VAR_0, 0755);\n\n        VAR_6 = open(VAR_0, VAR_8|VAR_9|VAR_10|VAR_11, VAR_5 > 0 ? VAR_5 : 0644);\n        if (VAR_6 < 0)\n                return -VAR_12;\n\n        if (VAR_5 > 0) {\n                VAR_7 = fchmod(VAR_6, VAR_5);\n                if (VAR_7 < 0)\n                        return -VAR_12;\n        }\n\n        if (VAR_3 != VAR_13 || VAR_4 != VAR_14) {\n                VAR_7 = fchown(VAR_6, VAR_3, VAR_4);\n                if (VAR_7 < 0)\n                        return -VAR_12;\n        }\n\n        if (VAR_2 != VAR_15) {\n                struct timespec VAR_16[2];\n\n                timespec_store(&VAR_16[0], VAR_2);\n                VAR_16[1] = VAR_16[0];\n                VAR_7 = futimens(VAR_6, VAR_16);\n        } else\n                VAR_7 = futimens(VAR_6, NULL);\n        if (VAR_7 < 0)\n                return -VAR_12;\n\n        return 0;\n}",
  "func_graph_path_before": "systemd/ee735086f8670be1591fa9593e80dd60163a7a2f/fs-util.c/vul/before/0.json",
  "func": "int touch_file(const char *path, bool parents, usec_t stamp, uid_t uid, gid_t gid, mode_t mode) {\n        _cleanup_close_ int fd;\n        int r;\n\n        assert(path);\n\n        if (parents)\n                mkdir_parents(path, 0755);\n\n        fd = open(path, O_WRONLY|O_CREAT|O_CLOEXEC|O_NOCTTY, mode > 0 ? mode : 0644);\n        if (fd < 0)\n                return -errno;\n\n        if (mode != MODE_INVALID) {\n                r = fchmod(fd, mode);\n                if (r < 0)\n                        return -errno;\n        }\n\n        if (uid != UID_INVALID || gid != GID_INVALID) {\n                r = fchown(fd, uid, gid);\n                if (r < 0)\n                        return -errno;\n        }\n\n        if (stamp != USEC_INFINITY) {\n                struct timespec ts[2];\n\n                timespec_store(&ts[0], stamp);\n                ts[1] = ts[0];\n                r = futimens(fd, ts);\n        } else\n                r = futimens(fd, NULL);\n        if (r < 0)\n                return -errno;\n\n        return 0;\n}",
  "abstract_func": "int touch_file(const char *VAR_0, bool VAR_1, usec_t VAR_2, uid_t VAR_3, gid_t VAR_4, mode_t VAR_5) {\n        _cleanup_close_ int VAR_6;\n        int VAR_7;\n\n        assert(VAR_0);\n\n        if (VAR_1)\n                mkdir_parents(VAR_0, 0755);\n\n        VAR_6 = open(VAR_0, VAR_8|VAR_9|VAR_10|VAR_11, VAR_5 > 0 ? VAR_5 : 0644);\n        if (VAR_6 < 0)\n                return -VAR_12;\n\n        if (VAR_5 != VAR_13) {\n                VAR_7 = fchmod(VAR_6, VAR_5);\n                if (VAR_7 < 0)\n                        return -VAR_12;\n        }\n\n        if (VAR_3 != VAR_14 || VAR_4 != VAR_15) {\n                VAR_7 = fchown(VAR_6, VAR_3, VAR_4);\n                if (VAR_7 < 0)\n                        return -VAR_12;\n        }\n\n        if (VAR_2 != VAR_16) {\n                struct timespec VAR_17[2];\n\n                timespec_store(&VAR_17[0], VAR_2);\n                VAR_17[1] = VAR_17[0];\n                VAR_7 = futimens(VAR_6, VAR_17);\n        } else\n                VAR_7 = futimens(VAR_6, NULL);\n        if (VAR_7 < 0)\n                return -VAR_12;\n\n        return 0;\n}",
  "func_graph_path": "systemd/ee735086f8670be1591fa9593e80dd60163a7a2f/fs-util.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -11,7 +11,7 @@\n         if (fd < 0)\n                 return -errno;\n \n-        if (mode > 0) {\n+        if (mode != MODE_INVALID) {\n                 r = fchmod(fd, mode);\n                 if (r < 0)\n                         return -errno;",
  "diff_line_info": {
    "deleted_lines": [
      "        if (mode > 0) {"
    ],
    "added_lines": [
      "        if (mode != MODE_INVALID) {"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/systemd/systemd/pull/1854",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/systemd/systemd/pull/1854: 403 Client Error: Forbidden for url: https://api.github.com/repos/systemd/systemd/pulls/1854",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.8\n\nStep-by-step explanation:\n\n1. **Input Analysis:** The commit involves changing mode validation in a utility function to use a specific constant for invalid values. The vulnerability description cites a functional bug without security implications.\n\n2. **Consistency Check:** The code change aligns with the commit message focusing on mode handling.\n\n3. **Purpose Evaluation:** The fix resolves a critical bug causing system boot issues, indicating a core logic defect.\n\n4. **Security Assessment:** No security-related terms or CVE references; the issue is functional, not security-related.\n\n5. **Non-Security Classification:** Fits into \"Defect Remediation\" as it addresses a non-security bug.\n\n6. **Confidence Score:** High confidence as the issue is clearly a functional defect.\n\n**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 0.8"
}