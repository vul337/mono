{
  "cve_id": "CVE-2014-9906",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C",
  "cvss_is_v3": false,
  "repo_name": "perl5-dbi/DBD-mysql",
  "commit_msg": "fix use-after-free crash in RT #97625",
  "commit_hash": "a56ae87a4c1c1fead7d09c3653905841ccccf1cc",
  "git_url": "https://github.com/perl5-dbi/DBD-mysql/commit/a56ae87a4c1c1fead7d09c3653905841ccccf1cc",
  "file_path": "dbdimp.c",
  "func_name": "dbd_db_login",
  "func_before": "int dbd_db_login(SV* dbh, imp_dbh_t* imp_dbh, char* dbname, char* user,\n\t\t char* password) {\n#ifdef dTHR\n  dTHR;\n#endif\n  dTHX; \n  D_imp_xxh(dbh);\n\n  if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)\n    PerlIO_printf(DBIc_LOGPIO(imp_xxh),\n\t\t  \"imp_dbh->connect: dsn = %s, uid = %s, pwd = %s\\n\",\n\t\t  dbname ? dbname : \"NULL\",\n\t\t  user ? user : \"NULL\",\n\t\t  password ? password : \"NULL\");\n\n  imp_dbh->stats.auto_reconnects_ok= 0;\n  imp_dbh->stats.auto_reconnects_failed= 0;\n  imp_dbh->bind_type_guessing= FALSE;\n  imp_dbh->bind_comment_placeholders= FALSE;\n  imp_dbh->has_transactions= TRUE;\n /* Safer we flip this to TRUE perl side if we detect a mod_perl env. */\n  imp_dbh->auto_reconnect = FALSE;\n\n  /* HELMUT */\n#if defined(sv_utf8_decode) && MYSQL_VERSION_ID >=SERVER_PREPARE_VERSION\n  imp_dbh->enable_utf8 = FALSE;  /* initialize mysql_enable_utf8 */\n#endif\n\n  if (!my_login(aTHX_ dbh, imp_dbh))\n  {\n    do_error(dbh, mysql_errno(imp_dbh->pmysql),\n            mysql_error(imp_dbh->pmysql) ,mysql_sqlstate(imp_dbh->pmysql));\n    return FALSE;\n  }\n\n    /*\n     *  Tell DBI, that dbh->disconnect should be called for this handle\n     */\n    DBIc_ACTIVE_on(imp_dbh);\n\n    /* Tell DBI, that dbh->destroy should be called for this handle */\n    DBIc_on(imp_dbh, DBIcf_IMPSET);\n\n    return TRUE;\n}",
  "abstract_func_before": "int dbd_db_login(SV* VAR_0, imp_dbh_t* VAR_1, char* VAR_2, char* VAR_3,\n\t\t char* VAR_4) {\n#ifdef VAR_5\n  VAR_5;\n#endif\n  VAR_6; \n  D_imp_xxh(VAR_0);\n\n  if (DBIc_TRACE_LEVEL(VAR_7) >= 2)\n    PerlIO_printf(DBIc_LOGPIO(VAR_7),\n\t\t  \"imp_dbh->connect: dsn = %s, uid = %s, pwd = %s\\n\",\n\t\t  VAR_2 ? VAR_2 : \"NULL\",\n\t\t  VAR_3 ? VAR_3 : \"NULL\",\n\t\t  VAR_4 ? VAR_4 : \"NULL\");\n\n  VAR_1->stats.auto_reconnects_ok= 0;\n  VAR_1->stats.auto_reconnects_failed= 0;\n  VAR_1->bind_type_guessing= FALSE;\n  VAR_1->bind_comment_placeholders= FALSE;\n  VAR_1->has_transactions= TRUE;\n /* COMMENT_0 */\n  VAR_1->auto_reconnect = FALSE;\n\n  /* COMMENT_1 */\n#if defined(VAR_8) && VAR_9 >=VAR_10\n  VAR_1->enable_utf8 = FALSE;  /* COMMENT_2 */\n#endif\n\n  if (!my_login(VAR_11 VAR_0, VAR_1))\n  {\n    do_error(VAR_0, mysql_errno(VAR_1->pmysql),\n            mysql_error(VAR_1->pmysql) ,mysql_sqlstate(VAR_1->pmysql));\n    return FALSE;\n  }\n\n    /* COMMENT_3 */\n                                                                       \n       \n    DBIc_ACTIVE_on(VAR_1);\n\n    /* COMMENT_6 */\n    DBIc_on(VAR_1, VAR_12);\n\n    return TRUE;\n}",
  "func_graph_path_before": "perl5-dbi/DBD-mysql/a56ae87a4c1c1fead7d09c3653905841ccccf1cc/dbdimp.c/vul/before/1.json",
  "func": "int dbd_db_login(SV* dbh, imp_dbh_t* imp_dbh, char* dbname, char* user,\n\t\t char* password) {\n#ifdef dTHR\n  dTHR;\n#endif\n  dTHX; \n  D_imp_xxh(dbh);\n\n  if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)\n    PerlIO_printf(DBIc_LOGPIO(imp_xxh),\n\t\t  \"imp_dbh->connect: dsn = %s, uid = %s, pwd = %s\\n\",\n\t\t  dbname ? dbname : \"NULL\",\n\t\t  user ? user : \"NULL\",\n\t\t  password ? password : \"NULL\");\n\n  imp_dbh->stats.auto_reconnects_ok= 0;\n  imp_dbh->stats.auto_reconnects_failed= 0;\n  imp_dbh->bind_type_guessing= FALSE;\n  imp_dbh->bind_comment_placeholders= FALSE;\n  imp_dbh->has_transactions= TRUE;\n /* Safer we flip this to TRUE perl side if we detect a mod_perl env. */\n  imp_dbh->auto_reconnect = FALSE;\n\n  /* HELMUT */\n#if defined(sv_utf8_decode) && MYSQL_VERSION_ID >=SERVER_PREPARE_VERSION\n  imp_dbh->enable_utf8 = FALSE;  /* initialize mysql_enable_utf8 */\n#endif\n\n  if (!my_login(aTHX_ dbh, imp_dbh))\n  {\n    if(imp_dbh->pmysql)\n        do_error(dbh, mysql_errno(imp_dbh->pmysql),\n                mysql_error(imp_dbh->pmysql) ,mysql_sqlstate(imp_dbh->pmysql));\n    return FALSE;\n  }\n\n    /*\n     *  Tell DBI, that dbh->disconnect should be called for this handle\n     */\n    DBIc_ACTIVE_on(imp_dbh);\n\n    /* Tell DBI, that dbh->destroy should be called for this handle */\n    DBIc_on(imp_dbh, DBIcf_IMPSET);\n\n    return TRUE;\n}",
  "abstract_func": "int dbd_db_login(SV* VAR_0, imp_dbh_t* VAR_1, char* VAR_2, char* VAR_3,\n\t\t char* VAR_4) {\n#ifdef VAR_5\n  VAR_5;\n#endif\n  VAR_6; \n  D_imp_xxh(VAR_0);\n\n  if (DBIc_TRACE_LEVEL(VAR_7) >= 2)\n    PerlIO_printf(DBIc_LOGPIO(VAR_7),\n\t\t  \"imp_dbh->connect: dsn = %s, uid = %s, pwd = %s\\n\",\n\t\t  VAR_2 ? VAR_2 : \"NULL\",\n\t\t  VAR_3 ? VAR_3 : \"NULL\",\n\t\t  VAR_4 ? VAR_4 : \"NULL\");\n\n  VAR_1->stats.auto_reconnects_ok= 0;\n  VAR_1->stats.auto_reconnects_failed= 0;\n  VAR_1->bind_type_guessing= FALSE;\n  VAR_1->bind_comment_placeholders= FALSE;\n  VAR_1->has_transactions= TRUE;\n /* COMMENT_0 */\n  VAR_1->auto_reconnect = FALSE;\n\n  /* COMMENT_1 */\n#if defined(VAR_8) && VAR_9 >=VAR_10\n  VAR_1->enable_utf8 = FALSE;  /* COMMENT_2 */\n#endif\n\n  if (!my_login(VAR_11 VAR_0, VAR_1))\n  {\n    if(VAR_1->pmysql)\n        do_error(VAR_0, mysql_errno(VAR_1->pmysql),\n                mysql_error(VAR_1->pmysql) ,mysql_sqlstate(VAR_1->pmysql));\n    return FALSE;\n  }\n\n    /* COMMENT_3 */\n                                                                       \n       \n    DBIc_ACTIVE_on(VAR_1);\n\n    /* COMMENT_6 */\n    DBIc_on(VAR_1, VAR_12);\n\n    return TRUE;\n}",
  "func_graph_path": "perl5-dbi/DBD-mysql/a56ae87a4c1c1fead7d09c3653905841ccccf1cc/dbdimp.c/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -28,8 +28,9 @@\n \n   if (!my_login(aTHX_ dbh, imp_dbh))\n   {\n-    do_error(dbh, mysql_errno(imp_dbh->pmysql),\n-            mysql_error(imp_dbh->pmysql) ,mysql_sqlstate(imp_dbh->pmysql));\n+    if(imp_dbh->pmysql)\n+        do_error(dbh, mysql_errno(imp_dbh->pmysql),\n+                mysql_error(imp_dbh->pmysql) ,mysql_sqlstate(imp_dbh->pmysql));\n     return FALSE;\n   }\n ",
  "diff_line_info": {
    "deleted_lines": [
      "    do_error(dbh, mysql_errno(imp_dbh->pmysql),",
      "            mysql_error(imp_dbh->pmysql) ,mysql_sqlstate(imp_dbh->pmysql));"
    ],
    "added_lines": [
      "    if(imp_dbh->pmysql)",
      "        do_error(dbh, mysql_errno(imp_dbh->pmysql),",
      "                mysql_error(imp_dbh->pmysql) ,mysql_sqlstate(imp_dbh->pmysql));"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/perl5-dbi/DBD-mysql/pull/28",
  "description": {
    "pr_info": {
      "title": "fix use-after-free crash in RT #97625",
      "number": 28
    },
    "comment": [
      "fix use-after-free crash in RT #97625 and print errors before freeing resources.\n",
      "On 11/20/14 15:41, Patrick Galbraith wrote:\n\n> Merged #28 https://github.com/perl5-dbi/DBD-mysql/pull/28.\n> \n> â€”\n> Reply to this email directly or view it on GitHub https://github.com/perl5-dbi/DBD-mysql/pull/28#event-196176034.\n> \n> There is a conflict in the commit:\n> https://github.com/perl5-dbi/DBD-mysql/commit/283c5dfc42c530aab06ad032cf25b816c0e70780\n>  Cheers\n>   Giovanni\n"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades; **Confidence:** 1.0"
}