{
  "cve_id": "CVE-2018-20406",
  "cwe_ids": [
    "CWE-190"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "python/cpython",
  "commit_msg": "closes bpo-34656: Avoid relying on signed overflow in _pickle memos. (GH-9261)",
  "commit_hash": "a4ae828ee416a66d8c7bf5ee71d653c2cc6a26dd",
  "git_url": "https://github.com/python/cpython/commit/a4ae828ee416a66d8c7bf5ee71d653c2cc6a26dd",
  "file_path": "Modules/_pickle.c",
  "func_name": "_Unpickler_ResizeMemoList",
  "func_before": "static int\n_Unpickler_ResizeMemoList(UnpicklerObject *self, Py_ssize_t new_size)\n{\n    Py_ssize_t i;\n\n    assert(new_size > self->memo_size);\n\n    PyObject **memo_new = self->memo;\n    PyMem_RESIZE(memo_new, PyObject *, new_size);\n    if (memo_new == NULL) {\n        PyErr_NoMemory();\n        return -1;\n    }\n    self->memo = memo_new;\n    for (i = self->memo_size; i < new_size; i++)\n        self->memo[i] = NULL;\n    self->memo_size = new_size;\n    return 0;\n}",
  "abstract_func_before": "static int\n_Unpickler_ResizeMemoList(UnpicklerObject *VAR_0, Py_ssize_t VAR_1)\n{\n    Py_ssize_t VAR_2;\n\n    assert(VAR_1 > VAR_0->memo_size);\n\n    PyObject **VAR_3 = VAR_0->memo;\n    PyMem_RESIZE(VAR_3, PyObject *, VAR_1);\n    if (VAR_3 == NULL) {\n        PyErr_NoMemory();\n        return -1;\n    }\n    VAR_0->memo = VAR_3;\n    for (VAR_2 = VAR_0->memo_size; VAR_2 < VAR_1; VAR_2++)\n        VAR_0->memo[VAR_2] = NULL;\n    VAR_0->memo_size = VAR_1;\n    return 0;\n}",
  "func_graph_path_before": "python/cpython/a4ae828ee416a66d8c7bf5ee71d653c2cc6a26dd/_pickle.c/vul/before/3.json",
  "func": "static int\n_Unpickler_ResizeMemoList(UnpicklerObject *self, size_t new_size)\n{\n    size_t i;\n\n    assert(new_size > self->memo_size);\n\n    PyObject **memo_new = self->memo;\n    PyMem_RESIZE(memo_new, PyObject *, new_size);\n    if (memo_new == NULL) {\n        PyErr_NoMemory();\n        return -1;\n    }\n    self->memo = memo_new;\n    for (i = self->memo_size; i < new_size; i++)\n        self->memo[i] = NULL;\n    self->memo_size = new_size;\n    return 0;\n}",
  "abstract_func": "static int\n_Unpickler_ResizeMemoList(UnpicklerObject *VAR_0, size_t VAR_1)\n{\n    size_t VAR_2;\n\n    assert(VAR_1 > VAR_0->memo_size);\n\n    PyObject **VAR_3 = VAR_0->memo;\n    PyMem_RESIZE(VAR_3, PyObject *, VAR_1);\n    if (VAR_3 == NULL) {\n        PyErr_NoMemory();\n        return -1;\n    }\n    VAR_0->memo = VAR_3;\n    for (VAR_2 = VAR_0->memo_size; VAR_2 < VAR_1; VAR_2++)\n        VAR_0->memo[VAR_2] = NULL;\n    VAR_0->memo_size = VAR_1;\n    return 0;\n}",
  "func_graph_path": "python/cpython/a4ae828ee416a66d8c7bf5ee71d653c2cc6a26dd/_pickle.c/vul/after/3.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,7 @@\n static int\n-_Unpickler_ResizeMemoList(UnpicklerObject *self, Py_ssize_t new_size)\n+_Unpickler_ResizeMemoList(UnpicklerObject *self, size_t new_size)\n {\n-    Py_ssize_t i;\n+    size_t i;\n \n     assert(new_size > self->memo_size);\n ",
  "diff_line_info": {
    "deleted_lines": [
      "_Unpickler_ResizeMemoList(UnpicklerObject *self, Py_ssize_t new_size)",
      "    Py_ssize_t i;"
    ],
    "added_lines": [
      "_Unpickler_ResizeMemoList(UnpicklerObject *self, size_t new_size)",
      "    size_t i;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/python/cpython/pull/9261",
  "description": {
    "pr_info": {
      "title": "bpo-34656: Avoid relying on signed overflow in _pickle memos.",
      "number": 9261
    },
    "comment": [
      "<!--\r\nThanks for your contribution!\r\nPlease read this comment in its entirety. It's quite important.\r\n\r\n# Pull Request title\r\n\r\nIt should be in the following format:\r\n\r\n```\r\nbpo-NNNN: Summary of the changes made\r\n```\r\n\r\nWhere: bpo-NNNN refers to the issue number in the https://bugs.python.org.\r\n\r\nMost PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue.\r\n\r\n# Backport Pull Request title\r\n\r\nIf this is a backport PR (PR made against branches other than `master`),\r\nplease ensure that the PR title is in the following format:\r\n\r\n```\r\n[X.Y] <title from the original PR> (GH-NNNN)\r\n```\r\n\r\nWhere: [X.Y] is the branch name, e.g. [3.6].\r\n\r\nGH-NNNN refers to the PR number from `master`.\r\n\r\n-->\r\n\n\n<!-- issue-number: [bpo-1621](https://www.bugs.python.org/issue1621) -->\nhttps://bugs.python.org/issue1621\n<!-- /issue-number -->\n",
      "Thanks @benjaminp for the PR üåÆüéâ.. I'm working now to backport this PR to: 3.6, 3.7.\nüêçüçí‚õèü§ñ ",
      "[GH-9465](https://github.com/python/cpython/pull/9465) is a backport of this pull request to the [3.7 branch](https://github.com/python/cpython/tree/3.7).",
      "[GH-9466](https://github.com/python/cpython/pull/9466) is a backport of this pull request to the [3.6 branch](https://github.com/python/cpython/tree/3.6)."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.9"
}