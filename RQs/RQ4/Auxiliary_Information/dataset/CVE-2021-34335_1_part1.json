{
  "cve_id": "CVE-2021-34335",
  "cwe_ids": [
    "CWE-369"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "Exiv2/exiv2",
  "commit_msg": "Defensive coding to avoid 0x80000000/0xFFFFFFFF FPE.",
  "commit_hash": "2d8d44e47b1500030e5b249bffbaf1e80aa74815",
  "git_url": "https://github.com/Exiv2/exiv2/commit/2d8d44e47b1500030e5b249bffbaf1e80aa74815",
  "file_path": "include/exiv2/value.hpp",
  "func_name": "ValueType<Rational>::toLong",
  "func_before": "inline long ValueType<Rational>::toLong(long n) const\n    {\n        ok_ = (value_.at(n).second != 0 && INT_MIN < value_.at(n).first && value_.at(n).first < INT_MAX );\n        if (!ok_) return 0;\n        return value_.at(n).first / value_.at(n).second;\n    }",
  "abstract_func_before": "inline long ValueType<Rational>::toLong(long VAR_0) const\n    {\n        VAR_1 = (VAR_2.at(VAR_0).second != 0 && VAR_3 < VAR_2.at(VAR_0).first && VAR_2.at(VAR_0).first < VAR_4 );\n        if (!VAR_1) return 0;\n        return VAR_2.at(VAR_0).first / VAR_2.at(VAR_0).second;\n    }",
  "func_graph_path_before": "Exiv2/exiv2/2d8d44e47b1500030e5b249bffbaf1e80aa74815/value.hpp/vul/before/2.json",
  "func": "inline long ValueType<Rational>::toLong(long n) const\n    {\n        ok_ = (value_.at(n).second > 0 && INT_MIN < value_.at(n).first && value_.at(n).first < INT_MAX );\n        if (!ok_) return 0;\n        return value_.at(n).first / value_.at(n).second;\n    }",
  "abstract_func": "inline long ValueType<Rational>::toLong(long VAR_0) const\n    {\n        VAR_1 = (VAR_2.at(VAR_0).second > 0 && VAR_3 < VAR_2.at(VAR_0).first && VAR_2.at(VAR_0).first < VAR_4 );\n        if (!VAR_1) return 0;\n        return VAR_2.at(VAR_0).first / VAR_2.at(VAR_0).second;\n    }",
  "func_graph_path": "Exiv2/exiv2/2d8d44e47b1500030e5b249bffbaf1e80aa74815/value.hpp/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,6 @@\n inline long ValueType<Rational>::toLong(long n) const\n     {\n-        ok_ = (value_.at(n).second != 0 && INT_MIN < value_.at(n).first && value_.at(n).first < INT_MAX );\n+        ok_ = (value_.at(n).second > 0 && INT_MIN < value_.at(n).first && value_.at(n).first < INT_MAX );\n         if (!ok_) return 0;\n         return value_.at(n).first / value_.at(n).second;\n     }",
  "diff_line_info": {
    "deleted_lines": [
      "        ok_ = (value_.at(n).second != 0 && INT_MIN < value_.at(n).first && value_.at(n).first < INT_MAX );"
    ],
    "added_lines": [
      "        ok_ = (value_.at(n).second > 0 && INT_MIN < value_.at(n).first && value_.at(n).first < INT_MAX );"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/Exiv2/exiv2/pull/1750",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/Exiv2/exiv2/pull/1750: 403 Client Error: Forbidden for url: https://api.github.com/repos/Exiv2/exiv2/pulls/1750",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 0.8  \n**Reasoning:** The patch addresses a divide-by-zero issue, which can be a security vulnerability, though lack of explicit security context lowers confidence."
}