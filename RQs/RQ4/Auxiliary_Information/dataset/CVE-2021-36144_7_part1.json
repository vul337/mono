{
  "cve_id": "CVE-2021-36144",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "projectacrn/acrn-hypervisor",
  "commit_msg": "dm: Reset virtio device before release\n\nWith virtio polling mode enabled, a timer is running in the virtio\nbackend service. And the timer will also be triggered if its frondend\ndriver didn't do the device reset in shutdown. A freed virtio device\nwill be accessed in the polling timer handler.\n\nDo the virtio reset() callback specifically to clear the polling timer\nbefore the free.\n\nTracked-On: #6147\nSigned-off-by: Shuo A Liu <shuo.a.liu@intel.com>\nSigned-off-by: Yonghua Huang <yonghua.huang@intel.com>",
  "commit_hash": "dd88504804e186029f845a166dc5c31695e2cca2",
  "git_url": "https://github.com/projectacrn/acrn-hypervisor/commit/dd88504804e186029f845a166dc5c31695e2cca2",
  "file_path": "devicemodel/hw/pci/virtio/virtio_net.c",
  "func_name": "virtio_net_teardown",
  "func_before": "static void\nvirtio_net_teardown(void *param)\n{\n\tstruct virtio_net *net;\n\n\tnet = (struct virtio_net *)param;\n\tif (!net)\n\t\treturn;\n\n\tif (net->tapfd >= 0) {\n\t\tclose(net->tapfd);\n\t\tnet->tapfd = -1;\n\t} else\n\t\tpr_err(\"net->tapfd is -1!\\n\");\n\n\tfree(net);\n}",
  "abstract_func_before": "static void\nvirtio_net_teardown(void *VAR_0)\n{\n\tstruct virtio_net *VAR_1;\n\n\tVAR_1 = (struct virtio_net *)VAR_0;\n\tif (!VAR_1)\n\t\treturn;\n\n\tif (VAR_1->tapfd >= 0) {\n\t\tclose(VAR_1->tapfd);\n\t\tVAR_1->tapfd = -1;\n\t} else\n\t\tpr_err(\"net->tapfd is -1!\\n\");\n\n\tfree(VAR_1);\n}",
  "func_graph_path_before": "projectacrn/acrn-hypervisor/dd88504804e186029f845a166dc5c31695e2cca2/virtio_net.c/vul/before/0.json",
  "func": "static void\nvirtio_net_teardown(void *param)\n{\n\tstruct virtio_net *net;\n\n\tnet = (struct virtio_net *)param;\n\tif (!net)\n\t\treturn;\n\n\tif (net->tapfd >= 0) {\n\t\tclose(net->tapfd);\n\t\tnet->tapfd = -1;\n\t} else\n\t\tpr_err(\"net->tapfd is -1!\\n\");\n\n\tvirtio_reset_dev(&net->base);\n\tfree(net);\n}",
  "abstract_func": "static void\nvirtio_net_teardown(void *VAR_0)\n{\n\tstruct virtio_net *VAR_1;\n\n\tVAR_1 = (struct virtio_net *)VAR_0;\n\tif (!VAR_1)\n\t\treturn;\n\n\tif (VAR_1->tapfd >= 0) {\n\t\tclose(VAR_1->tapfd);\n\t\tVAR_1->tapfd = -1;\n\t} else\n\t\tpr_err(\"net->tapfd is -1!\\n\");\n\n\tvirtio_reset_dev(&VAR_1->base);\n\tfree(VAR_1);\n}",
  "func_graph_path": "projectacrn/acrn-hypervisor/dd88504804e186029f845a166dc5c31695e2cca2/virtio_net.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -13,5 +13,6 @@\n \t} else\n \t\tpr_err(\"net->tapfd is -1!\\n\");\n \n+\tvirtio_reset_dev(&net->base);\n \tfree(net);\n }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\tvirtio_reset_dev(&net->base);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/projectacrn/acrn-hypervisor/pull/6268",
  "description": {
    "pr_info": {
      "title": "dm: Reset virtio device before release",
      "number": 6268
    },
    "comment": [
      "With virtio polling mode enabled, a timer is running in the virtio\r\nbackend service. And the timer will also be triggered if its frondend\r\ndriver didn't do the device reset in shutdown. A freed virtio device\r\nwill be accessed in the polling timer handler.\r\n\r\nDo the virtio reset() callback specifically to clear the polling timer\r\nbefore the free.\r\n\r\nTracked-On: #6147\r\nSigned-off-by: Shuo A Liu <shuo.a.liu@intel.com>\r\nSigned-off-by: Yonghua Huang <yonghua.huang@intel.com>",
      "@shuox  @ywan170  this PR to back backport from release_2.5 branch, please review.",
      "No new violations to the coding guideline detected.<br>No New Name Conflict<br>No New Function Declaration/Definition Mismatch"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95  \n\nThe patch addresses a potential memory access after free issue, which is a security concern."
}