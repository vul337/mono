{
  "cve_id": "CVE-2014-9748",
  "cwe_ids": [
    "CWE-362"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "libuv",
  "commit_msg": "win: fix unsavory rwlock fallback implementation\n\nBefore this patch an uv_mutex_t (backed by a critical section) could be\nreleased by a tread different from the thread that acquired it, which is\nnot allowed. This is fixed by using a semaphore instead.\n\nNote that the affected code paths were used on Windows XP and Windows\nServer 2003 only.\n\nThis is a back-port of commits 3eb6764, 1ad6ad7, 9a4fd26, 9823922\n85adf43 and bd1777f from the v1.x branch.\n\nFixes: https://github.com/libuv/libuv/issues/515\nRefs: https://github.com/libuv/libuv/pull/525\nPR-URL: https://github.com/libuv/libuv/pull/903\nReviewed-By: Ben Noordhuis <info@bnoordhuis.nl>\nReviewed-By: Bert Belder <bertbelder@gmail.com>",
  "commit_hash": "d4ff8fd5c175bc825258da3ffb01bd21bd5a6202",
  "git_url": "https://github.com/libuv/libuv/commit/d4ff8fd5c175bc825258da3ffb01bd21bd5a6202",
  "file_path": "src/unix/thread.c",
  "func_name": "uv_rwlock_trywrlock",
  "func_before": "int uv_rwlock_trywrlock(uv_rwlock_t* rwlock) {\n  int r;\n\n  r = pthread_rwlock_trywrlock(rwlock);\n\n  if (r && r != EBUSY && r != EAGAIN)\n    abort();\n\n  if (r)\n    return -1;\n  else\n    return 0;\n}",
  "abstract_func_before": "int uv_rwlock_trywrlock(uv_rwlock_t* VAR_0) {\n  int VAR_1;\n\n  VAR_1 = pthread_rwlock_trywrlock(VAR_0);\n\n  if (VAR_1 && VAR_1 != VAR_2 && VAR_1 != VAR_3)\n    abort();\n\n  if (VAR_1)\n    return -1;\n  else\n    return 0;\n}",
  "func_graph_path_before": "libuv/d4ff8fd5c175bc825258da3ffb01bd21bd5a6202/thread.c/vul/before/2.json",
  "func": "int uv_rwlock_trywrlock(uv_rwlock_t* rwlock) {\n  int r;\n\n  r = pthread_rwlock_trywrlock(rwlock);\n\n  if (r) {\n    if (r != EBUSY && r != EAGAIN)\n      abort();\n    return -1;\n  }\n  return 0;\n}",
  "abstract_func": "int uv_rwlock_trywrlock(uv_rwlock_t* VAR_0) {\n  int VAR_1;\n\n  VAR_1 = pthread_rwlock_trywrlock(VAR_0);\n\n  if (VAR_1) {\n    if (VAR_1 != VAR_2 && VAR_1 != VAR_3)\n      abort();\n    return -1;\n  }\n  return 0;\n}",
  "func_graph_path": "libuv/d4ff8fd5c175bc825258da3ffb01bd21bd5a6202/thread.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -3,11 +3,10 @@\n \n   r = pthread_rwlock_trywrlock(rwlock);\n \n-  if (r && r != EBUSY && r != EAGAIN)\n-    abort();\n-\n-  if (r)\n+  if (r) {\n+    if (r != EBUSY && r != EAGAIN)\n+      abort();\n     return -1;\n-  else\n-    return 0;\n+  }\n+  return 0;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "  if (r && r != EBUSY && r != EAGAIN)",
      "    abort();",
      "",
      "  if (r)",
      "  else",
      "    return 0;"
    ],
    "added_lines": [
      "  if (r) {",
      "    if (r != EBUSY && r != EAGAIN)",
      "      abort();",
      "  }",
      "  return 0;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/libuv/libuv/pull/903",
  "description": {
    "pr_info": {
      "title": "win: fix unsavory rwlock fallback implementation",
      "number": 903
    },
    "comment": [
      "Before this patch an uv_mutex_t (backed by a critical section) could be\nreleased by a tread different from the thread that acquired it, which is\nnot allowed. This is fixed by using a semaphore instead.\n\nNote that the affected code paths were used on Windows XP and Windows\nServer 2003 only.\n\nThis is a back-port of commits 3eb6764, 1ad6ad7, 9a4fd26, 9823922\n85adf43 and bd1777f from the v1.x branch.\n\nFixes: https://github.com/libuv/libuv/issues/515\nRefs: https://github.com/libuv/libuv/pull/525\n",
      "Windows XP \"CI\"\n![Imgur](http://i.imgur.com/qD71muU.png)\n\nSome tests fail (as thy were before) but the added one passes.\n",
      "Newer Windows CI: https://ci.nodejs.org/view/libuv/job/libuv-test-commit-windows/73/\n",
      "Notes: I had to backport https://github.com/libuv/libuv/pull/535 as well, to make the test pass. The test was also adapted because in 0.10 we returned -1 not real errors.\n\n/cc @bnoordhuis @piscisaureus @rvagg\n",
      "Windows 7 results:\n\n```\n[%  96|+ 182|-   7|T   1|S   0]: thread_mutex\n[%  96|+ 183|-   7|T   1|S   0]: thread_rwlock\n[%  97|+ 184|-   7|T   1|S   0]: thread_rwlock_trylock\n```\n\nAs far as I'm concerned, we are good to go.\n",
      "LGTM at a quick glance.\n",
      "LGTM\n"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 0.8  \n\nThe patch addresses a thread safety issue in the rwlock implementation, which is a security concern, despite the absence of a CVE reference. The confidence is high due to the nature of the fix, though slightly reduced without explicit security linkage."
}