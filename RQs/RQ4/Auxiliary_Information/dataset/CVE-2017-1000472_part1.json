{
  "cve_id": "CVE-2017-1000472",
  "cwe_ids": [
    "CWE-22"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "pocoproject/poco",
  "commit_msg": "- fix Zip Decompress Parent Path Injection #1968 bug\n- add valid patch check test\n- add vulnearbility triggering zip archive and test\n- remove temporary test output files\n- if possible, redirect temporary file generation to temp directory or\n- delete temporary files after tests",
  "commit_hash": "f5b2cf3dd6976ae53b2f3c9618b0087a0646cc7d",
  "git_url": "https://github.com/pocoproject/poco/commit/f5b2cf3dd6976ae53b2f3c9618b0087a0646cc7d",
  "file_path": "Zip/src/ZipCommon.cpp",
  "func_name": "ZipCommon::isValidPath",
  "func_before": "bool ZipCommon::isValidPath(const std::string& path)\n{\n\tif (path == \"..\")\n\t\treturn false;\n\tif (path.compare(0, 3, \"../\") == 0)\n\t\treturn false;\n\tif (path.compare(0, 3, \"..\\\\\") == 0)\n\t\treturn false;\n\tif (path.find(\"/..\") != std::string::npos)\n\t\treturn false;\n\tif (path.find(\"\\\\..\") != std::string::npos)\n\t\treturn false;\n\treturn true;\n}",
  "abstract_func_before": "bool ZipCommon::isValidPath(const std::string& VAR_0)\n{\n\tif (VAR_0 == \"..\")\n\t\treturn false;\n\tif (VAR_0.compare(0, 3, \"../\") == 0)\n\t\treturn false;\n\tif (VAR_0.compare(0, 3, \"..\\\\\") == 0)\n\t\treturn false;\n\tif (VAR_0.find(\"/..\") != std::string::npos)\n\t\treturn false;\n\tif (VAR_0.find(\"\\\\..\") != std::string::npos)\n\t\treturn false;\n\treturn true;\n}",
  "func_graph_path_before": "pocoproject/poco/f5b2cf3dd6976ae53b2f3c9618b0087a0646cc7d/ZipCommon.cpp/vul/before/0.json",
  "func": "bool ZipCommon::isValidPath(const std::string& path)\n{\n\n\tif (!Path(path).isRelative())\n\t\treturn false;\n\tif (path == \"..\")\n\t\treturn false;\n\tif ((path.size() >= 3) && path.compare(0, 3, \"../\") == 0)\n\t\treturn false;\n\tif ((path.size() >= 3) && path.compare(0, 3, \"..\\\\\") == 0)\n\t\treturn false;\n\tif (path.find(\"/../\") != std::string::npos)\n\t\treturn false;\n\tif (path.find(\"\\\\..\\\\\") != std::string::npos)\n\t\treturn false;\n\tif (path.find(\"/..\\\\\") != std::string::npos)\n\t\treturn false;\n\tif (path.find(\"\\\\../\") != std::string::npos)\n\t\treturn false;\n\tif ((path.size() >= 2) && path.compare(0, 2, \"~/\") == 0)\n\t\treturn false;\n\tif (path.size() > 0 && (path[0] == '/' || path[0] == '\\\\'))\n\t\treturn false;\n\treturn true;\n}",
  "abstract_func": "bool ZipCommon::isValidPath(const std::string& VAR_0)\n{\n\n\tif (!Path(VAR_0).isRelative())\n\t\treturn false;\n\tif (VAR_0 == \"..\")\n\t\treturn false;\n\tif ((VAR_0.size() >= 3) && VAR_0.compare(0, 3, \"../\") == 0)\n\t\treturn false;\n\tif ((VAR_0.size() >= 3) && VAR_0.compare(0, 3, \"..\\\\\") == 0)\n\t\treturn false;\n\tif (VAR_0.find(\"/../\") != std::string::npos)\n\t\treturn false;\n\tif (VAR_0.find(\"\\\\..\\\\\") != std::string::npos)\n\t\treturn false;\n\tif (VAR_0.find(\"/..\\\\\") != std::string::npos)\n\t\treturn false;\n\tif (VAR_0.find(\"\\\\../\") != std::string::npos)\n\t\treturn false;\n\tif ((VAR_0.size() >= 2) && VAR_0.compare(0, 2, \"~/\") == 0)\n\t\treturn false;\n\tif (VAR_0.size() > 0 && (VAR_0[0] == '/' || VAR_0[0] == '\\\\'))\n\t\treturn false;\n\treturn true;\n}",
  "func_graph_path": "pocoproject/poco/f5b2cf3dd6976ae53b2f3c9618b0087a0646cc7d/ZipCommon.cpp/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,14 +1,25 @@\n bool ZipCommon::isValidPath(const std::string& path)\n {\n+\n+\tif (!Path(path).isRelative())\n+\t\treturn false;\n \tif (path == \"..\")\n \t\treturn false;\n-\tif (path.compare(0, 3, \"../\") == 0)\n+\tif ((path.size() >= 3) && path.compare(0, 3, \"../\") == 0)\n \t\treturn false;\n-\tif (path.compare(0, 3, \"..\\\\\") == 0)\n+\tif ((path.size() >= 3) && path.compare(0, 3, \"..\\\\\") == 0)\n \t\treturn false;\n-\tif (path.find(\"/..\") != std::string::npos)\n+\tif (path.find(\"/../\") != std::string::npos)\n \t\treturn false;\n-\tif (path.find(\"\\\\..\") != std::string::npos)\n+\tif (path.find(\"\\\\..\\\\\") != std::string::npos)\n+\t\treturn false;\n+\tif (path.find(\"/..\\\\\") != std::string::npos)\n+\t\treturn false;\n+\tif (path.find(\"\\\\../\") != std::string::npos)\n+\t\treturn false;\n+\tif ((path.size() >= 2) && path.compare(0, 2, \"~/\") == 0)\n+\t\treturn false;\n+\tif (path.size() > 0 && (path[0] == '/' || path[0] == '\\\\'))\n \t\treturn false;\n \treturn true;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\tif (path.compare(0, 3, \"../\") == 0)",
      "\tif (path.compare(0, 3, \"..\\\\\") == 0)",
      "\tif (path.find(\"/..\") != std::string::npos)",
      "\tif (path.find(\"\\\\..\") != std::string::npos)"
    ],
    "added_lines": [
      "",
      "\tif (!Path(path).isRelative())",
      "\t\treturn false;",
      "\tif ((path.size() >= 3) && path.compare(0, 3, \"../\") == 0)",
      "\tif ((path.size() >= 3) && path.compare(0, 3, \"..\\\\\") == 0)",
      "\tif (path.find(\"/../\") != std::string::npos)",
      "\tif (path.find(\"\\\\..\\\\\") != std::string::npos)",
      "\t\treturn false;",
      "\tif (path.find(\"/..\\\\\") != std::string::npos)",
      "\t\treturn false;",
      "\tif (path.find(\"\\\\../\") != std::string::npos)",
      "\t\treturn false;",
      "\tif ((path.size() >= 2) && path.compare(0, 2, \"~/\") == 0)",
      "\t\treturn false;",
      "\tif (path.size() > 0 && (path[0] == '/' || path[0] == '\\\\'))"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/pocoproject/poco/pull/2031",
  "description": {
    "pr_info": {
      "title": "Feature gradle",
      "number": 2031
    },
    "comment": [
      "HI\r\n\r\nThis PR is merging the latest commit from the develop branch as well as latest fixes for building Poco with Gradle on version 2.0.0."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix;  \n**Confidence:** 0.9"
}