{
  "cve_id": "CVE-2022-2414",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
  "cvss_is_v3": true,
  "repo_name": "dogtagpki/pki",
  "commit_msg": "Disable access to external entities when parsing XML\n\nThis reduces the vulnerability of XML parsers to XXE (XML external\nentity) injection.\n\nThe best way to prevent XXE is to stop using XML altogether, which we do\nplan to do. Until that happens I consider it worthwhile to tighten the\nsecurity here though.",
  "commit_hash": "16deffdf7548e305507982e246eb9fd1eac414fd",
  "git_url": "https://github.com/dogtagpki/pki/commit/16deffdf7548e305507982e246eb9fd1eac414fd",
  "file_path": "base/common/src/main/java/com/netscape/certsrv/profile/ProfileParameter.java",
  "func_name": "fromXML",
  "func_before": "public static ProfileParameter fromXML(String xml) throws Exception {\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        DocumentBuilder builder = factory.newDocumentBuilder();\n        Document document = builder.parse(new InputSource(new StringReader(xml)));\n\n        Element profileParameterElement = document.getDocumentElement();\n        return fromDOM(profileParameterElement);\n    }",
  "abstract_func_before": "public static ProfileParameter fromXML(String VAR_0) throws Exception {\n        DocumentBuilderFactory VAR_1 = VAR_2.newInstance();\n        DocumentBuilder VAR_3 = VAR_1.newDocumentBuilder();\n        Document VAR_4 = VAR_3.parse(new InputSource(new StringReader(VAR_0)));\n\n        Element VAR_5 = VAR_4.getDocumentElement();\n        return fromDOM(VAR_5);\n    }",
  "func_graph_path_before": "dogtagpki/pki/16deffdf7548e305507982e246eb9fd1eac414fd/ProfileParameter.java/vul/before/1.json",
  "func": "public static ProfileParameter fromXML(String xml) throws Exception {\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        factory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n        DocumentBuilder builder = factory.newDocumentBuilder();\n        Document document = builder.parse(new InputSource(new StringReader(xml)));\n\n        Element profileParameterElement = document.getDocumentElement();\n        return fromDOM(profileParameterElement);\n    }",
  "abstract_func": "public static ProfileParameter fromXML(String VAR_0) throws Exception {\n        DocumentBuilderFactory VAR_1 = VAR_2.newInstance();\n        VAR_1.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n        DocumentBuilder VAR_3 = VAR_1.newDocumentBuilder();\n        Document VAR_4 = VAR_3.parse(new InputSource(new StringReader(VAR_0)));\n\n        Element VAR_5 = VAR_4.getDocumentElement();\n        return fromDOM(VAR_5);\n    }",
  "func_graph_path": "dogtagpki/pki/16deffdf7548e305507982e246eb9fd1eac414fd/ProfileParameter.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,6 @@\n public static ProfileParameter fromXML(String xml) throws Exception {\n         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+        factory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n         DocumentBuilder builder = factory.newDocumentBuilder();\n         Document document = builder.parse(new InputSource(new StringReader(xml)));\n ",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        factory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/dogtagpki/pki/pull/4021",
  "description": {
    "pr_info": {
      "title": "Disable access to external entities when parsing XML",
      "number": 4021
    },
    "comment": [
      "This reduces the vulnerability of XML parsers to XXE (XML external\r\nentity) injection.\r\n\r\nThe best way to prevent XXE is to stop using XML altogether, which we do\r\nplan to do. Until that happens I consider it worthwhile to tighten the\r\nsecurity here though.",
      "I considered making a class similar to `JSONSerializer` but it felt like too much work for deprecated code, that is actively marked for removal. Therefore I just added in the necessary updates per-instantiation.",
      "It's a shame that Sonar doesn't work on PRs (yet) because then we could have checked that I caught them all.",
      "Thanks @edewata !"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "The commit addresses a known security vulnerability (XXE) by modifying XML parsing to prevent external entities. The code change directly implements a security fix, aligning perfectly with the commit description.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}