{
  "cve_id": "CVE-2020-7226",
  "cwe_ids": [
    "CWE-770"
  ],
  "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "cvss_is_v3": false,
  "repo_name": "vt-middleware/cryptacular",
  "commit_msg": "Define new ciphertext header format.\n\nNew format does not allocate any memory until HMAC check passes, which\nguards against untrusted input. All encryption components have been\nupdated to use the new header, while preserving backward compatibility\nto decrypt messages encrypted with the old format. The decoding process\nfor the old header has been hardened to impose reasonable limits on header\nfields: nonce sizes up to 255 bytes, key names up to 500 bytes.\n\nFixes #52.",
  "commit_hash": "8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
  "git_url": "https://github.com/vt-middleware/cryptacular/commit/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25",
  "file_path": "src/main/java/org/cryptacular/bean/AbstractCipherBean.java",
  "func_name": "decrypt",
  "func_before": "@Override\n  public void decrypt(final InputStream input, final OutputStream output)\n      throws CryptoException, EncodingException, StreamException\n  {\n    final CiphertextHeader header = CiphertextHeader.decode(input);\n    if (header.getKeyName() == null) {\n      throw new CryptoException(\"Ciphertext header does not contain required key\");\n    }\n    process(header, false, input, output);\n  }",
  "abstract_func_before": "@Override\n  public void decrypt(final InputStream VAR_0, final OutputStream VAR_1)\n      throws CryptoException, EncodingException, StreamException\n  {\n    final CiphertextHeader VAR_2 = VAR_3.decode(VAR_0);\n    if (VAR_2.getKeyName() == null) {\n      throw new CryptoException(\"Ciphertext header does not contain required key\");\n    }\n    process(VAR_2, false, VAR_0, VAR_1);\n  }",
  "func_graph_path_before": "vt-middleware/cryptacular/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25/AbstractCipherBean.java/vul/before/1.json",
  "func": "@Override\n  public void decrypt(final InputStream input, final OutputStream output)\n      throws CryptoException, EncodingException, StreamException\n  {\n    process(CipherUtil.decodeHeader(input, this::lookupKey), false, input, output);\n  }",
  "abstract_func": "@Override\n  public void decrypt(final InputStream VAR_0, final OutputStream VAR_1)\n      throws CryptoException, EncodingException, StreamException\n  {\n    process(VAR_2.decodeHeader(VAR_0, this::VAR_3), false, VAR_0, VAR_1);\n  }",
  "func_graph_path": "vt-middleware/cryptacular/8c6c7528f1e24c6b71f3e36db0cb8a697256ce25/AbstractCipherBean.java/vul/after/1.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -2,9 +2,5 @@\n   public void decrypt(final InputStream input, final OutputStream output)\n       throws CryptoException, EncodingException, StreamException\n   {\n-    final CiphertextHeader header = CiphertextHeader.decode(input);\n-    if (header.getKeyName() == null) {\n-      throw new CryptoException(\"Ciphertext header does not contain required key\");\n-    }\n-    process(header, false, input, output);\n+    process(CipherUtil.decodeHeader(input, this::lookupKey), false, input, output);\n   }",
  "diff_line_info": {
    "deleted_lines": [
      "    final CiphertextHeader header = CiphertextHeader.decode(input);",
      "    if (header.getKeyName() == null) {",
      "      throw new CryptoException(\"Ciphertext header does not contain required key\");",
      "    }",
      "    process(header, false, input, output);"
    ],
    "added_lines": [
      "    process(CipherUtil.decodeHeader(input, this::lookupKey), false, input, output);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/vt-middleware/cryptacular/pull/53",
  "description": {
    "pr_info": {
      "title": "Define new ciphertext header format.",
      "number": 53
    },
    "comment": [
      "New format does not allocate any memory until HMAC check passes, which\r\nguards against untrusted input. All encryption components have been\r\nupdated to use the new header, while preserving backward compatibility\r\nto decrypt messages encrypted with the old format. The decoding process\r\nfor the old header has been hardened to impose reasonable limits on header\r\nfields: nonce sizes up to 255 bytes, key names up to 500 bytes.\r\n\r\nFixes #52."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.95"
}