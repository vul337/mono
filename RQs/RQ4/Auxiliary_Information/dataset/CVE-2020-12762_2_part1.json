{
  "cve_id": "CVE-2020-12762",
  "cwe_ids": [
    "CWE-190",
    "CWE-787"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "rsyslog/libfastjson",
  "commit_msg": "Fix CVE-2020-12762\n\nreference: https://github.com/json-c/json-c/pull/592/files\n\nI reproduce this CVE using the code from https://github.com/json-c/json-c/pull/592\n\nAnd it fix it and no more segmentation fault",
  "commit_hash": "f51fcd59a8bbeb60eaf8ae0e398556be2fa3317a",
  "git_url": "https://github.com/rsyslog/libfastjson/commit/f51fcd59a8bbeb60eaf8ae0e398556be2fa3317a",
  "file_path": "printbuf.c",
  "func_name": "printbuf_memset",
  "func_before": "int printbuf_memset(struct printbuf *pb, int offset, int charvalue, int len)\n{\n\tint size_needed;\n\n\tif (offset == -1)\n\t\toffset = pb->bpos;\n\tsize_needed = offset + len;\n\tif (pb->size < size_needed)\n\t{\n\t\tif (printbuf_extend(pb, size_needed) < 0)\n\t\t\treturn -1;\n\t}\n\n\tmemset(pb->buf + offset, charvalue, len);\n\tif (pb->bpos < size_needed)\n\t\tpb->bpos = size_needed;\n\n\treturn 0;\n}",
  "abstract_func_before": "int printbuf_memset(struct printbuf *VAR_0, int VAR_1, int VAR_2, int VAR_3)\n{\n\tint VAR_4;\n\n\tif (VAR_1 == -1)\n\t\tVAR_1 = VAR_0->bpos;\n\tVAR_4 = VAR_1 + VAR_3;\n\tif (VAR_0->size < VAR_4)\n\t{\n\t\tif (printbuf_extend(VAR_0, VAR_4) < 0)\n\t\t\treturn -1;\n\t}\n\n\tmemset(VAR_0->buf + VAR_1, VAR_2, VAR_3);\n\tif (VAR_0->bpos < VAR_4)\n\t\tVAR_0->bpos = VAR_4;\n\n\treturn 0;\n}",
  "func_graph_path_before": "rsyslog/libfastjson/f51fcd59a8bbeb60eaf8ae0e398556be2fa3317a/printbuf.c/vul/before/2.json",
  "func": "int printbuf_memset(struct printbuf *pb, int offset, int charvalue, int len)\n{\n\tint size_needed;\n\n\tif (offset == -1)\n\t\toffset = pb->bpos;\n\t/* Prevent signed integer overflows with large buffers. */\n\tif (len > INT_MAX - offset)\n\t\treturn -1;\n\tsize_needed = offset + len;\n\tif (pb->size < size_needed)\n\t{\n\t\tif (printbuf_extend(pb, size_needed) < 0)\n\t\t\treturn -1;\n\t}\n\n\tmemset(pb->buf + offset, charvalue, len);\n\tif (pb->bpos < size_needed)\n\t\tpb->bpos = size_needed;\n\n\treturn 0;\n}",
  "abstract_func": "int printbuf_memset(struct printbuf *VAR_0, int VAR_1, int VAR_2, int VAR_3)\n{\n\tint VAR_4;\n\n\tif (VAR_1 == -1)\n\t\tVAR_1 = VAR_0->bpos;\n\t/* COMMENT_0 */\n\tif (VAR_3 > VAR_5 - VAR_1)\n\t\treturn -1;\n\tVAR_4 = VAR_1 + VAR_3;\n\tif (VAR_0->size < VAR_4)\n\t{\n\t\tif (printbuf_extend(VAR_0, VAR_4) < 0)\n\t\t\treturn -1;\n\t}\n\n\tmemset(VAR_0->buf + VAR_1, VAR_2, VAR_3);\n\tif (VAR_0->bpos < VAR_4)\n\t\tVAR_0->bpos = VAR_4;\n\n\treturn 0;\n}",
  "func_graph_path": "rsyslog/libfastjson/f51fcd59a8bbeb60eaf8ae0e398556be2fa3317a/printbuf.c/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -4,6 +4,9 @@\n \n \tif (offset == -1)\n \t\toffset = pb->bpos;\n+\t/* Prevent signed integer overflows with large buffers. */\n+\tif (len > INT_MAX - offset)\n+\t\treturn -1;\n \tsize_needed = offset + len;\n \tif (pb->size < size_needed)\n \t{",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "\t/* Prevent signed integer overflows with large buffers. */",
      "\tif (len > INT_MAX - offset)",
      "\t\treturn -1;"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/rsyslog/libfastjson/pull/166",
  "description": "Failed to get PR details: HTTP Request Error for PR https://github.com/rsyslog/libfastjson/pull/166: 403 Client Error: Forbidden for url: https://api.github.com/repos/rsyslog/libfastjson/pulls/166",
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}