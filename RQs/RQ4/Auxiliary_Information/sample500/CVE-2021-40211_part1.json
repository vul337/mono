{
  "cve_id": "CVE-2021-40211",
  "cwe_ids": [
    "CWE-369"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_is_v3": true,
  "repo_name": "ImageMagick",
  "commit_msg": "fix Division by zero in ReadEnhMetaFile() of coders/emf.c",
  "commit_hash": "e33dfe3e9c860d804db15707552cee246f0b7354",
  "git_url": "https://github.com/ImageMagick/ImageMagick/commit/e33dfe3e9c860d804db15707552cee246f0b7354",
  "file_path": "coders/emf.c",
  "func_name": "ReadEnhMetaFile",
  "func_before": "static HENHMETAFILE ReadEnhMetaFile(const char *path,ssize_t *width,\n  ssize_t *height)\n{\n#pragma pack( push, 2 )\n  typedef struct\n  {\n    DWORD dwKey;\n    WORD hmf;\n    SMALL_RECT bbox;\n    WORD wInch;\n    DWORD dwReserved;\n    WORD wCheckSum;\n  } APMHEADER, *PAPMHEADER;\n#pragma pack( pop )\n\n  DWORD\n    dwSize;\n\n  ENHMETAHEADER\n    emfh;\n\n  HANDLE\n    hFile;\n\n  HDC\n    hDC;\n\n  HENHMETAFILE\n    hTemp;\n\n  LPBYTE\n    pBits;\n\n  METAFILEPICT\n    mp;\n\n  HMETAFILE\n    hOld;\n\n  *width=512;\n  *height=512;\n  hTemp=GetEnhMetaFile(path);\n#if defined(MAGICKCORE_HAVE__WFOPEN)\n  if (hTemp == (HENHMETAFILE) NULL)\n    {\n      wchar_t\n        *unicode_path;\n\n      unicode_path=ConvertUTF8ToUTF16((const unsigned char *) path);\n      if (unicode_path != (wchar_t *) NULL)\n        {\n          hTemp=GetEnhMetaFileW(unicode_path);\n          unicode_path=(wchar_t *) RelinquishMagickMemory(unicode_path);\n        }\n    }\n#endif\n  if (hTemp != (HENHMETAFILE) NULL)\n    {\n      /*\n        Enhanced metafile.\n      */\n      GetEnhMetaFileHeader(hTemp,sizeof(ENHMETAHEADER),&emfh);\n      *width=emfh.rclFrame.right-emfh.rclFrame.left;\n      *height=emfh.rclFrame.bottom-emfh.rclFrame.top;\n      return(hTemp);\n    }\n  hOld=GetMetaFile(path);\n  if (hOld != (HMETAFILE) NULL)\n    {\n      /*\n        16bit windows metafile.\n      */\n      dwSize=GetMetaFileBitsEx(hOld,0,NULL);\n      if (dwSize == 0)\n        {\n          DeleteMetaFile(hOld);\n          return((HENHMETAFILE) NULL);\n        }\n      pBits=(LPBYTE) AcquireQuantumMemory(dwSize,sizeof(*pBits));\n      if (pBits == (LPBYTE) NULL)\n        {\n          DeleteMetaFile(hOld);\n          return((HENHMETAFILE) NULL);\n        }\n      if (GetMetaFileBitsEx(hOld,dwSize,pBits) == 0)\n        {\n          pBits=(BYTE *) DestroyString((char *) pBits);\n          DeleteMetaFile(hOld);\n          return((HENHMETAFILE) NULL);\n        }\n      /*\n        Make an enhanced metafile from the windows metafile.\n      */\n      mp.mm=MM_ANISOTROPIC;\n      mp.xExt=1000;\n      mp.yExt=1000;\n      mp.hMF=NULL;\n      hDC=GetDC(NULL);\n      hTemp=SetWinMetaFileBits(dwSize,pBits,hDC,&mp);\n      ReleaseDC(NULL,hDC);\n      DeleteMetaFile(hOld);\n      pBits=(BYTE *) DestroyString((char *) pBits);\n      GetEnhMetaFileHeader(hTemp,sizeof(ENHMETAHEADER),&emfh);\n      *width=emfh.rclFrame.right-emfh.rclFrame.left;\n      *height=emfh.rclFrame.bottom-emfh.rclFrame.top;\n      return(hTemp);\n    }\n  /*\n    Aldus Placeable metafile.\n  */\n  hFile=CreateFile(path,GENERIC_READ,0,NULL,OPEN_EXISTING,FILE_ATTRIBUTE_NORMAL,\n    NULL);\n  if (hFile == INVALID_HANDLE_VALUE)\n    return(NULL);\n  dwSize=GetFileSize(hFile,NULL);\n  pBits=(LPBYTE) AcquireQuantumMemory(dwSize,sizeof(*pBits));\n  if (pBits == (LPBYTE) NULL)\n    {\n      CloseHandle(hFile);\n      return((HENHMETAFILE) NULL);\n    }\n  ReadFile(hFile,pBits,dwSize,&dwSize,NULL);\n  CloseHandle(hFile);\n  if (((PAPMHEADER) pBits)->dwKey != 0x9ac6cdd7l)\n    {\n      pBits=(BYTE *) DestroyString((char *) pBits);\n      return((HENHMETAFILE) NULL);\n    }\n  /*\n    Make an enhanced metafile from the placable metafile.\n  */\n  mp.mm=MM_ANISOTROPIC;\n  mp.xExt=((PAPMHEADER) pBits)->bbox.Right-((PAPMHEADER) pBits)->bbox.Left;\n  *width=mp.xExt;\n  mp.xExt=(mp.xExt*2540l)/(DWORD) (((PAPMHEADER) pBits)->wInch);\n  mp.yExt=((PAPMHEADER)pBits)->bbox.Bottom-((PAPMHEADER) pBits)->bbox.Top;\n  *height=mp.yExt;\n  mp.yExt=(mp.yExt*2540l)/(DWORD) (((PAPMHEADER) pBits)->wInch);\n  mp.hMF=NULL;\n  hDC=GetDC(NULL);\n  hTemp=SetWinMetaFileBits(dwSize,&(pBits[sizeof(APMHEADER)]),hDC,&mp);\n  ReleaseDC(NULL,hDC);\n  pBits=(BYTE *) DestroyString((char *) pBits);\n  return(hTemp);\n}",
  "abstract_func_before": "static HENHMETAFILE ReadEnhMetaFile(const char *VAR_0,ssize_t *VAR_1,\n  ssize_t *VAR_2)\n{\n#pragma pack( push, 2 )\n  typedef struct\n  {\n    DWORD dwKey;\n    WORD hmf;\n    SMALL_RECT bbox;\n    WORD wInch;\n    DWORD dwReserved;\n    WORD wCheckSum;\n  } APMHEADER, *PAPMHEADER;\n#pragma pack( pop )\n\n  DWORD\n    VAR_3;\n\n  ENHMETAHEADER\n    VAR_4;\n\n  HANDLE\n    VAR_5;\n\n  HDC\n    VAR_6;\n\n  HENHMETAFILE\n    VAR_7;\n\n  LPBYTE\n    VAR_8;\n\n  METAFILEPICT\n    VAR_9;\n\n  HMETAFILE\n    VAR_10;\n\n  *VAR_1=512;\n  *VAR_2=512;\n  VAR_7=GetEnhMetaFile(VAR_0);\n#if defined(VAR_11)\n  if (VAR_7 == (HENHMETAFILE) NULL)\n    {\n      wchar_t\n        *VAR_12;\n\n      VAR_12=ConvertUTF8ToUTF16((const unsigned char *) VAR_0);\n      if (VAR_12 != (wchar_t *) NULL)\n        {\n          VAR_7=GetEnhMetaFileW(VAR_12);\n          VAR_12=(wchar_t *) RelinquishMagickMemory(VAR_12);\n        }\n    }\n#endif\n  if (VAR_7 != (HENHMETAFILE) NULL)\n    {\n      /* COMMENT_0 */\n                          \n        \n      GetEnhMetaFileHeader(VAR_7,sizeof(ENHMETAHEADER),&VAR_4);\n      *VAR_1=VAR_4.rclFrame.right-VAR_4.rclFrame.left;\n      *VAR_2=VAR_4.rclFrame.bottom-VAR_4.rclFrame.top;\n      return(VAR_7);\n    }\n  VAR_10=GetMetaFile(VAR_0);\n  if (VAR_10 != (HMETAFILE) NULL)\n    {\n      /* COMMENT_3 */\n                               \n        \n      VAR_3=GetMetaFileBitsEx(VAR_10,0,NULL);\n      if (VAR_3 == 0)\n        {\n          DeleteMetaFile(VAR_10);\n          return((HENHMETAFILE) NULL);\n        }\n      VAR_8=(LPBYTE) AcquireQuantumMemory(VAR_3,sizeof(*VAR_8));\n      if (VAR_8 == (LPBYTE) NULL)\n        {\n          DeleteMetaFile(VAR_10);\n          return((HENHMETAFILE) NULL);\n        }\n      if (GetMetaFileBitsEx(VAR_10,VAR_3,VAR_8) == 0)\n        {\n          VAR_8=(BYTE *) DestroyString((char *) VAR_8);\n          DeleteMetaFile(VAR_10);\n          return((HENHMETAFILE) NULL);\n        }\n      /* COMMENT_6 */\n                                                            \n        \n      VAR_9.mm=VAR_13;\n      VAR_9.xExt=1000;\n      VAR_9.yExt=1000;\n      VAR_9.hMF=NULL;\n      VAR_6=GetDC(NULL);\n      VAR_7=SetWinMetaFileBits(VAR_3,VAR_8,VAR_6,&VAR_9);\n      ReleaseDC(NULL,VAR_6);\n      DeleteMetaFile(VAR_10);\n      VAR_8=(BYTE *) DestroyString((char *) VAR_8);\n      GetEnhMetaFileHeader(VAR_7,sizeof(ENHMETAHEADER),&VAR_4);\n      *VAR_1=VAR_4.rclFrame.right-VAR_4.rclFrame.left;\n      *VAR_2=VAR_4.rclFrame.bottom-VAR_4.rclFrame.top;\n      return(VAR_7);\n    }\n  /* COMMENT_9 */\n                             \n    \n  VAR_5=CreateFile(VAR_0,VAR_14,0,NULL,VAR_15,VAR_16,\n    NULL);\n  if (VAR_5 == VAR_17)\n    return(NULL);\n  VAR_3=GetFileSize(VAR_5,NULL);\n  VAR_8=(LPBYTE) AcquireQuantumMemory(VAR_3,sizeof(*VAR_8));\n  if (VAR_8 == (LPBYTE) NULL)\n    {\n      CloseHandle(VAR_5);\n      return((HENHMETAFILE) NULL);\n    }\n  ReadFile(VAR_5,VAR_8,VAR_3,&VAR_3,NULL);\n  CloseHandle(VAR_5);\n  if (((PAPMHEADER) VAR_8)->dwKey != 0x9ac6cdd7l)\n    {\n      VAR_8=(BYTE *) DestroyString((char *) VAR_8);\n      return((HENHMETAFILE) NULL);\n    }\n  /* COMMENT_12 */\n                                                         \n    \n  VAR_9.mm=VAR_13;\n  VAR_9.xExt=((PAPMHEADER) VAR_8)->bbox.Right-((PAPMHEADER) VAR_8)->bbox.Left;\n  *VAR_1=VAR_9.xExt;\n  VAR_9.xExt=(VAR_9.xExt*2540l)/(DWORD) (((PAPMHEADER) VAR_8)->wInch);\n  VAR_9.yExt=((PAPMHEADER)VAR_8)->bbox.Bottom-((PAPMHEADER) VAR_8)->bbox.Top;\n  *VAR_2=VAR_9.yExt;\n  VAR_9.yExt=(VAR_9.yExt*2540l)/(DWORD) (((PAPMHEADER) VAR_8)->wInch);\n  VAR_9.hMF=NULL;\n  VAR_6=GetDC(NULL);\n  VAR_7=SetWinMetaFileBits(VAR_3,&(VAR_8[sizeof(APMHEADER)]),VAR_6,&VAR_9);\n  ReleaseDC(NULL,VAR_6);\n  VAR_8=(BYTE *) DestroyString((char *) VAR_8);\n  return(VAR_7);\n}",
  "func_graph_path_before": "ImageMagick/e33dfe3e9c860d804db15707552cee246f0b7354/emf.c/vul/before/0.json",
  "func": "static HENHMETAFILE ReadEnhMetaFile(const char *path,ssize_t *width,\n  ssize_t *height)\n{\n#pragma pack( push, 2 )\n  typedef struct\n  {\n    DWORD dwKey;\n    WORD hmf;\n    SMALL_RECT bbox;\n    WORD wInch;\n    DWORD dwReserved;\n    WORD wCheckSum;\n  } APMHEADER, *PAPMHEADER;\n#pragma pack( pop )\n\n  DWORD\n    dwSize;\n\n  ENHMETAHEADER\n    emfh;\n\n  HANDLE\n    hFile;\n\n  HDC\n    hDC;\n\n  HENHMETAFILE\n    hTemp;\n\n  LPBYTE\n    pBits;\n\n  METAFILEPICT\n    mp;\n\n  HMETAFILE\n    hOld;\n\n  *width=512;\n  *height=512;\n  hTemp=GetEnhMetaFile(path);\n#if defined(MAGICKCORE_HAVE__WFOPEN)\n  if (hTemp == (HENHMETAFILE) NULL)\n    {\n      wchar_t\n        *unicode_path;\n\n      unicode_path=ConvertUTF8ToUTF16((const unsigned char *) path);\n      if (unicode_path != (wchar_t *) NULL)\n        {\n          hTemp=GetEnhMetaFileW(unicode_path);\n          unicode_path=(wchar_t *) RelinquishMagickMemory(unicode_path);\n        }\n    }\n#endif\n  if (hTemp != (HENHMETAFILE) NULL)\n    {\n      /*\n        Enhanced metafile.\n      */\n      GetEnhMetaFileHeader(hTemp,sizeof(ENHMETAHEADER),&emfh);\n      *width=emfh.rclFrame.right-emfh.rclFrame.left;\n      *height=emfh.rclFrame.bottom-emfh.rclFrame.top;\n      return(hTemp);\n    }\n  hOld=GetMetaFile(path);\n  if (hOld != (HMETAFILE) NULL)\n    {\n      /*\n        16bit windows metafile.\n      */\n      dwSize=GetMetaFileBitsEx(hOld,0,NULL);\n      if (dwSize == 0)\n        {\n          DeleteMetaFile(hOld);\n          return((HENHMETAFILE) NULL);\n        }\n      pBits=(LPBYTE) AcquireQuantumMemory(dwSize,sizeof(*pBits));\n      if (pBits == (LPBYTE) NULL)\n        {\n          DeleteMetaFile(hOld);\n          return((HENHMETAFILE) NULL);\n        }\n      if (GetMetaFileBitsEx(hOld,dwSize,pBits) == 0)\n        {\n          pBits=(BYTE *) DestroyString((char *) pBits);\n          DeleteMetaFile(hOld);\n          return((HENHMETAFILE) NULL);\n        }\n      /*\n        Make an enhanced metafile from the windows metafile.\n      */\n      mp.mm=MM_ANISOTROPIC;\n      mp.xExt=1000;\n      mp.yExt=1000;\n      mp.hMF=NULL;\n      hDC=GetDC(NULL);\n      hTemp=SetWinMetaFileBits(dwSize,pBits,hDC,&mp);\n      ReleaseDC(NULL,hDC);\n      DeleteMetaFile(hOld);\n      pBits=(BYTE *) DestroyString((char *) pBits);\n      GetEnhMetaFileHeader(hTemp,sizeof(ENHMETAHEADER),&emfh);\n      *width=emfh.rclFrame.right-emfh.rclFrame.left;\n      *height=emfh.rclFrame.bottom-emfh.rclFrame.top;\n      return(hTemp);\n    }\n  /*\n    Aldus Placeable metafile.\n  */\n  hFile=CreateFile(path,GENERIC_READ,0,NULL,OPEN_EXISTING,FILE_ATTRIBUTE_NORMAL,\n    NULL);\n  if (hFile == INVALID_HANDLE_VALUE)\n    return(NULL);\n  dwSize=GetFileSize(hFile,NULL);\n  pBits=(LPBYTE) AcquireQuantumMemory(dwSize,sizeof(*pBits));\n  if (pBits == (LPBYTE) NULL)\n    {\n      CloseHandle(hFile);\n      return((HENHMETAFILE) NULL);\n    }\n  ReadFile(hFile,pBits,dwSize,&dwSize,NULL);\n  CloseHandle(hFile);\n  if (((PAPMHEADER) pBits)->dwKey != 0x9ac6cdd7l || ((PAPMHEADER) pBits)->wInch == 0)\n    {\n      pBits=(BYTE *) DestroyString((char *) pBits);\n      return((HENHMETAFILE) NULL);\n    }\n  /*\n    Make an enhanced metafile from the placable metafile.\n  */\n  mp.mm=MM_ANISOTROPIC;\n  mp.xExt=((PAPMHEADER) pBits)->bbox.Right-((PAPMHEADER) pBits)->bbox.Left;\n  *width=mp.xExt;\n  mp.xExt=(mp.xExt*2540l)/(DWORD) (((PAPMHEADER) pBits)->wInch);\n  mp.yExt=((PAPMHEADER)pBits)->bbox.Bottom-((PAPMHEADER) pBits)->bbox.Top;\n  *height=mp.yExt;\n  mp.yExt=(mp.yExt*2540l)/(DWORD) (((PAPMHEADER) pBits)->wInch);\n  mp.hMF=NULL;\n  hDC=GetDC(NULL);\n  hTemp=SetWinMetaFileBits(dwSize,&(pBits[sizeof(APMHEADER)]),hDC,&mp);\n  ReleaseDC(NULL,hDC);\n  pBits=(BYTE *) DestroyString((char *) pBits);\n  return(hTemp);\n}",
  "abstract_func": "static HENHMETAFILE ReadEnhMetaFile(const char *VAR_0,ssize_t *VAR_1,\n  ssize_t *VAR_2)\n{\n#pragma pack( push, 2 )\n  typedef struct\n  {\n    DWORD dwKey;\n    WORD hmf;\n    SMALL_RECT bbox;\n    WORD wInch;\n    DWORD dwReserved;\n    WORD wCheckSum;\n  } APMHEADER, *PAPMHEADER;\n#pragma pack( pop )\n\n  DWORD\n    VAR_3;\n\n  ENHMETAHEADER\n    VAR_4;\n\n  HANDLE\n    VAR_5;\n\n  HDC\n    VAR_6;\n\n  HENHMETAFILE\n    VAR_7;\n\n  LPBYTE\n    VAR_8;\n\n  METAFILEPICT\n    VAR_9;\n\n  HMETAFILE\n    VAR_10;\n\n  *VAR_1=512;\n  *VAR_2=512;\n  VAR_7=GetEnhMetaFile(VAR_0);\n#if defined(VAR_11)\n  if (VAR_7 == (HENHMETAFILE) NULL)\n    {\n      wchar_t\n        *VAR_12;\n\n      VAR_12=ConvertUTF8ToUTF16((const unsigned char *) VAR_0);\n      if (VAR_12 != (wchar_t *) NULL)\n        {\n          VAR_7=GetEnhMetaFileW(VAR_12);\n          VAR_12=(wchar_t *) RelinquishMagickMemory(VAR_12);\n        }\n    }\n#endif\n  if (VAR_7 != (HENHMETAFILE) NULL)\n    {\n      /* COMMENT_0 */\n                          \n        \n      GetEnhMetaFileHeader(VAR_7,sizeof(ENHMETAHEADER),&VAR_4);\n      *VAR_1=VAR_4.rclFrame.right-VAR_4.rclFrame.left;\n      *VAR_2=VAR_4.rclFrame.bottom-VAR_4.rclFrame.top;\n      return(VAR_7);\n    }\n  VAR_10=GetMetaFile(VAR_0);\n  if (VAR_10 != (HMETAFILE) NULL)\n    {\n      /* COMMENT_3 */\n                               \n        \n      VAR_3=GetMetaFileBitsEx(VAR_10,0,NULL);\n      if (VAR_3 == 0)\n        {\n          DeleteMetaFile(VAR_10);\n          return((HENHMETAFILE) NULL);\n        }\n      VAR_8=(LPBYTE) AcquireQuantumMemory(VAR_3,sizeof(*VAR_8));\n      if (VAR_8 == (LPBYTE) NULL)\n        {\n          DeleteMetaFile(VAR_10);\n          return((HENHMETAFILE) NULL);\n        }\n      if (GetMetaFileBitsEx(VAR_10,VAR_3,VAR_8) == 0)\n        {\n          VAR_8=(BYTE *) DestroyString((char *) VAR_8);\n          DeleteMetaFile(VAR_10);\n          return((HENHMETAFILE) NULL);\n        }\n      /* COMMENT_6 */\n                                                            \n        \n      VAR_9.mm=VAR_13;\n      VAR_9.xExt=1000;\n      VAR_9.yExt=1000;\n      VAR_9.hMF=NULL;\n      VAR_6=GetDC(NULL);\n      VAR_7=SetWinMetaFileBits(VAR_3,VAR_8,VAR_6,&VAR_9);\n      ReleaseDC(NULL,VAR_6);\n      DeleteMetaFile(VAR_10);\n      VAR_8=(BYTE *) DestroyString((char *) VAR_8);\n      GetEnhMetaFileHeader(VAR_7,sizeof(ENHMETAHEADER),&VAR_4);\n      *VAR_1=VAR_4.rclFrame.right-VAR_4.rclFrame.left;\n      *VAR_2=VAR_4.rclFrame.bottom-VAR_4.rclFrame.top;\n      return(VAR_7);\n    }\n  /* COMMENT_9 */\n                             \n    \n  VAR_5=CreateFile(VAR_0,VAR_14,0,NULL,VAR_15,VAR_16,\n    NULL);\n  if (VAR_5 == VAR_17)\n    return(NULL);\n  VAR_3=GetFileSize(VAR_5,NULL);\n  VAR_8=(LPBYTE) AcquireQuantumMemory(VAR_3,sizeof(*VAR_8));\n  if (VAR_8 == (LPBYTE) NULL)\n    {\n      CloseHandle(VAR_5);\n      return((HENHMETAFILE) NULL);\n    }\n  ReadFile(VAR_5,VAR_8,VAR_3,&VAR_3,NULL);\n  CloseHandle(VAR_5);\n  if (((PAPMHEADER) VAR_8)->dwKey != 0x9ac6cdd7l || ((PAPMHEADER) VAR_8)->wInch == 0)\n    {\n      VAR_8=(BYTE *) DestroyString((char *) VAR_8);\n      return((HENHMETAFILE) NULL);\n    }\n  /* COMMENT_12 */\n                                                         \n    \n  VAR_9.mm=VAR_13;\n  VAR_9.xExt=((PAPMHEADER) VAR_8)->bbox.Right-((PAPMHEADER) VAR_8)->bbox.Left;\n  *VAR_1=VAR_9.xExt;\n  VAR_9.xExt=(VAR_9.xExt*2540l)/(DWORD) (((PAPMHEADER) VAR_8)->wInch);\n  VAR_9.yExt=((PAPMHEADER)VAR_8)->bbox.Bottom-((PAPMHEADER) VAR_8)->bbox.Top;\n  *VAR_2=VAR_9.yExt;\n  VAR_9.yExt=(VAR_9.yExt*2540l)/(DWORD) (((PAPMHEADER) VAR_8)->wInch);\n  VAR_9.hMF=NULL;\n  VAR_6=GetDC(NULL);\n  VAR_7=SetWinMetaFileBits(VAR_3,&(VAR_8[sizeof(APMHEADER)]),VAR_6,&VAR_9);\n  ReleaseDC(NULL,VAR_6);\n  VAR_8=(BYTE *) DestroyString((char *) VAR_8);\n  return(VAR_7);\n}",
  "func_graph_path": "ImageMagick/e33dfe3e9c860d804db15707552cee246f0b7354/emf.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -121,7 +121,7 @@\n     }\n   ReadFile(hFile,pBits,dwSize,&dwSize,NULL);\n   CloseHandle(hFile);\n-  if (((PAPMHEADER) pBits)->dwKey != 0x9ac6cdd7l)\n+  if (((PAPMHEADER) pBits)->dwKey != 0x9ac6cdd7l || ((PAPMHEADER) pBits)->wInch == 0)\n     {\n       pBits=(BYTE *) DestroyString((char *) pBits);\n       return((HENHMETAFILE) NULL);",
  "diff_line_info": {
    "deleted_lines": [
      "  if (((PAPMHEADER) pBits)->dwKey != 0x9ac6cdd7l)"
    ],
    "added_lines": [
      "  if (((PAPMHEADER) pBits)->dwKey != 0x9ac6cdd7l || ((PAPMHEADER) pBits)->wInch == 0)"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/ImageMagick/ImageMagick/pull/4098",
  "description": {
    "pr_info": {
      "title": "fix #4097：Division by zero in ReadEnhMetaFile() of coders/emf.c",
      "number": 4098
    },
    "comment": [
      "### Prerequisites\r\n\r\n- [Y] I have written a descriptive pull-request title\r\n- [Y] I have verified that there are no overlapping [pull-requests](https://github.com/ImageMagick/ImageMagick/pulls) open\r\n- [Y] I have verified that I am following the existing coding patterns and practices as demonstrated in the repository.\r\n\r\n### Description\r\n<!-- A description of the changes proposed in the pull-request\r\n     If you want to change something in the 'www' or 'ImageMagick' folder please\r\n     open an issue here instead: https://github.com/ImageMagick/Website -->\r\nFixes #4097：Division by zero in ReadEnhMetaFile() of coders/emf.c\r\n<!-- Thanks for contributing to ImageMagick! -->\r\n",
      "Will need to squash this because we don't allow merge commits.",
      "And thanks for the fix!"
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.7,
  "Bug Filter Response": "Final Classification: Defect Remediation & Feature Upgrades; Confidence: 0.7"
}