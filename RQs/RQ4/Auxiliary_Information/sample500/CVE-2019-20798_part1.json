{
  "cve_id": "CVE-2019-20798",
  "cwe_ids": [
    "CWE-79"
  ],
  "cvss_vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "cherokee/webserver",
  "commit_msg": "Use relative paths in the handler_server_info page\n\nIssue #1227 describes a XSS vulnerability on the about page of cherokee-admin.\nWhile the report by LogicalTrust only describes a JavaScript variant, a CSS method could also be probed via logo.gif.\n\nThe root cause is the request being verbatim copied in to the HTML template. The request could be escaped, but leads to the question: Why are we presenting a full path, instead of a\nrelative path to the page? This change removes the full path, and makes it relative. No URL is being printed in the template, and the XSS is avoided and therefore it should also be\nfaster.",
  "commit_hash": "39c6b73ff1b4749812eea940fa63e54e2ed860da",
  "git_url": "https://github.com/cherokee/webserver/commit/39c6b73ff1b4749812eea940fa63e54e2ed860da",
  "file_path": "cherokee/handler_server_info.c",
  "func_name": "server_info_build_html",
  "func_before": "static ret_t\nserver_info_build_html (cherokee_handler_server_info_t *hdl, cherokee_buffer_t *buffer)\n{\n\tcherokee_buffer_t ver = CHEROKEE_BUF_INIT;\n\n\tcherokee_buffer_add_str (buffer, PAGE_HEADER);\n\tcherokee_buffer_add_str (buffer, AJAX_JS);\n\n\tcherokee_version_add (&ver, HANDLER_SRV(hdl)->server_token);\n\tcherokee_buffer_replace_string (buffer, \"{cherokee_name}\", 15, ver.buf, ver.len);\n\tcherokee_buffer_mrproper (&ver);\n\n\tcherokee_buffer_replace_string (buffer, \"{request}\", 9,\n\t                                HANDLER_CONN(hdl)->request.buf,\n\t                                HANDLER_CONN(hdl)->request.len);\n\n\tcherokee_buffer_add_str (buffer, PAGE_FOOT);\n\treturn ret_ok;\n}",
  "abstract_func_before": "static ret_t\nserver_info_build_html (cherokee_handler_server_info_t *VAR_0, cherokee_buffer_t *VAR_1)\n{\n\tcherokee_buffer_t VAR_2 = VAR_3;\n\n\tcherokee_buffer_add_str (VAR_1, VAR_4);\n\tcherokee_buffer_add_str (VAR_1, VAR_5);\n\n\tcherokee_version_add (&VAR_2, HANDLER_SRV(VAR_0)->server_token);\n\tcherokee_buffer_replace_string (VAR_1, \"{cherokee_name}\", 15, VAR_2.buf, VAR_2.len);\n\tcherokee_buffer_mrproper (&VAR_2);\n\n\tcherokee_buffer_replace_string (VAR_1, \"{request}\", 9,\n\t                                HANDLER_CONN(VAR_0)->request.buf,\n\t                                HANDLER_CONN(VAR_0)->request.len);\n\n\tcherokee_buffer_add_str (VAR_1, VAR_6);\n\treturn VAR_7;\n}",
  "func_graph_path_before": "cherokee/webserver/39c6b73ff1b4749812eea940fa63e54e2ed860da/handler_server_info.c/vul/before/0.json",
  "func": "static ret_t\nserver_info_build_html (cherokee_handler_server_info_t *hdl, cherokee_buffer_t *buffer)\n{\n\tcherokee_buffer_t ver = CHEROKEE_BUF_INIT;\n\n\tcherokee_buffer_add_str (buffer, PAGE_HEADER);\n\tcherokee_buffer_add_str (buffer, AJAX_JS);\n\n\tcherokee_version_add (&ver, HANDLER_SRV(hdl)->server_token);\n\tcherokee_buffer_replace_string (buffer, \"{cherokee_name}\", 15, ver.buf, ver.len);\n\tcherokee_buffer_mrproper (&ver);\n\n\tcherokee_buffer_add_str (buffer, PAGE_FOOT);\n\treturn ret_ok;\n}",
  "abstract_func": "static ret_t\nserver_info_build_html (cherokee_handler_server_info_t *VAR_0, cherokee_buffer_t *VAR_1)\n{\n\tcherokee_buffer_t VAR_2 = VAR_3;\n\n\tcherokee_buffer_add_str (VAR_1, VAR_4);\n\tcherokee_buffer_add_str (VAR_1, VAR_5);\n\n\tcherokee_version_add (&VAR_2, HANDLER_SRV(VAR_0)->server_token);\n\tcherokee_buffer_replace_string (VAR_1, \"{cherokee_name}\", 15, VAR_2.buf, VAR_2.len);\n\tcherokee_buffer_mrproper (&VAR_2);\n\n\tcherokee_buffer_add_str (VAR_1, VAR_6);\n\treturn VAR_7;\n}",
  "func_graph_path": "cherokee/webserver/39c6b73ff1b4749812eea940fa63e54e2ed860da/handler_server_info.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -10,10 +10,6 @@\n \tcherokee_buffer_replace_string (buffer, \"{cherokee_name}\", 15, ver.buf, ver.len);\n \tcherokee_buffer_mrproper (&ver);\n \n-\tcherokee_buffer_replace_string (buffer, \"{request}\", 9,\n-\t                                HANDLER_CONN(hdl)->request.buf,\n-\t                                HANDLER_CONN(hdl)->request.len);\n-\n \tcherokee_buffer_add_str (buffer, PAGE_FOOT);\n \treturn ret_ok;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "\tcherokee_buffer_replace_string (buffer, \"{request}\", 9,",
      "\t                                HANDLER_CONN(hdl)->request.buf,",
      "\t                                HANDLER_CONN(hdl)->request.len);",
      ""
    ],
    "added_lines": []
  },
  "is_vul": true,
  "pr_url": "https://github.com/cherokee/webserver/pull/1228",
  "description": {
    "pr_info": {
      "title": "Use relative paths in the handler_server_info page",
      "number": 1228
    },
    "comment": [
      "Issue #1227 describes a XSS vulnerability on the about page of cherokee-admin.\r\nWhile the report by LogicalTrust only describes a JavaScript variant, a CSS method could also be probed via logo.gif.\r\n\r\nThe root cause is the request being verbatim copied in to the HTML template. The request could be escaped, but leads to the question: Why are we presenting a full path, instead of a\r\nrelative path to the page? This change removes the full path, and makes it relative. No URL is being printed in the template, and the XSS is avoided and therefore it should also be\r\nfaster."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0\n\n# Answer\n\n**Final Classification:** Security Vulnerability Fix; **Confidence:** 1.0"
}