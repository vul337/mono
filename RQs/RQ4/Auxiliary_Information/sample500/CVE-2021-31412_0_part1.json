{
  "cve_id": "CVE-2021-31412",
  "cwe_ids": [
    "CWE-20"
  ],
  "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
  "cvss_is_v3": false,
  "repo_name": "vaadin/flow",
  "commit_msg": "chore: add a comment which explains the order",
  "commit_hash": "bbc6cf881f43031e4c6e7ae9ac178b5128bc6347",
  "git_url": "https://github.com/vaadin/flow/commit/bbc6cf881f43031e4c6e7ae9ac178b5128bc6347",
  "file_path": "flow-server/src/main/java/com/vaadin/flow/router/RouteNotFoundError.java",
  "func_name": "setErrorParameter",
  "func_before": "@Override\n    public int setErrorParameter(BeforeEnterEvent event,\n            ErrorParameter<NotFoundException> parameter) {\n        String path = event.getLocation().getPath();\n        String additionalInfo = \"\";\n        if (parameter.hasCustomMessage()) {\n            additionalInfo = \"Reason: \" + parameter.getCustomMessage();\n        }\n        path = Jsoup.clean(path, Whitelist.none());\n        additionalInfo = Jsoup.clean(additionalInfo, Whitelist.none());\n\n        boolean productionMode = event.getUI().getSession().getConfiguration()\n                .isProductionMode();\n\n        String template = getErrorHtml(productionMode);\n        if (template.contains(\"{{routes}}\")) {\n            template = template.replace(\"{{routes}}\", getRoutes(event));\n        }\n        template = template.replace(\"{{additionalInfo}}\", additionalInfo);\n        template = template.replace(\"{{path}}\", path);\n\n        getElement().appendChild(new Html(template).getElement());\n        return HttpServletResponse.SC_NOT_FOUND;\n    }",
  "abstract_func_before": "@Override\n    public int setErrorParameter(BeforeEnterEvent VAR_0,\n            ErrorParameter<NotFoundException> VAR_1) {\n        String VAR_2 = VAR_0.getLocation().getPath();\n        String VAR_3 = \"\";\n        if (VAR_1.hasCustomMessage()) {\n            VAR_3 = \"Reason: \" + VAR_1.getCustomMessage();\n        }\n        VAR_2 = VAR_4.clean(VAR_2, VAR_5.none());\n        VAR_3 = VAR_4.clean(VAR_3, VAR_5.none());\n\n        boolean VAR_6 = VAR_0.getUI().getSession().getConfiguration()\n                .isProductionMode();\n\n        String VAR_7 = getErrorHtml(VAR_6);\n        if (VAR_7.contains(\"{{routes}}\")) {\n            VAR_7 = VAR_7.replace(\"{{routes}}\", getRoutes(VAR_0));\n        }\n        VAR_7 = VAR_7.replace(\"{{additionalInfo}}\", VAR_3);\n        VAR_7 = VAR_7.replace(\"{{path}}\", VAR_2);\n\n        getElement().appendChild(new Html(VAR_7).getElement());\n        return VAR_8.SC_NOT_FOUND;\n    }",
  "func_graph_path_before": "vaadin/flow/bbc6cf881f43031e4c6e7ae9ac178b5128bc6347/RouteNotFoundError.java/vul/before/0.json",
  "func": "@Override\n    public int setErrorParameter(BeforeEnterEvent event,\n            ErrorParameter<NotFoundException> parameter) {\n        String path = event.getLocation().getPath();\n        String additionalInfo = \"\";\n        if (parameter.hasCustomMessage()) {\n            additionalInfo = \"Reason: \" + parameter.getCustomMessage();\n        }\n        path = Jsoup.clean(path, Whitelist.none());\n        additionalInfo = Jsoup.clean(additionalInfo, Whitelist.none());\n\n        boolean productionMode = event.getUI().getSession().getConfiguration()\n                .isProductionMode();\n\n        String template = getErrorHtml(productionMode);\n        // {{routes}} should be replaced first so that it's not possible to\n        // insert {{routes}} snippet via other template values which may result\n        // in the listing of all available routes when this shouldn't not happen\n        if (template.contains(\"{{routes}}\")) {\n            template = template.replace(\"{{routes}}\", getRoutes(event));\n        }\n        template = template.replace(\"{{additionalInfo}}\", additionalInfo);\n        template = template.replace(\"{{path}}\", path);\n\n        getElement().appendChild(new Html(template).getElement());\n        return HttpServletResponse.SC_NOT_FOUND;\n    }",
  "abstract_func": "@Override\n    public int setErrorParameter(BeforeEnterEvent VAR_0,\n            ErrorParameter<NotFoundException> VAR_1) {\n        String VAR_2 = VAR_0.getLocation().getPath();\n        String VAR_3 = \"\";\n        if (VAR_1.hasCustomMessage()) {\n            VAR_3 = \"Reason: \" + VAR_1.getCustomMessage();\n        }\n        VAR_2 = VAR_4.clean(VAR_2, VAR_5.none());\n        VAR_3 = VAR_4.clean(VAR_3, VAR_5.none());\n\n        boolean VAR_6 = VAR_0.getUI().getSession().getConfiguration()\n                .isProductionMode();\n\n        String VAR_7 = getErrorHtml(VAR_6);\n        /* COMMENT_0 */\n        /* COMMENT_1 */\n        /* COMMENT_2 */\n        if (VAR_7.contains(\"{{routes}}\")) {\n            VAR_7 = VAR_7.replace(\"{{routes}}\", getRoutes(VAR_0));\n        }\n        VAR_7 = VAR_7.replace(\"{{additionalInfo}}\", VAR_3);\n        VAR_7 = VAR_7.replace(\"{{path}}\", VAR_2);\n\n        getElement().appendChild(new Html(VAR_7).getElement());\n        return VAR_8.SC_NOT_FOUND;\n    }",
  "func_graph_path": "vaadin/flow/bbc6cf881f43031e4c6e7ae9ac178b5128bc6347/RouteNotFoundError.java/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -13,6 +13,9 @@\n                 .isProductionMode();\n \n         String template = getErrorHtml(productionMode);\n+        // {{routes}} should be replaced first so that it's not possible to\n+        // insert {{routes}} snippet via other template values which may result\n+        // in the listing of all available routes when this shouldn't not happen\n         if (template.contains(\"{{routes}}\")) {\n             template = template.replace(\"{{routes}}\", getRoutes(event));\n         }",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        // {{routes}} should be replaced first so that it's not possible to",
      "        // insert {{routes}} snippet via other template values which may result",
      "        // in the listing of all available routes when this shouldn't not happen"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/vaadin/flow/pull/11107",
  "description": {
    "pr_info": {
      "title": "fix: set routes first into the template",
      "number": 11107
    },
    "comment": [
      "fixes psi#26\r\n\r\n<!-- PLEASE READ AND FOLLOW THE TEMPLATE! THE PR CAN BE REJECTED OTHERWISE (This line should be removed when submitting) -->\r\n\r\n## Description\r\n\r\nPlease list all relevant dependencies in this section and provide summary of the change, motivation and context.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n\r\n## Checklist\r\n\r\n- [ ] I have read the contribution guide: https://vaadin.com/docs/latest/guide/contributing/overview/\r\n- [ ] I have added a description following the guideline.\r\n- [ ] The issue is created in the corresponding repository and I have referenced it.\r\n- [ ] I have added tests to ensure my change is effective and works as intended.\r\n- [ ] New and existing tests are passing locally with my change.\r\n- [ ] I have performed self-review and corrected misspellings.\r\n\r\n#### Additional for `Feature` type of change\r\n\r\n- [ ] Enhancement / new feature was discussed in a corresponding GitHub issue and Acceptance Criteria were created.\r\n",
      "@fluorumlabs could you please review this PR? Merge is blocked since you requested changes. Thanks!",
      "This ticket/PR has been released with platform 21.0.0.alpha3. For prerelease versions, it will be included in its final version."
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 0.6,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 0.6"
}