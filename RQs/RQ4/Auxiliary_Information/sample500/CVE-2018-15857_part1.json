{
  "cve_id": "CVE-2018-15857",
  "cwe_ids": [
    "CWE-416"
  ],
  "cvss_vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
  "cvss_is_v3": false,
  "repo_name": "xkbcommon/libxkbcommon",
  "commit_msg": "xkbcomp: fix pointer value for FreeStmt\n\nSigned-off-by: Peter Hutterer <peter.hutterer@who-t.net>",
  "commit_hash": "c1e5ac16e77a21f87bdf3bc4dea61b037a17dddb",
  "git_url": "https://github.com/xkbcommon/libxkbcommon/commit/c1e5ac16e77a21f87bdf3bc4dea61b037a17dddb",
  "file_path": "src/xkbcomp/ast-build.c",
  "func_name": "ExprAppendMultiKeysymList",
  "func_before": "ExprDef *\nExprAppendMultiKeysymList(ExprDef *expr, ExprDef *append)\n{\n    unsigned nSyms = darray_size(expr->keysym_list.syms);\n    unsigned numEntries = darray_size(append->keysym_list.syms);\n\n    darray_append(expr->keysym_list.symsMapIndex, nSyms);\n    darray_append(expr->keysym_list.symsNumEntries, numEntries);\n    darray_concat(expr->keysym_list.syms, append->keysym_list.syms);\n\n    FreeStmt((ParseCommon *) &append);\n\n    return expr;\n}",
  "abstract_func_before": "ExprDef *\nExprAppendMultiKeysymList(ExprDef *VAR_0, ExprDef *VAR_1)\n{\n    unsigned VAR_2 = darray_size(VAR_0->keysym_list.syms);\n    unsigned VAR_3 = darray_size(VAR_1->keysym_list.syms);\n\n    darray_append(VAR_0->keysym_list.symsMapIndex, VAR_2);\n    darray_append(VAR_0->keysym_list.symsNumEntries, VAR_3);\n    darray_concat(VAR_0->keysym_list.syms, VAR_1->keysym_list.syms);\n\n    FreeStmt((ParseCommon *) &VAR_1);\n\n    return VAR_0;\n}",
  "func_graph_path_before": "xkbcommon/libxkbcommon/c1e5ac16e77a21f87bdf3bc4dea61b037a17dddb/ast-build.c/vul/before/0.json",
  "func": "ExprDef *\nExprAppendMultiKeysymList(ExprDef *expr, ExprDef *append)\n{\n    unsigned nSyms = darray_size(expr->keysym_list.syms);\n    unsigned numEntries = darray_size(append->keysym_list.syms);\n\n    darray_append(expr->keysym_list.symsMapIndex, nSyms);\n    darray_append(expr->keysym_list.symsNumEntries, numEntries);\n    darray_concat(expr->keysym_list.syms, append->keysym_list.syms);\n\n    FreeStmt((ParseCommon *) append);\n\n    return expr;\n}",
  "abstract_func": "ExprDef *\nExprAppendMultiKeysymList(ExprDef *VAR_0, ExprDef *VAR_1)\n{\n    unsigned VAR_2 = darray_size(VAR_0->keysym_list.syms);\n    unsigned VAR_3 = darray_size(VAR_1->keysym_list.syms);\n\n    darray_append(VAR_0->keysym_list.symsMapIndex, VAR_2);\n    darray_append(VAR_0->keysym_list.symsNumEntries, VAR_3);\n    darray_concat(VAR_0->keysym_list.syms, VAR_1->keysym_list.syms);\n\n    FreeStmt((ParseCommon *) VAR_1);\n\n    return VAR_0;\n}",
  "func_graph_path": "xkbcommon/libxkbcommon/c1e5ac16e77a21f87bdf3bc4dea61b037a17dddb/ast-build.c/vul/after/0.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -8,7 +8,7 @@\n     darray_append(expr->keysym_list.symsNumEntries, numEntries);\n     darray_concat(expr->keysym_list.syms, append->keysym_list.syms);\n \n-    FreeStmt((ParseCommon *) &append);\n+    FreeStmt((ParseCommon *) append);\n \n     return expr;\n }",
  "diff_line_info": {
    "deleted_lines": [
      "    FreeStmt((ParseCommon *) &append);"
    ],
    "added_lines": [
      "    FreeStmt((ParseCommon *) append);"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/xkbcommon/libxkbcommon/pull/66",
  "description": {
    "pr_info": {
      "title": "Coverity fixes (one real bug)",
      "number": 66
    },
    "comment": [
      "First two patches are just coverity warnings. Patch 3 is a valid fix but possibly theoretical. Patch4 (FreeStmt) is a definitive bug.",
      "Force-pushed, now with just a comment for coverity's sake.",
      "Thanks! I think I'll release 0.8.1 this weekend."
    ]
  },
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence:** 0.9  \n\nThe patch addresses a bug related to pointer handling in the FreeStmt function, as indicated by the code diff and commit message. The vulnerability description confirms it's a definitive bug fix, and there's no indication of a security issue. The change is a core logic fix, so it falls under Defect Remediation. The confidence is high due to clear alignment between the commit and code."
}