{
  "cve_id": "CVE-2022-2414",
  "cwe_ids": [
    "CWE-611"
  ],
  "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
  "cvss_is_v3": true,
  "repo_name": "dogtagpki/pki",
  "commit_msg": "Disable access to external entities when parsing XML\n\nThis reduces the vulnerability of XML parsers to XXE (XML external\nentity) injection.\n\nThe best way to prevent XXE is to stop using XML altogether, which we do\nplan to do. Until that happens I consider it worthwhile to tighten the\nsecurity here though.",
  "commit_hash": "16deffdf7548e305507982e246eb9fd1eac414fd",
  "git_url": "https://github.com/dogtagpki/pki/commit/16deffdf7548e305507982e246eb9fd1eac414fd",
  "file_path": "base/util/src/main/java/com/netscape/cmsutil/xml/XMLObject.java",
  "func_name": "toXMLString",
  "func_before": "public String toXMLString() throws TransformerConfigurationException, TransformerException {\n        TransformerFactory tranFactory = TransformerFactory.newInstance();\n        Transformer transformer = tranFactory.newTransformer();\n        Source src = new DOMSource(mDoc);\n        StreamResult dest = new StreamResult(new StringWriter());\n        transformer.transform(src, dest);\n        String xmlString = dest.getWriter().toString();\n        return xmlString;\n    }",
  "abstract_func_before": "public String toXMLString() throws TransformerConfigurationException, TransformerException {\n        TransformerFactory VAR_0 = VAR_1.newInstance();\n        Transformer VAR_2 = VAR_0.newTransformer();\n        Source VAR_3 = new DOMSource(VAR_4);\n        StreamResult VAR_5 = new StreamResult(new StringWriter());\n        VAR_2.transform(VAR_3, VAR_5);\n        String VAR_6 = VAR_5.getWriter().toString();\n        return VAR_6;\n    }",
  "func_graph_path_before": "dogtagpki/pki/16deffdf7548e305507982e246eb9fd1eac414fd/XMLObject.java/vul/before/2.json",
  "func": "public String toXMLString() throws TransformerConfigurationException, TransformerException {\n        TransformerFactory tranFactory = TransformerFactory.newInstance();\n        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");\n        Transformer transformer = tranFactory.newTransformer();\n        Source src = new DOMSource(mDoc);\n        StreamResult dest = new StreamResult(new StringWriter());\n        transformer.transform(src, dest);\n        String xmlString = dest.getWriter().toString();\n        return xmlString;\n    }",
  "abstract_func": "public String toXMLString() throws TransformerConfigurationException, TransformerException {\n        TransformerFactory VAR_0 = VAR_1.newInstance();\n        VAR_0.setAttribute(VAR_2.ACCESS_EXTERNAL_DTD, \"\");\n        VAR_0.setAttribute(VAR_2.ACCESS_EXTERNAL_STYLESHEET, \"\");\n        Transformer VAR_3 = VAR_0.newTransformer();\n        Source VAR_4 = new DOMSource(VAR_5);\n        StreamResult VAR_6 = new StreamResult(new StringWriter());\n        VAR_3.transform(VAR_4, VAR_6);\n        String VAR_7 = VAR_6.getWriter().toString();\n        return VAR_7;\n    }",
  "func_graph_path": "dogtagpki/pki/16deffdf7548e305507982e246eb9fd1eac414fd/XMLObject.java/vul/after/2.json",
  "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,7 @@\n public String toXMLString() throws TransformerConfigurationException, TransformerException {\n         TransformerFactory tranFactory = TransformerFactory.newInstance();\n+        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");\n         Transformer transformer = tranFactory.newTransformer();\n         Source src = new DOMSource(mDoc);\n         StreamResult dest = new StreamResult(new StringWriter());",
  "diff_line_info": {
    "deleted_lines": [],
    "added_lines": [
      "        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");",
      "        tranFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");"
    ]
  },
  "is_vul": true,
  "pr_url": "https://github.com/dogtagpki/pki/pull/4021",
  "description": {
    "pr_info": {
      "title": "Disable access to external entities when parsing XML",
      "number": 4021
    },
    "comment": [
      "This reduces the vulnerability of XML parsers to XXE (XML external\r\nentity) injection.\r\n\r\nThe best way to prevent XXE is to stop using XML altogether, which we do\r\nplan to do. Until that happens I consider it worthwhile to tighten the\r\nsecurity here though.",
      "I considered making a class similar to `JSONSerializer` but it felt like too much work for deprecated code, that is actively marked for removal. Therefore I just added in the necessary updates per-instantiation.",
      "It's a shame that Sonar doesn't work on PRs (yet) because then we could have checked that I caught them all.",
      "Thanks @edewata !"
    ]
  },
  "Bug Filter": "Security Vulnerability Fix",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "**Final Classification:** Security Vulnerability Fix  \n**Confidence:** 1.0"
}