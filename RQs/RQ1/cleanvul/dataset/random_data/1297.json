{
  "id": 1297,
  "language": "Java",
  "commit_url": "https://github.com/omnirom/android_frameworks_base/commit/03b77aee350696781b4d7a61768a172bedc3ac73",
  "commit_sha": "03b77aee350696781b4d7a61768a172bedc3ac73",
  "commit_msg": "[RESTRICT AUTOMERGE] Fix bypass BG-FGS and BAL via package manager APIs\n\nOpt-in for BAL of PendingIntent for following APIs:\n\n* PackageInstaller.uninstall()\n* PackageInstaller.installExistingPackage()\n* PackageInstaller.uninstallExistingPackage()\n* PackageInstaller.Session.commit()\n* PackageInstaller.Session.commitTransferred()\n* PackageManager.freeStorage()\n\nBug: 230492955\nBug: 243377226\nTest: atest android.security.cts.PackageInstallerTest\nTest: atest CtsStagedInstallHostTestCases\nChange-Id: I9b6f801d69ea6d2244a38dbe689e81afa4e798bf",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "services/core/java/com/android/server/pm/PackageInstallerService.java",
  "func_name": "onUserActionRequired",
  "func_before": "@Override\n        public void onUserActionRequired(Intent intent) {\n            if (mTarget == null) {\n                return;\n            }\n            final Intent fillIn = new Intent();\n            fillIn.putExtra(PackageInstaller.EXTRA_PACKAGE_NAME, mPackageName);\n            fillIn.putExtra(PackageInstaller.EXTRA_STATUS,\n                    PackageInstaller.STATUS_PENDING_USER_ACTION);\n            fillIn.putExtra(Intent.EXTRA_INTENT, intent);\n            try {\n                mTarget.sendIntent(mContext, 0, fillIn, null, null);\n            } catch (SendIntentException ignored) {\n            }\n        }",
  "func_after": "@Override\n        public void onUserActionRequired(Intent intent) {\n            if (mTarget == null) {\n                return;\n            }\n            final Intent fillIn = new Intent();\n            fillIn.putExtra(PackageInstaller.EXTRA_PACKAGE_NAME, mPackageName);\n            fillIn.putExtra(PackageInstaller.EXTRA_STATUS,\n                    PackageInstaller.STATUS_PENDING_USER_ACTION);\n            fillIn.putExtra(Intent.EXTRA_INTENT, intent);\n            try {\n                final BroadcastOptions options = BroadcastOptions.makeBasic();\n                options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n                mTarget.sendIntent(mContext, 0, fillIn, null /* onFinished*/,\n                        null /* handler */, null /* requiredPermission */, options.toBundle());\n            } catch (SendIntentException ignored) {\n            }\n        }",
  "diff_func": "--- func_before\n+++ func_after\n @Override\n         public void onUserActionRequired(Intent intent) {\n             if (mTarget == null) {\n                 return;\n             }\n             final Intent fillIn = new Intent();\n             fillIn.putExtra(PackageInstaller.EXTRA_PACKAGE_NAME, mPackageName);\n             fillIn.putExtra(PackageInstaller.EXTRA_STATUS,\n                     PackageInstaller.STATUS_PENDING_USER_ACTION);\n             fillIn.putExtra(Intent.EXTRA_INTENT, intent);\n             try {\n+                final BroadcastOptions options = BroadcastOptions.makeBasic();\n+                options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n-                mTarget.sendIntent(mContext, 0, fillIn, null, null);\n+                mTarget.sendIntent(mContext, 0, fillIn, null /* onFinished*/,\n+                        null /* handler */, null /* requiredPermission */, options.toBundle());\n             } catch (SendIntentException ignored) {\n             }\n         }",
  "diff_source": "custom"
}