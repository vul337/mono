{
  "id": 2894,
  "language": "Java",
  "commit_url": "https://github.com/AOSPA/android_frameworks_base/commit/b2a831ac3c83b217e5efc7702350c261e5324ebb",
  "commit_sha": "b2a831ac3c83b217e5efc7702350c261e5324ebb",
  "commit_msg": "Check for invalid (negative) string pool pos.\n\nParcel implementation would crash the system server otherwise.\nAny exception is OK as it'll cause the cache to be invalidated.\nCrash is not OK.\n\nBug: 194632313\nFixes: 194632313\nTest: atest PackageParserCacheHelperTest\nChange-Id: I58a4496b4646e172e6c3aee9ea17854a7ef55eaa",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "core/java/android/content/pm/PackageParserCacheHelper.java",
  "func_name": "startAndInstall",
  "func_before": "public void startAndInstall() {\n            mStrings.clear();\n\n            final int poolPosition = mParcel.readInt();\n            final int startPosition = mParcel.dataPosition();\n\n            // The pool is at the end of the parcel.\n            mParcel.setDataPosition(poolPosition);\n            mParcel.readStringList(mStrings);\n\n            // Then move back.\n            mParcel.setDataPosition(startPosition);\n\n            if (DEBUG) {\n                Log.i(TAG, \"Read \" + mStrings.size() + \" strings\");\n                for (int i = 0; i < mStrings.size(); i++) {\n                    Log.i(TAG, \"  \" + i + \": \\\"\" + mStrings.get(i) + \"\\\"\");\n                }\n            }\n\n            mParcel.setReadWriteHelper(this);\n        }",
  "func_after": "public void startAndInstall() {\n            mStrings.clear();\n\n            final int poolPosition = mParcel.readInt();\n            if (poolPosition < 0) {\n                throw new IllegalStateException(\"Invalid string pool position: \" + poolPosition);\n            }\n            final int startPosition = mParcel.dataPosition();\n\n            // The pool is at the end of the parcel.\n            mParcel.setDataPosition(poolPosition);\n            mParcel.readStringList(mStrings);\n\n            // Then move back.\n            mParcel.setDataPosition(startPosition);\n\n            if (DEBUG) {\n                Log.i(TAG, \"Read \" + mStrings.size() + \" strings\");\n                for (int i = 0; i < mStrings.size(); i++) {\n                    Log.i(TAG, \"  \" + i + \": \\\"\" + mStrings.get(i) + \"\\\"\");\n                }\n            }\n\n            mParcel.setReadWriteHelper(this);\n        }",
  "diff_func": "--- func_before\n+++ func_after\n public void startAndInstall() {\n             mStrings.clear();\n \n             final int poolPosition = mParcel.readInt();\n+            if (poolPosition < 0) {\n+                throw new IllegalStateException(\"Invalid string pool position: \" + poolPosition);\n+            }\n             final int startPosition = mParcel.dataPosition();\n \n             // The pool is at the end of the parcel.\n             mParcel.setDataPosition(poolPosition);\n             mParcel.readStringList(mStrings);\n \n             // Then move back.\n             mParcel.setDataPosition(startPosition);\n \n             if (DEBUG) {\n                 Log.i(TAG, \"Read \" + mStrings.size() + \" strings\");\n                 for (int i = 0; i < mStrings.size(); i++) {\n                     Log.i(TAG, \"  \" + i + \": \\\"\" + mStrings.get(i) + \"\\\"\");\n                 }\n             }\n \n             mParcel.setReadWriteHelper(this);\n         }",
  "diff_source": "custom"
}