{
  "id": 2881,
  "language": "Java",
  "commit_url": "https://github.com/AOSPA/android_frameworks_base/commit/10f0195f463f4266d351ec5db4817a916cf8010f",
  "commit_sha": "10f0195f463f4266d351ec5db4817a916cf8010f",
  "commit_msg": "Enforce package visibility filter on the PreferredActivities\n\nA security fix to enforce package visibility filter on the api of\nPackageManager#getPreferredActivities.\n\nBug: 188218313\nTest: atest AppEnumerationTests\nChange-Id: I73e2385ee51e1921dc1abe4292a66a4d9a7f15ed",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "services/core/java/com/android/server/pm/PackageManagerService.java",
  "func_name": "getPreferredActivitiesInternal",
  "func_before": "public int getPreferredActivitiesInternal(List<WatchedIntentFilter> outFilters,\n            List<ComponentName> outActivities, String packageName) {\n        if (getInstantAppPackageName(Binder.getCallingUid()) != null) {\n            return 0;\n        }\n        int num = 0;\n        final int userId = UserHandle.getCallingUserId();\n        // reader\n        synchronized (mLock) {\n            PreferredIntentResolver pir = mSettings.getPreferredActivities(userId);\n            if (pir != null) {\n                final Iterator<PreferredActivity> it = pir.filterIterator();\n                while (it.hasNext()) {\n                    final PreferredActivity pa = it.next();\n                    if (packageName == null\n                            || (pa.mPref.mComponent.getPackageName().equals(packageName)\n                                    && pa.mPref.mAlways)) {\n                        if (outFilters != null) {\n                            outFilters.add(new WatchedIntentFilter(pa.getIntentFilter()));\n                        }\n                        if (outActivities != null) {\n                            outActivities.add(pa.mPref.mComponent);\n                        }\n                    }\n                }\n            }\n        }\n\n        return num;\n    }",
  "func_after": "public int getPreferredActivitiesInternal(List<WatchedIntentFilter> outFilters,\n            List<ComponentName> outActivities, String packageName) {\n        final int callingUid = Binder.getCallingUid();\n        if (getInstantAppPackageName(callingUid) != null) {\n            return 0;\n        }\n        int num = 0;\n        final int userId = UserHandle.getCallingUserId();\n        // reader\n        synchronized (mLock) {\n            PreferredIntentResolver pir = mSettings.getPreferredActivities(userId);\n            if (pir != null) {\n                final Iterator<PreferredActivity> it = pir.filterIterator();\n                while (it.hasNext()) {\n                    final PreferredActivity pa = it.next();\n                    final String prefPackageName = pa.mPref.mComponent.getPackageName();\n                    if (packageName == null\n                            || (prefPackageName.equals(packageName) && pa.mPref.mAlways)) {\n                        if (shouldFilterApplicationLocked(\n                                mSettings.getPackageLPr(prefPackageName), callingUid, userId)) {\n                            continue;\n                        }\n                        if (outFilters != null) {\n                            outFilters.add(new WatchedIntentFilter(pa.getIntentFilter()));\n                        }\n                        if (outActivities != null) {\n                            outActivities.add(pa.mPref.mComponent);\n                        }\n                    }\n                }\n            }\n        }\n\n        return num;\n    }",
  "diff_func": "--- func_before\n+++ func_after\n public int getPreferredActivitiesInternal(List<WatchedIntentFilter> outFilters,\n             List<ComponentName> outActivities, String packageName) {\n+        final int callingUid = Binder.getCallingUid();\n-        if (getInstantAppPackageName(Binder.getCallingUid()) != null) {\n+        if (getInstantAppPackageName(callingUid) != null) {\n             return 0;\n         }\n         int num = 0;\n         final int userId = UserHandle.getCallingUserId();\n         // reader\n         synchronized (mLock) {\n             PreferredIntentResolver pir = mSettings.getPreferredActivities(userId);\n             if (pir != null) {\n                 final Iterator<PreferredActivity> it = pir.filterIterator();\n                 while (it.hasNext()) {\n                     final PreferredActivity pa = it.next();\n+                    final String prefPackageName = pa.mPref.mComponent.getPackageName();\n                     if (packageName == null\n-                            || (pa.mPref.mComponent.getPackageName().equals(packageName)\n-                                    && pa.mPref.mAlways)) {\n+                            || (prefPackageName.equals(packageName) && pa.mPref.mAlways)) {\n+                        if (shouldFilterApplicationLocked(\n+                                mSettings.getPackageLPr(prefPackageName), callingUid, userId)) {\n+                            continue;\n+                        }\n                         if (outFilters != null) {\n                             outFilters.add(new WatchedIntentFilter(pa.getIntentFilter()));\n                         }\n                         if (outActivities != null) {\n                             outActivities.add(pa.mPref.mComponent);\n                         }\n                     }\n                 }\n             }\n         }\n \n         return num;\n     }",
  "diff_source": "custom"
}