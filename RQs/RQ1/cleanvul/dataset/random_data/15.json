{
  "id": 15,
  "language": "Java",
  "commit_url": "https://github.com/Alluxio/alluxio/commit/0c221f12c0602a77982b2a38b2d24e7dc75196b8",
  "commit_sha": "0c221f12c0602a77982b2a38b2d24e7dc75196b8",
  "commit_msg": "Fix out of bound error in parsing s3 Authorization header\n\n### What changes are proposed in this pull request?\n\nfix out of bound error in parsing s3 Authorization header\n\n### Why are the changes needed?\nif the authorization header have not the \"/\", the out of bound error\nwill happen, and then Alluxio proxy will return an `500 Internal Error`\nto client.\n\npr-link: Alluxio/alluxio#16450\nchange-id: cid-699c576b4fcadc24b98c6761c6883c0cd380128b",
  "pr_url": "https://github.com/Alluxio/alluxio/pull/16450",
  "pr_info": "### What changes are proposed in this pull request?\r\n\r\nfix out of bound error in parsing s3 Authorization header\r\n\r\n### Why are the changes needed?\r\nif the authorization header have not the \"/\", the out of bound error will happen, and then Alluxio proxy will return an `500 Internal Error` to client.\r\n",
  "file_name": "core/server/proxy/src/main/java/alluxio/proxy/s3/S3RestUtils.java",
  "func_name": "getUserFromAuthorization",
  "func_before": "@VisibleForTesting\n  public static String getUserFromAuthorization(String authorization, AlluxioConfiguration conf)\n      throws S3Exception {\n    if (conf.get(PropertyKey.SECURITY_AUTHENTICATION_TYPE) == AuthType.NOSASL) {\n      return null;\n    }\n    if (authorization == null) {\n      throw new S3Exception(\"The authorization header that you provided is not valid.\",\n          S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n    }\n\n    // Parse the authorization header defined at\n    // https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html\n    // All other authorization types are deprecated or EOL (as of writing)\n    // Example Header value (spaces turned to line breaks):\n    // AWS4-HMAC-SHA256\n    // Credential=AKIAIOSFODNN7EXAMPLE/20130524/us-east-1/s3/aws4_request,\n    // SignedHeaders=host;range;x-amz-date,\n    // Signature=fe5f80f77d5fa3beca038a248ff027d0445342fe2855ddc963176630326f1024\n\n    // We only care about the credential key, so split the header by \" \" and then take everything\n    // after the \"=\" and before the first \"/\"\n    String[] fields = authorization.split(\" \");\n    if (fields.length < 2) {\n      throw new S3Exception(\"The authorization header that you provided is not valid.\",\n          S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n    }\n    String credentials = fields[1];\n    String[] creds = credentials.split(\"=\");\n    // only support version 4 signature\n    if (creds.length < 2 || !StringUtils.equals(\"Credential\", creds[0])) {\n      throw new S3Exception(\"The authorization header that you provided is not valid.\",\n          S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n    }\n\n    final String user = creds[1].substring(0, creds[1].indexOf(\"/\")).trim();\n    if (user.isEmpty()) {\n      throw new S3Exception(\"The authorization header that you provided is not valid.\",\n          S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n    }\n\n    return user;\n  }",
  "func_after": "@VisibleForTesting\n  public static String getUserFromAuthorization(String authorization, AlluxioConfiguration conf)\n      throws S3Exception {\n    if (conf.get(PropertyKey.SECURITY_AUTHENTICATION_TYPE) == AuthType.NOSASL) {\n      return null;\n    }\n    if (authorization == null) {\n      throw new S3Exception(\"The authorization header that you provided is not valid.\",\n          S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n    }\n\n    // Parse the authorization header defined at\n    // https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html\n    // All other authorization types are deprecated or EOL (as of writing)\n    // Example Header value (spaces turned to line breaks):\n    // AWS4-HMAC-SHA256\n    // Credential=AKIAIOSFODNN7EXAMPLE/20130524/us-east-1/s3/aws4_request,\n    // SignedHeaders=host;range;x-amz-date,\n    // Signature=fe5f80f77d5fa3beca038a248ff027d0445342fe2855ddc963176630326f1024\n\n    // We only care about the credential key, so split the header by \" \" and then take everything\n    // after the \"=\" and before the first \"/\"\n    String[] fields = authorization.split(\" \");\n    if (fields.length < 2) {\n      throw new S3Exception(\"The authorization header that you provided is not valid.\",\n          S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n    }\n    String credentials = fields[1];\n    String[] creds = credentials.split(\"=\");\n    // only support version 4 signature\n    if (creds.length < 2 || !StringUtils.equals(\"Credential\", creds[0])\n        || !creds[1].contains(\"/\")) {\n      throw new S3Exception(\"The authorization header that you provided is not valid.\",\n          S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n    }\n\n    final String user = creds[1].substring(0, creds[1].indexOf(\"/\")).trim();\n    if (user.isEmpty()) {\n      throw new S3Exception(\"The authorization header that you provided is not valid.\",\n          S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n    }\n\n    return user;\n  }",
  "diff_func": "--- func_before\n+++ func_after\n @VisibleForTesting\n   public static String getUserFromAuthorization(String authorization, AlluxioConfiguration conf)\n       throws S3Exception {\n     if (conf.get(PropertyKey.SECURITY_AUTHENTICATION_TYPE) == AuthType.NOSASL) {\n       return null;\n     }\n     if (authorization == null) {\n       throw new S3Exception(\"The authorization header that you provided is not valid.\",\n           S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n     }\n \n     // Parse the authorization header defined at\n     // https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html\n     // All other authorization types are deprecated or EOL (as of writing)\n     // Example Header value (spaces turned to line breaks):\n     // AWS4-HMAC-SHA256\n     // Credential=AKIAIOSFODNN7EXAMPLE/20130524/us-east-1/s3/aws4_request,\n     // SignedHeaders=host;range;x-amz-date,\n     // Signature=fe5f80f77d5fa3beca038a248ff027d0445342fe2855ddc963176630326f1024\n \n     // We only care about the credential key, so split the header by \" \" and then take everything\n     // after the \"=\" and before the first \"/\"\n     String[] fields = authorization.split(\" \");\n     if (fields.length < 2) {\n       throw new S3Exception(\"The authorization header that you provided is not valid.\",\n           S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n     }\n     String credentials = fields[1];\n     String[] creds = credentials.split(\"=\");\n     // only support version 4 signature\n-    if (creds.length < 2 || !StringUtils.equals(\"Credential\", creds[0])) {\n+    if (creds.length < 2 || !StringUtils.equals(\"Credential\", creds[0])\n+        || !creds[1].contains(\"/\")) {\n       throw new S3Exception(\"The authorization header that you provided is not valid.\",\n           S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);\n     }\n \n     final String user = creds[1].substring(0, creds[1].indexOf(\"/\")).trim();\n     if (user.isEmpty()) {\n       throw new S3Exception(\"The authorization header that y",
  "diff_source": "custom"
}