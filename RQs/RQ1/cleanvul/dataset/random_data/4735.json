{
  "id": 4735,
  "language": "C/C++",
  "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/821a5938d100458f4d09d634041b05c860554ce0",
  "commit_sha": "821a5938d100458f4d09d634041b05c860554ce0",
  "commit_msg": "avcodec/g2meet: Fix order of align and pixel size multiplication.\n\nFixes out of array accesses\nFixes Ticket2922\n\nFound-by: ami_stuff\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "libavcodec/g2meet.c",
  "func_name": "g2m_init_buffers",
  "func_before": "static int g2m_init_buffers(G2MContext *c)\n{\n    int aligned_height;\n\n    if (!c->framebuf || c->old_width < c->width || c->old_height < c->height) {\n        c->framebuf_stride = FFALIGN(c->width * 3, 16);\n        aligned_height     = FFALIGN(c->height,    16);\n        av_free(c->framebuf);\n        c->framebuf = av_mallocz(c->framebuf_stride * aligned_height);\n        if (!c->framebuf)\n            return AVERROR(ENOMEM);\n    }\n    if (!c->synth_tile || !c->jpeg_tile ||\n        c->old_tile_w < c->tile_width ||\n        c->old_tile_h < c->tile_height) {\n        c->tile_stride = FFALIGN(c->tile_width * 3, 16);\n        aligned_height = FFALIGN(c->tile_height,    16);\n        av_free(c->synth_tile);\n        av_free(c->jpeg_tile);\n        av_free(c->kempf_buf);\n        av_free(c->kempf_flags);\n        c->synth_tile  = av_mallocz(c->tile_stride      * aligned_height);\n        c->jpeg_tile   = av_mallocz(c->tile_stride      * aligned_height);\n        c->kempf_buf   = av_mallocz((c->tile_width + 1) * aligned_height\n                                    + FF_INPUT_BUFFER_PADDING_SIZE);\n        c->kempf_flags = av_mallocz( c->tile_width      * aligned_height);\n        if (!c->synth_tile || !c->jpeg_tile ||\n            !c->kempf_buf || !c->kempf_flags)\n            return AVERROR(ENOMEM);\n    }\n\n    return 0;\n}",
  "func_after": "static int g2m_init_buffers(G2MContext *c)\n{\n    int aligned_height;\n\n    if (!c->framebuf || c->old_width < c->width || c->old_height < c->height) {\n        c->framebuf_stride = FFALIGN(c->width * 3, 16);\n        aligned_height     = FFALIGN(c->height,    16);\n        av_free(c->framebuf);\n        c->framebuf = av_mallocz(c->framebuf_stride * aligned_height);\n        if (!c->framebuf)\n            return AVERROR(ENOMEM);\n    }\n    if (!c->synth_tile || !c->jpeg_tile ||\n        c->old_tile_w < c->tile_width ||\n        c->old_tile_h < c->tile_height) {\n        c->tile_stride = FFALIGN(c->tile_width, 16) * 3;\n        aligned_height = FFALIGN(c->tile_height,    16);\n        av_free(c->synth_tile);\n        av_free(c->jpeg_tile);\n        av_free(c->kempf_buf);\n        av_free(c->kempf_flags);\n        c->synth_tile  = av_mallocz(c->tile_stride      * aligned_height);\n        c->jpeg_tile   = av_mallocz(c->tile_stride      * aligned_height);\n        c->kempf_buf   = av_mallocz((c->tile_width + 1) * aligned_height\n                                    + FF_INPUT_BUFFER_PADDING_SIZE);\n        c->kempf_flags = av_mallocz( c->tile_width      * aligned_height);\n        if (!c->synth_tile || !c->jpeg_tile ||\n            !c->kempf_buf || !c->kempf_flags)\n            return AVERROR(ENOMEM);\n    }\n\n    return 0;\n}",
  "diff_func": "--- func_before\n+++ func_after\n static int g2m_init_buffers(G2MContext *c)\n {\n     int aligned_height;\n \n     if (!c->framebuf || c->old_width < c->width || c->old_height < c->height) {\n         c->framebuf_stride = FFALIGN(c->width * 3, 16);\n         aligned_height     = FFALIGN(c->height,    16);\n         av_free(c->framebuf);\n         c->framebuf = av_mallocz(c->framebuf_stride * aligned_height);\n         if (!c->framebuf)\n             return AVERROR(ENOMEM);\n     }\n     if (!c->synth_tile || !c->jpeg_tile ||\n         c->old_tile_w < c->tile_width ||\n         c->old_tile_h < c->tile_height) {\n-        c->tile_stride = FFALIGN(c->tile_width * 3, 16);\n+        c->tile_stride = FFALIGN(c->tile_width, 16) * 3;\n         aligned_height = FFALIGN(c->tile_height,    16);\n         av_free(c->synth_tile);\n         av_free(c->jpeg_tile);\n         av_free(c->kempf_buf);\n         av_free(c->kempf_flags);\n         c->synth_tile  = av_mallocz(c->tile_stride      * aligned_height);\n         c->jpeg_tile   = av_mallocz(c->tile_stride      * aligned_height);\n         c->kempf_buf   = av_mallocz((c->tile_width + 1) * aligned_height\n                                     + FF_INPUT_BUFFER_PADDING_SIZE);\n         c->kempf_flags = av_mallocz( c->tile_width      * aligned_height);\n         if (!c->synth_tile || !c->jpeg_tile ||\n             !c->kempf_buf || !c->kempf_flags)\n             return AVERROR(ENOMEM);\n     }\n \n     return 0;\n }",
  "diff_source": "custom"
}