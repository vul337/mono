{
  "id": 916,
  "language": "Java",
  "commit_url": "https://github.com/checkmarx-ltd/cx-flow/commit/bcc6cc60cc9b89c2f2453eb7d869bdc681b7d0c3",
  "commit_sha": "bcc6cc60cc9b89c2f2453eb7d869bdc681b7d0c3",
  "commit_msg": "[JIRA:CXFLW-233] CxFlow (GH 904): Add SCA filter for vulnerabilities that break Policy Violations (#990)\n\n* [CXFLW-233] CxFlow (GH 904): Add SCA filter for vulnerabilities that break Policy Violations.\r\n\r\n* CxFlow (GH 904): Add SCA filter for vulnerabilities that break Policy Violations\r\n\r\nUpdate Wiki for Policy Violation filters.\r\n\r\n* [JIRA:CXFLW-233] CxFlow (GH 904): Add SCA filter for vulnerabilities that break Policy Violations\r\n\r\nUpdate CxSBSDK version to 0.5.15, which contains change for SCA filter for Policy Violations.\r\n\r\n* Revert Temporary assert False due to issue in SCA Policy Management\r\n\r\nRevert Temporary assert False due to issue in SCA Policy Management.",
  "pr_url": "https://github.com/checkmarx-ltd/cx-flow/pull/990",
  "pr_info": "â€¦break Policy Violations.\r\n\r\nBy submitting a PR to this repository, you agree to the terms within the [Checkmarx Code of Conduct](https://github.com/checkmarx-ltd/open-source-template/blob/master/CODE-OF-CONDUCT.md). Please see the [contributing guidelines](https://github.com/checkmarx-ltd/open-source-template/blob/master/CONTRIBUTING.md) for how to create and submit a high-quality PR for this repo.\r\n\r\n### Description\r\n\r\n**Describe the problem**\r\nCurrently there is no way to filter only SCA vulnerabilities that breach Policy Violations\r\n\r\n**Solution**\r\nAdd a filter-policy-violation config to the sca block that only validates vulnerabilities that breach Policy Violations:\r\n````\r\nsca:\r\n  - filter-policy-violation: true\r\n ````\r\nThis will allow to create bug-tracking tickets only in cae SCA vulnerabilities breach policies.\r\n\r\nIf filter not configured then package policy violation, both true and false, will included in vulnerabilities.\r\n\r\n### References\r\n\r\n> [Include supporting link to GitHub Issue/PR number\r\n](https://github.com/checkmarx-ltd/cx-flow/issues/904)\r\n\r\n### Testing\r\n\r\n> Describe how this change was tested. Be specific about anything not tested and reasons why. If this solution has unit and/or integration testing, tests should be added for new functionality and existing tests should complete without errors.\r\n>\r\n> Please include any manual steps for testing end-to-end or functionality not covered by unit/integration tests.\r\n\r\n### Checklist\r\n\r\n- [ ] I have added documentation for new/changed functionality in this PR (if applicable).  *If documentation is a Wiki Update, please indicate desired changes within PR MD Comment*\r\n- [ ] All active GitHub checks for tests, formatting, and security are passing\r\n- [ ] The correct base branch is being used\r\n- [ ] Verified that SCA and SAST scan results are as expected\r\n",
  "file_name": "src/main/java/com/checkmarx/flow/service/ScaFilterFactory.java",
  "func_name": "initScaFilter",
  "func_before": "public void initScaFilter(ScanRequest request) {\n        log.info(\"Initializing SCA filters.\");\n\n        List<Filter> severityFilters = getSeverityFilters(scaProperties.getFilterSeverity());\n        Filter scoreFilter = getScoreFilter(scaProperties.getFilterScore());\n\n        List<Filter> allFilters = combine(severityFilters, scoreFilter);\n        writeToLog(allFilters);\n\n        setScaFilters(allFilters, request);\n    }",
  "func_after": "public void initScaFilter(ScanRequest request) {\n        log.info(\"Initializing SCA filters.\");\n\n        List<Filter> severityFilters = getSeverityFilters(scaProperties.getFilterSeverity());\n        Filter scoreFilter = getScoreFilter(scaProperties.getFilterScore());\n        Filter policyViolationFilter = getPolicyViolationFilter(scaProperties.getFilterPolicyViolation());\n\n        List<Filter> allFilters = combine(severityFilters, scoreFilter,policyViolationFilter);\n        writeToLog(allFilters);\n\n        setScaFilters(allFilters, request);\n    }",
  "diff_func": "--- func_before\n+++ func_after\n public void initScaFilter(ScanRequest request) {\n         log.info(\"Initializing SCA filters.\");\n \n         List<Filter> severityFilters = getSeverityFilters(scaProperties.getFilterSeverity());\n         Filter scoreFilter = getScoreFilter(scaProperties.getFilterScore());\n+        Filter policyViolationFilter = getPolicyViolationFilter(scaProperties.getFilterPolicyViolation());\n \n-        List<Filter> allFilters = combine(severityFilters, scoreFilter);\n+        List<Filter> allFilters = combine(severityFilters, scoreFilter,policyViolationFilter);\n         writeToLog(allFilters);\n \n         setScaFilters(allFilters, request);\n     }",
  "diff_source": "custom"
}