{
  "id": 4878,
  "language": "Python",
  "commit_url": "https://github.com/matrix-org/synapse/commit/91f2bd090",
  "commit_sha": "91f2bd090",
  "commit_msg": "Prevent the media store from writing outside of the configured directory\n\nAlso tighten validation of server names by forbidding invalid characters\nin IPv6 addresses and empty domain labels.",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "synapse/rest/media/v1/filepath.py",
  "func_name": "url_cache_thumbnail_rel",
  "func_before": "def url_cache_thumbnail_rel(\n        self, media_id: str, width: int, height: int, content_type: str, method: str\n    ) -> str:\n        # Media id is of the form <DATE><RANDOM_STRING>\n        # E.g.: 2017-09-28-fsdRDt24DS234dsf\n\n        top_level_type, sub_type = content_type.split(\"/\")\n        file_name = \"%i-%i-%s-%s-%s\" % (width, height, top_level_type, sub_type, method)\n\n        if NEW_FORMAT_ID_RE.match(media_id):\n            return os.path.join(\n                \"url_cache_thumbnails\", media_id[:10], media_id[11:], file_name\n            )\n        else:\n            return os.path.join(\n                \"url_cache_thumbnails\",\n                media_id[0:2],\n                media_id[2:4],\n                media_id[4:],\n                file_name,\n            )",
  "func_after": "def url_cache_thumbnail_rel(\n        self, media_id: str, width: int, height: int, content_type: str, method: str\n    ) -> str:\n        # Media id is of the form <DATE><RANDOM_STRING>\n        # E.g.: 2017-09-28-fsdRDt24DS234dsf\n\n        top_level_type, sub_type = content_type.split(\"/\")\n        file_name = \"%i-%i-%s-%s-%s\" % (width, height, top_level_type, sub_type, method)\n\n        if NEW_FORMAT_ID_RE.match(media_id):\n            return os.path.join(\n                \"url_cache_thumbnails\",\n                _validate_path_component(media_id[:10]),\n                _validate_path_component(media_id[11:]),\n                _validate_path_component(file_name),\n            )\n        else:\n            return os.path.join(\n                \"url_cache_thumbnails\",\n                _validate_path_component(media_id[0:2]),\n                _validate_path_component(media_id[2:4]),\n                _validate_path_component(media_id[4:]),\n                _validate_path_component(file_name),\n            )",
  "diff_func": "--- func_before\n+++ func_after\n def url_cache_thumbnail_rel(\n         self, media_id: str, width: int, height: int, content_type: str, method: str\n     ) -> str:\n         # Media id is of the form <DATE><RANDOM_STRING>\n         # E.g.: 2017-09-28-fsdRDt24DS234dsf\n \n         top_level_type, sub_type = content_type.split(\"/\")\n         file_name = \"%i-%i-%s-%s-%s\" % (width, height, top_level_type, sub_type, method)\n \n         if NEW_FORMAT_ID_RE.match(media_id):\n             return os.path.join(\n-                \"url_cache_thumbnails\", media_id[:10], media_id[11:], file_name\n+                \"url_cache_thumbnails\",\n+                _validate_path_component(media_id[:10]),\n+                _validate_path_component(media_id[11:]),\n+                _validate_path_component(file_name),\n             )\n         else:\n             return os.path.join(\n                 \"url_cache_thumbnails\",\n-                media_id[0:2],\n-                media_id[2:4],\n-                media_id[4:],\n-                file_name,\n+                _validate_path_component(media_id[0:2]),\n+                _validate_path_component(media_id[2:4]),\n+                _validate_path_component(media_id[4:]),\n+                _validate_path_component(file_name),\n             )",
  "diff_source": "custom"
}