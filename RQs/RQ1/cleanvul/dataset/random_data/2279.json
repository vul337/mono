{
  "id": 2279,
  "language": "Java",
  "commit_url": "https://github.com/fosslight/fosslight/commit/fb01502bc0fb52768355131b4db9a2d130700d08",
  "commit_sha": "fb01502bc0fb52768355131b4db9a2d130700d08",
  "commit_msg": "Fix a vulnerability for resource leak\n\nUse try_with_resources statement.\n\nSigned-off-by: yugeeklab <yugeeklab@gmail.com>",
  "pr_url": "https://github.com/fosslight/fosslight/pull/278",
  "pr_info": "Put the method \"close()\" into appropriate position.\r\n\r\nSigned-off-by: yugeeklab <yugeeklab@gmail.com>\r\n\r\n## Description\r\n<!-- \r\nPlease describe what this PR do.\r\n -->\r\n\r\n\r\n## Type of change\r\n<!--\r\nPlease insert 'x' one of the type of change.\r\n -->\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Documentation update\r\n- [x] Refactoring, Maintenance\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n",
  "file_name": "src/main/java/oss/fosslight/domain/CoMailManager.java",
  "func_name": "getMailComponentData",
  "func_before": "private List<Map<String, Object>> getMailComponentData(List<String> params, String key) {\n\t\t// sql 문 생성\n\t\tString sql = CoCodeManager.getCodeExpString(CoConstDef.CD_MAIL_COMPONENT_NAME, key);\n\t\tConnection conn = null;\n\t\tPreparedStatement pstmt = null;\n\t\tResultSet rs = null;\n\t\tList<Map<String, Object>> dataList = new ArrayList<>();\n\n\t\ttry {\n\t\t\tconn = DriverManager.getConnection(connStr, connUser, connPw);\n\t\t\tpstmt = conn.prepareStatement(sql);\n\t\t\tint parameterIndex = 1;\n\t\t\tfor(String param : params) {\n\t\t\t\tpstmt.setString(parameterIndex++, param);\n\t\t\t}\n\t\t\trs = pstmt.executeQuery();\n\t\t\t\n\t\t\tif (rs != null) {\n\t\t\t\tResultSetMetaData rsmd = rs.getMetaData();\n\t\t\t\tint colCount = rsmd.getColumnCount(); // 컬럼수\n\t\t\t\tMap<String, Object> dataMap;\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tdataMap = new HashMap<>();\n\t\t\t\t\tfor(int colIdx=1; colIdx<=colCount; colIdx++) {\n\t\t\t\t\t\tString _contents = (String)rs.getString(colIdx);\n\t\t\t\t\t\tif(avoidNull(_contents).indexOf(\"\\n\") > -1) {\n\t\t\t\t\t\t\t_contents = _contents.replaceAll(\"\\n\", \"<br />\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdataMap.put(rsmd.getColumnLabel(colIdx), _contents);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(CoConstDef.CD_MAIL_COMPONENT_OSSBASICINFO.equals(key)) {\n\t\t\t\t\t\tif(dataMap.containsKey(\"identificationStatus\") && dataMap.containsKey(\"verificationStatus\") \n\t\t\t\t\t\t\t\t&& CoConstDef.CD_DTL_IDENTIFICATION_STATUS_CONFIRM.equals(dataMap.get(\"identificationStatus\")) && CoConstDef.CD_DTL_IDENTIFICATION_STATUS_CONFIRM.equals(dataMap.get(\"verificationStatus\"))) {\n\t\t\t\t\t\t\tif(dataMap.containsKey(\"noticeFileId\")) {\n\t\t\t\t\t\t\t\tdataMap.remove(\"noticeFileId\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(dataMap.containsKey(\"packageFileId\")) {\n\t\t\t\t\t\t\t\tdataMap.remove(\"packageFileId\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t\t\tif(CoConstDef.CD_MAIL_COMPONENT_VULNERABILITY_PRJ.equals(key) || CoConstDef.CD_MAIL_COMPONENT_VULNERABILITY_OSS.equals(key) || CoConstDef.CD_MAIL_COMPONENT_VULNERABILITY_PROJECT_RECALCULATED_ALL.equals(key)) {\n\t\t\t\t\t\tdataMap.remove(\"noticeFileId\");\n\t\t\t\t\t\tdataMap.remove(\"packageFileId\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdataList.add(dataMap);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} catch (SQLException e) {\n\t\t\tlog.error(e.getMessage(), e);\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif(rs != null) {\n\t\t\t\t\trs.close();\n\t\t\t\t}\n\t\t\t\tif(pstmt != null) {\n\t\t\t\t\tpstmt.close();\n\t\t\t\t}\n\t\t\t\tif(conn != null && !conn.isClosed()) {\n\t\t\t\t\tconn.close();\n\t\t\t\t}\n\t\t\t} catch (Exception e2) {\n\t\t\t\tlog.error(e2.getMessage(), e2);\n\t\t\t}\n\t\t}\n\t\treturn dataList;\n\t}",
  "func_after": "private List<Map<String, Object>> getMailComponentData(List<String> params, String key) {\n\t\t// sql 문 생성\n\t\tString sql = CoCodeManager.getCodeExpString(CoConstDef.CD_MAIL_COMPONENT_NAME, key);\n\t\tList<Map<String, Object>> dataList = new ArrayList<>();\n\n\t\ttry(\n\t\t\tConnection conn = DriverManager.getConnection(connStr, connUser, connPw);\n\t\t\tPreparedStatement pstmt = conn.prepareStatement(sql);\n\t\t\tResultSet rs = pstmt.executeQuery()\n\t\t\t) {\n\n\t\t\tint parameterIndex = 1;\n\t\t\tfor(String param : params) {\n\t\t\t\tpstmt.setString(parameterIndex++, param);\n\t\t\t}\n\t\t\t\n\t\t\tif (rs != null) {\n\t\t\t\tResultSetMetaData rsmd = rs.getMetaData();\n\t\t\t\tint colCount = rsmd.getColumnCount(); // 컬럼수\n\t\t\t\tMap<String, Object> dataMap;\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tdataMap = new HashMap<>();\n\t\t\t\t\tfor(int colIdx=1; colIdx<=colCount; colIdx++) {\n\t\t\t\t\t\tString _contents = (String)rs.getString(colIdx);\n\t\t\t\t\t\tif(avoidNull(_contents).indexOf(\"\\n\") > -1) {\n\t\t\t\t\t\t\t_contents = _contents.replaceAll(\"\\n\", \"<br />\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdataMap.put(rsmd.getColumnLabel(colIdx), _contents);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(CoConstDef.CD_MAIL_COMPONENT_OSSBASICINFO.equals(key)) {\n\t\t\t\t\t\tif(dataMap.containsKey(\"identificationStatus\") && dataMap.containsKey(\"verificationStatus\") \n\t\t\t\t\t\t\t\t&& CoConstDef.CD_DTL_IDENTIFICATION_STATUS_CONFIRM.equals(dataMap.get(\"identificationStatus\")) && CoConstDef.CD_DTL_IDENTIFICATION_STATUS_CONFIRM.equals(dataMap.get(\"verificationStatus\"))) {\n\t\t\t\t\t\t\tif(dataMap.containsKey(\"noticeFileId\")) {\n\t\t\t\t\t\t\t\tdataMap.remove(\"noticeFileId\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(dataMap.containsKey(\"packageFileId\")) {\n\t\t\t\t\t\t\t\tdataMap.remove(\"packageFileId\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t\t\tif(CoConstDef.CD_MAIL_COMPONENT_VULNERABILITY_PRJ.equals(key) || CoConstDef.CD_MAIL_COMPONENT_VULNERABILITY_OSS.equals(key) || CoConstDef.CD_MAIL_COMPONENT_VULNERABILITY_PROJECT_RECALCULATED_ALL.equals(key)) {\n\t\t\t\t\t\tdataMap.remove(\"noticeFileId\");\n\t\t\t\t\t\tdataMap.remove(\"packageFileId\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdataList.add(dataMap);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} catch (SQLException e) {\n\t\t\tlog.error(e.getMessage(), e);\n\t\t}\n\t\treturn dataList;\n\t}",
  "diff_func": "--- func_before\n+++ func_after\n private List<Map<String, Object>> getMailComponentData(List<String> params, String key) {\n \t\t// sql 문 생성\n \t\tString sql = CoCodeManager.getCodeExpString(CoConstDef.CD_MAIL_COMPONENT_NAME, key);\n-\t\tConnection conn = null;\n-\t\tPreparedStatement pstmt = null;\n-\t\tResultSet rs = null;\n \t\tList<Map<String, Object>> dataList = new ArrayList<>();\n \n-\t\ttry {\n+\t\ttry(\n-\t\t\tconn = DriverManager.getConnection(connStr, connUser, connPw);\n+\t\t\tConnection conn = DriverManager.getConnection(connStr, connUser, connPw);\n-\t\t\tpstmt = conn.prepareStatement(sql);\n+\t\t\tPreparedStatement pstmt = conn.prepareStatement(sql);\n+\t\t\tResultSet rs = pstmt.executeQuery()\n+\t\t\t) {\n+\n \t\t\tint parameterIndex = 1;\n \t\t\tfor(String param : params) {\n \t\t\t\tpstmt.setString(parameterIndex++, param);\n \t\t\t}\n-\t\t\trs = pstmt.executeQuery();\n \t\t\t\n \t\t\tif (rs != null) {\n \t\t\t\tResultSetMetaData rsmd = rs.getMetaData();\n \t\t\t\tint colCount = rsmd.getColumnCount(); // 컬럼수\n \t\t\t\tMap<String, Object> dataMap;\n \t\t\t\twhile (rs.next()) {\n \t\t\t\t\tdataMap = new HashMap<>();\n \t\t\t\t\tfor(int colIdx=1; colIdx<=colCount; colIdx++) {\n \t\t\t\t\t\tString _contents = (String)rs.getString(colIdx);\n \t\t\t\t\t\tif(avoidNull(_contents).indexOf(\"\\n\") > -1) {\n \t\t\t\t\t\t\t_contents = _contents.replaceAll(\"\\n\", \"<br />\");\n \t\t\t\t\t\t}\n \t\t\t\t\t\tdataMap.put(rsmd.getColumnLabel(colIdx), _contents);\n \t\t\t\t\t}\n \t\t\t\t\t\n \t\t\t\t\tif(CoConstDef.CD_MAIL_COMPONENT_OSSBASICINFO.equals(key)) {\n \t\t\t\t\t\tif(dataMap.containsKey(\"identificationStatus\") && dataMap.containsKey(\"verificationStatus\") \n \t\t\t\t\t\t\t\t&& CoConstDef.CD_DTL_IDENTIFICATION_STATUS_CONFIRM.equals(dataMap.get(\"identificationStatus\")) && CoConstDef.CD_DTL_IDENTIFICATION_STATUS_CONFIRM.equals(dataMap.get(\"verificationStatus\"))) {\n \t\t\t\t\t\t\tif(dataMap.containsKey(\"noticeFileId\")) {\n \t\t\t\t\t\t\t\tdataMap.remove(\"noticeFileId\");\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif(dataMap.containsKey(\"packageFileId\")) {\n \t\t\t\t\t\t\t\tdataMap.remove(\"packageFileId\");\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t\t\n \t\t\t\t\t} \n \t\t\t\t\t\n \t\t\t\t\tif(CoConstDef.CD_MAIL_COMPONENT_VULNERABIL",
  "diff_source": "custom"
}