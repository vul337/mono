{
  "id": 6756,
  "language": "Python",
  "commit_url": "https://github.com/pypa/pip/commit/01610be0d58bc428646126090cb2905cf219b2f4",
  "commit_sha": "01610be0d58bc428646126090cb2905cf219b2f4",
  "commit_msg": "Use a secure randomized build directory when possible",
  "pr_url": "https://github.com/pypa/pip/pull/2122",
  "pr_info": "Fixes #1964\nFixes #1935\nFixes #676\n",
  "file_name": "pip/commands/wheel.py",
  "func_name": "run",
  "func_before": "def run(self, options, args):\n\n        # confirm requirements\n        try:\n            import wheel.bdist_wheel\n            # Hack to make flake8 not complain about an unused import\n            wheel.bdist_wheel\n        except ImportError:\n            raise CommandError(\n                \"'pip wheel' requires the 'wheel' package. To fix this, run: \"\n                \"pip install wheel\"\n            )\n\n        try:\n            import pkg_resources\n        except ImportError:\n            raise CommandError(\n                \"'pip wheel' requires setuptools >= 0.8 for dist-info support.\"\n                \" To fix this, run: pip install --upgrade setuptools\"\n            )\n        else:\n            if not hasattr(pkg_resources, 'DistInfoDistribution'):\n                raise CommandError(\n                    \"'pip wheel' requires setuptools >= 0.8 for dist-info \"\n                    \"support. To fix this, run: pip install --upgrade \"\n                    \"setuptools\"\n                )\n\n        index_urls = [options.index_url] + options.extra_index_urls\n        if options.no_index:\n            logger.info('Ignoring indexes: %s', ','.join(index_urls))\n            index_urls = []\n\n        if options.use_mirrors:\n            warnings.warn(\n                \"--use-mirrors has been deprecated and will be removed in the \"\n                \"future. Explicit uses of --index-url and/or --extra-index-url\"\n                \" is suggested.\",\n                RemovedInPip7Warning,\n            )\n\n        if options.mirrors:\n            warnings.warn(\n                \"--mirrors has been deprecated and will be removed in the \"\n                \"future. Explicit uses of --index-url and/or --extra-index-url\"\n                \" is suggested.\",\n                RemovedInPip7Warning,\n            )\n            index_urls += options.mirrors\n\n        if options.download_cache:\n            warnings.warn(\n                \"--download-cache has been deprecated and will be removed in \"\n                \"the future. Pip now automatically uses and configures its \"\n                \"cache.\",\n                RemovedInPip8Warning,\n            )\n\n        with self._build_session(options) as session:\n\n            finder = PackageFinder(\n                find_links=options.find_links,\n                index_urls=index_urls,\n                use_wheel=options.use_wheel,\n                allow_external=options.allow_external,\n                allow_unverified=options.allow_unverified,\n                allow_all_external=options.allow_all_external,\n                allow_all_prereleases=options.pre,\n                process_dependency_links=options.process_dependency_links,\n                session=session,\n            )\n\n            options.build_dir = os.path.abspath(options.build_dir)\n            requirement_set = RequirementSet(\n                build_dir=options.build_dir,\n                src_dir=options.src_dir,\n                download_dir=None,\n                ignore_dependencies=options.ignore_dependencies,\n                ignore_installed=True,\n                session=session,\n                wheel_download_dir=options.wheel_dir\n            )\n\n            # make the wheelhouse\n            if not os.path.exists(options.wheel_dir):\n                os.makedirs(options.wheel_dir)\n\n            # parse args and/or requirements files\n            for name in args:\n                requirement_set.add_requirement(\n                    InstallRequirement.from_line(name, None))\n            for name in options.editables:\n                requirement_set.add_requirement(\n                    InstallRequirement.from_editable(\n                        name,\n                        default_vcs=options.default_vcs\n                    )\n                )\n            for filename in options.requirements:\n                for req in parse_requirements(\n                        filename,\n                        finder=finder,\n                        options=options,\n                        session=session):\n                    requirement_set.add_requirement(req)\n\n            # fail if no requirements\n            if not requirement_set.has_requirements:\n                logger.error(\n                    \"You must give at least one requirement to %s \"\n                    \"(see \\\"pip help %s\\\")\",\n                    self.name,\n                )\n                return\n\n            try:\n                # build wheels\n                wb = WheelBuilder(\n                    requirement_set,\n                    finder,\n                    options.wheel_dir,\n                    build_options=options.build_options or [],\n                    global_options=options.global_options or [],\n                )\n                if not wb.build():\n                    raise CommandError(\"Failed to build one or more wheels\")\n            except PreviousBuildDirError:\n                options.no_clean = True\n                raise\n            finally:\n                if not options.no_clean:\n                    requirement_set.cleanup_files()",
  "func_after": "def run(self, options, args):\n\n        # confirm requirements\n        try:\n            import wheel.bdist_wheel\n            # Hack to make flake8 not complain about an unused import\n            wheel.bdist_wheel\n        except ImportError:\n            raise CommandError(\n                \"'pip wheel' requires the 'wheel' package. To fix this, run: \"\n                \"pip install wheel\"\n            )\n\n        try:\n            import pkg_resources\n        except ImportError:\n            raise CommandError(\n                \"'pip wheel' requires setuptools >= 0.8 for dist-info support.\"\n                \" To fix this, run: pip install --upgrade setuptools\"\n            )\n        else:\n            if not hasattr(pkg_resources, 'DistInfoDistribution'):\n                raise CommandError(\n                    \"'pip wheel' requires setuptools >= 0.8 for dist-info \"\n                    \"support. To fix this, run: pip install --upgrade \"\n                    \"setuptools\"\n                )\n\n        index_urls = [options.index_url] + options.extra_index_urls\n        if options.no_index:\n            logger.info('Ignoring indexes: %s', ','.join(index_urls))\n            index_urls = []\n\n        if options.use_mirrors:\n            warnings.warn(\n                \"--use-mirrors has been deprecated and will be removed in the \"\n                \"future. Explicit uses of --index-url and/or --extra-index-url\"\n                \" is suggested.\",\n                RemovedInPip7Warning,\n            )\n\n        if options.mirrors:\n            warnings.warn(\n                \"--mirrors has been deprecated and will be removed in the \"\n                \"future. Explicit uses of --index-url and/or --extra-index-url\"\n                \" is suggested.\",\n                RemovedInPip7Warning,\n            )\n            index_urls += options.mirrors\n\n        if options.download_cache:\n            warnings.warn(\n                \"--download-cache has been deprecated and will be removed in \"\n                \"the future. Pip now automatically uses and configures its \"\n                \"cache.\",\n                RemovedInPip8Warning,\n            )\n\n        if options.build_dir:\n            options.build_dir = os.path.abspath(options.build_dir)\n\n        with self._build_session(options) as session:\n\n            finder = PackageFinder(\n                find_links=options.find_links,\n                index_urls=index_urls,\n                use_wheel=options.use_wheel,\n                allow_external=options.allow_external,\n                allow_unverified=options.allow_unverified,\n                allow_all_external=options.allow_all_external,\n                allow_all_prereleases=options.pre,\n                process_dependency_links=options.process_dependency_links,\n                session=session,\n            )\n\n            build_delete = (not (options.no_clean or options.build_dir))\n            with BuildDirectory(options.build_dir,\n                                delete=build_delete) as build_dir:\n                requirement_set = RequirementSet(\n                    build_dir=build_dir,\n                    src_dir=options.src_dir,\n                    download_dir=None,\n                    ignore_dependencies=options.ignore_dependencies,\n                    ignore_installed=True,\n                    session=session,\n                    wheel_download_dir=options.wheel_dir\n                )\n\n                # make the wheelhouse\n                if not os.path.exists(options.wheel_dir):\n                    os.makedirs(options.wheel_dir)\n\n                # parse args and/or requirements files\n                for name in args:\n                    requirement_set.add_requirement(\n                        InstallRequirement.from_line(name, None))\n                for name in options.editables:\n                    requirement_set.add_requirement(\n                        InstallRequirement.from_editable(\n                            name,\n                            default_vcs=options.default_vcs\n                        )\n                    )\n                for filename in options.requirements:\n                    for req in parse_requirements(\n                            filename,\n                            finder=finder,\n                            options=options,\n                            session=session):\n                        requirement_set.add_requirement(req)\n\n                # fail if no requirements\n                if not requirement_set.has_requirements:\n                    logger.error(\n                        \"You must give at least one requirement to %s \"\n                        \"(see \\\"pip help %s\\\")\",\n                        self.name,\n                    )\n                    return\n\n                try:\n                    # build wheels\n                    wb = WheelBuilder(\n                        requirement_set,\n                        finder,\n                        options.wheel_dir,\n                        build_options=options.build_options or [],\n                        global_options=options.global_options or [],\n                    )\n                    if not wb.build():\n                        raise CommandError(\n                            \"Failed to build one or more wheels\"\n                        )\n                except PreviousBuildDirError:\n                    options.no_clean = True\n                    raise\n                finally:\n                    if not options.no_clean:\n                        requirement_set.cleanup_files()",
  "diff_func": "--- func_before\n+++ func_after\n def run(self, options, args):\n \n         # confirm requirements\n         try:\n             import wheel.bdist_wheel\n             # Hack to make flake8 not complain about an unused import\n             wheel.bdist_wheel\n         except ImportError:\n             raise CommandError(\n                 \"'pip wheel' requires the 'wheel' package. To fix this, run: \"\n                 \"pip install wheel\"\n             )\n \n         try:\n             import pkg_resources\n         except ImportError:\n             raise CommandError(\n                 \"'pip wheel' requires setuptools >= 0.8 for dist-info support.\"\n                 \" To fix this, run: pip install --upgrade setuptools\"\n             )\n         else:\n             if not hasattr(pkg_resources, 'DistInfoDistribution'):\n                 raise CommandError(\n                     \"'pip wheel' requires setuptools >= 0.8 for dist-info \"\n                     \"support. To fix this, run: pip install --upgrade \"\n                     \"setuptools\"\n                 )\n \n         index_urls = [options.index_url] + options.extra_index_urls\n         if options.no_index:\n             logger.info('Ignoring indexes: %s', ','.join(index_urls))\n             index_urls = []\n \n         if options.use_mirrors:\n             warnings.warn(\n                 \"--use-mirrors has been deprecated and will be removed in the \"\n                 \"future. Explicit uses of --index-url and/or --extra-index-url\"\n                 \" is suggested.\",\n                 RemovedInPip7Warning,\n             )\n \n         if options.mirrors:\n             warnings.warn(\n                 \"--mirrors has been deprecated and will be removed in the \"\n                 \"future. Explicit uses of --index-url and/or --extra-index-url\"\n                 \" is suggested.\",\n                 RemovedInPip7Warning,\n             )\n             index_urls += options.mirrors\n \n         if options.download_cache:\n             warnings.warn(\n                 \"--down",
  "diff_source": "custom"
}