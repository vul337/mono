{
  "id": 5235,
  "language": "C/C++",
  "commit_url": "https://github.com/TicklishHoneyBee/nodau/commit/7a7d737a3929f335b9717ddbd31db91151b69ad2",
  "commit_sha": "7a7d737a3929f335b9717ddbd31db91151b69ad2",
  "commit_msg": "Use parametetrized SQL statement\n\nMove to parametetrized SQL statement allows using chars like \"'\" in\nnotes and also avoid sql injection",
  "pr_url": "https://github.com/TicklishHoneyBee/nodau/pull/26",
  "pr_info": "Moving to parametetrized SQL statement allows using chars like \" ' \" in notes",
  "file_name": "src/edit.c",
  "func_name": "edit_ext",
  "func_before": "static int edit_ext(char* editor, char* name, char* date, char* data)\n{\n\tint fd;\n\tint st;\n\tint sz;\n\tchar* b;\n\tchar* l;\n\tchar buff[512];\n\tpid_t pid;\n\n\tstrcpy(buff,\"/tmp/nodau.XXXXXX\");\n\tfd = mkstemp(buff);\n\n\tif (fd < 0)\n\t\treturn 1;\n\n\tpid = fork();\n\n\tif (pid < 0) {\n\t\treturn 1;\n\t}else if (pid) {\n\t\tclose(fd);\n\t\twaitpid(pid,&st,0);\n\t\tif (!st) {\n\t\t\tif ((fd = open(buff,O_RDONLY)) < 0)\n\t\t\t\treturn 1;\n\t\t\t/* find the file length */\n\t\t\tsz = lseek(fd,0,SEEK_END);\n\t\t\tlseek(fd,0,SEEK_SET);\n\t\t\tif (sz) {\n\t\t\t\t/* load the note into memory */\n\t\t\t\tb = alloca(sz+1);\n\t\t\t\tif (sz != read(fd,b,sz))\n\t\t\t\t\treturn 1;\n\t\t\t\tclose(fd);\n\t\t\t\t/* delete the file */\n\t\t\t\tremove(buff);\n\t\t\t\tb[sz] = 0;\n\t\t\t\t/* find the note data */\n\t\t\t\tl = strstr(b,\"-----\");\n\t\t\t\tif (l) {\n\t\t\t\t\t/* save the note */\n\t\t\t\t\tl += 6;\n\t\t\t\t\tif (db_update(name,l))\n\t\t\t\t\t\treturn 1;\n\n\t\t\t\t\t/* let the user know */\n\t\t\t\t\tprintf(\"%s saved\\n\",name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn st;\n\t}\n\n\tsz = strlen(name)+strlen(date)+strlen(data)+50;\n\tb = alloca(sz);\n\n\t/* insert data into file */\n\tsz = sprintf(\n\t\tb,\n\t\t\"%s (%s)\\nText above this line is ignored\\n-----\\n%s\",\n\t\tname,\n\t\tdate,\n\t\tdata\n\t);\n\tif (write(fd,b,sz) != sz) {\n\t\texit(1);\n\t}\n\tfsync(fd);\n\tclose(fd);\n\n\tst = execl(editor,editor,buff,(char*)NULL);\n\n\t/* we should only ever get here if something goes wrong with exec */\n\texit(st);\n\n\t/* and we shouldn't ever get here, but it stops the compiler complaining */\n\treturn 1;\n}",
  "func_after": "static int edit_ext(char* editor, char* name, char* date, char* data)\n{\n\tint fd;\n\tint st;\n\tint sz;\n\tchar* b;\n\tchar* l;\n\tchar buff[512];\n\tpid_t pid;\n\n\tstrcpy(buff,\"/tmp/nodau.XXXXXX\");\n\tfd = mkstemp(buff);\n\n\tif (fd < 0)\n\t\treturn 1;\n\n\tpid = fork();\n\n\tif (pid < 0) {\n\t\treturn 1;\n\t}else if (pid) {\n\t\tclose(fd);\n\t\twaitpid(pid,&st,0);\n\t\tif (!st) {\n\t\t\tif ((fd = open(buff,O_RDONLY)) < 0)\n\t\t\t\treturn 1;\n\t\t\t/* find the file length */\n\t\t\tsz = lseek(fd,0,SEEK_END);\n\t\t\tlseek(fd,0,SEEK_SET);\n\t\t\tif (sz) {\n\t\t\t\t/* load the note into memory */\n\t\t\t\tb = alloca(sz+1);\n\t\t\t\tif (sz != read(fd,b,sz))\n\t\t\t\t\treturn 1;\n\t\t\t\tclose(fd);\n\t\t\t\t/* delete the file */\n\t\t\t\tremove(buff);\n\t\t\t\tb[sz] = 0;\n\t\t\t\t/* find the note data */\n\t\t\t\tl = strstr(b,\"-----\");\n\t\t\t\tif (l) {\n\t\t\t\t\t/* save the note */\n\t\t\t\t\tl += 6;\n\t\t\t\t\tint r = db_update(name,l);\n\t\t\t\t\tif (r != SQLITE_DONE && r != SQLITE_OK)\n\t\t\t\t\t\treturn 1;\n\n\t\t\t\t\t/* let the user know */\n\t\t\t\t\tprintf(\"%s saved\\n\",name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn st;\n\t}\n\n\tsz = strlen(name)+strlen(date)+strlen(data)+50;\n\tb = alloca(sz);\n\n\t/* insert data into file */\n\tsz = sprintf(\n\t\tb,\n\t\t\"%s (%s)\\nText above this line is ignored\\n-----\\n%s\",\n\t\tname,\n\t\tdate,\n\t\tdata\n\t);\n\tif (write(fd,b,sz) != sz) {\n\t\texit(1);\n\t}\n\tfsync(fd);\n\tclose(fd);\n\n\tst = execl(editor,editor,buff,(char*)NULL);\n\n\t/* we should only ever get here if something goes wrong with exec */\n\texit(st);\n\n\t/* and we shouldn't ever get here, but it stops the compiler complaining */\n\treturn 1;\n}",
  "diff_func": "--- func_before\n+++ func_after\n static int edit_ext(char* editor, char* name, char* date, char* data)\n {\n \tint fd;\n \tint st;\n \tint sz;\n \tchar* b;\n \tchar* l;\n \tchar buff[512];\n \tpid_t pid;\n \n \tstrcpy(buff,\"/tmp/nodau.XXXXXX\");\n \tfd = mkstemp(buff);\n \n \tif (fd < 0)\n \t\treturn 1;\n \n \tpid = fork();\n \n \tif (pid < 0) {\n \t\treturn 1;\n \t}else if (pid) {\n \t\tclose(fd);\n \t\twaitpid(pid,&st,0);\n \t\tif (!st) {\n \t\t\tif ((fd = open(buff,O_RDONLY)) < 0)\n \t\t\t\treturn 1;\n \t\t\t/* find the file length */\n \t\t\tsz = lseek(fd,0,SEEK_END);\n \t\t\tlseek(fd,0,SEEK_SET);\n \t\t\tif (sz) {\n \t\t\t\t/* load the note into memory */\n \t\t\t\tb = alloca(sz+1);\n \t\t\t\tif (sz != read(fd,b,sz))\n \t\t\t\t\treturn 1;\n \t\t\t\tclose(fd);\n \t\t\t\t/* delete the file */\n \t\t\t\tremove(buff);\n \t\t\t\tb[sz] = 0;\n \t\t\t\t/* find the note data */\n \t\t\t\tl = strstr(b,\"-----\");\n \t\t\t\tif (l) {\n \t\t\t\t\t/* save the note */\n \t\t\t\t\tl += 6;\n-\t\t\t\t\tif (db_update(name,l))\n+\t\t\t\t\tint r = db_update(name,l);\n+\t\t\t\t\tif (r != SQLITE_DONE && r != SQLITE_OK)\n \t\t\t\t\t\treturn 1;\n \n \t\t\t\t\t/* let the user know */\n \t\t\t\t\tprintf(\"%s saved\\n\",name);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn st;\n \t}\n \n \tsz = strlen(name)+strlen(date)+strlen(data)+50;\n \tb = alloca(sz);\n \n \t/* insert data into file */\n \tsz = sprintf(\n \t\tb,\n \t\t\"%s (%s)\\nText above this line is ignored\\n-----\\n%s\",\n \t\tname,\n \t\tdate,\n \t\tdata\n \t);\n \tif (write(fd,b,sz) != sz) {\n \t\texit(1);\n \t}\n \tfsync(fd);\n \tclose(fd);\n \n \tst = execl(editor,editor,buff,(char*)NULL);\n \n \t/* we should only ever get here if something goes wrong with exec */\n \texit(st);\n \n \t/* and we shouldn't ever get here, but it stops the compiler complaining */\n \treturn 1;\n }",
  "diff_source": "custom"
}