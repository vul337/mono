{
  "id": 4152,
  "language": "Python",
  "commit_url": "https://github.com/miurahr/py7zr/commit/1bb43f17515c7f69673a1c88ab9cc72a7bbef406",
  "commit_sha": "1bb43f17515c7f69673a1c88ab9cc72a7bbef406",
  "commit_msg": "Fix sanity check for path traversal attack\n\n- Previous versions do not detect the attack in some case\n   - fixed it by call resolve()\n   - resolve() converts \"/hoge/fuga/../../../tmp/evil.sh\" to be \"/tmp/evil.sh\" then\n     relative_to() can detect path traversal attack.\n- Add path checker in writef() and writestr() methods\n  - When pass arcname as evil path such as \"../../../../tmp/evil.sh\"\n    it raises ValueError\n- Add test case of bad path detection\n- extraction: check symlink and junction is under target folder\n- Fix relative_path_marker removal\n- Don't put windows file namespace to output file path\n\nSigned-off-by: Hiroshi Miura <miurahr@linux.com>",
  "pr_url": "https://github.com/miurahr/py7zr/pull/480",
  "pr_info": "- Previous versions do not detect the attack in some case\r\n   - fixed it by call resolve()\r\n   - resolve() converts \"/hoge/fuga/../../../tmp/evil.sh\" to be \"/tmp/evil.sh\" then relative_to() can detect path traversal attack.\r\n- Add path checker in writef() and writestr() methods\r\n  - When pass arcname as evil path such as \"../../../../tmp/evil.sh\" it raises ValueError\r\n- Add test case of bad path detection\r\n- extraction: check symlink and junction is under target folder\r\n- Don't put windows file namespace to output file path\r\n\r\nSigned-off-by: Hiroshi Miura <miurahr@linux.com>",
  "file_name": "py7zr/helpers.py",
  "func_name": "islink",
  "func_before": "def islink(path):\n    \"\"\"\n    Cross-platform islink implementation.\n    Supports Windows NT symbolic links and reparse points.\n    \"\"\"\n    is_symlink = os.path.islink(str(path))\n    if sys.version_info >= (3, 8) or sys.platform != \"win32\" or sys.getwindowsversion()[0] < 6:\n        return is_symlink\n    # special check for directory junctions which py38 does.\n    if is_symlink:\n        if py7zr.win32compat.is_reparse_point(path):\n            is_symlink = False\n    return is_symlink",
  "func_after": "def islink(path):\n    \"\"\"\n    Cross-platform islink implementation.\n    Support Windows NT symbolic links and reparse points.\n    \"\"\"\n    is_symlink = os.path.islink(str(path))\n    if sys.version_info >= (3, 8) or sys.platform != \"win32\" or sys.getwindowsversion()[0] < 6:\n        return is_symlink\n    # special check for directory junctions which py38 does.\n    if is_symlink:\n        if py7zr.win32compat.is_reparse_point(path):\n            is_symlink = False\n    return is_symlink",
  "diff_func": "--- func_before\n+++ func_after\n def islink(path):\n     \"\"\"\n     Cross-platform islink implementation.\n-    Supports Windows NT symbolic links and reparse points.\n+    Support Windows NT symbolic links and reparse points.\n     \"\"\"\n     is_symlink = os.path.islink(str(path))\n     if sys.version_info >= (3, 8) or sys.platform != \"win32\" or sys.getwindowsversion()[0] < 6:\n         return is_symlink\n     # special check for directory junctions which py38 does.\n     if is_symlink:\n         if py7zr.win32compat.is_reparse_point(path):\n             is_symlink = False\n     return is_symlink",
  "diff_source": "custom"
}