{
  "id": 2260,
  "language": "Java",
  "commit_url": "https://github.com/qos-ch/reload4j/commit/64902fe18ce5a5dd40487051a2f6231d9fbbe9b0",
  "commit_sha": "64902fe18ce5a5dd40487051a2f6231d9fbbe9b0",
  "commit_msg": "fix issues/21 CVE-2020-9493 aka CVE-2022-23307\n\nSigned-off-by: Ceki Gulcu <ceki@qos.ch>",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "src/main/java/org/apache/log4j/chainsaw/LoggingReceiver.java",
  "func_name": "run",
  "func_before": "public void run() {\n            LOG.debug(\"Starting to get data\");\n            try {\n                final ObjectInputStream ois =\n                    new ObjectInputStream(mClient.getInputStream());\n                while (true) {\n                    final LoggingEvent event = (LoggingEvent) ois.readObject();\n                    mModel.addEvent(new EventDetails(event));\n                }\n            } catch (EOFException e) {\n                LOG.info(\"Reached EOF, closing connection\");\n            } catch (SocketException e) {\n                LOG.info(\"Caught SocketException, closing connection\");\n            } catch (IOException e) {\n                LOG.warn(\"Got IOException, closing connection\", e);\n            } catch (ClassNotFoundException e) {\n                LOG.warn(\"Got ClassNotFoundException, closing connection\", e);\n            }\n\n            try {\n                mClient.close();\n            } catch (IOException e) {\n                LOG.warn(\"Error closing connection\", e);\n            }\n        }",
  "func_after": "public void run() {\n            LOG.debug(\"Starting to get data\");\n            try {\n                final HardenedLoggingEventInputStream hleis =\n                    new HardenedLoggingEventInputStream(mClient.getInputStream());\n                while (true) {\n                    final LoggingEvent event = (LoggingEvent) hleis.readObject();\n                    mModel.addEvent(new EventDetails(event));\n                }\n            } catch (EOFException e) {\n                LOG.info(\"Reached EOF, closing connection\");\n            } catch (SocketException e) {\n                LOG.info(\"Caught SocketException, closing connection\");\n            } catch (IOException e) {\n                LOG.warn(\"Got IOException, closing connection\", e);\n            } catch (ClassNotFoundException e) {\n                LOG.warn(\"Got ClassNotFoundException, closing connection\", e);\n            }\n\n            try {\n                mClient.close();\n            } catch (IOException e) {\n                LOG.warn(\"Error closing connection\", e);\n            }\n        }",
  "diff_func": "--- func_before\n+++ func_after\n public void run() {\n             LOG.debug(\"Starting to get data\");\n             try {\n-                final ObjectInputStream ois =\n+                final HardenedLoggingEventInputStream hleis =\n-                    new ObjectInputStream(mClient.getInputStream());\n+                    new HardenedLoggingEventInputStream(mClient.getInputStream());\n                 while (true) {\n-                    final LoggingEvent event = (LoggingEvent) ois.readObject();\n+                    final LoggingEvent event = (LoggingEvent) hleis.readObject();\n                     mModel.addEvent(new EventDetails(event));\n                 }\n             } catch (EOFException e) {\n                 LOG.info(\"Reached EOF, closing connection\");\n             } catch (SocketException e) {\n                 LOG.info(\"Caught SocketException, closing connection\");\n             } catch (IOException e) {\n                 LOG.warn(\"Got IOException, closing connection\", e);\n             } catch (ClassNotFoundException e) {\n                 LOG.warn(\"Got ClassNotFoundException, closing connection\", e);\n             }\n \n             try {\n                 mClient.close();\n             } catch (IOException e) {\n                 LOG.warn(\"Error closing connection\", e);\n             }\n         }",
  "diff_source": "custom"
}