{
  "id": 2155,
  "language": "Java",
  "commit_url": "https://github.com/vaadin/flow/commit/11a6ad2ddf9b9bf91dd28515784d26c9ff5c6274",
  "commit_sha": "11a6ad2ddf9b9bf91dd28515784d26c9ff5c6274",
  "commit_msg": "Use time-constant comparison for CSRF tokens in endpoint (#10157)\n\nThis hardens the framework against a theoretical timing attack based on\r\ncomparing how quickly a request with an invalid CSRF token is rejected.\r\n\r\nNo tests since this functionality is equivalent to the previous implementation aside from timing differences that would be very fragile to verify in an automated test.\r\n\r\nRelated to https://github.com/vaadin/flow/pull/9875",
  "pr_url": "https://github.com/vaadin/flow/pull/10157",
  "pr_info": "This hardens the framework against a theoretical timing attack based on\r\ncomparing how quickly a request with an invalid CSRF token is rejected.\r\n\r\nNo tests since this functionality is equivalent to the previous implementation aside from timing differences that would be very fragile to verify in an automated test.\r\n\r\nRelated to https://github.com/vaadin/flow/pull/9875",
  "file_name": "fusion-endpoint/src/main/java/com/vaadin/flow/server/connect/auth/VaadinConnectAccessChecker.java",
  "func_name": "requestForbidden",
  "func_before": "private boolean requestForbidden(HttpServletRequest request) {\n        if (!xsrfProtectionEnabled) {\n            return false;\n        }\n\n        HttpSession session = request.getSession(false);\n        if (session == null) {\n            return false;\n        }\n\n        String csrfTokenInSession = (String) session\n                .getAttribute(VaadinService.getCsrfTokenAttributeName());\n        if (csrfTokenInSession == null) {\n            if (getLogger().isInfoEnabled()) {\n                getLogger().info(\n                        \"Unable to verify CSRF token for endpoint request, got null token in session\");\n            }\n\n            return true;\n        }\n\n        if (!csrfTokenInSession.equals(request.getHeader(\"X-CSRF-Token\"))) {\n            if (getLogger().isInfoEnabled()) {\n                getLogger().info(\"Invalid CSRF token in endpoint request\");\n            }\n\n            return true;\n        }\n\n        return false;\n    }",
  "func_after": "private boolean requestForbidden(HttpServletRequest request) {\n        if (!xsrfProtectionEnabled) {\n            return false;\n        }\n\n        HttpSession session = request.getSession(false);\n        if (session == null) {\n            return false;\n        }\n\n        String csrfTokenInSession = (String) session\n                .getAttribute(VaadinService.getCsrfTokenAttributeName());\n        if (csrfTokenInSession == null) {\n            if (getLogger().isInfoEnabled()) {\n                getLogger().info(\n                        \"Unable to verify CSRF token for endpoint request, got null token in session\");\n            }\n\n            return true;\n        }\n\n        String csrfTokenInRequest = request.getHeader(\"X-CSRF-Token\");\n        if (csrfTokenInRequest == null || !MessageDigest.isEqual(\n                csrfTokenInSession.getBytes(StandardCharsets.UTF_8), \n                csrfTokenInRequest.getBytes(StandardCharsets.UTF_8))) {\n            if (getLogger().isInfoEnabled()) {\n                getLogger().info(\"Invalid CSRF token in endpoint request\");\n            }\n\n            return true;\n        }\n\n        return false;\n    }",
  "diff_func": "--- func_before\n+++ func_after\n private boolean requestForbidden(HttpServletRequest request) {\n         if (!xsrfProtectionEnabled) {\n             return false;\n         }\n \n         HttpSession session = request.getSession(false);\n         if (session == null) {\n             return false;\n         }\n \n         String csrfTokenInSession = (String) session\n                 .getAttribute(VaadinService.getCsrfTokenAttributeName());\n         if (csrfTokenInSession == null) {\n             if (getLogger().isInfoEnabled()) {\n                 getLogger().info(\n                         \"Unable to verify CSRF token for endpoint request, got null token in session\");\n             }\n \n             return true;\n         }\n \n-        if (!csrfTokenInSession.equals(request.getHeader(\"X-CSRF-Token\"))) {\n+        String csrfTokenInRequest = request.getHeader(\"X-CSRF-Token\");\n+        if (csrfTokenInRequest == null || !MessageDigest.isEqual(\n+                csrfTokenInSession.getBytes(StandardCharsets.UTF_8), \n+                csrfTokenInRequest.getBytes(StandardCharsets.UTF_8))) {\n             if (getLogger().isInfoEnabled()) {\n                 getLogger().info(\"Invalid CSRF token in endpoint request\");\n             }\n \n             return true;\n         }\n \n         return false;\n     }",
  "diff_source": "custom"
}