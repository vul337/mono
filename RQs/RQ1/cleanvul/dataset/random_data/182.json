{
  "id": 182,
  "language": "Java",
  "commit_url": "https://github.com/aosp-mirror/platform_frameworks_base/commit/783bcba343c480f6ccedaaff41ba7171a1082e0c",
  "commit_sha": "783bcba343c480f6ccedaaff41ba7171a1082e0c",
  "commit_msg": "[SettingsProvider] key size limit for mutating settings\n\nPrior to targetSdk 22, apps could add random system settings keys which\nopens an opportunity for OOM attacks. This CL adds a key size limit.\n\nBUG: 239415997\nTest: manual; will add cts test\nChange-Id: Ic9e88c0cc3d7206c64ba5b5c7d15b50d1ffc9adc",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "packages/SettingsProvider/src/com/android/providers/settings/SettingsState.java",
  "func_name": "GuardedBy",
  "func_before": "@GuardedBy(\"mLock\")\n    public void resetSettingDefaultValueLocked(String name) {\n        Setting oldSetting = getSettingLocked(name);\n        if (oldSetting != null && !oldSetting.isNull() && oldSetting.getDefaultValue() != null) {\n            String oldValue = oldSetting.getValue();\n            String oldDefaultValue = oldSetting.getDefaultValue();\n            Setting newSetting = new Setting(name, oldSetting.getValue(), null,\n                    oldSetting.getPackageName(), oldSetting.getTag(), false,\n                    oldSetting.getId());\n            int newSize = getNewMemoryUsagePerPackageLocked(newSetting.getPackageName(), oldValue,\n                    newSetting.getValue(), oldDefaultValue, newSetting.getDefaultValue());\n            checkNewMemoryUsagePerPackageLocked(newSetting.getPackageName(), newSize);\n            mSettings.put(name, newSetting);\n            updateMemoryUsagePerPackageLocked(newSetting.getPackageName(), newSize);\n            scheduleWriteIfNeededLocked();\n        }\n    }",
  "func_after": "@GuardedBy(\"mLock\")\n    public void resetSettingDefaultValueLocked(String name) {\n        Setting oldSetting = getSettingLocked(name);\n        if (oldSetting != null && !oldSetting.isNull() && oldSetting.getDefaultValue() != null) {\n            String oldValue = oldSetting.getValue();\n            String oldDefaultValue = oldSetting.getDefaultValue();\n            Setting newSetting = new Setting(name, oldSetting.getValue(), null,\n                    oldSetting.getPackageName(), oldSetting.getTag(), false,\n                    oldSetting.getId());\n            int newSize = getNewMemoryUsagePerPackageLocked(newSetting.getPackageName(), 0,\n                    oldValue, newSetting.getValue(), oldDefaultValue, newSetting.getDefaultValue());\n            checkNewMemoryUsagePerPackageLocked(newSetting.getPackageName(), newSize);\n            mSettings.put(name, newSetting);\n            updateMemoryUsagePerPackageLocked(newSetting.getPackageName(), newSize);\n            scheduleWriteIfNeededLocked();\n        }\n    }",
  "diff_func": "--- func_before\n+++ func_after\n @GuardedBy(\"mLock\")\n     public void resetSettingDefaultValueLocked(String name) {\n         Setting oldSetting = getSettingLocked(name);\n         if (oldSetting != null && !oldSetting.isNull() && oldSetting.getDefaultValue() != null) {\n             String oldValue = oldSetting.getValue();\n             String oldDefaultValue = oldSetting.getDefaultValue();\n             Setting newSetting = new Setting(name, oldSetting.getValue(), null,\n                     oldSetting.getPackageName(), oldSetting.getTag(), false,\n                     oldSetting.getId());\n-            int newSize = getNewMemoryUsagePerPackageLocked(newSetting.getPackageName(), oldValue,\n+            int newSize = getNewMemoryUsagePerPackageLocked(newSetting.getPackageName(), 0,\n-                    newSetting.getValue(), oldDefaultValue, newSetting.getDefaultValue());\n+                    oldValue, newSetting.getValue(), oldDefaultValue, newSetting.getDefaultValue());\n             checkNewMemoryUsagePerPackageLocked(newSetting.getPackageName(), newSize);\n             mSettings.put(name, newSetting);\n             updateMemoryUsagePerPackageLocked(newSetting.getPackageName(), newSize);\n             scheduleWriteIfNeededLocked();\n         }\n     }",
  "diff_source": "custom"
}