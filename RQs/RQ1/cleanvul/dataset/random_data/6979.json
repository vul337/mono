{
  "id": 6979,
  "language": "Python",
  "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/b9cdd1f52bdf127cf33bb1be369e374a2855f8e6",
  "commit_sha": "b9cdd1f52bdf127cf33bb1be369e374a2855f8e6",
  "commit_msg": "Security: Fix for LFI found by thongngo",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "StaticAnalyzer/views.py",
  "func_name": "Java",
  "func_before": "def Java(request):\n    try:\n        m=re.match('[0-9a-f]{32}',request.GET['md5'])\n        typ=request.GET['type']\n        if m:\n            MD5=request.GET['md5']\n            if typ=='eclipse':\n                SRC=os.path.join(settings.UPLD_DIR, MD5+'/src/')\n                t=typ\n            elif typ=='studio':\n                SRC=os.path.join(settings.UPLD_DIR, MD5+'/app/src/main/java/')\n                t=typ\n            elif typ=='apk':\n                SRC=os.path.join(settings.UPLD_DIR, MD5+'/java_source/')\n                t=typ\n            else:\n                return HttpResponseRedirect('/error/')\n            html=''\n            for dirName, subDir, files in os.walk(SRC):\n                for jfile in files:\n                    if jfile.endswith(\".java\"):\n                        file_path=os.path.join(SRC,dirName,jfile)\n                        if \"+\" in jfile:\n                            fp2=os.path.join(SRC,dirName,jfile.replace(\"+\",\"x\"))\n                            shutil.move(file_path,fp2)\n                            file_path=fp2\n                        fileparam=file_path.replace(SRC,'')\n                        if (any(cls in fileparam for cls in settings.SKIP_CLASSES) == False):\n                            html+=\"<tr><td><a href='../ViewSource/?file=\"+escape(fileparam)+\"&md5=\"+MD5+\"&type=\"+t+\"'>\"+escape(fileparam)+\"</a></td></tr>\"\n        context = {'title': 'Java Source',\n                    'files': html,\n                    'md5': MD5,\n                    'type': typ,\n                    }\n        template=\"java.html\"\n        return render(request,template,context)\n    except:\n        PrintException(\"[ERROR] Getting Java Files\")\n        return HttpResponseRedirect('/error/')",
  "func_after": "def Java(request):\n    try:\n        m=re.match('^[0-9a-f]{32}$',request.GET['md5'])\n        typ=request.GET['type']\n        if m:\n            MD5=request.GET['md5']\n            if typ=='eclipse':\n                SRC=os.path.join(settings.UPLD_DIR, MD5+'/src/')\n                t=typ\n            elif typ=='studio':\n                SRC=os.path.join(settings.UPLD_DIR, MD5+'/app/src/main/java/')\n                t=typ\n            elif typ=='apk':\n                SRC=os.path.join(settings.UPLD_DIR, MD5+'/java_source/')\n                t=typ\n            else:\n                return HttpResponseRedirect('/error/')\n            html=''\n            for dirName, subDir, files in os.walk(SRC):\n                for jfile in files:\n                    if jfile.endswith(\".java\"):\n                        file_path=os.path.join(SRC,dirName,jfile)\n                        if \"+\" in jfile:\n                            fp2=os.path.join(SRC,dirName,jfile.replace(\"+\",\"x\"))\n                            shutil.move(file_path,fp2)\n                            file_path=fp2\n                        fileparam=file_path.replace(SRC,'')\n                        if (any(cls in fileparam for cls in settings.SKIP_CLASSES) == False):\n                            html+=\"<tr><td><a href='../ViewSource/?file=\"+escape(fileparam)+\"&md5=\"+MD5+\"&type=\"+t+\"'>\"+escape(fileparam)+\"</a></td></tr>\"\n        context = {'title': 'Java Source',\n                    'files': html,\n                    'md5': MD5,\n                    'type': typ,\n                    }\n        template=\"java.html\"\n        return render(request,template,context)\n    except:\n        PrintException(\"[ERROR] Getting Java Files\")\n        return HttpResponseRedirect('/error/')",
  "diff_func": "--- func_before\n+++ func_after\n def Java(request):\n     try:\n-        m=re.match('[0-9a-f]{32}',request.GET['md5'])\n+        m=re.match('^[0-9a-f]{32}$',request.GET['md5'])\n         typ=request.GET['type']\n         if m:\n             MD5=request.GET['md5']\n             if typ=='eclipse':\n                 SRC=os.path.join(settings.UPLD_DIR, MD5+'/src/')\n                 t=typ\n             elif typ=='studio':\n                 SRC=os.path.join(settings.UPLD_DIR, MD5+'/app/src/main/java/')\n                 t=typ\n             elif typ=='apk':\n                 SRC=os.path.join(settings.UPLD_DIR, MD5+'/java_source/')\n                 t=typ\n             else:\n                 return HttpResponseRedirect('/error/')\n             html=''\n             for dirName, subDir, files in os.walk(SRC):\n                 for jfile in files:\n                     if jfile.endswith(\".java\"):\n                         file_path=os.path.join(SRC,dirName,jfile)\n                         if \"+\" in jfile:\n                             fp2=os.path.join(SRC,dirName,jfile.replace(\"+\",\"x\"))\n                             shutil.move(file_path,fp2)\n                             file_path=fp2\n                         fileparam=file_path.replace(SRC,'')\n                         if (any(cls in fileparam for cls in settings.SKIP_CLASSES) == False):\n                             html+=\"<tr><td><a href='../ViewSource/?file=\"+escape(fileparam)+\"&md5=\"+MD5+\"&type=\"+t+\"'>\"+escape(fileparam)+\"</a></td></tr>\"\n         context = {'title': 'Java Source',\n                     'files': html,\n                     'md5': MD5,\n                     'type': typ,\n                     }\n         template=\"java.html\"\n         return render(request,template,context)\n     except:\n         PrintException(\"[ERROR] Getting Java Files\")\n         return HttpResponseRedirect('/error/')",
  "diff_source": "custom"
}