{
  "id": 6520,
  "language": "C/C++",
  "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/cc4a7391c616be7a64ed65742ef9ed3f106eb165",
  "commit_sha": "cc4a7391c616be7a64ed65742ef9ed3f106eb165",
  "commit_msg": "CVE-2017-13006/L2TP: Check whether an AVP's content exceeds the AVP length.\n\nIt's not good enough to check whether all the data specified by the AVP\nlength was captured - you also have to check whether that length is\nlarge enough for all the required data in the AVP.\n\nThis fixes a buffer over-read discovered by Yannick Formaggio.\n\nAdd a test using the capture file supplied by the reporter(s).",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "print-l2tp.c",
  "func_name": "l2tp_ppp_discon_cc_print",
  "func_before": "static void\nl2tp_ppp_discon_cc_print(netdissect_options *ndo, const u_char *dat, u_int length)\n{\n\tconst uint16_t *ptr = (const uint16_t *)dat;\n\n\tND_PRINT((ndo, \"%04x, \", EXTRACT_16BITS(ptr))); ptr++;\t/* Disconnect Code */\n\tND_PRINT((ndo, \"%04x \",  EXTRACT_16BITS(ptr))); ptr++;\t/* Control Protocol Number */\n\tND_PRINT((ndo, \"%s\", tok2str(l2tp_cc_direction2str,\n\t\t\t     \"Direction-#%u\", *((const u_char *)ptr++))));\n\n\tif (length > 5) {\n\t\tND_PRINT((ndo, \" \"));\n\t\tprint_string(ndo, (const u_char *)ptr, length-5);\n\t}\n}",
  "func_after": "static void\nl2tp_ppp_discon_cc_print(netdissect_options *ndo, const u_char *dat, u_int length)\n{\n\tconst uint16_t *ptr = (const uint16_t *)dat;\n\n\tif (length < 5) {\n\t\tND_PRINT((ndo, \"AVP too short\"));\n\t\treturn;\n\t}\n\t/* Disconnect Code */\n\tND_PRINT((ndo, \"%04x, \", EXTRACT_16BITS(dat)));\n\tdat += 2;\n\tlength -= 2;\n\t/* Control Protocol Number */\n\tND_PRINT((ndo, \"%04x \",  EXTRACT_16BITS(dat)));\n\tdat += 2;\n\tlength -= 2;\n\t/* Direction */\n\tND_PRINT((ndo, \"%s\", tok2str(l2tp_cc_direction2str,\n\t\t\t     \"Direction-#%u\", EXTRACT_8BITS(ptr))));\n\tptr++;\n\tlength--;\n\n\tif (length != 0) {\n\t\tND_PRINT((ndo, \" \"));\n\t\tprint_string(ndo, (const u_char *)ptr, length);\n\t}\n}",
  "diff_func": "--- func_before\n+++ func_after\n static void\n l2tp_ppp_discon_cc_print(netdissect_options *ndo, const u_char *dat, u_int length)\n {\n \tconst uint16_t *ptr = (const uint16_t *)dat;\n \n-\tND_PRINT((ndo, \"%04x, \", EXTRACT_16BITS(ptr))); ptr++;\t/* Disconnect Code */\n-\tND_PRINT((ndo, \"%04x \",  EXTRACT_16BITS(ptr))); ptr++;\t/* Control Protocol Number */\n+\tif (length < 5) {\n+\t\tND_PRINT((ndo, \"AVP too short\"));\n+\t\treturn;\n+\t}\n+\t/* Disconnect Code */\n+\tND_PRINT((ndo, \"%04x, \", EXTRACT_16BITS(dat)));\n+\tdat += 2;\n+\tlength -= 2;\n+\t/* Control Protocol Number */\n+\tND_PRINT((ndo, \"%04x \",  EXTRACT_16BITS(dat)));\n+\tdat += 2;\n+\tlength -= 2;\n+\t/* Direction */\n \tND_PRINT((ndo, \"%s\", tok2str(l2tp_cc_direction2str,\n-\t\t\t     \"Direction-#%u\", *((const u_char *)ptr++))));\n+\t\t\t     \"Direction-#%u\", EXTRACT_8BITS(ptr))));\n+\tptr++;\n+\tlength--;\n \n-\tif (length > 5) {\n+\tif (length != 0) {\n \t\tND_PRINT((ndo, \" \"));\n-\t\tprint_string(ndo, (const u_char *)ptr, length-5);\n+\t\tprint_string(ndo, (const u_char *)ptr, length);\n \t}\n }",
  "diff_source": "custom"
}