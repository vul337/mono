{
  "id": 176,
  "language": "Java",
  "commit_url": "https://github.com/cloudfoundry/uaa/commit/40dad6463169b85d07f18be2d21ece13609c9905",
  "commit_sha": "40dad6463169b85d07f18be2d21ece13609c9905",
  "commit_msg": "prevent XML External Entity (XXE) Processing.\n\nhttps://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "model/src/main/java/org/cloudfoundry/identity/uaa/provider/saml/idp/SamlServiceProviderDefinition.java",
  "func_name": "IllegalArgumentException",
  "func_before": "protected void validateXml(String xml) throws IllegalArgumentException {\n        if (xml==null || xml.toUpperCase().contains(\"<!DOCTYPE\")) {\n            throw new IllegalArgumentException(\"Invalid metadata XML contents:\"+xml);\n        }\n        try {\n            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n            factory.setExpandEntityReferences(false);\n            DocumentBuilder builder = factory.newDocumentBuilder();\n            builder.parse(new InputSource(new StringReader(xml)));\n        } catch (ParserConfigurationException e) {\n            throw new IllegalArgumentException(\"Unable to create document parser.\", e);\n        } catch (SAXException e) {\n            throw new IllegalArgumentException(\"Sax Parsing exception of XML:\"+xml, e);\n        } catch (IOException e) {\n            throw new IllegalArgumentException(\"IOException of XML:\"+xml, e);\n        }\n    }",
  "func_after": "protected void validateXml(String xml) throws IllegalArgumentException {\n        if (xml==null || xml.toUpperCase().contains(\"<!DOCTYPE\")) {\n            throw new IllegalArgumentException(\"Invalid metadata XML contents:\"+xml);\n        }\n        try {\n            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n            factory.setFeature(\"http://javax.xml.XMLConstants/feature/secure-processing\", true);\n            factory.setFeature(\"http://xml.org/sax/features/validation\", false);\n            factory.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);\n            factory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);\n            factory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n            factory.setValidating(false);\n            factory.setNamespaceAware(true);\n            factory.setExpandEntityReferences(false);\n            DocumentBuilder builder = factory.newDocumentBuilder();\n            builder.parse(new InputSource(new StringReader(xml)));\n        } catch (ParserConfigurationException e) {\n            throw new IllegalArgumentException(\"Unable to create document parser.\", e);\n        } catch (SAXException e) {\n            throw new IllegalArgumentException(\"Sax Parsing exception of XML:\"+xml, e);\n        } catch (IOException e) {\n            throw new IllegalArgumentException(\"IOException of XML:\"+xml, e);\n        }\n    }",
  "diff_func": "--- func_before\n+++ func_after\n protected void validateXml(String xml) throws IllegalArgumentException {\n         if (xml==null || xml.toUpperCase().contains(\"<!DOCTYPE\")) {\n             throw new IllegalArgumentException(\"Invalid metadata XML contents:\"+xml);\n         }\n         try {\n             DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+            factory.setFeature(\"http://javax.xml.XMLConstants/feature/secure-processing\", true);\n+            factory.setFeature(\"http://xml.org/sax/features/validation\", false);\n+            factory.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);\n+            factory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);\n+            factory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n+            factory.setValidating(false);\n+            factory.setNamespaceAware(true);\n             factory.setExpandEntityReferences(false);\n             DocumentBuilder builder = factory.newDocumentBuilder();\n             builder.parse(new InputSource(new StringReader(xml)));\n         } catch (ParserConfigurationException e) {\n             throw new IllegalArgumentException(\"Unable to create document parser.\", e);\n         } catch (SAXException e) {\n             throw new IllegalArgumentException(\"Sax Parsing exception of XML:\"+xml, e);\n         } catch (IOException e) {\n             throw new IllegalArgumentException(\"IOException of XML:\"+xml, e);\n         }\n     }",
  "diff_source": "custom"
}