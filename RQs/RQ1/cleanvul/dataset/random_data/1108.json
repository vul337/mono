{
  "id": 1108,
  "language": "Java",
  "commit_url": "https://github.com/logicaldoc/community/commit/450256bf15b94bc9465d10357f0160dd6aa2aff5",
  "commit_sha": "450256bf15b94bc9465d10357f0160dd6aa2aff5",
  "commit_msg": "Fixed vulnerability CVE-2022-47418",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "logicaldoc-webapp/src/main/java/com/logicaldoc/web/service/DocumentServiceImpl.java",
  "func_name": "ServerException",
  "func_before": "@Override\n\tpublic void makeImmutable(long[] docIds, String comment) throws ServerException {\n\t\tSession session = validateSession(getThreadLocalRequest());\n\n\t\tDocumentDAO docDao = (DocumentDAO) Context.get().getBean(DocumentDAO.class);\n\t\tDocumentManager manager = (DocumentManager) Context.get().getBean(DocumentManager.class);\n\t\ttry {\n\t\t\tfor (long id : docIds) {\n\t\t\t\tDocument doc = docDao.findById(id);\n\n\t\t\t\tif (doc.getImmutable() == 0) {\n\t\t\t\t\t// The document of the selected documentRecord must be\n\t\t\t\t\t// not locked\n\t\t\t\t\tif (doc.getStatus() != AbstractDocument.DOC_UNLOCKED) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create the document history event\n\t\t\t\t\tDocumentHistory transaction = new DocumentHistory();\n\t\t\t\t\ttransaction.setSession(session);\n\t\t\t\t\ttransaction.setComment(comment);\n\n\t\t\t\t\tmanager.makeImmutable(id, transaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (PersistenceException e) {\n\t\t\tthrowServerException(session, log, e);\n\t\t}\n\t}",
  "func_after": "@Override\n\tpublic void makeImmutable(long[] docIds, String comment) throws ServerException {\n\t\tSession session = validateSession(getThreadLocalRequest());\n\n\t\tDocumentDAO docDao = (DocumentDAO) Context.get().getBean(DocumentDAO.class);\n\t\tDocumentManager manager = (DocumentManager) Context.get().getBean(DocumentManager.class);\n\t\ttry {\n\t\t\tfor (long id : docIds) {\n\t\t\t\tDocument doc = docDao.findById(id);\n\n\t\t\t\tif (doc.getImmutable() == 0) {\n\t\t\t\t\t// The document of the selected documentRecord must be\n\t\t\t\t\t// not locked\n\t\t\t\t\tif (doc.getStatus() != AbstractDocument.DOC_UNLOCKED) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create the document history event\n\t\t\t\t\tDocumentHistory transaction = new DocumentHistory();\n\t\t\t\t\ttransaction.setSession(session);\n\t\t\t\t\ttransaction.setComment(HTMLSanitizer.sanitizeSimpleText(comment));\n\n\t\t\t\t\tmanager.makeImmutable(id, transaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (PersistenceException e) {\n\t\t\tthrowServerException(session, log, e);\n\t\t}\n\t}",
  "diff_func": "--- func_before\n+++ func_after\n @Override\n \tpublic void makeImmutable(long[] docIds, String comment) throws ServerException {\n \t\tSession session = validateSession(getThreadLocalRequest());\n \n \t\tDocumentDAO docDao = (DocumentDAO) Context.get().getBean(DocumentDAO.class);\n \t\tDocumentManager manager = (DocumentManager) Context.get().getBean(DocumentManager.class);\n \t\ttry {\n \t\t\tfor (long id : docIds) {\n \t\t\t\tDocument doc = docDao.findById(id);\n \n \t\t\t\tif (doc.getImmutable() == 0) {\n \t\t\t\t\t// The document of the selected documentRecord must be\n \t\t\t\t\t// not locked\n \t\t\t\t\tif (doc.getStatus() != AbstractDocument.DOC_UNLOCKED) {\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \n \t\t\t\t\t// Create the document history event\n \t\t\t\t\tDocumentHistory transaction = new DocumentHistory();\n \t\t\t\t\ttransaction.setSession(session);\n-\t\t\t\t\ttransaction.setComment(comment);\n+\t\t\t\t\ttransaction.setComment(HTMLSanitizer.sanitizeSimpleText(comment));\n \n \t\t\t\t\tmanager.makeImmutable(id, transaction);\n \t\t\t\t}\n \t\t\t}\n \t\t} catch (PersistenceException e) {\n \t\t\tthrowServerException(session, log, e);\n \t\t}\n \t}",
  "diff_source": "custom"
}