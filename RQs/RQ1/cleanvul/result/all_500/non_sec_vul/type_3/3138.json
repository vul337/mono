{
  "id": 3138,
  "language": "Java",
  "commit_url": "https://github.com/dogtagpki/pki/commit/52af304b76e6eb7c216476480a3dee0afc65fdde",
  "commit_sha": "52af304b76e6eb7c216476480a3dee0afc65fdde",
  "commit_msg": "Bug1990105- TPS Not properly enforcing Token Profile Separation\n\nThis patch addresses the issue that TPS agent operations on tokens, activities, and profiles are not limited by the types (profiles) permmtted to the agent (as described in the documentation). This is a regression from 8.x.\n\nThe affected operations are:\n - findProfiles\n - getProfiles\n - updateProfile\n - changeStatus (of a profile)\n - retrieveTokens\n - getToken\n - modifyToken\n - changeTokenStatus\n - retrieveActivities\n - getActivity\n\nNote that some operations that seem like should be affected are not\ndue to the fact that they are TPS admin operations and are shielded\nfrom entering the TPS service at the activity level.  For example,\ndeleting a token would be such a case.\n\nThe authorization enforcement added in this patch should affect both\naccess from the web UI as well as access from PKI CLI.\nReference: https://github.com/dogtagpki/pki/wiki/PKI-TPS-CLI\n\nAnother note: the VLV complicates the resulting page.  If the returned\nentries on the page are all restricted then nothing would be shown.  To\nadd a bit more clarity, an <restricted> entry is added to reflect such\neffect so that it would be less confusing to the role user.\nThe <restricted> entries are left with the epoch date.\nThis would affect both WEB UI and PKI CLI.\n\nAlso, a list minute addition to address an issue with 1911472 in\nCertService.java where the subject DN of the CA signing cert should\nbe used instead of the issuer.\n\nfixes https://bugzilla.redhat.com/show_bug.cgi?id=1990105",
  "pr_url": null,
  "pr_info": "No PR description available",
  "file_name": "base/tps/src/main/java/org/dogtagpki/server/tps/rest/TokenService.java",
  "func_name": "modifyToken",
  "diff_func": "--- func_before\n+++ func_after\n@@ -578 +677 @@\n public Response modifyToken(String tokenID, TokenData tokenData) {\n \n-        logger.info(\"TokenService: Modifying token \" + tokenID);\n-        String method = \"TokenService.modifyToken\";\n+        String method = \"TokenService.modifyToken: \";\n+        logger.info(method + \"Modifying token \" + tokenID);\n \n Map<String, String> auditModParams = new HashMap<>();\n \n-            BadRequestException e = new BadRequestException(\"Missing token ID\");\n+            BadRequestException e = new BadRequestException(method + \"Missing token ID\");\n auditConfigTokenRecord(ILogger.FAILURE, \"modify\", tokenID,\n auditModParams, e.toString());\n throw e;",
  "diff_source": "api",
  "Bug Filter": "Supporting & Non-Core Improvements",
  "Bug Filter Confidence": 0.85,
  "Bug Filter Response": "**Final Output:**  \n**Final Classification:** Supporting & Non-Core Improvements  \n**Confidence:** 0.85  \n\n**Step-by-Step Explanation:**\n\n1. **Input Analysis**: The commit addresses a bug where TPS agent operations aren't properly enforcing profile separation. However, the code changes are minimal, focusing on logging and exception messages, not direct security fixes.\n\n2. **Consistency Check**: The commit message's focus on authorization doesn't align with the code changes, which are about logging. This mismatch raises doubts about the security aspect.\n\n3. **Purpose Evaluation**: The changes are about improving logging and error messages, fitting into minor code improvements rather than core logic fixes.\n\n4. **Security Assessment**: Without implementing authorization code, it's not a security fix.\n\n5. **Non-Security Classification**: The patch's changes are minor improvements, thus classified under 'Supporting & Non-Core Improvements'.\n\n6. **Confidence Scoring**: Moderate confidence due to the discrepancy between commit and code changes."
}