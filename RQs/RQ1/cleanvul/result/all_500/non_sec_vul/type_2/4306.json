{
  "id": 4306,
  "language": "Python",
  "commit_url": "https://github.com/frappe/frappe/commit/de6cacaf88b6a10a8de89c37484bbdaf4a9291fd",
  "commit_sha": "de6cacaf88b6a10a8de89c37484bbdaf4a9291fd",
  "commit_msg": "Merge branch 'version-12-hotfix' into fix-2fa-response",
  "pr_url": "https://github.com/Ahmah2009/frappe/pull/1",
  "pr_info": "no more info",
  "file_name": "frappe/utils/backups.py",
  "func_name": "get_recent_backup",
  "func_before": "def get_recent_backup(self, older_than):\n\t\tfile_list = os.listdir(get_backup_path())\n\t\tbackup_path_files = None\n\t\tbackup_path_db = None\n\t\tbackup_path_private_files = None\n\t\tsite_config_backup_path = None\n\n\t\tfor this_file in file_list:\n\t\t\tthis_file = cstr(this_file)\n\t\t\tthis_file_path = os.path.join(get_backup_path(), this_file)\n\t\t\tif not is_file_old(this_file_path, older_than):\n\t\t\t\tif \"-private-files\" in this_file_path:\n\t\t\t\t\tbackup_path_private_files = this_file_path\n\t\t\t\telif \"-files\" in this_file_path:\n\t\t\t\t\tbackup_path_files = this_file_path\n\t\t\t\telif \"-database\" in this_file_path:\n\t\t\t\t\tbackup_path_db = this_file_path\n\t\t\t\telif \"site_config\" in this_file_path:\n\t\t\t\t\tsite_config_backup_path = this_file_path\n\n\t\treturn (backup_path_db, backup_path_files, backup_path_private_files, site_config_backup_path)",
  "func_after": "def get_recent_backup(self, older_than):\n\t\tbackup_path = get_backup_path()\n\n\t\tfile_type_slugs = {\n\t\t\t\"database\": \"*-{}-database.sql.gz\",\n\t\t\t\"public\": \"*-{}-files.tar\",\n\t\t\t\"private\": \"*-{}-private-files.tar\",\n\t\t\t\"config\": \"*-{}-site_config_backup.json\",\n\t\t}\n\n\t\tdef backup_time(file_path):\n\t\t\tfile_name = file_path.split(os.sep)[-1]\n\t\t\tfile_timestamp = file_name.split(\"-\")[0]\n\t\t\treturn timegm(datetime.strptime(file_timestamp, \"%Y%m%d_%H%M%S\").utctimetuple())\n\n\t\tdef get_latest(file_pattern):\n\t\t\tfile_pattern = os.path.join(backup_path, file_pattern.format(self.site_slug))\n\t\t\tfile_list = glob(file_pattern)\n\t\t\tif file_list:\n\t\t\t\treturn max(file_list, key=backup_time)\n\n\t\tdef old_enough(file_path):\n\t\t\tif file_path:\n\t\t\t\tif not os.path.isfile(file_path) or is_file_old(file_path, older_than):\n\t\t\t\t\treturn None\n\t\t\t\treturn file_path\n\n\t\tlatest_backups = {\n\t\t\tfile_type: get_latest(pattern)\n\t\t\tfor file_type, pattern in file_type_slugs.items()\n\t\t}\n\n\t\trecent_backups = {\n\t\t\tfile_type: old_enough(file_name) for file_type, file_name in latest_backups.items()\n\t\t}\n\n\t\treturn (\n\t\t\trecent_backups.get(\"database\"),\n\t\t\trecent_backups.get(\"public\"),\n\t\t\trecent_backups.get(\"private\"),\n\t\t\trecent_backups.get(\"config\"),\n\t\t)",
  "diff_func": "--- func_before\n+++ func_after\n def get_recent_backup(self, older_than):\n+\t\tbackup_path = get_backup_path()\n-\t\tfile_list = os.listdir(get_backup_path())\n-\t\tbackup_path_files = None\n-\t\tbackup_path_db = None\n-\t\tbackup_path_private_files = None\n-\t\tsite_config_backup_path = None\n \n+\t\tfile_type_slugs = {\n+\t\t\t\"database\": \"*-{}-database.sql.gz\",\n+\t\t\t\"public\": \"*-{}-files.tar\",\n+\t\t\t\"private\": \"*-{}-private-files.tar\",\n+\t\t\t\"config\": \"*-{}-site_config_backup.json\",\n+\t\t}\n-\t\tfor this_file in file_list:\n-\t\t\tthis_file = cstr(this_file)\n-\t\t\tthis_file_path = os.path.join(get_backup_path(), this_file)\n-\t\t\tif not is_file_old(this_file_path, older_than):\n-\t\t\t\tif \"-private-files\" in this_file_path:\n-\t\t\t\t\tbackup_path_private_files = this_file_path\n-\t\t\t\telif \"-files\" in this_file_path:\n-\t\t\t\t\tbackup_path_files = this_file_path\n-\t\t\t\telif \"-database\" in this_file_path:\n-\t\t\t\t\tbackup_path_db = this_file_path\n-\t\t\t\telif \"site_config\" in this_file_path:\n-\t\t\t\t\tsite_config_backup_path = this_file_path\n \n-\t\treturn (backup_path_db, backup_path_files, backup_path_private_files, site_config_backup_path)\n+\t\tdef backup_time(file_path):\n+\t\t\tfile_name = file_path.split(os.sep)[-1]\n+\t\t\tfile_timestamp = file_name.split(\"-\")[0]\n+\t\t\treturn timegm(datetime.strptime(file_timestamp, \"%Y%m%d_%H%M%S\").utctimetuple())\n+\n+\t\tdef get_latest(file_pattern):\n+\t\t\tfile_pattern = os.path.join(backup_path, file_pattern.format(self.site_slug))\n+\t\t\tfile_list = glob(file_pattern)\n+\t\t\tif file_list:\n+\t\t\t\treturn max(file_list, key=backup_time)\n+\n+\t\tdef old_enough(file_path):\n+\t\t\tif file_path:\n+\t\t\t\tif not os.path.isfile(file_path) or is_file_old(file_path, older_than):\n+\t\t\t\t\treturn None\n+\t\t\t\treturn file_path\n+\n+\t\tlatest_backups = {\n+\t\t\tfile_type: get_latest(pattern)\n+\t\t\tfor file_type, pattern in file_type_slugs.items()\n+\t\t}\n+\n+\t\trecent_backups = {\n+\t\t\tfile_type: old_enough(file_name) for file_type, file_name in latest_backups.items()\n+\t\t}\n+\n+\t\treturn (\n+\t\t\trecent_backups.get(\"database\"),\n+\t\t\trecent_backups.get(\"public\"),\n+\t\t\trecent",
  "diff_source": "custom",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "\n\n**Analysis:**\nThe patch modifies the `get_recent_backup` function, enhancing how backups are retrieved by using specific patterns and helper functions. While the changes improve efficiency and reduce potential errors, there's no clear indication of addressing a security vulnerability. The commit message suggests urgency but doesn't specify a security issue.\n\n**Final Classification:** Defect Remediation & Feature Upgrades  \n**Confidence Score:** 0.8"
}