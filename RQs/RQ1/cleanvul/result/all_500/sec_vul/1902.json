{
  "id": 1902,
  "language": "Java",
  "commit_url": "https://github.com/AOSPA/android_frameworks_base/commit/2be553067f56f21c0cf599ffa6b1ff24052a12fd",
  "commit_sha": "2be553067f56f21c0cf599ffa6b1ff24052a12fd",
  "commit_msg": "Fix bypass BG-FGS and BAL via package manager APIs\n\nOpt-in for BAL of PendingIntent for following APIs:\n\n* PackageInstaller.uninstall()\n* PackageInstaller.installExistingPackage()\n* PackageInstaller.uninstallExistingPackage()\n* PackageInstaller.waitForInstallConstraints()\n* PackageInstaller.Session.commit()\n* PackageInstaller.Session.commitTransferred()\n* PackageInstaller.Session.requestUserPreapproval()\n* PackageManager.freeStorage()\n\nBug: 230492955\nBug: 243377226\nTest: atest android.security.cts.PackageInstallerTest\nTest: atest CtsStagedInstallHostTestCases\nChange-Id: I9b6f801d69ea6d2244a38dbe689e81afa4e798bf",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "services/core/java/com/android/server/pm/PackageInstallerSession.java",
  "func_name": "sendPendingStreaming",
  "func_before": "private static void sendPendingStreaming(Context context, IntentSender target, int sessionId,\n            @Nullable String cause) {\n        if (target == null) {\n            Slog.e(TAG, \"Missing receiver for pending streaming status.\");\n            return;\n        }\n\n        final Intent intent = new Intent();\n        intent.putExtra(PackageInstaller.EXTRA_SESSION_ID, sessionId);\n        intent.putExtra(PackageInstaller.EXTRA_STATUS, PackageInstaller.STATUS_PENDING_STREAMING);\n        if (!TextUtils.isEmpty(cause)) {\n            intent.putExtra(PackageInstaller.EXTRA_STATUS_MESSAGE,\n                    \"Staging Image Not Ready [\" + cause + \"]\");\n        } else {\n            intent.putExtra(PackageInstaller.EXTRA_STATUS_MESSAGE, \"Staging Image Not Ready\");\n        }\n        try {\n            target.sendIntent(context, 0, intent, null, null);\n        } catch (IntentSender.SendIntentException ignored) {\n        }\n    }",
  "func_after": "private static void sendPendingStreaming(Context context, IntentSender target, int sessionId,\n            @Nullable String cause) {\n        if (target == null) {\n            Slog.e(TAG, \"Missing receiver for pending streaming status.\");\n            return;\n        }\n\n        final Intent intent = new Intent();\n        intent.putExtra(PackageInstaller.EXTRA_SESSION_ID, sessionId);\n        intent.putExtra(PackageInstaller.EXTRA_STATUS, PackageInstaller.STATUS_PENDING_STREAMING);\n        if (!TextUtils.isEmpty(cause)) {\n            intent.putExtra(PackageInstaller.EXTRA_STATUS_MESSAGE,\n                    \"Staging Image Not Ready [\" + cause + \"]\");\n        } else {\n            intent.putExtra(PackageInstaller.EXTRA_STATUS_MESSAGE, \"Staging Image Not Ready\");\n        }\n        try {\n            final BroadcastOptions options = BroadcastOptions.makeBasic();\n            options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n            target.sendIntent(context, 0, intent, null /* onFinished */,\n                    null /* handler */, null /* requiredPermission */, options.toBundle());\n        } catch (IntentSender.SendIntentException ignored) {\n        }\n    }",
  "diff_func": "--- func_before\n+++ func_after\n private static void sendPendingStreaming(Context context, IntentSender target, int sessionId,\n             @Nullable String cause) {\n         if (target == null) {\n             Slog.e(TAG, \"Missing receiver for pending streaming status.\");\n             return;\n         }\n \n         final Intent intent = new Intent();\n         intent.putExtra(PackageInstaller.EXTRA_SESSION_ID, sessionId);\n         intent.putExtra(PackageInstaller.EXTRA_STATUS, PackageInstaller.STATUS_PENDING_STREAMING);\n         if (!TextUtils.isEmpty(cause)) {\n             intent.putExtra(PackageInstaller.EXTRA_STATUS_MESSAGE,\n                     \"Staging Image Not Ready [\" + cause + \"]\");\n         } else {\n             intent.putExtra(PackageInstaller.EXTRA_STATUS_MESSAGE, \"Staging Image Not Ready\");\n         }\n         try {\n+            final BroadcastOptions options = BroadcastOptions.makeBasic();\n+            options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n-            target.sendIntent(context, 0, intent, null, null);\n+            target.sendIntent(context, 0, intent, null /* onFinished */,\n+                    null /* handler */, null /* requiredPermission */, options.toBundle());\n         } catch (IntentSender.SendIntentException ignored) {\n         }\n     }",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\nAnalysis: The patch modifies how intents are sent, adding BroadcastOptions to restrict background activity launches. This addresses a security vulnerability where attackers could bypass security checks via package manager APIs.\n\nFinal Classification: Security Vulnerability Fix\nConfidence Score: 0.95"
}