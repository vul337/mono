{
  "id": 3241,
  "language": "C/C++",
  "commit_url": "https://github.com/torvalds/linux/commit/a5cc68f3d63306d0d288f31edfc2ae6ef8ecd887",
  "commit_sha": "a5cc68f3d63306d0d288f31edfc2ae6ef8ecd887",
  "commit_msg": "af_key: fix info leaks in notify messages\n\nkey_notify_sa_flush() and key_notify_policy_flush() miss to initialize\nthe sadb_msg_reserved member of the broadcasted message and thereby\nleak 2 bytes of heap memory to listeners. Fix that.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Steffen Klassert <steffen.klassert@secunet.com>\nCc: \"David S. Miller\" <davem@davemloft.net>\nCc: Herbert Xu <herbert@gondor.apana.org.au>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "net/key/af_key.c",
  "func_name": "key_notify_policy_flush",
  "func_before": "static int key_notify_policy_flush(const struct km_event *c)\n{\n\tstruct sk_buff *skb_out;\n\tstruct sadb_msg *hdr;\n\n\tskb_out = alloc_skb(sizeof(struct sadb_msg) + 16, GFP_ATOMIC);\n\tif (!skb_out)\n\t\treturn -ENOBUFS;\n\thdr = (struct sadb_msg *) skb_put(skb_out, sizeof(struct sadb_msg));\n\thdr->sadb_msg_type = SADB_X_SPDFLUSH;\n\thdr->sadb_msg_seq = c->seq;\n\thdr->sadb_msg_pid = c->portid;\n\thdr->sadb_msg_version = PF_KEY_V2;\n\thdr->sadb_msg_errno = (uint8_t) 0;\n\thdr->sadb_msg_satype = SADB_SATYPE_UNSPEC;\n\thdr->sadb_msg_len = (sizeof(struct sadb_msg) / sizeof(uint64_t));\n\tpfkey_broadcast(skb_out, GFP_ATOMIC, BROADCAST_ALL, NULL, c->net);\n\treturn 0;\n\n}",
  "func_after": "static int key_notify_policy_flush(const struct km_event *c)\n{\n\tstruct sk_buff *skb_out;\n\tstruct sadb_msg *hdr;\n\n\tskb_out = alloc_skb(sizeof(struct sadb_msg) + 16, GFP_ATOMIC);\n\tif (!skb_out)\n\t\treturn -ENOBUFS;\n\thdr = (struct sadb_msg *) skb_put(skb_out, sizeof(struct sadb_msg));\n\thdr->sadb_msg_type = SADB_X_SPDFLUSH;\n\thdr->sadb_msg_seq = c->seq;\n\thdr->sadb_msg_pid = c->portid;\n\thdr->sadb_msg_version = PF_KEY_V2;\n\thdr->sadb_msg_errno = (uint8_t) 0;\n\thdr->sadb_msg_satype = SADB_SATYPE_UNSPEC;\n\thdr->sadb_msg_len = (sizeof(struct sadb_msg) / sizeof(uint64_t));\n\thdr->sadb_msg_reserved = 0;\n\tpfkey_broadcast(skb_out, GFP_ATOMIC, BROADCAST_ALL, NULL, c->net);\n\treturn 0;\n\n}",
  "diff_func": "--- func_before\n+++ func_after\n static int key_notify_policy_flush(const struct km_event *c)\n {\n \tstruct sk_buff *skb_out;\n \tstruct sadb_msg *hdr;\n \n \tskb_out = alloc_skb(sizeof(struct sadb_msg) + 16, GFP_ATOMIC);\n \tif (!skb_out)\n \t\treturn -ENOBUFS;\n \thdr = (struct sadb_msg *) skb_put(skb_out, sizeof(struct sadb_msg));\n \thdr->sadb_msg_type = SADB_X_SPDFLUSH;\n \thdr->sadb_msg_seq = c->seq;\n \thdr->sadb_msg_pid = c->portid;\n \thdr->sadb_msg_version = PF_KEY_V2;\n \thdr->sadb_msg_errno = (uint8_t) 0;\n \thdr->sadb_msg_satype = SADB_SATYPE_UNSPEC;\n \thdr->sadb_msg_len = (sizeof(struct sadb_msg) / sizeof(uint64_t));\n+\thdr->sadb_msg_reserved = 0;\n \tpfkey_broadcast(skb_out, GFP_ATOMIC, BROADCAST_ALL, NULL, c->net);\n \treturn 0;\n \n }",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix**\n\n**Confidence Score: 0.95**  \nThe fix clearly targets a security issue by preventing information leakage, which directly impacts confidentiality. The code change is straightforward and the commit message confirms the security relevance.",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Analysis:**\nThe patch addresses a memory leak in the key_notify_policy_flush() function by initializing the sadb_msg_reserved field. This prevents the exposure of 2 bytes of heap memory to listeners, which could be exploited to gain unauthorized information.\n\n**Final Classification: Security Vulnerability Fix**\n\n**Confidence Score: 0.95**  \nThe fix clearly targets a security issue by preventing information leakage, which directly impacts confidentiality. The code change is straightforward and the commit message confirms the security relevance."
}