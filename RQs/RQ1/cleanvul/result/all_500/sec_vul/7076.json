{
  "id": 7076,
  "language": "C#",
  "commit_url": "https://github.com/Sustainsys/Saml2/commit/2cacdc3a912109d46395eed89e6c28f5a65ebe7e",
  "commit_sha": "2cacdc3a912109d46395eed89e6c28f5a65ebe7e",
  "commit_msg": "Use modulepath in data protection purpose\n- Prevents reuse of protected data across instances/schemes/modules\n- Fixes #713",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "Sustainsys.Saml2.HttpModule/Saml2AuthenticationModule.cs",
  "func_name": "OnAuthenticateRequest",
  "func_before": "protected void OnAuthenticateRequest(object sender, EventArgs e)\n        {\n            var application = (HttpApplication)sender;\n\n            // Strip the leading ~ from the AppRelative path.\n            var appRelativePath = application.Request.AppRelativeCurrentExecutionFilePath;\n            appRelativePath = (!string.IsNullOrEmpty(appRelativePath))\n                ? appRelativePath.Substring(1)\n                : string.Empty;\n\n            var modulePath = Options.SPOptions.ModulePath;\n\n            if (appRelativePath.StartsWith(modulePath, StringComparison.OrdinalIgnoreCase))\n            {\n                var commandName = appRelativePath.Substring(modulePath.Length);\n\n                var command = CommandFactory.GetCommand(commandName);\n                var commandResult = command.Run(\n                    new HttpRequestWrapper(application.Request).ToHttpRequestData(),\n                    Options);\n\n                if (!commandResult.HandledResult)\n                {\n                    commandResult.SignInOrOutSessionAuthenticationModule();\n                    commandResult.Apply(\n                        new HttpResponseWrapper(application.Response),\n                        Options.Notifications.EmitSameSiteNone(application.Request.UserAgent));\n                }\n            }\n        }",
  "func_after": "protected void OnAuthenticateRequest(object sender, EventArgs e)\n        {\n            var application = (HttpApplication)sender;\n\n            // Strip the leading ~ from the AppRelative path.\n            var appRelativePath = application.Request.AppRelativeCurrentExecutionFilePath;\n            appRelativePath = (!string.IsNullOrEmpty(appRelativePath))\n                ? appRelativePath.Substring(1)\n                : string.Empty;\n\n            var modulePath = Options.SPOptions.ModulePath;\n\n            if (appRelativePath.StartsWith(modulePath, StringComparison.OrdinalIgnoreCase))\n            {\n                var commandName = appRelativePath.Substring(modulePath.Length);\n\n                var command = CommandFactory.GetCommand(commandName);\n                var commandResult = command.Run(\n                    new HttpRequestWrapper(application.Request).ToHttpRequestData(Options.SPOptions.ModulePath),\n                    Options);\n\n                if (!commandResult.HandledResult)\n                {\n                    commandResult.SignInOrOutSessionAuthenticationModule();\n                    commandResult.Apply(\n                        new HttpResponseWrapper(application.Response),\n                        Options.Notifications.EmitSameSiteNone(application.Request.UserAgent),\n                        Options.SPOptions.ModulePath);\n                }\n            }\n        }",
  "diff_func": "--- func_before\n+++ func_after\n protected void OnAuthenticateRequest(object sender, EventArgs e)\n         {\n             var application = (HttpApplication)sender;\n \n             // Strip the leading ~ from the AppRelative path.\n             var appRelativePath = application.Request.AppRelativeCurrentExecutionFilePath;\n             appRelativePath = (!string.IsNullOrEmpty(appRelativePath))\n                 ? appRelativePath.Substring(1)\n                 : string.Empty;\n \n             var modulePath = Options.SPOptions.ModulePath;\n \n             if (appRelativePath.StartsWith(modulePath, StringComparison.OrdinalIgnoreCase))\n             {\n                 var commandName = appRelativePath.Substring(modulePath.Length);\n \n                 var command = CommandFactory.GetCommand(commandName);\n                 var commandResult = command.Run(\n-                    new HttpRequestWrapper(application.Request).ToHttpRequestData(),\n+                    new HttpRequestWrapper(application.Request).ToHttpRequestData(Options.SPOptions.ModulePath),\n                     Options);\n \n                 if (!commandResult.HandledResult)\n                 {\n                     commandResult.SignInOrOutSessionAuthenticationModule();\n                     commandResult.Apply(\n                         new HttpResponseWrapper(application.Response),\n-                        Options.Notifications.EmitSameSiteNone(application.Request.UserAgent));\n+                        Options.Notifications.EmitSameSiteNone(application.Request.UserAgent),\n+                        Options.SPOptions.ModulePath);\n                 }\n             }\n         }",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis:\n- The commit addresses data protection by preventing reuse of protected data across modules.\n- Code changes pass the module path to relevant methods, enhancing data protection.\n- This prevents unauthorized data reuse, a security concern.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 0.95"
}