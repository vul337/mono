{
  "id": 601,
  "language": "Java",
  "commit_url": "https://github.com/LineageOS/android_packages_apps_Settings/commit/1a43a98334d7222b4ab1713721652c0ad7bbe8c2",
  "commit_sha": "1a43a98334d7222b4ab1713721652c0ad7bbe8c2",
  "commit_msg": "Add DISALLOW_APPS_CONTROL check into uninstall app for all users\n\nSettings App info page supports a \"Uninstall for all users\" function\nwhen multiple users are enabled. It bypasses the restriction of\nDISALLOW_APPS_CONTROL which breaks the user isolation guideline.\n\nTo fix this vulnerability, we should check the DISALLOW_APPS_CONTROL\nrestriction to provide the \"Uninstall for all users\" function.\n\nBug: 258653813\nTest: manual & robotests\nChange-Id: I5d3bbcbaac439c4f7a1e6a9ade7775ff4f2f2ec6\nMerged-In: I5d3bbcbaac439c4f7a1e6a9ade7775ff4f2f2ec6",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "src/com/android/settings/applications/appinfo/AppInfoDashboardFragment.java",
  "func_name": "onPrepareOptionsMenu",
  "func_before": "@Override\n    public void onPrepareOptionsMenu(Menu menu) {\n        if (mFinishing) {\n            return;\n        }\n        super.onPrepareOptionsMenu(menu);\n        menu.findItem(UNINSTALL_ALL_USERS_MENU).setVisible(shouldShowUninstallForAll(mAppEntry));\n        mUpdatedSysApp = (mAppEntry.info.flags & ApplicationInfo.FLAG_UPDATED_SYSTEM_APP) != 0;\n        final MenuItem uninstallUpdatesItem = menu.findItem(UNINSTALL_UPDATES);\n        final boolean uninstallUpdateDisabled = getContext().getResources().getBoolean(\n                R.bool.config_disable_uninstall_update);\n        uninstallUpdatesItem.setVisible(mUserManager.isAdminUser()\n                && mUpdatedSysApp\n                && !mAppsControlDisallowedBySystem\n                && !uninstallUpdateDisabled);\n        if (uninstallUpdatesItem.isVisible()) {\n            RestrictedLockUtilsInternal.setMenuItemAsDisabledByAdmin(getActivity(),\n                    uninstallUpdatesItem, mAppsControlDisallowedAdmin);\n        }\n    }",
  "func_after": "@Override\n    public void onPrepareOptionsMenu(Menu menu) {\n        if (mFinishing) {\n            return;\n        }\n        super.onPrepareOptionsMenu(menu);\n        final MenuItem uninstallAllUsersItem = menu.findItem(UNINSTALL_ALL_USERS_MENU);\n        uninstallAllUsersItem.setVisible(\n                shouldShowUninstallForAll(mAppEntry) && !mAppsControlDisallowedBySystem);\n        if (uninstallAllUsersItem.isVisible()) {\n            RestrictedLockUtilsInternal.setMenuItemAsDisabledByAdmin(getActivity(),\n                    uninstallAllUsersItem, mAppsControlDisallowedAdmin);\n        }\n        mUpdatedSysApp = (mAppEntry.info.flags & ApplicationInfo.FLAG_UPDATED_SYSTEM_APP) != 0;\n        final MenuItem uninstallUpdatesItem = menu.findItem(UNINSTALL_UPDATES);\n        final boolean uninstallUpdateDisabled = getContext().getResources().getBoolean(\n                R.bool.config_disable_uninstall_update);\n        uninstallUpdatesItem.setVisible(mUserManager.isAdminUser()\n                && mUpdatedSysApp\n                && !mAppsControlDisallowedBySystem\n                && !uninstallUpdateDisabled);\n        if (uninstallUpdatesItem.isVisible()) {\n            RestrictedLockUtilsInternal.setMenuItemAsDisabledByAdmin(getActivity(),\n                    uninstallUpdatesItem, mAppsControlDisallowedAdmin);\n        }\n    }",
  "diff_func": "--- func_before\n+++ func_after\n @Override\n     public void onPrepareOptionsMenu(Menu menu) {\n         if (mFinishing) {\n             return;\n         }\n         super.onPrepareOptionsMenu(menu);\n-        menu.findItem(UNINSTALL_ALL_USERS_MENU).setVisible(shouldShowUninstallForAll(mAppEntry));\n+        final MenuItem uninstallAllUsersItem = menu.findItem(UNINSTALL_ALL_USERS_MENU);\n+        uninstallAllUsersItem.setVisible(\n+                shouldShowUninstallForAll(mAppEntry) && !mAppsControlDisallowedBySystem);\n+        if (uninstallAllUsersItem.isVisible()) {\n+            RestrictedLockUtilsInternal.setMenuItemAsDisabledByAdmin(getActivity(),\n+                    uninstallAllUsersItem, mAppsControlDisallowedAdmin);\n+        }\n         mUpdatedSysApp = (mAppEntry.info.flags & ApplicationInfo.FLAG_UPDATED_SYSTEM_APP) != 0;\n         final MenuItem uninstallUpdatesItem = menu.findItem(UNINSTALL_UPDATES);\n         final boolean uninstallUpdateDisabled = getContext().getResources().getBoolean(\n                 R.bool.config_disable_uninstall_update);\n         uninstallUpdatesItem.setVisible(mUserManager.isAdminUser()\n                 && mUpdatedSysApp\n                 && !mAppsControlDisallowedBySystem\n                 && !uninstallUpdateDisabled);\n         if (uninstallUpdatesItem.isVisible()) {\n             RestrictedLockUtilsInternal.setMenuItemAsDisabledByAdmin(getActivity(),\n                     uninstallUpdatesItem, mAppsControlDisallowedAdmin);\n         }\n     }",
  "diff_source": "custom",
  "Bug Filter": "** Security Vulnerability Fix  \n**Confidence Score:** 1.0",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "\n\nThe patch addresses a security issue by enforcing a restriction that was previously bypassed, preventing unauthorized access and maintaining user isolation.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence Score:** 1.0"
}