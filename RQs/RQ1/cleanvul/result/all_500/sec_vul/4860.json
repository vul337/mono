{
  "id": 4860,
  "language": "C#",
  "commit_url": "https://github.com/tgstation/tgstation-server/commit/c095387b13173663325a1ba65139c8e818e4e283",
  "commit_sha": "c095387b13173663325a1ba65139c8e818e4e283",
  "commit_msg": "Fix exploit allowing for the reading of discord connection strings.\n\nenabling view json in the web panel was the correct call.",
  "pr_url": "https://github.com/tgstation/tgstation-server/pull/1487",
  "pr_info": "Enabling view json in the web panel was the correct call.\r\n\r\n:cl: HTTP API\r\nFixed exploit allowing for the reading of chat bot connection strings.\r\n/:cl:\r\n\r\n",
  "file_name": "src/Tgstation.Server.Host/Controllers/ChatController.cs",
  "func_name": "HttpGet",
  "func_before": "[HttpGet(Routes.List)]\n\t\t[TgsAuthorize(ChatBotRights.Read)]\n\t\t[ProducesResponseType(typeof(PaginatedResponse<ChatBotResponse>), 200)]\n\t\tpublic Task<IActionResult> List([FromQuery] int? page, [FromQuery] int? pageSize, CancellationToken cancellationToken)\n\t\t{\n\t\t\tvar connectionStrings = (AuthenticationContext.GetRight(RightsType.ChatBots) & (ulong)ChatBotRights.ReadConnectionString) != 0;\n\t\t\treturn Paginated<ChatBot, ChatBotResponse>(\n\t\t\t\t() => Task.FromResult(\n\t\t\t\t\tnew PaginatableResult<ChatBot>(\n\t\t\t\t\t\tDatabaseContext\n\t\t\t\t\t\t\t.ChatBots\n\t\t\t\t\t\t\t.AsQueryable()\n\t\t\t\t\t\t\t.Where(x => x.InstanceId == Instance.Id)\n\t\t\t\t\t\t\t.Include(x => x.Channels)\n\t\t\t\t\t\t\t.OrderBy(x => x.Id))),\n\t\t\t\tchatBot =>\n\t\t\t\t{\n\t\t\t\t\tif (connectionStrings)\n\t\t\t\t\t\tchatBot.ConnectionString = null;\n\n\t\t\t\t\treturn Task.CompletedTask;\n\t\t\t\t},\n\t\t\t\tpage,\n\t\t\t\tpageSize,\n\t\t\t\tcancellationToken);\n\t\t}",
  "func_after": "[HttpGet(Routes.List)]\n\t\t[TgsAuthorize(ChatBotRights.Read)]\n\t\t[ProducesResponseType(typeof(PaginatedResponse<ChatBotResponse>), 200)]\n\t\tpublic Task<IActionResult> List([FromQuery] int? page, [FromQuery] int? pageSize, CancellationToken cancellationToken)\n\t\t{\n\t\t\tvar connectionStrings = (AuthenticationContext.GetRight(RightsType.ChatBots) & (ulong)ChatBotRights.ReadConnectionString) != 0;\n\t\t\treturn Paginated<ChatBot, ChatBotResponse>(\n\t\t\t\t() => Task.FromResult(\n\t\t\t\t\tnew PaginatableResult<ChatBot>(\n\t\t\t\t\t\tDatabaseContext\n\t\t\t\t\t\t\t.ChatBots\n\t\t\t\t\t\t\t.AsQueryable()\n\t\t\t\t\t\t\t.Where(x => x.InstanceId == Instance.Id)\n\t\t\t\t\t\t\t.Include(x => x.Channels)\n\t\t\t\t\t\t\t.OrderBy(x => x.Id))),\n\t\t\t\tchatBot =>\n\t\t\t\t{\n\t\t\t\t\tif (!connectionStrings)\n\t\t\t\t\t\tchatBot.ConnectionString = null;\n\n\t\t\t\t\treturn Task.CompletedTask;\n\t\t\t\t},\n\t\t\t\tpage,\n\t\t\t\tpageSize,\n\t\t\t\tcancellationToken);\n\t\t}",
  "diff_func": "--- func_before\n+++ func_after\n [HttpGet(Routes.List)]\n \t\t[TgsAuthorize(ChatBotRights.Read)]\n \t\t[ProducesResponseType(typeof(PaginatedResponse<ChatBotResponse>), 200)]\n \t\tpublic Task<IActionResult> List([FromQuery] int? page, [FromQuery] int? pageSize, CancellationToken cancellationToken)\n \t\t{\n \t\t\tvar connectionStrings = (AuthenticationContext.GetRight(RightsType.ChatBots) & (ulong)ChatBotRights.ReadConnectionString) != 0;\n \t\t\treturn Paginated<ChatBot, ChatBotResponse>(\n \t\t\t\t() => Task.FromResult(\n \t\t\t\t\tnew PaginatableResult<ChatBot>(\n \t\t\t\t\t\tDatabaseContext\n \t\t\t\t\t\t\t.ChatBots\n \t\t\t\t\t\t\t.AsQueryable()\n \t\t\t\t\t\t\t.Where(x => x.InstanceId == Instance.Id)\n \t\t\t\t\t\t\t.Include(x => x.Channels)\n \t\t\t\t\t\t\t.OrderBy(x => x.Id))),\n \t\t\t\tchatBot =>\n \t\t\t\t{\n-\t\t\t\t\tif (connectionStrings)\n+\t\t\t\t\tif (!connectionStrings)\n \t\t\t\t\t\tchatBot.ConnectionString = null;\n \n \t\t\t\t\treturn Task.CompletedTask;\n \t\t\t\t},\n \t\t\t\tpage,\n \t\t\t\tpageSize,\n \t\t\t\tcancellationToken);\n \t\t}",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch addresses an exploit where unauthorized users could read Discord connection strings. The code change corrects the condition to ensure only authorized users can access these sensitive strings, preventing unauthorized disclosure.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 0.95"
}