{
  "id": 3898,
  "language": "Python",
  "commit_url": "https://github.com/qutebrowser/qutebrowser/commit/4020210b193f77cf1785b21717f6ef7c5de5f0f8",
  "commit_sha": "4020210b193f77cf1785b21717f6ef7c5de5f0f8",
  "commit_msg": "Security: Remember hosts with ignored cert errors for load status\n\nWithout this change, we only set a flag when a certificate error occurred.\nHowever, when the same certificate error then happens a second time (e.g.\nbecause of a reload or opening the same URL again), we then colored the URL as\nsuccess_https (i.e. green) again.\n\nSee #5403\n\n(cherry picked from commit 021ab572a319ca3db5907a33a59774f502b3b975)",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "qutebrowser/browser/browsertab.py",
  "func_name": "_on_load_finished",
  "func_before": "def _on_load_finished(self, ok):\n        if sip.isdeleted(self._widget):\n            # https://github.com/qutebrowser/qutebrowser/issues/3498\n            return\n\n        sess_manager = objreg.get('session-manager')\n        sess_manager.save_autosave()\n\n        if ok and not self._has_ssl_errors:\n            if self.url().scheme() == 'https':\n                self._set_load_status(usertypes.LoadStatus.success_https)\n            else:\n                self._set_load_status(usertypes.LoadStatus.success)\n        elif ok:\n            self._set_load_status(usertypes.LoadStatus.warn)\n        else:\n            self._set_load_status(usertypes.LoadStatus.error)\n\n        self.load_finished.emit(ok)\n\n        if not self.title():\n            self.title_changed.emit(self.url().toDisplayString())\n\n        self.zoom.set_current()",
  "func_after": "def _on_load_finished(self, ok):\n        if sip.isdeleted(self._widget):\n            # https://github.com/qutebrowser/qutebrowser/issues/3498\n            return\n\n        sess_manager = objreg.get('session-manager')\n        sess_manager.save_autosave()\n\n        if ok:\n            if self.url().scheme() == 'https':\n                if self.url().host() in self._insecure_hosts:\n                    self._set_load_status(usertypes.LoadStatus.warn)\n                else:\n                    self._set_load_status(usertypes.LoadStatus.success_https)\n            else:\n                self._set_load_status(usertypes.LoadStatus.success)\n        elif ok:\n            self._set_load_status(usertypes.LoadStatus.warn)\n        else:\n            self._set_load_status(usertypes.LoadStatus.error)\n\n        self.load_finished.emit(ok)\n\n        if not self.title():\n            self.title_changed.emit(self.url().toDisplayString())\n\n        self.zoom.set_current()",
  "diff_func": "--- func_before\n+++ func_after\n def _on_load_finished(self, ok):\n         if sip.isdeleted(self._widget):\n             # https://github.com/qutebrowser/qutebrowser/issues/3498\n             return\n \n         sess_manager = objreg.get('session-manager')\n         sess_manager.save_autosave()\n \n-        if ok and not self._has_ssl_errors:\n+        if ok:\n             if self.url().scheme() == 'https':\n+                if self.url().host() in self._insecure_hosts:\n+                    self._set_load_status(usertypes.LoadStatus.warn)\n+                else:\n-                self._set_load_status(usertypes.LoadStatus.success_https)\n+                    self._set_load_status(usertypes.LoadStatus.success_https)\n             else:\n                 self._set_load_status(usertypes.LoadStatus.success)\n         elif ok:\n             self._set_load_status(usertypes.LoadStatus.warn)\n         else:\n             self._set_load_status(usertypes.LoadStatus.error)\n \n         self.load_finished.emit(ok)\n \n         if not self.title():\n             self.title_changed.emit(self.url().toDisplayString())\n \n         self.zoom.set_current()",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix**\n\n**Confidence Score: 0.95**\n\nThe analysis is based on the code changes that correct SSL error handling, preventing potential security misrepresentation.",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\nThe patch addresses a security issue by correcting how SSL errors are handled, ensuring that previously insecure hosts continue to display warnings. This prevents users from being falsely assured of a secure connection.\n\n**Final Classification: Security Vulnerability Fix**\n\n**Confidence Score: 0.95**\n\nThe analysis is based on the code changes that correct SSL error handling, preventing potential security misrepresentation."
}