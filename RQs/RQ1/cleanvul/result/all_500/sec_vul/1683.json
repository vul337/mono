{
  "id": 1683,
  "language": "Java",
  "commit_url": "https://github.com/bonitasoft/bonita-engine/commit/84d4c2cfec81549959b93508356be29972a2d6d2",
  "commit_sha": "84d4c2cfec81549959b93508356be29972a2d6d2",
  "commit_msg": "chore(setup): remove h2 jar from classpath if not chosen as db vendor (#2229)\n\nto mitigate h2 cve found in 1.4.199, we remove h2 from bonita classpath only in case of h2 is not defined as db vendor for bonita or bdm.\r\nmore details [H2 CVE-2021-42392 Analysis and fix plan](https://bonitasoft.atlassian.net/wiki/spaces/BONITA/pages/22219456597/H2+CVE-2021-42392+-+Analysis+and+fix+plan)\r\nbuildDockerImage to build a tomcat distrib docker image including the Engine version of this Pull Request\r\n\r\nRelates to [RUNTIME-863](https://bonitasoft.atlassian.net/browse/RUNTIME-863)",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "platform/platform-setup/src/main/java/org/bonitasoft/platform/setup/command/configure/TomcatBundleConfigurator.java",
  "func_name": "PlatformException",
  "func_before": "@Override\n    public void configureApplicationServer() throws PlatformException {\n        loadProperties();\n\n        final String dbVendor = standardConfiguration.getDbVendor();\n        final String bdmDbVendor = bdmConfiguration.getDbVendor();\n        final Path setEnvUnixFile = getPathUnderAppServer(\"bin/setenv.sh\", true);\n        final Path setEnvWindowsFile = getPathUnderAppServer(\"bin/setenv.bat\", true);\n        final Path bonitaXmlFile = getPathUnderAppServer(\"conf/Catalina/localhost/bonita.xml\", false);\n        final File bonitaDbDriverFile = getDriverFile(dbVendor);\n        final File bdmDriverFile = getDriverFile(bdmDbVendor);\n\n        try {\n            createBackupFolderIfNecessary(\"setup/\" + TOMCAT_BACKUP_FOLDER);\n\n            // 1. update setenv(.sh|.bat):\n            String newContent = readContentFromFile(getTemplateFolderPath(\"setenv.bat\"));\n            newContent = updateSetEnvFile(newContent, dbVendor, \"sysprop.bonita.db.vendor\");\n            newContent = updateSetEnvFile(newContent, bdmDbVendor, \"sysprop.bonita.bdm.db.vendor\");\n            backupAndReplaceContentIfNecessary(setEnvWindowsFile, newContent,\n                    \"Setting Bonita internal database vendor to '\" + dbVendor\n                            + \"' and Business Data database vendor to '\" + bdmDbVendor\n                            + \"' in 'setenv.bat' file\");\n\n            newContent = readContentFromFile(getTemplateFolderPath(\"setenv.sh\"));\n            newContent = updateSetEnvFile(newContent, dbVendor, \"sysprop.bonita.db.vendor\");\n            newContent = updateSetEnvFile(newContent, bdmDbVendor, \"sysprop.bonita.bdm.db.vendor\");\n            backupAndReplaceContentIfNecessary(setEnvUnixFile, newContent,\n                    \"Setting Bonita internal database vendor to '\" + dbVendor\n                            + \"' and Business Data database vendor to '\" + bdmDbVendor\n                            + \"' in 'setenv.sh' file\");\n\n            //2. update bonita.xml:\n            newContent = readContentFromFile(getTemplateFolderPath(\"bonita.xml\"));\n            newContent = updateBonitaXmlFile(newContent, standardConfiguration, \"ds1\");\n            newContent = updateBonitaXmlFile(newContent, bdmConfiguration, \"ds2\");\n            backupAndReplaceContentIfNecessary(bonitaXmlFile, newContent,\n                    \"Configuring file 'conf/Catalina/localhost/bonita.xml' with your DB values for Bonita internal database on '\"\n                            + dbVendor\n                            + \"' and for Business Data database on '\" + bdmDbVendor + \"'\");\n\n            //3. copy the JDBC drivers:\n            final Path srcDriverFile = bonitaDbDriverFile.toPath();\n            final Path targetBonitaDbDriverFile = getPathUnderAppServer(\"lib/bonita\", true)\n                    .resolve(srcDriverFile.getFileName());\n            copyDatabaseDriversIfNecessary(srcDriverFile, targetBonitaDbDriverFile, dbVendor);\n            final Path srcBdmDriverFile = bdmDriverFile.toPath();\n            final Path targetBdmDriverFile = getPathUnderAppServer(\"lib/bonita\", true)\n                    .resolve(srcBdmDriverFile.getFileName());\n            copyDatabaseDriversIfNecessary(srcBdmDriverFile, targetBdmDriverFile, bdmDbVendor);\n            LOGGER.info(\"Tomcat auto-configuration complete.\");\n        } catch (PlatformException e) {\n            restorePreviousConfiguration(setEnvUnixFile, setEnvWindowsFile, bonitaXmlFile);\n            throw e;\n        }\n    }",
  "func_after": "@Override\n    public void configureApplicationServer() throws PlatformException {\n        loadProperties();\n\n        final String dbVendor = standardConfiguration.getDbVendor();\n        final String bdmDbVendor = bdmConfiguration.getDbVendor();\n        final Path setEnvUnixFile = getPathUnderAppServer(\"bin/setenv.sh\", true);\n        final Path setEnvWindowsFile = getPathUnderAppServer(\"bin/setenv.bat\", true);\n        final Path bonitaXmlFile = getPathUnderAppServer(\"conf/Catalina/localhost/bonita.xml\", false);\n        final File bonitaDbDriverFile = getDriverFile(dbVendor);\n        final File bdmDriverFile = getDriverFile(bdmDbVendor);\n\n        try {\n            createBackupFolderIfNecessary(\"setup/\" + TOMCAT_BACKUP_FOLDER);\n\n            // 1. update setenv(.sh|.bat):\n            String newContent = readContentFromFile(getTemplateFolderPath(\"setenv.bat\"));\n            newContent = updateSetEnvFile(newContent, dbVendor, \"sysprop.bonita.db.vendor\");\n            newContent = updateSetEnvFile(newContent, bdmDbVendor, \"sysprop.bonita.bdm.db.vendor\");\n            backupAndReplaceContentIfNecessary(setEnvWindowsFile, newContent,\n                    \"Setting Bonita internal database vendor to '\" + dbVendor\n                            + \"' and Business Data database vendor to '\" + bdmDbVendor\n                            + \"' in 'setenv.bat' file\");\n\n            newContent = readContentFromFile(getTemplateFolderPath(\"setenv.sh\"));\n            newContent = updateSetEnvFile(newContent, dbVendor, \"sysprop.bonita.db.vendor\");\n            newContent = updateSetEnvFile(newContent, bdmDbVendor, \"sysprop.bonita.bdm.db.vendor\");\n            backupAndReplaceContentIfNecessary(setEnvUnixFile, newContent,\n                    \"Setting Bonita internal database vendor to '\" + dbVendor\n                            + \"' and Business Data database vendor to '\" + bdmDbVendor\n                            + \"' in 'setenv.sh' file\");\n\n            //2. update bonita.xml:\n            newContent = readContentFromFile(getTemplateFolderPath(\"bonita.xml\"));\n            newContent = updateBonitaXmlFile(newContent, standardConfiguration, \"ds1\");\n            newContent = updateBonitaXmlFile(newContent, bdmConfiguration, \"ds2\");\n            backupAndReplaceContentIfNecessary(bonitaXmlFile, newContent,\n                    \"Configuring file 'conf/Catalina/localhost/bonita.xml' with your DB values for Bonita internal database on '\"\n                            + dbVendor\n                            + \"' and for Business Data database on '\" + bdmDbVendor + \"'\");\n\n            //3. copy the JDBC drivers:\n            final Path srcDriverFile = bonitaDbDriverFile.toPath();\n            final Path targetBonitaDbDriverFile = getPathUnderAppServer(\"lib/bonita\", true)\n                    .resolve(srcDriverFile.getFileName());\n            copyDatabaseDriversIfNecessary(srcDriverFile, targetBonitaDbDriverFile, dbVendor);\n            final Path srcBdmDriverFile = bdmDriverFile.toPath();\n            final Path targetBdmDriverFile = getPathUnderAppServer(\"lib/bonita\", true)\n                    .resolve(srcBdmDriverFile.getFileName());\n            copyDatabaseDriversIfNecessary(srcBdmDriverFile, targetBdmDriverFile, bdmDbVendor);\n            removeH2DriverIfNecessary(targetBonitaDbDriverFile.getParent(), dbVendor, bdmDbVendor);\n            LOGGER.info(\"Tomcat auto-configuration complete.\");\n        } catch (PlatformException e) {\n            restorePreviousConfiguration(setEnvUnixFile, setEnvWindowsFile, bonitaXmlFile);\n            throw e;\n        }\n    }",
  "diff_func": "--- func_before\n+++ func_after\n @Override\n     public void configureApplicationServer() throws PlatformException {\n         loadProperties();\n \n         final String dbVendor = standardConfiguration.getDbVendor();\n         final String bdmDbVendor = bdmConfiguration.getDbVendor();\n         final Path setEnvUnixFile = getPathUnderAppServer(\"bin/setenv.sh\", true);\n         final Path setEnvWindowsFile = getPathUnderAppServer(\"bin/setenv.bat\", true);\n         final Path bonitaXmlFile = getPathUnderAppServer(\"conf/Catalina/localhost/bonita.xml\", false);\n         final File bonitaDbDriverFile = getDriverFile(dbVendor);\n         final File bdmDriverFile = getDriverFile(bdmDbVendor);\n \n         try {\n             createBackupFolderIfNecessary(\"setup/\" + TOMCAT_BACKUP_FOLDER);\n \n             // 1. update setenv(.sh|.bat):\n             String newContent = readContentFromFile(getTemplateFolderPath(\"setenv.bat\"));\n             newContent = updateSetEnvFile(newContent, dbVendor, \"sysprop.bonita.db.vendor\");\n             newContent = updateSetEnvFile(newContent, bdmDbVendor, \"sysprop.bonita.bdm.db.vendor\");\n             backupAndReplaceContentIfNecessary(setEnvWindowsFile, newContent,\n                     \"Setting Bonita internal database vendor to '\" + dbVendor\n                             + \"' and Business Data database vendor to '\" + bdmDbVendor\n                             + \"' in 'setenv.bat' file\");\n \n             newContent = readContentFromFile(getTemplateFolderPath(\"setenv.sh\"));\n             newContent = updateSetEnvFile(newContent, dbVendor, \"sysprop.bonita.db.vendor\");\n             newContent = updateSetEnvFile(newContent, bdmDbVendor, \"sysprop.bonita.bdm.db.vendor\");\n             backupAndReplaceContentIfNecessary(setEnvUnixFile, newContent,\n                     \"Setting Bonita internal database vendor to '\" + dbVendor\n                             + \"' and Business Data database vendor to '\" + bdmDbVendor\n                             + \"' in 'setenv.sh' file\");\n \n  ",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix  \nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch removes the H2 database JAR from the classpath when it's not selected as the database vendor, addressing a known security vulnerability (CVE-2021-42392). This mitigates a potential security risk by preventing unauthorized access or code execution through the H2 database.\n\nFinal Classification: Security Vulnerability Fix  \nConfidence Score: 0.95"
}