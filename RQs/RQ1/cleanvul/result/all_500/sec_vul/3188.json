{
  "id": 3188,
  "language": "Python",
  "commit_url": "https://github.com/apache/airflow/commit/db3ad3042ab1bc1f3edf97960b53d7411b382e41",
  "commit_sha": "db3ad3042ab1bc1f3edf97960b53d7411b382e41",
  "commit_msg": "Sanitize host in drill hook\n\nThe host passed in drill connection might contain some invalid\ncharacters. We should sanitize and reject them.",
  "pr_url": "https://github.com/apache/airflow/pull/30215",
  "pr_info": "The host passed in drill connection might contain some invalid characters. We should sanitize and reject them.\r\n\r\n<!--\r\nThank you for contributing! Please make sure that your code changes\r\nare covered with tests. And in case of new features or big changes\r\nremember to adjust the documentation.\r\n\r\nFeel free to ping committers for the review!\r\n\r\nIn case of an existing issue, reference it using one of the following:\r\n\r\ncloses: #ISSUE\r\nrelated: #ISSUE\r\n\r\nHow to write a good git commit message:\r\nhttp://chris.beams.io/posts/git-commit/\r\n-->\r\n\r\n---\r\n**^ Add meaningful description above**\r\n\r\nRead the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.\r\nIn case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.\r\nIn case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).\r\nIn case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).\r\n",
  "file_name": "airflow/providers/apache/drill/hooks/drill.py",
  "func_name": "get_conn",
  "func_before": "def get_conn(self) -> Connection:\n        \"\"\"Establish a connection to Drillbit.\"\"\"\n        conn_md = self.get_connection(getattr(self, self.conn_name_attr))\n        creds = f\"{conn_md.login}:{conn_md.password}@\" if conn_md.login else \"\"\n        engine = create_engine(\n            f'{conn_md.extra_dejson.get(\"dialect_driver\", \"drill+sadrill\")}://{creds}'\n            f\"{conn_md.host}:{conn_md.port}/\"\n            f'{conn_md.extra_dejson.get(\"storage_plugin\", \"dfs\")}'\n        )\n\n        self.log.info(\n            \"Connected to the Drillbit at %s:%s as user %s\", conn_md.host, conn_md.port, conn_md.login\n        )\n        return engine.raw_connection()",
  "func_after": "def get_conn(self) -> Connection:\n        \"\"\"Establish a connection to Drillbit.\"\"\"\n        conn_md = self.get_connection(getattr(self, self.conn_name_attr))\n        creds = f\"{conn_md.login}:{conn_md.password}@\" if conn_md.login else \"\"\n        if \"/\" in conn_md.host or \"&\" in conn_md.host:\n            raise ValueError(\"Drill host should not contain '/&' characters\")\n        engine = create_engine(\n            f'{conn_md.extra_dejson.get(\"dialect_driver\", \"drill+sadrill\")}://{creds}'\n            f\"{conn_md.host}:{conn_md.port}/\"\n            f'{conn_md.extra_dejson.get(\"storage_plugin\", \"dfs\")}'\n        )\n\n        self.log.info(\n            \"Connected to the Drillbit at %s:%s as user %s\", conn_md.host, conn_md.port, conn_md.login\n        )\n        return engine.raw_connection()",
  "diff_func": "--- func_before\n+++ func_after\n def get_conn(self) -> Connection:\n         \"\"\"Establish a connection to Drillbit.\"\"\"\n         conn_md = self.get_connection(getattr(self, self.conn_name_attr))\n         creds = f\"{conn_md.login}:{conn_md.password}@\" if conn_md.login else \"\"\n+        if \"/\" in conn_md.host or \"&\" in conn_md.host:\n+            raise ValueError(\"Drill host should not contain '/&' characters\")\n         engine = create_engine(\n             f'{conn_md.extra_dejson.get(\"dialect_driver\", \"drill+sadrill\")}://{creds}'\n             f\"{conn_md.host}:{conn_md.port}/\"\n             f'{conn_md.extra_dejson.get(\"storage_plugin\", \"dfs\")}'\n         )\n \n         self.log.info(\n             \"Connected to the Drillbit at %s:%s as user %s\", conn_md.host, conn_md.port, conn_md.login\n         )\n         return engine.raw_connection()",
  "diff_source": "custom",
  "Bug Filter": "** Security Vulnerability Fix  \n**Confidence Score:** 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\nThe patch introduces input validation to prevent specific characters in the host name, which could be exploited to cause security issues. This modification is aimed at mitigating a potential vulnerability, making it a Security Vulnerability Fix.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence Score:** 0.95"
}