{
  "id": 984,
  "language": "Java",
  "commit_url": "https://github.com/apache/iotdb/commit/c7409727c7a2e23ccad5e919e362a51f2ced1b2d",
  "commit_sha": "c7409727c7a2e23ccad5e919e362a51f2ced1b2d",
  "commit_msg": "[To rel/0.13][IOTDB-2769] Fix auth mapping of GRANT_ROLE_PRIVILEGE and GRANT_USER_ROLE (#7099)",
  "pr_url": "https://github.com/apache/iotdb/pull/7099",
  "pr_info": "See: https://issues.apache.org/jira/browse/IOTDB-2769",
  "file_name": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/AuthorPlan.java",
  "func_name": "transformOperatorTypeToAuthorType",
  "func_before": "private AuthorType transformOperatorTypeToAuthorType(OperatorType operatorType)\n      throws IOException {\n    AuthorType type;\n    switch (operatorType) {\n      case CREATE_ROLE:\n        type = AuthorType.CREATE_ROLE;\n        break;\n      case DELETE_ROLE:\n        type = AuthorType.DROP_ROLE;\n        break;\n      case CREATE_USER:\n        type = AuthorType.CREATE_USER;\n        break;\n      case REVOKE_USER_ROLE:\n        type = AuthorType.REVOKE_ROLE_FROM_USER;\n        break;\n      case REVOKE_ROLE_PRIVILEGE:\n        type = AuthorType.REVOKE_ROLE;\n        break;\n      case REVOKE_USER_PRIVILEGE:\n        type = AuthorType.REVOKE_USER;\n        break;\n      case GRANT_ROLE_PRIVILEGE:\n        type = AuthorType.GRANT_ROLE_TO_USER;\n        break;\n      case GRANT_USER_PRIVILEGE:\n        type = AuthorType.GRANT_USER;\n        break;\n      case GRANT_USER_ROLE:\n        type = AuthorType.GRANT_ROLE;\n        break;\n      case MODIFY_PASSWORD:\n        type = AuthorType.UPDATE_USER;\n        break;\n      case DELETE_USER:\n        type = AuthorType.DROP_USER;\n        break;\n      default:\n        throw new IOException(\"unrecognized author type \" + operatorType.name());\n    }\n    return type;\n  }",
  "func_after": "private AuthorType transformOperatorTypeToAuthorType(OperatorType operatorType)\n      throws IOException {\n    AuthorType type;\n    switch (operatorType) {\n      case CREATE_ROLE:\n        type = AuthorType.CREATE_ROLE;\n        break;\n      case DELETE_ROLE:\n        type = AuthorType.DROP_ROLE;\n        break;\n      case CREATE_USER:\n        type = AuthorType.CREATE_USER;\n        break;\n      case REVOKE_ROLE_TO_USER:\n        type = AuthorType.REVOKE_ROLE_FROM_USER;\n        break;\n      case REVOKE_ROLE_PRIVILEGE:\n        type = AuthorType.REVOKE_ROLE;\n        break;\n      case REVOKE_USER_PRIVILEGE:\n        type = AuthorType.REVOKE_USER;\n        break;\n      case GRANT_ROLE_PRIVILEGE:\n        type = AuthorType.GRANT_ROLE;\n        break;\n      case GRANT_USER_PRIVILEGE:\n        type = AuthorType.GRANT_USER;\n        break;\n      case GRANT_ROLE_TO_USER:\n        type = AuthorType.GRANT_ROLE_TO_USER;\n        break;\n      case MODIFY_PASSWORD:\n        type = AuthorType.UPDATE_USER;\n        break;\n      case DELETE_USER:\n        type = AuthorType.DROP_USER;\n        break;\n      default:\n        throw new IOException(\"unrecognized author type \" + operatorType.name());\n    }\n    return type;\n  }",
  "diff_func": "--- func_before\n+++ func_after\n private AuthorType transformOperatorTypeToAuthorType(OperatorType operatorType)\n       throws IOException {\n     AuthorType type;\n     switch (operatorType) {\n       case CREATE_ROLE:\n         type = AuthorType.CREATE_ROLE;\n         break;\n       case DELETE_ROLE:\n         type = AuthorType.DROP_ROLE;\n         break;\n       case CREATE_USER:\n         type = AuthorType.CREATE_USER;\n         break;\n-      case REVOKE_USER_ROLE:\n+      case REVOKE_ROLE_TO_USER:\n         type = AuthorType.REVOKE_ROLE_FROM_USER;\n         break;\n       case REVOKE_ROLE_PRIVILEGE:\n         type = AuthorType.REVOKE_ROLE;\n         break;\n       case REVOKE_USER_PRIVILEGE:\n         type = AuthorType.REVOKE_USER;\n         break;\n       case GRANT_ROLE_PRIVILEGE:\n-        type = AuthorType.GRANT_ROLE_TO_USER;\n+        type = AuthorType.GRANT_ROLE;\n         break;\n       case GRANT_USER_PRIVILEGE:\n         type = AuthorType.GRANT_USER;\n         break;\n-      case GRANT_USER_ROLE:\n+      case GRANT_ROLE_TO_USER:\n-        type = AuthorType.GRANT_ROLE;\n+        type = AuthorType.GRANT_ROLE_TO_USER;\n         break;\n       case MODIFY_PASSWORD:\n         type = AuthorType.UPDATE_USER;\n         break;\n       case DELETE_USER:\n         type = AuthorType.DROP_USER;\n         break;\n       default:\n         throw new IOException(\"unrecognized author type \" + operatorType.name());\n     }\n     return type;\n   }",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 0.9",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch corrects authorization mappings for role and user privileges, addressing potential security issues in permission handling. The code changes ensure proper authorization, preventing unauthorized access or privilege escalation.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 0.9"
}