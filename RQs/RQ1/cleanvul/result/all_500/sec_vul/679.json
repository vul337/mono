{
  "id": 679,
  "language": "Java",
  "commit_url": "https://github.com/PixelExperience/frameworks_base/commit/b0b1ddb4b4ba5db27f5616b02ae2cdca8b63496f",
  "commit_sha": "b0b1ddb4b4ba5db27f5616b02ae2cdca8b63496f",
  "commit_msg": "[RESTRICT AUTOMERGE] Fix bypass BG-FGS and BAL via package manager APIs\n\nOpt-in for BAL of PendingIntent for following APIs:\n\n* PackageInstaller.uninstall()\n* PackageInstaller.installExistingPackage()\n* PackageInstaller.uninstallExistingPackage()\n* PackageInstaller.Session.commit()\n* PackageInstaller.Session.commitTransferred()\n* PackageManager.freeStorage()\n\nBug: 230492955\nBug: 243377226\nTest: atest android.security.cts.PackageInstallerTest\nTest: atest CtsStagedInstallHostTestCases\nChange-Id: I9b6f801d69ea6d2244a38dbe689e81afa4e798bf",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "services/core/java/com/android/server/pm/PackageInstallerSession.java",
  "func_name": "sendOnPackageInstalled",
  "func_before": "private static void sendOnPackageInstalled(Context context, IntentSender target, int sessionId,\n            boolean showNotification, int userId, String basePackageName, int returnCode,\n            String msg, Bundle extras) {\n        if (PackageManager.INSTALL_SUCCEEDED == returnCode && showNotification) {\n            boolean update = (extras != null) && extras.getBoolean(Intent.EXTRA_REPLACING);\n            Notification notification = PackageInstallerService.buildSuccessNotification(context,\n                    context.getResources()\n                            .getString(update ? R.string.package_updated_device_owner :\n                                    R.string.package_installed_device_owner),\n                    basePackageName,\n                    userId);\n            if (notification != null) {\n                NotificationManager notificationManager = (NotificationManager)\n                        context.getSystemService(Context.NOTIFICATION_SERVICE);\n                notificationManager.notify(basePackageName,\n                        SystemMessageProto.SystemMessage.NOTE_PACKAGE_STATE,\n                        notification);\n            }\n        }\n        final Intent fillIn = new Intent();\n        fillIn.putExtra(PackageInstaller.EXTRA_PACKAGE_NAME, basePackageName);\n        fillIn.putExtra(PackageInstaller.EXTRA_SESSION_ID, sessionId);\n        fillIn.putExtra(PackageInstaller.EXTRA_STATUS,\n                PackageManager.installStatusToPublicStatus(returnCode));\n        fillIn.putExtra(PackageInstaller.EXTRA_STATUS_MESSAGE,\n                PackageManager.installStatusToString(returnCode, msg));\n        fillIn.putExtra(PackageInstaller.EXTRA_LEGACY_STATUS, returnCode);\n        if (extras != null) {\n            final String existing = extras.getString(\n                    PackageManager.EXTRA_FAILURE_EXISTING_PACKAGE);\n            if (!TextUtils.isEmpty(existing)) {\n                fillIn.putExtra(PackageInstaller.EXTRA_OTHER_PACKAGE_NAME, existing);\n            }\n        }\n        try {\n            target.sendIntent(context, 0, fillIn, null, null);\n        } catch (IntentSender.SendIntentException ignored) {\n        }\n    }",
  "func_after": "private static void sendOnPackageInstalled(Context context, IntentSender target, int sessionId,\n            boolean showNotification, int userId, String basePackageName, int returnCode,\n            String msg, Bundle extras) {\n        if (PackageManager.INSTALL_SUCCEEDED == returnCode && showNotification) {\n            boolean update = (extras != null) && extras.getBoolean(Intent.EXTRA_REPLACING);\n            Notification notification = PackageInstallerService.buildSuccessNotification(context,\n                    context.getResources()\n                            .getString(update ? R.string.package_updated_device_owner :\n                                    R.string.package_installed_device_owner),\n                    basePackageName,\n                    userId);\n            if (notification != null) {\n                NotificationManager notificationManager = (NotificationManager)\n                        context.getSystemService(Context.NOTIFICATION_SERVICE);\n                notificationManager.notify(basePackageName,\n                        SystemMessageProto.SystemMessage.NOTE_PACKAGE_STATE,\n                        notification);\n            }\n        }\n        final Intent fillIn = new Intent();\n        fillIn.putExtra(PackageInstaller.EXTRA_PACKAGE_NAME, basePackageName);\n        fillIn.putExtra(PackageInstaller.EXTRA_SESSION_ID, sessionId);\n        fillIn.putExtra(PackageInstaller.EXTRA_STATUS,\n                PackageManager.installStatusToPublicStatus(returnCode));\n        fillIn.putExtra(PackageInstaller.EXTRA_STATUS_MESSAGE,\n                PackageManager.installStatusToString(returnCode, msg));\n        fillIn.putExtra(PackageInstaller.EXTRA_LEGACY_STATUS, returnCode);\n        if (extras != null) {\n            final String existing = extras.getString(\n                    PackageManager.EXTRA_FAILURE_EXISTING_PACKAGE);\n            if (!TextUtils.isEmpty(existing)) {\n                fillIn.putExtra(PackageInstaller.EXTRA_OTHER_PACKAGE_NAME, existing);\n            }\n        }\n        try {\n            final BroadcastOptions options = BroadcastOptions.makeBasic();\n            options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n            target.sendIntent(context, 0, fillIn, null /* onFinished */,\n                    null /* handler */, null /* requiredPermission */, options.toBundle());\n        } catch (IntentSender.SendIntentException ignored) {\n        }\n    }",
  "diff_func": "--- func_before\n+++ func_after\n private static void sendOnPackageInstalled(Context context, IntentSender target, int sessionId,\n             boolean showNotification, int userId, String basePackageName, int returnCode,\n             String msg, Bundle extras) {\n         if (PackageManager.INSTALL_SUCCEEDED == returnCode && showNotification) {\n             boolean update = (extras != null) && extras.getBoolean(Intent.EXTRA_REPLACING);\n             Notification notification = PackageInstallerService.buildSuccessNotification(context,\n                     context.getResources()\n                             .getString(update ? R.string.package_updated_device_owner :\n                                     R.string.package_installed_device_owner),\n                     basePackageName,\n                     userId);\n             if (notification != null) {\n                 NotificationManager notificationManager = (NotificationManager)\n                         context.getSystemService(Context.NOTIFICATION_SERVICE);\n                 notificationManager.notify(basePackageName,\n                         SystemMessageProto.SystemMessage.NOTE_PACKAGE_STATE,\n                         notification);\n             }\n         }\n         final Intent fillIn = new Intent();\n         fillIn.putExtra(PackageInstaller.EXTRA_PACKAGE_NAME, basePackageName);\n         fillIn.putExtra(PackageInstaller.EXTRA_SESSION_ID, sessionId);\n         fillIn.putExtra(PackageInstaller.EXTRA_STATUS,\n                 PackageManager.installStatusToPublicStatus(returnCode));\n         fillIn.putExtra(PackageInstaller.EXTRA_STATUS_MESSAGE,\n                 PackageManager.installStatusToString(returnCode, msg));\n         fillIn.putExtra(PackageInstaller.EXTRA_LEGACY_STATUS, returnCode);\n         if (extras != null) {\n             final String existing = extras.getString(\n                     PackageManager.EXTRA_FAILURE_EXISTING_PACKAGE);\n             if (!TextUtils.isEmpty(existing)) {\n                 fillIn.putExtra",
  "diff_source": "custom",
  "Bug Filter": "** Security Vulnerability Fix  \n**Confidence Score:** 0.9",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\nThe patch addresses a security vulnerability by preventing bypasses of BG-FGS and BAL through package manager APIs. The commit message clearly indicates the security intent, and the code changes support this by enhancing notifications, though the exact security fix may be elsewhere.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence Score:** 0.9"
}