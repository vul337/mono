{
  "id": 4545,
  "language": "C/C++",
  "commit_url": "https://github.com/fontforge/fontforge/commit/4775d6d8b77e4b28dedd521abbed1b5820e52582",
  "commit_sha": "4775d6d8b77e4b28dedd521abbed1b5820e52582",
  "commit_msg": "Fix AddressSanitizer: global-buffer-overflow\n\n==10627==ERROR: AddressSanitizer: global-buffer-overflow on address 0x00010e2239c1 at pc 0x000111258c3d bp 0x7ffee286c210 sp 0x7ffee286b988\nWRITE of size 4 at 0x00010e2239c1 thread T0\n    #0 0x111258c3c in scanf_common(void*, int, bool, char const*, __va_list_tag*) (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x27c3c)\n    #1 0x111258d6d in wrap_vsscanf (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x27d6d)\n    #2 0x11125902c in wrap_sscanf (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x2802c)\n    #3 0x10de70b21 in PrefsUI_LoadPrefs prefs.c:1230\n    #4 0x10e02e0ce in fontforge_main startui.c:1109\n    #5 0x10d654b11 in main main.c:33\n    #6 0x7fff62d7b3d4 in start (libdyld.dylib:x86_64+0x163d4)\n\n0x00010e2239c1 is located 63 bytes to the left of global variable 'fvhintingneededcol' defined in '../fontforgeexe/fontview.c:123:14' (0x10e223a00) of size 4\n0x00010e2239c1 is located 0 bytes to the right of global variable 'warn_script_unsaved' defined in '../fontforgeexe/fontview.c:83:6' (0x10e2239c0) of size 1\nSUMMARY: AddressSanitizer: global-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x27c3c) in scanf_common(void*, int, bool, char const*, __va_list_tag*)\n\nwarn_script_unsaved is declared as bool, but prefs.c:1230 casts its\npointer to int *, leading the issue above. Prefs of type pr_bool should\nbe int as well, FontForge is pre-C99 and does not know bool.",
  "pr_url": "https://github.com/fontforge/fontforge/pull/3886",
  "pr_info": "```\r\n==10627==ERROR: AddressSanitizer: global-buffer-overflow on address 0x00010e2239c1 at pc 0x000111258c3d bp 0x7ffee286c210 sp 0x7ffee286b988\r\nWRITE of size 4 at 0x00010e2239c1 thread T0\r\n    #0 0x111258c3c in scanf_common(void*, int, bool, char const*, __va_list_tag*) (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x27c3c)\r\n    #1 0x111258d6d in wrap_vsscanf (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x27d6d)\r\n    #2 0x11125902c in wrap_sscanf (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x2802c)\r\n    #3 0x10de70b21 in PrefsUI_LoadPrefs prefs.c:1230\r\n    #4 0x10e02e0ce in fontforge_main startui.c:1109\r\n    #5 0x10d654b11 in main main.c:33\r\n    #6 0x7fff62d7b3d4 in start (libdyld.dylib:x86_64+0x163d4)\r\n\r\n0x00010e2239c1 is located 63 bytes to the left of global variable 'fvhintingneededcol' defined in '../fontforgeexe/fontview.c:123:14' (0x10e223a00) of size 4\r\n0x00010e2239c1 is located 0 bytes to the right of global variable 'warn_script_unsaved' defined in '../fontforgeexe/fontview.c:83:6' (0x10e2239c0) of size 1\r\nSUMMARY: AddressSanitizer: global-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x27c3c) in scanf_common(void*, int, bool, char const*, __va_list_tag*)\r\n```\r\n\r\n`warn_script_unsaved` is declared as `bool`, but prefs.c:1230 casts its pointer to `int *`, leading the issue above. Prefs of type `pr_bool` should be int as well, FontForge is pre-C99 and does not know `bool`.\r\n\r\n<!-- Provide a description of the change here. -->\r\n<!-- See also: https://github.com/fontforge/fontforge/blob/master/CONTRIBUTING.md -->\r\n\r\n### Type of change\r\n<!-- What kind of change is this? Remove non applicable types. -->\r\n<!-- If this fixes a bug, please reference the issue, e.g. 'Fixes #1234' -->\r\n- **Bug fix**\r\n\r\n",
  "file_name": "fontforgeexe/fontview.c",
  "func_name": "AskScriptChanged",
  "func_before": "static int AskScriptChanged() {\n    int ret;\n    char *buts[4];\n\n    buts[0] = _(\"_Yes\");\n    buts[1] = _(\"Yes, and don't _remind me again\");\n    buts[2] = _(\"_No\");\n    buts[3] = NULL;\n    ret = gwwv_ask( _(\"Unsaved script\"),(const char **) buts,0,2,_(\"You have an unsaved script in the «Execute Script» dialog. Do you intend to discard it?\"));\n    if (ret == 1) {\n        warn_script_unsaved = false;\n        SavePrefs(true);\n    }\nreturn( ret );\n}",
  "func_after": "static int AskScriptChanged() {\n    int ret;\n    char *buts[4];\n\n    buts[0] = _(\"_Yes\");\n    buts[1] = _(\"Yes, and don't _remind me again\");\n    buts[2] = _(\"_No\");\n    buts[3] = NULL;\n    ret = gwwv_ask( _(\"Unsaved script\"),(const char **) buts,0,2,_(\"You have an unsaved script in the «Execute Script» dialog. Do you intend to discard it?\"));\n    if (ret == 1) {\n        warn_script_unsaved = 0;\n        SavePrefs(true);\n    }\nreturn( ret );\n}",
  "diff_func": "--- func_before\n+++ func_after\n static int AskScriptChanged() {\n     int ret;\n     char *buts[4];\n \n     buts[0] = _(\"_Yes\");\n     buts[1] = _(\"Yes, and don't _remind me again\");\n     buts[2] = _(\"_No\");\n     buts[3] = NULL;\n     ret = gwwv_ask( _(\"Unsaved script\"),(const char **) buts,0,2,_(\"You have an unsaved script in the «Execute Script» dialog. Do you intend to discard it?\"));\n     if (ret == 1) {\n-        warn_script_unsaved = false;\n+        warn_script_unsaved = 0;\n         SavePrefs(true);\n     }\n return( ret );\n }",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 0.8",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch addresses a buffer overflow issue detected by AddressSanitizer, which is a security concern. The fix corrects a type mismatch in a global variable, preventing unauthorized memory access.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 0.8"
}