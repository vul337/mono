{
  "id": 7634,
  "language": "JavaScript",
  "commit_url": "https://github.com/Seiji42/cub-scout-tracker/commit/b4bc1a328b1f59437db159f9d136d9ed15707e31",
  "commit_sha": "b4bc1a328b1f59437db159f9d136d9ed15707e31",
  "commit_msg": "Added protection from sql injection and dubug flag",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "databaseAccessFunctions.js",
  "func_name": "insertAdult",
  "func_before": "function insertAdult(firstName, lastName, username, password, packNumber, \n\t\tleaderType, rankType, phoneNumber, connection)\n{\n\tvar temp= selectAdult(username, connection);\n\n\tif(temp.databaseObject.adult_id<1)\n\t{\n\t\treturn temp;\n\t}\n\tvar strQuery = \"INSERT INTO adult VALUES('\"+firstName+\"', '\"+lastName+\"', '\"+\n\tusername + \"', '\" +hashPassword(password) + \"', '\" + packNumber+\"', '\"+\n\tleaderType +\"', '\"+ rankType+\"', '\"+phoneNumber+ \"', 'NULL')\";\n\tconnection.query( strQuery, function(err, rows)\n\t\t\t{if(err) {\n\t\t\t\tthrow err;\n\t\t\t}else{\n\t\t\t\ttemp= new Adult(row[0]);\n\t\t\t\tif(debug)\n\t\t\t\t{console.log(\"insertAdult \\n\"+rows[0]+\"\\n\");}\n\t\t\t\t\n\t\t\t\treturn addScoutsToParent(temp);\n\t\t\t}\n\t\t\t});\n}",
  "func_after": "function insertAdult(firstName, lastName, username, password, packNumber, \n\t\tleaderType, rankType, phoneNumber, connection)\n{\n\tvar temp= selectAdult(username, connection);\n\n\tif(temp.databaseObject.adult_id<1)\n\t{\n\t\treturn temp;\n\t}\n\tvar strQuery = \"INSERT INTO adult VALUES('\"+\n\tconnection.escape(firstName)               +\"', '\"+\n\tconnection.escape(lastName)                +\"', '\"+\n\tconnection.escape(username)                +\"', '\"+\n\tconnection.escape(hashPassword(password))  +\"', '\"+ \n\tconnection.escape(packNumber)              +\"', '\"+\t\n\tconnection.escape(leaderType)              +\"', '\"+ \n\tconnection.escape(rankType)                +\"', '\"+\n\tconnection.escape(phoneNumber)             +\"', 'NULL')\";\n\n\tconnection.query( strQuery, function(err, rows)\n\t\t\t{if(err) {\n\t\t\t\tthrow err;\n\t\t\t}else{\n\t\t\t\ttemp= new Adult(row[0]);\n\t\t\t\tif(debug)\n\t\t\t\t{console.log(\"insertAdult \\n\"+rows[0]+\"\\n\");}\n\n\t\t\t\treturn addScoutsToParent(temp);\n\t\t\t}\n\t\t\t});\n}",
  "diff_func": "--- func_before\n+++ func_after\n@@ -20 +20 @@\n+function insertAdult(firstName, lastName, username, password, packNumber, \n+\t\tleaderType, rankType, phoneNumber, connection)\n {\n-\tvar strQuery = \"SELECT * FROM adult WHERE username= '\" +connection.escape(username)+\"'\";\n+\tvar temp= selectAdult(username, connection);\n+\n+\tif(temp.databaseObject.adult_id<1)\n+\t{\n+\t\treturn temp;\n+\t}\n+\tvar strQuery = \"INSERT INTO adult VALUES('\"+\n+\tconnection.escape(firstName)               +\"', '\"+\n+\tconnection.escape(lastName)                +\"', '\"+\n+\tconnection.escape(username)                +\"', '\"+\n+\tconnection.escape(hashPassword(password))  +\"', '\"+ \n+\tconnection.escape(packNumber)              +\"', '\"+\t\n+\tconnection.escape(leaderType)              +\"', '\"+ \n+\tconnection.escape(rankType)                +\"', '\"+\n+\tconnection.escape(phoneNumber)             +\"', 'NULL')\";\n \n connection.query( strQuery, function(err, rows)\n {if(err) {\n-\t\t\t\ttemp= rows[0];\n-\t\t\t\ttemp.password=\"\";\n+\t\t\t\ttemp= new Adult(row[0]);\n if(debug)\n-\t\t\t\t{console.log(\"SelectAdult \\n\"+rows[0]+\"\\n\");}\n-\t\t\t\t\n-\t\t\t\treturn temp;\n+\t\t\t\t{console.log(\"insertAdult \\n\"+rows[0]+\"\\n\");}\n+\n+\t\t\t\treturn addScoutsToParent(temp);\n }\n });\n }",
  "diff_source": "api",
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch addresses a SQL injection vulnerability by replacing unsafe string concatenation with parameterized queries and proper escaping. The commit message explicitly mentions SQL injection protection, confirming the security focus.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 0.95"
}