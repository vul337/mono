{
  "id": 7355,
  "language": "JavaScript",
  "commit_url": "https://github.com/wekan/wekan/commit/31f89121fecca5a761b05cc3a26d4f237e90b484",
  "commit_sha": "31f89121fecca5a761b05cc3a26d4f237e90b484",
  "commit_msg": "Reject by default LDAP connections not authorized via CA trust store\n\nSee also: https://github.com/wekan/wekan/issues/3482",
  "pr_url": "https://github.com/wekan/wekan/pull/3483",
  "pr_info": "See also: https://github.com/wekan/wekan/issues/3482\n\n<!-- Reviewable:start -->\n---\nThis change isâ€‚[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/wekan/wekan/3483)\n<!-- Reviewable:end -->\n",
  "file_name": "packages/wekan-ldap/server/ldap.js",
  "func_name": "constructor",
  "func_before": "constructor() {\n    this.ldapjs = ldapjs;\n\n    this.connected = false;\n\n    this.options = {\n      host                               : this.constructor.settings_get('LDAP_HOST'),\n      port                               : this.constructor.settings_get('LDAP_PORT'),\n      Reconnect                          : this.constructor.settings_get('LDAP_RECONNECT'),\n      timeout                            : this.constructor.settings_get('LDAP_TIMEOUT'),\n      connect_timeout                    : this.constructor.settings_get('LDAP_CONNECT_TIMEOUT'),\n      idle_timeout                       : this.constructor.settings_get('LDAP_IDLE_TIMEOUT'),\n      encryption                         : this.constructor.settings_get('LDAP_ENCRYPTION'),\n      ca_cert                            : this.constructor.settings_get('LDAP_CA_CERT'),\n      reject_unauthorized                : this.constructor.settings_get('LDAP_REJECT_UNAUTHORIZED') || false,\n      Authentication                     : this.constructor.settings_get('LDAP_AUTHENTIFICATION'),\n      Authentication_UserDN              : this.constructor.settings_get('LDAP_AUTHENTIFICATION_USERDN'),\n      Authentication_Password            : this.constructor.settings_get('LDAP_AUTHENTIFICATION_PASSWORD'),\n      Authentication_Fallback            : this.constructor.settings_get('LDAP_LOGIN_FALLBACK'),\n      BaseDN                             : this.constructor.settings_get('LDAP_BASEDN'),\n      Internal_Log_Level                 : this.constructor.settings_get('INTERNAL_LOG_LEVEL'),\n      User_Authentication                : this.constructor.settings_get('LDAP_USER_AUTHENTICATION'),\n      User_Authentication_Field          : this.constructor.settings_get('LDAP_USER_AUTHENTICATION_FIELD'),\n      User_Attributes                    : this.constructor.settings_get('LDAP_USER_ATTRIBUTES'),\n      User_Search_Filter                 : this.constructor.settings_get('LDAP_USER_SEARCH_FILTER'),\n      User_Search_Scope                  : this.constructor.settings_get('LDAP_USER_SEARCH_SCOPE'),\n      User_Search_Field                  : this.constructor.settings_get('LDAP_USER_SEARCH_FIELD'),\n      Search_Page_Size                   : this.constructor.settings_get('LDAP_SEARCH_PAGE_SIZE'),\n      Search_Size_Limit                  : this.constructor.settings_get('LDAP_SEARCH_SIZE_LIMIT'),\n      group_filter_enabled               : this.constructor.settings_get('LDAP_GROUP_FILTER_ENABLE'),\n      group_filter_object_class          : this.constructor.settings_get('LDAP_GROUP_FILTER_OBJECTCLASS'),\n      group_filter_group_id_attribute    : this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_ID_ATTRIBUTE'),\n      group_filter_group_member_attribute: this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_MEMBER_ATTRIBUTE'),\n      group_filter_group_member_format   : this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_MEMBER_FORMAT'),\n      group_filter_group_name            : this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_NAME'),\n    };\n  }",
  "func_after": "constructor() {\n    this.ldapjs = ldapjs;\n\n    this.connected = false;\n\n    this.options = {\n      host                               : this.constructor.settings_get('LDAP_HOST'),\n      port                               : this.constructor.settings_get('LDAP_PORT'),\n      Reconnect                          : this.constructor.settings_get('LDAP_RECONNECT'),\n      timeout                            : this.constructor.settings_get('LDAP_TIMEOUT'),\n      connect_timeout                    : this.constructor.settings_get('LDAP_CONNECT_TIMEOUT'),\n      idle_timeout                       : this.constructor.settings_get('LDAP_IDLE_TIMEOUT'),\n      encryption                         : this.constructor.settings_get('LDAP_ENCRYPTION'),\n      ca_cert                            : this.constructor.settings_get('LDAP_CA_CERT'),\n      reject_unauthorized                : this.constructor.settings_get('LDAP_REJECT_UNAUTHORIZED') || true,\n      Authentication                     : this.constructor.settings_get('LDAP_AUTHENTIFICATION'),\n      Authentication_UserDN              : this.constructor.settings_get('LDAP_AUTHENTIFICATION_USERDN'),\n      Authentication_Password            : this.constructor.settings_get('LDAP_AUTHENTIFICATION_PASSWORD'),\n      Authentication_Fallback            : this.constructor.settings_get('LDAP_LOGIN_FALLBACK'),\n      BaseDN                             : this.constructor.settings_get('LDAP_BASEDN'),\n      Internal_Log_Level                 : this.constructor.settings_get('INTERNAL_LOG_LEVEL'),\n      User_Authentication                : this.constructor.settings_get('LDAP_USER_AUTHENTICATION'),\n      User_Authentication_Field          : this.constructor.settings_get('LDAP_USER_AUTHENTICATION_FIELD'),\n      User_Attributes                    : this.constructor.settings_get('LDAP_USER_ATTRIBUTES'),\n      User_Search_Filter                 : this.constructor.settings_get('LDAP_USER_SEARCH_FILTER'),\n      User_Search_Scope                  : this.constructor.settings_get('LDAP_USER_SEARCH_SCOPE'),\n      User_Search_Field                  : this.constructor.settings_get('LDAP_USER_SEARCH_FIELD'),\n      Search_Page_Size                   : this.constructor.settings_get('LDAP_SEARCH_PAGE_SIZE'),\n      Search_Size_Limit                  : this.constructor.settings_get('LDAP_SEARCH_SIZE_LIMIT'),\n      group_filter_enabled               : this.constructor.settings_get('LDAP_GROUP_FILTER_ENABLE'),\n      group_filter_object_class          : this.constructor.settings_get('LDAP_GROUP_FILTER_OBJECTCLASS'),\n      group_filter_group_id_attribute    : this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_ID_ATTRIBUTE'),\n      group_filter_group_member_attribute: this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_MEMBER_ATTRIBUTE'),\n      group_filter_group_member_format   : this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_MEMBER_FORMAT'),\n      group_filter_group_name            : this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_NAME'),\n    };\n  }",
  "diff_func": "--- func_before\n+++ func_after\n constructor() {\n     this.ldapjs = ldapjs;\n \n     this.connected = false;\n \n     this.options = {\n       host                               : this.constructor.settings_get('LDAP_HOST'),\n       port                               : this.constructor.settings_get('LDAP_PORT'),\n       Reconnect                          : this.constructor.settings_get('LDAP_RECONNECT'),\n       timeout                            : this.constructor.settings_get('LDAP_TIMEOUT'),\n       connect_timeout                    : this.constructor.settings_get('LDAP_CONNECT_TIMEOUT'),\n       idle_timeout                       : this.constructor.settings_get('LDAP_IDLE_TIMEOUT'),\n       encryption                         : this.constructor.settings_get('LDAP_ENCRYPTION'),\n       ca_cert                            : this.constructor.settings_get('LDAP_CA_CERT'),\n-      reject_unauthorized                : this.constructor.settings_get('LDAP_REJECT_UNAUTHORIZED') || false,\n+      reject_unauthorized                : this.constructor.settings_get('LDAP_REJECT_UNAUTHORIZED') || true,\n       Authentication                     : this.constructor.settings_get('LDAP_AUTHENTIFICATION'),\n       Authentication_UserDN              : this.constructor.settings_get('LDAP_AUTHENTIFICATION_USERDN'),\n       Authentication_Password            : this.constructor.settings_get('LDAP_AUTHENTIFICATION_PASSWORD'),\n       Authentication_Fallback            : this.constructor.settings_get('LDAP_LOGIN_FALLBACK'),\n       BaseDN                             : this.constructor.settings_get('LDAP_BASEDN'),\n       Internal_Log_Level                 : this.constructor.settings_get('INTERNAL_LOG_LEVEL'),\n       User_Authentication                : this.constructor.settings_get('LDAP_USER_AUTHENTICATION'),\n       User_Authentication_Field          : this.constructor.settings_get('LDAP_USER_AUTHENTICATION_FIELD'),\n       User_Attributes                    : this.constructor.settings_get('LDAP_USER_ATTRIBUTE",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix**\n\n**Confidence Score: 0.95**",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Analysis:**\n\n1. **Patch Analysis**: The commit message indicates a change to reject unauthorized LDAP connections. The code diff shows that the `reject_unauthorized` option's default value changed from `false` to `true`, ensuring connections without valid CA certificates are rejected.\n\n2. **Security Vulnerability Assessment**: The change enforces stricter security by default, preventing unauthorized access via LDAP. This directly impacts system security by mitigating unauthorized connections, which could lead to data breaches or unauthorized access.\n\n3. **Non-Security Classification**: Not applicable, as the change addresses a security issue.\n\n4. **Confidence Scoring**: High confidence due to clear intent and impact on security.\n\n**Final Classification: Security Vulnerability Fix**\n\n**Confidence Score: 0.95**"
}