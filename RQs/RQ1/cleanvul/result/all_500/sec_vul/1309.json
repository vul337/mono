{
  "id": 1309,
  "language": "Java",
  "commit_url": "https://github.com/omnirom/android_frameworks_base/commit/5f00e89989392c9ae00b360e1388d0179dfb36d7",
  "commit_sha": "5f00e89989392c9ae00b360e1388d0179dfb36d7",
  "commit_msg": "[RESTRICT AUTOMERGE] Fix bypass BG-FGS and BAL via package manager APIs\n\nOpt-in for BAL of PendingIntent for following APIs:\n\n* PackageInstaller.uninstall()\n* PackageInstaller.installExistingPackage()\n* PackageInstaller.uninstallExistingPackage()\n* PackageInstaller.Session.commit()\n* PackageInstaller.Session.commitTransferred()\n* PackageManager.freeStorage()\n\nBug: 230492955\nBug: 243377226\nTest: atest android.security.cts.PackageInstallerTest\nTest: atest CtsStagedInstallHostTestCases\nChange-Id: I9b6f801d69ea6d2244a38dbe689e81afa4e798bf",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "services/core/java/com/android/server/pm/PackageManagerService.java",
  "func_name": "freeStorage",
  "func_before": "@Override\n    public void freeStorage(final String volumeUuid, final long freeStorageSize,\n            final int storageFlags, final IntentSender pi) {\n        mContext.enforceCallingOrSelfPermission(\n                android.Manifest.permission.CLEAR_APP_CACHE, TAG);\n        mHandler.post(() -> {\n            boolean success = false;\n            try {\n                freeStorage(volumeUuid, freeStorageSize, storageFlags);\n                success = true;\n            } catch (IOException e) {\n                Slog.w(TAG, e);\n            }\n            if (pi != null) {\n                try {\n                    pi.sendIntent(null, success ? 1 : 0, null, null, null);\n                } catch (SendIntentException e) {\n                    Slog.w(TAG, e);\n                }\n            }\n        });\n    }",
  "func_after": "@Override\n    public void freeStorage(final String volumeUuid, final long freeStorageSize,\n            final int storageFlags, final IntentSender pi) {\n        mContext.enforceCallingOrSelfPermission(\n                android.Manifest.permission.CLEAR_APP_CACHE, TAG);\n        mHandler.post(() -> {\n            boolean success = false;\n            try {\n                freeStorage(volumeUuid, freeStorageSize, storageFlags);\n                success = true;\n            } catch (IOException e) {\n                Slog.w(TAG, e);\n            }\n            if (pi != null) {\n                try {\n                    final BroadcastOptions options = BroadcastOptions.makeBasic();\n                    options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n                    pi.sendIntent(null, success ? 1 : 0, null /* intent */, null /* onFinished*/,\n                            null /* handler */, null /* requiredPermission */, options.toBundle());\n                } catch (SendIntentException e) {\n                    Slog.w(TAG, e);\n                }\n            }\n        });\n    }",
  "diff_func": "--- func_before\n+++ func_after\n @Override\n     public void freeStorage(final String volumeUuid, final long freeStorageSize,\n             final int storageFlags, final IntentSender pi) {\n         mContext.enforceCallingOrSelfPermission(\n                 android.Manifest.permission.CLEAR_APP_CACHE, TAG);\n         mHandler.post(() -> {\n             boolean success = false;\n             try {\n                 freeStorage(volumeUuid, freeStorageSize, storageFlags);\n                 success = true;\n             } catch (IOException e) {\n                 Slog.w(TAG, e);\n             }\n             if (pi != null) {\n                 try {\n+                    final BroadcastOptions options = BroadcastOptions.makeBasic();\n+                    options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n-                    pi.sendIntent(null, success ? 1 : 0, null, null, null);\n+                    pi.sendIntent(null, success ? 1 : 0, null /* intent */, null /* onFinished*/,\n+                            null /* handler */, null /* requiredPermission */, options.toBundle());\n                 } catch (SendIntentException e) {\n                     Slog.w(TAG, e);\n                 }\n             }\n         });\n     }",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix  \nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\nThe patch addresses a security issue by enforcing restrictions on PendingIntent usage, preventing unauthorized background activity launches.\n\n**Final Output:**\n\nAnalysis: The patch modifies the freeStorage function to add BroadcastOptions that restrict background activity launches, fixing a bypass of security restrictions. This prevents potential unauthorized actions, indicating a security fix.\n\nFinal Classification: Security Vulnerability Fix  \nConfidence Score: 0.95"
}