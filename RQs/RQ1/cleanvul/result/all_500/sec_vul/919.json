{
  "id": 919,
  "language": "Java",
  "commit_url": "https://github.com/nguyenq/tess4j/commit/9cfb5a04f92a391b126368c27a1e55d2ea280b41",
  "commit_sha": "9cfb5a04f92a391b126368c27a1e55d2ea280b41",
  "commit_msg": "Remove ghost4j dependency due to log4j vulnerabilities",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "src/main/java/net/sourceforge/tess4j/util/PdfUtilities.java",
  "func_name": "IOException",
  "func_before": "public static File[] convertPdf2Png(File inputPdfFile) throws IOException {\n        if (PDFBOX.equals(System.getProperty(PDF_LIBRARY))) {\n            return PdfBoxUtilities.convertPdf2Png(inputPdfFile);\n        } else {\n            try {\n                return PdfGsUtilities.convertPdf2Png(inputPdfFile);\n            } catch (Exception e) {\n                System.setProperty(PDF_LIBRARY, PDFBOX);\n                return convertPdf2Png(inputPdfFile);\n            }\n        }\n    }",
  "func_after": "public static File[] convertPdf2Png(File inputPdfFile) throws IOException {\n        return PdfBoxUtilities.convertPdf2Png(inputPdfFile);\n    }",
  "diff_func": "--- func_before\n+++ func_after\n public static File[] convertPdf2Png(File inputPdfFile) throws IOException {\n-        if (PDFBOX.equals(System.getProperty(PDF_LIBRARY))) {\n-            return PdfBoxUtilities.convertPdf2Png(inputPdfFile);\n+        return PdfBoxUtilities.convertPdf2Png(inputPdfFile);\n-        } else {\n-            try {\n-                return PdfGsUtilities.convertPdf2Png(inputPdfFile);\n-            } catch (Exception e) {\n-                System.setProperty(PDF_LIBRARY, PDFBOX);\n-                return convertPdf2Png(inputPdfFile);\n-            }\n-        }\n     }",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\nAnalysis: The patch removes a dependency on ghost4j due to log4j vulnerabilities. The code diff simplifies the function to use PDFBOX exclusively, eliminating the use of another library that may have been causing security issues. This addresses a security concern by removing a vulnerable dependency, thereby mitigating potential security risks.\nFinal Classification: Security Vulnerability Fix\nConfidence Score: 0.95"
}