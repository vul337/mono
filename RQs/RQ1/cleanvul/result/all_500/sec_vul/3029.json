{
  "id": 3029,
  "language": "Java",
  "commit_url": "https://github.com/elastic/elasticsearch/commit/54a78c3777de16a9b2cae94f5561ea7f994f1fed",
  "commit_sha": "54a78c3777de16a9b2cae94f5561ea7f994f1fed",
  "commit_msg": "Fix Security's expression resolver to not remove unavailable but authorized names (#92625)\n\nFor non-wildcard resource names in expressions from requests with the\r\n`ignoreUnavailable` request option set to `true`, the Security filter\r\nremoves names for \"unavailable\" resources. This behavior is\r\ntheoretically correct, but in practice the cluster state might not be\r\nrecovered at the point in time when the Security filter does the\r\nrewrite (this causes problems, see #90215); In any case, the logic\r\nto remove \"unavailable\" names is unnecessarily duplicated from\r\nCore's expression resolver.\r\n\r\nThis PR makes the expression resolver in the Security filter to NOT:\r\n * remove missing but authorized names (indices, aliases, datastreams)\r\n * remove authorized datastreams if context disallows datastreams\r\n * remove backing indices of authorized datastreams if context disallows datastreams\r\n\r\nIt will only remove names of unauthorized resources, and let the\r\nunavailable names go through to be handled (to be ignored or\r\nthrow \"not found\" exception) by the expression resolver in Core.\r\n\r\nFixes: #90215",
  "pr_url": "https://github.com/elastic/elasticsearch/pull/92625",
  "pr_info": "For explicit (non-wildcard) names in expressions from requests with the `ignoreUnavailable` request option set to `true`, the Security filter removes names for \"unavailable\" resources. This behavior is theoretically correct, but in practice the cluster state might not be recovered at the point in time when the Security filter does the rewrite (this causes problems, see #90215); In any case, the logic to remove \"unavailable\" names is unnecessarily duplicated from Core's expression resolver.\r\n\r\nThis PR makes the expression resolver in the Security filter to NOT:\r\n\r\n1) remove missing but authorized names (indices, aliases, datastreams)\r\n2) remove authorized datastreams if context disallows datastreams\r\n3) remove backing indices of authorized datastreams if context disallows datastreams\r\n\r\nIt will only remove names of unauthorized resources, and let the unavailable names go through to be handled (to be ignored or throw \"not found\" exception) by the expression resolver in Core.\r\n\r\nFixes: https://github.com/elastic/elasticsearch/issues/90215",
  "file_name": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/IndicesPermission.java",
  "func_name": "allowedIndicesMatcher",
  "func_before": "public Predicate<IndexAbstraction> allowedIndicesMatcher(String action) {\n        return allowedIndicesMatchersForAction.computeIfAbsent(action, this::buildIndexMatcherPredicateForAction);\n    }",
  "func_after": "public IsResourceAuthorizedPredicate allowedIndicesMatcher(String action) {\n        return allowedIndicesMatchersForAction.computeIfAbsent(action, this::buildIndexMatcherPredicateForAction);\n    }",
  "diff_func": "--- func_before\n+++ func_after\n@@ -127 +128 @@\n-    public Predicate<IndexAbstraction> allowedIndicesMatcher(String action) {\n+    public IsResourceAuthorizedPredicate allowedIndicesMatcher(String action) {\n return allowedIndicesMatchersForAction.computeIfAbsent(action, this::buildIndexMatcherPredicateForAction);\n }",
  "diff_source": "api",
  "Bug Filter": "** The patch addresses a security issue, preventing potential unauthorized access.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence Score:** 0.9",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\n**Analysis:**\n\n1. **Patch Analysis:** The commit message and code diff indicate modifications to the Security filter's expression resolver. The change stops removing unavailable but authorized names, addressing a bug where the resolver incorrectly removed such resources.\n\n2. **Security Vulnerability Assessment:** The issue could lead to unauthorized access or data exposure by removing valid resources. The fix ensures authorized resources are not incorrectly removed, thus mitigating a security risk.\n\n3. **Classification:** The patch addresses a security issue, preventing potential unauthorized access.\n\n**Final Classification:** Security Vulnerability Fix  \n**Confidence Score:** 0.9"
}