{
  "id": 678,
  "language": "Java",
  "commit_url": "https://github.com/PixelExperience/frameworks_base/commit/b0b1ddb4b4ba5db27f5616b02ae2cdca8b63496f",
  "commit_sha": "b0b1ddb4b4ba5db27f5616b02ae2cdca8b63496f",
  "commit_msg": "[RESTRICT AUTOMERGE] Fix bypass BG-FGS and BAL via package manager APIs\n\nOpt-in for BAL of PendingIntent for following APIs:\n\n* PackageInstaller.uninstall()\n* PackageInstaller.installExistingPackage()\n* PackageInstaller.uninstallExistingPackage()\n* PackageInstaller.Session.commit()\n* PackageInstaller.Session.commitTransferred()\n* PackageManager.freeStorage()\n\nBug: 230492955\nBug: 243377226\nTest: atest android.security.cts.PackageInstallerTest\nTest: atest CtsStagedInstallHostTestCases\nChange-Id: I9b6f801d69ea6d2244a38dbe689e81afa4e798bf",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "services/core/java/com/android/server/pm/PackageInstallerSession.java",
  "func_name": "statusUpdate",
  "func_before": "public void statusUpdate(Intent intent) {\n            mHandler.post(() -> {\n                if (mChildSessionsRemaining.size() == 0) {\n                    // no children to deal with, ignore.\n                    return;\n                }\n                final boolean destroyed;\n                synchronized (mLock) {\n                    destroyed = mDestroyed;\n                }\n                if (destroyed) {\n                    // the parent has already been terminated, ignore.\n                    return;\n                }\n                final int sessionId = intent.getIntExtra(\n                        PackageInstaller.EXTRA_SESSION_ID, 0);\n                final int status = intent.getIntExtra(PackageInstaller.EXTRA_STATUS,\n                        PackageInstaller.STATUS_FAILURE);\n                final int sessionIndex = mChildSessionsRemaining.indexOfKey(sessionId);\n                if (PackageInstaller.STATUS_SUCCESS == status) {\n                    mChildSessionsRemaining.removeAt(sessionIndex);\n                    if (mChildSessionsRemaining.size() == 0) {\n                        try {\n                            intent.putExtra(PackageInstaller.EXTRA_SESSION_ID,\n                                    PackageInstallerSession.this.sessionId);\n                            mStatusReceiver.sendIntent(mContext, 0, intent, null, null);\n                        } catch (IntentSender.SendIntentException ignore) {\n                        }\n                    }\n                } else if (PackageInstaller.STATUS_PENDING_USER_ACTION == status) {\n                    try {\n                        mStatusReceiver.sendIntent(mContext, 0, intent, null, null);\n                    } catch (IntentSender.SendIntentException ignore) {\n                    }\n                } else { // failure, let's forward and clean up this session.\n                    intent.putExtra(PackageInstaller.EXTRA_SESSION_ID,\n                            PackageInstallerSession.this.sessionId);\n                    mChildSessionsRemaining.clear(); // we're done. Don't send any more.\n                    try {\n                        mStatusReceiver.sendIntent(mContext, 0, intent, null, null);\n                    } catch (IntentSender.SendIntentException ignore) {\n                    }\n                }\n            });\n        }",
  "func_after": "public void statusUpdate(Intent intent) {\n            mHandler.post(() -> {\n                if (mChildSessionsRemaining.size() == 0) {\n                    // no children to deal with, ignore.\n                    return;\n                }\n                final boolean destroyed;\n                synchronized (mLock) {\n                    destroyed = mDestroyed;\n                }\n                if (destroyed) {\n                    // the parent has already been terminated, ignore.\n                    return;\n                }\n                final int sessionId = intent.getIntExtra(\n                        PackageInstaller.EXTRA_SESSION_ID, 0);\n                final int status = intent.getIntExtra(PackageInstaller.EXTRA_STATUS,\n                        PackageInstaller.STATUS_FAILURE);\n                final int sessionIndex = mChildSessionsRemaining.indexOfKey(sessionId);\n                if (PackageInstaller.STATUS_SUCCESS == status) {\n                    mChildSessionsRemaining.removeAt(sessionIndex);\n                    if (mChildSessionsRemaining.size() == 0) {\n                        try {\n                            intent.putExtra(PackageInstaller.EXTRA_SESSION_ID,\n                                    PackageInstallerSession.this.sessionId);\n                            final BroadcastOptions options = BroadcastOptions.makeBasic();\n                            options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n                            mStatusReceiver.sendIntent(mContext, 0, intent,\n                                    null /* onFinished*/, null /* handler */,\n                                    null /* requiredPermission */, options.toBundle());\n                        } catch (IntentSender.SendIntentException ignore) {\n                        }\n                    }\n                } else if (PackageInstaller.STATUS_PENDING_USER_ACTION == status) {\n                    try {\n                        final BroadcastOptions options = BroadcastOptions.makeBasic();\n                        options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n                        mStatusReceiver.sendIntent(mContext, 0, intent,\n                                null /* onFinished*/, null /* handler */,\n                                null /* requiredPermission */, options.toBundle());\n                    } catch (IntentSender.SendIntentException ignore) {\n                    }\n                } else { // failure, let's forward and clean up this session.\n                    intent.putExtra(PackageInstaller.EXTRA_SESSION_ID,\n                            PackageInstallerSession.this.sessionId);\n                    mChildSessionsRemaining.clear(); // we're done. Don't send any more.\n                    try {\n                        final BroadcastOptions options = BroadcastOptions.makeBasic();\n                        options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n                        mStatusReceiver.sendIntent(mContext, 0, intent,\n                                null /* onFinished*/, null /* handler */,\n                                null /* requiredPermission */, options.toBundle());\n                    } catch (IntentSender.SendIntentException ignore) {\n                    }\n                }\n            });\n        }",
  "diff_func": "--- func_before\n+++ func_after\n public void statusUpdate(Intent intent) {\n             mHandler.post(() -> {\n                 if (mChildSessionsRemaining.size() == 0) {\n                     // no children to deal with, ignore.\n                     return;\n                 }\n                 final boolean destroyed;\n                 synchronized (mLock) {\n                     destroyed = mDestroyed;\n                 }\n                 if (destroyed) {\n                     // the parent has already been terminated, ignore.\n                     return;\n                 }\n                 final int sessionId = intent.getIntExtra(\n                         PackageInstaller.EXTRA_SESSION_ID, 0);\n                 final int status = intent.getIntExtra(PackageInstaller.EXTRA_STATUS,\n                         PackageInstaller.STATUS_FAILURE);\n                 final int sessionIndex = mChildSessionsRemaining.indexOfKey(sessionId);\n                 if (PackageInstaller.STATUS_SUCCESS == status) {\n                     mChildSessionsRemaining.removeAt(sessionIndex);\n                     if (mChildSessionsRemaining.size() == 0) {\n                         try {\n                             intent.putExtra(PackageInstaller.EXTRA_SESSION_ID,\n                                     PackageInstallerSession.this.sessionId);\n+                            final BroadcastOptions options = BroadcastOptions.makeBasic();\n+                            options.setPendingIntentBackgroundActivityLaunchAllowed(false);\n-                            mStatusReceiver.sendIntent(mContext, 0, intent, null, null);\n+                            mStatusReceiver.sendIntent(mContext, 0, intent,\n+                                    null /* onFinished*/, null /* handler */,\n+                                    null /* requiredPermission */, options.toBundle());\n                         } catch (IntentSender.SendIntentException ignore) {\n                         }\n                     }\n                 } else if (Packa",
  "diff_source": "custom",
  "Bug Filter": "Security Vulnerability Fix  \nConfidence Score: 0.9",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\n**Final Output:**\nAnalysis: The patch modifies how package manager APIs handle PendingIntents to prevent background activity launches, addressing a security bypass. Changes include adding BroadcastOptions to restrict launches, indicating a security fix.\n\nFinal Classification: Security Vulnerability Fix  \nConfidence Score: 0.9"
}