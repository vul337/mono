{
  "id": 1636,
  "language": "Java",
  "commit_url": "https://github.com/apache/zookeeper/commit/d9c1338df1196ae515a692f895bae85dacdb3ac5",
  "commit_sha": "d9c1338df1196ae515a692f895bae85dacdb3ac5",
  "commit_msg": "ZOOKEEPER-4477: Single Kerberos ticket renewal failure can prevent all future renewals since Java 9\n\nThis bug is similar to the one fixed in https://issues.apache.org/jira/browse/KAFKA-12730.\n\nOur Kerberos ticket refresh thread performs re-login by logging out and then logging in again. If\nlogin fails, we retry after some sleep. Every reLogin() operation performs loginContext.logout()\nand loginContext.login(). If login fails, we end up with two consecutive logouts. This used to\nwork in older Java versions, but from Java 9 onwards, this results in a NullPointerException due\nto https://bugs.openjdk.java.net/browse/JDK-8173069. We should check if logout is required before\nattempting logout.\n\nI fixed the issue and added a new unit test to test some ticket renewal scenarios. I managed to\nreproduce the problem in KerberosTicketRenewalTest.shouldRecoverIfKerberosNotAvailableForSomeTime()\nwhich (before the fix) failed with Java13 but succeeded with Java8.\n\nAuthor: Mate Szalay-Beko <symat@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>\n\nCloses #1828 from symat/ZOOKEEPER-4477-master\n\n(cherry picked from commit a5b6c38edd74b263638817f7b65d057c91d5a888)\nSigned-off-by: Enrico Olivelli <eolivelli@apache.org>",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "zookeeper-server/src/main/java/org/apache/zookeeper/Login.java",
  "func_name": "LoginException",
  "func_before": "private synchronized void reLogin() throws LoginException {\n        if (!isKrbTicket) {\n            return;\n        }\n        LoginContext login = getLogin();\n        if (login == null) {\n            throw new LoginException(\"login must be done first\");\n        }\n        if (!hasSufficientTimeElapsed()) {\n            return;\n        }\n        LOG.info(\"Initiating logout for {}\", principal);\n        synchronized (Login.class) {\n            //clear up the kerberos state. But the tokens are not cleared! As per\n            //the Java kerberos login module code, only the kerberos credentials\n            //are cleared\n            login.logout();\n            //login and also update the subject field of this instance to\n            //have the new credentials (pass it to the LoginContext constructor)\n            login = new LoginContext(loginContextName, getSubject());\n            LOG.info(\"Initiating re-login for {}\", principal);\n            login.login();\n            setLogin(login);\n        }\n    }",
  "func_after": "private synchronized void reLogin() throws LoginException {\n        if (!isKrbTicket) {\n            return;\n        }\n        LoginContext login = getLogin();\n        if (login == null) {\n            throw new LoginException(\"login must be done first\");\n        }\n        if (!hasSufficientTimeElapsed()) {\n            return;\n        }\n        LOG.info(\"Initiating logout for {}\", principal);\n        synchronized (Login.class) {\n            //clear up the kerberos state. But the tokens are not cleared! As per\n            //the Java kerberos login module code, only the kerberos credentials\n            //are cleared\n            logout();\n            //login and also update the subject field of this instance to\n            //have the new credentials (pass it to the LoginContext constructor)\n            login = new LoginContext(loginContextName, getSubject());\n            LOG.info(\"Initiating re-login for {}\", principal);\n            login.login();\n            setLogin(login);\n        }\n    }",
  "diff_func": "--- func_before\n+++ func_after\n private synchronized void reLogin() throws LoginException {\n         if (!isKrbTicket) {\n             return;\n         }\n         LoginContext login = getLogin();\n         if (login == null) {\n             throw new LoginException(\"login must be done first\");\n         }\n         if (!hasSufficientTimeElapsed()) {\n             return;\n         }\n         LOG.info(\"Initiating logout for {}\", principal);\n         synchronized (Login.class) {\n             //clear up the kerberos state. But the tokens are not cleared! As per\n             //the Java kerberos login module code, only the kerberos credentials\n             //are cleared\n-            login.logout();\n+            logout();\n             //login and also update the subject field of this instance to\n             //have the new credentials (pass it to the LoginContext constructor)\n             login = new LoginContext(loginContextName, getSubject());\n             LOG.info(\"Initiating re-login for {}\", principal);\n             login.login();\n             setLogin(login);\n         }\n     }",
  "diff_source": "custom",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis:\n- The commit addresses a bug in Kerberos ticket renewal causing NullPointerExceptions in Java 9+.\n- The code change modifies the logout process to prevent the exception.\n- The fix ensures proper ticket renewal, enhancing system availability.\n- No evidence of security impact on confidentiality or integrity.\n\nFinal Classification: Defect Remediation & Feature Upgrades\n\nConfidence Score: 0.95"
}