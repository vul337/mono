{
  "id": 168,
  "language": "Java",
  "commit_url": "https://github.com/LineageOS/android_frameworks_base/commit/9546f607f68814f5269374b5c5e714c9d8d8b0b8",
  "commit_sha": "9546f607f68814f5269374b5c5e714c9d8d8b0b8",
  "commit_msg": "Add ActivityOption to remove insecure keyguard when activity is launched.\n\nAdd a new ActivityOption#setDismissKeyguardIfInsecure remove keyguard\nwhen an activity is launched while an insecure keyguard is shown. If\nthis option is set, WMS waits until the launched activity finishes\ndrawing its surface, then starts KEYGUARD_GOING_AWAY app transition.\n\nBug: 203044476\nTest: atest KeyguardLockedTests KeyguardTransitionTests\nChange-Id: I0f6a501baa2a60ae044bf1ef888e5e6f57a5f13e",
  "pr_url": null,
  "pr_info": "no more info",
  "file_name": "services/core/java/com/android/server/am/ActivityManagerShellCommand.java",
  "func_name": "handleOption",
  "func_before": "@Override\n            public boolean handleOption(String opt, ShellCommand cmd) {\n                if (opt.equals(\"-D\")) {\n                    mStartFlags |= ActivityManager.START_FLAG_DEBUG;\n                } else if (opt.equals(\"-N\")) {\n                    mStartFlags |= ActivityManager.START_FLAG_NATIVE_DEBUGGING;\n                } else if (opt.equals(\"-W\")) {\n                    mWaitOption = true;\n                } else if (opt.equals(\"-P\")) {\n                    mProfileFile = getNextArgRequired();\n                    mAutoStop = true;\n                } else if (opt.equals(\"--start-profiler\")) {\n                    mProfileFile = getNextArgRequired();\n                    mAutoStop = false;\n                } else if (opt.equals(\"--sampling\")) {\n                    mSamplingInterval = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"--streaming\")) {\n                    mStreaming = true;\n                } else if (opt.equals(\"--attach-agent\")) {\n                    if (mAgent != null) {\n                        cmd.getErrPrintWriter().println(\n                                \"Multiple --attach-agent(-bind) not supported\");\n                        return false;\n                    }\n                    mAgent = getNextArgRequired();\n                    mAttachAgentDuringBind = false;\n                } else if (opt.equals(\"--attach-agent-bind\")) {\n                    if (mAgent != null) {\n                        cmd.getErrPrintWriter().println(\n                                \"Multiple --attach-agent(-bind) not supported\");\n                        return false;\n                    }\n                    mAgent = getNextArgRequired();\n                    mAttachAgentDuringBind = true;\n                } else if (opt.equals(\"-R\")) {\n                    mRepeat = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"-S\")) {\n                    mStopOption = true;\n                } else if (opt.equals(\"--track-allocation\")) {\n                    mStartFlags |= ActivityManager.START_FLAG_TRACK_ALLOCATION;\n                } else if (opt.equals(\"--user\")) {\n                    mUserId = UserHandle.parseUserArg(getNextArgRequired());\n                } else if (opt.equals(\"--receiver-permission\")) {\n                    mReceiverPermission = getNextArgRequired();\n                } else if (opt.equals(\"--display\")) {\n                    mDisplayId = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"--windowingMode\")) {\n                    mWindowingMode = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"--activityType\")) {\n                    mActivityType = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"--task\")) {\n                    mTaskId = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"--task-overlay\")) {\n                    mIsTaskOverlay = true;\n                } else if (opt.equals(\"--lock-task\")) {\n                    mIsLockTask = true;\n                } else if (opt.equals(\"--allow-background-activity-starts\")) {\n                    if (mBroadcastOptions == null) {\n                        mBroadcastOptions = BroadcastOptions.makeBasic();\n                    }\n                    mBroadcastOptions.setBackgroundActivityStartsAllowed(true);\n                } else if (opt.equals(\"--async\")) {\n                    mAsync = true;\n                } else if (opt.equals(\"--splashscreen-show-icon\")) {\n                    mShowSplashScreen = true;\n                } else {\n                    return false;\n                }\n                return true;\n            }",
  "func_after": "@Override\n            public boolean handleOption(String opt, ShellCommand cmd) {\n                if (opt.equals(\"-D\")) {\n                    mStartFlags |= ActivityManager.START_FLAG_DEBUG;\n                } else if (opt.equals(\"-N\")) {\n                    mStartFlags |= ActivityManager.START_FLAG_NATIVE_DEBUGGING;\n                } else if (opt.equals(\"-W\")) {\n                    mWaitOption = true;\n                } else if (opt.equals(\"-P\")) {\n                    mProfileFile = getNextArgRequired();\n                    mAutoStop = true;\n                } else if (opt.equals(\"--start-profiler\")) {\n                    mProfileFile = getNextArgRequired();\n                    mAutoStop = false;\n                } else if (opt.equals(\"--sampling\")) {\n                    mSamplingInterval = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"--streaming\")) {\n                    mStreaming = true;\n                } else if (opt.equals(\"--attach-agent\")) {\n                    if (mAgent != null) {\n                        cmd.getErrPrintWriter().println(\n                                \"Multiple --attach-agent(-bind) not supported\");\n                        return false;\n                    }\n                    mAgent = getNextArgRequired();\n                    mAttachAgentDuringBind = false;\n                } else if (opt.equals(\"--attach-agent-bind\")) {\n                    if (mAgent != null) {\n                        cmd.getErrPrintWriter().println(\n                                \"Multiple --attach-agent(-bind) not supported\");\n                        return false;\n                    }\n                    mAgent = getNextArgRequired();\n                    mAttachAgentDuringBind = true;\n                } else if (opt.equals(\"-R\")) {\n                    mRepeat = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"-S\")) {\n                    mStopOption = true;\n                } else if (opt.equals(\"--track-allocation\")) {\n                    mStartFlags |= ActivityManager.START_FLAG_TRACK_ALLOCATION;\n                } else if (opt.equals(\"--user\")) {\n                    mUserId = UserHandle.parseUserArg(getNextArgRequired());\n                } else if (opt.equals(\"--receiver-permission\")) {\n                    mReceiverPermission = getNextArgRequired();\n                } else if (opt.equals(\"--display\")) {\n                    mDisplayId = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"--windowingMode\")) {\n                    mWindowingMode = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"--activityType\")) {\n                    mActivityType = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"--task\")) {\n                    mTaskId = Integer.parseInt(getNextArgRequired());\n                } else if (opt.equals(\"--task-overlay\")) {\n                    mIsTaskOverlay = true;\n                } else if (opt.equals(\"--lock-task\")) {\n                    mIsLockTask = true;\n                } else if (opt.equals(\"--allow-background-activity-starts\")) {\n                    if (mBroadcastOptions == null) {\n                        mBroadcastOptions = BroadcastOptions.makeBasic();\n                    }\n                    mBroadcastOptions.setBackgroundActivityStartsAllowed(true);\n                } else if (opt.equals(\"--async\")) {\n                    mAsync = true;\n                } else if (opt.equals(\"--splashscreen-show-icon\")) {\n                    mShowSplashScreen = true;\n                } else if (opt.equals(\"--dismiss-keyguard-if-insecure\")) {\n                    mDismissKeyguardIfInsecure = true;\n                } else {\n                    return false;\n                }\n                return true;\n            }",
  "diff_func": "--- func_before\n+++ func_after\n @Override\n             public boolean handleOption(String opt, ShellCommand cmd) {\n                 if (opt.equals(\"-D\")) {\n                     mStartFlags |= ActivityManager.START_FLAG_DEBUG;\n                 } else if (opt.equals(\"-N\")) {\n                     mStartFlags |= ActivityManager.START_FLAG_NATIVE_DEBUGGING;\n                 } else if (opt.equals(\"-W\")) {\n                     mWaitOption = true;\n                 } else if (opt.equals(\"-P\")) {\n                     mProfileFile = getNextArgRequired();\n                     mAutoStop = true;\n                 } else if (opt.equals(\"--start-profiler\")) {\n                     mProfileFile = getNextArgRequired();\n                     mAutoStop = false;\n                 } else if (opt.equals(\"--sampling\")) {\n                     mSamplingInterval = Integer.parseInt(getNextArgRequired());\n                 } else if (opt.equals(\"--streaming\")) {\n                     mStreaming = true;\n                 } else if (opt.equals(\"--attach-agent\")) {\n                     if (mAgent != null) {\n                         cmd.getErrPrintWriter().println(\n                                 \"Multiple --attach-agent(-bind) not supported\");\n                         return false;\n                     }\n                     mAgent = getNextArgRequired();\n                     mAttachAgentDuringBind = false;\n                 } else if (opt.equals(\"--attach-agent-bind\")) {\n                     if (mAgent != null) {\n                         cmd.getErrPrintWriter().println(\n                                 \"Multiple --attach-agent(-bind) not supported\");\n                         return false;\n                     }\n                     mAgent = getNextArgRequired();\n                     mAttachAgentDuringBind = true;\n                 } else if (opt.equals(\"-R\")) {\n                     mRepeat = Integer.parseInt(getNextArgRequired());\n                 } else if (opt.equals(\"-S\")) {\n                     mStop",
  "diff_source": "custom",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.8,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The code changes introduce new command-line options for attaching agents, which is a feature enhancement. The commit message suggests a security fix, but the code does not address a security issue.\n\nFinal Classification: Defect Remediation & Feature Upgrades\n\nConfidence Score: 0.8"
}