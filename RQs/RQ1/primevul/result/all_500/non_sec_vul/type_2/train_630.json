{
  "id": 630,
  "language": "c",
  "cwe": "CWE-119",
  "commit_url": "https://github.com/vkrasnov/multiprime/commit/470990fee0182566d439ef7e82d1abf18b7085d7",
  "commit_sha": "470990fee0182566d439ef7e82d1abf18b7085d7",
  "commit_msg": "Free up s->d1->buffered_app_data.q properly.\n\nPR#3286",
  "pr_url": null,
  "pr_info": null,
  "file_name": "ssl/d1_lib.c",
  "func_name": "",
  "raw_func_from_json": "static void dtls1_clear_queues(SSL *s)\n\t{\n    pitem *item = NULL;\n    hm_fragment *frag = NULL;\n\tDTLS1_RECORD_DATA *rdata;\n\n    while( (item = pqueue_pop(s->d1->unprocessed_rcds.q)) != NULL)\n        {\n\t\trdata = (DTLS1_RECORD_DATA *) item->data;\n\t\tif (rdata->rbuf.buf)\n\t\t\t{\n\t\t\tOPENSSL_free(rdata->rbuf.buf);\n\t\t\t}\n        OPENSSL_free(item->data);\n        pitem_free(item);\n        }\n\n    while( (item = pqueue_pop(s->d1->processed_rcds.q)) != NULL)\n        {\n\t\trdata = (DTLS1_RECORD_DATA *) item->data;\n\t\tif (rdata->rbuf.buf)\n\t\t\t{\n\t\t\tOPENSSL_free(rdata->rbuf.buf);\n\t\t\t}\n        OPENSSL_free(item->data);\n        pitem_free(item);\n        }\n\n    while( (item = pqueue_pop(s->d1->buffered_messages)) != NULL)\n        {\n        frag = (hm_fragment *)item->data;\n        OPENSSL_free(frag->fragment);\n        OPENSSL_free(frag);\n        pitem_free(item);\n        }\n\n    while ( (item = pqueue_pop(s->d1->sent_messages)) != NULL)\n        {\n        frag = (hm_fragment *)item->data;\n        OPENSSL_free(frag->fragment);\n        OPENSSL_free(frag);\n        pitem_free(item);\n        }\n \n \twhile ( (item = pqueue_pop(s->d1->buffered_app_data.q)) != NULL)\n \t\t{\n\t\tfrag = (hm_fragment *)item->data;\n\t\tOPENSSL_free(frag->fragment);\n\t\tOPENSSL_free(frag);\n \t\tpitem_free(item);\n \t\t}\n \t}\n",
  "diff_func": "@@ -202,9 +202,12 @@ static void dtls1_clear_queues(SSL *s)\n \n \twhile ( (item = pqueue_pop(s->d1->buffered_app_data.q)) != NULL)\n \t\t{\n-\t\tfrag = (hm_fragment *)item->data;\n-\t\tOPENSSL_free(frag->fragment);\n-\t\tOPENSSL_free(frag);\n+\t\trdata = (DTLS1_RECORD_DATA *) item->data;\n+\t\tif (rdata->rbuf.buf)\n+\t\t\t{\n+\t\t\tOPENSSL_free(rdata->rbuf.buf);\n+\t\t\t}\n+\t\tOPENSSL_free(item->data);\n \t\tpitem_free(item);\n \t\t}\n \t}",
  "project": "openssl",
  "commit_id": "470990fee0182566d439ef7e82d1abf18b7085d7",
  "target": 1,
  "func": "static void dtls1_clear_queues(SSL *s)\n\t{\n    pitem *item = NULL;\n    hm_fragment *frag = NULL;\n\tDTLS1_RECORD_DATA *rdata;\n\n    while( (item = pqueue_pop(s->d1->unprocessed_rcds.q)) != NULL)\n        {\n\t\trdata = (DTLS1_RECORD_DATA *) item->data;\n\t\tif (rdata->rbuf.buf)\n\t\t\t{\n\t\t\tOPENSSL_free(rdata->rbuf.buf);\n\t\t\t}\n        OPENSSL_free(item->data);\n        pitem_free(item);\n        }\n\n    while( (item = pqueue_pop(s->d1->processed_rcds.q)) != NULL)\n        {\n\t\trdata = (DTLS1_RECORD_DATA *) item->data;\n\t\tif (rdata->rbuf.buf)\n\t\t\t{\n\t\t\tOPENSSL_free(rdata->rbuf.buf);\n\t\t\t}\n        OPENSSL_free(item->data);\n        pitem_free(item);\n        }\n\n    while( (item = pqueue_pop(s->d1->buffered_messages)) != NULL)\n        {\n        frag = (hm_fragment *)item->data;\n        OPENSSL_free(frag->fragment);\n        OPENSSL_free(frag);\n        pitem_free(item);\n        }\n\n    while ( (item = pqueue_pop(s->d1->sent_messages)) != NULL)\n        {\n        frag = (hm_fragment *)item->data;\n        OPENSSL_free(frag->fragment);\n        OPENSSL_free(frag);\n        pitem_free(item);\n        }\n \n \twhile ( (item = pqueue_pop(s->d1->buffered_app_data.q)) != NULL)\n \t\t{\n\t\tfrag = (hm_fragment *)item->data;\n\t\tOPENSSL_free(frag->fragment);\n\t\tOPENSSL_free(frag);\n \t\tpitem_free(item);\n \t\t}\n \t}\n",
  "big_vul_idx": 179966,
  "idx": 1619,
  "hash": 120961465274779575479669372605643166043,
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.9,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis:\nThe patch addresses a memory management issue by properly freeing resources in the DTLS queue handling. The commit message and code changes focus on preventing memory leaks, which is a functional bug fix without explicit security implications.\n\nFinal Classification: Defect Remediation & Feature Upgrades\n\nConfidence Score: 0.9"
}