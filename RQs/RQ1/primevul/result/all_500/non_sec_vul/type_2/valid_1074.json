{
  "id": 1074,
  "language": "cc",
  "cwe": "CWE-416",
  "commit_url": "https://github.com/agm265/ardour/commit/96daa4036a425ff3f23a7dfcba57bfb0f942bec6",
  "commit_sha": "96daa4036a425ff3f23a7dfcba57bfb0f942bec6",
  "commit_msg": "fix apparent free-ordering issue reported in #7926",
  "pr_url": null,
  "pr_info": null,
  "file_name": "libs/pbd/xml++.cc",
  "func_name": "",
  "raw_func_from_json": "static XMLSharedNodeList* find_impl(xmlXPathContext* ctxt, const string& xpath)\n{\n\txmlXPathObject* result = xmlXPathEval((const xmlChar*)xpath.c_str(), ctxt);\n\n\tif (!result) {\n\t\txmlXPathFreeContext(ctxt);\n\t\txmlFreeDoc(ctxt->doc);\n\n\t\tthrow XMLException(\"Invalid XPath: \" + xpath);\n\t}\n\n\tif (result->type != XPATH_NODESET) {\n\t\txmlXPathFreeObject(result);\n\t\txmlXPathFreeContext(ctxt);\n\t\txmlFreeDoc(ctxt->doc);\n\n\t\tthrow XMLException(\"Only nodeset result types are supported.\");\n\t}\n\n\txmlNodeSet* nodeset = result->nodesetval;\n\tXMLSharedNodeList* nodes = new XMLSharedNodeList();\n\tif (nodeset) {\n\t\tfor (int i = 0; i < nodeset->nodeNr; ++i) {\n\t\t\tXMLNode* node = readnode(nodeset->nodeTab[i]);\n\t\t\tnodes->push_back(boost::shared_ptr<XMLNode>(node));\n\t\t}\n\t} else {\n\t\t// return empty set\n\t}\n\n\txmlXPathFreeObject(result);\n\n\treturn nodes;\n}",
  "diff_func": "@@ -770,16 +770,16 @@ static XMLSharedNodeList* find_impl(xmlXPathContext* ctxt, const string& xpath)\n \txmlXPathObject* result = xmlXPathEval((const xmlChar*)xpath.c_str(), ctxt);\n \n \tif (!result) {\n-\t\txmlXPathFreeContext(ctxt);\n \t\txmlFreeDoc(ctxt->doc);\n+\t\txmlXPathFreeContext(ctxt);\n \n \t\tthrow XMLException(\"Invalid XPath: \" + xpath);\n \t}\n \n \tif (result->type != XPATH_NODESET) {\n \t\txmlXPathFreeObject(result);\n-\t\txmlXPathFreeContext(ctxt);\n \t\txmlFreeDoc(ctxt->doc);\n+\t\txmlXPathFreeContext(ctxt);\n \n \t\tthrow XMLException(\"Only nodeset result types are supported.\");\n \t}",
  "project": "ardour",
  "commit_id": "96daa4036a425ff3f23a7dfcba57bfb0f942bec6",
  "target": 1,
  "func": "static XMLSharedNodeList* find_impl(xmlXPathContext* ctxt, const string& xpath)\n{\n\txmlXPathObject* result = xmlXPathEval((const xmlChar*)xpath.c_str(), ctxt);\n\n\tif (!result) {\n\t\txmlXPathFreeContext(ctxt);\n\t\txmlFreeDoc(ctxt->doc);\n\n\t\tthrow XMLException(\"Invalid XPath: \" + xpath);\n\t}\n\n\tif (result->type != XPATH_NODESET) {\n\t\txmlXPathFreeObject(result);\n\t\txmlXPathFreeContext(ctxt);\n\t\txmlFreeDoc(ctxt->doc);\n\n\t\tthrow XMLException(\"Only nodeset result types are supported.\");\n\t}\n\n\txmlNodeSet* nodeset = result->nodesetval;\n\tXMLSharedNodeList* nodes = new XMLSharedNodeList();\n\tif (nodeset) {\n\t\tfor (int i = 0; i < nodeset->nodeNr; ++i) {\n\t\t\tXMLNode* node = readnode(nodeset->nodeTab[i]);\n\t\t\tnodes->push_back(boost::shared_ptr<XMLNode>(node));\n\t\t}\n\t} else {\n\t\t// return empty set\n\t}\n\n\txmlXPathFreeObject(result);\n\n\treturn nodes;\n}",
  "idx": 217254,
  "hash": 54268186819182218721269174810414224706,
  "dataset": "other",
  "Bug Filter": "Defect Remediation & Feature Upgrades",
  "Bug Filter Confidence": 0.85,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch addresses an issue with resource deallocation order, specifically changing the sequence of freeing context and document pointers. This change aims to fix a potential bug related to resource management, which could cause issues like memory leaks or crashes. The changes do not directly address a security vulnerability but rather a functional defect.\n\nFinal Classification: Defect Remediation & Feature Upgrades\n\nConfidence Score: 0.85"
}