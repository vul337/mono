{
  "id": 996,
  "language": "c",
  "cwe": "",
  "commit_url": "https://github.com/chipcraft-ic/toolchain-component-linux/commit/f6b8c6b5543983e9de29dc14716bfa4eb3f157c4",
  "commit_sha": "f6b8c6b5543983e9de29dc14716bfa4eb3f157c4",
  "commit_msg": "Bluetooth: sco: Fix crash when using BT_SNDMTU/BT_RCVMTU option\n\nThis commit add the invalid check for connected socket, without it will\ncauses the following crash due to sco_pi(sk)->conn being NULL:\n\nKASAN: null-ptr-deref in range [0x0000000000000050-0x0000000000000057]\nCPU: 3 PID: 4284 Comm: test_sco Not tainted 5.10.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1 04/01/2014\nRIP: 0010:sco_sock_getsockopt+0x45d/0x8e0\nCode: 48 c1 ea 03 80 3c 02 00 0f 85 ca 03 00 00 49 8b 9d f8 04 00 00 48 b8 00\n      00 00 00 00 fc ff df 48 8d 7b 50 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84\n      c0 74 08 3c 03 0f 8e b5 03 00 00 8b 43 50 48 8b 0c\nRSP: 0018:ffff88801bb17d88 EFLAGS: 00010206\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffffff83a4ecdf\nRDX: 000000000000000a RSI: ffffc90002fce000 RDI: 0000000000000050\nRBP: 1ffff11003762fb4 R08: 0000000000000001 R09: ffff88810e1008c0\nR10: ffffffffbd695dcf R11: fffffbfff7ad2bb9 R12: 0000000000000000\nR13: ffff888018ff1000 R14: dffffc0000000000 R15: 000000000000000d\nFS:  00007fb4f76c1700(0000) GS:ffff88811af80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005555e3b7a938 CR3: 00000001117be001 CR4: 0000000000770ee0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ? sco_skb_put_cmsg+0x80/0x80\n ? sco_skb_put_cmsg+0x80/0x80\n __sys_getsockopt+0x12a/0x220\n ? __ia32_sys_setsockopt+0x150/0x150\n ? syscall_enter_from_user_mode+0x18/0x50\n ? rcu_read_lock_bh_held+0xb0/0xb0\n __x64_sys_getsockopt+0xba/0x150\n ? syscall_enter_from_user_mode+0x1d/0x50\n do_syscall_64+0x33/0x40\n entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nFixes: 0fc1a726f897 (\"Bluetooth: sco: new getsockopt options BT_SNDMTU/BT_RCVMTU\")\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nReviewed-by: Luiz Augusto Von Dentz <luiz.von.dentz@intel.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>\nSigned-off-by: Johan Hedberg <johan.hedberg@intel.com>",
  "pr_url": null,
  "pr_info": null,
  "file_name": "net/bluetooth/sco.c",
  "func_name": "",
  "raw_func_from_json": "static int sco_sock_getsockopt(struct socket *sock, int level, int optname,\n\t\t\t       char __user *optval, int __user *optlen)\n{\n\tstruct sock *sk = sock->sk;\n\tint len, err = 0;\n\tstruct bt_voice voice;\n\tu32 phys;\n\tint pkt_status;\n\n\tBT_DBG(\"sk %p\", sk);\n\n\tif (level == SOL_SCO)\n\t\treturn sco_sock_getsockopt_old(sock, optname, optval, optlen);\n\n\tif (get_user(len, optlen))\n\t\treturn -EFAULT;\n\n\tlock_sock(sk);\n\n\tswitch (optname) {\n\n\tcase BT_DEFER_SETUP:\n\t\tif (sk->sk_state != BT_BOUND && sk->sk_state != BT_LISTEN) {\n\t\t\terr = -EINVAL;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (put_user(test_bit(BT_SK_DEFER_SETUP, &bt_sk(sk)->flags),\n\t\t\t     (u32 __user *)optval))\n\t\t\terr = -EFAULT;\n\n\t\tbreak;\n\n\tcase BT_VOICE:\n\t\tvoice.setting = sco_pi(sk)->setting;\n\n\t\tlen = min_t(unsigned int, len, sizeof(voice));\n\t\tif (copy_to_user(optval, (char *)&voice, len))\n\t\t\terr = -EFAULT;\n\n\t\tbreak;\n\n\tcase BT_PHY:\n\t\tif (sk->sk_state != BT_CONNECTED) {\n\t\t\terr = -ENOTCONN;\n\t\t\tbreak;\n\t\t}\n\n\t\tphys = hci_conn_get_phy(sco_pi(sk)->conn->hcon);\n\n\t\tif (put_user(phys, (u32 __user *) optval))\n\t\t\terr = -EFAULT;\n\t\tbreak;\n\n\tcase BT_PKT_STATUS:\n\t\tpkt_status = (sco_pi(sk)->cmsg_mask & SCO_CMSG_PKT_STATUS);\n\n\t\tif (put_user(pkt_status, (int __user *)optval))\n\t\t\terr = -EFAULT;\n\t\tbreak;\n\n\tcase BT_SNDMTU:\n\tcase BT_RCVMTU:\n\t\tif (put_user(sco_pi(sk)->conn->mtu, (u32 __user *)optval))\n\t\t\terr = -EFAULT;\n\t\tbreak;\n\n\tdefault:\n\t\terr = -ENOPROTOOPT;\n\t\tbreak;\n\t}\n\n\trelease_sock(sk);\n\treturn err;\n}",
  "diff_func": "@@ -1003,6 +1003,11 @@ static int sco_sock_getsockopt(struct socket *sock, int level, int optname,\n \n \tcase BT_SNDMTU:\n \tcase BT_RCVMTU:\n+\t\tif (sk->sk_state != BT_CONNECTED) {\n+\t\t\terr = -ENOTCONN;\n+\t\t\tbreak;\n+\t\t}\n+\n \t\tif (put_user(sco_pi(sk)->conn->mtu, (u32 __user *)optval))\n \t\t\terr = -EFAULT;\n \t\tbreak;",
  "func": "static int sco_sock_getsockopt(struct socket *sock, int level, int optname,\n\t\t\t       char __user *optval, int __user *optlen)\n{\n\tstruct sock *sk = sock->sk;\n\tint len, err = 0;\n\tstruct bt_voice voice;\n\tu32 phys;\n\tint pkt_status;\n\n\tBT_DBG(\"sk %p\", sk);\n\n\tif (level == SOL_SCO)\n\t\treturn sco_sock_getsockopt_old(sock, optname, optval, optlen);\n\n\tif (get_user(len, optlen))\n\t\treturn -EFAULT;\n\n\tlock_sock(sk);\n\n\tswitch (optname) {\n\n\tcase BT_DEFER_SETUP:\n\t\tif (sk->sk_state != BT_BOUND && sk->sk_state != BT_LISTEN) {\n\t\t\terr = -EINVAL;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (put_user(test_bit(BT_SK_DEFER_SETUP, &bt_sk(sk)->flags),\n\t\t\t     (u32 __user *)optval))\n\t\t\terr = -EFAULT;\n\n\t\tbreak;\n\n\tcase BT_VOICE:\n\t\tvoice.setting = sco_pi(sk)->setting;\n\n\t\tlen = min_t(unsigned int, len, sizeof(voice));\n\t\tif (copy_to_user(optval, (char *)&voice, len))\n\t\t\terr = -EFAULT;\n\n\t\tbreak;\n\n\tcase BT_PHY:\n\t\tif (sk->sk_state != BT_CONNECTED) {\n\t\t\terr = -ENOTCONN;\n\t\t\tbreak;\n\t\t}\n\n\t\tphys = hci_conn_get_phy(sco_pi(sk)->conn->hcon);\n\n\t\tif (put_user(phys, (u32 __user *) optval))\n\t\t\terr = -EFAULT;\n\t\tbreak;\n\n\tcase BT_PKT_STATUS:\n\t\tpkt_status = (sco_pi(sk)->cmsg_mask & SCO_CMSG_PKT_STATUS);\n\n\t\tif (put_user(pkt_status, (int __user *)optval))\n\t\t\terr = -EFAULT;\n\t\tbreak;\n\n\tcase BT_SNDMTU:\n\tcase BT_RCVMTU:\n\t\tif (put_user(sco_pi(sk)->conn->mtu, (u32 __user *)optval))\n\t\t\terr = -EFAULT;\n\t\tbreak;\n\n\tdefault:\n\t\terr = -ENOPROTOOPT;\n\t\tbreak;\n\t}\n\n\trelease_sock(sk);\n\treturn err;\n}",
  "project": "linux",
  "hash": 128514305255950477331651837588851280450,
  "size": 75,
  "commit_id": "f6b8c6b5543983e9de29dc14716bfa4eb3f157c4",
  "message": "Bluetooth: sco: Fix crash when using BT_SNDMTU/BT_RCVMTU option\n\nThis commit add the invalid check for connected socket, without it will\ncauses the following crash due to sco_pi(sk)->conn being NULL:\n\nKASAN: null-ptr-deref in range [0x0000000000000050-0x0000000000000057]\nCPU: 3 PID: 4284 Comm: test_sco Not tainted 5.10.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1 04/01/2014\nRIP: 0010:sco_sock_getsockopt+0x45d/0x8e0\nCode: 48 c1 ea 03 80 3c 02 00 0f 85 ca 03 00 00 49 8b 9d f8 04 00 00 48 b8 00\n      00 00 00 00 fc ff df 48 8d 7b 50 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84\n      c0 74 08 3c 03 0f 8e b5 03 00 00 8b 43 50 48 8b 0c\nRSP: 0018:ffff88801bb17d88 EFLAGS: 00010206\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffffff83a4ecdf\nRDX: 000000000000000a RSI: ffffc90002fce000 RDI: 0000000000000050\nRBP: 1ffff11003762fb4 R08: 0000000000000001 R09: ffff88810e1008c0\nR10: ffffffffbd695dcf R11: fffffbfff7ad2bb9 R12: 0000000000000000\nR13: ffff888018ff1000 R14: dffffc0000000000 R15: 000000000000000d\nFS:  00007fb4f76c1700(0000) GS:ffff88811af80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005555e3b7a938 CR3: 00000001117be001 CR4: 0000000000770ee0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ? sco_skb_put_cmsg+0x80/0x80\n ? sco_skb_put_cmsg+0x80/0x80\n __sys_getsockopt+0x12a/0x220\n ? __ia32_sys_setsockopt+0x150/0x150\n ? syscall_enter_from_user_mode+0x18/0x50\n ? rcu_read_lock_bh_held+0xb0/0xb0\n __x64_sys_getsockopt+0xba/0x150\n ? syscall_enter_from_user_mode+0x1d/0x50\n do_syscall_64+0x33/0x40\n entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nFixes: 0fc1a726f897 (\"Bluetooth: sco: new getsockopt options BT_SNDMTU/BT_RCVMTU\")\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nReviewed-by: Luiz Augusto Von Dentz <luiz.von.dentz@intel.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>\nSigned-off-by: Johan Hedberg <johan.hedberg@intel.com>",
  "target": 1,
  "dataset": "other",
  "idx": 214281,
  "Bug Filter": "Security Vulnerability Fix\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\n**Final Output:**\nAnalysis: The patch addresses a null pointer dereference in the Bluetooth SCO socket handling, which could cause a system crash. The added check ensures that the socket is connected before accessing the connection structure, preventing unauthorized access and potential system compromise.\n\nFinal Classification: Security Vulnerability Fix\nConfidence Score: 0.95"
}