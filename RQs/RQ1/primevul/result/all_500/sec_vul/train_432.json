{
  "id": 432,
  "language": "c",
  "cwe": "CWE-200",
  "commit_url": "https://github.com/ljalves/linux_media/commit/9344a972961d1a6d2c04d9008b13617bcb6ec2ef",
  "commit_sha": "9344a972961d1a6d2c04d9008b13617bcb6ec2ef",
  "commit_msg": "Bluetooth: RFCOMM - Fix info leak via getsockname()\n\nThe RFCOMM code fails to initialize the trailing padding byte of struct\nsockaddr_rc added for alignment. It that for leaks one byte kernel stack\nvia the getsockname() syscall. Add an explicit memset(0) before filling\nthe structure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Gustavo Padovan <gustavo@padovan.org>\nCc: Johan Hedberg <johan.hedberg@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "pr_url": null,
  "pr_info": null,
  "file_name": "net/bluetooth/rfcomm/sock.c",
  "func_name": "",
  "raw_func_from_json": "static int rfcomm_sock_getname(struct socket *sock, struct sockaddr *addr, int *len, int peer)\n{\n\tstruct sockaddr_rc *sa = (struct sockaddr_rc *) addr;\n\tstruct sock *sk = sock->sk;\n \n \tBT_DBG(\"sock %p, sk %p\", sock, sk);\n \n \tsa->rc_family  = AF_BLUETOOTH;\n \tsa->rc_channel = rfcomm_pi(sk)->channel;\n \tif (peer)\n\t\tbacpy(&sa->rc_bdaddr, &bt_sk(sk)->dst);\n\telse\n\t\tbacpy(&sa->rc_bdaddr, &bt_sk(sk)->src);\n\n\t*len = sizeof(struct sockaddr_rc);\n\treturn 0;\n}\n",
  "diff_func": "@@ -528,6 +528,7 @@ static int rfcomm_sock_getname(struct socket *sock, struct sockaddr *addr, int *\n \n \tBT_DBG(\"sock %p, sk %p\", sock, sk);\n \n+\tmemset(sa, 0, sizeof(*sa));\n \tsa->rc_family  = AF_BLUETOOTH;\n \tsa->rc_channel = rfcomm_pi(sk)->channel;\n \tif (peer)",
  "project": "linux",
  "commit_id": "9344a972961d1a6d2c04d9008b13617bcb6ec2ef",
  "target": 1,
  "func": "static int rfcomm_sock_getname(struct socket *sock, struct sockaddr *addr, int *len, int peer)\n{\n\tstruct sockaddr_rc *sa = (struct sockaddr_rc *) addr;\n\tstruct sock *sk = sock->sk;\n \n \tBT_DBG(\"sock %p, sk %p\", sock, sk);\n \n \tsa->rc_family  = AF_BLUETOOTH;\n \tsa->rc_channel = rfcomm_pi(sk)->channel;\n \tif (peer)\n\t\tbacpy(&sa->rc_bdaddr, &bt_sk(sk)->dst);\n\telse\n\t\tbacpy(&sa->rc_bdaddr, &bt_sk(sk)->src);\n\n\t*len = sizeof(struct sockaddr_rc);\n\treturn 0;\n}\n",
  "big_vul_idx": 179353,
  "idx": 1128,
  "hash": 94097099797321759376102906975104746907,
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 1.0",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch addresses an information leak in the Bluetooth RFCOMM module by properly initializing a structure before use, preventing unauthorized data disclosure.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 1.0"
}