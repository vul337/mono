{
  "id": 406,
  "language": "c",
  "cwe": "CWE-200",
  "commit_url": "https://github.com/ljalves/linux_media/commit/12176503366885edd542389eed3aaf94be163fdb",
  "commit_sha": "12176503366885edd542389eed3aaf94be163fdb",
  "commit_msg": "fs/compat_ioctl.c: VIDEO_SET_SPU_PALETTE missing error check\n\nThe compat ioctl for VIDEO_SET_SPU_PALETTE was missing an error check\nwhile converting ioctl arguments.  This could lead to leaking kernel\nstack contents into userspace.\n\nPatch extracted from existing fix in grsecurity.\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: David Miller <davem@davemloft.net>\nCc: Brad Spengler <spender@grsecurity.net>\nCc: PaX Team <pageexec@freemail.hu>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "pr_url": null,
  "pr_info": null,
  "file_name": "fs/compat_ioctl.c",
  "func_name": "",
  "raw_func_from_json": "static int do_video_set_spu_palette(unsigned int fd, unsigned int cmd,\n\t\tstruct compat_video_spu_palette __user *up)\n{\n\tstruct video_spu_palette __user *up_native;\n\tcompat_uptr_t palp;\n\tint length, err;\n \n \terr  = get_user(palp, &up->palette);\n \terr |= get_user(length, &up->length);\n \n \tup_native = compat_alloc_user_space(sizeof(struct video_spu_palette));\n \terr  = put_user(compat_ptr(palp), &up_native->palette);\n\terr |= put_user(length, &up_native->length);\n\tif (err)\n\t\treturn -EFAULT;\n\n\terr = sys_ioctl(fd, cmd, (unsigned long) up_native);\n\n\treturn err;\n}\n",
  "diff_func": "@@ -210,6 +210,8 @@ static int do_video_set_spu_palette(unsigned int fd, unsigned int cmd,\n \n \terr  = get_user(palp, &up->palette);\n \terr |= get_user(length, &up->length);\n+\tif (err)\n+\t\treturn -EFAULT;\n \n \tup_native = compat_alloc_user_space(sizeof(struct video_spu_palette));\n \terr  = put_user(compat_ptr(palp), &up_native->palette);",
  "project": "linux",
  "commit_id": "12176503366885edd542389eed3aaf94be163fdb",
  "target": 1,
  "func": "static int do_video_set_spu_palette(unsigned int fd, unsigned int cmd,\n\t\tstruct compat_video_spu_palette __user *up)\n{\n\tstruct video_spu_palette __user *up_native;\n\tcompat_uptr_t palp;\n\tint length, err;\n \n \terr  = get_user(palp, &up->palette);\n \terr |= get_user(length, &up->length);\n \n \tup_native = compat_alloc_user_space(sizeof(struct video_spu_palette));\n \terr  = put_user(compat_ptr(palp), &up_native->palette);\n\terr |= put_user(length, &up_native->length);\n\tif (err)\n\t\treturn -EFAULT;\n\n\terr = sys_ioctl(fd, cmd, (unsigned long) up_native);\n\n\treturn err;\n}\n",
  "big_vul_idx": 179274,
  "idx": 1057,
  "hash": 316505203133565640195168358797398379359,
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 1.0",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis: The patch addresses a missing error check in the VIDEO_SET_SPU_PALETTE ioctl, which could lead to kernel stack leakage. The code adds error handling to prevent this security issue.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 1.0"
}