{
  "id": 670,
  "language": "c",
  "cwe": "",
  "commit_url": "https://github.com/adi-g15-ibm/qemu/commit/121841b25d72d13f8cad554363138c360f1250ea",
  "commit_sha": "121841b25d72d13f8cad554363138c360f1250ea",
  "commit_msg": "vhost-user-gpu: fix memory disclosure in virgl_cmd_get_capset_info (CVE-2021-3545)\n\nOtherwise some of the 'resp' will be leaked to guest.\n\nFixes: CVE-2021-3545\nReported-by: Li Qiang <liq3ea@163.com>\nvirtio-gpu fix: 42a8dadc74 (\"virtio-gpu: fix information leak\nin getting capset info dispatch\")\n\nSigned-off-by: Li Qiang <liq3ea@163.com>\nReviewed-by: Marc-André Lureau <marcandre.lureau@redhat.com>\nMessage-Id: <20210516030403.107723-2-liq3ea@163.com>\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
  "pr_url": null,
  "pr_info": null,
  "file_name": "contrib/vhost-user-gpu/virgl.c",
  "func_name": "",
  "raw_func_from_json": "virgl_cmd_get_capset_info(VuGpu *g,\n                          struct virtio_gpu_ctrl_command *cmd)\n{\n    struct virtio_gpu_get_capset_info info;\n    struct virtio_gpu_resp_capset_info resp;\n\n    VUGPU_FILL_CMD(info);\n\n    if (info.capset_index == 0) {\n        resp.capset_id = VIRTIO_GPU_CAPSET_VIRGL;\n        virgl_renderer_get_cap_set(resp.capset_id,\n                                   &resp.capset_max_version,\n                                   &resp.capset_max_size);\n    } else if (info.capset_index == 1) {\n        resp.capset_id = VIRTIO_GPU_CAPSET_VIRGL2;\n        virgl_renderer_get_cap_set(resp.capset_id,\n                                   &resp.capset_max_version,\n                                   &resp.capset_max_size);\n    } else {\n        resp.capset_max_version = 0;\n        resp.capset_max_size = 0;\n    }\n    resp.hdr.type = VIRTIO_GPU_RESP_OK_CAPSET_INFO;\n    vg_ctrl_response(g, cmd, &resp.hdr, sizeof(resp));\n}",
  "diff_func": "@@ -128,6 +128,7 @@ virgl_cmd_get_capset_info(VuGpu *g,\n \n     VUGPU_FILL_CMD(info);\n \n+    memset(&resp, 0, sizeof(resp));\n     if (info.capset_index == 0) {\n         resp.capset_id = VIRTIO_GPU_CAPSET_VIRGL;\n         virgl_renderer_get_cap_set(resp.capset_id,",
  "func": "virgl_cmd_get_capset_info(VuGpu *g,\n                          struct virtio_gpu_ctrl_command *cmd)\n{\n    struct virtio_gpu_get_capset_info info;\n    struct virtio_gpu_resp_capset_info resp;\n\n    VUGPU_FILL_CMD(info);\n\n    if (info.capset_index == 0) {\n        resp.capset_id = VIRTIO_GPU_CAPSET_VIRGL;\n        virgl_renderer_get_cap_set(resp.capset_id,\n                                   &resp.capset_max_version,\n                                   &resp.capset_max_size);\n    } else if (info.capset_index == 1) {\n        resp.capset_id = VIRTIO_GPU_CAPSET_VIRGL2;\n        virgl_renderer_get_cap_set(resp.capset_id,\n                                   &resp.capset_max_version,\n                                   &resp.capset_max_size);\n    } else {\n        resp.capset_max_version = 0;\n        resp.capset_max_size = 0;\n    }\n    resp.hdr.type = VIRTIO_GPU_RESP_OK_CAPSET_INFO;\n    vg_ctrl_response(g, cmd, &resp.hdr, sizeof(resp));\n}",
  "project": "qemu",
  "hash": 173217651682921271544895473918857762310,
  "size": 25,
  "commit_id": "121841b25d72d13f8cad554363138c360f1250ea",
  "message": "vhost-user-gpu: fix memory disclosure in virgl_cmd_get_capset_info (CVE-2021-3545)\n\nOtherwise some of the 'resp' will be leaked to guest.\n\nFixes: CVE-2021-3545\nReported-by: Li Qiang <liq3ea@163.com>\nvirtio-gpu fix: 42a8dadc74 (\"virtio-gpu: fix information leak\nin getting capset info dispatch\")\n\nSigned-off-by: Li Qiang <liq3ea@163.com>\nReviewed-by: Marc-André Lureau <marcandre.lureau@redhat.com>\nMessage-Id: <20210516030403.107723-2-liq3ea@163.com>\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
  "target": 1,
  "dataset": "other",
  "idx": 202074,
  "Bug Filter": "Security Vulnerability Fix\nConfidence Score: 1.0",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "\n\nFinal Output:\nAnalysis: The patch addresses a memory disclosure vulnerability (CVE-2021-3545) by initializing the 'resp' variable to prevent data leakage. The code change uses memset to clear the structure, which is a standard method to avoid information exposure. This directly impacts confidentiality, a key security aspect.\n\nFinal Classification: Security Vulnerability Fix\nConfidence Score: 1.0"
}