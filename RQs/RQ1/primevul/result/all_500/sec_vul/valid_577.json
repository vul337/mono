{
  "id": 577,
  "language": "c",
  "cwe": "",
  "commit_url": "https://github.com/emtee40/openSC/commit/1252aca9f10771ef5ba8405e73cf2da50827958f",
  "commit_sha": "1252aca9f10771ef5ba8405e73cf2da50827958f",
  "commit_msg": "cardos: Correctly calculate the left bytes to avoid buffer overrun\n\nThanks oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=29912",
  "pr_url": null,
  "pr_info": null,
  "file_name": "src/libopensc/card-cardos.c",
  "func_name": "",
  "raw_func_from_json": "static int cardos_have_2048bit_package(sc_card_t *card)\n{\n\tsc_apdu_t apdu;\n        u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];\n        int       r;\n\tconst u8  *p = rbuf, *q;\n\tsize_t    len, tlen = 0, ilen = 0;\n\n\tsc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);\n\tapdu.resp    = rbuf;\n\tapdu.resplen = sizeof(rbuf);\n\tapdu.lc = 0;\n\tapdu.le = 256;\n\tr = sc_transmit_apdu(card, &apdu);\n\tLOG_TEST_RET(card->ctx, r, \"APDU transmit failed\");\n\n\tif ((len = apdu.resplen) == 0)\n\t\t/* looks like no package has been installed  */\n\t\treturn 0;\n\n\twhile (len != 0) {\n\t\tp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);\n\t\tif (p == NULL)\n\t\t\treturn 0;\n\t\tq = sc_asn1_find_tag(card->ctx, p, tlen, 0x01, &ilen);\n\t\tif (q == NULL || ilen != 4)\n\t\t\treturn 0;\n\t\tif (q[0] == 0x1c)\n\t\t\treturn 1;\n\t\tp   += tlen;\n\t\tlen -= tlen + 2;\n\t}\n\n\treturn 0;\n}",
  "diff_func": "@@ -159,7 +159,7 @@ static int cardos_have_2048bit_package(sc_card_t *card)\n \tsc_apdu_t apdu;\n         u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];\n         int       r;\n-\tconst u8  *p = rbuf, *q;\n+\tconst u8  *p = rbuf, *q, *pp;\n \tsize_t    len, tlen = 0, ilen = 0;\n \n \tsc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);\n@@ -175,10 +175,10 @@ static int cardos_have_2048bit_package(sc_card_t *card)\n \t\treturn 0;\n \n \twhile (len != 0) {\n-\t\tp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);\n-\t\tif (p == NULL)\n+\t\tpp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);\n+\t\tif (pp == NULL)\n \t\t\treturn 0;\n-\t\tq = sc_asn1_find_tag(card->ctx, p, tlen, 0x01, &ilen);\n+\t\tq = sc_asn1_find_tag(card->ctx, pp, tlen, 0x01, &ilen);\n \t\tif (q == NULL || ilen != 4)\n \t\t\treturn 0;\n \t\tif (q[0] == 0x1c)",
  "func": "static int cardos_have_2048bit_package(sc_card_t *card)\n{\n\tsc_apdu_t apdu;\n        u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];\n        int       r;\n\tconst u8  *p = rbuf, *q;\n\tsize_t    len, tlen = 0, ilen = 0;\n\n\tsc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);\n\tapdu.resp    = rbuf;\n\tapdu.resplen = sizeof(rbuf);\n\tapdu.lc = 0;\n\tapdu.le = 256;\n\tr = sc_transmit_apdu(card, &apdu);\n\tLOG_TEST_RET(card->ctx, r, \"APDU transmit failed\");\n\n\tif ((len = apdu.resplen) == 0)\n\t\t/* looks like no package has been installed  */\n\t\treturn 0;\n\n\twhile (len != 0) {\n\t\tp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);\n\t\tif (p == NULL)\n\t\t\treturn 0;\n\t\tq = sc_asn1_find_tag(card->ctx, p, tlen, 0x01, &ilen);\n\t\tif (q == NULL || ilen != 4)\n\t\t\treturn 0;\n\t\tif (q[0] == 0x1c)\n\t\t\treturn 1;\n\t\tp   += tlen;\n\t\tlen -= tlen + 2;\n\t}\n\n\treturn 0;\n}",
  "project": "OpenSC",
  "hash": 92357617617140958826267024638443033197,
  "size": 35,
  "commit_id": "1252aca9f10771ef5ba8405e73cf2da50827958f",
  "message": "cardos: Correctly calculate the left bytes to avoid buffer overrun\n\nThanks oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=29912",
  "target": 1,
  "dataset": "other",
  "idx": 198234,
  "Bug Filter": "Security Vulnerability Fix\nConfidence Score: 1.0",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "\n\nThe patch addresses a buffer overrun issue, a security vulnerability, by correcting buffer calculations. The fix ensures proper buffer handling to prevent overflow, which could lead to security breaches.\n\n**Final Output:**\nAnalysis: The patch corrects a buffer overrun vulnerability by accurately calculating remaining bytes, preventing potential memory corruption or attacks. The commit message and code changes clearly indicate a security fix.\nFinal Classification: Security Vulnerability Fix\nConfidence Score: 1.0"
}