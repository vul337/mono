{
  "id": 899,
  "language": "c",
  "cwe": "",
  "commit_url": "https://github.com/YASHTHAKUR879/Yashbh/commit/f5e73cc7c9cd973b516a618da877c87b80950b65",
  "commit_sha": "f5e73cc7c9cd973b516a618da877c87b80950b65",
  "commit_msg": "Fixed #6009: Bounds checks in autodetect_recv_bandwidth_measure_results",
  "pr_url": null,
  "pr_info": null,
  "file_name": "libfreerdp/core/autodetect.c",
  "func_name": "",
  "raw_func_from_json": "static BOOL autodetect_recv_bandwidth_measure_results(rdpRdp* rdp, wStream* s,\n                                                      AUTODETECT_RSP_PDU* autodetectRspPdu)\n{\n\tBOOL success = TRUE;\n\n\tif (autodetectRspPdu->headerLength != 0x0E)\n\t\treturn FALSE;\n\n\tWLog_VRB(AUTODETECT_TAG, \"received Bandwidth Measure Results PDU\");\n\tStream_Read_UINT32(s, rdp->autodetect->bandwidthMeasureTimeDelta); /* timeDelta (4 bytes) */\n\tStream_Read_UINT32(s, rdp->autodetect->bandwidthMeasureByteCount); /* byteCount (4 bytes) */\n\n\tif (rdp->autodetect->bandwidthMeasureTimeDelta > 0)\n\t\trdp->autodetect->netCharBandwidth = rdp->autodetect->bandwidthMeasureByteCount * 8 /\n\t\t                                    rdp->autodetect->bandwidthMeasureTimeDelta;\n\telse\n\t\trdp->autodetect->netCharBandwidth = 0;\n\n\tIFCALLRET(rdp->autodetect->BandwidthMeasureResults, success, rdp->context,\n\t          autodetectRspPdu->sequenceNumber);\n\treturn success;\n}",
  "diff_func": "@@ -465,6 +465,8 @@ static BOOL autodetect_recv_bandwidth_measure_results(rdpRdp* rdp, wStream* s,\n \t\treturn FALSE;\n \n \tWLog_VRB(AUTODETECT_TAG, \"received Bandwidth Measure Results PDU\");\n+\tif (Stream_GetRemainingLength(s) < 8)\n+\t\treturn -1;\n \tStream_Read_UINT32(s, rdp->autodetect->bandwidthMeasureTimeDelta); /* timeDelta (4 bytes) */\n \tStream_Read_UINT32(s, rdp->autodetect->bandwidthMeasureByteCount); /* byteCount (4 bytes) */\n ",
  "func": "static BOOL autodetect_recv_bandwidth_measure_results(rdpRdp* rdp, wStream* s,\n                                                      AUTODETECT_RSP_PDU* autodetectRspPdu)\n{\n\tBOOL success = TRUE;\n\n\tif (autodetectRspPdu->headerLength != 0x0E)\n\t\treturn FALSE;\n\n\tWLog_VRB(AUTODETECT_TAG, \"received Bandwidth Measure Results PDU\");\n\tStream_Read_UINT32(s, rdp->autodetect->bandwidthMeasureTimeDelta); /* timeDelta (4 bytes) */\n\tStream_Read_UINT32(s, rdp->autodetect->bandwidthMeasureByteCount); /* byteCount (4 bytes) */\n\n\tif (rdp->autodetect->bandwidthMeasureTimeDelta > 0)\n\t\trdp->autodetect->netCharBandwidth = rdp->autodetect->bandwidthMeasureByteCount * 8 /\n\t\t                                    rdp->autodetect->bandwidthMeasureTimeDelta;\n\telse\n\t\trdp->autodetect->netCharBandwidth = 0;\n\n\tIFCALLRET(rdp->autodetect->BandwidthMeasureResults, success, rdp->context,\n\t          autodetectRspPdu->sequenceNumber);\n\treturn success;\n}",
  "project": "FreeRDP",
  "hash": 216691492795313936043673492828130509835,
  "size": 22,
  "commit_id": "f5e73cc7c9cd973b516a618da877c87b80950b65",
  "message": "Fixed #6009: Bounds checks in autodetect_recv_bandwidth_measure_results",
  "target": 1,
  "dataset": "other",
  "idx": 210399,
  "Bug Filter": "Security Vulnerability Fix\nConfidence Score: 0.95",
  "Bug Filter Confidence": 0.95,
  "Bug Filter Response": "\n\nThe patch adds a bounds check to prevent reading beyond the buffer, fixing a potential security vulnerability.\n\n**Final Output:**\nAnalysis: The patch adds a bounds check in the autodetect_recv_bandwidth_measure_results function, ensuring that the stream has enough data before reading. This prevents potential buffer overflows, indicating a security fix.\nFinal Classification: Security Vulnerability Fix\nConfidence Score: 0.95"
}