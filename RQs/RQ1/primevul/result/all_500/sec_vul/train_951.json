{
  "id": 951,
  "language": "c",
  "cwe": "CWE-125",
  "commit_url": "https://github.com/merlinepedra/TCPDUMP/commit/cbddb98484ea8ec1deece351abd56e063d775b38",
  "commit_sha": "cbddb98484ea8ec1deece351abd56e063d775b38",
  "commit_msg": "CVE-2017-13002/AODV: Add some missing bounds checks.\n\nIn aodv_extension() do a bounds check on the extension header before we\nlook at it.\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd a test using the capture file supplied by the reporter(s).\n\nWhile we're at it, add the RFC number, and check the validity of the\nlength for the Hello extension.",
  "pr_url": null,
  "pr_info": null,
  "file_name": "print-aodv.c",
  "func_name": "",
  "raw_func_from_json": "aodv_extension(netdissect_options *ndo,\n               const struct aodv_ext *ep, u_int length)\n {\n \tconst struct aodv_hello *ah;\n \n \tswitch (ep->type) {\n \tcase AODV_EXT_HELLO:\n \t\tah = (const struct aodv_hello *)(const void *)ep;\n \t\tND_TCHECK(*ah);\n \t\tif (length < sizeof(struct aodv_hello))\n \t\t\tgoto trunc;\n \t\tND_PRINT((ndo, \"\\n\\text HELLO %ld ms\",\n \t\t    (unsigned long)EXTRACT_32BITS(&ah->interval)));\n \t\tbreak;\n\n\tdefault:\n\t\tND_PRINT((ndo, \"\\n\\text %u %u\", ep->type, ep->length));\n\t\tbreak;\n\t}\n\treturn;\n\ntrunc:\n\tND_PRINT((ndo, \" [|hello]\"));\n}\n",
  "diff_func": "@@ -42,7 +42,9 @@\n #include \"addrtoname.h\"\n #include \"extract.h\"\n \n-\n+/*\n+ * RFC 3561\n+ */\n struct aodv_rreq {\n \tuint8_t\t\trreq_type;\t/* AODV message type (1) */\n \tuint8_t\t\trreq_flags;\t/* various flags */\n@@ -178,12 +180,17 @@ aodv_extension(netdissect_options *ndo,\n {\n \tconst struct aodv_hello *ah;\n \n+\tND_TCHECK(*ep);\n \tswitch (ep->type) {\n \tcase AODV_EXT_HELLO:\n \t\tah = (const struct aodv_hello *)(const void *)ep;\n \t\tND_TCHECK(*ah);\n \t\tif (length < sizeof(struct aodv_hello))\n \t\t\tgoto trunc;\n+\t\tif (ep->length < 4) {\n+\t\t\tND_PRINT((ndo, \"\\n\\text HELLO - bad length %u\", ep->length));\n+\t\t\tbreak;\n+\t\t}\n \t\tND_PRINT((ndo, \"\\n\\text HELLO %ld ms\",\n \t\t    (unsigned long)EXTRACT_32BITS(&ah->interval)));\n \t\tbreak;",
  "project": "tcpdump",
  "commit_id": "cbddb98484ea8ec1deece351abd56e063d775b38",
  "target": 1,
  "func": "aodv_extension(netdissect_options *ndo,\n               const struct aodv_ext *ep, u_int length)\n {\n \tconst struct aodv_hello *ah;\n \n \tswitch (ep->type) {\n \tcase AODV_EXT_HELLO:\n \t\tah = (const struct aodv_hello *)(const void *)ep;\n \t\tND_TCHECK(*ah);\n \t\tif (length < sizeof(struct aodv_hello))\n \t\t\tgoto trunc;\n \t\tND_PRINT((ndo, \"\\n\\text HELLO %ld ms\",\n \t\t    (unsigned long)EXTRACT_32BITS(&ah->interval)));\n \t\tbreak;\n\n\tdefault:\n\t\tND_PRINT((ndo, \"\\n\\text %u %u\", ep->type, ep->length));\n\t\tbreak;\n\t}\n\treturn;\n\ntrunc:\n\tND_PRINT((ndo, \" [|hello]\"));\n}\n",
  "big_vul_idx": 181077,
  "idx": 2593,
  "hash": 90330714944185622420628419197234453422,
  "Bug Filter": "Security Vulnerability Fix\n\nConfidence Score: 1.0",
  "Bug Filter Confidence": 1.0,
  "Bug Filter Response": "\n\n**Final Output:**\n\nAnalysis:\nThe patch addresses a buffer over-read vulnerability (CVE-2017-13002) by adding bounds checks in the AODV extension handling. This prevents unauthorized data access, indicating a security fix.\n\nFinal Classification: Security Vulnerability Fix\n\nConfidence Score: 1.0"
}