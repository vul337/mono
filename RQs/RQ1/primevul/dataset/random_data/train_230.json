{
  "id": 230,
  "language": "c",
  "cwe": "CWE-189",
  "commit_url": "https://github.com/0xd61/imlib2/commit/c94d83ccab15d5ef02f88d42dce38ed3f0892882",
  "commit_sha": "c94d83ccab15d5ef02f88d42dce38ed3f0892882",
  "commit_msg": "Fix potential divide-by-zero in imlib_image_draw_ellipse().\n\nAttempting to draw a 2x1 ellipse with e.g. imlib_image_draw_ellipse(x, y, 2, 1)\ncauses a divide-by-zero.\nIt seems happy enough to draw 1x1, 1x2 and 2x2, but not 2x1.\n\nPatch by Simon Lees.\n\nhttps://bugs.debian.org/639414",
  "pr_url": null,
  "pr_info": null,
  "file_name": "src/lib/ellipse.c",
  "func_name": "",
  "raw_func_from_json": "__imlib_Ellipse_DrawToData(int xc, int yc, int a, int b, DATA32 color,\n                           DATA32 * dst, int dstw, int clx, int cly, int clw,\n                           int clh, ImlibOp op, char dst_alpha, char blend)\n{\n   ImlibPointDrawFunction pfunc;\n   int                 xx, yy, x, y, prev_x, prev_y, ty, by, lx, rx;\n   DATA32              a2, b2, *tp, *bp;\n   DATA64              dx, dy;\n\n   if (A_VAL(&color) == 0xff)\n      blend = 0;\n   pfunc = __imlib_GetPointDrawFunction(op, dst_alpha, blend);\n   if (!pfunc)\n      return;\n\n   xc -= clx;\n   yc -= cly;\n   dst += (dstw * cly) + clx;\n\n   a2 = a * a;\n   b2 = b * b;\n\n   yy = b << 16;\n   prev_y = b;\n\n   dx = a2 * b;\n   dy = 0;\n\n   ty = yc - b - 1;\n   by = yc + b;\n   lx = xc - 1;\n   rx = xc;\n\n   tp = dst + (dstw * ty) + lx;\n   bp = dst + (dstw * by) + lx;\n\n   while (dy < dx)\n     {\n        int                 len;\n\n        y = yy >> 16;\n        y += ((yy - (y << 16)) >> 15);\n\n        if (prev_y != y)\n          {\n             prev_y = y;\n             dx -= a2;\n             ty++;\n             by--;\n             tp += dstw;\n             bp -= dstw;\n          }\n\n        len = rx - lx;\n\n        if (IN_RANGE(lx, ty, clw, clh))\n           pfunc(color, tp);\n        if (IN_RANGE(rx, ty, clw, clh))\n           pfunc(color, tp + len);\n        if (IN_RANGE(lx, by, clw, clh))\n           pfunc(color, bp);\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(color, bp + len);\n \n         dy += b2;\n         yy -= ((dy << 16) / dx);\n         lx--;\n\n        if ((lx < 0) && (rx > clw))\n           return;\n        if ((ty > clh) || (by < 0))\n           return;\n     }\n\n   xx = yy;\n   prev_x = xx >> 16;\n\n   dx = dy;\n\n   ty++;\n   by--;\n\n   tp += dstw;\n   bp -= dstw;\n\n   while (ty < yc)\n     {\n        int                 len;\n\n        x = xx >> 16;\n        x += ((xx - (x << 16)) >> 15);\n\n        if (prev_x != x)\n          {\n             prev_x = x;\n             dy += b2;\n             lx--;\n             rx++;\n             tp--;\n             bp--;\n          }\n\n        len = rx - lx;\n\n        if (IN_RANGE(lx, ty, clw, clh))\n           pfunc(color, tp);\n        if (IN_RANGE(rx, ty, clw, clh))\n           pfunc(color, tp + len);\n        if (IN_RANGE(lx, by, clw, clh))\n           pfunc(color, bp);\n        if (IN_RANGE(rx, by, clw, clh))\n           pfunc(color, bp + len);\n\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(color, bp + len);\n \n         dx -= a2;\n         xx += ((dx << 16) / dy);\n         ty++;\n        if ((ty > clh) || (by < 0))\n           return;\n     }\n}\n",
  "diff_func": "@@ -71,6 +71,9 @@ __imlib_Ellipse_DrawToData(int xc, int yc, int a, int b, DATA32 color,\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(color, bp + len);\n \n+        if (dx < 1)\n+           dx = 1;\n+\n         dy += b2;\n         yy -= ((dy << 16) / dx);\n         lx--;\n@@ -123,6 +126,9 @@ __imlib_Ellipse_DrawToData(int xc, int yc, int a, int b, DATA32 color,\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(color, bp + len);\n \n+        if (dy < 1)\n+           dy = 1;\n+\n         dx -= a2;\n         xx += ((dx << 16) / dy);\n         ty++;\n@@ -222,6 +228,9 @@ __imlib_Ellipse_DrawToData_AA(int xc, int yc, int a, int b, DATA32 color,\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(col1, bp + len);\n \n+        if (dx < 1)\n+           dx = 1;\n+\n         dy += b2;\n         yy -= ((dy << 16) / dx);\n         lx--;\n@@ -295,6 +304,9 @@ __imlib_Ellipse_DrawToData_AA(int xc, int yc, int a, int b, DATA32 color,\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(col1, bp + len);\n \n+        if (dy < 1)\n+           dy = 1;\n+\n         dx -= a2;\n         xx += ((dx << 16) / dy);\n         ty++;\n@@ -395,6 +407,9 @@ __imlib_Ellipse_FillToData(int xc, int yc, int a, int b, DATA32 color,\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(color, bp + len);\n \n+        if (dx < 1)\n+           dx = 1;\n+\n         dy += b2;\n         yy -= ((dy << 16) / dx);\n         lx--;\n@@ -453,6 +468,9 @@ __imlib_Ellipse_FillToData(int xc, int yc, int a, int b, DATA32 color,\n         if (((unsigned)by < (unsigned)clh) && (len > 0))\n            sfunc(color, bpp, len);\n \n+        if (dy < 1)\n+           dy = 1;\n+\n         dx -= a2;\n         xx += ((dx << 16) / dy);\n         ty++;\n@@ -556,6 +574,9 @@ __imlib_Ellipse_FillToData_AA(int xc, int yc, int a, int b, DATA32 color,\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(col1, bp + len);\n \n+        if (dx < 1)\n+           dx = 1;\n+\n         dy += b2;\n         yy -= ((dy << 16) / dx);\n         lx--;\n@@ -629,6 +650,9 @@ __imlib_Ellipse_FillToData_AA(int xc, int yc, int a, int b, DATA32 color,\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(col1, bp + len);\n \n+        if (dy < 1)\n+           dy = 1;\n+\n         dx -= a2;\n         xx += ((dx << 16) / dy);\n         ty++;",
  "project": "enlightment",
  "commit_id": "c94d83ccab15d5ef02f88d42dce38ed3f0892882",
  "target": 1,
  "func": "__imlib_Ellipse_DrawToData(int xc, int yc, int a, int b, DATA32 color,\n                           DATA32 * dst, int dstw, int clx, int cly, int clw,\n                           int clh, ImlibOp op, char dst_alpha, char blend)\n{\n   ImlibPointDrawFunction pfunc;\n   int                 xx, yy, x, y, prev_x, prev_y, ty, by, lx, rx;\n   DATA32              a2, b2, *tp, *bp;\n   DATA64              dx, dy;\n\n   if (A_VAL(&color) == 0xff)\n      blend = 0;\n   pfunc = __imlib_GetPointDrawFunction(op, dst_alpha, blend);\n   if (!pfunc)\n      return;\n\n   xc -= clx;\n   yc -= cly;\n   dst += (dstw * cly) + clx;\n\n   a2 = a * a;\n   b2 = b * b;\n\n   yy = b << 16;\n   prev_y = b;\n\n   dx = a2 * b;\n   dy = 0;\n\n   ty = yc - b - 1;\n   by = yc + b;\n   lx = xc - 1;\n   rx = xc;\n\n   tp = dst + (dstw * ty) + lx;\n   bp = dst + (dstw * by) + lx;\n\n   while (dy < dx)\n     {\n        int                 len;\n\n        y = yy >> 16;\n        y += ((yy - (y << 16)) >> 15);\n\n        if (prev_y != y)\n          {\n             prev_y = y;\n             dx -= a2;\n             ty++;\n             by--;\n             tp += dstw;\n             bp -= dstw;\n          }\n\n        len = rx - lx;\n\n        if (IN_RANGE(lx, ty, clw, clh))\n           pfunc(color, tp);\n        if (IN_RANGE(rx, ty, clw, clh))\n           pfunc(color, tp + len);\n        if (IN_RANGE(lx, by, clw, clh))\n           pfunc(color, bp);\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(color, bp + len);\n \n         dy += b2;\n         yy -= ((dy << 16) / dx);\n         lx--;\n\n        if ((lx < 0) && (rx > clw))\n           return;\n        if ((ty > clh) || (by < 0))\n           return;\n     }\n\n   xx = yy;\n   prev_x = xx >> 16;\n\n   dx = dy;\n\n   ty++;\n   by--;\n\n   tp += dstw;\n   bp -= dstw;\n\n   while (ty < yc)\n     {\n        int                 len;\n\n        x = xx >> 16;\n        x += ((xx - (x << 16)) >> 15);\n\n        if (prev_x != x)\n          {\n             prev_x = x;\n             dy += b2;\n             lx--;\n             rx++;\n             tp--;\n             bp--;\n          }\n\n        len = rx - lx;\n\n        if (IN_RANGE(lx, ty, clw, clh))\n           pfunc(color, tp);\n        if (IN_RANGE(rx, ty, clw, clh))\n           pfunc(color, tp + len);\n        if (IN_RANGE(lx, by, clw, clh))\n           pfunc(color, bp);\n        if (IN_RANGE(rx, by, clw, clh))\n           pfunc(color, bp + len);\n\n         if (IN_RANGE(rx, by, clw, clh))\n            pfunc(color, bp + len);\n \n         dx -= a2;\n         xx += ((dx << 16) / dy);\n         ty++;\n        if ((ty > clh) || (by < 0))\n           return;\n     }\n}\n",
  "big_vul_idx": 178516,
  "idx": 456,
  "hash": 155577364624288382699010849819044776563
}