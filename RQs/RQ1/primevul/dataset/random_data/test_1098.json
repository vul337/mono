{
  "id": 1098,
  "language": "c",
  "cwe": "",
  "commit_url": "https://github.com/cjj19970505/gegl/commit/bfce470f0f2f37968862129d5038b35429f2909b",
  "commit_sha": "bfce470f0f2f37968862129d5038b35429f2909b",
  "commit_msg": "magick-load: use more robust g_spawn_async() instead of system()\n\nThis fixes issue #298 by avoiding the shell parsing being invoked at\nall, this less brittle than any forms of escaping characters, while\nretaining the ability to address all existing files.",
  "pr_url": null,
  "pr_info": null,
  "file_name": "operations/common/magick-load.c",
  "func_name": "",
  "raw_func_from_json": "load_cache (GeglProperties *op_magick_load)\n{\n  if (!op_magick_load->user_data)\n    {\n      gchar    *filename;\n      gchar    *cmd;\n      GeglNode *graph, *sink, *loader;\n      GeglBuffer *newbuf = NULL;\n\n      /* ImageMagick backed fallback FIXME: make this robust.\n       * maybe use pipes in a manner similar to the raw loader,\n       * or at least use a properly unique filename  */\n\n      filename = g_build_filename (g_get_tmp_dir (), \"gegl-magick.png\", NULL);\n      cmd = g_strdup_printf (\"convert \\\"%s\\\"'[0]' \\\"%s\\\"\",\n                             op_magick_load->path, filename);\n      if (system (cmd) == -1)\n        g_warning (\"Error executing ImageMagick convert program\");\n\n\n      graph = gegl_node_new ();\n      sink = gegl_node_new_child (graph,\n                                 \"operation\", \"gegl:buffer-sink\",\n                                 \"buffer\", &newbuf, NULL);\n      loader = gegl_node_new_child (graph,\n                                    \"operation\", \"gegl:png-load\",\n                                    \"path\", filename, NULL);\n      gegl_node_link_many (loader, sink, NULL);\n      gegl_node_process (sink);\n      op_magick_load->user_data = (gpointer) newbuf;\n      g_object_unref (graph);\n      g_free (cmd);\n      g_free (filename);\n    }\n}",
  "diff_func": "@@ -41,20 +41,23 @@ load_cache (GeglProperties *op_magick_load)\n   if (!op_magick_load->user_data)\n     {\n       gchar    *filename;\n-      gchar    *cmd;\n       GeglNode *graph, *sink, *loader;\n       GeglBuffer *newbuf = NULL;\n \n       /* ImageMagick backed fallback FIXME: make this robust.\n        * maybe use pipes in a manner similar to the raw loader,\n        * or at least use a properly unique filename  */\n+      char     *argv[4]  = {\"convert\", NULL, NULL, NULL};\n \n       filename = g_build_filename (g_get_tmp_dir (), \"gegl-magick.png\", NULL);\n-      cmd = g_strdup_printf (\"convert \\\"%s\\\"'[0]' \\\"%s\\\"\",\n-                             op_magick_load->path, filename);\n-      if (system (cmd) == -1)\n+\n+      argv[1] = g_strdup_printf (\"%s[0]\", op_magick_load->path);\n+      argv[2] = filename;\n+      if (!g_spawn_sync (NULL, argv, NULL, G_SPAWN_DEFAULT, \n+                         NULL, NULL, NULL, NULL, NULL, NULL))\n         g_warning (\"Error executing ImageMagick convert program\");\n \n+      g_free (argv[1]);\n \n       graph = gegl_node_new ();\n       sink = gegl_node_new_child (graph,\n@@ -67,7 +70,6 @@ load_cache (GeglProperties *op_magick_load)\n       gegl_node_process (sink);\n       op_magick_load->user_data = (gpointer) newbuf;\n       g_object_unref (graph);\n-      g_free (cmd);\n       g_free (filename);\n     }\n }",
  "func": "load_cache (GeglProperties *op_magick_load)\n{\n  if (!op_magick_load->user_data)\n    {\n      gchar    *filename;\n      gchar    *cmd;\n      GeglNode *graph, *sink, *loader;\n      GeglBuffer *newbuf = NULL;\n\n      /* ImageMagick backed fallback FIXME: make this robust.\n       * maybe use pipes in a manner similar to the raw loader,\n       * or at least use a properly unique filename  */\n\n      filename = g_build_filename (g_get_tmp_dir (), \"gegl-magick.png\", NULL);\n      cmd = g_strdup_printf (\"convert \\\"%s\\\"'[0]' \\\"%s\\\"\",\n                             op_magick_load->path, filename);\n      if (system (cmd) == -1)\n        g_warning (\"Error executing ImageMagick convert program\");\n\n\n      graph = gegl_node_new ();\n      sink = gegl_node_new_child (graph,\n                                 \"operation\", \"gegl:buffer-sink\",\n                                 \"buffer\", &newbuf, NULL);\n      loader = gegl_node_new_child (graph,\n                                    \"operation\", \"gegl:png-load\",\n                                    \"path\", filename, NULL);\n      gegl_node_link_many (loader, sink, NULL);\n      gegl_node_process (sink);\n      op_magick_load->user_data = (gpointer) newbuf;\n      g_object_unref (graph);\n      g_free (cmd);\n      g_free (filename);\n    }\n}",
  "project": "gegl",
  "hash": 128207149302076836420080513313021708603,
  "size": 35,
  "commit_id": "bfce470f0f2f37968862129d5038b35429f2909b",
  "message": "magick-load: use more robust g_spawn_async() instead of system()\n\nThis fixes issue #298 by avoiding the shell parsing being invoked at\nall, this less brittle than any forms of escaping characters, while\nretaining the ability to address all existing files.",
  "target": 1,
  "dataset": "other",
  "idx": 212346
}