{
  "id": 639,
  "language": "cc",
  "cwe": "",
  "commit_url": "https://github.com/bareos/bareos/commit/abe462037388635193f3b5b71575f32596c3b69d",
  "commit_sha": "abe462037388635193f3b5b71575f32596c3b69d",
  "commit_msg": "dir: check account authorization during PAM login\n\nFixes CVE-2022-24755\n\nPreviously, when a user logged in via PAM, Bareos did only check for\nauthentication (i.e. the \"auth\" section in PAM). No authorization checks\nwere made (the \"account\" section in PAM). This patch now adds the proper\ncheck.\nThis will break existing PAM configuration!",
  "pr_url": "https://github.com/bareos/bareos/pull/1115",
  "pr_info": "Add authorization checks to PAM login and fix a memory leak in PAM login routines.\r\n\r\n\r\n#### Please check\r\n\r\n- [x] Short description and the purpose of this PR is present _above this paragraph_\r\n- [x] Your name is present in the AUTHORS file (optional)\r\n\r\nIf you have any questions or problems, please give a comment in the PR.\r\n\r\n### Helpful documentation and best practices\r\n\r\n- [Git Workflow](https://docs.bareos.org/DeveloperGuide/gitworkflow.html)\r\n- [Automatic Sourcecode Formatting](https://docs.bareos.org/DeveloperGuide/generaldevel.html#automatic-sourcecode-formatting)\r\n- [Check your commit messages](https://docs.bareos.org/DeveloperGuide/gitworkflow.html#commits)\r\n\r\n\r\n### Checklist for the _reviewer_ of the PR (will be processed by the Bareos team)\r\n\r\n##### General\r\n- [x] PR name is meaningful\r\n- [x] Purpose of the PR is understood\r\n- [x] Separate commit for this PR in the CHANGELOG.md, PR number referenced is same\r\n- [x] Commit descriptions are understandable and well formatted\r\n\r\n##### Source code quality\r\n\r\n- [x] Source code changes are understandable\r\n- [x] Variable and function names are meaningful\r\n- [x] Code comments are correct (logically and spelling)\r\n- [x] Required documentation changes are present and part of the PR\r\n- [x] `bareos-check-sources --since-merge` does not report any problems\r\n- [x] `git status` should not report modifications in the source tree after building and testing\r\n",
  "file_name": "core/src/dird/auth_pam.cc",
  "func_name": "",
  "raw_func_from_json": "static int DoPamAuth(struct pam_handle* pamh,\n                     const char* username,\n                     std::string& authenticated_username)\n{\n  int err = pam_set_item(pamh, PAM_RUSER, username);\n  if (err != PAM_SUCCESS) {\n    Dmsg1(debuglevel, \"PAM set_item failed: %s\\n\", pam_strerror(pamh, err));\n    return err;\n  }\n\n  err = pam_authenticate(pamh, 0);\n  if (err != PAM_SUCCESS) {\n    Dmsg1(debuglevel, \"PAM authentication failed: %s\\n\",\n          pam_strerror(pamh, err));\n    return err;\n  }\n\n#if defined(__sun)\n  void* data;\n#else\n  const void* data;\n#endif\n  err = pam_get_item(pamh, PAM_USER, &data);\n  if (err != PAM_SUCCESS) {\n    Dmsg1(debuglevel, \"PAM get_item failed: %s\\n\", pam_strerror(pamh, err));\n    return err;\n  } else {\n    if (data) { authenticated_username = static_cast<const char*>(data); }\n  }\n  return err;\n}",
  "diff_func": "@@ -182,6 +182,13 @@ static int DoPamAuth(struct pam_handle* pamh,\n     return err;\n   }\n \n+  err = pam_acct_mgmt(pamh, 0);\n+  if (err != PAM_SUCCESS) {\n+    Dmsg1(debuglevel, \"PAM authorization failed: %s\\n\",\n+          pam_strerror(pamh, err));\n+    return err;\n+  }\n+\n #if defined(__sun)\n   void* data;\n #else",
  "func": "static int DoPamAuth(struct pam_handle* pamh,\n                     const char* username,\n                     std::string& authenticated_username)\n{\n  int err = pam_set_item(pamh, PAM_RUSER, username);\n  if (err != PAM_SUCCESS) {\n    Dmsg1(debuglevel, \"PAM set_item failed: %s\\n\", pam_strerror(pamh, err));\n    return err;\n  }\n\n  err = pam_authenticate(pamh, 0);\n  if (err != PAM_SUCCESS) {\n    Dmsg1(debuglevel, \"PAM authentication failed: %s\\n\",\n          pam_strerror(pamh, err));\n    return err;\n  }\n\n#if defined(__sun)\n  void* data;\n#else\n  const void* data;\n#endif\n  err = pam_get_item(pamh, PAM_USER, &data);\n  if (err != PAM_SUCCESS) {\n    Dmsg1(debuglevel, \"PAM get_item failed: %s\\n\", pam_strerror(pamh, err));\n    return err;\n  } else {\n    if (data) { authenticated_username = static_cast<const char*>(data); }\n  }\n  return err;\n}",
  "project": "bareos",
  "hash": 303404528456224642824010820660072442794,
  "size": 31,
  "commit_id": "abe462037388635193f3b5b71575f32596c3b69d",
  "message": "dir: check account authorization during PAM login\n\nFixes CVE-2022-24755\n\nPreviously, when a user logged in via PAM, Bareos did only check for\nauthentication (i.e. the \"auth\" section in PAM). No authorization checks\nwere made (the \"account\" section in PAM). This patch now adds the proper\ncheck.\nThis will break existing PAM configuration!",
  "target": 1,
  "dataset": "other",
  "idx": 196682
}