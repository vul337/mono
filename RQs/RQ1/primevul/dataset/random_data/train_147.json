{
  "id": 147,
  "language": "unknown",
  "cwe": "CWE-399",
  "commit_url": "https://github.com/erikdahlstrom/freetype2/commit/8d22746c9e5af80ff4304aef440986403a5072e2",
  "commit_sha": "8d22746c9e5af80ff4304aef440986403a5072e2",
  "commit_msg": "Fix Savannah bug #30106.\n\nPoint numbers for FreeType's implementation of hinting masks are\ncollected before the final number of points of a glyph has been\ndetermined; in particular, the code for handling the `endchar'\nopcode can reduce the number of points.\n\n* src/pshinter/pshalgo.c (psh_glyph_find_strong_points): Assure that\n`end_point' is not larger than `glyph->num_points'.",
  "pr_url": null,
  "pr_info": null,
  "file_name": "ChangeLog",
  "func_name": "",
  "raw_func_from_json": "  psh_glyph_find_strong_points( PSH_Glyph  glyph,\n                                FT_Int     dimension )\n  {\n    /* a point is `strong' if it is located on a stem edge and       */\n    /* has an `in' or `out' tangent parallel to the hint's direction */\n\n    PSH_Hint_Table  table     = &glyph->hint_tables[dimension];\n    PS_Mask         mask      = table->hint_masks->masks;\n    FT_UInt         num_masks = table->hint_masks->num_masks;\n    FT_UInt         first     = 0;\n    FT_Int          major_dir = dimension == 0 ? PSH_DIR_VERTICAL\n                                               : PSH_DIR_HORIZONTAL;\n    PSH_Dimension   dim       = &glyph->globals->dimension[dimension];\n    FT_Fixed        scale     = dim->scale_mult;\n    FT_Int          threshold;\n\n\n    threshold = (FT_Int)FT_DivFix( PSH_STRONG_THRESHOLD, scale );\n    if ( threshold > PSH_STRONG_THRESHOLD_MAXIMUM )\n      threshold = PSH_STRONG_THRESHOLD_MAXIMUM;\n\n    /* process secondary hints to `selected' points */\n     /* process secondary hints to `selected' points */\n     if ( num_masks > 1 && glyph->num_points > 0 )\n     {\n      first = mask->end_point;\n       mask++;\n       for ( ; num_masks > 1; num_masks--, mask++ )\n       {\n        next  = mask->end_point;\n         FT_Int   count;\n \n \n        next  = mask->end_point;\n         count = next - first;\n         if ( count > 0 )\n         {\n                                             threshold, major_dir );\n        }\n        first = next;\n      }\n    }\n\n    /* process primary hints for all points */\n    if ( num_masks == 1 )\n    {\n      FT_UInt    count = glyph->num_points;\n      PSH_Point  point = glyph->points;\n\n\n      psh_hint_table_activate_mask( table, table->hint_masks->masks );\n\n      psh_hint_table_find_strong_points( table, point, count,\n                                         threshold, major_dir );\n    }\n\n    /* now, certain points may have been attached to a hint and */\n    /* not marked as strong; update their flags then            */\n    {\n      FT_UInt    count = glyph->num_points;\n      PSH_Point  point = glyph->points;\n\n\n      for ( ; count > 0; count--, point++ )\n        if ( point->hint && !psh_point_is_strong( point ) )\n          psh_point_set_strong( point );\n    }\n  }\n",
  "diff_func": "@@ -1,3 +1,15 @@\n+2010-06-11  Werner Lemberg  <wl@gnu.org>\n+\n+\tFix Savannah bug #30106.\n+\n+\tPoint numbers for FreeType's implementation of hinting masks are\n+\tcollected before the final number of points of a glyph has been\n+\tdetermined; in particular, the code for handling the `endchar'\n+\topcode can reduce the number of points.\n+\n+\t* src/pshinter/pshalgo.c (psh_glyph_find_strong_points): Assure that\n+\t`end_point' is not larger than `glyph->num_points'.\n+\n 2010-06-11  Werner Lemberg  <wl@gnu.org>\n \n \t[cff]: Improve debugging output.",
  "project": "savannah",
  "commit_id": "8d22746c9e5af80ff4304aef440986403a5072e2",
  "target": 1,
  "func": "  psh_glyph_find_strong_points( PSH_Glyph  glyph,\n                                FT_Int     dimension )\n  {\n    /* a point is `strong' if it is located on a stem edge and       */\n    /* has an `in' or `out' tangent parallel to the hint's direction */\n\n    PSH_Hint_Table  table     = &glyph->hint_tables[dimension];\n    PS_Mask         mask      = table->hint_masks->masks;\n    FT_UInt         num_masks = table->hint_masks->num_masks;\n    FT_UInt         first     = 0;\n    FT_Int          major_dir = dimension == 0 ? PSH_DIR_VERTICAL\n                                               : PSH_DIR_HORIZONTAL;\n    PSH_Dimension   dim       = &glyph->globals->dimension[dimension];\n    FT_Fixed        scale     = dim->scale_mult;\n    FT_Int          threshold;\n\n\n    threshold = (FT_Int)FT_DivFix( PSH_STRONG_THRESHOLD, scale );\n    if ( threshold > PSH_STRONG_THRESHOLD_MAXIMUM )\n      threshold = PSH_STRONG_THRESHOLD_MAXIMUM;\n\n    /* process secondary hints to `selected' points */\n     /* process secondary hints to `selected' points */\n     if ( num_masks > 1 && glyph->num_points > 0 )\n     {\n      first = mask->end_point;\n       mask++;\n       for ( ; num_masks > 1; num_masks--, mask++ )\n       {\n        next  = mask->end_point;\n         FT_Int   count;\n \n \n        next  = mask->end_point;\n         count = next - first;\n         if ( count > 0 )\n         {\n                                             threshold, major_dir );\n        }\n        first = next;\n      }\n    }\n\n    /* process primary hints for all points */\n    if ( num_masks == 1 )\n    {\n      FT_UInt    count = glyph->num_points;\n      PSH_Point  point = glyph->points;\n\n\n      psh_hint_table_activate_mask( table, table->hint_masks->masks );\n\n      psh_hint_table_find_strong_points( table, point, count,\n                                         threshold, major_dir );\n    }\n\n    /* now, certain points may have been attached to a hint and */\n    /* not marked as strong; update their flags then            */\n    {\n      FT_UInt    count = glyph->num_points;\n      PSH_Point  point = glyph->points;\n\n\n      for ( ; count > 0; count--, point++ )\n        if ( point->hint && !psh_point_is_strong( point ) )\n          psh_point_set_strong( point );\n    }\n  }\n",
  "big_vul_idx": 178179,
  "idx": 268,
  "hash": 238917502809110546701210284595052003786
}