{
  "id": 340,
  "language": "c",
  "cwe": "CWE-189",
  "commit_url": "https://github.com/ljalves/linux_media/commit/b963a22e6d1a266a67e9eecc88134713fd54775c",
  "commit_sha": "b963a22e6d1a266a67e9eecc88134713fd54775c",
  "commit_msg": "KVM: x86: Fix potential divide by 0 in lapic (CVE-2013-6367)\n\nUnder guest controllable circumstances apic_get_tmcct will execute a\ndivide by zero and cause a crash.  If the guest cpuid support\ntsc deadline timers and performs the following sequence of requests\nthe host will crash.\n- Set the mode to periodic\n- Set the TMICT to 0\n- Set the mode bits to 11 (neither periodic, nor one shot, nor tsc deadline)\n- Set the TMICT to non-zero.\nThen the lapic_timer.period will be 0, but the TMICT will not be.  If the\nguest then reads from the TMCCT then the host will perform a divide by 0.\n\nThis patch ensures that if the lapic_timer.period is 0, then the division\ndoes not occur.\n\nReported-by: Andrew Honig <ahonig@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Andrew Honig <ahonig@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "pr_url": null,
  "pr_info": null,
  "file_name": "arch/x86/kvm/lapic.c",
  "func_name": "",
  "raw_func_from_json": "static u32 apic_get_tmcct(struct kvm_lapic *apic)\n{\n\tktime_t remaining;\n\ts64 ns;\n\tu32 tmcct;\n\n \tASSERT(apic != NULL);\n \n \t/* if initial count is 0, current count should also be 0 */\n\tif (kvm_apic_get_reg(apic, APIC_TMICT) == 0)\n \t\treturn 0;\n \n \tremaining = hrtimer_get_remaining(&apic->lapic_timer.timer);\n\tif (ktime_to_ns(remaining) < 0)\n\t\tremaining = ktime_set(0, 0);\n\n\tns = mod_64(ktime_to_ns(remaining), apic->lapic_timer.period);\n\ttmcct = div64_u64(ns,\n\t\t\t (APIC_BUS_CYCLE_NS * apic->divide_count));\n\n\treturn tmcct;\n}\n",
  "diff_func": "@@ -841,7 +841,8 @@ static u32 apic_get_tmcct(struct kvm_lapic *apic)\n \tASSERT(apic != NULL);\n \n \t/* if initial count is 0, current count should also be 0 */\n-\tif (kvm_apic_get_reg(apic, APIC_TMICT) == 0)\n+\tif (kvm_apic_get_reg(apic, APIC_TMICT) == 0 ||\n+\t\tapic->lapic_timer.period == 0)\n \t\treturn 0;\n \n \tremaining = hrtimer_get_remaining(&apic->lapic_timer.timer);",
  "project": "linux",
  "commit_id": "b963a22e6d1a266a67e9eecc88134713fd54775c",
  "target": 1,
  "func": "static u32 apic_get_tmcct(struct kvm_lapic *apic)\n{\n\tktime_t remaining;\n\ts64 ns;\n\tu32 tmcct;\n\n \tASSERT(apic != NULL);\n \n \t/* if initial count is 0, current count should also be 0 */\n\tif (kvm_apic_get_reg(apic, APIC_TMICT) == 0)\n \t\treturn 0;\n \n \tremaining = hrtimer_get_remaining(&apic->lapic_timer.timer);\n\tif (ktime_to_ns(remaining) < 0)\n\t\tremaining = ktime_set(0, 0);\n\n\tns = mod_64(ktime_to_ns(remaining), apic->lapic_timer.period);\n\ttmcct = div64_u64(ns,\n\t\t\t (APIC_BUS_CYCLE_NS * apic->divide_count));\n\n\treturn tmcct;\n}\n",
  "big_vul_idx": 179123,
  "idx": 926,
  "hash": 154149295278805450375914164750424887763
}