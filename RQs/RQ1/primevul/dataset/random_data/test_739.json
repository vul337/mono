{
  "id": 739,
  "language": "cc",
  "cwe": "",
  "commit_url": "https://github.com/nle1990/openscad-mm/commit/b81369dffc3f385257a9b1f5c271118a88671d6d",
  "commit_sha": "b81369dffc3f385257a9b1f5c271118a88671d6d",
  "commit_msg": "Add file bounds check to comment parser",
  "pr_url": null,
  "pr_info": null,
  "file_name": "src/comment.cc",
  "func_name": "",
  "raw_func_from_json": "static std::string getComment(const std::string &fulltext, int line)\n{\n\tif (line < 1) return \"\";\n\n\t// Locate line\n\tunsigned int start = 0;\n\tfor (; start<fulltext.length() ; ++start) {\n\t\tif (line <= 1) break;\n\t\tif (fulltext[start] == '\\n') line--;\n\t}\n\n\tint end = start + 1;\n\twhile (fulltext[end] != '\\n') end++;\n\n\tstd::string comment = fulltext.substr(start, end - start);\n\n\t// Locate comment\n\tunsigned int startText = 0;\n\tint noOfSemicolon = 0;\n\tbool inString = false;\n\tfor (; startText < comment.length() - 1; ++startText) {\n\t\tif (inString && comment.compare(startText, 2, \"\\\\\\\"\") == 0) {\n\t\t\tstartText++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (comment[startText] == '\"') inString = !inString;\n\t\tif (!inString) {\n\t\t\tif (comment.compare(startText, 2, \"//\") == 0) break;\n\t\t\tif (comment[startText] == ';' && noOfSemicolon > 0) return \"\";\n\t\t\tif (comment[startText] == ';') noOfSemicolon++;\n\t\t}\n\t}\n\n\tif (startText + 2 > comment.length()) return \"\";\n\n\tstd::string result = comment.substr(startText + 2);\n\treturn result;\n}",
  "diff_func": "@@ -92,7 +92,7 @@ static std::string getComment(const std::string &fulltext, int line)\n \t}\n \n \tint end = start + 1;\n-\twhile (fulltext[end] != '\\n') end++;\n+\twhile (end < fulltext.size() && fulltext[end] != '\\n') end++;\n \n \tstd::string comment = fulltext.substr(start, end - start);\n ",
  "func": "static std::string getComment(const std::string &fulltext, int line)\n{\n\tif (line < 1) return \"\";\n\n\t// Locate line\n\tunsigned int start = 0;\n\tfor (; start<fulltext.length() ; ++start) {\n\t\tif (line <= 1) break;\n\t\tif (fulltext[start] == '\\n') line--;\n\t}\n\n\tint end = start + 1;\n\twhile (fulltext[end] != '\\n') end++;\n\n\tstd::string comment = fulltext.substr(start, end - start);\n\n\t// Locate comment\n\tunsigned int startText = 0;\n\tint noOfSemicolon = 0;\n\tbool inString = false;\n\tfor (; startText < comment.length() - 1; ++startText) {\n\t\tif (inString && comment.compare(startText, 2, \"\\\\\\\"\") == 0) {\n\t\t\tstartText++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (comment[startText] == '\"') inString = !inString;\n\t\tif (!inString) {\n\t\t\tif (comment.compare(startText, 2, \"//\") == 0) break;\n\t\t\tif (comment[startText] == ';' && noOfSemicolon > 0) return \"\";\n\t\t\tif (comment[startText] == ';') noOfSemicolon++;\n\t\t}\n\t}\n\n\tif (startText + 2 > comment.length()) return \"\";\n\n\tstd::string result = comment.substr(startText + 2);\n\treturn result;\n}",
  "project": "openscad",
  "hash": 313568077470000783177680974177297728787,
  "size": 38,
  "commit_id": "b81369dffc3f385257a9b1f5c271118a88671d6d",
  "message": "Add file bounds check to comment parser",
  "target": 1,
  "dataset": "other",
  "idx": 197891
}