{
  "id": 335,
  "language": "c",
  "cwe": "",
  "commit_url": "https://github.com/ljalves/linux_media/commit/cf970c002d270c36202bd5b9c2804d3097a52da0",
  "commit_sha": "cf970c002d270c36202bd5b9c2804d3097a52da0",
  "commit_msg": "ping: prevent NULL pointer dereference on write to msg_name\n\nA plain read() on a socket does set msg->msg_name to NULL. So check for\nNULL pointer first.\n\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "pr_url": null,
  "pr_info": null,
  "file_name": "net/ipv4/ping.c",
  "func_name": "",
  "raw_func_from_json": "int ping_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,\n\t\t size_t len, int noblock, int flags, int *addr_len)\n{\n\tstruct inet_sock *isk = inet_sk(sk);\n\tint family = sk->sk_family;\n\tstruct sk_buff *skb;\n\tint copied, err;\n\n\tpr_debug(\"ping_recvmsg(sk=%p,sk->num=%u)\\n\", isk, isk->inet_num);\n\n\terr = -EOPNOTSUPP;\n\tif (flags & MSG_OOB)\n\t\tgoto out;\n\n\tif (flags & MSG_ERRQUEUE) {\n\t\tif (family == AF_INET) {\n\t\t\treturn ip_recv_error(sk, msg, len);\n#if IS_ENABLED(CONFIG_IPV6)\n\t\t} else if (family == AF_INET6) {\n\t\t\treturn pingv6_ops.ipv6_recv_error(sk, msg, len);\n#endif\n\t\t}\n\t}\n\n\tskb = skb_recv_datagram(sk, flags, noblock, &err);\n\tif (!skb)\n\t\tgoto out;\n\n\tcopied = skb->len;\n\tif (copied > len) {\n\t\tmsg->msg_flags |= MSG_TRUNC;\n\t\tcopied = len;\n\t}\n\n\t/* Don't bother checking the checksum */\n\terr = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied);\n\tif (err)\n\t\tgoto done;\n\n\tsock_recv_timestamp(msg, sk, skb);\n\n\t/* Copy the address and add cmsg data. */\n \tif (family == AF_INET) {\n \t\tstruct sockaddr_in *sin = (struct sockaddr_in *)msg->msg_name;\n \n\t\tsin->sin_family = AF_INET;\n\t\tsin->sin_port = 0 /* skb->h.uh->source */;\n\t\tsin->sin_addr.s_addr = ip_hdr(skb)->saddr;\n\t\tmemset(sin->sin_zero, 0, sizeof(sin->sin_zero));\n\t\t*addr_len = sizeof(*sin);\n \n \t\tif (isk->cmsg_flags)\n \t\t\tip_cmsg_recv(msg, skb);\n\n#if IS_ENABLED(CONFIG_IPV6)\n\t} else if (family == AF_INET6) {\n\t\tstruct ipv6_pinfo *np = inet6_sk(sk);\n\t\tstruct ipv6hdr *ip6 = ipv6_hdr(skb);\n \t\tstruct sockaddr_in6 *sin6 =\n \t\t\t(struct sockaddr_in6 *)msg->msg_name;\n \n\t\tsin6->sin6_family = AF_INET6;\n\t\tsin6->sin6_port = 0;\n\t\tsin6->sin6_addr = ip6->saddr;\n\t\tsin6->sin6_flowinfo = 0;\n\t\tif (np->sndflow)\n\t\t\tsin6->sin6_flowinfo = ip6_flowinfo(ip6);\n\t\tsin6->sin6_scope_id = ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t\t  IP6CB(skb)->iif);\n\t\t*addr_len = sizeof(*sin6);\n \n \t\tif (inet6_sk(sk)->rxopt.all)\n \t\t\tpingv6_ops.ip6_datagram_recv_ctl(sk, msg, skb);\n#endif\n\t} else {\n\t\tBUG();\n\t}\n\n\terr = copied;\n\ndone:\n\tskb_free_datagram(sk, skb);\nout:\n\tpr_debug(\"ping_recvmsg -> %d\\n\", err);\n\treturn err;\n}\n",
  "diff_func": "@@ -870,11 +870,13 @@ int ping_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,\n \tif (family == AF_INET) {\n \t\tstruct sockaddr_in *sin = (struct sockaddr_in *)msg->msg_name;\n \n-\t\tsin->sin_family = AF_INET;\n-\t\tsin->sin_port = 0 /* skb->h.uh->source */;\n-\t\tsin->sin_addr.s_addr = ip_hdr(skb)->saddr;\n-\t\tmemset(sin->sin_zero, 0, sizeof(sin->sin_zero));\n-\t\t*addr_len = sizeof(*sin);\n+\t\tif (sin) {\n+\t\t\tsin->sin_family = AF_INET;\n+\t\t\tsin->sin_port = 0 /* skb->h.uh->source */;\n+\t\t\tsin->sin_addr.s_addr = ip_hdr(skb)->saddr;\n+\t\t\tmemset(sin->sin_zero, 0, sizeof(sin->sin_zero));\n+\t\t\t*addr_len = sizeof(*sin);\n+\t\t}\n \n \t\tif (isk->cmsg_flags)\n \t\t\tip_cmsg_recv(msg, skb);\n@@ -886,16 +888,18 @@ int ping_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,\n \t\tstruct sockaddr_in6 *sin6 =\n \t\t\t(struct sockaddr_in6 *)msg->msg_name;\n \n-\t\tsin6->sin6_family = AF_INET6;\n-\t\tsin6->sin6_port = 0;\n-\t\tsin6->sin6_addr = ip6->saddr;\n-\t\tsin6->sin6_flowinfo = 0;\n-\t\tif (np->sndflow)\n-\t\t\tsin6->sin6_flowinfo = ip6_flowinfo(ip6);\n-\n-\t\tsin6->sin6_scope_id = ipv6_iface_scope_id(&sin6->sin6_addr,\n-\t\t\t\t\t\t\t  IP6CB(skb)->iif);\n-\t\t*addr_len = sizeof(*sin6);\n+\t\tif (sin6) {\n+\t\t\tsin6->sin6_family = AF_INET6;\n+\t\t\tsin6->sin6_port = 0;\n+\t\t\tsin6->sin6_addr = ip6->saddr;\n+\t\t\tsin6->sin6_flowinfo = 0;\n+\t\t\tif (np->sndflow)\n+\t\t\t\tsin6->sin6_flowinfo = ip6_flowinfo(ip6);\n+\t\t\tsin6->sin6_scope_id =\n+\t\t\t\tipv6_iface_scope_id(&sin6->sin6_addr,\n+\t\t\t\t\t\t    IP6CB(skb)->iif);\n+\t\t\t*addr_len = sizeof(*sin6);\n+\t\t}\n \n \t\tif (inet6_sk(sk)->rxopt.all)\n \t\t\tpingv6_ops.ip6_datagram_recv_ctl(sk, msg, skb);",
  "project": "linux",
  "commit_id": "cf970c002d270c36202bd5b9c2804d3097a52da0",
  "target": 1,
  "func": "int ping_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,\n\t\t size_t len, int noblock, int flags, int *addr_len)\n{\n\tstruct inet_sock *isk = inet_sk(sk);\n\tint family = sk->sk_family;\n\tstruct sk_buff *skb;\n\tint copied, err;\n\n\tpr_debug(\"ping_recvmsg(sk=%p,sk->num=%u)\\n\", isk, isk->inet_num);\n\n\terr = -EOPNOTSUPP;\n\tif (flags & MSG_OOB)\n\t\tgoto out;\n\n\tif (flags & MSG_ERRQUEUE) {\n\t\tif (family == AF_INET) {\n\t\t\treturn ip_recv_error(sk, msg, len);\n#if IS_ENABLED(CONFIG_IPV6)\n\t\t} else if (family == AF_INET6) {\n\t\t\treturn pingv6_ops.ipv6_recv_error(sk, msg, len);\n#endif\n\t\t}\n\t}\n\n\tskb = skb_recv_datagram(sk, flags, noblock, &err);\n\tif (!skb)\n\t\tgoto out;\n\n\tcopied = skb->len;\n\tif (copied > len) {\n\t\tmsg->msg_flags |= MSG_TRUNC;\n\t\tcopied = len;\n\t}\n\n\t/* Don't bother checking the checksum */\n\terr = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied);\n\tif (err)\n\t\tgoto done;\n\n\tsock_recv_timestamp(msg, sk, skb);\n\n\t/* Copy the address and add cmsg data. */\n \tif (family == AF_INET) {\n \t\tstruct sockaddr_in *sin = (struct sockaddr_in *)msg->msg_name;\n \n\t\tsin->sin_family = AF_INET;\n\t\tsin->sin_port = 0 /* skb->h.uh->source */;\n\t\tsin->sin_addr.s_addr = ip_hdr(skb)->saddr;\n\t\tmemset(sin->sin_zero, 0, sizeof(sin->sin_zero));\n\t\t*addr_len = sizeof(*sin);\n \n \t\tif (isk->cmsg_flags)\n \t\t\tip_cmsg_recv(msg, skb);\n\n#if IS_ENABLED(CONFIG_IPV6)\n\t} else if (family == AF_INET6) {\n\t\tstruct ipv6_pinfo *np = inet6_sk(sk);\n\t\tstruct ipv6hdr *ip6 = ipv6_hdr(skb);\n \t\tstruct sockaddr_in6 *sin6 =\n \t\t\t(struct sockaddr_in6 *)msg->msg_name;\n \n\t\tsin6->sin6_family = AF_INET6;\n\t\tsin6->sin6_port = 0;\n\t\tsin6->sin6_addr = ip6->saddr;\n\t\tsin6->sin6_flowinfo = 0;\n\t\tif (np->sndflow)\n\t\t\tsin6->sin6_flowinfo = ip6_flowinfo(ip6);\n\t\tsin6->sin6_scope_id = ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t\t  IP6CB(skb)->iif);\n\t\t*addr_len = sizeof(*sin6);\n \n \t\tif (inet6_sk(sk)->rxopt.all)\n \t\t\tpingv6_ops.ip6_datagram_recv_ctl(sk, msg, skb);\n#endif\n\t} else {\n\t\tBUG();\n\t}\n\n\terr = copied;\n\ndone:\n\tskb_free_datagram(sk, skb);\nout:\n\tpr_debug(\"ping_recvmsg -> %d\\n\", err);\n\treturn err;\n}\n",
  "big_vul_idx": 179109,
  "idx": 914,
  "hash": 155904653362942953286680221498255008251
}