{
    "cve_id": "CVE-2021-31407",
    "cwe_ids": [
        "CWE-668"
    ],
    "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
    "cvss_is_v3": false,
    "repo_name": "vaadin/osgi",
    "commit_msg": "fix: avoid serving ServletContext resources by StaticFileServer\n\nfixes #50",
    "commit_hash": "0b82a606eeafdf56a129630f00b9c55a5177b64b",
    "git_url": "https://github.com/vaadin/osgi/commit/0b82a606eeafdf56a129630f00b9c55a5177b64b",
    "file_path": "flow-osgi/src/main/java/com/vaadin/flow/osgi/support/servlet/OSGiVaadinServlet.java",
    "func_name": "handleDestroy",
    "func_before": "private Set<Servlet> handleDestroy(Lookup lookup,\n            ServiceReference<?> reference) {\n        Set<Servlet> servlets = new HashSet<>();\n        Bundle[] usingBundles = reference.getUsingBundles();\n        for (Bundle bundle : usingBundles) {\n            Servlet servlet = (Servlet) bundle.getBundleContext()\n                    .getService(reference);\n            if (servlet instanceof OSGiVaadinServlet) {\n                ServletContext servletContext = ((VaadinServlet) servlet)\n                        .getServletContext();\n                Lookup servletLookup = new VaadinServletContext(servletContext)\n                        .getAttribute(Lookup.class);\n                if (servletLookup == lookup) {\n                    servlets.add(servlet);\n                }\n            }\n        }\n        return servlets;\n    }",
    "abstract_func_before": "private Set<Servlet> handleDestroy(Lookup VAR_0,\n            ServiceReference<?> VAR_1) {\n        Set<Servlet> VAR_2 = new HashSet<>();\n        Bundle[] VAR_3 = VAR_1.getUsingBundles();\n        for (Bundle VAR_4 : VAR_3) {\n            Servlet VAR_5 = (Servlet) VAR_4.getBundleContext()\n                    .getService(VAR_1);\n            if (VAR_5 instanceof OSGiVaadinServlet) {\n                ServletContext VAR_6 = ((VaadinServlet) VAR_5)\n                        .getServletContext();\n                Lookup VAR_7 = new VaadinServletContext(VAR_6)\n                        .getAttribute(Lookup.class);\n                if (VAR_7 == VAR_0) {\n                    VAR_2.add(VAR_5);\n                }\n            }\n        }\n        return VAR_2;\n    }",
    "func_graph_path_before": "vaadin/osgi/0b82a606eeafdf56a129630f00b9c55a5177b64b/OSGiVaadinServlet.java/vul/before/1.json",
    "func": "private Set<Servlet> handleDestroy(Lookup lookup,\n            ServiceReference<?> reference) {\n        Set<Servlet> servlets = new HashSet<>();\n        Bundle[] usingBundles = reference.getUsingBundles();\n        usingBundles = usingBundles == null ? new Bundle[0] : usingBundles;\n        for (Bundle bundle : usingBundles) {\n            Servlet servlet = (Servlet) bundle.getBundleContext()\n                    .getService(reference);\n            if (servlet instanceof OSGiVaadinServlet) {\n                ServletContext servletContext = ((VaadinServlet) servlet)\n                        .getServletContext();\n                Lookup servletLookup = new VaadinServletContext(servletContext)\n                        .getAttribute(Lookup.class);\n                if (servletLookup == lookup) {\n                    servlets.add(servlet);\n                }\n            }\n        }\n        return servlets;\n    }",
    "abstract_func": "private Set<Servlet> handleDestroy(Lookup VAR_0,\n            ServiceReference<?> VAR_1) {\n        Set<Servlet> VAR_2 = new HashSet<>();\n        Bundle[] VAR_3 = VAR_1.getUsingBundles();\n        VAR_3 = VAR_3 == null ? new Bundle[0] : VAR_3;\n        for (Bundle VAR_4 : VAR_3) {\n            Servlet VAR_5 = (Servlet) VAR_4.getBundleContext()\n                    .getService(VAR_1);\n            if (VAR_5 instanceof OSGiVaadinServlet) {\n                ServletContext VAR_6 = ((VaadinServlet) VAR_5)\n                        .getServletContext();\n                Lookup VAR_7 = new VaadinServletContext(VAR_6)\n                        .getAttribute(Lookup.class);\n                if (VAR_7 == VAR_0) {\n                    VAR_2.add(VAR_5);\n                }\n            }\n        }\n        return VAR_2;\n    }",
    "func_graph_path": "vaadin/osgi/0b82a606eeafdf56a129630f00b9c55a5177b64b/OSGiVaadinServlet.java/vul/after/1.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -2,6 +2,7 @@\n             ServiceReference<?> reference) {\n         Set<Servlet> servlets = new HashSet<>();\n         Bundle[] usingBundles = reference.getUsingBundles();\n+        usingBundles = usingBundles == null ? new Bundle[0] : usingBundles;\n         for (Bundle bundle : usingBundles) {\n             Servlet servlet = (Servlet) bundle.getBundleContext()\n                     .getService(reference);",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "        usingBundles = usingBundles == null ? new Bundle[0] : usingBundles;"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/vaadin/osgi/pull/51",
    "description": "fixes #50"
}