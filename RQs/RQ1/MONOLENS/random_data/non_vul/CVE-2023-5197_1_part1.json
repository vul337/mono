{
    "cve_id": "CVE-2023-5197",
    "cwe_ids": [
        "CWE-416"
    ],
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:H",
    "cvss_is_v3": true,
    "repo_name": "torvalds/linux",
    "commit_msg": "Chain binding only requires the rule addition/insertion command within\nthe same transaction. Removal of rules from chain bindings within the\nsame transaction makes no sense, userspace does not utilize this\nfeature. Replace nft_chain_is_bound() check to nft_chain_binding() in\nrule deletion commands. Replace command implies a rule deletion, reject\nthis command too.\n\nRule flush command can also safely rely on this nft_chain_binding()\ncheck because unbound chains are not allowed since 62e1e94b246e\n(\"netfilter: nf_tables: reject unbound chain set before commit phase\").\n\nFixes: d0e2c7de92c7 (\"netfilter: nf_tables: add NFT_CHAIN_BINDING\")\nReported-by: Kevin Rich <kevinrich1337@gmail.com>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>\n",
    "commit_hash": "f15f29fd4779be8a418b66e9d52979bb6d6c2325",
    "git_url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?h=f15f29fd4779be8a418b66e9d52979bb6d6c2325",
    "file_path": "net/netfilter/nf_tables_api.c",
    "func_name": "nft_flush_table",
    "func_before": "static int nft_flush_table(struct nft_ctx *ctx)\n{\n\tstruct nft_flowtable *flowtable, *nft;\n\tstruct nft_chain *chain, *nc;\n\tstruct nft_object *obj, *ne;\n\tstruct nft_set *set, *ns;\n\tint err;\n\n\tlist_for_each_entry(chain, &ctx->table->chains, list) {\n\t\tif (!nft_is_active_next(ctx->net, chain))\n\t\t\tcontinue;\n\n\t\tif (nft_chain_is_bound(chain))\n\t\t\tcontinue;\n\n\t\tctx->chain = chain;\n\n\t\terr = nft_delrule_by_chain(ctx);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(set, ns, &ctx->table->sets, list) {\n\t\tif (!nft_is_active_next(ctx->net, set))\n\t\t\tcontinue;\n\n\t\tif (nft_set_is_anonymous(set) &&\n\t\t    !list_empty(&set->bindings))\n\t\t\tcontinue;\n\n\t\terr = nft_delset(ctx, set);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(flowtable, nft, &ctx->table->flowtables, list) {\n\t\tif (!nft_is_active_next(ctx->net, flowtable))\n\t\t\tcontinue;\n\n\t\terr = nft_delflowtable(ctx, flowtable);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(obj, ne, &ctx->table->objects, list) {\n\t\tif (!nft_is_active_next(ctx->net, obj))\n\t\t\tcontinue;\n\n\t\terr = nft_delobj(ctx, obj);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(chain, nc, &ctx->table->chains, list) {\n\t\tif (!nft_is_active_next(ctx->net, chain))\n\t\t\tcontinue;\n\n\t\tif (nft_chain_is_bound(chain))\n\t\t\tcontinue;\n\n\t\tctx->chain = chain;\n\n\t\terr = nft_delchain(ctx);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\terr = nft_deltable(ctx);\nout:\n\treturn err;\n}",
    "abstract_func_before": "static int nft_flush_table(struct nft_ctx *VAR_0)\n{\n\tstruct nft_flowtable *VAR_1, *VAR_2;\n\tstruct nft_chain *VAR_3, *VAR_4;\n\tstruct nft_object *VAR_5, *VAR_6;\n\tstruct nft_set *VAR_7, *VAR_8;\n\tint VAR_9;\n\n\tlist_for_each_entry(VAR_3, &VAR_0->table->chains, VAR_10) {\n\t\tif (!nft_is_active_next(VAR_0->net, VAR_3))\n\t\t\tcontinue;\n\n\t\tif (nft_chain_is_bound(VAR_3))\n\t\t\tcontinue;\n\n\t\tVAR_0->chain = VAR_3;\n\n\t\tVAR_9 = nft_delrule_by_chain(VAR_0);\n\t\tif (VAR_9 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_7, VAR_8, &VAR_0->table->sets, VAR_10) {\n\t\tif (!nft_is_active_next(VAR_0->net, VAR_7))\n\t\t\tcontinue;\n\n\t\tif (nft_set_is_anonymous(VAR_7) &&\n\t\t    !list_empty(&VAR_7->bindings))\n\t\t\tcontinue;\n\n\t\tVAR_9 = nft_delset(VAR_0, VAR_7);\n\t\tif (VAR_9 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_1, VAR_2, &VAR_0->table->flowtables, VAR_10) {\n\t\tif (!nft_is_active_next(VAR_0->net, VAR_1))\n\t\t\tcontinue;\n\n\t\tVAR_9 = nft_delflowtable(VAR_0, VAR_1);\n\t\tif (VAR_9 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_5, VAR_6, &VAR_0->table->objects, VAR_10) {\n\t\tif (!nft_is_active_next(VAR_0->net, VAR_5))\n\t\t\tcontinue;\n\n\t\tVAR_9 = nft_delobj(VAR_0, VAR_5);\n\t\tif (VAR_9 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_3, VAR_4, &VAR_0->table->chains, VAR_10) {\n\t\tif (!nft_is_active_next(VAR_0->net, VAR_3))\n\t\t\tcontinue;\n\n\t\tif (nft_chain_is_bound(VAR_3))\n\t\t\tcontinue;\n\n\t\tVAR_0->chain = VAR_3;\n\n\t\tVAR_9 = nft_delchain(VAR_0);\n\t\tif (VAR_9 < 0)\n\t\t\tgoto out;\n\t}\n\n\tVAR_9 = nft_deltable(VAR_0);\nout:\n\treturn VAR_9;\n}",
    "func_graph_path_before": "torvalds/linux/f15f29fd4779be8a418b66e9d52979bb6d6c2325/nf_tables_api.c/vul/before/2.json",
    "func": "static int nft_flush_table(struct nft_ctx *ctx)\n{\n\tstruct nft_flowtable *flowtable, *nft;\n\tstruct nft_chain *chain, *nc;\n\tstruct nft_object *obj, *ne;\n\tstruct nft_set *set, *ns;\n\tint err;\n\n\tlist_for_each_entry(chain, &ctx->table->chains, list) {\n\t\tif (!nft_is_active_next(ctx->net, chain))\n\t\t\tcontinue;\n\n\t\tif (nft_chain_binding(chain))\n\t\t\tcontinue;\n\n\t\tctx->chain = chain;\n\n\t\terr = nft_delrule_by_chain(ctx);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(set, ns, &ctx->table->sets, list) {\n\t\tif (!nft_is_active_next(ctx->net, set))\n\t\t\tcontinue;\n\n\t\tif (nft_set_is_anonymous(set) &&\n\t\t    !list_empty(&set->bindings))\n\t\t\tcontinue;\n\n\t\terr = nft_delset(ctx, set);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(flowtable, nft, &ctx->table->flowtables, list) {\n\t\tif (!nft_is_active_next(ctx->net, flowtable))\n\t\t\tcontinue;\n\n\t\terr = nft_delflowtable(ctx, flowtable);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(obj, ne, &ctx->table->objects, list) {\n\t\tif (!nft_is_active_next(ctx->net, obj))\n\t\t\tcontinue;\n\n\t\terr = nft_delobj(ctx, obj);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(chain, nc, &ctx->table->chains, list) {\n\t\tif (!nft_is_active_next(ctx->net, chain))\n\t\t\tcontinue;\n\n\t\tif (nft_chain_binding(chain))\n\t\t\tcontinue;\n\n\t\tctx->chain = chain;\n\n\t\terr = nft_delchain(ctx);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\terr = nft_deltable(ctx);\nout:\n\treturn err;\n}",
    "abstract_func": "static int nft_flush_table(struct nft_ctx *VAR_0)\n{\n\tstruct nft_flowtable *VAR_1, *VAR_2;\n\tstruct nft_chain *VAR_3, *VAR_4;\n\tstruct nft_object *VAR_5, *VAR_6;\n\tstruct nft_set *VAR_7, *VAR_8;\n\tint VAR_9;\n\n\tlist_for_each_entry(VAR_3, &VAR_0->table->chains, VAR_10) {\n\t\tif (!nft_is_active_next(VAR_0->net, VAR_3))\n\t\t\tcontinue;\n\n\t\tif (nft_chain_binding(VAR_3))\n\t\t\tcontinue;\n\n\t\tVAR_0->chain = VAR_3;\n\n\t\tVAR_9 = nft_delrule_by_chain(VAR_0);\n\t\tif (VAR_9 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_7, VAR_8, &VAR_0->table->sets, VAR_10) {\n\t\tif (!nft_is_active_next(VAR_0->net, VAR_7))\n\t\t\tcontinue;\n\n\t\tif (nft_set_is_anonymous(VAR_7) &&\n\t\t    !list_empty(&VAR_7->bindings))\n\t\t\tcontinue;\n\n\t\tVAR_9 = nft_delset(VAR_0, VAR_7);\n\t\tif (VAR_9 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_1, VAR_2, &VAR_0->table->flowtables, VAR_10) {\n\t\tif (!nft_is_active_next(VAR_0->net, VAR_1))\n\t\t\tcontinue;\n\n\t\tVAR_9 = nft_delflowtable(VAR_0, VAR_1);\n\t\tif (VAR_9 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_5, VAR_6, &VAR_0->table->objects, VAR_10) {\n\t\tif (!nft_is_active_next(VAR_0->net, VAR_5))\n\t\t\tcontinue;\n\n\t\tVAR_9 = nft_delobj(VAR_0, VAR_5);\n\t\tif (VAR_9 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_3, VAR_4, &VAR_0->table->chains, VAR_10) {\n\t\tif (!nft_is_active_next(VAR_0->net, VAR_3))\n\t\t\tcontinue;\n\n\t\tif (nft_chain_binding(VAR_3))\n\t\t\tcontinue;\n\n\t\tVAR_0->chain = VAR_3;\n\n\t\tVAR_9 = nft_delchain(VAR_0);\n\t\tif (VAR_9 < 0)\n\t\t\tgoto out;\n\t}\n\n\tVAR_9 = nft_deltable(VAR_0);\nout:\n\treturn VAR_9;\n}",
    "func_graph_path": "torvalds/linux/f15f29fd4779be8a418b66e9d52979bb6d6c2325/nf_tables_api.c/vul/after/2.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -10,7 +10,7 @@\n \t\tif (!nft_is_active_next(ctx->net, chain))\n \t\t\tcontinue;\n \n-\t\tif (nft_chain_is_bound(chain))\n+\t\tif (nft_chain_binding(chain))\n \t\t\tcontinue;\n \n \t\tctx->chain = chain;\n@@ -55,7 +55,7 @@\n \t\tif (!nft_is_active_next(ctx->net, chain))\n \t\t\tcontinue;\n \n-\t\tif (nft_chain_is_bound(chain))\n+\t\tif (nft_chain_binding(chain))\n \t\t\tcontinue;\n \n \t\tctx->chain = chain;",
    "diff_line_info": {
        "deleted_lines": [
            "\t\tif (nft_chain_is_bound(chain))",
            "\t\tif (nft_chain_is_bound(chain))"
        ],
        "added_lines": [
            "\t\tif (nft_chain_binding(chain))",
            "\t\tif (nft_chain_binding(chain))"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}