{
    "cve_id": "CVE-2023-35925",
    "cwe_ids": [
        "CWE-400"
    ],
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "cvss_is_v3": true,
    "repo_name": "IntellectualSites/FastAsyncWorldEdit",
    "commit_msg": "feat: prevent edits outside +/- 30,000,000 blocks",
    "commit_hash": "3a8dfb4f7b858a439c35f7af1d56d21f796f61f5",
    "git_url": "https://github.com/IntellectualSites/FastAsyncWorldEdit/commit/3a8dfb4f7b858a439c35f7af1d56d21f796f61f5",
    "file_path": "worldedit-bukkit/src/main/java/com/sk89q/worldedit/bukkit/BukkitWorld.java",
    "func_name": "getBlock",
    "func_before": "@Override\n    public com.sk89q.worldedit.world.block.BlockState getBlock(BlockVector3 position) {\n        BukkitImplAdapter adapter = WorldEditPlugin.getInstance().getBukkitImplAdapter();\n        if (adapter != null) {\n            try {\n                return adapter.getBlock(BukkitAdapter.adapt(getWorld(), position)).toImmutableState();\n            } catch (Exception e) {\n                if (!hasWarnedImplError) {\n                    hasWarnedImplError = true;\n                    LOGGER.warn(\"Unable to retrieve block via impl adapter\", e);\n                }\n            }\n        }\n        if (WorldEditPlugin.getInstance().getLocalConfiguration().unsupportedVersionEditing) {\n            Block bukkitBlock = getWorld().getBlockAt(position.getBlockX(), position.getBlockY(), position.getBlockZ());\n            return BukkitAdapter.adapt(bukkitBlock.getBlockData());\n        } else {\n            throw new RuntimeException(new UnsupportedVersionEditException());\n        }\n    }",
    "abstract_func_before": "@Override\n    public com.sk89q.worldedit.world.block.BlockState getBlock(BlockVector3 VAR_0) {\n        BukkitImplAdapter VAR_1 = VAR_2.getInstance().getBukkitImplAdapter();\n        if (VAR_1 != null) {\n            try {\n                return VAR_1.getBlock(VAR_3.adapt(getWorld(), VAR_0)).toImmutableState();\n            } catch (Exception VAR_4) {\n                if (!VAR_5) {\n                    VAR_5 = true;\n                    VAR_6.warn(\"Unable to retrieve block via impl adapter\", VAR_4);\n                }\n            }\n        }\n        if (VAR_2.getInstance().getLocalConfiguration().unsupportedVersionEditing) {\n            Block VAR_7 = getWorld().getBlockAt(VAR_0.getBlockX(), VAR_0.getBlockY(), VAR_0.getBlockZ());\n            return VAR_3.adapt(VAR_7.getBlockData());\n        } else {\n            throw new RuntimeException(new UnsupportedVersionEditException());\n        }\n    }",
    "func_graph_path_before": "IntellectualSites/FastAsyncWorldEdit/3a8dfb4f7b858a439c35f7af1d56d21f796f61f5/BukkitWorld.java/vul/before/8.json",
    "func": "@Override\n    public com.sk89q.worldedit.world.block.BlockState getBlock(BlockVector3 position) {\n        //FAWE start - safe edit region\n        testCoords(position);\n        //FAWE end\n        BukkitImplAdapter adapter = WorldEditPlugin.getInstance().getBukkitImplAdapter();\n        if (adapter != null) {\n            try {\n                return adapter.getBlock(BukkitAdapter.adapt(getWorld(), position)).toImmutableState();\n            } catch (Exception e) {\n                if (!hasWarnedImplError) {\n                    hasWarnedImplError = true;\n                    LOGGER.warn(\"Unable to retrieve block via impl adapter\", e);\n                }\n            }\n        }\n        if (WorldEditPlugin.getInstance().getLocalConfiguration().unsupportedVersionEditing) {\n            Block bukkitBlock = getWorld().getBlockAt(position.getBlockX(), position.getBlockY(), position.getBlockZ());\n            return BukkitAdapter.adapt(bukkitBlock.getBlockData());\n        } else {\n            throw new RuntimeException(new UnsupportedVersionEditException());\n        }\n    }",
    "abstract_func": "@Override\n    public com.sk89q.worldedit.world.block.BlockState getBlock(BlockVector3 VAR_0) {\n        /* COMMENT_0 */\n        testCoords(VAR_0);\n        /* COMMENT_1 */\n        BukkitImplAdapter VAR_1 = VAR_2.getInstance().getBukkitImplAdapter();\n        if (VAR_1 != null) {\n            try {\n                return VAR_1.getBlock(VAR_3.adapt(getWorld(), VAR_0)).toImmutableState();\n            } catch (Exception VAR_4) {\n                if (!VAR_5) {\n                    VAR_5 = true;\n                    VAR_6.warn(\"Unable to retrieve block via impl adapter\", VAR_4);\n                }\n            }\n        }\n        if (VAR_2.getInstance().getLocalConfiguration().unsupportedVersionEditing) {\n            Block VAR_7 = getWorld().getBlockAt(VAR_0.getBlockX(), VAR_0.getBlockY(), VAR_0.getBlockZ());\n            return VAR_3.adapt(VAR_7.getBlockData());\n        } else {\n            throw new RuntimeException(new UnsupportedVersionEditException());\n        }\n    }",
    "func_graph_path": "IntellectualSites/FastAsyncWorldEdit/3a8dfb4f7b858a439c35f7af1d56d21f796f61f5/BukkitWorld.java/vul/after/8.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,8 @@\n @Override\n     public com.sk89q.worldedit.world.block.BlockState getBlock(BlockVector3 position) {\n+        //FAWE start - safe edit region\n+        testCoords(position);\n+        //FAWE end\n         BukkitImplAdapter adapter = WorldEditPlugin.getInstance().getBukkitImplAdapter();\n         if (adapter != null) {\n             try {",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "        //FAWE start - safe edit region",
            "        testCoords(position);",
            "        //FAWE end"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/IntellectualSites/FastAsyncWorldEdit/pull/2285",
    "description": "no more info"
}