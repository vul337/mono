{
    "cve_id": "CVE-2018-19788",
    "cwe_ids": [
        "CWE-20"
    ],
    "cvss_vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C",
    "cvss_is_v3": false,
    "repo_name": "polkit",
    "commit_msg": "(uid_t) -1 is still used as placeholder to mean \"unset\". This is OK, since\nthere should be no users with such number, see\nhttps://systemd.io/UIDS-GIDS#special-linux-uids.\n\n(uid_t) -1 is used as the default value in class initialization.\n\nWhen a user or group above INT32_MAX is created, the numeric uid or\ngid wraps around to negative when the value is assigned to gint, and\npolkit gets confused. Let's accept such gids, except for -1.\n\nA nicer fix would be to change the underlying type to e.g. uint32 to\nnot have negative values. But this cannot be done without breaking the\nAPI, so likely new functions will have to be added (a\npolkit_unix_user_new variant that takes a unsigned, and the same for\n_group_new, _set_uid, _get_uid, _set_gid, _get_gid, etc.). This will\nrequire a bigger patch.\n\nFixes https://gitlab.freedesktop.org/polkit/polkit/issues/74.\n",
    "commit_hash": "2cb40c4d5feeaa09325522bd7d97910f1b59e379",
    "git_url": "https://cgit.freedesktop.org/polkit/commit/?id=2cb40c4d5feeaa09325522bd7d97910f1b59e379",
    "file_path": "src/polkit/polkitunixuser.c",
    "func_name": "polkit_unix_user_set_property",
    "func_before": "static void\npolkit_unix_user_set_property (GObject      *object,\n                               guint         prop_id,\n                               const GValue *value,\n                               GParamSpec   *pspec)\n{\n  PolkitUnixUser *unix_user = POLKIT_UNIX_USER (object);\n\n  switch (prop_id)\n    {\n    case PROP_UID:\n      unix_user->uid = g_value_get_int (value);\n      break;\n\n    default:\n      G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);\n      break;\n    }\n}",
    "abstract_func_before": "static void\npolkit_unix_user_set_property (GObject      *VAR_0,\n                               guint         VAR_1,\n                               const GValue *VAR_2,\n                               GParamSpec   *VAR_3)\n{\n  PolkitUnixUser *VAR_4 = POLKIT_UNIX_USER (VAR_0);\n\n  switch (VAR_1)\n    {\n    case VAR_5:\n      VAR_4->uid = g_value_get_int (VAR_2);\n      break;\n\n    default:\n      G_OBJECT_WARN_INVALID_PROPERTY_ID (VAR_0, VAR_1, VAR_3);\n      break;\n    }\n}",
    "func_graph_path_before": "polkit/2cb40c4d5feeaa09325522bd7d97910f1b59e379/polkitunixuser.c/vul/before/2.json",
    "func": "static void\npolkit_unix_user_set_property (GObject      *object,\n                               guint         prop_id,\n                               const GValue *value,\n                               GParamSpec   *pspec)\n{\n  PolkitUnixUser *unix_user = POLKIT_UNIX_USER (object);\n  gint val;\n\n  switch (prop_id)\n    {\n    case PROP_UID:\n      val = g_value_get_int (value);\n      g_return_if_fail (val != -1);\n      unix_user->uid = val;\n      break;\n\n    default:\n      G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);\n      break;\n    }\n}",
    "abstract_func": "static void\npolkit_unix_user_set_property (GObject      *VAR_0,\n                               guint         VAR_1,\n                               const GValue *VAR_2,\n                               GParamSpec   *VAR_3)\n{\n  PolkitUnixUser *VAR_4 = POLKIT_UNIX_USER (VAR_0);\n  gint VAR_5;\n\n  switch (VAR_1)\n    {\n    case VAR_6:\n      VAR_5 = g_value_get_int (VAR_2);\n      g_return_if_fail (VAR_5 != -1);\n      VAR_4->uid = VAR_5;\n      break;\n\n    default:\n      G_OBJECT_WARN_INVALID_PROPERTY_ID (VAR_0, VAR_1, VAR_3);\n      break;\n    }\n}",
    "func_graph_path": "polkit/2cb40c4d5feeaa09325522bd7d97910f1b59e379/polkitunixuser.c/vul/after/2.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -5,11 +5,14 @@\n                                GParamSpec   *pspec)\n {\n   PolkitUnixUser *unix_user = POLKIT_UNIX_USER (object);\n+  gint val;\n \n   switch (prop_id)\n     {\n     case PROP_UID:\n-      unix_user->uid = g_value_get_int (value);\n+      val = g_value_get_int (value);\n+      g_return_if_fail (val != -1);\n+      unix_user->uid = val;\n       break;\n \n     default:",
    "diff_line_info": {
        "deleted_lines": [
            "      unix_user->uid = g_value_get_int (value);"
        ],
        "added_lines": [
            "  gint val;",
            "      val = g_value_get_int (value);",
            "      g_return_if_fail (val != -1);",
            "      unix_user->uid = val;"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}