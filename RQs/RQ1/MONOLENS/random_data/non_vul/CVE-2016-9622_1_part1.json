{
    "cve_id": "CVE-2016-9622",
    "cwe_ids": [
        "CWE-476"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
    "cvss_is_v3": false,
    "repo_name": "tats/w3m",
    "commit_msg": "Prevent null pointer dereference in HTMLlineproc2body\n\nBug-Debian: https://github.com/tats/w3m/issues/32",
    "commit_hash": "c6c39973e7d336854e9a2d43119d1220b36e2035",
    "git_url": "https://github.com/tats/w3m/commit/c6c39973e7d336854e9a2d43119d1220b36e2035",
    "file_path": "file.c",
    "func_name": "HTMLlineproc2body",
    "func_before": "static void\nHTMLlineproc2body(Buffer *buf, Str (*feed) (), int llimit)\n{\n    static char *outc = NULL;\n    static Lineprop *outp = NULL;\n    static int out_size = 0;\n    Anchor *a_href = NULL, *a_img = NULL, *a_form = NULL;\n    char *p, *q, *r, *s, *t, *str;\n    Lineprop mode, effect, ex_effect;\n    int pos;\n    int nlines;\n#ifdef DEBUG\n    FILE *debug = NULL;\n#endif\n    struct frameset *frameset_s[FRAMESTACK_SIZE];\n    int frameset_sp = -1;\n    union frameset_element *idFrame = NULL;\n    char *id = NULL;\n    int hseq, form_id;\n    Str line;\n    char *endp;\n    char symbol = '\\0';\n    int internal = 0;\n    Anchor **a_textarea = NULL;\n#ifdef MENU_SELECT\n    Anchor **a_select = NULL;\n#endif\n#if defined(USE_M17N) || defined(USE_IMAGE)\n    ParsedURL *base = baseURL(buf);\n#endif\n#ifdef USE_M17N\n    wc_ces name_charset = url_to_charset(NULL, &buf->currentURL,\n\t\t\t\t\t buf->document_charset);\n#endif\n\n    if (out_size == 0) {\n\tout_size = LINELEN;\n\toutc = NewAtom_N(char, out_size);\n\toutp = NewAtom_N(Lineprop, out_size);\n    }\n\n    n_textarea = -1;\n    if (!max_textarea) {\t/* halfload */\n\tmax_textarea = MAX_TEXTAREA;\n\ttextarea_str = New_N(Str, max_textarea);\n\ta_textarea = New_N(Anchor *, max_textarea);\n    }\n#ifdef MENU_SELECT\n    n_select = -1;\n    if (!max_select) {\t\t/* halfload */\n\tmax_select = MAX_SELECT;\n\tselect_option = New_N(FormSelectOption, max_select);\n\ta_select = New_N(Anchor *, max_select);\n    }\n#endif\n\n#ifdef DEBUG\n    if (w3m_debug)\n\tdebug = fopen(\"zzzerr\", \"a\");\n#endif\n\n    effect = 0;\n    ex_effect = 0;\n    nlines = 0;\n    while ((line = feed()) != NULL) {\n#ifdef DEBUG\n\tif (w3m_debug) {\n\t    Strfputs(line, debug);\n\t    fputc('\\n', debug);\n\t}\n#endif\n\tif (n_textarea >= 0 && *(line->ptr) != '<') {\t/* halfload */\n\t    Strcat(textarea_str[n_textarea], line);\n\t    continue;\n\t}\n      proc_again:\n\tif (++nlines == llimit)\n\t    break;\n\tpos = 0;\n#ifdef ENABLE_REMOVE_TRAILINGSPACES\n\tStrremovetrailingspaces(line);\n#endif\n\tstr = line->ptr;\n\tendp = str + line->length;\n\twhile (str < endp) {\n\t    PSIZE;\n\t    mode = get_mctype(str);\n\t    if ((effect | ex_efct(ex_effect)) & PC_SYMBOL && *str != '<') {\n#ifdef USE_M17N\n\t\tchar **buf = set_symbol(symbol_width0);\n\t\tint len;\n\n\t\tp = buf[(int)symbol];\n\t\tlen = get_mclen(p);\n\t\tmode = get_mctype(p);\n\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(p++));\n\t\tif (--len) {\n\t\t    mode = (mode & ~PC_WCHAR1) | PC_WCHAR2;\n\t\t    while (len--) {\n\t\t\tPSIZE;\n\t\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(p++));\n\t\t    }\n\t\t}\n#else\n\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), SYMBOL_BASE + symbol);\n#endif\n\t\tstr += symbol_width;\n\t    }\n#ifdef USE_M17N\n\t    else if (mode == PC_CTRL || mode == PC_UNDEF) {\n#else\n\t    else if (mode == PC_CTRL || IS_INTSPACE(*str)) {\n#endif\n\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\tstr++;\n\t    }\n#ifdef USE_M17N\n\t    else if (mode & PC_UNKNOWN) {\n\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\tstr += get_mclen(str);\n\t    }\n#endif\n\t    else if (*str != '<' && *str != '&') {\n#ifdef USE_M17N\n\t\tint len = get_mclen(str);\n#endif\n\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(str++));\n#ifdef USE_M17N\n\t\tif (--len) {\n\t\t    mode = (mode & ~PC_WCHAR1) | PC_WCHAR2;\n\t\t    while (len--) {\n\t\t\tPSIZE;\n\t\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(str++));\n\t\t    }\n\t\t}\n#endif\n\t    }\n\t    else if (*str == '&') {\n\t\t/* \n\t\t * & escape processing\n\t\t */\n\t\tp = getescapecmd(&str);\n\t\twhile (*p) {\n\t\t    PSIZE;\n\t\t    mode = get_mctype((unsigned char *)p);\n#ifdef USE_M17N\n\t\t    if (mode == PC_CTRL || mode == PC_UNDEF) {\n#else\n\t\t    if (mode == PC_CTRL || IS_INTSPACE(*str)) {\n#endif\n\t\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\t\tp++;\n\t\t    }\n#ifdef USE_M17N\n\t\t    else if (mode & PC_UNKNOWN) {\n\t\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\t\tp += get_mclen(p);\n\t\t    }\n#endif\n\t\t    else {\n#ifdef USE_M17N\n\t\t\tint len = get_mclen(p);\n#endif\n\t\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(p++));\n#ifdef USE_M17N\n\t\t\tif (--len) {\n\t\t\t    mode = (mode & ~PC_WCHAR1) | PC_WCHAR2;\n\t\t\t    while (len--) {\n\t\t\t\tPSIZE;\n\t\t\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(p++));\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t    }\n\t\t}\n\t    }\n\t    else {\n\t\t/* tag processing */\n\t\tstruct parsed_tag *tag;\n\t\tif (!(tag = parse_tag(&str, TRUE)))\n\t\t    continue;\n\t\tswitch (tag->tagid) {\n\t\tcase HTML_B:\n\t\t    effect |= PE_BOLD;\n\t\t    break;\n\t\tcase HTML_N_B:\n\t\t    effect &= ~PE_BOLD;\n\t\t    break;\n\t\tcase HTML_I:\n\t\t    ex_effect |= PE_EX_ITALIC;\n\t\t    break;\n\t\tcase HTML_N_I:\n\t\t    ex_effect &= ~PE_EX_ITALIC;\n\t\t    break;\n\t\tcase HTML_INS:\n\t\t    ex_effect |= PE_EX_INSERT;\n\t\t    break;\n\t\tcase HTML_N_INS:\n\t\t    ex_effect &= ~PE_EX_INSERT;\n\t\t    break;\n\t\tcase HTML_U:\n\t\t    effect |= PE_UNDER;\n\t\t    break;\n\t\tcase HTML_N_U:\n\t\t    effect &= ~PE_UNDER;\n\t\t    break;\n\t\tcase HTML_S:\n\t\t    ex_effect |= PE_EX_STRIKE;\n\t\t    break;\n\t\tcase HTML_N_S:\n\t\t    ex_effect &= ~PE_EX_STRIKE;\n\t\t    break;\n\t\tcase HTML_A:\n\t\t    if (renderFrameSet &&\n\t\t\tparsedtag_get_value(tag, ATTR_FRAMENAME, &p)) {\n\t\t\tp = url_quote_conv(p, buf->document_charset);\n\t\t\tif (!idFrame || strcmp(idFrame->body->name, p)) {\n\t\t\t    idFrame = search_frame(renderFrameSet, p);\n\t\t\t    if (idFrame && idFrame->body->attr != F_BODY)\n\t\t\t\tidFrame = NULL;\n\t\t\t}\n\t\t    }\n\t\t    p = r = s = NULL;\n\t\t    q = buf->baseTarget;\n\t\t    t = \"\";\n\t\t    hseq = 0;\n\t\t    id = NULL;\n\t\t    if (parsedtag_get_value(tag, ATTR_NAME, &id)) {\n\t\t\tid = url_quote_conv(id, name_charset);\n\t\t\tregisterName(buf, id, currentLn(buf), pos);\n\t\t    }\n\t\t    if (parsedtag_get_value(tag, ATTR_HREF, &p))\n\t\t\tp = url_encode(remove_space(p), base,\n\t\t\t\t       buf->document_charset);\n\t\t    if (parsedtag_get_value(tag, ATTR_TARGET, &q))\n\t\t\tq = url_quote_conv(q, buf->document_charset);\n\t\t    if (parsedtag_get_value(tag, ATTR_REFERER, &r))\n\t\t\tr = url_encode(r, base,\n\t\t\t\t       buf->document_charset);\n\t\t    parsedtag_get_value(tag, ATTR_TITLE, &s);\n\t\t    parsedtag_get_value(tag, ATTR_ACCESSKEY, &t);\n\t\t    parsedtag_get_value(tag, ATTR_HSEQ, &hseq);\n\t\t    if (hseq > 0)\n\t\t\tbuf->hmarklist =\n\t\t\t    putHmarker(buf->hmarklist, currentLn(buf),\n\t\t\t\t       pos, hseq - 1);\n\t\t    else if (hseq < 0) {\n\t\t\tint h = -hseq - 1;\n\t\t\tif (buf->hmarklist &&\n\t\t\t    h < buf->hmarklist->nmark &&\n\t\t\t    buf->hmarklist->marks[h].invalid) {\n\t\t\t    buf->hmarklist->marks[h].pos = pos;\n\t\t\t    buf->hmarklist->marks[h].line = currentLn(buf);\n\t\t\t    buf->hmarklist->marks[h].invalid = 0;\n\t\t\t    hseq = -hseq;\n\t\t\t}\n\t\t    }\n\t\t    if (id && idFrame)\n\t\t\tidFrame->body->nameList =\n\t\t\t    putAnchor(idFrame->body->nameList, id, NULL,\n\t\t\t\t      (Anchor **)NULL, NULL, NULL, '\\0',\n\t\t\t\t      currentLn(buf), pos);\n\t\t    if (p) {\n\t\t\teffect |= PE_ANCHOR;\n\t\t\ta_href = registerHref(buf, p, q, r, s,\n\t\t\t\t\t      *t, currentLn(buf), pos);\n\t\t\ta_href->hseq = ((hseq > 0) ? hseq : -hseq) - 1;\n\t\t\ta_href->slave = (hseq > 0) ? FALSE : TRUE;\n\t\t    }\n\t\t    break;\n\t\tcase HTML_N_A:\n\t\t    effect &= ~PE_ANCHOR;\n\t\t    if (a_href) {\n\t\t\ta_href->end.line = currentLn(buf);\n\t\t\ta_href->end.pos = pos;\n\t\t\tif (a_href->start.line == a_href->end.line &&\n\t\t\t    a_href->start.pos == a_href->end.pos) {\n\t\t\t    if (buf->hmarklist &&\n\t\t\t\ta_href->hseq < buf->hmarklist->nmark)\n\t\t\t\tbuf->hmarklist->marks[a_href->hseq].invalid = 1;\n\t\t\t    a_href->hseq = -1;\n\t\t\t}\n\t\t\ta_href = NULL;\n\t\t    }\n\t\t    break;\n\n\t\tcase HTML_LINK:\n\t\t    addLink(buf, tag);\n\t\t    break;\n\n\t\tcase HTML_IMG_ALT:\n\t\t    if (parsedtag_get_value(tag, ATTR_SRC, &p)) {\n#ifdef USE_IMAGE\n\t\t\tint w = -1, h = -1, iseq = 0, ismap = 0;\n\t\t\tint xoffset = 0, yoffset = 0, top = 0, bottom = 0;\n\t\t\tparsedtag_get_value(tag, ATTR_HSEQ, &iseq);\n\t\t\tparsedtag_get_value(tag, ATTR_WIDTH, &w);\n\t\t\tparsedtag_get_value(tag, ATTR_HEIGHT, &h);\n\t\t\tparsedtag_get_value(tag, ATTR_XOFFSET, &xoffset);\n\t\t\tparsedtag_get_value(tag, ATTR_YOFFSET, &yoffset);\n\t\t\tparsedtag_get_value(tag, ATTR_TOP_MARGIN, &top);\n\t\t\tparsedtag_get_value(tag, ATTR_BOTTOM_MARGIN, &bottom);\n\t\t\tif (parsedtag_exists(tag, ATTR_ISMAP))\n\t\t\t    ismap = 1;\n\t\t\tq = NULL;\n\t\t\tparsedtag_get_value(tag, ATTR_USEMAP, &q);\n\t\t\tif (iseq > 0) {\n\t\t\t    buf->imarklist = putHmarker(buf->imarklist,\n\t\t\t\t\t\t\tcurrentLn(buf), pos,\n\t\t\t\t\t\t\tiseq - 1);\n\t\t\t}\n#endif\n\t\t\ts = NULL;\n\t\t\tparsedtag_get_value(tag, ATTR_TITLE, &s);\n\t\t\tp = url_quote_conv(remove_space(p),\n\t\t\t\t\t   buf->document_charset);\n\t\t\ta_img = registerImg(buf, p, s, currentLn(buf), pos);\n#ifdef USE_IMAGE\n\t\t\ta_img->hseq = iseq;\n\t\t\ta_img->image = NULL;\n\t\t\tif (iseq > 0) {\n\t\t\t    ParsedURL u;\n\t\t\t    Image *image;\n\n\t\t\t    parseURL2(a_img->url, &u, base);\n\t\t\t    a_img->image = image = New(Image);\n\t\t\t    image->url = parsedURL2Str(&u)->ptr;\n\t\t\t    if (!uncompressed_file_type(u.file, &image->ext))\n\t\t\t\timage->ext = filename_extension(u.file, TRUE);\n\t\t\t    image->cache = NULL;\n\t\t\t    image->width =\n\t\t\t\t(w > MAX_IMAGE_SIZE) ? MAX_IMAGE_SIZE : w;\n\t\t\t    image->height =\n\t\t\t\t(h > MAX_IMAGE_SIZE) ? MAX_IMAGE_SIZE : h;\n\t\t\t    image->xoffset = xoffset;\n\t\t\t    image->yoffset = yoffset;\n\t\t\t    image->y = currentLn(buf) - top;\n\t\t\t    if (image->xoffset < 0 && pos == 0)\n\t\t\t\timage->xoffset = 0;\n\t\t\t    if (image->yoffset < 0 && image->y == 1)\n\t\t\t\timage->yoffset = 0;\n\t\t\t    image->rows = 1 + top + bottom;\n\t\t\t    image->map = q;\n\t\t\t    image->ismap = ismap;\n\t\t\t    image->touch = 0;\n\t\t\t    image->cache = getImage(image, base,\n\t\t\t\t\t\t    IMG_FLAG_SKIP);\n\t\t\t}\n\t\t\telse if (iseq < 0) {\n\t\t\t    BufferPoint *po = buf->imarklist->marks - iseq - 1;\n\t\t\t    Anchor *a = retrieveAnchor(buf->img,\n\t\t\t\t\t\t       po->line, po->pos);\n\t\t\t    if (a) {\n\t\t\t\ta_img->url = a->url;\n\t\t\t\ta_img->image = a->image;\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t    }\n\t\t    effect |= PE_IMAGE;\n\t\t    break;\n\t\tcase HTML_N_IMG_ALT:\n\t\t    effect &= ~PE_IMAGE;\n\t\t    if (a_img) {\n\t\t\ta_img->end.line = currentLn(buf);\n\t\t\ta_img->end.pos = pos;\n\t\t    }\n\t\t    a_img = NULL;\n\t\t    break;\n\t\tcase HTML_INPUT_ALT:\n\t\t    {\n\t\t\tFormList *form;\n\t\t\tint top = 0, bottom = 0;\n\t\t\tint textareanumber = -1;\n#ifdef MENU_SELECT\n\t\t\tint selectnumber = -1;\n#endif\n\t\t\thseq = 0;\n\t\t\tform_id = -1;\n\n\t\t\tparsedtag_get_value(tag, ATTR_HSEQ, &hseq);\n\t\t\tparsedtag_get_value(tag, ATTR_FID, &form_id);\n\t\t\tparsedtag_get_value(tag, ATTR_TOP_MARGIN, &top);\n\t\t\tparsedtag_get_value(tag, ATTR_BOTTOM_MARGIN, &bottom);\n\t\t\tif (form_id < 0 || form_id > form_max || forms == NULL)\n\t\t\t    break;\t/* outside of <form>..</form> */\n\t\t\tform = forms[form_id];\n\t\t\tif (hseq > 0) {\n\t\t\t    int hpos = pos;\n\t\t\t    if (*str == '[')\n\t\t\t\thpos++;\n\t\t\t    buf->hmarklist =\n\t\t\t\tputHmarker(buf->hmarklist, currentLn(buf),\n\t\t\t\t\t   hpos, hseq - 1);\n\t\t\t}\n\t\t\telse if (hseq < 0) {\n\t\t\t    int h = -hseq - 1;\n\t\t\t    int hpos = pos;\n\t\t\t    if (*str == '[')\n\t\t\t\thpos++;\n\t\t\t    if (buf->hmarklist &&\n\t\t\t\th < buf->hmarklist->nmark &&\n\t\t\t\tbuf->hmarklist->marks[h].invalid) {\n\t\t\t\tbuf->hmarklist->marks[h].pos = hpos;\n\t\t\t\tbuf->hmarklist->marks[h].line = currentLn(buf);\n\t\t\t\tbuf->hmarklist->marks[h].invalid = 0;\n\t\t\t\thseq = -hseq;\n\t\t\t    }\n\t\t\t}\n\n\t\t\tif (!form->target)\n\t\t\t    form->target = buf->baseTarget;\n\t\t\tif (a_textarea &&\n\t\t\t    parsedtag_get_value(tag, ATTR_TEXTAREANUMBER,\n\t\t\t\t\t\t&textareanumber)) {\n\t\t\t    if (textareanumber >= max_textarea) {\n\t\t\t\tmax_textarea = 2 * textareanumber;\n\t\t\t\ttextarea_str = New_Reuse(Str, textarea_str,\n\t\t\t\t\t\t\t max_textarea);\n\t\t\t\ta_textarea = New_Reuse(Anchor *, a_textarea,\n\t\t\t\t\t\t       max_textarea);\n\t\t\t    }\n\t\t\t}\n#ifdef MENU_SELECT\n\t\t\tif (a_select &&\n\t\t\t    parsedtag_get_value(tag, ATTR_SELECTNUMBER,\n\t\t\t\t\t\t&selectnumber)) {\n\t\t\t    if (selectnumber >= max_select) {\n\t\t\t\tmax_select = 2 * selectnumber;\n\t\t\t\tselect_option = New_Reuse(FormSelectOption,\n\t\t\t\t\t\t\t  select_option,\n\t\t\t\t\t\t\t  max_select);\n\t\t\t\ta_select = New_Reuse(Anchor *, a_select,\n\t\t\t\t\t\t     max_select);\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t\ta_form =\n\t\t\t    registerForm(buf, form, tag, currentLn(buf), pos);\n\t\t\tif (a_textarea && textareanumber >= 0)\n\t\t\t    a_textarea[textareanumber] = a_form;\n#ifdef MENU_SELECT\n\t\t\tif (a_select && selectnumber >= 0)\n\t\t\t    a_select[selectnumber] = a_form;\n#endif\n\t\t\tif (a_form) {\n\t\t\t    a_form->hseq = hseq - 1;\n\t\t\t    a_form->y = currentLn(buf) - top;\n\t\t\t    a_form->rows = 1 + top + bottom;\n\t\t\t    if (!parsedtag_exists(tag, ATTR_NO_EFFECT))\n\t\t\t\teffect |= PE_FORM;\n\t\t\t    break;\n\t\t\t}\n\t\t    }\n\t\tcase HTML_N_INPUT_ALT:\n\t\t    effect &= ~PE_FORM;\n\t\t    if (a_form) {\n\t\t\ta_form->end.line = currentLn(buf);\n\t\t\ta_form->end.pos = pos;\n\t\t\tif (a_form->start.line == a_form->end.line &&\n\t\t\t    a_form->start.pos == a_form->end.pos)\n\t\t\t    a_form->hseq = -1;\n\t\t    }\n\t\t    a_form = NULL;\n\t\t    break;\n\t\tcase HTML_MAP:\n\t\t    if (parsedtag_get_value(tag, ATTR_NAME, &p)) {\n\t\t\tMapList *m = New(MapList);\n\t\t\tm->name = Strnew_charp(p);\n\t\t\tm->area = newGeneralList();\n\t\t\tm->next = buf->maplist;\n\t\t\tbuf->maplist = m;\n\t\t    }\n\t\t    break;\n\t\tcase HTML_N_MAP:\n\t\t    /* nothing to do */\n\t\t    break;\n\t\tcase HTML_AREA:\n\t\t    if (buf->maplist == NULL)\t/* outside of <map>..</map> */\n\t\t\tbreak;\n\t\t    if (parsedtag_get_value(tag, ATTR_HREF, &p)) {\n\t\t\tMapArea *a;\n\t\t\tp = url_encode(remove_space(p), base,\n\t\t\t\t       buf->document_charset);\n\t\t\tt = NULL;\n\t\t\tparsedtag_get_value(tag, ATTR_TARGET, &t);\n\t\t\tq = \"\";\n\t\t\tparsedtag_get_value(tag, ATTR_ALT, &q);\n\t\t\tr = NULL;\n\t\t\ts = NULL;\n#ifdef USE_IMAGE\n\t\t\tparsedtag_get_value(tag, ATTR_SHAPE, &r);\n\t\t\tparsedtag_get_value(tag, ATTR_COORDS, &s);\n#endif\n\t\t\ta = newMapArea(p, t, q, r, s);\n\t\t\tpushValue(buf->maplist->area, (void *)a);\n\t\t    }\n\t\t    break;\n\t\tcase HTML_FRAMESET:\n\t\t    frameset_sp++;\n\t\t    if (frameset_sp >= FRAMESTACK_SIZE)\n\t\t\tbreak;\n\t\t    frameset_s[frameset_sp] = newFrameSet(tag);\n\t\t    if (frameset_s[frameset_sp] == NULL)\n\t\t\tbreak;\n\t\t    if (frameset_sp == 0) {\n\t\t\tif (buf->frameset == NULL) {\n\t\t\t    buf->frameset = frameset_s[frameset_sp];\n\t\t\t}\n\t\t\telse\n\t\t\t    pushFrameTree(&(buf->frameQ),\n\t\t\t\t\t  frameset_s[frameset_sp], NULL);\n\t\t    }\n\t\t    else\n\t\t\taddFrameSetElement(frameset_s[frameset_sp - 1],\n\t\t\t\t\t   *(union frameset_element *)\n\t\t\t\t\t   &frameset_s[frameset_sp]);\n\t\t    break;\n\t\tcase HTML_N_FRAMESET:\n\t\t    if (frameset_sp >= 0)\n\t\t\tframeset_sp--;\n\t\t    break;\n\t\tcase HTML_FRAME:\n\t\t    if (frameset_sp >= 0 && frameset_sp < FRAMESTACK_SIZE) {\n\t\t\tunion frameset_element element;\n\n\t\t\telement.body = newFrame(tag, buf);\n\t\t\taddFrameSetElement(frameset_s[frameset_sp], element);\n\t\t    }\n\t\t    break;\n\t\tcase HTML_BASE:\n\t\t    if (parsedtag_get_value(tag, ATTR_HREF, &p)) {\n\t\t\tp = url_encode(remove_space(p), NULL,\n\t\t\t\t       buf->document_charset);\n\t\t\tif (!buf->baseURL)\n\t\t\t    buf->baseURL = New(ParsedURL);\n\t\t\tparseURL(p, buf->baseURL, NULL);\n#if defined(USE_M17N) || defined(USE_IMAGE)\n\t\t\tbase = buf->baseURL;\n#endif\n\t\t    }\n\t\t    if (parsedtag_get_value(tag, ATTR_TARGET, &p))\n\t\t\tbuf->baseTarget =\n\t\t\t    url_quote_conv(p, buf->document_charset);\n\t\t    break;\n\t\tcase HTML_META:\n\t\t    p = q = NULL;\n\t\t    parsedtag_get_value(tag, ATTR_HTTP_EQUIV, &p);\n\t\t    parsedtag_get_value(tag, ATTR_CONTENT, &q);\n\t\t    if (p && q && !strcasecmp(p, \"refresh\") && MetaRefresh) {\n\t\t\tStr tmp = NULL;\n\t\t\tint refresh_interval = getMetaRefreshParam(q, &tmp);\n#ifdef USE_ALARM\n\t\t\tif (tmp) {\n\t\t\t    p = url_encode(remove_space(tmp->ptr), base,\n\t\t\t\t\t   buf->document_charset);\n\t\t\t    buf->event = setAlarmEvent(buf->event,\n\t\t\t\t\t\t       refresh_interval,\n\t\t\t\t\t\t       AL_IMPLICIT_ONCE,\n\t\t\t\t\t\t       FUNCNAME_gorURL, p);\n\t\t\t}\n\t\t\telse if (refresh_interval > 0)\n\t\t\t    buf->event = setAlarmEvent(buf->event,\n\t\t\t\t\t\t       refresh_interval,\n\t\t\t\t\t\t       AL_IMPLICIT,\n\t\t\t\t\t\t       FUNCNAME_reload, NULL);\n#else\n\t\t\tif (tmp && refresh_interval == 0) {\n\t\t\t    p = url_encode(remove_space(tmp->ptr), base,\n\t\t\t\t\t   buf->document_charset);\n\t\t\t    pushEvent(FUNCNAME_gorURL, p);\n\t\t\t}\n#endif\n\t\t    }\n\t\t    break;\n\t\tcase HTML_INTERNAL:\n\t\t    internal = HTML_INTERNAL;\n\t\t    break;\n\t\tcase HTML_N_INTERNAL:\n\t\t    internal = HTML_N_INTERNAL;\n\t\t    break;\n\t\tcase HTML_FORM_INT:\n\t\t    if (parsedtag_get_value(tag, ATTR_FID, &form_id))\n\t\t\tprocess_form_int(tag, form_id);\n\t\t    break;\n\t\tcase HTML_TEXTAREA_INT:\n\t\t    if (parsedtag_get_value(tag, ATTR_TEXTAREANUMBER,\n\t\t\t\t\t    &n_textarea)\n\t\t\t&& n_textarea >= 0 && n_textarea < max_textarea) {\n\t\t\ttextarea_str[n_textarea] = Strnew();\n\t\t    }\n\t\t    else\n\t\t\tn_textarea = -1;\n\t\t    break;\n\t\tcase HTML_N_TEXTAREA_INT:\n\t\t    if (n_textarea >= 0) {\n\t\t\tFormItemList *item =\n\t\t\t    (FormItemList *)a_textarea[n_textarea]->url;\n\t\t\titem->init_value = item->value =\n\t\t\t    textarea_str[n_textarea];\n\t\t    }\n\t\t    break;\n#ifdef MENU_SELECT\n\t\tcase HTML_SELECT_INT:\n\t\t    if (parsedtag_get_value(tag, ATTR_SELECTNUMBER, &n_select)\n\t\t\t&& n_select >= 0 && n_select < max_select) {\n\t\t\tselect_option[n_select].first = NULL;\n\t\t\tselect_option[n_select].last = NULL;\n\t\t    }\n\t\t    else\n\t\t\tn_select = -1;\n\t\t    break;\n\t\tcase HTML_N_SELECT_INT:\n\t\t    if (n_select >= 0) {\n\t\t\tFormItemList *item =\n\t\t\t    (FormItemList *)a_select[n_select]->url;\n\t\t\titem->select_option = select_option[n_select].first;\n\t\t\tchooseSelectOption(item, item->select_option);\n\t\t\titem->init_selected = item->selected;\n\t\t\titem->init_value = item->value;\n\t\t\titem->init_label = item->label;\n\t\t    }\n\t\t    break;\n\t\tcase HTML_OPTION_INT:\n\t\t    if (n_select >= 0) {\n\t\t\tint selected;\n\t\t\tq = \"\";\n\t\t\tparsedtag_get_value(tag, ATTR_LABEL, &q);\n\t\t\tp = q;\n\t\t\tparsedtag_get_value(tag, ATTR_VALUE, &p);\n\t\t\tselected = parsedtag_exists(tag, ATTR_SELECTED);\n\t\t\taddSelectOption(&select_option[n_select],\n\t\t\t\t\tStrnew_charp(p), Strnew_charp(q),\n\t\t\t\t\tselected);\n\t\t    }\n\t\t    break;\n#endif\n\t\tcase HTML_TITLE_ALT:\n\t\t    if (parsedtag_get_value(tag, ATTR_TITLE, &p))\n\t\t\tbuf->buffername = html_unquote(p);\n\t\t    break;\n\t\tcase HTML_SYMBOL:\n\t\t    effect |= PC_SYMBOL;\n\t\t    if (parsedtag_get_value(tag, ATTR_TYPE, &p))\n\t\t\tsymbol = (char)atoi(p);\n\t\t    break;\n\t\tcase HTML_N_SYMBOL:\n\t\t    effect &= ~PC_SYMBOL;\n\t\t    break;\n\t\t}\n#ifdef\tID_EXT\n\t\tid = NULL;\n\t\tif (parsedtag_get_value(tag, ATTR_ID, &id)) {\n\t\t    id = url_quote_conv(id, name_charset);\n\t\t    registerName(buf, id, currentLn(buf), pos);\n\t\t}\n\t\tif (renderFrameSet &&\n\t\t    parsedtag_get_value(tag, ATTR_FRAMENAME, &p)) {\n\t\t    p = url_quote_conv(p, buf->document_charset);\n\t\t    if (!idFrame || strcmp(idFrame->body->name, p)) {\n\t\t\tidFrame = search_frame(renderFrameSet, p);\n\t\t\tif (idFrame && idFrame->body->attr != F_BODY)\n\t\t\t    idFrame = NULL;\n\t\t    }\n\t\t}\n\t\tif (id && idFrame)\n\t\t    idFrame->body->nameList =\n\t\t\tputAnchor(idFrame->body->nameList, id, NULL,\n\t\t\t\t  (Anchor **)NULL, NULL, NULL, '\\0',\n\t\t\t\t  currentLn(buf), pos);\n#endif\t\t\t\t/* ID_EXT */\n\t    }\n\t}\n\t/* end of processing for one line */\n\tif (!internal)\n\t    addnewline(buf, outc, outp, NULL, pos, -1, nlines);\n\tif (internal == HTML_N_INTERNAL)\n\t    internal = 0;\n\tif (str != endp) {\n\t    line = Strsubstr(line, str - line->ptr, endp - str);\n\t    goto proc_again;\n\t}\n    }\n#ifdef DEBUG\n    if (w3m_debug)\n\tfclose(debug);\n#endif\n    for (form_id = 1; form_id <= form_max; form_id++)\n\tif (forms[form_id])\n\t    forms[form_id]->next = forms[form_id - 1];\n    buf->formlist = (form_max >= 0) ? forms[form_max] : NULL;\n    if (n_textarea)\n\taddMultirowsForm(buf, buf->formitem);\n#ifdef USE_IMAGE\n    addMultirowsImg(buf, buf->img);\n#endif\n}",
    "abstract_func_before": "static void\nHTMLlineproc2body(Buffer *VAR_0, Str (*VAR_1) (), int VAR_2)\n{\n    static char *VAR_3 = NULL;\n    static Lineprop *VAR_4 = NULL;\n    static int VAR_5 = 0;\n    Anchor *VAR_6 = NULL, *VAR_7 = NULL, *VAR_8 = NULL;\n    char *VAR_9, *VAR_10, *VAR_11, *VAR_12, *VAR_13, *VAR_14;\n    Lineprop VAR_15, VAR_16, VAR_17;\n    int VAR_18;\n    int VAR_19;\n#ifdef VAR_20\n    FILE *VAR_21 = NULL;\n#endif\n    struct frameset *VAR_22[VAR_23];\n    int VAR_24 = -1;\n    union frameset_element *VAR_25 = NULL;\n    char *VAR_26 = NULL;\n    int VAR_27, VAR_28;\n    Str VAR_29;\n    char *VAR_30;\n    char VAR_31 = '\\0';\n    int VAR_32 = 0;\n    Anchor **VAR_33 = NULL;\n#ifdef VAR_34\n    Anchor **VAR_35 = NULL;\n#endif\n#if defined(VAR_36) || defined(VAR_37)\n    ParsedURL *VAR_38 = baseURL(VAR_0);\n#endif\n#ifdef VAR_36\n    wc_ces VAR_39 = url_to_charset(NULL, &VAR_0->currentURL,\n\t\t\t\t\t VAR_0->document_charset);\n#endif\n\n    if (VAR_5 == 0) {\n\tVAR_5 = VAR_40;\n\tVAR_3 = NewAtom_N(char, VAR_5);\n\tVAR_4 = NewAtom_N(Lineprop, VAR_5);\n    }\n\n    VAR_41 = -1;\n    if (!VAR_42) {\t/* COMMENT_0 */\n\tVAR_42 = VAR_43;\n\tVAR_44 = New_N(Str, VAR_42);\n\tVAR_33 = New_N(Anchor *, VAR_42);\n    }\n#ifdef VAR_34\n    VAR_45 = -1;\n    if (!VAR_46) {\t\t/* COMMENT_0 */\n\tVAR_46 = VAR_47;\n\tVAR_48 = New_N(VAR_49, VAR_46);\n\tVAR_35 = New_N(Anchor *, VAR_46);\n    }\n#endif\n\n#ifdef VAR_20\n    if (VAR_50)\n\tVAR_21 = fopen(\"zzzerr\", \"a\");\n#endif\n\n    VAR_16 = 0;\n    VAR_17 = 0;\n    VAR_19 = 0;\n    while ((VAR_29 = VAR_1()) != NULL) {\n#ifdef VAR_20\n\tif (VAR_50) {\n\t    Strfputs(VAR_29, VAR_21);\n\t    fputc('\\n', VAR_21);\n\t}\n#endif\n\tif (VAR_41 >= 0 && *(VAR_29->ptr) != '<') {\t/* COMMENT_0 */\n\t    Strcat(VAR_44[VAR_41], VAR_29);\n\t    continue;\n\t}\n      proc_again:\n\tif (++VAR_19 == VAR_2)\n\t    break;\n\tVAR_18 = 0;\n#ifdef VAR_51\n\tStrremovetrailingspaces(VAR_29);\n#endif\n\tVAR_14 = VAR_29->ptr;\n\tVAR_30 = VAR_14 + VAR_29->length;\n\twhile (VAR_14 < VAR_30) {\n\t    VAR_52;\n\t    VAR_15 = get_mctype(VAR_14);\n\t    if ((VAR_16 | ex_efct(VAR_17)) & VAR_53 && *VAR_14 != '<') {\n#ifdef VAR_36\n\t\tchar **VAR_0 = set_symbol(VAR_54);\n\t\tint VAR_55;\n\n\t\tVAR_9 = VAR_0[(int)VAR_31];\n\t\tVAR_55 = get_mclen(VAR_9);\n\t\tVAR_15 = get_mctype(VAR_9);\n\t\tPPUSH(VAR_15 | VAR_16 | ex_efct(VAR_17), *(VAR_9++));\n\t\tif (--VAR_55) {\n\t\t    VAR_15 = (VAR_15 & ~VAR_56) | VAR_57;\n\t\t    while (VAR_55--) {\n\t\t\tVAR_52;\n\t\t\tPPUSH(VAR_15 | VAR_16 | ex_efct(VAR_17), *(VAR_9++));\n\t\t    }\n\t\t}\n#else\n\t\tPPUSH(VAR_58 | VAR_16 | ex_efct(VAR_17), VAR_59 + VAR_31);\n#endif\n\t\tVAR_14 += VAR_60;\n\t    }\n#ifdef VAR_36\n\t    else if (mode == VAR_61 || mode == VAR_62) {\n#else\n\t    else if (mode == PC_CTRL || IS_INTSPACE(*str)) {\n#endif\n\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\tVAR_14++;\n\t    }\n#ifdef VAR_36\n\t    else if (mode & VAR_63) {\n\t\tPPUSH(VAR_58 | VAR_16 | ex_efct(VAR_17), ' ');\n\t\tVAR_14 += get_mclen(VAR_14);\n\t    }\n#endif\n\t    else if (*VAR_14 != '<' && *VAR_14 != '&') {\n#ifdef VAR_36\n\t\tint VAR_55 = get_mclen(VAR_14);\n#endif\n\t\tPPUSH(mode | VAR_16 | ex_efct(VAR_17), *(VAR_14++));\n#ifdef VAR_36\n\t\tif (--VAR_55) {\n\t\t    mode = (mode & ~VAR_56) | VAR_57;\n\t\t    while (VAR_55--) {\n\t\t\tVAR_52;\n\t\t\tPPUSH(mode | VAR_16 | ex_efct(VAR_17), *(VAR_14++));\n\t\t    }\n\t\t}\n#endif\n\t    }\n\t    else if (*str == '&') {\n\t\t/* COMMENT_1 */\n                        \n     \n\t\tVAR_9 = getescapecmd(&str);\n\t\twhile (*VAR_9) {\n\t\t    VAR_52;\n\t\t    mode = get_mctype((unsigned char *)VAR_9);\n#ifdef VAR_36\n\t\t    if (mode == VAR_61 || mode == VAR_62) {\n#else\n\t\t    if (mode == PC_CTRL || IS_INTSPACE(*str)) {\n#endif\n\t\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\t\tVAR_9++;\n\t\t    }\n#ifdef VAR_36\n\t\t    else if (mode & VAR_63) {\n\t\t\tPPUSH(VAR_58 | VAR_16 | ex_efct(VAR_17), ' ');\n\t\t\tVAR_9 += get_mclen(VAR_9);\n\t\t    }\n#endif\n\t\t    else {\n#ifdef VAR_36\n\t\t\tint VAR_55 = get_mclen(VAR_9);\n#endif\n\t\t\tPPUSH(mode | VAR_16 | ex_efct(VAR_17), *(VAR_9++));\n#ifdef VAR_36\n\t\t\tif (--VAR_55) {\n\t\t\t    mode = (mode & ~VAR_56) | VAR_57;\n\t\t\t    while (VAR_55--) {\n\t\t\t\tVAR_52;\n\t\t\t\tPPUSH(mode | VAR_16 | ex_efct(VAR_17), *(VAR_9++));\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t    }\n\t\t}\n\t    }\n\t    else {\n\t\t/* COMMENT_4 */\n\t\tstruct parsed_tag *VAR_64;\n\t\tif (!(VAR_64 = parse_tag(&str, TRUE)))\n\t\t    continue;\n\t\tswitch (VAR_64->tagid) {\n\t\tcase VAR_65:\n\t\t    VAR_16 |= VAR_66;\n\t\t    break;\n\t\tcase VAR_67:\n\t\t    VAR_16 &= ~VAR_66;\n\t\t    break;\n\t\tcase VAR_68:\n\t\t    VAR_17 |= VAR_69;\n\t\t    break;\n\t\tcase VAR_70:\n\t\t    VAR_17 &= ~VAR_69;\n\t\t    break;\n\t\tcase VAR_71:\n\t\t    VAR_17 |= VAR_72;\n\t\t    break;\n\t\tcase VAR_73:\n\t\t    VAR_17 &= ~VAR_72;\n\t\t    break;\n\t\tcase VAR_74:\n\t\t    VAR_16 |= VAR_75;\n\t\t    break;\n\t\tcase VAR_76:\n\t\t    VAR_16 &= ~VAR_75;\n\t\t    break;\n\t\tcase VAR_77:\n\t\t    VAR_17 |= VAR_78;\n\t\t    break;\n\t\tcase VAR_79:\n\t\t    VAR_17 &= ~VAR_78;\n\t\t    break;\n\t\tcase VAR_80:\n\t\t    if (VAR_81 &&\n\t\t\tparsedtag_get_value(VAR_64, VAR_82, &VAR_9)) {\n\t\t\tVAR_9 = url_quote_conv(VAR_9, VAR_0->document_charset);\n\t\t\tif (!VAR_25 || strcmp(VAR_25->body->name, VAR_9)) {\n\t\t\t    VAR_25 = search_frame(VAR_81, VAR_9);\n\t\t\t    if (VAR_25 && VAR_25->body->attr != VAR_83)\n\t\t\t\tVAR_25 = NULL;\n\t\t\t}\n\t\t    }\n\t\t    VAR_9 = VAR_11 = VAR_12 = NULL;\n\t\t    VAR_10 = VAR_0->baseTarget;\n\t\t    VAR_13 = \"\";\n\t\t    VAR_27 = 0;\n\t\t    VAR_26 = NULL;\n\t\t    if (parsedtag_get_value(VAR_64, VAR_84, &VAR_26)) {\n\t\t\tVAR_26 = url_quote_conv(VAR_26, VAR_39);\n\t\t\tregisterName(VAR_0, VAR_26, currentLn(VAR_0), VAR_18);\n\t\t    }\n\t\t    if (parsedtag_get_value(VAR_64, VAR_85, &VAR_9))\n\t\t\tVAR_9 = url_encode(remove_space(VAR_9), VAR_38,\n\t\t\t\t       VAR_0->document_charset);\n\t\t    if (parsedtag_get_value(VAR_64, VAR_86, &VAR_10))\n\t\t\tVAR_10 = url_quote_conv(VAR_10, VAR_0->document_charset);\n\t\t    if (parsedtag_get_value(VAR_64, VAR_87, &VAR_11))\n\t\t\tVAR_11 = url_encode(VAR_11, VAR_38,\n\t\t\t\t       VAR_0->document_charset);\n\t\t    parsedtag_get_value(VAR_64, VAR_88, &VAR_12);\n\t\t    parsedtag_get_value(VAR_64, VAR_89, &VAR_13);\n\t\t    parsedtag_get_value(VAR_64, VAR_90, &VAR_27);\n\t\t    if (VAR_27 > 0)\n\t\t\tVAR_0->hmarklist =\n\t\t\t    putHmarker(VAR_0->hmarklist, currentLn(VAR_0),\n\t\t\t\t       VAR_18, VAR_27 - 1);\n\t\t    else if (VAR_27 < 0) {\n\t\t\tint VAR_91 = -VAR_27 - 1;\n\t\t\tif (VAR_0->hmarklist &&\n\t\t\t    VAR_91 < VAR_0->hmarklist->nmark &&\n\t\t\t    VAR_0->hmarklist->marks[VAR_91].invalid) {\n\t\t\t    VAR_0->hmarklist->marks[VAR_91].pos = VAR_18;\n\t\t\t    VAR_0->hmarklist->marks[VAR_91].line = currentLn(VAR_0);\n\t\t\t    VAR_0->hmarklist->marks[VAR_91].invalid = 0;\n\t\t\t    VAR_27 = -VAR_27;\n\t\t\t}\n\t\t    }\n\t\t    if (VAR_26 && VAR_25)\n\t\t\tVAR_25->body->nameList =\n\t\t\t    putAnchor(VAR_25->body->nameList, VAR_26, NULL,\n\t\t\t\t      (Anchor **)NULL, NULL, NULL, '\\0',\n\t\t\t\t      currentLn(VAR_0), VAR_18);\n\t\t    if (VAR_9) {\n\t\t\tVAR_16 |= VAR_92;\n\t\t\tVAR_6 = registerHref(VAR_0, VAR_9, VAR_10, VAR_11, VAR_12,\n\t\t\t\t\t      *VAR_13, currentLn(VAR_0), VAR_18);\n\t\t\tVAR_6->hseq = ((VAR_27 > 0) ? VAR_27 : -VAR_27) - 1;\n\t\t\tVAR_6->slave = (VAR_27 > 0) ? FALSE : TRUE;\n\t\t    }\n\t\t    break;\n\t\tcase VAR_93:\n\t\t    VAR_16 &= ~VAR_92;\n\t\t    if (VAR_6) {\n\t\t\tVAR_6->end.line = currentLn(VAR_0);\n\t\t\tVAR_6->end.pos = VAR_18;\n\t\t\tif (VAR_6->start.line == VAR_6->end.line &&\n\t\t\t    VAR_6->start.pos == VAR_6->end.pos) {\n\t\t\t    if (VAR_0->hmarklist &&\n\t\t\t\tVAR_6->hseq < VAR_0->hmarklist->nmark)\n\t\t\t\tVAR_0->hmarklist->marks[VAR_6->hseq].invalid = 1;\n\t\t\t    VAR_6->hseq = -1;\n\t\t\t}\n\t\t\tVAR_6 = NULL;\n\t\t    }\n\t\t    break;\n\n\t\tcase VAR_94:\n\t\t    addLink(VAR_0, VAR_64);\n\t\t    break;\n\n\t\tcase VAR_95:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_96, &VAR_9)) {\n#ifdef VAR_37\n\t\t\tint VAR_97 = -1, VAR_91 = -1, VAR_98 = 0, VAR_99 = 0;\n\t\t\tint VAR_100 = 0, VAR_101 = 0, VAR_102 = 0, VAR_103 = 0;\n\t\t\tparsedtag_get_value(VAR_64, VAR_90, &VAR_98);\n\t\t\tparsedtag_get_value(VAR_64, VAR_104, &VAR_97);\n\t\t\tparsedtag_get_value(VAR_64, VAR_105, &VAR_91);\n\t\t\tparsedtag_get_value(VAR_64, VAR_106, &VAR_100);\n\t\t\tparsedtag_get_value(VAR_64, VAR_107, &VAR_101);\n\t\t\tparsedtag_get_value(VAR_64, VAR_108, &VAR_102);\n\t\t\tparsedtag_get_value(VAR_64, VAR_109, &VAR_103);\n\t\t\tif (parsedtag_exists(VAR_64, VAR_110))\n\t\t\t    VAR_99 = 1;\n\t\t\tVAR_10 = NULL;\n\t\t\tparsedtag_get_value(VAR_64, VAR_111, &VAR_10);\n\t\t\tif (VAR_98 > 0) {\n\t\t\t    VAR_0->imarklist = putHmarker(VAR_0->imarklist,\n\t\t\t\t\t\t\tcurrentLn(VAR_0), VAR_18,\n\t\t\t\t\t\t\tVAR_98 - 1);\n\t\t\t}\n#endif\n\t\t\tVAR_12 = NULL;\n\t\t\tparsedtag_get_value(VAR_64, VAR_88, &VAR_12);\n\t\t\tVAR_9 = url_quote_conv(remove_space(VAR_9),\n\t\t\t\t\t   VAR_0->document_charset);\n\t\t\tVAR_7 = registerImg(VAR_0, VAR_9, VAR_12, currentLn(VAR_0), VAR_18);\n#ifdef VAR_37\n\t\t\tVAR_7->hseq = VAR_98;\n\t\t\tVAR_7->image = NULL;\n\t\t\tif (VAR_98 > 0) {\n\t\t\t    ParsedURL VAR_112;\n\t\t\t    Image *VAR_113;\n\n\t\t\t    parseURL2(VAR_7->url, &VAR_112, VAR_38);\n\t\t\t    VAR_7->image = VAR_113 = New(Image);\n\t\t\t    VAR_113->url = parsedURL2Str(&VAR_112)->ptr;\n\t\t\t    if (!uncompressed_file_type(VAR_112.file, &VAR_113->ext))\n\t\t\t\tVAR_113->ext = filename_extension(VAR_112.file, TRUE);\n\t\t\t    VAR_113->cache = NULL;\n\t\t\t    VAR_113->width =\n\t\t\t\t(VAR_97 > VAR_114) ? VAR_114 : VAR_97;\n\t\t\t    VAR_113->height =\n\t\t\t\t(VAR_91 > VAR_114) ? VAR_114 : VAR_91;\n\t\t\t    VAR_113->xoffset = VAR_100;\n\t\t\t    VAR_113->yoffset = VAR_101;\n\t\t\t    VAR_113->y = currentLn(VAR_0) - VAR_102;\n\t\t\t    if (VAR_113->xoffset < 0 && VAR_18 == 0)\n\t\t\t\tVAR_113->xoffset = 0;\n\t\t\t    if (VAR_113->yoffset < 0 && VAR_113->y == 1)\n\t\t\t\tVAR_113->yoffset = 0;\n\t\t\t    VAR_113->rows = 1 + VAR_102 + VAR_103;\n\t\t\t    VAR_113->map = VAR_10;\n\t\t\t    VAR_113->ismap = VAR_99;\n\t\t\t    VAR_113->touch = 0;\n\t\t\t    VAR_113->cache = getImage(VAR_113, VAR_38,\n\t\t\t\t\t\t    VAR_115);\n\t\t\t}\n\t\t\telse if (VAR_98 < 0) {\n\t\t\t    BufferPoint *VAR_116 = VAR_0->imarklist->marks - VAR_98 - 1;\n\t\t\t    Anchor *VAR_117 = retrieveAnchor(VAR_0->img,\n\t\t\t\t\t\t       VAR_116->line, VAR_116->pos);\n\t\t\t    if (VAR_117) {\n\t\t\t\tVAR_7->url = VAR_117->url;\n\t\t\t\tVAR_7->image = VAR_117->image;\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t    }\n\t\t    VAR_16 |= VAR_118;\n\t\t    break;\n\t\tcase VAR_119:\n\t\t    VAR_16 &= ~VAR_118;\n\t\t    if (VAR_7) {\n\t\t\tVAR_7->end.line = currentLn(VAR_0);\n\t\t\tVAR_7->end.pos = VAR_18;\n\t\t    }\n\t\t    VAR_7 = NULL;\n\t\t    break;\n\t\tcase VAR_120:\n\t\t    {\n\t\t\tFormList *VAR_121;\n\t\t\tint VAR_102 = 0, VAR_103 = 0;\n\t\t\tint VAR_122 = -1;\n#ifdef VAR_34\n\t\t\tint VAR_123 = -1;\n#endif\n\t\t\tVAR_27 = 0;\n\t\t\tVAR_28 = -1;\n\n\t\t\tparsedtag_get_value(VAR_64, VAR_90, &VAR_27);\n\t\t\tparsedtag_get_value(VAR_64, VAR_124, &VAR_28);\n\t\t\tparsedtag_get_value(VAR_64, VAR_108, &VAR_102);\n\t\t\tparsedtag_get_value(VAR_64, VAR_109, &VAR_103);\n\t\t\tif (VAR_28 < 0 || VAR_28 > VAR_125 || VAR_126 == NULL)\n\t\t\t    break;\t/* COMMENT_5 */\n\t\t\tVAR_121 = VAR_126[VAR_28];\n\t\t\tif (VAR_27 > 0) {\n\t\t\t    int VAR_127 = VAR_18;\n\t\t\t    if (*str == '[')\n\t\t\t\tVAR_127++;\n\t\t\t    VAR_0->hmarklist =\n\t\t\t\tputHmarker(VAR_0->hmarklist, currentLn(VAR_0),\n\t\t\t\t\t   VAR_127, VAR_27 - 1);\n\t\t\t}\n\t\t\telse if (VAR_27 < 0) {\n\t\t\t    int VAR_91 = -VAR_27 - 1;\n\t\t\t    int VAR_127 = VAR_18;\n\t\t\t    if (*str == '[')\n\t\t\t\tVAR_127++;\n\t\t\t    if (VAR_0->hmarklist &&\n\t\t\t\tVAR_91 < VAR_0->hmarklist->nmark &&\n\t\t\t\tVAR_0->hmarklist->marks[VAR_91].invalid) {\n\t\t\t\tVAR_0->hmarklist->marks[VAR_91].pos = VAR_127;\n\t\t\t\tVAR_0->hmarklist->marks[VAR_91].line = currentLn(VAR_0);\n\t\t\t\tVAR_0->hmarklist->marks[VAR_91].invalid = 0;\n\t\t\t\tVAR_27 = -VAR_27;\n\t\t\t    }\n\t\t\t}\n\n\t\t\tif (!VAR_121->target)\n\t\t\t    VAR_121->target = VAR_0->baseTarget;\n\t\t\tif (VAR_33 &&\n\t\t\t    parsedtag_get_value(VAR_64, VAR_128,\n\t\t\t\t\t\t&VAR_122)) {\n\t\t\t    if (VAR_122 >= VAR_42) {\n\t\t\t\tVAR_42 = 2 * VAR_122;\n\t\t\t\tVAR_44 = New_Reuse(Str, VAR_44,\n\t\t\t\t\t\t\t VAR_42);\n\t\t\t\tVAR_33 = New_Reuse(Anchor *, VAR_33,\n\t\t\t\t\t\t       VAR_42);\n\t\t\t    }\n\t\t\t}\n#ifdef VAR_34\n\t\t\tif (VAR_35 &&\n\t\t\t    parsedtag_get_value(VAR_64, VAR_129,\n\t\t\t\t\t\t&VAR_123)) {\n\t\t\t    if (VAR_123 >= VAR_46) {\n\t\t\t\tVAR_46 = 2 * VAR_123;\n\t\t\t\tVAR_48 = New_Reuse(VAR_49,\n\t\t\t\t\t\t\t  VAR_48,\n\t\t\t\t\t\t\t  VAR_46);\n\t\t\t\tVAR_35 = New_Reuse(Anchor *, VAR_35,\n\t\t\t\t\t\t     VAR_46);\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t\tVAR_8 =\n\t\t\t    registerForm(VAR_0, VAR_121, VAR_64, currentLn(VAR_0), VAR_18);\n\t\t\tif (VAR_33 && VAR_122 >= 0)\n\t\t\t    VAR_33[VAR_122] = VAR_8;\n#ifdef VAR_34\n\t\t\tif (VAR_35 && VAR_123 >= 0)\n\t\t\t    VAR_35[VAR_123] = VAR_8;\n#endif\n\t\t\tif (VAR_8) {\n\t\t\t    VAR_8->hseq = VAR_27 - 1;\n\t\t\t    VAR_8->y = currentLn(VAR_0) - VAR_102;\n\t\t\t    VAR_8->rows = 1 + VAR_102 + VAR_103;\n\t\t\t    if (!parsedtag_exists(VAR_64, VAR_130))\n\t\t\t\tVAR_16 |= VAR_131;\n\t\t\t    break;\n\t\t\t}\n\t\t    }\n\t\tcase VAR_132:\n\t\t    VAR_16 &= ~VAR_131;\n\t\t    if (VAR_8) {\n\t\t\tVAR_8->end.line = currentLn(VAR_0);\n\t\t\tVAR_8->end.pos = VAR_18;\n\t\t\tif (VAR_8->start.line == VAR_8->end.line &&\n\t\t\t    VAR_8->start.pos == VAR_8->end.pos)\n\t\t\t    VAR_8->hseq = -1;\n\t\t    }\n\t\t    VAR_8 = NULL;\n\t\t    break;\n\t\tcase VAR_133:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_84, &VAR_9)) {\n\t\t\tMapList *VAR_134 = New(MapList);\n\t\t\tVAR_134->name = Strnew_charp(VAR_9);\n\t\t\tVAR_134->area = newGeneralList();\n\t\t\tVAR_134->next = VAR_0->maplist;\n\t\t\tVAR_0->maplist = VAR_134;\n\t\t    }\n\t\t    break;\n\t\tcase VAR_135:\n\t\t    /* COMMENT_6 */\n\t\t    break;\n\t\tcase VAR_136:\n\t\t    if (VAR_0->maplist == NULL)\t/* COMMENT_7 */\n\t\t\tbreak;\n\t\t    if (parsedtag_get_value(VAR_64, VAR_85, &VAR_9)) {\n\t\t\tMapArea *VAR_117;\n\t\t\tVAR_9 = url_encode(remove_space(VAR_9), VAR_38,\n\t\t\t\t       VAR_0->document_charset);\n\t\t\tVAR_13 = NULL;\n\t\t\tparsedtag_get_value(VAR_64, VAR_86, &VAR_13);\n\t\t\tVAR_10 = \"\";\n\t\t\tparsedtag_get_value(VAR_64, VAR_137, &VAR_10);\n\t\t\tVAR_11 = NULL;\n\t\t\tVAR_12 = NULL;\n#ifdef VAR_37\n\t\t\tparsedtag_get_value(VAR_64, VAR_138, &VAR_11);\n\t\t\tparsedtag_get_value(VAR_64, VAR_139, &VAR_12);\n#endif\n\t\t\tVAR_117 = newMapArea(VAR_9, VAR_13, VAR_10, VAR_11, VAR_12);\n\t\t\tpushValue(VAR_0->maplist->area, (void *)VAR_117);\n\t\t    }\n\t\t    break;\n\t\tcase VAR_140:\n\t\t    VAR_24++;\n\t\t    if (VAR_24 >= VAR_23)\n\t\t\tbreak;\n\t\t    VAR_22[VAR_24] = newFrameSet(VAR_64);\n\t\t    if (VAR_22[VAR_24] == NULL)\n\t\t\tbreak;\n\t\t    if (VAR_24 == 0) {\n\t\t\tif (VAR_0->frameset == NULL) {\n\t\t\t    VAR_0->frameset = VAR_22[VAR_24];\n\t\t\t}\n\t\t\telse\n\t\t\t    pushFrameTree(&(VAR_0->frameQ),\n\t\t\t\t\t  VAR_22[VAR_24], NULL);\n\t\t    }\n\t\t    else\n\t\t\taddFrameSetElement(VAR_22[VAR_24 - 1],\n\t\t\t\t\t   *(union frameset_element *)\n\t\t\t\t\t   &VAR_22[VAR_24]);\n\t\t    break;\n\t\tcase VAR_141:\n\t\t    if (VAR_24 >= 0)\n\t\t\tVAR_24--;\n\t\t    break;\n\t\tcase VAR_142:\n\t\t    if (VAR_24 >= 0 && VAR_24 < VAR_23) {\n\t\t\tunion frameset_element VAR_143;\n\n\t\t\tVAR_143.body = newFrame(VAR_64, VAR_0);\n\t\t\taddFrameSetElement(VAR_22[VAR_24], VAR_143);\n\t\t    }\n\t\t    break;\n\t\tcase VAR_144:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_85, &VAR_9)) {\n\t\t\tVAR_9 = url_encode(remove_space(VAR_9), NULL,\n\t\t\t\t       VAR_0->document_charset);\n\t\t\tif (!VAR_0->baseURL)\n\t\t\t    VAR_0->baseURL = New(ParsedURL);\n\t\t\tparseURL(VAR_9, VAR_0->baseURL, NULL);\n#if defined(VAR_36) || defined(VAR_37)\n\t\t\tVAR_38 = VAR_0->baseURL;\n#endif\n\t\t    }\n\t\t    if (parsedtag_get_value(VAR_64, VAR_86, &VAR_9))\n\t\t\tVAR_0->baseTarget =\n\t\t\t    url_quote_conv(VAR_9, VAR_0->document_charset);\n\t\t    break;\n\t\tcase VAR_145:\n\t\t    VAR_9 = VAR_10 = NULL;\n\t\t    parsedtag_get_value(VAR_64, VAR_146, &VAR_9);\n\t\t    parsedtag_get_value(VAR_64, VAR_147, &VAR_10);\n\t\t    if (VAR_9 && VAR_10 && !strcasecmp(VAR_9, \"refresh\") && VAR_148) {\n\t\t\tStr VAR_149 = NULL;\n\t\t\tint VAR_150 = getMetaRefreshParam(VAR_10, &VAR_149);\n#ifdef VAR_151\n\t\t\tif (VAR_149) {\n\t\t\t    VAR_9 = url_encode(remove_space(VAR_149->ptr), VAR_38,\n\t\t\t\t\t   VAR_0->document_charset);\n\t\t\t    VAR_0->event = setAlarmEvent(VAR_0->event,\n\t\t\t\t\t\t       VAR_150,\n\t\t\t\t\t\t       VAR_152,\n\t\t\t\t\t\t       VAR_153, VAR_9);\n\t\t\t}\n\t\t\telse if (VAR_150 > 0)\n\t\t\t    VAR_0->event = setAlarmEvent(VAR_0->event,\n\t\t\t\t\t\t       VAR_150,\n\t\t\t\t\t\t       VAR_154,\n\t\t\t\t\t\t       VAR_155, NULL);\n#else\n\t\t\tif (VAR_149 && VAR_150 == 0) {\n\t\t\t    VAR_9 = url_encode(remove_space(VAR_149->ptr), VAR_38,\n\t\t\t\t\t   VAR_0->document_charset);\n\t\t\t    pushEvent(VAR_153, VAR_9);\n\t\t\t}\n#endif\n\t\t    }\n\t\t    break;\n\t\tcase VAR_156:\n\t\t    VAR_32 = VAR_156;\n\t\t    break;\n\t\tcase VAR_157:\n\t\t    VAR_32 = VAR_157;\n\t\t    break;\n\t\tcase VAR_158:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_124, &VAR_28))\n\t\t\tprocess_form_int(VAR_64, VAR_28);\n\t\t    break;\n\t\tcase VAR_159:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_128,\n\t\t\t\t\t    &VAR_41)\n\t\t\t&& VAR_41 >= 0 && VAR_41 < VAR_42) {\n\t\t\tVAR_44[VAR_41] = Strnew();\n\t\t    }\n\t\t    else\n\t\t\tVAR_41 = -1;\n\t\t    break;\n\t\tcase VAR_160:\n\t\t    if (VAR_41 >= 0) {\n\t\t\tFormItemList *VAR_161 =\n\t\t\t    (FormItemList *)VAR_33[VAR_41]->url;\n\t\t\tVAR_161->init_value = VAR_161->value =\n\t\t\t    VAR_44[VAR_41];\n\t\t    }\n\t\t    break;\n#ifdef VAR_34\n\t\tcase VAR_162:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_129, &VAR_45)\n\t\t\t&& VAR_45 >= 0 && VAR_45 < VAR_46) {\n\t\t\tVAR_48[VAR_45].first = NULL;\n\t\t\tVAR_48[VAR_45].last = NULL;\n\t\t    }\n\t\t    else\n\t\t\tVAR_45 = -1;\n\t\t    break;\n\t\tcase VAR_163:\n\t\t    if (VAR_45 >= 0) {\n\t\t\tFormItemList *VAR_161 =\n\t\t\t    (FormItemList *)VAR_35[VAR_45]->url;\n\t\t\tVAR_161->select_option = VAR_48[VAR_45].first;\n\t\t\tchooseSelectOption(VAR_161, VAR_161->select_option);\n\t\t\tVAR_161->init_selected = VAR_161->selected;\n\t\t\tVAR_161->init_value = VAR_161->value;\n\t\t\tVAR_161->init_label = VAR_161->label;\n\t\t    }\n\t\t    break;\n\t\tcase VAR_164:\n\t\t    if (VAR_45 >= 0) {\n\t\t\tint VAR_165;\n\t\t\tVAR_10 = \"\";\n\t\t\tparsedtag_get_value(VAR_64, VAR_166, &VAR_10);\n\t\t\tVAR_9 = VAR_10;\n\t\t\tparsedtag_get_value(VAR_64, VAR_167, &VAR_9);\n\t\t\tVAR_165 = parsedtag_exists(VAR_64, VAR_168);\n\t\t\taddSelectOption(&VAR_48[VAR_45],\n\t\t\t\t\tStrnew_charp(VAR_9), Strnew_charp(VAR_10),\n\t\t\t\t\tVAR_165);\n\t\t    }\n\t\t    break;\n#endif\n\t\tcase VAR_169:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_88, &VAR_9))\n\t\t\tVAR_0->buffername = html_unquote(VAR_9);\n\t\t    break;\n\t\tcase VAR_170:\n\t\t    VAR_16 |= VAR_53;\n\t\t    if (parsedtag_get_value(VAR_64, VAR_171, &VAR_9))\n\t\t\tVAR_31 = (char)atoi(VAR_9);\n\t\t    break;\n\t\tcase VAR_172:\n\t\t    VAR_16 &= ~VAR_53;\n\t\t    break;\n\t\t}\n#ifdef\tVAR_173\n\t\tVAR_26 = NULL;\n\t\tif (parsedtag_get_value(VAR_64, VAR_174, &VAR_26)) {\n\t\t    VAR_26 = url_quote_conv(VAR_26, VAR_39);\n\t\t    registerName(VAR_0, VAR_26, currentLn(VAR_0), VAR_18);\n\t\t}\n\t\tif (VAR_81 &&\n\t\t    parsedtag_get_value(VAR_64, VAR_82, &VAR_9)) {\n\t\t    VAR_9 = url_quote_conv(VAR_9, VAR_0->document_charset);\n\t\t    if (!VAR_25 || strcmp(VAR_25->body->name, VAR_9)) {\n\t\t\tVAR_25 = search_frame(VAR_81, VAR_9);\n\t\t\tif (VAR_25 && VAR_25->body->attr != VAR_83)\n\t\t\t    VAR_25 = NULL;\n\t\t    }\n\t\t}\n\t\tif (VAR_26 && VAR_25)\n\t\t    VAR_25->body->nameList =\n\t\t\tputAnchor(VAR_25->body->nameList, VAR_26, NULL,\n\t\t\t\t  (Anchor **)NULL, NULL, NULL, '\\0',\n\t\t\t\t  currentLn(VAR_0), VAR_18);\n#endif\t\t\t\t/* COMMENT_8 */\n\t    }\n\t}\n\t/* COMMENT_9 */\n\tif (!VAR_32)\n\t    addnewline(VAR_0, VAR_3, VAR_4, NULL, VAR_18, -1, VAR_19);\n\tif (VAR_32 == VAR_157)\n\t    VAR_32 = 0;\n\tif (str != VAR_30) {\n\t    VAR_29 = Strsubstr(VAR_29, str - VAR_29->ptr, VAR_30 - str);\n\t    goto proc_again;\n\t}\n    }\n#ifdef VAR_20\n    if (VAR_50)\n\tfclose(VAR_21);\n#endif\n    for (VAR_28 = 1; VAR_28 <= VAR_125; VAR_28++)\n\tif (VAR_126[VAR_28])\n\t    VAR_126[VAR_28]->next = VAR_126[VAR_28 - 1];\n    VAR_0->formlist = (VAR_125 >= 0) ? VAR_126[VAR_125] : NULL;\n    if (VAR_41)\n\taddMultirowsForm(VAR_0, VAR_0->formitem);\n#ifdef VAR_37\n    addMultirowsImg(VAR_0, VAR_0->img);\n#endif\n}",
    "func_graph_path_before": "tats/w3m/c6c39973e7d336854e9a2d43119d1220b36e2035/file.c/vul/before/0.json",
    "func": "static void\nHTMLlineproc2body(Buffer *buf, Str (*feed) (), int llimit)\n{\n    static char *outc = NULL;\n    static Lineprop *outp = NULL;\n    static int out_size = 0;\n    Anchor *a_href = NULL, *a_img = NULL, *a_form = NULL;\n    char *p, *q, *r, *s, *t, *str;\n    Lineprop mode, effect, ex_effect;\n    int pos;\n    int nlines;\n#ifdef DEBUG\n    FILE *debug = NULL;\n#endif\n    struct frameset *frameset_s[FRAMESTACK_SIZE];\n    int frameset_sp = -1;\n    union frameset_element *idFrame = NULL;\n    char *id = NULL;\n    int hseq, form_id;\n    Str line;\n    char *endp;\n    char symbol = '\\0';\n    int internal = 0;\n    Anchor **a_textarea = NULL;\n#ifdef MENU_SELECT\n    Anchor **a_select = NULL;\n#endif\n#if defined(USE_M17N) || defined(USE_IMAGE)\n    ParsedURL *base = baseURL(buf);\n#endif\n#ifdef USE_M17N\n    wc_ces name_charset = url_to_charset(NULL, &buf->currentURL,\n\t\t\t\t\t buf->document_charset);\n#endif\n\n    if (out_size == 0) {\n\tout_size = LINELEN;\n\toutc = NewAtom_N(char, out_size);\n\toutp = NewAtom_N(Lineprop, out_size);\n    }\n\n    n_textarea = -1;\n    if (!max_textarea) {\t/* halfload */\n\tmax_textarea = MAX_TEXTAREA;\n\ttextarea_str = New_N(Str, max_textarea);\n\ta_textarea = New_N(Anchor *, max_textarea);\n    }\n#ifdef MENU_SELECT\n    n_select = -1;\n    if (!max_select) {\t\t/* halfload */\n\tmax_select = MAX_SELECT;\n\tselect_option = New_N(FormSelectOption, max_select);\n\ta_select = New_N(Anchor *, max_select);\n    }\n#endif\n\n#ifdef DEBUG\n    if (w3m_debug)\n\tdebug = fopen(\"zzzerr\", \"a\");\n#endif\n\n    effect = 0;\n    ex_effect = 0;\n    nlines = 0;\n    while ((line = feed()) != NULL) {\n#ifdef DEBUG\n\tif (w3m_debug) {\n\t    Strfputs(line, debug);\n\t    fputc('\\n', debug);\n\t}\n#endif\n\tif (n_textarea >= 0 && *(line->ptr) != '<') {\t/* halfload */\n\t    Strcat(textarea_str[n_textarea], line);\n\t    continue;\n\t}\n      proc_again:\n\tif (++nlines == llimit)\n\t    break;\n\tpos = 0;\n#ifdef ENABLE_REMOVE_TRAILINGSPACES\n\tStrremovetrailingspaces(line);\n#endif\n\tstr = line->ptr;\n\tendp = str + line->length;\n\twhile (str < endp) {\n\t    PSIZE;\n\t    mode = get_mctype(str);\n\t    if ((effect | ex_efct(ex_effect)) & PC_SYMBOL && *str != '<') {\n#ifdef USE_M17N\n\t\tchar **buf = set_symbol(symbol_width0);\n\t\tint len;\n\n\t\tp = buf[(int)symbol];\n\t\tlen = get_mclen(p);\n\t\tmode = get_mctype(p);\n\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(p++));\n\t\tif (--len) {\n\t\t    mode = (mode & ~PC_WCHAR1) | PC_WCHAR2;\n\t\t    while (len--) {\n\t\t\tPSIZE;\n\t\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(p++));\n\t\t    }\n\t\t}\n#else\n\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), SYMBOL_BASE + symbol);\n#endif\n\t\tstr += symbol_width;\n\t    }\n#ifdef USE_M17N\n\t    else if (mode == PC_CTRL || mode == PC_UNDEF) {\n#else\n\t    else if (mode == PC_CTRL || IS_INTSPACE(*str)) {\n#endif\n\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\tstr++;\n\t    }\n#ifdef USE_M17N\n\t    else if (mode & PC_UNKNOWN) {\n\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\tstr += get_mclen(str);\n\t    }\n#endif\n\t    else if (*str != '<' && *str != '&') {\n#ifdef USE_M17N\n\t\tint len = get_mclen(str);\n#endif\n\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(str++));\n#ifdef USE_M17N\n\t\tif (--len) {\n\t\t    mode = (mode & ~PC_WCHAR1) | PC_WCHAR2;\n\t\t    while (len--) {\n\t\t\tPSIZE;\n\t\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(str++));\n\t\t    }\n\t\t}\n#endif\n\t    }\n\t    else if (*str == '&') {\n\t\t/* \n\t\t * & escape processing\n\t\t */\n\t\tp = getescapecmd(&str);\n\t\twhile (*p) {\n\t\t    PSIZE;\n\t\t    mode = get_mctype((unsigned char *)p);\n#ifdef USE_M17N\n\t\t    if (mode == PC_CTRL || mode == PC_UNDEF) {\n#else\n\t\t    if (mode == PC_CTRL || IS_INTSPACE(*str)) {\n#endif\n\t\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\t\tp++;\n\t\t    }\n#ifdef USE_M17N\n\t\t    else if (mode & PC_UNKNOWN) {\n\t\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\t\tp += get_mclen(p);\n\t\t    }\n#endif\n\t\t    else {\n#ifdef USE_M17N\n\t\t\tint len = get_mclen(p);\n#endif\n\t\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(p++));\n#ifdef USE_M17N\n\t\t\tif (--len) {\n\t\t\t    mode = (mode & ~PC_WCHAR1) | PC_WCHAR2;\n\t\t\t    while (len--) {\n\t\t\t\tPSIZE;\n\t\t\t\tPPUSH(mode | effect | ex_efct(ex_effect), *(p++));\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t    }\n\t\t}\n\t    }\n\t    else {\n\t\t/* tag processing */\n\t\tstruct parsed_tag *tag;\n\t\tif (!(tag = parse_tag(&str, TRUE)))\n\t\t    continue;\n\t\tswitch (tag->tagid) {\n\t\tcase HTML_B:\n\t\t    effect |= PE_BOLD;\n\t\t    break;\n\t\tcase HTML_N_B:\n\t\t    effect &= ~PE_BOLD;\n\t\t    break;\n\t\tcase HTML_I:\n\t\t    ex_effect |= PE_EX_ITALIC;\n\t\t    break;\n\t\tcase HTML_N_I:\n\t\t    ex_effect &= ~PE_EX_ITALIC;\n\t\t    break;\n\t\tcase HTML_INS:\n\t\t    ex_effect |= PE_EX_INSERT;\n\t\t    break;\n\t\tcase HTML_N_INS:\n\t\t    ex_effect &= ~PE_EX_INSERT;\n\t\t    break;\n\t\tcase HTML_U:\n\t\t    effect |= PE_UNDER;\n\t\t    break;\n\t\tcase HTML_N_U:\n\t\t    effect &= ~PE_UNDER;\n\t\t    break;\n\t\tcase HTML_S:\n\t\t    ex_effect |= PE_EX_STRIKE;\n\t\t    break;\n\t\tcase HTML_N_S:\n\t\t    ex_effect &= ~PE_EX_STRIKE;\n\t\t    break;\n\t\tcase HTML_A:\n\t\t    if (renderFrameSet &&\n\t\t\tparsedtag_get_value(tag, ATTR_FRAMENAME, &p)) {\n\t\t\tp = url_quote_conv(p, buf->document_charset);\n\t\t\tif (!idFrame || strcmp(idFrame->body->name, p)) {\n\t\t\t    idFrame = search_frame(renderFrameSet, p);\n\t\t\t    if (idFrame && idFrame->body->attr != F_BODY)\n\t\t\t\tidFrame = NULL;\n\t\t\t}\n\t\t    }\n\t\t    p = r = s = NULL;\n\t\t    q = buf->baseTarget;\n\t\t    t = \"\";\n\t\t    hseq = 0;\n\t\t    id = NULL;\n\t\t    if (parsedtag_get_value(tag, ATTR_NAME, &id)) {\n\t\t\tid = url_quote_conv(id, name_charset);\n\t\t\tregisterName(buf, id, currentLn(buf), pos);\n\t\t    }\n\t\t    if (parsedtag_get_value(tag, ATTR_HREF, &p))\n\t\t\tp = url_encode(remove_space(p), base,\n\t\t\t\t       buf->document_charset);\n\t\t    if (parsedtag_get_value(tag, ATTR_TARGET, &q))\n\t\t\tq = url_quote_conv(q, buf->document_charset);\n\t\t    if (parsedtag_get_value(tag, ATTR_REFERER, &r))\n\t\t\tr = url_encode(r, base,\n\t\t\t\t       buf->document_charset);\n\t\t    parsedtag_get_value(tag, ATTR_TITLE, &s);\n\t\t    parsedtag_get_value(tag, ATTR_ACCESSKEY, &t);\n\t\t    parsedtag_get_value(tag, ATTR_HSEQ, &hseq);\n\t\t    if (hseq > 0)\n\t\t\tbuf->hmarklist =\n\t\t\t    putHmarker(buf->hmarklist, currentLn(buf),\n\t\t\t\t       pos, hseq - 1);\n\t\t    else if (hseq < 0) {\n\t\t\tint h = -hseq - 1;\n\t\t\tif (buf->hmarklist &&\n\t\t\t    h < buf->hmarklist->nmark &&\n\t\t\t    buf->hmarklist->marks[h].invalid) {\n\t\t\t    buf->hmarklist->marks[h].pos = pos;\n\t\t\t    buf->hmarklist->marks[h].line = currentLn(buf);\n\t\t\t    buf->hmarklist->marks[h].invalid = 0;\n\t\t\t    hseq = -hseq;\n\t\t\t}\n\t\t    }\n\t\t    if (id && idFrame)\n\t\t\tidFrame->body->nameList =\n\t\t\t    putAnchor(idFrame->body->nameList, id, NULL,\n\t\t\t\t      (Anchor **)NULL, NULL, NULL, '\\0',\n\t\t\t\t      currentLn(buf), pos);\n\t\t    if (p) {\n\t\t\teffect |= PE_ANCHOR;\n\t\t\ta_href = registerHref(buf, p, q, r, s,\n\t\t\t\t\t      *t, currentLn(buf), pos);\n\t\t\ta_href->hseq = ((hseq > 0) ? hseq : -hseq) - 1;\n\t\t\ta_href->slave = (hseq > 0) ? FALSE : TRUE;\n\t\t    }\n\t\t    break;\n\t\tcase HTML_N_A:\n\t\t    effect &= ~PE_ANCHOR;\n\t\t    if (a_href) {\n\t\t\ta_href->end.line = currentLn(buf);\n\t\t\ta_href->end.pos = pos;\n\t\t\tif (a_href->start.line == a_href->end.line &&\n\t\t\t    a_href->start.pos == a_href->end.pos) {\n\t\t\t    if (buf->hmarklist &&\n\t\t\t\ta_href->hseq < buf->hmarklist->nmark)\n\t\t\t\tbuf->hmarklist->marks[a_href->hseq].invalid = 1;\n\t\t\t    a_href->hseq = -1;\n\t\t\t}\n\t\t\ta_href = NULL;\n\t\t    }\n\t\t    break;\n\n\t\tcase HTML_LINK:\n\t\t    addLink(buf, tag);\n\t\t    break;\n\n\t\tcase HTML_IMG_ALT:\n\t\t    if (parsedtag_get_value(tag, ATTR_SRC, &p)) {\n#ifdef USE_IMAGE\n\t\t\tint w = -1, h = -1, iseq = 0, ismap = 0;\n\t\t\tint xoffset = 0, yoffset = 0, top = 0, bottom = 0;\n\t\t\tparsedtag_get_value(tag, ATTR_HSEQ, &iseq);\n\t\t\tparsedtag_get_value(tag, ATTR_WIDTH, &w);\n\t\t\tparsedtag_get_value(tag, ATTR_HEIGHT, &h);\n\t\t\tparsedtag_get_value(tag, ATTR_XOFFSET, &xoffset);\n\t\t\tparsedtag_get_value(tag, ATTR_YOFFSET, &yoffset);\n\t\t\tparsedtag_get_value(tag, ATTR_TOP_MARGIN, &top);\n\t\t\tparsedtag_get_value(tag, ATTR_BOTTOM_MARGIN, &bottom);\n\t\t\tif (parsedtag_exists(tag, ATTR_ISMAP))\n\t\t\t    ismap = 1;\n\t\t\tq = NULL;\n\t\t\tparsedtag_get_value(tag, ATTR_USEMAP, &q);\n\t\t\tif (iseq > 0) {\n\t\t\t    buf->imarklist = putHmarker(buf->imarklist,\n\t\t\t\t\t\t\tcurrentLn(buf), pos,\n\t\t\t\t\t\t\tiseq - 1);\n\t\t\t}\n#endif\n\t\t\ts = NULL;\n\t\t\tparsedtag_get_value(tag, ATTR_TITLE, &s);\n\t\t\tp = url_quote_conv(remove_space(p),\n\t\t\t\t\t   buf->document_charset);\n\t\t\ta_img = registerImg(buf, p, s, currentLn(buf), pos);\n#ifdef USE_IMAGE\n\t\t\ta_img->hseq = iseq;\n\t\t\ta_img->image = NULL;\n\t\t\tif (iseq > 0) {\n\t\t\t    ParsedURL u;\n\t\t\t    Image *image;\n\n\t\t\t    parseURL2(a_img->url, &u, base);\n\t\t\t    a_img->image = image = New(Image);\n\t\t\t    image->url = parsedURL2Str(&u)->ptr;\n\t\t\t    if (!uncompressed_file_type(u.file, &image->ext))\n\t\t\t\timage->ext = filename_extension(u.file, TRUE);\n\t\t\t    image->cache = NULL;\n\t\t\t    image->width =\n\t\t\t\t(w > MAX_IMAGE_SIZE) ? MAX_IMAGE_SIZE : w;\n\t\t\t    image->height =\n\t\t\t\t(h > MAX_IMAGE_SIZE) ? MAX_IMAGE_SIZE : h;\n\t\t\t    image->xoffset = xoffset;\n\t\t\t    image->yoffset = yoffset;\n\t\t\t    image->y = currentLn(buf) - top;\n\t\t\t    if (image->xoffset < 0 && pos == 0)\n\t\t\t\timage->xoffset = 0;\n\t\t\t    if (image->yoffset < 0 && image->y == 1)\n\t\t\t\timage->yoffset = 0;\n\t\t\t    image->rows = 1 + top + bottom;\n\t\t\t    image->map = q;\n\t\t\t    image->ismap = ismap;\n\t\t\t    image->touch = 0;\n\t\t\t    image->cache = getImage(image, base,\n\t\t\t\t\t\t    IMG_FLAG_SKIP);\n\t\t\t}\n\t\t\telse if (iseq < 0) {\n\t\t\t    BufferPoint *po = buf->imarklist->marks - iseq - 1;\n\t\t\t    Anchor *a = retrieveAnchor(buf->img,\n\t\t\t\t\t\t       po->line, po->pos);\n\t\t\t    if (a) {\n\t\t\t\ta_img->url = a->url;\n\t\t\t\ta_img->image = a->image;\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t    }\n\t\t    effect |= PE_IMAGE;\n\t\t    break;\n\t\tcase HTML_N_IMG_ALT:\n\t\t    effect &= ~PE_IMAGE;\n\t\t    if (a_img) {\n\t\t\ta_img->end.line = currentLn(buf);\n\t\t\ta_img->end.pos = pos;\n\t\t    }\n\t\t    a_img = NULL;\n\t\t    break;\n\t\tcase HTML_INPUT_ALT:\n\t\t    {\n\t\t\tFormList *form;\n\t\t\tint top = 0, bottom = 0;\n\t\t\tint textareanumber = -1;\n#ifdef MENU_SELECT\n\t\t\tint selectnumber = -1;\n#endif\n\t\t\thseq = 0;\n\t\t\tform_id = -1;\n\n\t\t\tparsedtag_get_value(tag, ATTR_HSEQ, &hseq);\n\t\t\tparsedtag_get_value(tag, ATTR_FID, &form_id);\n\t\t\tparsedtag_get_value(tag, ATTR_TOP_MARGIN, &top);\n\t\t\tparsedtag_get_value(tag, ATTR_BOTTOM_MARGIN, &bottom);\n\t\t\tif (form_id < 0 || form_id > form_max || forms == NULL)\n\t\t\t    break;\t/* outside of <form>..</form> */\n\t\t\tform = forms[form_id];\n\t\t\tif (hseq > 0) {\n\t\t\t    int hpos = pos;\n\t\t\t    if (*str == '[')\n\t\t\t\thpos++;\n\t\t\t    buf->hmarklist =\n\t\t\t\tputHmarker(buf->hmarklist, currentLn(buf),\n\t\t\t\t\t   hpos, hseq - 1);\n\t\t\t}\n\t\t\telse if (hseq < 0) {\n\t\t\t    int h = -hseq - 1;\n\t\t\t    int hpos = pos;\n\t\t\t    if (*str == '[')\n\t\t\t\thpos++;\n\t\t\t    if (buf->hmarklist &&\n\t\t\t\th < buf->hmarklist->nmark &&\n\t\t\t\tbuf->hmarklist->marks[h].invalid) {\n\t\t\t\tbuf->hmarklist->marks[h].pos = hpos;\n\t\t\t\tbuf->hmarklist->marks[h].line = currentLn(buf);\n\t\t\t\tbuf->hmarklist->marks[h].invalid = 0;\n\t\t\t\thseq = -hseq;\n\t\t\t    }\n\t\t\t}\n\n\t\t\tif (!form->target)\n\t\t\t    form->target = buf->baseTarget;\n\t\t\tif (a_textarea &&\n\t\t\t    parsedtag_get_value(tag, ATTR_TEXTAREANUMBER,\n\t\t\t\t\t\t&textareanumber)) {\n\t\t\t    if (textareanumber >= max_textarea) {\n\t\t\t\tmax_textarea = 2 * textareanumber;\n\t\t\t\ttextarea_str = New_Reuse(Str, textarea_str,\n\t\t\t\t\t\t\t max_textarea);\n\t\t\t\ta_textarea = New_Reuse(Anchor *, a_textarea,\n\t\t\t\t\t\t       max_textarea);\n\t\t\t    }\n\t\t\t}\n#ifdef MENU_SELECT\n\t\t\tif (a_select &&\n\t\t\t    parsedtag_get_value(tag, ATTR_SELECTNUMBER,\n\t\t\t\t\t\t&selectnumber)) {\n\t\t\t    if (selectnumber >= max_select) {\n\t\t\t\tmax_select = 2 * selectnumber;\n\t\t\t\tselect_option = New_Reuse(FormSelectOption,\n\t\t\t\t\t\t\t  select_option,\n\t\t\t\t\t\t\t  max_select);\n\t\t\t\ta_select = New_Reuse(Anchor *, a_select,\n\t\t\t\t\t\t     max_select);\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t\ta_form =\n\t\t\t    registerForm(buf, form, tag, currentLn(buf), pos);\n\t\t\tif (a_textarea && textareanumber >= 0)\n\t\t\t    a_textarea[textareanumber] = a_form;\n#ifdef MENU_SELECT\n\t\t\tif (a_select && selectnumber >= 0)\n\t\t\t    a_select[selectnumber] = a_form;\n#endif\n\t\t\tif (a_form) {\n\t\t\t    a_form->hseq = hseq - 1;\n\t\t\t    a_form->y = currentLn(buf) - top;\n\t\t\t    a_form->rows = 1 + top + bottom;\n\t\t\t    if (!parsedtag_exists(tag, ATTR_NO_EFFECT))\n\t\t\t\teffect |= PE_FORM;\n\t\t\t    break;\n\t\t\t}\n\t\t    }\n\t\tcase HTML_N_INPUT_ALT:\n\t\t    effect &= ~PE_FORM;\n\t\t    if (a_form) {\n\t\t\ta_form->end.line = currentLn(buf);\n\t\t\ta_form->end.pos = pos;\n\t\t\tif (a_form->start.line == a_form->end.line &&\n\t\t\t    a_form->start.pos == a_form->end.pos)\n\t\t\t    a_form->hseq = -1;\n\t\t    }\n\t\t    a_form = NULL;\n\t\t    break;\n\t\tcase HTML_MAP:\n\t\t    if (parsedtag_get_value(tag, ATTR_NAME, &p)) {\n\t\t\tMapList *m = New(MapList);\n\t\t\tm->name = Strnew_charp(p);\n\t\t\tm->area = newGeneralList();\n\t\t\tm->next = buf->maplist;\n\t\t\tbuf->maplist = m;\n\t\t    }\n\t\t    break;\n\t\tcase HTML_N_MAP:\n\t\t    /* nothing to do */\n\t\t    break;\n\t\tcase HTML_AREA:\n\t\t    if (buf->maplist == NULL)\t/* outside of <map>..</map> */\n\t\t\tbreak;\n\t\t    if (parsedtag_get_value(tag, ATTR_HREF, &p)) {\n\t\t\tMapArea *a;\n\t\t\tp = url_encode(remove_space(p), base,\n\t\t\t\t       buf->document_charset);\n\t\t\tt = NULL;\n\t\t\tparsedtag_get_value(tag, ATTR_TARGET, &t);\n\t\t\tq = \"\";\n\t\t\tparsedtag_get_value(tag, ATTR_ALT, &q);\n\t\t\tr = NULL;\n\t\t\ts = NULL;\n#ifdef USE_IMAGE\n\t\t\tparsedtag_get_value(tag, ATTR_SHAPE, &r);\n\t\t\tparsedtag_get_value(tag, ATTR_COORDS, &s);\n#endif\n\t\t\ta = newMapArea(p, t, q, r, s);\n\t\t\tpushValue(buf->maplist->area, (void *)a);\n\t\t    }\n\t\t    break;\n\t\tcase HTML_FRAMESET:\n\t\t    frameset_sp++;\n\t\t    if (frameset_sp >= FRAMESTACK_SIZE)\n\t\t\tbreak;\n\t\t    frameset_s[frameset_sp] = newFrameSet(tag);\n\t\t    if (frameset_s[frameset_sp] == NULL)\n\t\t\tbreak;\n\t\t    if (frameset_sp == 0) {\n\t\t\tif (buf->frameset == NULL) {\n\t\t\t    buf->frameset = frameset_s[frameset_sp];\n\t\t\t}\n\t\t\telse\n\t\t\t    pushFrameTree(&(buf->frameQ),\n\t\t\t\t\t  frameset_s[frameset_sp], NULL);\n\t\t    }\n\t\t    else\n\t\t\taddFrameSetElement(frameset_s[frameset_sp - 1],\n\t\t\t\t\t   *(union frameset_element *)\n\t\t\t\t\t   &frameset_s[frameset_sp]);\n\t\t    break;\n\t\tcase HTML_N_FRAMESET:\n\t\t    if (frameset_sp >= 0)\n\t\t\tframeset_sp--;\n\t\t    break;\n\t\tcase HTML_FRAME:\n\t\t    if (frameset_sp >= 0 && frameset_sp < FRAMESTACK_SIZE) {\n\t\t\tunion frameset_element element;\n\n\t\t\telement.body = newFrame(tag, buf);\n\t\t\taddFrameSetElement(frameset_s[frameset_sp], element);\n\t\t    }\n\t\t    break;\n\t\tcase HTML_BASE:\n\t\t    if (parsedtag_get_value(tag, ATTR_HREF, &p)) {\n\t\t\tp = url_encode(remove_space(p), NULL,\n\t\t\t\t       buf->document_charset);\n\t\t\tif (!buf->baseURL)\n\t\t\t    buf->baseURL = New(ParsedURL);\n\t\t\tparseURL(p, buf->baseURL, NULL);\n#if defined(USE_M17N) || defined(USE_IMAGE)\n\t\t\tbase = buf->baseURL;\n#endif\n\t\t    }\n\t\t    if (parsedtag_get_value(tag, ATTR_TARGET, &p))\n\t\t\tbuf->baseTarget =\n\t\t\t    url_quote_conv(p, buf->document_charset);\n\t\t    break;\n\t\tcase HTML_META:\n\t\t    p = q = NULL;\n\t\t    parsedtag_get_value(tag, ATTR_HTTP_EQUIV, &p);\n\t\t    parsedtag_get_value(tag, ATTR_CONTENT, &q);\n\t\t    if (p && q && !strcasecmp(p, \"refresh\") && MetaRefresh) {\n\t\t\tStr tmp = NULL;\n\t\t\tint refresh_interval = getMetaRefreshParam(q, &tmp);\n#ifdef USE_ALARM\n\t\t\tif (tmp) {\n\t\t\t    p = url_encode(remove_space(tmp->ptr), base,\n\t\t\t\t\t   buf->document_charset);\n\t\t\t    buf->event = setAlarmEvent(buf->event,\n\t\t\t\t\t\t       refresh_interval,\n\t\t\t\t\t\t       AL_IMPLICIT_ONCE,\n\t\t\t\t\t\t       FUNCNAME_gorURL, p);\n\t\t\t}\n\t\t\telse if (refresh_interval > 0)\n\t\t\t    buf->event = setAlarmEvent(buf->event,\n\t\t\t\t\t\t       refresh_interval,\n\t\t\t\t\t\t       AL_IMPLICIT,\n\t\t\t\t\t\t       FUNCNAME_reload, NULL);\n#else\n\t\t\tif (tmp && refresh_interval == 0) {\n\t\t\t    p = url_encode(remove_space(tmp->ptr), base,\n\t\t\t\t\t   buf->document_charset);\n\t\t\t    pushEvent(FUNCNAME_gorURL, p);\n\t\t\t}\n#endif\n\t\t    }\n\t\t    break;\n\t\tcase HTML_INTERNAL:\n\t\t    internal = HTML_INTERNAL;\n\t\t    break;\n\t\tcase HTML_N_INTERNAL:\n\t\t    internal = HTML_N_INTERNAL;\n\t\t    break;\n\t\tcase HTML_FORM_INT:\n\t\t    if (parsedtag_get_value(tag, ATTR_FID, &form_id))\n\t\t\tprocess_form_int(tag, form_id);\n\t\t    break;\n\t\tcase HTML_TEXTAREA_INT:\n\t\t    if (parsedtag_get_value(tag, ATTR_TEXTAREANUMBER,\n\t\t\t\t\t    &n_textarea)\n\t\t\t&& n_textarea >= 0 && n_textarea < max_textarea) {\n\t\t\ttextarea_str[n_textarea] = Strnew();\n\t\t    }\n\t\t    else\n\t\t\tn_textarea = -1;\n\t\t    break;\n\t\tcase HTML_N_TEXTAREA_INT:\n\t\t    if (n_textarea >= 0) {\n\t\t\tFormItemList *item =\n\t\t\t    (FormItemList *)a_textarea[n_textarea]->url;\n\t\t\titem->init_value = item->value =\n\t\t\t    textarea_str[n_textarea];\n\t\t    }\n\t\t    break;\n#ifdef MENU_SELECT\n\t\tcase HTML_SELECT_INT:\n\t\t    if (parsedtag_get_value(tag, ATTR_SELECTNUMBER, &n_select)\n\t\t\t&& n_select >= 0 && n_select < max_select) {\n\t\t\tselect_option[n_select].first = NULL;\n\t\t\tselect_option[n_select].last = NULL;\n\t\t    }\n\t\t    else\n\t\t\tn_select = -1;\n\t\t    break;\n\t\tcase HTML_N_SELECT_INT:\n\t\t    if (a_select && n_select >= 0) {\n\t\t\tFormItemList *item =\n\t\t\t    (FormItemList *)a_select[n_select]->url;\n\t\t\titem->select_option = select_option[n_select].first;\n\t\t\tchooseSelectOption(item, item->select_option);\n\t\t\titem->init_selected = item->selected;\n\t\t\titem->init_value = item->value;\n\t\t\titem->init_label = item->label;\n\t\t    }\n\t\t    break;\n\t\tcase HTML_OPTION_INT:\n\t\t    if (n_select >= 0) {\n\t\t\tint selected;\n\t\t\tq = \"\";\n\t\t\tparsedtag_get_value(tag, ATTR_LABEL, &q);\n\t\t\tp = q;\n\t\t\tparsedtag_get_value(tag, ATTR_VALUE, &p);\n\t\t\tselected = parsedtag_exists(tag, ATTR_SELECTED);\n\t\t\taddSelectOption(&select_option[n_select],\n\t\t\t\t\tStrnew_charp(p), Strnew_charp(q),\n\t\t\t\t\tselected);\n\t\t    }\n\t\t    break;\n#endif\n\t\tcase HTML_TITLE_ALT:\n\t\t    if (parsedtag_get_value(tag, ATTR_TITLE, &p))\n\t\t\tbuf->buffername = html_unquote(p);\n\t\t    break;\n\t\tcase HTML_SYMBOL:\n\t\t    effect |= PC_SYMBOL;\n\t\t    if (parsedtag_get_value(tag, ATTR_TYPE, &p))\n\t\t\tsymbol = (char)atoi(p);\n\t\t    break;\n\t\tcase HTML_N_SYMBOL:\n\t\t    effect &= ~PC_SYMBOL;\n\t\t    break;\n\t\t}\n#ifdef\tID_EXT\n\t\tid = NULL;\n\t\tif (parsedtag_get_value(tag, ATTR_ID, &id)) {\n\t\t    id = url_quote_conv(id, name_charset);\n\t\t    registerName(buf, id, currentLn(buf), pos);\n\t\t}\n\t\tif (renderFrameSet &&\n\t\t    parsedtag_get_value(tag, ATTR_FRAMENAME, &p)) {\n\t\t    p = url_quote_conv(p, buf->document_charset);\n\t\t    if (!idFrame || strcmp(idFrame->body->name, p)) {\n\t\t\tidFrame = search_frame(renderFrameSet, p);\n\t\t\tif (idFrame && idFrame->body->attr != F_BODY)\n\t\t\t    idFrame = NULL;\n\t\t    }\n\t\t}\n\t\tif (id && idFrame)\n\t\t    idFrame->body->nameList =\n\t\t\tputAnchor(idFrame->body->nameList, id, NULL,\n\t\t\t\t  (Anchor **)NULL, NULL, NULL, '\\0',\n\t\t\t\t  currentLn(buf), pos);\n#endif\t\t\t\t/* ID_EXT */\n\t    }\n\t}\n\t/* end of processing for one line */\n\tif (!internal)\n\t    addnewline(buf, outc, outp, NULL, pos, -1, nlines);\n\tif (internal == HTML_N_INTERNAL)\n\t    internal = 0;\n\tif (str != endp) {\n\t    line = Strsubstr(line, str - line->ptr, endp - str);\n\t    goto proc_again;\n\t}\n    }\n#ifdef DEBUG\n    if (w3m_debug)\n\tfclose(debug);\n#endif\n    for (form_id = 1; form_id <= form_max; form_id++)\n\tif (forms[form_id])\n\t    forms[form_id]->next = forms[form_id - 1];\n    buf->formlist = (form_max >= 0) ? forms[form_max] : NULL;\n    if (n_textarea)\n\taddMultirowsForm(buf, buf->formitem);\n#ifdef USE_IMAGE\n    addMultirowsImg(buf, buf->img);\n#endif\n}",
    "abstract_func": "static void\nHTMLlineproc2body(Buffer *VAR_0, Str (*VAR_1) (), int VAR_2)\n{\n    static char *VAR_3 = NULL;\n    static Lineprop *VAR_4 = NULL;\n    static int VAR_5 = 0;\n    Anchor *VAR_6 = NULL, *VAR_7 = NULL, *VAR_8 = NULL;\n    char *VAR_9, *VAR_10, *VAR_11, *VAR_12, *VAR_13, *VAR_14;\n    Lineprop VAR_15, VAR_16, VAR_17;\n    int VAR_18;\n    int VAR_19;\n#ifdef VAR_20\n    FILE *VAR_21 = NULL;\n#endif\n    struct frameset *VAR_22[VAR_23];\n    int VAR_24 = -1;\n    union frameset_element *VAR_25 = NULL;\n    char *VAR_26 = NULL;\n    int VAR_27, VAR_28;\n    Str VAR_29;\n    char *VAR_30;\n    char VAR_31 = '\\0';\n    int VAR_32 = 0;\n    Anchor **VAR_33 = NULL;\n#ifdef VAR_34\n    Anchor **VAR_35 = NULL;\n#endif\n#if defined(VAR_36) || defined(VAR_37)\n    ParsedURL *VAR_38 = baseURL(VAR_0);\n#endif\n#ifdef VAR_36\n    wc_ces VAR_39 = url_to_charset(NULL, &VAR_0->currentURL,\n\t\t\t\t\t VAR_0->document_charset);\n#endif\n\n    if (VAR_5 == 0) {\n\tVAR_5 = VAR_40;\n\tVAR_3 = NewAtom_N(char, VAR_5);\n\tVAR_4 = NewAtom_N(Lineprop, VAR_5);\n    }\n\n    VAR_41 = -1;\n    if (!VAR_42) {\t/* COMMENT_0 */\n\tVAR_42 = VAR_43;\n\tVAR_44 = New_N(Str, VAR_42);\n\tVAR_33 = New_N(Anchor *, VAR_42);\n    }\n#ifdef VAR_34\n    VAR_45 = -1;\n    if (!VAR_46) {\t\t/* COMMENT_0 */\n\tVAR_46 = VAR_47;\n\tVAR_48 = New_N(VAR_49, VAR_46);\n\tVAR_35 = New_N(Anchor *, VAR_46);\n    }\n#endif\n\n#ifdef VAR_20\n    if (VAR_50)\n\tVAR_21 = fopen(\"zzzerr\", \"a\");\n#endif\n\n    VAR_16 = 0;\n    VAR_17 = 0;\n    VAR_19 = 0;\n    while ((VAR_29 = VAR_1()) != NULL) {\n#ifdef VAR_20\n\tif (VAR_50) {\n\t    Strfputs(VAR_29, VAR_21);\n\t    fputc('\\n', VAR_21);\n\t}\n#endif\n\tif (VAR_41 >= 0 && *(VAR_29->ptr) != '<') {\t/* COMMENT_0 */\n\t    Strcat(VAR_44[VAR_41], VAR_29);\n\t    continue;\n\t}\n      proc_again:\n\tif (++VAR_19 == VAR_2)\n\t    break;\n\tVAR_18 = 0;\n#ifdef VAR_51\n\tStrremovetrailingspaces(VAR_29);\n#endif\n\tVAR_14 = VAR_29->ptr;\n\tVAR_30 = VAR_14 + VAR_29->length;\n\twhile (VAR_14 < VAR_30) {\n\t    VAR_52;\n\t    VAR_15 = get_mctype(VAR_14);\n\t    if ((VAR_16 | ex_efct(VAR_17)) & VAR_53 && *VAR_14 != '<') {\n#ifdef VAR_36\n\t\tchar **VAR_0 = set_symbol(VAR_54);\n\t\tint VAR_55;\n\n\t\tVAR_9 = VAR_0[(int)VAR_31];\n\t\tVAR_55 = get_mclen(VAR_9);\n\t\tVAR_15 = get_mctype(VAR_9);\n\t\tPPUSH(VAR_15 | VAR_16 | ex_efct(VAR_17), *(VAR_9++));\n\t\tif (--VAR_55) {\n\t\t    VAR_15 = (VAR_15 & ~VAR_56) | VAR_57;\n\t\t    while (VAR_55--) {\n\t\t\tVAR_52;\n\t\t\tPPUSH(VAR_15 | VAR_16 | ex_efct(VAR_17), *(VAR_9++));\n\t\t    }\n\t\t}\n#else\n\t\tPPUSH(VAR_58 | VAR_16 | ex_efct(VAR_17), VAR_59 + VAR_31);\n#endif\n\t\tVAR_14 += VAR_60;\n\t    }\n#ifdef VAR_36\n\t    else if (mode == VAR_61 || mode == VAR_62) {\n#else\n\t    else if (mode == PC_CTRL || IS_INTSPACE(*str)) {\n#endif\n\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\tVAR_14++;\n\t    }\n#ifdef VAR_36\n\t    else if (mode & VAR_63) {\n\t\tPPUSH(VAR_58 | VAR_16 | ex_efct(VAR_17), ' ');\n\t\tVAR_14 += get_mclen(VAR_14);\n\t    }\n#endif\n\t    else if (*VAR_14 != '<' && *VAR_14 != '&') {\n#ifdef VAR_36\n\t\tint VAR_55 = get_mclen(VAR_14);\n#endif\n\t\tPPUSH(mode | VAR_16 | ex_efct(VAR_17), *(VAR_14++));\n#ifdef VAR_36\n\t\tif (--VAR_55) {\n\t\t    mode = (mode & ~VAR_56) | VAR_57;\n\t\t    while (VAR_55--) {\n\t\t\tVAR_52;\n\t\t\tPPUSH(mode | VAR_16 | ex_efct(VAR_17), *(VAR_14++));\n\t\t    }\n\t\t}\n#endif\n\t    }\n\t    else if (*str == '&') {\n\t\t/* COMMENT_1 */\n                        \n     \n\t\tVAR_9 = getescapecmd(&str);\n\t\twhile (*VAR_9) {\n\t\t    VAR_52;\n\t\t    mode = get_mctype((unsigned char *)VAR_9);\n#ifdef VAR_36\n\t\t    if (mode == VAR_61 || mode == VAR_62) {\n#else\n\t\t    if (mode == PC_CTRL || IS_INTSPACE(*str)) {\n#endif\n\t\t\tPPUSH(PC_ASCII | effect | ex_efct(ex_effect), ' ');\n\t\t\tVAR_9++;\n\t\t    }\n#ifdef VAR_36\n\t\t    else if (mode & VAR_63) {\n\t\t\tPPUSH(VAR_58 | VAR_16 | ex_efct(VAR_17), ' ');\n\t\t\tVAR_9 += get_mclen(VAR_9);\n\t\t    }\n#endif\n\t\t    else {\n#ifdef VAR_36\n\t\t\tint VAR_55 = get_mclen(VAR_9);\n#endif\n\t\t\tPPUSH(mode | VAR_16 | ex_efct(VAR_17), *(VAR_9++));\n#ifdef VAR_36\n\t\t\tif (--VAR_55) {\n\t\t\t    mode = (mode & ~VAR_56) | VAR_57;\n\t\t\t    while (VAR_55--) {\n\t\t\t\tVAR_52;\n\t\t\t\tPPUSH(mode | VAR_16 | ex_efct(VAR_17), *(VAR_9++));\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t    }\n\t\t}\n\t    }\n\t    else {\n\t\t/* COMMENT_4 */\n\t\tstruct parsed_tag *VAR_64;\n\t\tif (!(VAR_64 = parse_tag(&str, TRUE)))\n\t\t    continue;\n\t\tswitch (VAR_64->tagid) {\n\t\tcase VAR_65:\n\t\t    VAR_16 |= VAR_66;\n\t\t    break;\n\t\tcase VAR_67:\n\t\t    VAR_16 &= ~VAR_66;\n\t\t    break;\n\t\tcase VAR_68:\n\t\t    VAR_17 |= VAR_69;\n\t\t    break;\n\t\tcase VAR_70:\n\t\t    VAR_17 &= ~VAR_69;\n\t\t    break;\n\t\tcase VAR_71:\n\t\t    VAR_17 |= VAR_72;\n\t\t    break;\n\t\tcase VAR_73:\n\t\t    VAR_17 &= ~VAR_72;\n\t\t    break;\n\t\tcase VAR_74:\n\t\t    VAR_16 |= VAR_75;\n\t\t    break;\n\t\tcase VAR_76:\n\t\t    VAR_16 &= ~VAR_75;\n\t\t    break;\n\t\tcase VAR_77:\n\t\t    VAR_17 |= VAR_78;\n\t\t    break;\n\t\tcase VAR_79:\n\t\t    VAR_17 &= ~VAR_78;\n\t\t    break;\n\t\tcase VAR_80:\n\t\t    if (VAR_81 &&\n\t\t\tparsedtag_get_value(VAR_64, VAR_82, &VAR_9)) {\n\t\t\tVAR_9 = url_quote_conv(VAR_9, VAR_0->document_charset);\n\t\t\tif (!VAR_25 || strcmp(VAR_25->body->name, VAR_9)) {\n\t\t\t    VAR_25 = search_frame(VAR_81, VAR_9);\n\t\t\t    if (VAR_25 && VAR_25->body->attr != VAR_83)\n\t\t\t\tVAR_25 = NULL;\n\t\t\t}\n\t\t    }\n\t\t    VAR_9 = VAR_11 = VAR_12 = NULL;\n\t\t    VAR_10 = VAR_0->baseTarget;\n\t\t    VAR_13 = \"\";\n\t\t    VAR_27 = 0;\n\t\t    VAR_26 = NULL;\n\t\t    if (parsedtag_get_value(VAR_64, VAR_84, &VAR_26)) {\n\t\t\tVAR_26 = url_quote_conv(VAR_26, VAR_39);\n\t\t\tregisterName(VAR_0, VAR_26, currentLn(VAR_0), VAR_18);\n\t\t    }\n\t\t    if (parsedtag_get_value(VAR_64, VAR_85, &VAR_9))\n\t\t\tVAR_9 = url_encode(remove_space(VAR_9), VAR_38,\n\t\t\t\t       VAR_0->document_charset);\n\t\t    if (parsedtag_get_value(VAR_64, VAR_86, &VAR_10))\n\t\t\tVAR_10 = url_quote_conv(VAR_10, VAR_0->document_charset);\n\t\t    if (parsedtag_get_value(VAR_64, VAR_87, &VAR_11))\n\t\t\tVAR_11 = url_encode(VAR_11, VAR_38,\n\t\t\t\t       VAR_0->document_charset);\n\t\t    parsedtag_get_value(VAR_64, VAR_88, &VAR_12);\n\t\t    parsedtag_get_value(VAR_64, VAR_89, &VAR_13);\n\t\t    parsedtag_get_value(VAR_64, VAR_90, &VAR_27);\n\t\t    if (VAR_27 > 0)\n\t\t\tVAR_0->hmarklist =\n\t\t\t    putHmarker(VAR_0->hmarklist, currentLn(VAR_0),\n\t\t\t\t       VAR_18, VAR_27 - 1);\n\t\t    else if (VAR_27 < 0) {\n\t\t\tint VAR_91 = -VAR_27 - 1;\n\t\t\tif (VAR_0->hmarklist &&\n\t\t\t    VAR_91 < VAR_0->hmarklist->nmark &&\n\t\t\t    VAR_0->hmarklist->marks[VAR_91].invalid) {\n\t\t\t    VAR_0->hmarklist->marks[VAR_91].pos = VAR_18;\n\t\t\t    VAR_0->hmarklist->marks[VAR_91].line = currentLn(VAR_0);\n\t\t\t    VAR_0->hmarklist->marks[VAR_91].invalid = 0;\n\t\t\t    VAR_27 = -VAR_27;\n\t\t\t}\n\t\t    }\n\t\t    if (VAR_26 && VAR_25)\n\t\t\tVAR_25->body->nameList =\n\t\t\t    putAnchor(VAR_25->body->nameList, VAR_26, NULL,\n\t\t\t\t      (Anchor **)NULL, NULL, NULL, '\\0',\n\t\t\t\t      currentLn(VAR_0), VAR_18);\n\t\t    if (VAR_9) {\n\t\t\tVAR_16 |= VAR_92;\n\t\t\tVAR_6 = registerHref(VAR_0, VAR_9, VAR_10, VAR_11, VAR_12,\n\t\t\t\t\t      *VAR_13, currentLn(VAR_0), VAR_18);\n\t\t\tVAR_6->hseq = ((VAR_27 > 0) ? VAR_27 : -VAR_27) - 1;\n\t\t\tVAR_6->slave = (VAR_27 > 0) ? FALSE : TRUE;\n\t\t    }\n\t\t    break;\n\t\tcase VAR_93:\n\t\t    VAR_16 &= ~VAR_92;\n\t\t    if (VAR_6) {\n\t\t\tVAR_6->end.line = currentLn(VAR_0);\n\t\t\tVAR_6->end.pos = VAR_18;\n\t\t\tif (VAR_6->start.line == VAR_6->end.line &&\n\t\t\t    VAR_6->start.pos == VAR_6->end.pos) {\n\t\t\t    if (VAR_0->hmarklist &&\n\t\t\t\tVAR_6->hseq < VAR_0->hmarklist->nmark)\n\t\t\t\tVAR_0->hmarklist->marks[VAR_6->hseq].invalid = 1;\n\t\t\t    VAR_6->hseq = -1;\n\t\t\t}\n\t\t\tVAR_6 = NULL;\n\t\t    }\n\t\t    break;\n\n\t\tcase VAR_94:\n\t\t    addLink(VAR_0, VAR_64);\n\t\t    break;\n\n\t\tcase VAR_95:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_96, &VAR_9)) {\n#ifdef VAR_37\n\t\t\tint VAR_97 = -1, VAR_91 = -1, VAR_98 = 0, VAR_99 = 0;\n\t\t\tint VAR_100 = 0, VAR_101 = 0, VAR_102 = 0, VAR_103 = 0;\n\t\t\tparsedtag_get_value(VAR_64, VAR_90, &VAR_98);\n\t\t\tparsedtag_get_value(VAR_64, VAR_104, &VAR_97);\n\t\t\tparsedtag_get_value(VAR_64, VAR_105, &VAR_91);\n\t\t\tparsedtag_get_value(VAR_64, VAR_106, &VAR_100);\n\t\t\tparsedtag_get_value(VAR_64, VAR_107, &VAR_101);\n\t\t\tparsedtag_get_value(VAR_64, VAR_108, &VAR_102);\n\t\t\tparsedtag_get_value(VAR_64, VAR_109, &VAR_103);\n\t\t\tif (parsedtag_exists(VAR_64, VAR_110))\n\t\t\t    VAR_99 = 1;\n\t\t\tVAR_10 = NULL;\n\t\t\tparsedtag_get_value(VAR_64, VAR_111, &VAR_10);\n\t\t\tif (VAR_98 > 0) {\n\t\t\t    VAR_0->imarklist = putHmarker(VAR_0->imarklist,\n\t\t\t\t\t\t\tcurrentLn(VAR_0), VAR_18,\n\t\t\t\t\t\t\tVAR_98 - 1);\n\t\t\t}\n#endif\n\t\t\tVAR_12 = NULL;\n\t\t\tparsedtag_get_value(VAR_64, VAR_88, &VAR_12);\n\t\t\tVAR_9 = url_quote_conv(remove_space(VAR_9),\n\t\t\t\t\t   VAR_0->document_charset);\n\t\t\tVAR_7 = registerImg(VAR_0, VAR_9, VAR_12, currentLn(VAR_0), VAR_18);\n#ifdef VAR_37\n\t\t\tVAR_7->hseq = VAR_98;\n\t\t\tVAR_7->image = NULL;\n\t\t\tif (VAR_98 > 0) {\n\t\t\t    ParsedURL VAR_112;\n\t\t\t    Image *VAR_113;\n\n\t\t\t    parseURL2(VAR_7->url, &VAR_112, VAR_38);\n\t\t\t    VAR_7->image = VAR_113 = New(Image);\n\t\t\t    VAR_113->url = parsedURL2Str(&VAR_112)->ptr;\n\t\t\t    if (!uncompressed_file_type(VAR_112.file, &VAR_113->ext))\n\t\t\t\tVAR_113->ext = filename_extension(VAR_112.file, TRUE);\n\t\t\t    VAR_113->cache = NULL;\n\t\t\t    VAR_113->width =\n\t\t\t\t(VAR_97 > VAR_114) ? VAR_114 : VAR_97;\n\t\t\t    VAR_113->height =\n\t\t\t\t(VAR_91 > VAR_114) ? VAR_114 : VAR_91;\n\t\t\t    VAR_113->xoffset = VAR_100;\n\t\t\t    VAR_113->yoffset = VAR_101;\n\t\t\t    VAR_113->y = currentLn(VAR_0) - VAR_102;\n\t\t\t    if (VAR_113->xoffset < 0 && VAR_18 == 0)\n\t\t\t\tVAR_113->xoffset = 0;\n\t\t\t    if (VAR_113->yoffset < 0 && VAR_113->y == 1)\n\t\t\t\tVAR_113->yoffset = 0;\n\t\t\t    VAR_113->rows = 1 + VAR_102 + VAR_103;\n\t\t\t    VAR_113->map = VAR_10;\n\t\t\t    VAR_113->ismap = VAR_99;\n\t\t\t    VAR_113->touch = 0;\n\t\t\t    VAR_113->cache = getImage(VAR_113, VAR_38,\n\t\t\t\t\t\t    VAR_115);\n\t\t\t}\n\t\t\telse if (VAR_98 < 0) {\n\t\t\t    BufferPoint *VAR_116 = VAR_0->imarklist->marks - VAR_98 - 1;\n\t\t\t    Anchor *VAR_117 = retrieveAnchor(VAR_0->img,\n\t\t\t\t\t\t       VAR_116->line, VAR_116->pos);\n\t\t\t    if (VAR_117) {\n\t\t\t\tVAR_7->url = VAR_117->url;\n\t\t\t\tVAR_7->image = VAR_117->image;\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t    }\n\t\t    VAR_16 |= VAR_118;\n\t\t    break;\n\t\tcase VAR_119:\n\t\t    VAR_16 &= ~VAR_118;\n\t\t    if (VAR_7) {\n\t\t\tVAR_7->end.line = currentLn(VAR_0);\n\t\t\tVAR_7->end.pos = VAR_18;\n\t\t    }\n\t\t    VAR_7 = NULL;\n\t\t    break;\n\t\tcase VAR_120:\n\t\t    {\n\t\t\tFormList *VAR_121;\n\t\t\tint VAR_102 = 0, VAR_103 = 0;\n\t\t\tint VAR_122 = -1;\n#ifdef VAR_34\n\t\t\tint VAR_123 = -1;\n#endif\n\t\t\tVAR_27 = 0;\n\t\t\tVAR_28 = -1;\n\n\t\t\tparsedtag_get_value(VAR_64, VAR_90, &VAR_27);\n\t\t\tparsedtag_get_value(VAR_64, VAR_124, &VAR_28);\n\t\t\tparsedtag_get_value(VAR_64, VAR_108, &VAR_102);\n\t\t\tparsedtag_get_value(VAR_64, VAR_109, &VAR_103);\n\t\t\tif (VAR_28 < 0 || VAR_28 > VAR_125 || VAR_126 == NULL)\n\t\t\t    break;\t/* COMMENT_5 */\n\t\t\tVAR_121 = VAR_126[VAR_28];\n\t\t\tif (VAR_27 > 0) {\n\t\t\t    int VAR_127 = VAR_18;\n\t\t\t    if (*str == '[')\n\t\t\t\tVAR_127++;\n\t\t\t    VAR_0->hmarklist =\n\t\t\t\tputHmarker(VAR_0->hmarklist, currentLn(VAR_0),\n\t\t\t\t\t   VAR_127, VAR_27 - 1);\n\t\t\t}\n\t\t\telse if (VAR_27 < 0) {\n\t\t\t    int VAR_91 = -VAR_27 - 1;\n\t\t\t    int VAR_127 = VAR_18;\n\t\t\t    if (*str == '[')\n\t\t\t\tVAR_127++;\n\t\t\t    if (VAR_0->hmarklist &&\n\t\t\t\tVAR_91 < VAR_0->hmarklist->nmark &&\n\t\t\t\tVAR_0->hmarklist->marks[VAR_91].invalid) {\n\t\t\t\tVAR_0->hmarklist->marks[VAR_91].pos = VAR_127;\n\t\t\t\tVAR_0->hmarklist->marks[VAR_91].line = currentLn(VAR_0);\n\t\t\t\tVAR_0->hmarklist->marks[VAR_91].invalid = 0;\n\t\t\t\tVAR_27 = -VAR_27;\n\t\t\t    }\n\t\t\t}\n\n\t\t\tif (!VAR_121->target)\n\t\t\t    VAR_121->target = VAR_0->baseTarget;\n\t\t\tif (VAR_33 &&\n\t\t\t    parsedtag_get_value(VAR_64, VAR_128,\n\t\t\t\t\t\t&VAR_122)) {\n\t\t\t    if (VAR_122 >= VAR_42) {\n\t\t\t\tVAR_42 = 2 * VAR_122;\n\t\t\t\tVAR_44 = New_Reuse(Str, VAR_44,\n\t\t\t\t\t\t\t VAR_42);\n\t\t\t\tVAR_33 = New_Reuse(Anchor *, VAR_33,\n\t\t\t\t\t\t       VAR_42);\n\t\t\t    }\n\t\t\t}\n#ifdef VAR_34\n\t\t\tif (VAR_35 &&\n\t\t\t    parsedtag_get_value(VAR_64, VAR_129,\n\t\t\t\t\t\t&VAR_123)) {\n\t\t\t    if (VAR_123 >= VAR_46) {\n\t\t\t\tVAR_46 = 2 * VAR_123;\n\t\t\t\tVAR_48 = New_Reuse(VAR_49,\n\t\t\t\t\t\t\t  VAR_48,\n\t\t\t\t\t\t\t  VAR_46);\n\t\t\t\tVAR_35 = New_Reuse(Anchor *, VAR_35,\n\t\t\t\t\t\t     VAR_46);\n\t\t\t    }\n\t\t\t}\n#endif\n\t\t\tVAR_8 =\n\t\t\t    registerForm(VAR_0, VAR_121, VAR_64, currentLn(VAR_0), VAR_18);\n\t\t\tif (VAR_33 && VAR_122 >= 0)\n\t\t\t    VAR_33[VAR_122] = VAR_8;\n#ifdef VAR_34\n\t\t\tif (VAR_35 && VAR_123 >= 0)\n\t\t\t    VAR_35[VAR_123] = VAR_8;\n#endif\n\t\t\tif (VAR_8) {\n\t\t\t    VAR_8->hseq = VAR_27 - 1;\n\t\t\t    VAR_8->y = currentLn(VAR_0) - VAR_102;\n\t\t\t    VAR_8->rows = 1 + VAR_102 + VAR_103;\n\t\t\t    if (!parsedtag_exists(VAR_64, VAR_130))\n\t\t\t\tVAR_16 |= VAR_131;\n\t\t\t    break;\n\t\t\t}\n\t\t    }\n\t\tcase VAR_132:\n\t\t    VAR_16 &= ~VAR_131;\n\t\t    if (VAR_8) {\n\t\t\tVAR_8->end.line = currentLn(VAR_0);\n\t\t\tVAR_8->end.pos = VAR_18;\n\t\t\tif (VAR_8->start.line == VAR_8->end.line &&\n\t\t\t    VAR_8->start.pos == VAR_8->end.pos)\n\t\t\t    VAR_8->hseq = -1;\n\t\t    }\n\t\t    VAR_8 = NULL;\n\t\t    break;\n\t\tcase VAR_133:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_84, &VAR_9)) {\n\t\t\tMapList *VAR_134 = New(MapList);\n\t\t\tVAR_134->name = Strnew_charp(VAR_9);\n\t\t\tVAR_134->area = newGeneralList();\n\t\t\tVAR_134->next = VAR_0->maplist;\n\t\t\tVAR_0->maplist = VAR_134;\n\t\t    }\n\t\t    break;\n\t\tcase VAR_135:\n\t\t    /* COMMENT_6 */\n\t\t    break;\n\t\tcase VAR_136:\n\t\t    if (VAR_0->maplist == NULL)\t/* COMMENT_7 */\n\t\t\tbreak;\n\t\t    if (parsedtag_get_value(VAR_64, VAR_85, &VAR_9)) {\n\t\t\tMapArea *VAR_117;\n\t\t\tVAR_9 = url_encode(remove_space(VAR_9), VAR_38,\n\t\t\t\t       VAR_0->document_charset);\n\t\t\tVAR_13 = NULL;\n\t\t\tparsedtag_get_value(VAR_64, VAR_86, &VAR_13);\n\t\t\tVAR_10 = \"\";\n\t\t\tparsedtag_get_value(VAR_64, VAR_137, &VAR_10);\n\t\t\tVAR_11 = NULL;\n\t\t\tVAR_12 = NULL;\n#ifdef VAR_37\n\t\t\tparsedtag_get_value(VAR_64, VAR_138, &VAR_11);\n\t\t\tparsedtag_get_value(VAR_64, VAR_139, &VAR_12);\n#endif\n\t\t\tVAR_117 = newMapArea(VAR_9, VAR_13, VAR_10, VAR_11, VAR_12);\n\t\t\tpushValue(VAR_0->maplist->area, (void *)VAR_117);\n\t\t    }\n\t\t    break;\n\t\tcase VAR_140:\n\t\t    VAR_24++;\n\t\t    if (VAR_24 >= VAR_23)\n\t\t\tbreak;\n\t\t    VAR_22[VAR_24] = newFrameSet(VAR_64);\n\t\t    if (VAR_22[VAR_24] == NULL)\n\t\t\tbreak;\n\t\t    if (VAR_24 == 0) {\n\t\t\tif (VAR_0->frameset == NULL) {\n\t\t\t    VAR_0->frameset = VAR_22[VAR_24];\n\t\t\t}\n\t\t\telse\n\t\t\t    pushFrameTree(&(VAR_0->frameQ),\n\t\t\t\t\t  VAR_22[VAR_24], NULL);\n\t\t    }\n\t\t    else\n\t\t\taddFrameSetElement(VAR_22[VAR_24 - 1],\n\t\t\t\t\t   *(union frameset_element *)\n\t\t\t\t\t   &VAR_22[VAR_24]);\n\t\t    break;\n\t\tcase VAR_141:\n\t\t    if (VAR_24 >= 0)\n\t\t\tVAR_24--;\n\t\t    break;\n\t\tcase VAR_142:\n\t\t    if (VAR_24 >= 0 && VAR_24 < VAR_23) {\n\t\t\tunion frameset_element VAR_143;\n\n\t\t\tVAR_143.body = newFrame(VAR_64, VAR_0);\n\t\t\taddFrameSetElement(VAR_22[VAR_24], VAR_143);\n\t\t    }\n\t\t    break;\n\t\tcase VAR_144:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_85, &VAR_9)) {\n\t\t\tVAR_9 = url_encode(remove_space(VAR_9), NULL,\n\t\t\t\t       VAR_0->document_charset);\n\t\t\tif (!VAR_0->baseURL)\n\t\t\t    VAR_0->baseURL = New(ParsedURL);\n\t\t\tparseURL(VAR_9, VAR_0->baseURL, NULL);\n#if defined(VAR_36) || defined(VAR_37)\n\t\t\tVAR_38 = VAR_0->baseURL;\n#endif\n\t\t    }\n\t\t    if (parsedtag_get_value(VAR_64, VAR_86, &VAR_9))\n\t\t\tVAR_0->baseTarget =\n\t\t\t    url_quote_conv(VAR_9, VAR_0->document_charset);\n\t\t    break;\n\t\tcase VAR_145:\n\t\t    VAR_9 = VAR_10 = NULL;\n\t\t    parsedtag_get_value(VAR_64, VAR_146, &VAR_9);\n\t\t    parsedtag_get_value(VAR_64, VAR_147, &VAR_10);\n\t\t    if (VAR_9 && VAR_10 && !strcasecmp(VAR_9, \"refresh\") && VAR_148) {\n\t\t\tStr VAR_149 = NULL;\n\t\t\tint VAR_150 = getMetaRefreshParam(VAR_10, &VAR_149);\n#ifdef VAR_151\n\t\t\tif (VAR_149) {\n\t\t\t    VAR_9 = url_encode(remove_space(VAR_149->ptr), VAR_38,\n\t\t\t\t\t   VAR_0->document_charset);\n\t\t\t    VAR_0->event = setAlarmEvent(VAR_0->event,\n\t\t\t\t\t\t       VAR_150,\n\t\t\t\t\t\t       VAR_152,\n\t\t\t\t\t\t       VAR_153, VAR_9);\n\t\t\t}\n\t\t\telse if (VAR_150 > 0)\n\t\t\t    VAR_0->event = setAlarmEvent(VAR_0->event,\n\t\t\t\t\t\t       VAR_150,\n\t\t\t\t\t\t       VAR_154,\n\t\t\t\t\t\t       VAR_155, NULL);\n#else\n\t\t\tif (VAR_149 && VAR_150 == 0) {\n\t\t\t    VAR_9 = url_encode(remove_space(VAR_149->ptr), VAR_38,\n\t\t\t\t\t   VAR_0->document_charset);\n\t\t\t    pushEvent(VAR_153, VAR_9);\n\t\t\t}\n#endif\n\t\t    }\n\t\t    break;\n\t\tcase VAR_156:\n\t\t    VAR_32 = VAR_156;\n\t\t    break;\n\t\tcase VAR_157:\n\t\t    VAR_32 = VAR_157;\n\t\t    break;\n\t\tcase VAR_158:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_124, &VAR_28))\n\t\t\tprocess_form_int(VAR_64, VAR_28);\n\t\t    break;\n\t\tcase VAR_159:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_128,\n\t\t\t\t\t    &VAR_41)\n\t\t\t&& VAR_41 >= 0 && VAR_41 < VAR_42) {\n\t\t\tVAR_44[VAR_41] = Strnew();\n\t\t    }\n\t\t    else\n\t\t\tVAR_41 = -1;\n\t\t    break;\n\t\tcase VAR_160:\n\t\t    if (VAR_41 >= 0) {\n\t\t\tFormItemList *VAR_161 =\n\t\t\t    (FormItemList *)VAR_33[VAR_41]->url;\n\t\t\tVAR_161->init_value = VAR_161->value =\n\t\t\t    VAR_44[VAR_41];\n\t\t    }\n\t\t    break;\n#ifdef VAR_34\n\t\tcase VAR_162:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_129, &VAR_45)\n\t\t\t&& VAR_45 >= 0 && VAR_45 < VAR_46) {\n\t\t\tVAR_48[VAR_45].first = NULL;\n\t\t\tVAR_48[VAR_45].last = NULL;\n\t\t    }\n\t\t    else\n\t\t\tVAR_45 = -1;\n\t\t    break;\n\t\tcase VAR_163:\n\t\t    if (VAR_35 && VAR_45 >= 0) {\n\t\t\tFormItemList *VAR_161 =\n\t\t\t    (FormItemList *)VAR_35[VAR_45]->url;\n\t\t\tVAR_161->select_option = VAR_48[VAR_45].first;\n\t\t\tchooseSelectOption(VAR_161, VAR_161->select_option);\n\t\t\tVAR_161->init_selected = VAR_161->selected;\n\t\t\tVAR_161->init_value = VAR_161->value;\n\t\t\tVAR_161->init_label = VAR_161->label;\n\t\t    }\n\t\t    break;\n\t\tcase VAR_164:\n\t\t    if (VAR_45 >= 0) {\n\t\t\tint VAR_165;\n\t\t\tVAR_10 = \"\";\n\t\t\tparsedtag_get_value(VAR_64, VAR_166, &VAR_10);\n\t\t\tVAR_9 = VAR_10;\n\t\t\tparsedtag_get_value(VAR_64, VAR_167, &VAR_9);\n\t\t\tVAR_165 = parsedtag_exists(VAR_64, VAR_168);\n\t\t\taddSelectOption(&VAR_48[VAR_45],\n\t\t\t\t\tStrnew_charp(VAR_9), Strnew_charp(VAR_10),\n\t\t\t\t\tVAR_165);\n\t\t    }\n\t\t    break;\n#endif\n\t\tcase VAR_169:\n\t\t    if (parsedtag_get_value(VAR_64, VAR_88, &VAR_9))\n\t\t\tVAR_0->buffername = html_unquote(VAR_9);\n\t\t    break;\n\t\tcase VAR_170:\n\t\t    VAR_16 |= VAR_53;\n\t\t    if (parsedtag_get_value(VAR_64, VAR_171, &VAR_9))\n\t\t\tVAR_31 = (char)atoi(VAR_9);\n\t\t    break;\n\t\tcase VAR_172:\n\t\t    VAR_16 &= ~VAR_53;\n\t\t    break;\n\t\t}\n#ifdef\tVAR_173\n\t\tVAR_26 = NULL;\n\t\tif (parsedtag_get_value(VAR_64, VAR_174, &VAR_26)) {\n\t\t    VAR_26 = url_quote_conv(VAR_26, VAR_39);\n\t\t    registerName(VAR_0, VAR_26, currentLn(VAR_0), VAR_18);\n\t\t}\n\t\tif (VAR_81 &&\n\t\t    parsedtag_get_value(VAR_64, VAR_82, &VAR_9)) {\n\t\t    VAR_9 = url_quote_conv(VAR_9, VAR_0->document_charset);\n\t\t    if (!VAR_25 || strcmp(VAR_25->body->name, VAR_9)) {\n\t\t\tVAR_25 = search_frame(VAR_81, VAR_9);\n\t\t\tif (VAR_25 && VAR_25->body->attr != VAR_83)\n\t\t\t    VAR_25 = NULL;\n\t\t    }\n\t\t}\n\t\tif (VAR_26 && VAR_25)\n\t\t    VAR_25->body->nameList =\n\t\t\tputAnchor(VAR_25->body->nameList, VAR_26, NULL,\n\t\t\t\t  (Anchor **)NULL, NULL, NULL, '\\0',\n\t\t\t\t  currentLn(VAR_0), VAR_18);\n#endif\t\t\t\t/* COMMENT_8 */\n\t    }\n\t}\n\t/* COMMENT_9 */\n\tif (!VAR_32)\n\t    addnewline(VAR_0, VAR_3, VAR_4, NULL, VAR_18, -1, VAR_19);\n\tif (VAR_32 == VAR_157)\n\t    VAR_32 = 0;\n\tif (str != VAR_30) {\n\t    VAR_29 = Strsubstr(VAR_29, str - VAR_29->ptr, VAR_30 - str);\n\t    goto proc_again;\n\t}\n    }\n#ifdef VAR_20\n    if (VAR_50)\n\tfclose(VAR_21);\n#endif\n    for (VAR_28 = 1; VAR_28 <= VAR_125; VAR_28++)\n\tif (VAR_126[VAR_28])\n\t    VAR_126[VAR_28]->next = VAR_126[VAR_28 - 1];\n    VAR_0->formlist = (VAR_125 >= 0) ? VAR_126[VAR_125] : NULL;\n    if (VAR_41)\n\taddMultirowsForm(VAR_0, VAR_0->formitem);\n#ifdef VAR_37\n    addMultirowsImg(VAR_0, VAR_0->img);\n#endif\n}",
    "func_graph_path": "tats/w3m/c6c39973e7d336854e9a2d43119d1220b36e2035/file.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -611,7 +611,7 @@\n \t\t\tn_select = -1;\n \t\t    break;\n \t\tcase HTML_N_SELECT_INT:\n-\t\t    if (n_select >= 0) {\n+\t\t    if (a_select && n_select >= 0) {\n \t\t\tFormItemList *item =\n \t\t\t    (FormItemList *)a_select[n_select]->url;\n \t\t\titem->select_option = select_option[n_select].first;",
    "diff_line_info": {
        "deleted_lines": [
            "\t\t    if (n_select >= 0) {"
        ],
        "added_lines": [
            "\t\t    if (a_select && n_select >= 0) {"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}