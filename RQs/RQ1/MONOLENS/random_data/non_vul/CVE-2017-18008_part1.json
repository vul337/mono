{
    "cve_id": "CVE-2017-18008",
    "cwe_ids": [
        "CWE-772"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
    "cvss_is_v3": false,
    "repo_name": "ImageMagick",
    "commit_msg": "https://github.com/ImageMagick/ImageMagick/issues/921",
    "commit_hash": "1a5f95fc018a5667de5a9448aee9d7251b2eb952",
    "git_url": "https://github.com/ImageMagick/ImageMagick/commit/1a5f95fc018a5667de5a9448aee9d7251b2eb952",
    "file_path": "coders/pwp.c",
    "func_name": "ReadPWPImage",
    "func_before": "static Image *ReadPWPImage(const ImageInfo *image_info,ExceptionInfo *exception)\n{\n  FILE\n    *file;\n\n  Image\n    *image,\n    *next_image,\n    *pwp_image;\n\n  ImageInfo\n    *read_info;\n\n  int\n    c,\n    unique_file;\n\n  MagickBooleanType\n    status;\n\n  register Image\n    *p;\n\n  register ssize_t\n    i;\n\n  size_t\n    filesize,\n    length;\n\n  ssize_t\n    count;\n\n  unsigned char\n    magick[MaxTextExtent];\n\n  /*\n    Open image file.\n  */\n  assert(image_info != (const ImageInfo *) NULL);\n  assert(image_info->signature == MagickCoreSignature);\n  if (image_info->debug != MagickFalse)\n    (void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",\n      image_info->filename);\n  assert(exception != (ExceptionInfo *) NULL);\n  assert(exception->signature == MagickCoreSignature);\n  pwp_image=AcquireImage(image_info);\n  image=pwp_image;\n  status=OpenBlob(image_info,pwp_image,ReadBinaryBlobMode,exception);\n  if (status == MagickFalse)\n    return((Image *) NULL);\n  ResetMagickMemory(magick,0,sizeof(magick));\n  count=ReadBlob(pwp_image,5,magick);\n  if ((count != 5) || (LocaleNCompare((char *) magick,\"SFW95\",5) != 0))\n    ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");\n  read_info=CloneImageInfo(image_info);\n  (void) SetImageInfoProgressMonitor(read_info,(MagickProgressMonitor) NULL,\n    (void *) NULL);\n  SetImageInfoBlob(read_info,(void *) NULL,0);\n  unique_file=AcquireUniqueFileResource(read_info->filename);\n  for ( ; ; )\n  {\n    (void) memset(magick,0,sizeof(magick));\n    for (c=ReadBlobByte(pwp_image); c != EOF; c=ReadBlobByte(pwp_image))\n    {\n      for (i=0; i < 17; i++)\n        magick[i]=magick[i+1];\n      magick[17]=(unsigned char) c;\n      if (LocaleNCompare((char *) (magick+12),\"SFW94A\",6) == 0)\n        break;\n    }\n    if (c == EOF)\n      {\n        (void) RelinquishUniqueFileResource(read_info->filename);\n        ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\");\n      }\n    if (LocaleNCompare((char *) (magick+12),\"SFW94A\",6) != 0)\n      {\n        (void) RelinquishUniqueFileResource(read_info->filename);\n        ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");\n      }\n    /*\n      Dump SFW image to a temporary file.\n    */\n    file=(FILE *) NULL;\n    if (unique_file != -1)\n      file=fdopen(unique_file,\"wb\");\n    if ((unique_file == -1) || (file == (FILE *) NULL))\n      {\n        (void) RelinquishUniqueFileResource(read_info->filename);\n        ThrowFileException(exception,FileOpenError,\"UnableToWriteFile\",\n          image->filename);\n        image=DestroyImageList(image);\n        return((Image *) NULL);\n      }\n    length=fwrite(\"SFW94A\",1,6,file);\n    (void) length;\n    filesize=65535UL*magick[2]+256L*magick[1]+magick[0];\n    for (i=0; i < (ssize_t) filesize; i++)\n    {\n      c=ReadBlobByte(pwp_image);\n      if (c == EOF)\n        break;\n      (void) fputc(c,file);\n    }\n    (void) fclose(file);\n    if (c == EOF)\n      {\n        (void) RelinquishUniqueFileResource(read_info->filename);\n        ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\");\n      }\n    next_image=ReadImage(read_info,exception);\n    if (next_image == (Image *) NULL)\n      break;\n    (void) FormatLocaleString(next_image->filename,MaxTextExtent,\n      \"slide_%02ld.sfw\",(long) next_image->scene);\n    if (image == (Image *) NULL)\n      image=next_image;\n    else\n      {\n        /*\n          Link image into image list.\n        */\n        for (p=image; p->next != (Image *) NULL; p=GetNextImageInList(p)) ;\n        next_image->previous=p;\n        next_image->scene=p->scene+1;\n        p->next=next_image;\n      }\n    if (image_info->number_scenes != 0)\n      if (next_image->scene >= (image_info->scene+image_info->number_scenes-1))\n        break;\n    status=SetImageProgress(image,LoadImagesTag,TellBlob(pwp_image),\n      GetBlobSize(pwp_image));\n    if (status == MagickFalse)\n      break;\n  }\n  if (unique_file != -1)\n    (void) close(unique_file);\n  (void) RelinquishUniqueFileResource(read_info->filename);\n  read_info=DestroyImageInfo(read_info);\n  if (image != (Image *) NULL)\n    {\n      if (EOFBlob(image) != MagickFalse)\n        {\n          char\n            *message;\n\n          message=GetExceptionMessage(errno);\n          (void) ThrowMagickException(exception,GetMagickModule(),\n            CorruptImageError,\"UnexpectedEndOfFile\",\"`%s': %s\",image->filename,\n            message);\n          message=DestroyString(message);\n        }\n      (void) CloseBlob(image);\n    }\n  return(GetFirstImageInList(image));\n}",
    "abstract_func_before": "static Image *ReadPWPImage(const ImageInfo *VAR_0,ExceptionInfo *VAR_1)\n{\n  FILE\n    *VAR_2;\n\n  Image\n    *VAR_3,\n    *VAR_4,\n    *VAR_5;\n\n  ImageInfo\n    *VAR_6;\n\n  int\n    VAR_7,\n    VAR_8;\n\n  MagickBooleanType\n    VAR_9;\n\n  register Image\n    *VAR_10;\n\n  register ssize_t\n    VAR_11;\n\n  size_t\n    VAR_12,\n    VAR_13;\n\n  ssize_t\n    VAR_14;\n\n  unsigned char\n    VAR_15[VAR_16];\n\n  /* COMMENT_0 */\n                    \n    \n  assert(VAR_0 != (const ImageInfo *) NULL);\n  assert(VAR_0->signature == VAR_17);\n  if (VAR_0->debug != VAR_18)\n    (void) LogMagickEvent(VAR_19,GetMagickModule(),\"%s\",\n      VAR_0->filename);\n  assert(VAR_1 != (ExceptionInfo *) NULL);\n  assert(VAR_1->signature == VAR_17);\n  VAR_5=AcquireImage(VAR_0);\n  VAR_3=VAR_5;\n  VAR_9=OpenBlob(VAR_0,VAR_5,VAR_20,VAR_1);\n  if (VAR_9 == VAR_18)\n    return((Image *) NULL);\n  ResetMagickMemory(VAR_15,0,sizeof(VAR_15));\n  VAR_14=ReadBlob(VAR_5,5,VAR_15);\n  if ((VAR_14 != 5) || (LocaleNCompare((char *) VAR_15,\"SFW95\",5) != 0))\n    ThrowReaderException(VAR_21,\"ImproperImageHeader\");\n  VAR_6=CloneImageInfo(VAR_0);\n  (void) SetImageInfoProgressMonitor(VAR_6,(MagickProgressMonitor) NULL,\n    (void *) NULL);\n  SetImageInfoBlob(VAR_6,(void *) NULL,0);\n  VAR_8=AcquireUniqueFileResource(VAR_6->filename);\n  for ( ; ; )\n  {\n    (void) memset(VAR_15,0,sizeof(VAR_15));\n    for (VAR_7=ReadBlobByte(VAR_5); VAR_7 != VAR_22; VAR_7=ReadBlobByte(VAR_5))\n    {\n      for (VAR_11=0; VAR_11 < 17; VAR_11++)\n        VAR_15[VAR_11]=VAR_15[VAR_11+1];\n      VAR_15[17]=(unsigned char) VAR_7;\n      if (LocaleNCompare((char *) (VAR_15+12),\"SFW94A\",6) == 0)\n        break;\n    }\n    if (VAR_7 == VAR_22)\n      {\n        (void) RelinquishUniqueFileResource(VAR_6->filename);\n        ThrowReaderException(VAR_21,\"UnexpectedEndOfFile\");\n      }\n    if (LocaleNCompare((char *) (VAR_15+12),\"SFW94A\",6) != 0)\n      {\n        (void) RelinquishUniqueFileResource(VAR_6->filename);\n        ThrowReaderException(VAR_21,\"ImproperImageHeader\");\n      }\n    /* COMMENT_3 */\n                                         \n      \n    VAR_2=(FILE *) NULL;\n    if (VAR_8 != -1)\n      VAR_2=fdopen(VAR_8,\"wb\");\n    if ((VAR_8 == -1) || (VAR_2 == (FILE *) NULL))\n      {\n        (void) RelinquishUniqueFileResource(VAR_6->filename);\n        ThrowFileException(VAR_1,VAR_23,\"UnableToWriteFile\",\n          VAR_3->filename);\n        VAR_3=DestroyImageList(VAR_3);\n        return((Image *) NULL);\n      }\n    VAR_13=fwrite(\"SFW94A\",1,6,VAR_2);\n    (void) VAR_13;\n    VAR_12=65535UL*VAR_15[2]+256L*VAR_15[1]+VAR_15[0];\n    for (VAR_11=0; VAR_11 < (ssize_t) VAR_12; VAR_11++)\n    {\n      VAR_7=ReadBlobByte(VAR_5);\n      if (VAR_7 == VAR_22)\n        break;\n      (void) fputc(VAR_7,VAR_2);\n    }\n    (void) fclose(VAR_2);\n    if (VAR_7 == VAR_22)\n      {\n        (void) RelinquishUniqueFileResource(VAR_6->filename);\n        ThrowReaderException(VAR_21,\"UnexpectedEndOfFile\");\n      }\n    VAR_4=ReadImage(VAR_6,VAR_1);\n    if (VAR_4 == (Image *) NULL)\n      break;\n    (void) FormatLocaleString(VAR_4->filename,VAR_16,\n      \"slide_%02ld.sfw\",(long) VAR_4->scene);\n    if (VAR_3 == (Image *) NULL)\n      VAR_3=VAR_4;\n    else\n      {\n        /* COMMENT_6 */\n                                     \n          \n        for (VAR_10=VAR_3; VAR_10->next != (Image *) NULL; VAR_10=GetNextImageInList(VAR_10)) ;\n        VAR_4->previous=VAR_10;\n        VAR_4->scene=VAR_10->scene+1;\n        VAR_10->next=VAR_4;\n      }\n    if (VAR_0->number_scenes != 0)\n      if (VAR_4->scene >= (VAR_0->scene+VAR_0->number_scenes-1))\n        break;\n    VAR_9=SetImageProgress(VAR_3,VAR_24,TellBlob(VAR_5),\n      GetBlobSize(VAR_5));\n    if (VAR_9 == VAR_18)\n      break;\n  }\n  if (VAR_8 != -1)\n    (void) close(VAR_8);\n  (void) RelinquishUniqueFileResource(VAR_6->filename);\n  VAR_6=DestroyImageInfo(VAR_6);\n  if (VAR_3 != (Image *) NULL)\n    {\n      if (EOFBlob(VAR_3) != VAR_18)\n        {\n          char\n            *VAR_25;\n\n          VAR_25=GetExceptionMessage(VAR_26);\n          (void) ThrowMagickException(VAR_1,GetMagickModule(),\n            VAR_21,\"UnexpectedEndOfFile\",\"`%s': %s\",VAR_3->filename,\n            VAR_25);\n          VAR_25=DestroyString(VAR_25);\n        }\n      (void) CloseBlob(VAR_3);\n    }\n  return(GetFirstImageInList(VAR_3));\n}",
    "func_graph_path_before": "ImageMagick/1a5f95fc018a5667de5a9448aee9d7251b2eb952/pwp.c/vul/before/0.json",
    "func": "static Image *ReadPWPImage(const ImageInfo *image_info,ExceptionInfo *exception)\n{\n  FILE\n    *file;\n\n  Image\n    *image,\n    *next_image,\n    *pwp_image;\n\n  ImageInfo\n    *read_info;\n\n  int\n    c,\n    unique_file;\n\n  MagickBooleanType\n    status;\n\n  register Image\n    *p;\n\n  register ssize_t\n    i;\n\n  size_t\n    filesize,\n    length;\n\n  ssize_t\n    count;\n\n  unsigned char\n    magick[MaxTextExtent];\n\n  /*\n    Open image file.\n  */\n  assert(image_info != (const ImageInfo *) NULL);\n  assert(image_info->signature == MagickCoreSignature);\n  if (image_info->debug != MagickFalse)\n    (void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",\n      image_info->filename);\n  assert(exception != (ExceptionInfo *) NULL);\n  assert(exception->signature == MagickCoreSignature);\n  pwp_image=AcquireImage(image_info);\n  image=pwp_image;\n  status=OpenBlob(image_info,pwp_image,ReadBinaryBlobMode,exception);\n  if (status == MagickFalse)\n    return((Image *) NULL);\n  ResetMagickMemory(magick,0,sizeof(magick));\n  count=ReadBlob(pwp_image,5,magick);\n  if ((count != 5) || (LocaleNCompare((char *) magick,\"SFW95\",5) != 0))\n    ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");\n  read_info=CloneImageInfo(image_info);\n  (void) SetImageInfoProgressMonitor(read_info,(MagickProgressMonitor) NULL,\n    (void *) NULL);\n  SetImageInfoBlob(read_info,(void *) NULL,0);\n  unique_file=AcquireUniqueFileResource(read_info->filename);\n  for ( ; ; )\n  {\n    (void) memset(magick,0,sizeof(magick));\n    for (c=ReadBlobByte(pwp_image); c != EOF; c=ReadBlobByte(pwp_image))\n    {\n      for (i=0; i < 17; i++)\n        magick[i]=magick[i+1];\n      magick[17]=(unsigned char) c;\n      if (LocaleNCompare((char *) (magick+12),\"SFW94A\",6) == 0)\n        break;\n    }\n    if (c == EOF)\n      {\n        (void) RelinquishUniqueFileResource(read_info->filename);\n        read_info=DestroyImageInfo(read_info);\n        ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\");\n      }\n    if (LocaleNCompare((char *) (magick+12),\"SFW94A\",6) != 0)\n      {\n        (void) RelinquishUniqueFileResource(read_info->filename);\n        read_info=DestroyImageInfo(read_info);\n        ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");\n      }\n    /*\n      Dump SFW image to a temporary file.\n    */\n    file=(FILE *) NULL;\n    if (unique_file != -1)\n      file=fdopen(unique_file,\"wb\");\n    if ((unique_file == -1) || (file == (FILE *) NULL))\n      {\n        (void) RelinquishUniqueFileResource(read_info->filename);\n        read_info=DestroyImageInfo(read_info);\n        image=DestroyImageList(image);\n        ThrowFileException(exception,FileOpenError,\"UnableToWriteFile\",\n          image->filename);\n        return((Image *) NULL);\n      }\n    length=fwrite(\"SFW94A\",1,6,file);\n    (void) length;\n    filesize=65535UL*magick[2]+256L*magick[1]+magick[0];\n    for (i=0; i < (ssize_t) filesize; i++)\n    {\n      c=ReadBlobByte(pwp_image);\n      if (c == EOF)\n        break;\n      (void) fputc(c,file);\n    }\n    (void) fclose(file);\n    if (c == EOF)\n      {\n        (void) RelinquishUniqueFileResource(read_info->filename);\n        read_info=DestroyImageInfo(read_info);\n        ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\");\n      }\n    next_image=ReadImage(read_info,exception);\n    if (next_image == (Image *) NULL)\n      break;\n    (void) FormatLocaleString(next_image->filename,MaxTextExtent,\n      \"slide_%02ld.sfw\",(long) next_image->scene);\n    if (image == (Image *) NULL)\n      image=next_image;\n    else\n      {\n        /*\n          Link image into image list.\n        */\n        for (p=image; p->next != (Image *) NULL; p=GetNextImageInList(p)) ;\n        next_image->previous=p;\n        next_image->scene=p->scene+1;\n        p->next=next_image;\n      }\n    if (image_info->number_scenes != 0)\n      if (next_image->scene >= (image_info->scene+image_info->number_scenes-1))\n        break;\n    status=SetImageProgress(image,LoadImagesTag,TellBlob(pwp_image),\n      GetBlobSize(pwp_image));\n    if (status == MagickFalse)\n      break;\n  }\n  if (unique_file != -1)\n    (void) close(unique_file);\n  (void) RelinquishUniqueFileResource(read_info->filename);\n  read_info=DestroyImageInfo(read_info);\n  if (image != (Image *) NULL)\n    {\n      if (EOFBlob(image) != MagickFalse)\n        {\n          char\n            *message;\n\n          message=GetExceptionMessage(errno);\n          (void) ThrowMagickException(exception,GetMagickModule(),\n            CorruptImageError,\"UnexpectedEndOfFile\",\"`%s': %s\",image->filename,\n            message);\n          message=DestroyString(message);\n        }\n      (void) CloseBlob(image);\n    }\n  return(GetFirstImageInList(image));\n}",
    "abstract_func": "static Image *ReadPWPImage(const ImageInfo *VAR_0,ExceptionInfo *VAR_1)\n{\n  FILE\n    *VAR_2;\n\n  Image\n    *VAR_3,\n    *VAR_4,\n    *VAR_5;\n\n  ImageInfo\n    *VAR_6;\n\n  int\n    VAR_7,\n    VAR_8;\n\n  MagickBooleanType\n    VAR_9;\n\n  register Image\n    *VAR_10;\n\n  register ssize_t\n    VAR_11;\n\n  size_t\n    VAR_12,\n    VAR_13;\n\n  ssize_t\n    VAR_14;\n\n  unsigned char\n    VAR_15[VAR_16];\n\n  /* COMMENT_0 */\n                    \n    \n  assert(VAR_0 != (const ImageInfo *) NULL);\n  assert(VAR_0->signature == VAR_17);\n  if (VAR_0->debug != VAR_18)\n    (void) LogMagickEvent(VAR_19,GetMagickModule(),\"%s\",\n      VAR_0->filename);\n  assert(VAR_1 != (ExceptionInfo *) NULL);\n  assert(VAR_1->signature == VAR_17);\n  VAR_5=AcquireImage(VAR_0);\n  VAR_3=VAR_5;\n  VAR_9=OpenBlob(VAR_0,VAR_5,VAR_20,VAR_1);\n  if (VAR_9 == VAR_18)\n    return((Image *) NULL);\n  ResetMagickMemory(VAR_15,0,sizeof(VAR_15));\n  VAR_14=ReadBlob(VAR_5,5,VAR_15);\n  if ((VAR_14 != 5) || (LocaleNCompare((char *) VAR_15,\"SFW95\",5) != 0))\n    ThrowReaderException(VAR_21,\"ImproperImageHeader\");\n  VAR_6=CloneImageInfo(VAR_0);\n  (void) SetImageInfoProgressMonitor(VAR_6,(MagickProgressMonitor) NULL,\n    (void *) NULL);\n  SetImageInfoBlob(VAR_6,(void *) NULL,0);\n  VAR_8=AcquireUniqueFileResource(VAR_6->filename);\n  for ( ; ; )\n  {\n    (void) memset(VAR_15,0,sizeof(VAR_15));\n    for (VAR_7=ReadBlobByte(VAR_5); VAR_7 != VAR_22; VAR_7=ReadBlobByte(VAR_5))\n    {\n      for (VAR_11=0; VAR_11 < 17; VAR_11++)\n        VAR_15[VAR_11]=VAR_15[VAR_11+1];\n      VAR_15[17]=(unsigned char) VAR_7;\n      if (LocaleNCompare((char *) (VAR_15+12),\"SFW94A\",6) == 0)\n        break;\n    }\n    if (VAR_7 == VAR_22)\n      {\n        (void) RelinquishUniqueFileResource(VAR_6->filename);\n        VAR_6=DestroyImageInfo(VAR_6);\n        ThrowReaderException(VAR_21,\"UnexpectedEndOfFile\");\n      }\n    if (LocaleNCompare((char *) (VAR_15+12),\"SFW94A\",6) != 0)\n      {\n        (void) RelinquishUniqueFileResource(VAR_6->filename);\n        VAR_6=DestroyImageInfo(VAR_6);\n        ThrowReaderException(VAR_21,\"ImproperImageHeader\");\n      }\n    /* COMMENT_3 */\n                                         \n      \n    VAR_2=(FILE *) NULL;\n    if (VAR_8 != -1)\n      VAR_2=fdopen(VAR_8,\"wb\");\n    if ((VAR_8 == -1) || (VAR_2 == (FILE *) NULL))\n      {\n        (void) RelinquishUniqueFileResource(VAR_6->filename);\n        VAR_6=DestroyImageInfo(VAR_6);\n        VAR_3=DestroyImageList(VAR_3);\n        ThrowFileException(VAR_1,VAR_23,\"UnableToWriteFile\",\n          VAR_3->filename);\n        return((Image *) NULL);\n      }\n    VAR_13=fwrite(\"SFW94A\",1,6,VAR_2);\n    (void) VAR_13;\n    VAR_12=65535UL*VAR_15[2]+256L*VAR_15[1]+VAR_15[0];\n    for (VAR_11=0; VAR_11 < (ssize_t) VAR_12; VAR_11++)\n    {\n      VAR_7=ReadBlobByte(VAR_5);\n      if (VAR_7 == VAR_22)\n        break;\n      (void) fputc(VAR_7,VAR_2);\n    }\n    (void) fclose(VAR_2);\n    if (VAR_7 == VAR_22)\n      {\n        (void) RelinquishUniqueFileResource(VAR_6->filename);\n        VAR_6=DestroyImageInfo(VAR_6);\n        ThrowReaderException(VAR_21,\"UnexpectedEndOfFile\");\n      }\n    VAR_4=ReadImage(VAR_6,VAR_1);\n    if (VAR_4 == (Image *) NULL)\n      break;\n    (void) FormatLocaleString(VAR_4->filename,VAR_16,\n      \"slide_%02ld.sfw\",(long) VAR_4->scene);\n    if (VAR_3 == (Image *) NULL)\n      VAR_3=VAR_4;\n    else\n      {\n        /* COMMENT_6 */\n                                     \n          \n        for (VAR_10=VAR_3; VAR_10->next != (Image *) NULL; VAR_10=GetNextImageInList(VAR_10)) ;\n        VAR_4->previous=VAR_10;\n        VAR_4->scene=VAR_10->scene+1;\n        VAR_10->next=VAR_4;\n      }\n    if (VAR_0->number_scenes != 0)\n      if (VAR_4->scene >= (VAR_0->scene+VAR_0->number_scenes-1))\n        break;\n    VAR_9=SetImageProgress(VAR_3,VAR_24,TellBlob(VAR_5),\n      GetBlobSize(VAR_5));\n    if (VAR_9 == VAR_18)\n      break;\n  }\n  if (VAR_8 != -1)\n    (void) close(VAR_8);\n  (void) RelinquishUniqueFileResource(VAR_6->filename);\n  VAR_6=DestroyImageInfo(VAR_6);\n  if (VAR_3 != (Image *) NULL)\n    {\n      if (EOFBlob(VAR_3) != VAR_18)\n        {\n          char\n            *VAR_25;\n\n          VAR_25=GetExceptionMessage(VAR_26);\n          (void) ThrowMagickException(VAR_1,GetMagickModule(),\n            VAR_21,\"UnexpectedEndOfFile\",\"`%s': %s\",VAR_3->filename,\n            VAR_25);\n          VAR_25=DestroyString(VAR_25);\n        }\n      (void) CloseBlob(VAR_3);\n    }\n  return(GetFirstImageInList(VAR_3));\n}",
    "func_graph_path": "ImageMagick/1a5f95fc018a5667de5a9448aee9d7251b2eb952/pwp.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -72,11 +72,13 @@\n     if (c == EOF)\n       {\n         (void) RelinquishUniqueFileResource(read_info->filename);\n+        read_info=DestroyImageInfo(read_info);\n         ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\");\n       }\n     if (LocaleNCompare((char *) (magick+12),\"SFW94A\",6) != 0)\n       {\n         (void) RelinquishUniqueFileResource(read_info->filename);\n+        read_info=DestroyImageInfo(read_info);\n         ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");\n       }\n     /*\n@@ -88,9 +90,10 @@\n     if ((unique_file == -1) || (file == (FILE *) NULL))\n       {\n         (void) RelinquishUniqueFileResource(read_info->filename);\n+        read_info=DestroyImageInfo(read_info);\n+        image=DestroyImageList(image);\n         ThrowFileException(exception,FileOpenError,\"UnableToWriteFile\",\n           image->filename);\n-        image=DestroyImageList(image);\n         return((Image *) NULL);\n       }\n     length=fwrite(\"SFW94A\",1,6,file);\n@@ -107,6 +110,7 @@\n     if (c == EOF)\n       {\n         (void) RelinquishUniqueFileResource(read_info->filename);\n+        read_info=DestroyImageInfo(read_info);\n         ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\");\n       }\n     next_image=ReadImage(read_info,exception);",
    "diff_line_info": {
        "deleted_lines": [
            "        image=DestroyImageList(image);"
        ],
        "added_lines": [
            "        read_info=DestroyImageInfo(read_info);",
            "        read_info=DestroyImageInfo(read_info);",
            "        read_info=DestroyImageInfo(read_info);",
            "        image=DestroyImageList(image);",
            "        read_info=DestroyImageInfo(read_info);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}