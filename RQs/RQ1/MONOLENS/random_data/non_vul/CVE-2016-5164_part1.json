{
    "cve_id": "CVE-2016-5164",
    "cwe_ids": [
        "CWE-79"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
    "cvss_is_v3": false,
    "repo_name": "chromium",
    "commit_msg": "[DevTools] Copy objects from debugger context to inspected context properly.\n\nBUG=637594\n\nReview-Url: https://codereview.chromium.org/2253643002\nCr-Commit-Position: refs/heads/master@{#412436}\n",
    "commit_hash": "93bc623489bdcfc7e9127614fcfb3258edf3f0f9",
    "git_url": "https://chromium.googlesource.com/chromium/src/+/93bc623489bdcfc7e9127614fcfb3258edf3f0f9",
    "file_path": "third_party/WebKit/Source/platform/v8_inspector/V8Debugger.cpp",
    "func_name": "V8Debugger::functionLocation",
    "func_before": "v8::Local<v8::Value> V8Debugger::functionLocation(v8::Local<v8::Context> context, v8::Local<v8::Function> function)\n{\n    int scriptId = function->ScriptId();\n    if (scriptId == v8::UnboundScript::kNoScriptId)\n        return v8::Null(m_isolate);\n    int lineNumber = function->GetScriptLineNumber();\n    int columnNumber = function->GetScriptColumnNumber();\n    if (lineNumber == v8::Function::kLineOffsetNotFound || columnNumber == v8::Function::kLineOffsetNotFound)\n        return v8::Null(m_isolate);\n    v8::Local<v8::Object> location = v8::Object::New(m_isolate);\n    if (!location->Set(context, toV8StringInternalized(m_isolate, \"scriptId\"), toV8String(m_isolate, String16::fromInteger(scriptId))).FromMaybe(false))\n        return v8::Null(m_isolate);\n    if (!location->Set(context, toV8StringInternalized(m_isolate, \"lineNumber\"), v8::Integer::New(m_isolate, lineNumber)).FromMaybe(false))\n        return v8::Null(m_isolate);\n    if (!location->Set(context, toV8StringInternalized(m_isolate, \"columnNumber\"), v8::Integer::New(m_isolate, columnNumber)).FromMaybe(false))\n        return v8::Null(m_isolate);\n    if (!markAsInternal(context, location, V8InternalValueType::kLocation))\n        return v8::Null(m_isolate);\n    return location;\n}",
    "abstract_func_before": "v8::Local<v8::Value> V8Debugger::functionLocation(v8::Local<v8::Context> VAR_0, v8::Local<v8::Function> VAR_1)\n{\n    int VAR_2 = VAR_1->ScriptId();\n    if (VAR_2 == v8::UnboundScript::kNoScriptId)\n        return v8::Null(VAR_3);\n    int VAR_4 = VAR_1->GetScriptLineNumber();\n    int VAR_5 = VAR_1->GetScriptColumnNumber();\n    if (VAR_4 == v8::Function::kLineOffsetNotFound || VAR_5 == v8::Function::kLineOffsetNotFound)\n        return v8::Null(VAR_3);\n    v8::Local<v8::Object> VAR_6 = v8::Object::New(VAR_3);\n    if (!VAR_6->Set(VAR_0, toV8StringInternalized(VAR_3, \"scriptId\"), toV8String(VAR_3, String16::fromInteger(VAR_2))).FromMaybe(false))\n        return v8::Null(VAR_3);\n    if (!VAR_6->Set(VAR_0, toV8StringInternalized(VAR_3, \"lineNumber\"), v8::Integer::New(VAR_3, VAR_4)).FromMaybe(false))\n        return v8::Null(VAR_3);\n    if (!VAR_6->Set(VAR_0, toV8StringInternalized(VAR_3, \"columnNumber\"), v8::Integer::New(VAR_3, VAR_5)).FromMaybe(false))\n        return v8::Null(VAR_3);\n    if (!markAsInternal(VAR_0, VAR_6, V8InternalValueType::kLocation))\n        return v8::Null(VAR_3);\n    return VAR_6;\n}",
    "func_graph_path_before": "chromium/93bc623489bdcfc7e9127614fcfb3258edf3f0f9/V8Debugger.cpp/vul/before/0.json",
    "func": "v8::Local<v8::Value> V8Debugger::functionLocation(v8::Local<v8::Context> context, v8::Local<v8::Function> function)\n{\n    int scriptId = function->ScriptId();\n    if (scriptId == v8::UnboundScript::kNoScriptId)\n        return v8::Null(m_isolate);\n    int lineNumber = function->GetScriptLineNumber();\n    int columnNumber = function->GetScriptColumnNumber();\n    if (lineNumber == v8::Function::kLineOffsetNotFound || columnNumber == v8::Function::kLineOffsetNotFound)\n        return v8::Null(m_isolate);\n    v8::Local<v8::Object> location = v8::Object::New(m_isolate);\n    if (!location->SetPrototype(context, v8::Null(m_isolate)).FromMaybe(false))\n        return v8::Null(m_isolate);\n    if (!location->Set(context, toV8StringInternalized(m_isolate, \"scriptId\"), toV8String(m_isolate, String16::fromInteger(scriptId))).FromMaybe(false))\n        return v8::Null(m_isolate);\n    if (!location->Set(context, toV8StringInternalized(m_isolate, \"lineNumber\"), v8::Integer::New(m_isolate, lineNumber)).FromMaybe(false))\n        return v8::Null(m_isolate);\n    if (!location->Set(context, toV8StringInternalized(m_isolate, \"columnNumber\"), v8::Integer::New(m_isolate, columnNumber)).FromMaybe(false))\n        return v8::Null(m_isolate);\n    if (!markAsInternal(context, location, V8InternalValueType::kLocation))\n        return v8::Null(m_isolate);\n    return location;\n}",
    "abstract_func": "v8::Local<v8::Value> V8Debugger::functionLocation(v8::Local<v8::Context> VAR_0, v8::Local<v8::Function> VAR_1)\n{\n    int VAR_2 = VAR_1->ScriptId();\n    if (VAR_2 == v8::UnboundScript::kNoScriptId)\n        return v8::Null(VAR_3);\n    int VAR_4 = VAR_1->GetScriptLineNumber();\n    int VAR_5 = VAR_1->GetScriptColumnNumber();\n    if (VAR_4 == v8::Function::kLineOffsetNotFound || VAR_5 == v8::Function::kLineOffsetNotFound)\n        return v8::Null(VAR_3);\n    v8::Local<v8::Object> VAR_6 = v8::Object::New(VAR_3);\n    if (!VAR_6->SetPrototype(VAR_0, v8::Null(VAR_3)).FromMaybe(false))\n        return v8::Null(VAR_3);\n    if (!VAR_6->Set(VAR_0, toV8StringInternalized(VAR_3, \"scriptId\"), toV8String(VAR_3, String16::fromInteger(VAR_2))).FromMaybe(false))\n        return v8::Null(VAR_3);\n    if (!VAR_6->Set(VAR_0, toV8StringInternalized(VAR_3, \"lineNumber\"), v8::Integer::New(VAR_3, VAR_4)).FromMaybe(false))\n        return v8::Null(VAR_3);\n    if (!VAR_6->Set(VAR_0, toV8StringInternalized(VAR_3, \"columnNumber\"), v8::Integer::New(VAR_3, VAR_5)).FromMaybe(false))\n        return v8::Null(VAR_3);\n    if (!markAsInternal(VAR_0, VAR_6, V8InternalValueType::kLocation))\n        return v8::Null(VAR_3);\n    return VAR_6;\n}",
    "func_graph_path": "chromium/93bc623489bdcfc7e9127614fcfb3258edf3f0f9/V8Debugger.cpp/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -8,6 +8,8 @@\n     if (lineNumber == v8::Function::kLineOffsetNotFound || columnNumber == v8::Function::kLineOffsetNotFound)\n         return v8::Null(m_isolate);\n     v8::Local<v8::Object> location = v8::Object::New(m_isolate);\n+    if (!location->SetPrototype(context, v8::Null(m_isolate)).FromMaybe(false))\n+        return v8::Null(m_isolate);\n     if (!location->Set(context, toV8StringInternalized(m_isolate, \"scriptId\"), toV8String(m_isolate, String16::fromInteger(scriptId))).FromMaybe(false))\n         return v8::Null(m_isolate);\n     if (!location->Set(context, toV8StringInternalized(m_isolate, \"lineNumber\"), v8::Integer::New(m_isolate, lineNumber)).FromMaybe(false))",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "    if (!location->SetPrototype(context, v8::Null(m_isolate)).FromMaybe(false))",
            "        return v8::Null(m_isolate);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}