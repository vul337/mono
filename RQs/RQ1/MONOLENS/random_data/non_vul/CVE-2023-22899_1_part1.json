{
    "cve_id": "CVE-2023-22899",
    "cwe_ids": [
        "CWE-346"
    ],
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
    "cvss_is_v3": true,
    "repo_name": "srikanth-lingala/zip4j",
    "commit_msg": "#485 Calculate AES mac with cache and push back functionality",
    "commit_hash": "ddd8fdc8ad0583eb4a6172dc86c72c881485c55b",
    "git_url": "https://github.com/srikanth-lingala/zip4j/commit/ddd8fdc8ad0583eb4a6172dc86c72c881485c55b",
    "file_path": "src/main/java/net/lingala/zip4j/io/inputstream/InflaterInputStream.java",
    "func_name": "pushBackInputStreamIfNecessary",
    "func_before": "@Override\n  public void pushBackInputStreamIfNecessary(PushbackInputStream pushbackInputStream) throws IOException {\n    int n = inflater.getRemaining();\n    if (n > 0) {\n      byte[] rawDataCache = getLastReadRawDataCache();\n      pushbackInputStream.unread(rawDataCache, len - n, n);\n    }\n  }",
    "abstract_func_before": "@Override\n  public void pushBackInputStreamIfNecessary(PushbackInputStream VAR_0) throws IOException {\n    int VAR_1 = VAR_2.getRemaining();\n    if (VAR_1 > 0) {\n      byte[] VAR_3 = getLastReadRawDataCache();\n      VAR_0.unread(VAR_3, VAR_4 - VAR_1, VAR_1);\n    }\n  }",
    "func_graph_path_before": "srikanth-lingala/zip4j/ddd8fdc8ad0583eb4a6172dc86c72c881485c55b/InflaterInputStream.java/vul/before/0.json",
    "func": "@Override\n  public int pushBackInputStreamIfNecessary(PushbackInputStream pushbackInputStream) throws IOException {\n    int n = inflater.getRemaining();\n    if (n > 0) {\n      byte[] rawDataCache = getLastReadRawDataCache();\n      pushbackInputStream.unread(rawDataCache, len - n, n);\n    }\n    return n;\n  }",
    "abstract_func": "@Override\n  public int pushBackInputStreamIfNecessary(PushbackInputStream VAR_0) throws IOException {\n    int VAR_1 = VAR_2.getRemaining();\n    if (VAR_1 > 0) {\n      byte[] VAR_3 = getLastReadRawDataCache();\n      VAR_0.unread(VAR_3, VAR_4 - VAR_1, VAR_1);\n    }\n    return VAR_1;\n  }",
    "func_graph_path": "srikanth-lingala/zip4j/ddd8fdc8ad0583eb4a6172dc86c72c881485c55b/InflaterInputStream.java/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,8 +1,9 @@\n @Override\n-  public void pushBackInputStreamIfNecessary(PushbackInputStream pushbackInputStream) throws IOException {\n+  public int pushBackInputStreamIfNecessary(PushbackInputStream pushbackInputStream) throws IOException {\n     int n = inflater.getRemaining();\n     if (n > 0) {\n       byte[] rawDataCache = getLastReadRawDataCache();\n       pushbackInputStream.unread(rawDataCache, len - n, n);\n     }\n+    return n;\n   }",
    "diff_line_info": {
        "deleted_lines": [
            "  public void pushBackInputStreamIfNecessary(PushbackInputStream pushbackInputStream) throws IOException {"
        ],
        "added_lines": [
            "  public int pushBackInputStreamIfNecessary(PushbackInputStream pushbackInputStream) throws IOException {",
            "    return n;"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}