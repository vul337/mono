{
    "cve_id": "CVE-2015-5522",
    "cwe_ids": [
        "CWE-119"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "htacg/tidy-html5",
    "commit_msg": "Add some mem alloc and free debug to chase Issue #217\n\nSuch debug is OFF by default, and only added by defining DEBUG_MEMORY. And\nis only available for the Debug configuration compiled with MSVC, but this\ncould be easily extended...",
    "commit_hash": "0fb7ccdfc6ea4e066ec60cd5c931e17eaa71d856",
    "git_url": "https://github.com/htacg/tidy-html5/commit/0fb7ccdfc6ea4e066ec60cd5c931e17eaa71d856",
    "file_path": "src/alloc.c",
    "func_name": "defaultFree",
    "func_before": "static void TIDY_CALL defaultFree( TidyAllocator* ARG_UNUSED(allocator), void* mem )\n{\n    if ( mem )\n    {\n        if ( g_free )\n            g_free( mem );\n        else\n            free( mem );\n    }\n}",
    "abstract_func_before": "static void VAR_0 defaultFree( TidyAllocator* ARG_UNUSED(allocator), void* VAR_1 )\n{\n    if ( VAR_1 )\n    {\n        if ( VAR_2 )\n            VAR_2( VAR_1 );\n        else\n            free( VAR_1 );\n    }\n}",
    "func_graph_path_before": null,
    "func": "static void TIDY_CALL defaultFree( TidyAllocator* ARG_UNUSED(allocator), void* mem )\n{\n    if ( mem )\n    {\n#if !defined(NDEBUG) && defined(_MSC_VER) && defined(DEBUG_MEMORY)\n        SPRTF(\"free    MEM %p\\n\", mem );\n#endif\n        if ( g_free )\n            g_free( mem );\n        else\n            free( mem );\n    }\n}",
    "abstract_func": "static void VAR_0 defaultFree( TidyAllocator* ARG_UNUSED(allocator), void* VAR_1 )\n{\n    if ( VAR_1 )\n    {\n#if !defined(VAR_2) && defined(VAR_3) && defined(VAR_4)\n        SPRTF(\"free    MEM %p\\n\", VAR_1 );\n#endif\n        if ( VAR_5 )\n            VAR_5( VAR_1 );\n        else\n            free( VAR_1 );\n    }\n}",
    "func_graph_path": null,
    "diff_func": "--- func_before\n+++ func_after\n@@ -2,6 +2,9 @@\n {\n     if ( mem )\n     {\n+#if !defined(NDEBUG) && defined(_MSC_VER) && defined(DEBUG_MEMORY)\n+        SPRTF(\"free    MEM %p\\n\", mem );\n+#endif\n         if ( g_free )\n             g_free( mem );\n         else",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "#if !defined(NDEBUG) && defined(_MSC_VER) && defined(DEBUG_MEMORY)",
            "        SPRTF(\"free    MEM %p\\n\", mem );",
            "#endif"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}