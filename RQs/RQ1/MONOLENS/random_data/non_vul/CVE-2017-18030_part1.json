{
    "cve_id": "CVE-2017-18030",
    "cwe_ids": [
        "CWE-125"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P",
    "cvss_is_v3": false,
    "repo_name": "qemu",
    "commit_msg": "cirrus: handle negative pitch in cirrus_invalidate_region()\n\ncirrus_invalidate_region() calls memory_region_set_dirty()\non a per-line basis, always ranging from off_begin to\noff_begin+bytesperline. With a negative pitch off_begin\nmarks the top most used address and thus we need to do an\ninitial shift backwards by a line for negative pitches of\nbackward blits, otherwise the first iteration covers the\nline going from the start offset forwards instead of\nbackwards.\nAdditionally since the start address is inclusive, if we\nshift by a full `bytesperline` we move to the first address\n*not* included in the blit, so we only shift by one less\nthan bytesperline.\n\nSigned-off-by: Wolfgang Bumiller <w.bumiller@proxmox.com>\nMessage-id: 1485352137-29367-1-git-send-email-w.bumiller@proxmox.com\n\n[ kraxel: codestyle fixes ]\n\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
    "commit_hash": "f153b563f8cf121aebf5a2fff5f0110faf58ccb3",
    "git_url": "https://github.com/qemu/qemu/commit/f153b563f8cf121aebf5a2fff5f0110faf58ccb3",
    "file_path": "hw/display/cirrus_vga.c",
    "func_name": "cirrus_invalidate_region",
    "func_before": "static void cirrus_invalidate_region(CirrusVGAState * s, int off_begin,\n\t\t\t\t     int off_pitch, int bytesperline,\n\t\t\t\t     int lines)\n{\n    int y;\n    int off_cur;\n    int off_cur_end;\n\n    for (y = 0; y < lines; y++) {\n\toff_cur = off_begin;\n\toff_cur_end = (off_cur + bytesperline) & s->cirrus_addr_mask;\n        memory_region_set_dirty(&s->vga.vram, off_cur, off_cur_end - off_cur);\n\toff_begin += off_pitch;\n    }\n}",
    "abstract_func_before": "static void cirrus_invalidate_region(CirrusVGAState * VAR_0, int VAR_1,\n\t\t\t\t     int VAR_2, int VAR_3,\n\t\t\t\t     int VAR_4)\n{\n    int VAR_5;\n    int VAR_6;\n    int VAR_7;\n\n    for (VAR_5 = 0; VAR_5 < VAR_4; VAR_5++) {\n\tVAR_6 = VAR_1;\n\tVAR_7 = (VAR_6 + VAR_3) & VAR_0->cirrus_addr_mask;\n        memory_region_set_dirty(&VAR_0->vga.vram, VAR_6, VAR_7 - VAR_6);\n\tVAR_1 += VAR_2;\n    }\n}",
    "func_graph_path_before": "qemu/f153b563f8cf121aebf5a2fff5f0110faf58ccb3/cirrus_vga.c/vul/before/0.json",
    "func": "static void cirrus_invalidate_region(CirrusVGAState * s, int off_begin,\n\t\t\t\t     int off_pitch, int bytesperline,\n\t\t\t\t     int lines)\n{\n    int y;\n    int off_cur;\n    int off_cur_end;\n\n    if (off_pitch < 0) {\n        off_begin -= bytesperline - 1;\n    }\n\n    for (y = 0; y < lines; y++) {\n\toff_cur = off_begin;\n\toff_cur_end = (off_cur + bytesperline) & s->cirrus_addr_mask;\n        assert(off_cur_end >= off_cur);\n        memory_region_set_dirty(&s->vga.vram, off_cur, off_cur_end - off_cur);\n\toff_begin += off_pitch;\n    }\n}",
    "abstract_func": "static void cirrus_invalidate_region(CirrusVGAState * VAR_0, int VAR_1,\n\t\t\t\t     int VAR_2, int VAR_3,\n\t\t\t\t     int VAR_4)\n{\n    int VAR_5;\n    int VAR_6;\n    int VAR_7;\n\n    if (VAR_2 < 0) {\n        VAR_1 -= VAR_3 - 1;\n    }\n\n    for (VAR_5 = 0; VAR_5 < VAR_4; VAR_5++) {\n\tVAR_6 = VAR_1;\n\tVAR_7 = (VAR_6 + VAR_3) & VAR_0->cirrus_addr_mask;\n        assert(VAR_7 >= VAR_6);\n        memory_region_set_dirty(&VAR_0->vga.vram, VAR_6, VAR_7 - VAR_6);\n\tVAR_1 += VAR_2;\n    }\n}",
    "func_graph_path": "qemu/f153b563f8cf121aebf5a2fff5f0110faf58ccb3/cirrus_vga.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -6,9 +6,14 @@\n     int off_cur;\n     int off_cur_end;\n \n+    if (off_pitch < 0) {\n+        off_begin -= bytesperline - 1;\n+    }\n+\n     for (y = 0; y < lines; y++) {\n \toff_cur = off_begin;\n \toff_cur_end = (off_cur + bytesperline) & s->cirrus_addr_mask;\n+        assert(off_cur_end >= off_cur);\n         memory_region_set_dirty(&s->vga.vram, off_cur, off_cur_end - off_cur);\n \toff_begin += off_pitch;\n     }",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "    if (off_pitch < 0) {",
            "        off_begin -= bytesperline - 1;",
            "    }",
            "",
            "        assert(off_cur_end >= off_cur);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}