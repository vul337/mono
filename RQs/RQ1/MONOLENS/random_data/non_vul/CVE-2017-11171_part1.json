{
    "cve_id": "CVE-2017-11171",
    "cwe_ids": [
        "CWE-835"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:C",
    "cvss_is_v3": false,
    "repo_name": "GNOME/gnome-session",
    "commit_msg": "[gsm] Delay the creation of the GsmXSMPClient until it really exists\n\nWe used to create the GsmXSMPClient before the XSMP connection is really\naccepted. This can lead to some issues, though. An example is:\nhttps://bugzilla.gnome.org/show_bug.cgi?id=598211#c19. Quoting:\n\n \"What is happening is that a new client (probably metacity in your\n case) is opening an ICE connection in the GSM_MANAGER_PHASE_END_SESSION\n phase, which causes a new GsmXSMPClient to be added to the client\n store. The GSM_MANAGER_PHASE_EXIT phase then begins before the client\n has had a chance to establish a xsmp connection, which means that\n client->priv->conn will not be initialized at the point that xsmp_stop\n is called on the new unregistered client.\"\n\nThe fix is to create the GsmXSMPClient object when there's a real XSMP\nconnection. This implies moving the timeout that makes sure we don't\nhave an empty client to the XSMP server.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=598211",
    "commit_hash": "b0dc999e0b45355314616321dbb6cb71e729fc9d",
    "git_url": "https://github.com/GNOME/gnome-session/commit/b0dc999e0b45355314616321dbb6cb71e729fc9d",
    "file_path": "gnome-session/gsm-xsmp-server.c",
    "func_name": "accept_ice_connection",
    "func_before": "static gboolean\naccept_ice_connection (GIOChannel           *source,\n                       GIOCondition          condition,\n                       GsmIceConnectionData *data)\n{\n        IceListenObj    listener;\n        IceConn         ice_conn;\n        IceAcceptStatus status;\n        GsmClient      *client;\n        GsmXsmpServer  *server;\n\n        listener = data->listener;\n        server = data->server;\n\n        g_debug (\"GsmXsmpServer: accept_ice_connection()\");\n\n        ice_conn = IceAcceptConnection (listener, &status);\n        if (status != IceAcceptSuccess) {\n                g_debug (\"GsmXsmpServer: IceAcceptConnection returned %d\", status);\n                return TRUE;\n        }\n\n        client = gsm_xsmp_client_new (ice_conn);\n        ice_conn->context = client;\n\n        gsm_store_add (server->priv->client_store, gsm_client_peek_id (client), G_OBJECT (client));\n        /* the store will own the ref */\n        g_object_unref (client);\n\n        return TRUE;\n}",
    "abstract_func_before": "static gboolean\naccept_ice_connection (GIOChannel           *VAR_0,\n                       GIOCondition          VAR_1,\n                       GsmIceConnectionData *VAR_2)\n{\n        IceListenObj    VAR_3;\n        IceConn         VAR_4;\n        IceAcceptStatus VAR_5;\n        GsmClient      *VAR_6;\n        GsmXsmpServer  *VAR_7;\n\n        VAR_3 = VAR_2->listener;\n        VAR_7 = VAR_2->server;\n\n        g_debug (\"GsmXsmpServer: accept_ice_connection()\");\n\n        VAR_4 = IceAcceptConnection (VAR_3, &VAR_5);\n        if (VAR_5 != VAR_8) {\n                g_debug (\"GsmXsmpServer: IceAcceptConnection returned %d\", VAR_5);\n                return TRUE;\n        }\n\n        VAR_6 = gsm_xsmp_client_new (VAR_4);\n        VAR_4->context = VAR_6;\n\n        gsm_store_add (VAR_7->priv->client_store, gsm_client_peek_id (VAR_6), G_OBJECT (VAR_6));\n        /* COMMENT_0 */\n        g_object_unref (VAR_6);\n\n        return TRUE;\n}",
    "func_graph_path_before": "GNOME/gnome-session/b0dc999e0b45355314616321dbb6cb71e729fc9d/gsm-xsmp-server.c/vul/before/0.json",
    "func": "static gboolean\naccept_ice_connection (GIOChannel           *source,\n                       GIOCondition          condition,\n                       GsmIceConnectionData *data)\n{\n        IceConn         ice_conn;\n        IceAcceptStatus status;\n\n        g_debug (\"GsmXsmpServer: accept_ice_connection()\");\n\n        ice_conn = IceAcceptConnection (data->listener, &status);\n        if (status != IceAcceptSuccess) {\n                g_debug (\"GsmXsmpServer: IceAcceptConnection returned %d\", status);\n                return TRUE;\n        }\n\n        auth_ice_connection (ice_conn);\n\n        return TRUE;\n}",
    "abstract_func": "static gboolean\naccept_ice_connection (GIOChannel           *VAR_0,\n                       GIOCondition          VAR_1,\n                       GsmIceConnectionData *VAR_2)\n{\n        IceConn         VAR_3;\n        IceAcceptStatus VAR_4;\n\n        g_debug (\"GsmXsmpServer: accept_ice_connection()\");\n\n        VAR_3 = IceAcceptConnection (VAR_2->listener, &VAR_4);\n        if (VAR_4 != VAR_5) {\n                g_debug (\"GsmXsmpServer: IceAcceptConnection returned %d\", VAR_4);\n                return TRUE;\n        }\n\n        auth_ice_connection (VAR_3);\n\n        return TRUE;\n}",
    "func_graph_path": "GNOME/gnome-session/b0dc999e0b45355314616321dbb6cb71e729fc9d/gsm-xsmp-server.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -3,29 +3,18 @@\n                        GIOCondition          condition,\n                        GsmIceConnectionData *data)\n {\n-        IceListenObj    listener;\n         IceConn         ice_conn;\n         IceAcceptStatus status;\n-        GsmClient      *client;\n-        GsmXsmpServer  *server;\n-\n-        listener = data->listener;\n-        server = data->server;\n \n         g_debug (\"GsmXsmpServer: accept_ice_connection()\");\n \n-        ice_conn = IceAcceptConnection (listener, &status);\n+        ice_conn = IceAcceptConnection (data->listener, &status);\n         if (status != IceAcceptSuccess) {\n                 g_debug (\"GsmXsmpServer: IceAcceptConnection returned %d\", status);\n                 return TRUE;\n         }\n \n-        client = gsm_xsmp_client_new (ice_conn);\n-        ice_conn->context = client;\n-\n-        gsm_store_add (server->priv->client_store, gsm_client_peek_id (client), G_OBJECT (client));\n-        /* the store will own the ref */\n-        g_object_unref (client);\n+        auth_ice_connection (ice_conn);\n \n         return TRUE;\n }",
    "diff_line_info": {
        "deleted_lines": [
            "        IceListenObj    listener;",
            "        GsmClient      *client;",
            "        GsmXsmpServer  *server;",
            "",
            "        listener = data->listener;",
            "        server = data->server;",
            "        ice_conn = IceAcceptConnection (listener, &status);",
            "        client = gsm_xsmp_client_new (ice_conn);",
            "        ice_conn->context = client;",
            "",
            "        gsm_store_add (server->priv->client_store, gsm_client_peek_id (client), G_OBJECT (client));",
            "        /* the store will own the ref */",
            "        g_object_unref (client);"
        ],
        "added_lines": [
            "        ice_conn = IceAcceptConnection (data->listener, &status);",
            "        auth_ice_connection (ice_conn);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}