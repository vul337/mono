{
    "cve_id": "CVE-2023-29515",
    "cwe_ids": [
        "CWE-79"
    ],
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cvss_is_v3": true,
    "repo_name": "xwiki/xwiki-platform",
    "commit_msg": "XWIKI-20190: Properly handle AWM creation without script right\n\n* Warn when the user doesn't have script right.\n* Ensure that in integration tests the users have script right.\n* Add an explicit test for the behavior without script right.\n* Fix missing dependency.\n* Actually delete the preferences in AppsLiveTableIT.",
    "commit_hash": "e73b890623efa604adc484ad82f37e31596fe1a6",
    "git_url": "https://github.com/xwiki/xwiki-platform/commit/e73b890623efa604adc484ad82f37e31596fe1a6",
    "file_path": "xwiki-platform-core/xwiki-platform-appwithinminutes/xwiki-platform-appwithinminutes-test/xwiki-platform-appwithinminutes-test-docker/src/test/it/org/xwiki/appwithinminutes/test/ui/AppsLiveTableIT.java",
    "func_name": "testActionRights",
    "func_before": "@Order(3)\n    @Test\n    void testActionRights(TestUtils testUtils, TestReference testReference)\n    {\n        // set some rights before the test\n        DocumentReference xwikiPreferences = new DocumentReference(\"xwiki\", \"XWiki\", \"XWikiPreferences\");\n\n        testUtils.loginAsSuperAdmin();\n        String anotherUserName = \"someOtherUser\";\n        testUtils.createPage(xwikiPreferences, \"\");\n        testUtils.addObject(xwikiPreferences, \"XWiki.XWikiGlobalRights\",\n            \"levels\", \"edit,script\",\n            \"allow\", \"1\",\n            \"users\", String.format(\"XWiki.%s,XWiki.%s\", USERNAME, anotherUserName));\n\n        testUtils.login(USERNAME, PASSWORD);\n        appWithinMinutesHomePage = AppWithinMinutesHomePage.gotoPage();\n        try {\n            // The application author should be able to edit and delete the application.\n            ApplicationsLiveTableElement appsLiveTable = appWithinMinutesHomePage.getAppsLiveTable();\n            appsLiveTable.filterApplicationName(appName);\n            assertTrue(appsLiveTable.canEditApplication(appName));\n            assertTrue(appsLiveTable.canDeleteApplication(appName));\n\n            // Logout. Guests shouldn't be able to edit nor delete the application.\n            appWithinMinutesHomePage.logout();\n            testUtils.recacheSecretToken();\n            appWithinMinutesHomePage = new AppWithinMinutesHomePage();\n            appsLiveTable = appWithinMinutesHomePage.getAppsLiveTable();\n            appsLiveTable.filterApplicationName(appName);\n            assertFalse(appsLiveTable.canEditApplication(appName));\n            assertFalse(appsLiveTable.canDeleteApplication(appName));\n\n            // Login with a different user. The new user shouldn't be able to delete the application.\n            testUtils.createUserAndLogin(anotherUserName, \"somePassword\");\n            appsLiveTable = AppWithinMinutesHomePage.gotoPage().getAppsLiveTable();\n            appsLiveTable.filterApplicationName(appName);\n            assertTrue(appsLiveTable.canEditApplication(appName));\n            assertFalse(appsLiveTable.canDeleteApplication(appName));\n        } finally {\n            // We don't want to keep the rights\n            testUtils.deletePage(xwikiPreferences);\n        }\n    }",
    "abstract_func_before": "@Order(3)\n    @Test\n    void testActionRights(TestUtils VAR_0, TestReference VAR_1)\n    {\n        /* COMMENT_0 */\n        DocumentReference VAR_2 = new DocumentReference(\"xwiki\", \"XWiki\", \"XWikiPreferences\");\n\n        VAR_0.loginAsSuperAdmin();\n        String VAR_3 = \"someOtherUser\";\n        VAR_0.createPage(VAR_2, \"\");\n        VAR_0.addObject(VAR_2, \"XWiki.XWikiGlobalRights\",\n            \"levels\", \"edit,script\",\n            \"allow\", \"1\",\n            \"users\", VAR_4.format(\"XWiki.%s,XWiki.%s\", VAR_5, VAR_3));\n\n        VAR_0.login(VAR_5, VAR_6);\n        VAR_7 = VAR_8.gotoPage();\n        try {\n            /* COMMENT_1 */\n            ApplicationsLiveTableElement VAR_9 = VAR_7.getAppsLiveTable();\n            VAR_9.filterApplicationName(VAR_10);\n            assertTrue(VAR_9.canEditApplication(VAR_10));\n            assertTrue(VAR_9.canDeleteApplication(VAR_10));\n\n            /* COMMENT_2 */\n            VAR_7.logout();\n            VAR_0.recacheSecretToken();\n            VAR_7 = new AppWithinMinutesHomePage();\n            VAR_9 = VAR_7.getAppsLiveTable();\n            VAR_9.filterApplicationName(VAR_10);\n            assertFalse(VAR_9.canEditApplication(VAR_10));\n            assertFalse(VAR_9.canDeleteApplication(VAR_10));\n\n            /* COMMENT_3 */\n            VAR_0.createUserAndLogin(VAR_3, \"somePassword\");\n            VAR_9 = VAR_8.gotoPage().getAppsLiveTable();\n            VAR_9.filterApplicationName(VAR_10);\n            assertTrue(VAR_9.canEditApplication(VAR_10));\n            assertFalse(VAR_9.canDeleteApplication(VAR_10));\n        } finally {\n            /* COMMENT_4 */\n            VAR_0.deletePage(VAR_2);\n        }\n    }",
    "func_graph_path_before": "xwiki/xwiki-platform/e73b890623efa604adc484ad82f37e31596fe1a6/AppsLiveTableIT.java/vul/before/1.json",
    "func": "@Order(3)\n    @Test\n    void testActionRights(TestUtils testUtils, TestReference testReference)\n    {\n        // set some rights before the test\n        DocumentReference xwikiPreferences = new DocumentReference(\"xwiki\", \"XWiki\", \"XWikiPreferences\");\n\n        testUtils.loginAsSuperAdmin();\n        String anotherUserName = \"someOtherUser\";\n        testUtils.createPage(xwikiPreferences, \"\");\n        testUtils.addObject(xwikiPreferences, \"XWiki.XWikiGlobalRights\",\n            \"levels\", \"edit,script\",\n            \"allow\", \"1\",\n            \"users\", String.format(\"XWiki.%s,XWiki.%s\", USERNAME, anotherUserName));\n\n        testUtils.login(USERNAME, PASSWORD);\n        appWithinMinutesHomePage = AppWithinMinutesHomePage.gotoPage();\n        try {\n            // The application author should be able to edit and delete the application.\n            ApplicationsLiveTableElement appsLiveTable = appWithinMinutesHomePage.getAppsLiveTable();\n            appsLiveTable.filterApplicationName(appName);\n            assertTrue(appsLiveTable.canEditApplication(appName));\n            assertTrue(appsLiveTable.canDeleteApplication(appName));\n\n            // Logout. Guests shouldn't be able to edit nor delete the application.\n            appWithinMinutesHomePage.logout();\n            testUtils.recacheSecretToken();\n            appWithinMinutesHomePage = new AppWithinMinutesHomePage();\n            appsLiveTable = appWithinMinutesHomePage.getAppsLiveTable();\n            appsLiveTable.filterApplicationName(appName);\n            assertFalse(appsLiveTable.canEditApplication(appName));\n            assertFalse(appsLiveTable.canDeleteApplication(appName));\n\n            // Login with a different user. The new user shouldn't be able to delete the application.\n            testUtils.createUserAndLogin(anotherUserName, \"somePassword\");\n            appsLiveTable = AppWithinMinutesHomePage.gotoPage().getAppsLiveTable();\n            appsLiveTable.filterApplicationName(appName);\n            assertTrue(appsLiveTable.canEditApplication(appName));\n            assertFalse(appsLiveTable.canDeleteApplication(appName));\n        } finally {\n            testUtils.loginAsSuperAdmin();\n            // We don't want to keep the rights\n            testUtils.deletePage(xwikiPreferences);\n        }\n    }",
    "abstract_func": "@Order(3)\n    @Test\n    void testActionRights(TestUtils VAR_0, TestReference VAR_1)\n    {\n        /* COMMENT_0 */\n        DocumentReference VAR_2 = new DocumentReference(\"xwiki\", \"XWiki\", \"XWikiPreferences\");\n\n        VAR_0.loginAsSuperAdmin();\n        String VAR_3 = \"someOtherUser\";\n        VAR_0.createPage(VAR_2, \"\");\n        VAR_0.addObject(VAR_2, \"XWiki.XWikiGlobalRights\",\n            \"levels\", \"edit,script\",\n            \"allow\", \"1\",\n            \"users\", VAR_4.format(\"XWiki.%s,XWiki.%s\", VAR_5, VAR_3));\n\n        VAR_0.login(VAR_5, VAR_6);\n        VAR_7 = VAR_8.gotoPage();\n        try {\n            /* COMMENT_1 */\n            ApplicationsLiveTableElement VAR_9 = VAR_7.getAppsLiveTable();\n            VAR_9.filterApplicationName(VAR_10);\n            assertTrue(VAR_9.canEditApplication(VAR_10));\n            assertTrue(VAR_9.canDeleteApplication(VAR_10));\n\n            /* COMMENT_2 */\n            VAR_7.logout();\n            VAR_0.recacheSecretToken();\n            VAR_7 = new AppWithinMinutesHomePage();\n            VAR_9 = VAR_7.getAppsLiveTable();\n            VAR_9.filterApplicationName(VAR_10);\n            assertFalse(VAR_9.canEditApplication(VAR_10));\n            assertFalse(VAR_9.canDeleteApplication(VAR_10));\n\n            /* COMMENT_3 */\n            VAR_0.createUserAndLogin(VAR_3, \"somePassword\");\n            VAR_9 = VAR_8.gotoPage().getAppsLiveTable();\n            VAR_9.filterApplicationName(VAR_10);\n            assertTrue(VAR_9.canEditApplication(VAR_10));\n            assertFalse(VAR_9.canDeleteApplication(VAR_10));\n        } finally {\n            VAR_0.loginAsSuperAdmin();\n            /* COMMENT_4 */\n            VAR_0.deletePage(VAR_2);\n        }\n    }",
    "func_graph_path": "xwiki/xwiki-platform/e73b890623efa604adc484ad82f37e31596fe1a6/AppsLiveTableIT.java/vul/after/1.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -38,6 +38,7 @@\n             assertTrue(appsLiveTable.canEditApplication(appName));\n             assertFalse(appsLiveTable.canDeleteApplication(appName));\n         } finally {\n+            testUtils.loginAsSuperAdmin();\n             // We don't want to keep the rights\n             testUtils.deletePage(xwikiPreferences);\n         }",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "            testUtils.loginAsSuperAdmin();"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}