{
    "cve_id": "CVE-2020-28097",
    "cwe_ids": [
        "CWE-125"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:P",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "vgacon: remove software scrollback support\n\nYunhai Zhang recently fixed a VGA software scrollback bug in commit\nebfdfeeae8c0 (\"vgacon: Fix for missing check in scrollback handling\"),\nbut that then made people look more closely at some of this code, and\nthere were more problems on the vgacon side, but also the fbcon software\nscrollback.\n\nWe don't really have anybody who maintains this code - probably because\nnobody actually _uses_ it any more.  Sure, people still use both VGA and\nthe framebuffer consoles, but they are no longer the main user\ninterfaces to the kernel, and haven't been for decades, so these kinds\nof extra features end up bitrotting and not really being used.\n\nSo rather than try to maintain a likely unused set of code, I'll just\naggressively remove it, and see if anybody even notices.  Maybe there\nare people who haven't jumped on the whole GUI badnwagon yet, and think\nit's just a fad.  And maybe those people use the scrollback code.\n\nIf that turns out to be the case, we can resurrect this again, once\nwe've found the sucker^Wmaintainer for it who actually uses it.\n\nReported-by: NopNop Nop <nopitydays@gmail.com>\nTested-by: Willy Tarreau <w@1wt.eu>\nCc: \u5f20\u4e91\u6d77 <zhangyunhai@nsfocus.com>\nAcked-by: Andy Lutomirski <luto@amacapital.net>\nAcked-by: Willy Tarreau <w@1wt.eu>\nReviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "commit_hash": "973c096f6a85e5b5f2a295126ba6928d9a6afd45",
    "git_url": "https://github.com/torvalds/linux/commit/973c096f6a85e5b5f2a295126ba6928d9a6afd45",
    "file_path": "drivers/video/console/vgacon.c",
    "func_name": "vgacon_switch",
    "func_before": "static int vgacon_switch(struct vc_data *c)\n{\n\tint x = c->vc_cols * VGA_FONTWIDTH;\n\tint y = c->vc_rows * c->vc_font.height;\n\tint rows = screen_info.orig_video_lines * vga_default_font_height/\n\t\tc->vc_font.height;\n\t/*\n\t * We need to save screen size here as it's the only way\n\t * we can spot the screen has been resized and we need to\n\t * set size of freshly allocated screens ourselves.\n\t */\n\tvga_video_num_columns = c->vc_cols;\n\tvga_video_num_lines = c->vc_rows;\n\n\t/* We can only copy out the size of the video buffer here,\n\t * otherwise we get into VGA BIOS */\n\n\tif (!vga_is_gfx) {\n\t\tscr_memcpyw((u16 *) c->vc_origin, (u16 *) c->vc_screenbuf,\n\t\t\t    c->vc_screenbuf_size > vga_vram_size ?\n\t\t\t\tvga_vram_size : c->vc_screenbuf_size);\n\n\t\tif ((vgacon_xres != x || vgacon_yres != y) &&\n\t\t    (!(vga_video_num_columns % 2) &&\n\t\t     vga_video_num_columns <= screen_info.orig_video_cols &&\n\t\t     vga_video_num_lines <= rows))\n\t\t\tvgacon_doresize(c, c->vc_cols, c->vc_rows);\n\t}\n\n\tvgacon_scrollback_switch(c->vc_num);\n\treturn 0;\t\t/* Redrawing not needed */\n}",
    "abstract_func_before": "static int vgacon_switch(struct vc_data *VAR_0)\n{\n\tint VAR_1 = VAR_0->vc_cols * VAR_2;\n\tint VAR_3 = VAR_0->vc_rows * VAR_0->vc_font.height;\n\tint VAR_4 = VAR_5.orig_video_lines * VAR_6/\n\t\tVAR_0->vc_font.height;\n\t/* COMMENT_0 */\n                                                         \n                                                          \n                                                    \n    \n\tVAR_7 = VAR_0->vc_cols;\n\tVAR_8 = VAR_0->vc_rows;\n\n\t/* COMMENT_5 */\n                                     \n\n\tif (!VAR_9) {\n\t\tscr_memcpyw((u16 *) VAR_0->vc_origin, (u16 *) VAR_0->vc_screenbuf,\n\t\t\t    VAR_0->vc_screenbuf_size > VAR_10 ?\n\t\t\t\tVAR_10 : VAR_0->vc_screenbuf_size);\n\n\t\tif ((VAR_11 != VAR_1 || VAR_12 != VAR_3) &&\n\t\t    (!(VAR_7 % 2) &&\n\t\t     VAR_7 <= VAR_5.orig_video_cols &&\n\t\t     VAR_8 <= VAR_4))\n\t\t\tvgacon_doresize(VAR_0, VAR_0->vc_cols, VAR_0->vc_rows);\n\t}\n\n\tvgacon_scrollback_switch(VAR_0->vc_num);\n\treturn 0;\t\t/* COMMENT_7 */\n}",
    "func_graph_path_before": "torvalds/linux/973c096f6a85e5b5f2a295126ba6928d9a6afd45/vgacon.c/vul/before/4.json",
    "func": "static int vgacon_switch(struct vc_data *c)\n{\n\tint x = c->vc_cols * VGA_FONTWIDTH;\n\tint y = c->vc_rows * c->vc_font.height;\n\tint rows = screen_info.orig_video_lines * vga_default_font_height/\n\t\tc->vc_font.height;\n\t/*\n\t * We need to save screen size here as it's the only way\n\t * we can spot the screen has been resized and we need to\n\t * set size of freshly allocated screens ourselves.\n\t */\n\tvga_video_num_columns = c->vc_cols;\n\tvga_video_num_lines = c->vc_rows;\n\n\t/* We can only copy out the size of the video buffer here,\n\t * otherwise we get into VGA BIOS */\n\n\tif (!vga_is_gfx) {\n\t\tscr_memcpyw((u16 *) c->vc_origin, (u16 *) c->vc_screenbuf,\n\t\t\t    c->vc_screenbuf_size > vga_vram_size ?\n\t\t\t\tvga_vram_size : c->vc_screenbuf_size);\n\n\t\tif ((vgacon_xres != x || vgacon_yres != y) &&\n\t\t    (!(vga_video_num_columns % 2) &&\n\t\t     vga_video_num_columns <= screen_info.orig_video_cols &&\n\t\t     vga_video_num_lines <= rows))\n\t\t\tvgacon_doresize(c, c->vc_cols, c->vc_rows);\n\t}\n\n\treturn 0;\t\t/* Redrawing not needed */\n}",
    "abstract_func": "static int vgacon_switch(struct vc_data *VAR_0)\n{\n\tint VAR_1 = VAR_0->vc_cols * VAR_2;\n\tint VAR_3 = VAR_0->vc_rows * VAR_0->vc_font.height;\n\tint VAR_4 = VAR_5.orig_video_lines * VAR_6/\n\t\tVAR_0->vc_font.height;\n\t/* COMMENT_0 */\n                                                         \n                                                          \n                                                    \n    \n\tVAR_7 = VAR_0->vc_cols;\n\tVAR_8 = VAR_0->vc_rows;\n\n\t/* COMMENT_5 */\n                                     \n\n\tif (!VAR_9) {\n\t\tscr_memcpyw((u16 *) VAR_0->vc_origin, (u16 *) VAR_0->vc_screenbuf,\n\t\t\t    VAR_0->vc_screenbuf_size > VAR_10 ?\n\t\t\t\tVAR_10 : VAR_0->vc_screenbuf_size);\n\n\t\tif ((VAR_11 != VAR_1 || VAR_12 != VAR_3) &&\n\t\t    (!(VAR_7 % 2) &&\n\t\t     VAR_7 <= VAR_5.orig_video_cols &&\n\t\t     VAR_8 <= VAR_4))\n\t\t\tvgacon_doresize(VAR_0, VAR_0->vc_cols, VAR_0->vc_rows);\n\t}\n\n\treturn 0;\t\t/* COMMENT_7 */\n}",
    "func_graph_path": "torvalds/linux/973c096f6a85e5b5f2a295126ba6928d9a6afd45/vgacon.c/vul/after/4.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -27,6 +27,5 @@\n \t\t\tvgacon_doresize(c, c->vc_cols, c->vc_rows);\n \t}\n \n-\tvgacon_scrollback_switch(c->vc_num);\n \treturn 0;\t\t/* Redrawing not needed */\n }",
    "diff_line_info": {
        "deleted_lines": [
            "\tvgacon_scrollback_switch(c->vc_num);"
        ],
        "added_lines": []
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}