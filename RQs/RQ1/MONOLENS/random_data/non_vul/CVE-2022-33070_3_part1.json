{
    "cve_id": "CVE-2022-33070",
    "cwe_ids": [
        "CWE-Other"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
    "cvss_is_v3": false,
    "repo_name": "protobuf-c",
    "commit_msg": "Only shift unsigned values to avoid implementation-specific behavior.\nThis converts the arithmetic shifts to logical shifts.\nIt is based in part on a stackoverflow answer by John Schultz,\nhttps://stackoverflow.com/questions/4533076/google-protocol-buffers-zigzag-encoding",
    "commit_hash": "6e389ce2c34355d36009a8fb1666bed29fa2d4f4",
    "git_url": "https://github.com/protobuf-c/protobuf-c/commit/6e389ce2c34355d36009a8fb1666bed29fa2d4f4",
    "file_path": "protobuf-c/protobuf-c.c",
    "func_name": "zigzag32",
    "func_before": "static inline uint32_t\nzigzag32(int32_t v)\n{\n\t// Note:  the right-shift must be arithmetic\n\t// Note:  left shift must be unsigned because of overflow\n\treturn ((uint32_t)(v) << 1) ^ (uint32_t)(v >> 31);\n}",
    "abstract_func_before": "static inline uint32_t\nzigzag32(int32_t VAR_0)\n{\n\t/* COMMENT_0 */\n\t/* COMMENT_1 */\n\treturn ((uint32_t)(VAR_0) << 1) ^ (uint32_t)(VAR_0 >> 31);\n}",
    "func_graph_path_before": "protobuf-c/6e389ce2c34355d36009a8fb1666bed29fa2d4f4/protobuf-c.c/vul/before/4.json",
    "func": "static inline uint32_t\nzigzag32(int32_t v)\n{\n\t// Note:  Using unsigned types prevents undefined behavior\n\treturn ((uint32_t)v << 1) ^ -((uint32_t)v >> 31);\n}",
    "abstract_func": "static inline uint32_t\nzigzag32(int32_t VAR_0)\n{\n\t/* COMMENT_0 */\n\treturn ((uint32_t)VAR_0 << 1) ^ -((uint32_t)VAR_0 >> 31);\n}",
    "func_graph_path": "protobuf-c/6e389ce2c34355d36009a8fb1666bed29fa2d4f4/protobuf-c.c/vul/after/4.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,7 +1,6 @@\n static inline uint32_t\n zigzag32(int32_t v)\n {\n-\t// Note:  the right-shift must be arithmetic\n-\t// Note:  left shift must be unsigned because of overflow\n-\treturn ((uint32_t)(v) << 1) ^ (uint32_t)(v >> 31);\n+\t// Note:  Using unsigned types prevents undefined behavior\n+\treturn ((uint32_t)v << 1) ^ -((uint32_t)v >> 31);\n }",
    "diff_line_info": {
        "deleted_lines": [
            "\t// Note:  the right-shift must be arithmetic",
            "\t// Note:  left shift must be unsigned because of overflow",
            "\treturn ((uint32_t)(v) << 1) ^ (uint32_t)(v >> 31);"
        ],
        "added_lines": [
            "\t// Note:  Using unsigned types prevents undefined behavior",
            "\treturn ((uint32_t)v << 1) ^ -((uint32_t)v >> 31);"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/protobuf-c/protobuf-c/pull/508",
    "description": "This converts the arithmetic shifts to logical shifts and fixes issue #506.\r\nIt is based in part on a stackoverflow answer by John Schultz,\r\nhttps://stackoverflow.com/questions/4533076/google-protocol-buffers-zigzag-encoding"
}