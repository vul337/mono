{
    "cve_id": "CVE-2018-7323",
    "cwe_ids": [
        "CWE-834"
    ],
    "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
    "cvss_is_v3": false,
    "repo_name": "wireshark",
    "commit_msg": "WCCP: Make sure our offset increases.\n\nMake sure we advance our offset in various places. Clarify a macro name.\n\nBug: 14412\nChange-Id: I9b2af4bb57d039febe16f0c6d74ebb12fa34693c\nReviewed-on: https://code.wireshark.org/review/25965\nReviewed-by: Gerald Combs <gerald@wireshark.org>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "commit_hash": "5d45b69b590cabc5127282d1ade3bca1598e5f5c",
    "git_url": "https://github.com/wireshark/wireshark/commit/5d45b69b590cabc5127282d1ade3bca1598e5f5c",
    "file_path": "epan/dissectors/packet-wccp.c",
    "func_name": "dissect_wccp2_assignment_map",
    "func_before": "static gint dissect_wccp2_assignment_map(tvbuff_t *tvb, int offset,\n                                         int length, packet_info *pinfo, proto_tree *info_tree, wccp_address_table* addr_table)\n{\n  gint new_length;\n\n  new_length=dissect_wccp2_mask_value_set_list(tvb, offset, length, pinfo, info_tree, addr_table);\n\n  NOTE_EATEN_LENGTH(new_length);\n\n  return length;\n}",
    "abstract_func_before": "static gint dissect_wccp2_assignment_map(tvbuff_t *VAR_0, int VAR_1,\n                                         int VAR_2, packet_info *VAR_3, proto_tree *VAR_4, wccp_address_table* VAR_5)\n{\n  gint VAR_6;\n\n  VAR_6=dissect_wccp2_mask_value_set_list(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n\n  NOTE_EATEN_LENGTH(VAR_6);\n\n  return VAR_2;\n}",
    "func_graph_path_before": "wireshark/5d45b69b590cabc5127282d1ade3bca1598e5f5c/packet-wccp.c/vul/before/5.json",
    "func": "static gint dissect_wccp2_assignment_map(tvbuff_t *tvb, int offset,\n                                         int length, packet_info *pinfo, proto_tree *info_tree, wccp_address_table* addr_table)\n{\n  gint new_length;\n\n  new_length=dissect_wccp2_mask_value_set_list(tvb, offset, length, pinfo, info_tree, addr_table);\n\n  CHECK_LENGTH_ADVANCE_OFFSET(new_length);\n\n  return length;\n}",
    "abstract_func": "static gint dissect_wccp2_assignment_map(tvbuff_t *VAR_0, int VAR_1,\n                                         int VAR_2, packet_info *VAR_3, proto_tree *VAR_4, wccp_address_table* VAR_5)\n{\n  gint VAR_6;\n\n  VAR_6=dissect_wccp2_mask_value_set_list(VAR_0, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5);\n\n  CHECK_LENGTH_ADVANCE_OFFSET(VAR_6);\n\n  return VAR_2;\n}",
    "func_graph_path": "wireshark/5d45b69b590cabc5127282d1ade3bca1598e5f5c/packet-wccp.c/vul/after/5.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -5,7 +5,7 @@\n \n   new_length=dissect_wccp2_mask_value_set_list(tvb, offset, length, pinfo, info_tree, addr_table);\n \n-  NOTE_EATEN_LENGTH(new_length);\n+  CHECK_LENGTH_ADVANCE_OFFSET(new_length);\n \n   return length;\n }",
    "diff_line_info": {
        "deleted_lines": [
            "  NOTE_EATEN_LENGTH(new_length);"
        ],
        "added_lines": [
            "  CHECK_LENGTH_ADVANCE_OFFSET(new_length);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}