{
    "cve_id": "CVE-2015-1573",
    "cwe_ids": [
        "CWE-19"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:C",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "netfilter: nf_tables: fix flush ruleset chain dependencies\n\nJumping between chains doesn't mix well with flush ruleset. Rules\nfrom a different chain and set elements may still refer to us.\n\n[  353.373791] ------------[ cut here ]------------\n[  353.373845] kernel BUG at net/netfilter/nf_tables_api.c:1159!\n[  353.373896] invalid opcode: 0000 [#1] SMP\n[  353.373942] Modules linked in: intel_powerclamp uas iwldvm iwlwifi\n[  353.374017] CPU: 0 PID: 6445 Comm: 31c3.nft Not tainted 3.18.0 #98\n[  353.374069] Hardware name: LENOVO 5129CTO/5129CTO, BIOS 6QET47WW (1.17 ) 07/14/2010\n[...]\n[  353.375018] Call Trace:\n[  353.375046]  [<ffffffff81964c31>] ? nf_tables_commit+0x381/0x540\n[  353.375101]  [<ffffffff81949118>] nfnetlink_rcv+0x3d8/0x4b0\n[  353.375150]  [<ffffffff81943fc5>] netlink_unicast+0x105/0x1a0\n[  353.375200]  [<ffffffff8194438e>] netlink_sendmsg+0x32e/0x790\n[  353.375253]  [<ffffffff818f398e>] sock_sendmsg+0x8e/0xc0\n[  353.375300]  [<ffffffff818f36b9>] ? move_addr_to_kernel.part.20+0x19/0x70\n[  353.375357]  [<ffffffff818f44f9>] ? move_addr_to_kernel+0x19/0x30\n[  353.375410]  [<ffffffff819016d2>] ? verify_iovec+0x42/0xd0\n[  353.375459]  [<ffffffff818f3e10>] ___sys_sendmsg+0x3f0/0x400\n[  353.375510]  [<ffffffff810615fa>] ? native_sched_clock+0x2a/0x90\n[  353.375563]  [<ffffffff81176697>] ? acct_account_cputime+0x17/0x20\n[  353.375616]  [<ffffffff8110dc78>] ? account_user_time+0x88/0xa0\n[  353.375667]  [<ffffffff818f4bbd>] __sys_sendmsg+0x3d/0x80\n[  353.375719]  [<ffffffff81b184f4>] ? int_check_syscall_exit_work+0x34/0x3d\n[  353.375776]  [<ffffffff818f4c0d>] SyS_sendmsg+0xd/0x20\n[  353.375823]  [<ffffffff81b1826d>] system_call_fastpath+0x16/0x1b\n\nRelease objects in this order: rules -> sets -> chains -> tables, to\nmake sure no references to chains are held anymore.\n\nReported-by: Asbjoern Sloth Toennesen <asbjorn@asbjorn.biz>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
    "commit_hash": "a2f18db0c68fec96631c10cad9384c196e9008ac",
    "git_url": "https://github.com/torvalds/linux/commit/a2f18db0c68fec96631c10cad9384c196e9008ac",
    "file_path": "net/netfilter/nf_tables_api.c",
    "func_name": "nft_flush_table",
    "func_before": "static int nft_flush_table(struct nft_ctx *ctx)\n{\n\tint err;\n\tstruct nft_chain *chain, *nc;\n\tstruct nft_set *set, *ns;\n\n\tlist_for_each_entry_safe(chain, nc, &ctx->table->chains, list) {\n\t\tctx->chain = chain;\n\n\t\terr = nft_delrule_by_chain(ctx);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\n\t\terr = nft_delchain(ctx);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(set, ns, &ctx->table->sets, list) {\n\t\tif (set->flags & NFT_SET_ANONYMOUS &&\n\t\t    !list_empty(&set->bindings))\n\t\t\tcontinue;\n\n\t\terr = nft_delset(ctx, set);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\terr = nft_deltable(ctx);\nout:\n\treturn err;\n}",
    "abstract_func_before": "static int nft_flush_table(struct nft_ctx *VAR_0)\n{\n\tint VAR_1;\n\tstruct nft_chain *VAR_2, *VAR_3;\n\tstruct nft_set *VAR_4, *VAR_5;\n\n\tlist_for_each_entry_safe(VAR_2, VAR_3, &VAR_0->table->chains, VAR_6) {\n\t\tVAR_0->chain = VAR_2;\n\n\t\tVAR_1 = nft_delrule_by_chain(VAR_0);\n\t\tif (VAR_1 < 0)\n\t\t\tgoto out;\n\n\t\tVAR_1 = nft_delchain(VAR_0);\n\t\tif (VAR_1 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_4, VAR_5, &VAR_0->table->sets, VAR_6) {\n\t\tif (VAR_4->flags & VAR_7 &&\n\t\t    !list_empty(&VAR_4->bindings))\n\t\t\tcontinue;\n\n\t\tVAR_1 = nft_delset(VAR_0, VAR_4);\n\t\tif (VAR_1 < 0)\n\t\t\tgoto out;\n\t}\n\n\tVAR_1 = nft_deltable(VAR_0);\nout:\n\treturn VAR_1;\n}",
    "func_graph_path_before": "torvalds/linux/a2f18db0c68fec96631c10cad9384c196e9008ac/nf_tables_api.c/vul/before/0.json",
    "func": "static int nft_flush_table(struct nft_ctx *ctx)\n{\n\tint err;\n\tstruct nft_chain *chain, *nc;\n\tstruct nft_set *set, *ns;\n\n\tlist_for_each_entry(chain, &ctx->table->chains, list) {\n\t\tctx->chain = chain;\n\n\t\terr = nft_delrule_by_chain(ctx);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(set, ns, &ctx->table->sets, list) {\n\t\tif (set->flags & NFT_SET_ANONYMOUS &&\n\t\t    !list_empty(&set->bindings))\n\t\t\tcontinue;\n\n\t\terr = nft_delset(ctx, set);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(chain, nc, &ctx->table->chains, list) {\n\t\tctx->chain = chain;\n\n\t\terr = nft_delchain(ctx);\n\t\tif (err < 0)\n\t\t\tgoto out;\n\t}\n\n\terr = nft_deltable(ctx);\nout:\n\treturn err;\n}",
    "abstract_func": "static int nft_flush_table(struct nft_ctx *VAR_0)\n{\n\tint VAR_1;\n\tstruct nft_chain *VAR_2, *VAR_3;\n\tstruct nft_set *VAR_4, *VAR_5;\n\n\tlist_for_each_entry(VAR_2, &VAR_0->table->chains, VAR_6) {\n\t\tVAR_0->chain = VAR_2;\n\n\t\tVAR_1 = nft_delrule_by_chain(VAR_0);\n\t\tif (VAR_1 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_4, VAR_5, &VAR_0->table->sets, VAR_6) {\n\t\tif (VAR_4->flags & VAR_7 &&\n\t\t    !list_empty(&VAR_4->bindings))\n\t\t\tcontinue;\n\n\t\tVAR_1 = nft_delset(VAR_0, VAR_4);\n\t\tif (VAR_1 < 0)\n\t\t\tgoto out;\n\t}\n\n\tlist_for_each_entry_safe(VAR_2, VAR_3, &VAR_0->table->chains, VAR_6) {\n\t\tVAR_0->chain = VAR_2;\n\n\t\tVAR_1 = nft_delchain(VAR_0);\n\t\tif (VAR_1 < 0)\n\t\t\tgoto out;\n\t}\n\n\tVAR_1 = nft_deltable(VAR_0);\nout:\n\treturn VAR_1;\n}",
    "func_graph_path": "torvalds/linux/a2f18db0c68fec96631c10cad9384c196e9008ac/nf_tables_api.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -4,14 +4,10 @@\n \tstruct nft_chain *chain, *nc;\n \tstruct nft_set *set, *ns;\n \n-\tlist_for_each_entry_safe(chain, nc, &ctx->table->chains, list) {\n+\tlist_for_each_entry(chain, &ctx->table->chains, list) {\n \t\tctx->chain = chain;\n \n \t\terr = nft_delrule_by_chain(ctx);\n-\t\tif (err < 0)\n-\t\t\tgoto out;\n-\n-\t\terr = nft_delchain(ctx);\n \t\tif (err < 0)\n \t\t\tgoto out;\n \t}\n@@ -26,6 +22,14 @@\n \t\t\tgoto out;\n \t}\n \n+\tlist_for_each_entry_safe(chain, nc, &ctx->table->chains, list) {\n+\t\tctx->chain = chain;\n+\n+\t\terr = nft_delchain(ctx);\n+\t\tif (err < 0)\n+\t\t\tgoto out;\n+\t}\n+\n \terr = nft_deltable(ctx);\n out:\n \treturn err;",
    "diff_line_info": {
        "deleted_lines": [
            "\tlist_for_each_entry_safe(chain, nc, &ctx->table->chains, list) {",
            "\t\tif (err < 0)",
            "\t\t\tgoto out;",
            "",
            "\t\terr = nft_delchain(ctx);"
        ],
        "added_lines": [
            "\tlist_for_each_entry(chain, &ctx->table->chains, list) {",
            "\tlist_for_each_entry_safe(chain, nc, &ctx->table->chains, list) {",
            "\t\tctx->chain = chain;",
            "",
            "\t\terr = nft_delchain(ctx);",
            "\t\tif (err < 0)",
            "\t\t\tgoto out;",
            "\t}",
            ""
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}