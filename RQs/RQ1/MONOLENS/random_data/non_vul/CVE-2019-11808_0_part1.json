{
    "cve_id": "CVE-2019-11808",
    "cwe_ids": [
        "CWE-338"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
    "cvss_is_v3": false,
    "repo_name": "ratpack",
    "commit_msg": "Use UUID directly for generating session IDs",
    "commit_hash": "f2b63eb82dd71194319fd3945f5edf29b8f3a42d",
    "git_url": "https://github.com/ratpack/ratpack/commit/f2b63eb82dd71194319fd3945f5edf29b8f3a42d",
    "file_path": "ratpack-session/src/main/java/ratpack/session/internal/DefaultSessionIdGenerator.java",
    "func_name": "generateSessionId",
    "func_before": "public AsciiString generateSessionId() {\n    ThreadLocalRandom random = ThreadLocalRandom.current();\n    UUID uuid = new UUID(random.nextLong(), random.nextLong());\n    return AsciiString.of(uuid.toString());\n  }",
    "abstract_func_before": "public AsciiString generateSessionId() {\n    ThreadLocalRandom VAR_0 = VAR_1.current();\n    UUID VAR_2 = new UUID(VAR_0.nextLong(), VAR_0.nextLong());\n    return VAR_3.of(VAR_2.toString());\n  }",
    "func_graph_path_before": "ratpack/f2b63eb82dd71194319fd3945f5edf29b8f3a42d/DefaultSessionIdGenerator.java/vul/before/0.json",
    "func": "public AsciiString generateSessionId() {\n    return AsciiString.cached(UUID.randomUUID().toString());\n  }",
    "abstract_func": "public AsciiString generateSessionId() {\n    return VAR_0.cached(VAR_1.randomUUID().toString());\n  }",
    "func_graph_path": "ratpack/f2b63eb82dd71194319fd3945f5edf29b8f3a42d/DefaultSessionIdGenerator.java/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,3 @@\n public AsciiString generateSessionId() {\n-    ThreadLocalRandom random = ThreadLocalRandom.current();\n-    UUID uuid = new UUID(random.nextLong(), random.nextLong());\n-    return AsciiString.of(uuid.toString());\n+    return AsciiString.cached(UUID.randomUUID().toString());\n   }",
    "diff_line_info": {
        "deleted_lines": [
            "    ThreadLocalRandom random = ThreadLocalRandom.current();",
            "    UUID uuid = new UUID(random.nextLong(), random.nextLong());",
            "    return AsciiString.of(uuid.toString());"
        ],
        "added_lines": [
            "    return AsciiString.cached(UUID.randomUUID().toString());"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}