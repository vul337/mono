{
    "cve_id": "CVE-2019-20811",
    "cwe_ids": [
        "CWE-Other"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:N/I:P/A:N",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "In netdev_queue_add_kobject and rx_queue_add_kobject,\nif sysfs_create_group failed, kobject_put will call\nnetdev_queue_release to decrease dev refcont, however\ndev_hold has not be called. So we will see this while\nunregistering dev:\n\nunregister_netdevice: waiting for bcsh0 to become free. Usage count = -1\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: d0d668371679 (\"net: don't decrement kobj reference count on init failure\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>\n",
    "commit_hash": "a3e23f719f5c4a38ffb3d30c8d7632a4ed8ccd9e",
    "git_url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?h=a3e23f719f5c4a38ffb3d30c8d7632a4ed8ccd9e",
    "file_path": "net/core/net-sysfs.c",
    "func_name": "rx_queue_add_kobject",
    "func_before": "static int rx_queue_add_kobject(struct net_device *dev, int index)\n{\n\tstruct netdev_rx_queue *queue = dev->_rx + index;\n\tstruct kobject *kobj = &queue->kobj;\n\tint error = 0;\n\n\tkobj->kset = dev->queues_kset;\n\terror = kobject_init_and_add(kobj, &rx_queue_ktype, NULL,\n\t\t\t\t     \"rx-%u\", index);\n\tif (error)\n\t\treturn error;\n\n\tif (dev->sysfs_rx_queue_group) {\n\t\terror = sysfs_create_group(kobj, dev->sysfs_rx_queue_group);\n\t\tif (error) {\n\t\t\tkobject_put(kobj);\n\t\t\treturn error;\n\t\t}\n\t}\n\n\tkobject_uevent(kobj, KOBJ_ADD);\n\tdev_hold(queue->dev);\n\n\treturn error;\n}",
    "abstract_func_before": "static int rx_queue_add_kobject(struct net_device *VAR_0, int VAR_1)\n{\n\tstruct netdev_rx_queue *VAR_2 = VAR_0->_rx + VAR_1;\n\tstruct kobject *VAR_3 = &VAR_2->kobj;\n\tint VAR_4 = 0;\n\n\tVAR_3->kset = VAR_0->queues_kset;\n\tVAR_4 = kobject_init_and_add(VAR_3, &VAR_5, NULL,\n\t\t\t\t     \"rx-%u\", VAR_1);\n\tif (VAR_4)\n\t\treturn VAR_4;\n\n\tif (VAR_0->sysfs_rx_queue_group) {\n\t\tVAR_4 = sysfs_create_group(VAR_3, VAR_0->sysfs_rx_queue_group);\n\t\tif (VAR_4) {\n\t\t\tkobject_put(VAR_3);\n\t\t\treturn VAR_4;\n\t\t}\n\t}\n\n\tkobject_uevent(VAR_3, VAR_6);\n\tdev_hold(VAR_2->dev);\n\n\treturn VAR_4;\n}",
    "func_graph_path_before": "torvalds/linux/a3e23f719f5c4a38ffb3d30c8d7632a4ed8ccd9e/net-sysfs.c/vul/before/0.json",
    "func": "static int rx_queue_add_kobject(struct net_device *dev, int index)\n{\n\tstruct netdev_rx_queue *queue = dev->_rx + index;\n\tstruct kobject *kobj = &queue->kobj;\n\tint error = 0;\n\n\tkobj->kset = dev->queues_kset;\n\terror = kobject_init_and_add(kobj, &rx_queue_ktype, NULL,\n\t\t\t\t     \"rx-%u\", index);\n\tif (error)\n\t\treturn error;\n\n\tdev_hold(queue->dev);\n\n\tif (dev->sysfs_rx_queue_group) {\n\t\terror = sysfs_create_group(kobj, dev->sysfs_rx_queue_group);\n\t\tif (error) {\n\t\t\tkobject_put(kobj);\n\t\t\treturn error;\n\t\t}\n\t}\n\n\tkobject_uevent(kobj, KOBJ_ADD);\n\n\treturn error;\n}",
    "abstract_func": "static int rx_queue_add_kobject(struct net_device *VAR_0, int VAR_1)\n{\n\tstruct netdev_rx_queue *VAR_2 = VAR_0->_rx + VAR_1;\n\tstruct kobject *VAR_3 = &VAR_2->kobj;\n\tint VAR_4 = 0;\n\n\tVAR_3->kset = VAR_0->queues_kset;\n\tVAR_4 = kobject_init_and_add(VAR_3, &VAR_5, NULL,\n\t\t\t\t     \"rx-%u\", VAR_1);\n\tif (VAR_4)\n\t\treturn VAR_4;\n\n\tdev_hold(VAR_2->dev);\n\n\tif (VAR_0->sysfs_rx_queue_group) {\n\t\tVAR_4 = sysfs_create_group(VAR_3, VAR_0->sysfs_rx_queue_group);\n\t\tif (VAR_4) {\n\t\t\tkobject_put(VAR_3);\n\t\t\treturn VAR_4;\n\t\t}\n\t}\n\n\tkobject_uevent(VAR_3, VAR_6);\n\n\treturn VAR_4;\n}",
    "func_graph_path": "torvalds/linux/a3e23f719f5c4a38ffb3d30c8d7632a4ed8ccd9e/net-sysfs.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -10,6 +10,8 @@\n \tif (error)\n \t\treturn error;\n \n+\tdev_hold(queue->dev);\n+\n \tif (dev->sysfs_rx_queue_group) {\n \t\terror = sysfs_create_group(kobj, dev->sysfs_rx_queue_group);\n \t\tif (error) {\n@@ -19,7 +21,6 @@\n \t}\n \n \tkobject_uevent(kobj, KOBJ_ADD);\n-\tdev_hold(queue->dev);\n \n \treturn error;\n }",
    "diff_line_info": {
        "deleted_lines": [
            "\tdev_hold(queue->dev);"
        ],
        "added_lines": [
            "\tdev_hold(queue->dev);",
            ""
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}