{
    "cve_id": "CVE-2023-42801",
    "cwe_ids": [
        "CWE-120"
    ],
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:H",
    "cvss_is_v3": true,
    "repo_name": "moonlight-stream/moonlight-common-c",
    "commit_msg": "API update to provide enough information to support GFE 3.0.7",
    "commit_hash": "f57bd745b4cbed577ea654fad4701bea4d38b44c",
    "git_url": "https://github.com/moonlight-stream/moonlight-common-c/commit/f57bd745b4cbed577ea654fad4701bea4d38b44c",
    "file_path": "src/ControlStream.c",
    "func_name": "sendMessageTcp",
    "func_before": "static int sendMessageTcp(short ptype, short paylen, const void* payload) {\n    PNVCTL_TCP_PACKET_HEADER packet;\n    SOCK_RET err;\n\n    LC_ASSERT(ServerMajorVersion < 5);\n\n    packet = malloc(sizeof(*packet) + paylen);\n    if (packet == NULL) {\n        return 0;\n    }\n\n    packet->type = ptype;\n    packet->payloadLength = paylen;\n    memcpy(&packet[1], payload, paylen);\n\n    err = send(ctlSock, (char*) packet, sizeof(*packet) + paylen, 0);\n    free(packet);\n\n    if (err != sizeof(*packet) + paylen) {\n        return 0;\n    }\n\n    return 1;\n}",
    "abstract_func_before": "static int sendMessageTcp(short VAR_0, short VAR_1, const void* VAR_2) {\n    PNVCTL_TCP_PACKET_HEADER VAR_3;\n    SOCK_RET VAR_4;\n\n    LC_ASSERT(VAR_5 < 5);\n\n    VAR_3 = malloc(sizeof(*VAR_3) + VAR_1);\n    if (VAR_3 == NULL) {\n        return 0;\n    }\n\n    VAR_3->type = VAR_0;\n    VAR_3->payloadLength = VAR_1;\n    memcpy(&VAR_3[1], VAR_2, VAR_1);\n\n    VAR_4 = send(VAR_6, (char*) VAR_3, sizeof(*VAR_3) + VAR_1, 0);\n    free(VAR_3);\n\n    if (VAR_4 != sizeof(*VAR_3) + VAR_1) {\n        return 0;\n    }\n\n    return 1;\n}",
    "func_graph_path_before": "moonlight-stream/moonlight-common-c/f57bd745b4cbed577ea654fad4701bea4d38b44c/ControlStream.c/vul/before/7.json",
    "func": "static int sendMessageTcp(short ptype, short paylen, const void* payload) {\n    PNVCTL_TCP_PACKET_HEADER packet;\n    SOCK_RET err;\n\n    LC_ASSERT(AppVersionQuad[0] < 5);\n\n    packet = malloc(sizeof(*packet) + paylen);\n    if (packet == NULL) {\n        return 0;\n    }\n\n    packet->type = ptype;\n    packet->payloadLength = paylen;\n    memcpy(&packet[1], payload, paylen);\n\n    err = send(ctlSock, (char*) packet, sizeof(*packet) + paylen, 0);\n    free(packet);\n\n    if (err != sizeof(*packet) + paylen) {\n        return 0;\n    }\n\n    return 1;\n}",
    "abstract_func": "static int sendMessageTcp(short VAR_0, short VAR_1, const void* VAR_2) {\n    PNVCTL_TCP_PACKET_HEADER VAR_3;\n    SOCK_RET VAR_4;\n\n    LC_ASSERT(VAR_5[0] < 5);\n\n    VAR_3 = malloc(sizeof(*VAR_3) + VAR_1);\n    if (VAR_3 == NULL) {\n        return 0;\n    }\n\n    VAR_3->type = VAR_0;\n    VAR_3->payloadLength = VAR_1;\n    memcpy(&VAR_3[1], VAR_2, VAR_1);\n\n    VAR_4 = send(VAR_6, (char*) VAR_3, sizeof(*VAR_3) + VAR_1, 0);\n    free(VAR_3);\n\n    if (VAR_4 != sizeof(*VAR_3) + VAR_1) {\n        return 0;\n    }\n\n    return 1;\n}",
    "func_graph_path": "moonlight-stream/moonlight-common-c/f57bd745b4cbed577ea654fad4701bea4d38b44c/ControlStream.c/vul/after/7.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -2,7 +2,7 @@\n     PNVCTL_TCP_PACKET_HEADER packet;\n     SOCK_RET err;\n \n-    LC_ASSERT(ServerMajorVersion < 5);\n+    LC_ASSERT(AppVersionQuad[0] < 5);\n \n     packet = malloc(sizeof(*packet) + paylen);\n     if (packet == NULL) {",
    "diff_line_info": {
        "deleted_lines": [
            "    LC_ASSERT(ServerMajorVersion < 5);"
        ],
        "added_lines": [
            "    LC_ASSERT(AppVersionQuad[0] < 5);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}