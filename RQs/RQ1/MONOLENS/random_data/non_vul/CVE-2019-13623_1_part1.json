{
    "cve_id": "CVE-2019-13623",
    "cwe_ids": [
        "CWE-22"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "NationalSecurityAgency/ghidra",
    "commit_msg": "GT-3001 (#789) fix RestoreTask to safely extract files from zip.\n\nAbstracted guts of GFileSystemExtractAllTask, reused in RestoreTask.\nFixed NPE in RestoreTask if restore was canceled.",
    "commit_hash": "6c0171c9200b4490deb94abf3c92d1b3da59f9bf",
    "git_url": "https://github.com/NationalSecurityAgency/ghidra/commit/6c0171c9200b4490deb94abf3c92d1b3da59f9bf",
    "file_path": "Ghidra/Features/Base/src/main/java/ghidra/plugins/fsbrowser/tasks/GFileSystemExtractAllTask.java",
    "func_name": "run",
    "func_before": "@Override\n\tpublic void run(TaskMonitor monitor) {\n\t\tlong start_ts = System.currentTimeMillis();\n\t\tmonitor.setMessage(\"Extracting all...\");\n\n\t\ttry (RefdFile refdFile = FileSystemService.getInstance().getRefdFile(srcFSRL, monitor)) {\n\t\t\tGFileSystem fs = refdFile.fsRef.getFilesystem();\n\t\t\tGFile file = refdFile.file;\n\t\t\tif (!file.isDirectory()) {\n\t\t\t\tMsg.warn(this, \"Extract All source not a directory!  \" + file.getFSRL());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tFile destDir = getDestDir(file.getName());\n\t\t\tif (destDir != null) {\n\t\t\t\tprocessDirectory(fs, file, destDir, monitor);\n\t\t\t}\n\t\t}\n\t\tcatch (CancelledException ce) {\n\t\t\tMsg.warn(this, \"Extract all task canceled\");\n\t\t}\n\t\tcatch (UnsupportedOperationException | IOException e) {\n\t\t\tMsg.showError(this, parentComponent, \"Error extracting file\", e.getMessage());\n\t\t}\n\t\tMsg.info(this, \"Exported \" + totalFilesExportedCount + \" files, \" + totalDirExportedCount +\n\t\t\t\" directories, \" + totalBytesExportedCount + \" bytes\");\n\n\t\tlong elapsed = System.currentTimeMillis() - start_ts;\n\n\t\t//@formatter:off\n\t\tint option = OptionDialog.showOptionDialog(parentComponent, \"Export Summary\",\n\t\t\t\"<html><div style='margin-bottom: 20pt; text-align: center; font-weight: bold'>Export files summary:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt'>Source location:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + HTMLUtilities.friendlyEncodeHTML(srcFSRL.toPrettyString()) + \"</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt;'>Destination:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + HTMLUtilities.friendlyEncodeHTML(outputDirectory.getPath() )+ \"</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt;'>Elapsed time: \" + DateUtils.formatDuration(elapsed) + \"</div>\" +\n\t\t\t\t\t\"<table style='margin-bottom: 20pt;' width='100%'>\" +\n\t\t\t\t\t\"<tr><td></td><td>Files</td><td>Directories</td><td>Bytes</td></tr>\" +\n\t\t\t\t\t\"<tr><td>Successful</td><td>\" + totalFilesExportedCount + \"</td><td>\" + totalDirExportedCount + \"</td><td>\" + FileUtilities.formatLength(totalBytesExportedCount) + \"</td></tr>\" +\n\t\t\t\t\t\"<tr><td>Failed</td><td>\" + errorredFiles.size() + \"</td><td></td><td></td></tr>\" +\n\t\t\t\t\t\"</table>\" +\n\t\t\t\t\t\"</div></html>\", \"OK\", \"Show exported files\");\n\t\t//@formatter:on\n\t\tif (option == OptionDialog.OPTION_TWO) {\n\t\t\ttry {\n\t\t\t\tFileUtilities.openNative(outputDirectory);\n\t\t\t}\n\t\t\tcatch (IOException e) {\n\t\t\t\tMsg.showError(this, parentComponent, \"Problem Starting Explorer\",\n\t\t\t\t\t\"Problem starting file explorer: \" + e.getMessage());\n\t\t\t}\n\n\t\t}\n\t}",
    "abstract_func_before": "@Override\n\tpublic void run(TaskMonitor VAR_0) {\n\t\tlong VAR_1 = VAR_2.currentTimeMillis();\n\t\tVAR_0.setMessage(\"Extracting all...\");\n\n\t\ttry (RefdFile VAR_3 = VAR_4.getInstance().getRefdFile(VAR_5, VAR_0)) {\n\t\t\tGFileSystem VAR_6 = VAR_3.fsRef.getFilesystem();\n\t\t\tGFile VAR_7 = VAR_3.file;\n\t\t\tif (!VAR_7.isDirectory()) {\n\t\t\t\tVAR_8.warn(this, \"Extract All source not a directory!  \" + VAR_7.getFSRL());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tFile VAR_9 = getDestDir(VAR_7.getName());\n\t\t\tif (VAR_9 != null) {\n\t\t\t\tprocessDirectory(VAR_6, VAR_7, VAR_9, VAR_0);\n\t\t\t}\n\t\t}\n\t\tcatch (CancelledException VAR_10) {\n\t\t\tVAR_8.warn(this, \"Extract all task canceled\");\n\t\t}\n\t\tcatch (UnsupportedOperationException | IOException VAR_11) {\n\t\t\tVAR_8.showError(this, VAR_12, \"Error extracting file\", VAR_11.getMessage());\n\t\t}\n\t\tVAR_8.info(this, \"Exported \" + VAR_13 + \" files, \" + VAR_14 +\n\t\t\t\" directories, \" + VAR_15 + \" bytes\");\n\n\t\tlong VAR_16 = VAR_2.currentTimeMillis() - VAR_1;\n\n\t\t/* COMMENT_0 */\n\t\tint VAR_17 = VAR_18.showOptionDialog(VAR_12, \"Export Summary\",\n\t\t\t\"<html><div style='margin-bottom: 20pt; text-align: center; font-weight: bold'>Export files summary:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt'>Source location:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + VAR_19.friendlyEncodeHTML(VAR_5.toPrettyString()) + \"</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt;'>Destination:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + VAR_19.friendlyEncodeHTML(VAR_20.getPath() )+ \"</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt;'>Elapsed time: \" + VAR_21.formatDuration(VAR_16) + \"</div>\" +\n\t\t\t\t\t\"<table style='margin-bottom: 20pt;' width='100%'>\" +\n\t\t\t\t\t\"<tr><td></td><td>Files</td><td>Directories</td><td>Bytes</td></tr>\" +\n\t\t\t\t\t\"<tr><td>Successful</td><td>\" + VAR_13 + \"</td><td>\" + VAR_14 + \"</td><td>\" + VAR_22.formatLength(VAR_15) + \"</td></tr>\" +\n\t\t\t\t\t\"<tr><td>Failed</td><td>\" + VAR_23.size() + \"</td><td></td><td></td></tr>\" +\n\t\t\t\t\t\"</table>\" +\n\t\t\t\t\t\"</div></html>\", \"OK\", \"Show exported files\");\n\t\t/* COMMENT_1 */\n\t\tif (VAR_17 == VAR_18.OPTION_TWO) {\n\t\t\ttry {\n\t\t\t\tVAR_22.openNative(VAR_20);\n\t\t\t}\n\t\t\tcatch (IOException VAR_11) {\n\t\t\t\tVAR_8.showError(this, VAR_12, \"Problem Starting Explorer\",\n\t\t\t\t\t\"Problem starting file explorer: \" + VAR_11.getMessage());\n\t\t\t}\n\n\t\t}\n\t}",
    "func_graph_path_before": "NationalSecurityAgency/ghidra/6c0171c9200b4490deb94abf3c92d1b3da59f9bf/GFileSystemExtractAllTask.java/vul/before/1.json",
    "func": "@Override\n\tpublic void run(TaskMonitor monitor) {\n\t\tlong start_ts = System.currentTimeMillis();\n\t\tmonitor.setMessage(\"Extracting all...\");\n\n\t\ttry (RefdFile refdFile = FileSystemService.getInstance().getRefdFile(srcFSRL, monitor)) {\n\t\t\tGFileSystem fs = refdFile.fsRef.getFilesystem();\n\t\t\tGFile file = refdFile.file;\n\t\t\tif (!file.isDirectory()) {\n\t\t\t\tMsg.warn(this, \"Extract All source not a directory!  \" + file.getFSRL());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (verifyRootOutputDir(file.getName())) {\n\t\t\t\tstartExtract(fs, file, monitor);\n\t\t\t}\n\t\t}\n\t\tcatch (CancelledException ce) {\n\t\t\tMsg.warn(this, \"Extract all task canceled\");\n\t\t}\n\t\tcatch (UnsupportedOperationException | IOException e) {\n\t\t\tMsg.showError(this, parentComponent, \"Error extracting file\", e.getMessage());\n\t\t}\n\t\tMsg.info(this,\n\t\t\t\"Exported \" + getTotalFilesExportedCount() + \" files, \" + getTotalDirsExportedCount() +\n\t\t\t\t\" directories, \" + getTotalBytesExportedCount() + \" bytes\");\n\n\t\tlong elapsed = System.currentTimeMillis() - start_ts;\n\n\t\t//@formatter:off\n\t\tint option = OptionDialog.showOptionDialog(parentComponent, \"Export Summary\",\n\t\t\t\"<html><div style='margin-bottom: 20pt; text-align: center; font-weight: bold'>Export files summary:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt'>Source location:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + HTMLUtilities.friendlyEncodeHTML(srcFSRL.toPrettyString()) + \"</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt;'>Destination:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + HTMLUtilities.friendlyEncodeHTML(rootOutputDirectory.getPath() )+ \"</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt;'>Elapsed time: \" + DateUtils.formatDuration(elapsed) + \"</div>\" +\n\t\t\t\t\t\"<table style='margin-bottom: 20pt;' width='100%'>\" +\n\t\t\t\t\t\"<tr><td></td><td>Files</td><td>Directories</td><td>Bytes</td></tr>\" +\n\t\t\t\t\t\"<tr><td>Successful</td><td>\" + getTotalFilesExportedCount() + \"</td><td>\" + getTotalDirsExportedCount() + \n\t\t\t\t\t\t\"</td><td>\" + FileUtilities.formatLength(getTotalBytesExportedCount()) + \"</td></tr>\" +\n\t\t\t\t\t\"<tr><td>Failed</td><td>\" + errorredFiles.size() + \"</td><td></td><td></td></tr>\" +\n\t\t\t\t\t\"</table>\" +\n\t\t\t\t\t\"</div></html>\", \"OK\", \"Show exported files\");\n\t\t//@formatter:on\n\t\tif (option == OptionDialog.OPTION_TWO) {\n\t\t\ttry {\n\t\t\t\tFileUtilities.openNative(rootOutputDirectory);\n\t\t\t}\n\t\t\tcatch (IOException e) {\n\t\t\t\tMsg.showError(this, parentComponent, \"Problem Starting Explorer\",\n\t\t\t\t\t\"Problem starting file explorer: \" + e.getMessage());\n\t\t\t}\n\n\t\t}\n\t}",
    "abstract_func": "@Override\n\tpublic void run(TaskMonitor VAR_0) {\n\t\tlong VAR_1 = VAR_2.currentTimeMillis();\n\t\tVAR_0.setMessage(\"Extracting all...\");\n\n\t\ttry (RefdFile VAR_3 = VAR_4.getInstance().getRefdFile(VAR_5, VAR_0)) {\n\t\t\tGFileSystem VAR_6 = VAR_3.fsRef.getFilesystem();\n\t\t\tGFile VAR_7 = VAR_3.file;\n\t\t\tif (!VAR_7.isDirectory()) {\n\t\t\t\tVAR_8.warn(this, \"Extract All source not a directory!  \" + VAR_7.getFSRL());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (verifyRootOutputDir(VAR_7.getName())) {\n\t\t\t\tstartExtract(VAR_6, VAR_7, VAR_0);\n\t\t\t}\n\t\t}\n\t\tcatch (CancelledException VAR_9) {\n\t\t\tVAR_8.warn(this, \"Extract all task canceled\");\n\t\t}\n\t\tcatch (UnsupportedOperationException | IOException VAR_10) {\n\t\t\tVAR_8.showError(this, VAR_11, \"Error extracting file\", VAR_10.getMessage());\n\t\t}\n\t\tVAR_8.info(this,\n\t\t\t\"Exported \" + getTotalFilesExportedCount() + \" files, \" + getTotalDirsExportedCount() +\n\t\t\t\t\" directories, \" + getTotalBytesExportedCount() + \" bytes\");\n\n\t\tlong VAR_12 = VAR_2.currentTimeMillis() - VAR_1;\n\n\t\t/* COMMENT_0 */\n\t\tint VAR_13 = VAR_14.showOptionDialog(VAR_11, \"Export Summary\",\n\t\t\t\"<html><div style='margin-bottom: 20pt; text-align: center; font-weight: bold'>Export files summary:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt'>Source location:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + VAR_15.friendlyEncodeHTML(VAR_5.toPrettyString()) + \"</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt;'>Destination:</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + VAR_15.friendlyEncodeHTML(VAR_16.getPath() )+ \"</div>\" +\n\t\t\t\t\t\"<div style='margin-bottom: 20pt;'>Elapsed time: \" + VAR_17.formatDuration(VAR_12) + \"</div>\" +\n\t\t\t\t\t\"<table style='margin-bottom: 20pt;' width='100%'>\" +\n\t\t\t\t\t\"<tr><td></td><td>Files</td><td>Directories</td><td>Bytes</td></tr>\" +\n\t\t\t\t\t\"<tr><td>Successful</td><td>\" + getTotalFilesExportedCount() + \"</td><td>\" + getTotalDirsExportedCount() + \n\t\t\t\t\t\t\"</td><td>\" + VAR_18.formatLength(getTotalBytesExportedCount()) + \"</td></tr>\" +\n\t\t\t\t\t\"<tr><td>Failed</td><td>\" + VAR_19.size() + \"</td><td></td><td></td></tr>\" +\n\t\t\t\t\t\"</table>\" +\n\t\t\t\t\t\"</div></html>\", \"OK\", \"Show exported files\");\n\t\t/* COMMENT_1 */\n\t\tif (VAR_13 == VAR_14.OPTION_TWO) {\n\t\t\ttry {\n\t\t\t\tVAR_18.openNative(VAR_16);\n\t\t\t}\n\t\t\tcatch (IOException VAR_10) {\n\t\t\t\tVAR_8.showError(this, VAR_11, \"Problem Starting Explorer\",\n\t\t\t\t\t\"Problem starting file explorer: \" + VAR_10.getMessage());\n\t\t\t}\n\n\t\t}\n\t}",
    "func_graph_path": "NationalSecurityAgency/ghidra/6c0171c9200b4490deb94abf3c92d1b3da59f9bf/GFileSystemExtractAllTask.java/vul/after/1.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -11,9 +11,8 @@\n \t\t\t\treturn;\n \t\t\t}\n \n-\t\t\tFile destDir = getDestDir(file.getName());\n-\t\t\tif (destDir != null) {\n-\t\t\t\tprocessDirectory(fs, file, destDir, monitor);\n+\t\t\tif (verifyRootOutputDir(file.getName())) {\n+\t\t\t\tstartExtract(fs, file, monitor);\n \t\t\t}\n \t\t}\n \t\tcatch (CancelledException ce) {\n@@ -22,8 +21,9 @@\n \t\tcatch (UnsupportedOperationException | IOException e) {\n \t\t\tMsg.showError(this, parentComponent, \"Error extracting file\", e.getMessage());\n \t\t}\n-\t\tMsg.info(this, \"Exported \" + totalFilesExportedCount + \" files, \" + totalDirExportedCount +\n-\t\t\t\" directories, \" + totalBytesExportedCount + \" bytes\");\n+\t\tMsg.info(this,\n+\t\t\t\"Exported \" + getTotalFilesExportedCount() + \" files, \" + getTotalDirsExportedCount() +\n+\t\t\t\t\" directories, \" + getTotalBytesExportedCount() + \" bytes\");\n \n \t\tlong elapsed = System.currentTimeMillis() - start_ts;\n \n@@ -33,18 +33,19 @@\n \t\t\t\t\t\"<div style='margin-bottom: 20pt'>Source location:</div>\" +\n \t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + HTMLUtilities.friendlyEncodeHTML(srcFSRL.toPrettyString()) + \"</div>\" +\n \t\t\t\t\t\"<div style='margin-bottom: 20pt;'>Destination:</div>\" +\n-\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + HTMLUtilities.friendlyEncodeHTML(outputDirectory.getPath() )+ \"</div>\" +\n+\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + HTMLUtilities.friendlyEncodeHTML(rootOutputDirectory.getPath() )+ \"</div>\" +\n \t\t\t\t\t\"<div style='margin-bottom: 20pt;'>Elapsed time: \" + DateUtils.formatDuration(elapsed) + \"</div>\" +\n \t\t\t\t\t\"<table style='margin-bottom: 20pt;' width='100%'>\" +\n \t\t\t\t\t\"<tr><td></td><td>Files</td><td>Directories</td><td>Bytes</td></tr>\" +\n-\t\t\t\t\t\"<tr><td>Successful</td><td>\" + totalFilesExportedCount + \"</td><td>\" + totalDirExportedCount + \"</td><td>\" + FileUtilities.formatLength(totalBytesExportedCount) + \"</td></tr>\" +\n+\t\t\t\t\t\"<tr><td>Successful</td><td>\" + getTotalFilesExportedCount() + \"</td><td>\" + getTotalDirsExportedCount() + \n+\t\t\t\t\t\t\"</td><td>\" + FileUtilities.formatLength(getTotalBytesExportedCount()) + \"</td></tr>\" +\n \t\t\t\t\t\"<tr><td>Failed</td><td>\" + errorredFiles.size() + \"</td><td></td><td></td></tr>\" +\n \t\t\t\t\t\"</table>\" +\n \t\t\t\t\t\"</div></html>\", \"OK\", \"Show exported files\");\n \t\t//@formatter:on\n \t\tif (option == OptionDialog.OPTION_TWO) {\n \t\t\ttry {\n-\t\t\t\tFileUtilities.openNative(outputDirectory);\n+\t\t\t\tFileUtilities.openNative(rootOutputDirectory);\n \t\t\t}\n \t\t\tcatch (IOException e) {\n \t\t\t\tMsg.showError(this, parentComponent, \"Problem Starting Explorer\",",
    "diff_line_info": {
        "deleted_lines": [
            "\t\t\tFile destDir = getDestDir(file.getName());",
            "\t\t\tif (destDir != null) {",
            "\t\t\t\tprocessDirectory(fs, file, destDir, monitor);",
            "\t\tMsg.info(this, \"Exported \" + totalFilesExportedCount + \" files, \" + totalDirExportedCount +",
            "\t\t\t\" directories, \" + totalBytesExportedCount + \" bytes\");",
            "\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + HTMLUtilities.friendlyEncodeHTML(outputDirectory.getPath() )+ \"</div>\" +",
            "\t\t\t\t\t\"<tr><td>Successful</td><td>\" + totalFilesExportedCount + \"</td><td>\" + totalDirExportedCount + \"</td><td>\" + FileUtilities.formatLength(totalBytesExportedCount) + \"</td></tr>\" +",
            "\t\t\t\tFileUtilities.openNative(outputDirectory);"
        ],
        "added_lines": [
            "\t\t\tif (verifyRootOutputDir(file.getName())) {",
            "\t\t\t\tstartExtract(fs, file, monitor);",
            "\t\tMsg.info(this,",
            "\t\t\t\"Exported \" + getTotalFilesExportedCount() + \" files, \" + getTotalDirsExportedCount() +",
            "\t\t\t\t\" directories, \" + getTotalBytesExportedCount() + \" bytes\");",
            "\t\t\t\t\t\"<div style='margin-bottom: 20pt; margin-left: 50pt'>\" + HTMLUtilities.friendlyEncodeHTML(rootOutputDirectory.getPath() )+ \"</div>\" +",
            "\t\t\t\t\t\"<tr><td>Successful</td><td>\" + getTotalFilesExportedCount() + \"</td><td>\" + getTotalDirsExportedCount() + ",
            "\t\t\t\t\t\t\"</td><td>\" + FileUtilities.formatLength(getTotalBytesExportedCount()) + \"</td></tr>\" +",
            "\t\t\t\tFileUtilities.openNative(rootOutputDirectory);"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/NationalSecurityAgency/ghidra/pull/812",
    "description": "Abstracted guts of GFileSystemExtractAllTask, reused in RestoreTask.\r\nFixed NPE in RestoreTask if restore was canceled.\r\n\r\nFixes #789. "
}