{
    "cve_id": "CVE-2021-32631",
    "cwe_ids": [
        "CWE-290"
    ],
    "cvss_vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N",
    "cvss_is_v3": false,
    "repo_name": "nimble-platform/common",
    "commit_msg": "Fixed JWT validation according to https://github.com/nimble-platform/common/security/advisories/GHSA-fjq8-896w-pv28",
    "commit_hash": "12197a755bd524559bf4e16475595a2c6fcd34db",
    "git_url": "https://github.com/nimble-platform/common/commit/12197a755bd524559bf4e16475595a2c6fcd34db",
    "file_path": "utility/src/main/java/eu/nimble/utility/validation/ValidationUtil.java",
    "func_name": "validateToken",
    "func_before": "public Claims validateToken(String token) throws AuthenticationException {\n        try {\n            RsaKeyUtil rsaKeyUtil = new RsaKeyUtil();\n            PublicKey publicKey = rsaKeyUtil.fromPemEncoded(keycloakPublicKey);\n\n            return (Claims) Jwts.parser().setSigningKey(publicKey).parse(token.replace(\"Bearer \", \"\")).getBody();\n        } catch (Exception e){\n            throw new AuthenticationException(String.format(\"Failed to check user authorization for token: %s\", token), e);\n        }\n    }",
    "abstract_func_before": "public Claims validateToken(String VAR_0) throws AuthenticationException {\n        try {\n            RsaKeyUtil VAR_1 = new RsaKeyUtil();\n            PublicKey VAR_2 = VAR_1.fromPemEncoded(VAR_3);\n\n            return (Claims) VAR_4.parser().setSigningKey(VAR_2).parse(VAR_0.replace(\"Bearer \", \"\")).getBody();\n        } catch (Exception VAR_5){\n            throw new AuthenticationException(VAR_6.format(\"Failed to check user authorization for token: %s\", VAR_0), VAR_5);\n        }\n    }",
    "func_graph_path_before": "nimble-platform/common/12197a755bd524559bf4e16475595a2c6fcd34db/ValidationUtil.java/vul/before/0.json",
    "func": "public Claims validateToken(String token) throws AuthenticationException {\n        try {\n            RsaKeyUtil rsaKeyUtil = new RsaKeyUtil();\n            PublicKey publicKey = rsaKeyUtil.fromPemEncoded(keycloakPublicKey);\n\n            return Jwts.parser().setSigningKey(publicKey).parseJws(token.replace(\"Bearer \", \"\")).getBody();\n        } catch (Exception e){\n            throw new AuthenticationException(String.format(\"Failed to check user authorization for token: %s\", token), e);\n        }\n    }",
    "abstract_func": "public Claims validateToken(String VAR_0) throws AuthenticationException {\n        try {\n            RsaKeyUtil VAR_1 = new RsaKeyUtil();\n            PublicKey VAR_2 = VAR_1.fromPemEncoded(VAR_3);\n\n            return VAR_4.parser().setSigningKey(VAR_2).parseJws(VAR_0.replace(\"Bearer \", \"\")).getBody();\n        } catch (Exception VAR_5){\n            throw new AuthenticationException(VAR_6.format(\"Failed to check user authorization for token: %s\", VAR_0), VAR_5);\n        }\n    }",
    "func_graph_path": "nimble-platform/common/12197a755bd524559bf4e16475595a2c6fcd34db/ValidationUtil.java/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -3,7 +3,7 @@\n             RsaKeyUtil rsaKeyUtil = new RsaKeyUtil();\n             PublicKey publicKey = rsaKeyUtil.fromPemEncoded(keycloakPublicKey);\n \n-            return (Claims) Jwts.parser().setSigningKey(publicKey).parse(token.replace(\"Bearer \", \"\")).getBody();\n+            return Jwts.parser().setSigningKey(publicKey).parseJws(token.replace(\"Bearer \", \"\")).getBody();\n         } catch (Exception e){\n             throw new AuthenticationException(String.format(\"Failed to check user authorization for token: %s\", token), e);\n         }",
    "diff_line_info": {
        "deleted_lines": [
            "            return (Claims) Jwts.parser().setSigningKey(publicKey).parse(token.replace(\"Bearer \", \"\")).getBody();"
        ],
        "added_lines": [
            "            return Jwts.parser().setSigningKey(publicKey).parseJws(token.replace(\"Bearer \", \"\")).getBody();"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/nimble-platform/common/pull/80",
    "description": "no more info"
}