{
    "cve_id": "CVE-2016-15021",
    "cwe_ids": [
        "CWE-89"
    ],
    "cvss_vector": "AV:A/AC:L/Au:S/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "nickzren/alsdb",
    "commit_msg": " fixed sql injection vulnerability",
    "commit_hash": "cbc79a68145e845f951113d184b4de207c341599",
    "git_url": "https://github.com/nickzren/alsdb/commit/cbc79a68145e845f951113d184b4de207c341599",
    "file_path": "src/main/java/model/Input.java",
    "func_name": "initRegionListByGeneName",
    "func_before": "private static void initRegionListByGeneName(String geneName) throws Exception {\n        String sql = \"SELECT * \"\n                + \"FROM gene_region \"\n                + \"WHERE gene_name='\" + geneName + \"'\";\n\n        ResultSet rset = DBManager.executeQuery(sql);\n\n        if (rset.next()) {\n            query = rset.getString(\"gene_name\");\n            String regionStr = rset.getString(\"region\");\n\n            initRegionListByStr(regionStr);\n        }\n\n        rset.close();\n    }",
    "abstract_func_before": "private static void initRegionListByGeneName(String VAR_0) throws Exception {\n        String VAR_1 = \"SELECT * \"\n                + \"FROM gene_region \"\n                + \"WHERE gene_name='\" + VAR_0 + \"'\";\n\n        ResultSet VAR_2 = VAR_3.executeQuery(VAR_1);\n\n        if (VAR_2.next()) {\n            VAR_4 = VAR_2.getString(\"gene_name\");\n            String VAR_5 = VAR_2.getString(\"region\");\n\n            initRegionListByStr(VAR_5);\n        }\n\n        VAR_2.close();\n    }",
    "func_graph_path_before": "nickzren/alsdb/cbc79a68145e845f951113d184b4de207c341599/Input.java/vul/before/1.json",
    "func": "private static void initRegionListByGeneName(String geneName) throws Exception {\n        String sql = \"SELECT * FROM gene_region WHERE gene_name=?\";\n\n        PreparedStatement stmt = DBManager.prepareStatement(sql);\n        stmt.setString(1, geneName);\n        ResultSet rset = stmt.executeQuery();\n\n        if (rset.next()) {\n            query = rset.getString(\"gene_name\");\n            String regionStr = rset.getString(\"region\");\n\n            initRegionListByStr(regionStr);\n        }\n\n        rset.close();\n    }",
    "abstract_func": "private static void initRegionListByGeneName(String VAR_0) throws Exception {\n        String VAR_1 = \"SELECT * FROM gene_region WHERE gene_name=?\";\n\n        PreparedStatement VAR_2 = VAR_3.prepareStatement(VAR_1);\n        VAR_2.setString(1, VAR_0);\n        ResultSet VAR_4 = VAR_2.executeQuery();\n\n        if (VAR_4.next()) {\n            VAR_5 = VAR_4.getString(\"gene_name\");\n            String VAR_6 = VAR_4.getString(\"region\");\n\n            initRegionListByStr(VAR_6);\n        }\n\n        VAR_4.close();\n    }",
    "func_graph_path": "nickzren/alsdb/cbc79a68145e845f951113d184b4de207c341599/Input.java/vul/after/1.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,9 +1,9 @@\n private static void initRegionListByGeneName(String geneName) throws Exception {\n-        String sql = \"SELECT * \"\n-                + \"FROM gene_region \"\n-                + \"WHERE gene_name='\" + geneName + \"'\";\n+        String sql = \"SELECT * FROM gene_region WHERE gene_name=?\";\n \n-        ResultSet rset = DBManager.executeQuery(sql);\n+        PreparedStatement stmt = DBManager.prepareStatement(sql);\n+        stmt.setString(1, geneName);\n+        ResultSet rset = stmt.executeQuery();\n \n         if (rset.next()) {\n             query = rset.getString(\"gene_name\");",
    "diff_line_info": {
        "deleted_lines": [
            "        String sql = \"SELECT * \"",
            "                + \"FROM gene_region \"",
            "                + \"WHERE gene_name='\" + geneName + \"'\";",
            "        ResultSet rset = DBManager.executeQuery(sql);"
        ],
        "added_lines": [
            "        String sql = \"SELECT * FROM gene_region WHERE gene_name=?\";",
            "        PreparedStatement stmt = DBManager.prepareStatement(sql);",
            "        stmt.setString(1, geneName);",
            "        ResultSet rset = stmt.executeQuery();"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}