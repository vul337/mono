{
    "cve_id": "CVE-2023-21242",
    "cwe_ids": [
        "CWE-Other"
    ],
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cvss_is_v3": true,
    "repo_name": "android",
    "commit_msg": "[TOFU] Validate full cert chains before displaying dialog\n\nWhen a full chain including a Root CA is provided by the server,\nperform a full validation of the chain before displaying the\nTOFU dialog.\nIf validation passes: Display a TOFU dialog and ask the user if\nthey trust this network. Saying yes means that the Root can be\ninstalled safely for that network. They might say no - this is\npossible if an attacker creates a full chain they control which\nresults in a different SHA-256 (everything else looks correct).\nIf they say no, we stop the connection.\nIf validation fails: Display an error message saying that the\nvalidation failed, we stop the connection and won't display the\nTOFU dialog.\nUse server certificate pinning for servers that send only a leaf\nor a partial chain with no Root CA.\nAdditionally: clean up the debug logs to reduce the noise and\nfocus only on the important details.\n\nBug: 277824547\nTest: atest InsecureEapNetworkHandler\nTest: Connect to various Enterprise networks\nNegative test: Confirm verification fails for invalid chains\n(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:b0ee00ddf38bb677876a6cffb876e6f511e2c139)\nMerged-In: I224c80e2787497634d3e68760122dac5f177585a\nChange-Id: I224c80e2787497634d3e68760122dac5f177585a\n",
    "commit_hash": "72e903f258b5040b8f492cf18edd124b5a1ac770",
    "git_url": "https://android.googlesource.com/platform/packages/modules/Wifi/+/72e903f258b5040b8f492cf18edd124b5a1ac770",
    "file_path": "service/java/com/android/server/wifi/WifiMonitor.java",
    "func_name": "broadcastCertificationEvent",
    "func_before": "public void broadcastCertificationEvent(String iface, int networkId, String ssid,\n            int depth, X509Certificate cert) {\n        sendMessage(iface, TOFU_ROOT_CA_CERTIFICATE, networkId, depth, cert);\n    }",
    "abstract_func_before": "public void broadcastCertificationEvent(String VAR_0, int VAR_1, String VAR_2,\n            int VAR_3, X509Certificate VAR_4) {\n        sendMessage(VAR_0, VAR_5, VAR_1, VAR_3, VAR_4);\n    }",
    "func_graph_path_before": "android/72e903f258b5040b8f492cf18edd124b5a1ac770/WifiMonitor.java/vul/before/0.json",
    "func": "public void broadcastCertificationEvent(String iface, int networkId, String ssid,\n            int depth, CertificateEventInfo certificateEventInfo) {\n        sendMessage(iface, TOFU_CERTIFICATE_EVENT, networkId, depth, certificateEventInfo);\n    }",
    "abstract_func": "public void broadcastCertificationEvent(String VAR_0, int VAR_1, String VAR_2,\n            int VAR_3, CertificateEventInfo VAR_4) {\n        sendMessage(VAR_0, VAR_5, VAR_1, VAR_3, VAR_4);\n    }",
    "func_graph_path": "android/72e903f258b5040b8f492cf18edd124b5a1ac770/WifiMonitor.java/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,4 +1,4 @@\n public void broadcastCertificationEvent(String iface, int networkId, String ssid,\n-            int depth, X509Certificate cert) {\n-        sendMessage(iface, TOFU_ROOT_CA_CERTIFICATE, networkId, depth, cert);\n+            int depth, CertificateEventInfo certificateEventInfo) {\n+        sendMessage(iface, TOFU_CERTIFICATE_EVENT, networkId, depth, certificateEventInfo);\n     }",
    "diff_line_info": {
        "deleted_lines": [
            "            int depth, X509Certificate cert) {",
            "        sendMessage(iface, TOFU_ROOT_CA_CERTIFICATE, networkId, depth, cert);"
        ],
        "added_lines": [
            "            int depth, CertificateEventInfo certificateEventInfo) {",
            "        sendMessage(iface, TOFU_CERTIFICATE_EVENT, networkId, depth, certificateEventInfo);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}