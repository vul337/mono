{
    "cve_id": "CVE-2016-3886",
    "cwe_ids": [
        "CWE-264"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
    "cvss_is_v3": false,
    "repo_name": "android",
    "commit_msg": "Don't allow enable/disable of tuner on lockscreen\n\nChange-Id: Id9748ea39a8fa03b67d3fa6f91da530dd5cf9409\nFixes: 30107438\n",
    "commit_hash": "6ca6cd5a50311d58a1b7bf8fbef3f9aa29eadcd5",
    "git_url": "https://android.googlesource.com/platform/frameworks/base/+/6ca6cd5a50311d58a1b7bf8fbef3f9aa29eadcd5",
    "file_path": "packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickStatusBarHeader.java",
    "func_name": "onClick",
    "func_before": "@Override\n    public void onClick(View v) {\n        if (v == mSettingsButton) {\n            MetricsLogger.action(mContext,\n                    MetricsProto.MetricsEvent.ACTION_QS_EXPANDED_SETTINGS_LAUNCH);\n            if (mSettingsButton.isTunerClick()) {\n                if (TunerService.isTunerEnabled(mContext)) {\n                    TunerService.showResetRequest(mContext, new Runnable() {\n                        @Override\n                        public void run() {\n                            // Relaunch settings so that the tuner disappears.\n                            startSettingsActivity();\n                        }\n                    });\n                } else {\n                    Toast.makeText(getContext(), R.string.tuner_toast, Toast.LENGTH_LONG).show();\n                    TunerService.setTunerEnabled(mContext, true);\n                }\n            }\n            startSettingsActivity();\n        } else if (v == mAlarmStatus && mNextAlarm != null) {\n            PendingIntent showIntent = mNextAlarm.getShowIntent();\n            if (showIntent != null && showIntent.isActivity()) {\n                mActivityStarter.startActivity(showIntent.getIntent(), true /* dismissShade */);\n            }\n        }\n    }",
    "abstract_func_before": "@Override\n    public void onClick(View VAR_0) {\n        if (VAR_0 == VAR_1) {\n            VAR_2.action(VAR_3,\n                    VAR_4.MetricsEvent.ACTION_QS_EXPANDED_SETTINGS_LAUNCH);\n            if (VAR_1.isTunerClick()) {\n                if (VAR_5.isTunerEnabled(VAR_3)) {\n                    VAR_5.showResetRequest(VAR_3, new Runnable() {\n                        @Override\n                        public void run() {\n                            /* COMMENT_0 */\n                            startSettingsActivity();\n                        }\n                    });\n                } else {\n                    VAR_6.makeText(getContext(), VAR_7.string.tuner_toast, VAR_6.LENGTH_LONG).show();\n                    VAR_5.setTunerEnabled(VAR_3, true);\n                }\n            }\n            startSettingsActivity();\n        } else if (VAR_0 == VAR_8 && VAR_9 != null) {\n            PendingIntent VAR_10 = VAR_9.getShowIntent();\n            if (VAR_10 != null && VAR_10.isActivity()) {\n                VAR_11.startActivity(VAR_10.getIntent(), true /* COMMENT_1 */);\n            }\n        }\n    }",
    "func_graph_path_before": "android/6ca6cd5a50311d58a1b7bf8fbef3f9aa29eadcd5/QuickStatusBarHeader.java/vul/before/0.json",
    "func": "@Override\n    public void onClick(View v) {\n        if (v == mSettingsButton) {\n            MetricsLogger.action(mContext,\n                    MetricsProto.MetricsEvent.ACTION_QS_EXPANDED_SETTINGS_LAUNCH);\n            if (mSettingsButton.isTunerClick()) {\n                mHost.startRunnableDismissingKeyguard(() -> post(() -> {\n                    if (TunerService.isTunerEnabled(mContext)) {\n                        TunerService.showResetRequest(mContext, () -> {\n                            // Relaunch settings so that the tuner disappears.\n                            startSettingsActivity();\n                        });\n                    } else {\n                        Toast.makeText(getContext(), R.string.tuner_toast,\n                                Toast.LENGTH_LONG).show();\n                        TunerService.setTunerEnabled(mContext, true);\n                    }\n                    startSettingsActivity();\n\n                }));\n            } else {\n                startSettingsActivity();\n            }\n        } else if (v == mAlarmStatus && mNextAlarm != null) {\n            PendingIntent showIntent = mNextAlarm.getShowIntent();\n            if (showIntent != null && showIntent.isActivity()) {\n                mActivityStarter.startActivity(showIntent.getIntent(), true /* dismissShade */);\n            }\n        }\n    }",
    "abstract_func": "@Override\n    public void onClick(View VAR_0) {\n        if (VAR_0 == VAR_1) {\n            VAR_2.action(VAR_3,\n                    VAR_4.MetricsEvent.ACTION_QS_EXPANDED_SETTINGS_LAUNCH);\n            if (VAR_1.isTunerClick()) {\n                VAR_5.startRunnableDismissingKeyguard(() -> post(() -> {\n                    if (VAR_6.isTunerEnabled(VAR_3)) {\n                        VAR_6.showResetRequest(VAR_3, () -> {\n                            /* COMMENT_0 */\n                            startSettingsActivity();\n                        });\n                    } else {\n                        VAR_7.makeText(getContext(), VAR_8.string.tuner_toast,\n                                VAR_7.LENGTH_LONG).show();\n                        VAR_6.setTunerEnabled(VAR_3, true);\n                    }\n                    startSettingsActivity();\n\n                }));\n            } else {\n                startSettingsActivity();\n            }\n        } else if (VAR_0 == VAR_9 && VAR_10 != null) {\n            PendingIntent VAR_11 = VAR_10.getShowIntent();\n            if (VAR_11 != null && VAR_11.isActivity()) {\n                VAR_12.startActivity(VAR_11.getIntent(), true /* COMMENT_1 */);\n            }\n        }\n    }",
    "func_graph_path": "android/6ca6cd5a50311d58a1b7bf8fbef3f9aa29eadcd5/QuickStatusBarHeader.java/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -4,20 +4,23 @@\n             MetricsLogger.action(mContext,\n                     MetricsProto.MetricsEvent.ACTION_QS_EXPANDED_SETTINGS_LAUNCH);\n             if (mSettingsButton.isTunerClick()) {\n-                if (TunerService.isTunerEnabled(mContext)) {\n-                    TunerService.showResetRequest(mContext, new Runnable() {\n-                        @Override\n-                        public void run() {\n+                mHost.startRunnableDismissingKeyguard(() -> post(() -> {\n+                    if (TunerService.isTunerEnabled(mContext)) {\n+                        TunerService.showResetRequest(mContext, () -> {\n                             // Relaunch settings so that the tuner disappears.\n                             startSettingsActivity();\n-                        }\n-                    });\n-                } else {\n-                    Toast.makeText(getContext(), R.string.tuner_toast, Toast.LENGTH_LONG).show();\n-                    TunerService.setTunerEnabled(mContext, true);\n-                }\n+                        });\n+                    } else {\n+                        Toast.makeText(getContext(), R.string.tuner_toast,\n+                                Toast.LENGTH_LONG).show();\n+                        TunerService.setTunerEnabled(mContext, true);\n+                    }\n+                    startSettingsActivity();\n+\n+                }));\n+            } else {\n+                startSettingsActivity();\n             }\n-            startSettingsActivity();\n         } else if (v == mAlarmStatus && mNextAlarm != null) {\n             PendingIntent showIntent = mNextAlarm.getShowIntent();\n             if (showIntent != null && showIntent.isActivity()) {",
    "diff_line_info": {
        "deleted_lines": [
            "                if (TunerService.isTunerEnabled(mContext)) {",
            "                    TunerService.showResetRequest(mContext, new Runnable() {",
            "                        @Override",
            "                        public void run() {",
            "                        }",
            "                    });",
            "                } else {",
            "                    Toast.makeText(getContext(), R.string.tuner_toast, Toast.LENGTH_LONG).show();",
            "                    TunerService.setTunerEnabled(mContext, true);",
            "                }",
            "            startSettingsActivity();"
        ],
        "added_lines": [
            "                mHost.startRunnableDismissingKeyguard(() -> post(() -> {",
            "                    if (TunerService.isTunerEnabled(mContext)) {",
            "                        TunerService.showResetRequest(mContext, () -> {",
            "                        });",
            "                    } else {",
            "                        Toast.makeText(getContext(), R.string.tuner_toast,",
            "                                Toast.LENGTH_LONG).show();",
            "                        TunerService.setTunerEnabled(mContext, true);",
            "                    }",
            "                    startSettingsActivity();",
            "",
            "                }));",
            "            } else {",
            "                startSettingsActivity();"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}