{
    "cve_id": "CVE-2024-24824",
    "cwe_ids": [
        "CWE-863"
    ],
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cvss_is_v3": true,
    "repo_name": "Graylog2/graylog2-server",
    "commit_msg": "Restrict classes allowed for cluster config and event types (#18165) (#18179)\n\n* Restrict classes allowed for cluster config and event types (#18165)\r\n\r\nAdd a new safe_classes configuration option to restrict the classes allowed to be used\r\nas cluster config and event types.\r\nThe configuration option allows to specify a comma-separated set of prefixes matched\r\nagainst the fully qualified class name.\r\n\r\nFor now, the default value for the configuration is org.graylog.,org.graylog2., which will\r\nallow all classes that Graylog maintains.\r\n\r\nThis should work out of the box for almost all setups. Changing the default value might\r\nonly be necessary if external plugins require cluster config or event types outside the\r\n\"org.graylog.\" or \"org.graylog2.\" namespaces. If that is the case, the configuration setting\r\ncan be adjusted to cover this use case, e.b. by setting it to\r\n\r\n    safe_classes = org.graylog.,org.graylog2.,custom.plugin.namespace.\r\n\r\nif said classes are located within the custom.plugin.namespace package.\r\n\r\nRefs: https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-p6gg-5hf4-4rgj\r\n\r\n(cherry picked from commit 813203263b06dda18e2aed68ae92b34277f904b4)\r\n\r\n* Use javax.inject.Inject instead of jakarta.inject.Inject\r\n\r\n* Use javax.ws.rs instead of jakarta.ws.rs\r\n\r\n---------\r\n\r\nCo-authored-by: Othello Maurer <othello@graylog.com>",
    "commit_hash": "75ef2b8d60e7d67f859b79fe712c8ae7b2e861d8",
    "git_url": "https://github.com/Graylog2/graylog2-server/commit/75ef2b8d60e7d67f859b79fe712c8ae7b2e861d8",
    "file_path": "graylog2-server/src/main/java/org/graylog2/rest/resources/system/ClusterConfigResource.java",
    "func_name": "classFromName",
    "func_before": "@Nullable\n    private Class<?> classFromName(String className) {\n        try {\n            return chainingClassLoader.loadClass(className);\n        } catch (ClassNotFoundException e) {\n            return null;\n        }\n    }",
    "abstract_func_before": "@Nullable\n    private Class<?> classFromName(String VAR_0) {\n        try {\n            return VAR_1.loadClass(VAR_0);\n        } catch (ClassNotFoundException VAR_2) {\n            return null;\n        }\n    }",
    "func_graph_path_before": "Graylog2/graylog2-server/75ef2b8d60e7d67f859b79fe712c8ae7b2e861d8/ClusterConfigResource.java/vul/before/0.json",
    "func": "@Nullable\n    private Class<?> classFromName(String className) {\n        try {\n            return chainingClassLoader.loadClassSafely(className);\n        } catch (ClassNotFoundException e) {\n            return null;\n        } catch (UnsafeClassLoadingAttemptException e) {\n            throw new BadRequestException(e.getLocalizedMessage());\n        }\n    }",
    "abstract_func": "@Nullable\n    private Class<?> classFromName(String VAR_0) {\n        try {\n            return VAR_1.loadClassSafely(VAR_0);\n        } catch (ClassNotFoundException VAR_2) {\n            return null;\n        } catch (UnsafeClassLoadingAttemptException VAR_2) {\n            throw new BadRequestException(VAR_2.getLocalizedMessage());\n        }\n    }",
    "func_graph_path": "Graylog2/graylog2-server/75ef2b8d60e7d67f859b79fe712c8ae7b2e861d8/ClusterConfigResource.java/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,8 +1,10 @@\n @Nullable\n     private Class<?> classFromName(String className) {\n         try {\n-            return chainingClassLoader.loadClass(className);\n+            return chainingClassLoader.loadClassSafely(className);\n         } catch (ClassNotFoundException e) {\n             return null;\n+        } catch (UnsafeClassLoadingAttemptException e) {\n+            throw new BadRequestException(e.getLocalizedMessage());\n         }\n     }",
    "diff_line_info": {
        "deleted_lines": [
            "            return chainingClassLoader.loadClass(className);"
        ],
        "added_lines": [
            "            return chainingClassLoader.loadClassSafely(className);",
            "        } catch (UnsafeClassLoadingAttemptException e) {",
            "            throw new BadRequestException(e.getLocalizedMessage());"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/Graylog2/graylog2-server/pull/18179",
    "description": "Add a new safe_classes configuration option to restrict the classes allowed to be used as cluster config and event types.\r\nThe configuration option allows to specify a comma-separated set of prefixes matched against the fully qualified class name.\r\n\r\nFor now, the default value for the configuration is org.graylog.,org.graylog2., which will allow all classes that Graylog maintains.\r\n\r\nThis should work out of the box for almost all setups. Changing the default value might only be necessary if external plugins require cluster config or event types outside the \"org.graylog.\" or \"org.graylog2.\" namespaces. If that is the case, the configuration setting can be adjusted to cover this use case, e.b. by setting it to\r\n\r\n    safe_classes = org.graylog.,org.graylog2.,custom.plugin.namespace.\r\n\r\nif said classes are located within the custom.plugin.namespace package.\r\n\r\nRefs: https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-p6gg-5hf4-4rgj\r\n\r\n(cherry picked from commit 813203263b06dda18e2aed68ae92b34277f904b4)"
}