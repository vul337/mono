{
    "cve_id": "CVE-2022-29567",
    "cwe_ids": [
        "CWE-200"
    ],
    "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
    "cvss_is_v3": false,
    "repo_name": "vaadin/flow-components",
    "commit_msg": "fix data provider getId implementation",
    "commit_hash": "e70a2dff396d32999c6b5e771869b2fed0185e11",
    "git_url": "https://github.com/vaadin/flow-components/commit/e70a2dff396d32999c6b5e771869b2fed0185e11",
    "file_path": "vaadin-grid-flow-parent/vaadin-grid-flow-integration-tests/src/main/java/com/vaadin/flow/component/treegrid/it/TreeGridPreloadPage.java",
    "func_name": "setDataProvider",
    "func_before": "private void setDataProvider(int nodesPerLevel, int depth) {\n        grid.setDataProvider(\n                new LazyHierarchicalDataProvider(nodesPerLevel, depth) {\n                    @Override\n                    protected Stream<HierarchicalTestBean> fetchChildrenFromBackEnd(\n                            HierarchicalQuery<HierarchicalTestBean, Void> query) {\n                        VaadinRequest currentRequest = VaadinService\n                                .getCurrentRequest();\n                        if (!currentRequest.equals(lastRequest)) {\n                            requestCount++;\n                        }\n                        lastRequest = currentRequest;\n                        requestCountField\n                                .setValue(String.valueOf(requestCount));\n\n                        fetchCount++;\n                        fetchCountField.setValue(String.valueOf(fetchCount));\n\n                        return super.fetchChildrenFromBackEnd(query);\n                    }\n\n                    @Override\n                    public Object getId(HierarchicalTestBean item) {\n                        return item != null ? item.toString() : \"null\";\n                    }\n                });\n    }",
    "abstract_func_before": "private void setDataProvider(int VAR_0, int VAR_1) {\n        VAR_2.setDataProvider(\n                new LazyHierarchicalDataProvider(VAR_0, VAR_1) {\n                    @Override\n                    protected Stream<HierarchicalTestBean> fetchChildrenFromBackEnd(\n                            HierarchicalQuery<HierarchicalTestBean, Void> VAR_3) {\n                        VaadinRequest VAR_4 = VAR_5\n                                .getCurrentRequest();\n                        if (!VAR_4.equals(VAR_6)) {\n                            VAR_7++;\n                        }\n                        VAR_6 = VAR_4;\n                        VAR_8\n                                .setValue(VAR_9.valueOf(VAR_7));\n\n                        VAR_10++;\n                        VAR_11.setValue(VAR_9.valueOf(VAR_10));\n\n                        return super.fetchChildrenFromBackEnd(VAR_3);\n                    }\n\n                    @Override\n                    public Object getId(HierarchicalTestBean VAR_12) {\n                        return VAR_12 != null ? VAR_12.toString() : \"null\";\n                    }\n                });\n    }",
    "func_graph_path_before": "vaadin/flow-components/e70a2dff396d32999c6b5e771869b2fed0185e11/TreeGridPreloadPage.java/vul/before/0.json",
    "func": "private void setDataProvider(int nodesPerLevel, int depth) {\n        grid.setDataProvider(\n                new LazyHierarchicalDataProvider(nodesPerLevel, depth) {\n                    @Override\n                    protected Stream<HierarchicalTestBean> fetchChildrenFromBackEnd(\n                            HierarchicalQuery<HierarchicalTestBean, Void> query) {\n                        VaadinRequest currentRequest = VaadinService\n                                .getCurrentRequest();\n                        if (!currentRequest.equals(lastRequest)) {\n                            requestCount++;\n                        }\n                        lastRequest = currentRequest;\n                        requestCountField\n                                .setValue(String.valueOf(requestCount));\n\n                        fetchCount++;\n                        fetchCountField.setValue(String.valueOf(fetchCount));\n\n                        return super.fetchChildrenFromBackEnd(query);\n                    }\n\n                    @Override\n                    public Object getId(HierarchicalTestBean item) {\n                        return item != null ? item.getId() : \"null\";\n                    }\n                });\n    }",
    "abstract_func": "private void setDataProvider(int VAR_0, int VAR_1) {\n        VAR_2.setDataProvider(\n                new LazyHierarchicalDataProvider(VAR_0, VAR_1) {\n                    @Override\n                    protected Stream<HierarchicalTestBean> fetchChildrenFromBackEnd(\n                            HierarchicalQuery<HierarchicalTestBean, Void> VAR_3) {\n                        VaadinRequest VAR_4 = VAR_5\n                                .getCurrentRequest();\n                        if (!VAR_4.equals(VAR_6)) {\n                            VAR_7++;\n                        }\n                        VAR_6 = VAR_4;\n                        VAR_8\n                                .setValue(VAR_9.valueOf(VAR_7));\n\n                        VAR_10++;\n                        VAR_11.setValue(VAR_9.valueOf(VAR_10));\n\n                        return super.fetchChildrenFromBackEnd(VAR_3);\n                    }\n\n                    @Override\n                    public Object getId(HierarchicalTestBean VAR_12) {\n                        return VAR_12 != null ? VAR_12.getId() : \"null\";\n                    }\n                });\n    }",
    "func_graph_path": "vaadin/flow-components/e70a2dff396d32999c6b5e771869b2fed0185e11/TreeGridPreloadPage.java/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -21,7 +21,7 @@\n \n                     @Override\n                     public Object getId(HierarchicalTestBean item) {\n-                        return item != null ? item.toString() : \"null\";\n+                        return item != null ? item.getId() : \"null\";\n                     }\n                 });\n     }",
    "diff_line_info": {
        "deleted_lines": [
            "                        return item != null ? item.toString() : \"null\";"
        ],
        "added_lines": [
            "                        return item != null ? item.getId() : \"null\";"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/vaadin/flow-components/pull/3046",
    "description": "## Description\r\n\r\nUsing Object::toString as an item's key for server-client communication makes item's data visible on the client side, so generated numeric id is used instead.\r\n\r\n## Type of change\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n\r\n## Checklist\r\n\r\n- [x] I have read the contribution guide: https://vaadin.com/docs-beta/latest/guide/contributing/overview/\r\n- [x] I have added a description following the guideline.\r\n- [x] The issue is created in the corresponding repository and I have referenced it.\r\n- [x] I have added tests to ensure my change is effective and works as intended.\r\n- [x] New and existing tests are passing locally with my change.\r\n- [x] I have performed self-review and corrected misspellings.\r\n\r\n#### Additional for `Feature` type of change\r\n\r\n- [ ] Enhancement / new feature was discussed in a corresponding GitHub issue and Acceptance Criteria were created.\r\n"
}