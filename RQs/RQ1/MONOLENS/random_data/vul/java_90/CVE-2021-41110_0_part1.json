{
    "cve_id": "CVE-2021-41110",
    "cwe_ids": [
        "CWE-502"
    ],
    "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "common-workflow-language/cwlviewer",
    "commit_msg": "Use Yaml SafeConstructor (#355)",
    "commit_hash": "f6066f09edb70033a2ce80200e9fa9e70a5c29de",
    "git_url": "https://github.com/common-workflow-language/cwlviewer/commit/f6066f09edb70033a2ce80200e9fa9e70a5c29de",
    "file_path": "src/main/java/org/commonwl/view/cwl/CWLService.java",
    "func_name": "yamlStreamToJson",
    "func_before": "private JsonNode yamlStreamToJson(InputStream yamlStream) {\n        Yaml reader = new Yaml();\n        ObjectMapper mapper = new ObjectMapper();\n\t\treturn mapper.valueToTree(reader.load(yamlStream));\n    }",
    "abstract_func_before": "private JsonNode yamlStreamToJson(InputStream VAR_0) {\n        Yaml VAR_1 = new Yaml();\n        ObjectMapper VAR_2 = new ObjectMapper();\n\t\treturn VAR_2.valueToTree(VAR_1.load(VAR_0));\n    }",
    "func_graph_path_before": "common-workflow-language/cwlviewer/f6066f09edb70033a2ce80200e9fa9e70a5c29de/CWLService.java/vul/before/1.json",
    "func": "private JsonNode yamlStreamToJson(InputStream yamlStream) {\n        Yaml reader = new Yaml(new SafeConstructor());\n        ObjectMapper mapper = new ObjectMapper();\n\t\treturn mapper.valueToTree(reader.load(yamlStream));\n    }",
    "abstract_func": "private JsonNode yamlStreamToJson(InputStream VAR_0) {\n        Yaml VAR_1 = new Yaml(new SafeConstructor());\n        ObjectMapper VAR_2 = new ObjectMapper();\n\t\treturn VAR_2.valueToTree(VAR_1.load(VAR_0));\n    }",
    "func_graph_path": "common-workflow-language/cwlviewer/f6066f09edb70033a2ce80200e9fa9e70a5c29de/CWLService.java/vul/after/1.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,5 @@\n private JsonNode yamlStreamToJson(InputStream yamlStream) {\n-        Yaml reader = new Yaml();\n+        Yaml reader = new Yaml(new SafeConstructor());\n         ObjectMapper mapper = new ObjectMapper();\n \t\treturn mapper.valueToTree(reader.load(yamlStream));\n     }",
    "diff_line_info": {
        "deleted_lines": [
            "        Yaml reader = new Yaml();"
        ],
        "added_lines": [
            "        Yaml reader = new Yaml(new SafeConstructor());"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/common-workflow-language/cwlviewer/pull/355",
    "description": "<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n<!--- Describe your changes in detail -->\r\n\r\n@mr-c I've successfully reproduced an issue with serialization. From the same page with the exploit, looks like passing the `SafeConstructor` fixes it (it's a class provided by SnakeYaml that prevents certain things from being accessed when constructing objects.)\r\n\r\n## Motivation and Context\r\n<!--- Why is this change required? What problem does it solve? -->\r\n<!--- If it fixes an open issue, please link to the issue here. -->\r\nPrevent serialization issues as reported in https://github.com/common-workflow-language/cwlviewer/pull/241#issuecomment-931244268\r\n\r\n## How Has This Been Tested?\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\nLocally.\r\n\r\n## Screenshots (if appropriate):\r\n\r\n## Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist:\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [ ] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n\r\nNot sure how this could be tested :+1: static analyzers will spot the issue again (assuming the static analyzers are able to comprehend that `SafeConstructor` fixes the issue)\r\n"
}