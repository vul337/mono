{
    "cve_id": "CVE-2015-10061",
    "cwe_ids": [
        "CWE-89"
    ],
    "cvss_vector": "AV:A/AC:L/Au:S/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "evandro-machado/Trabalho-Web2",
    "commit_msg": "ClienteDAO - alterados statements para utilizar o metodo setString do PreparedStatement para evitar SQL Injection\n- alterados statements para utilizar ilike ao inves de like para pesquisar sem case sensitivity\nBancoDeDados - colocado ponto e virgula apos todas as queries.",
    "commit_hash": "f59ac954625d0a4f6d34f069a2e26686a7a20aeb",
    "git_url": "https://github.com/evandro-machado/Trabalho-Web2/commit/f59ac954625d0a4f6d34f069a2e26686a7a20aeb",
    "file_path": "src/java/br/com/magazine/dao/ClienteDAO.java",
    "func_name": "buscarClienteEmail",
    "func_before": "public List<Cliente> buscarClienteEmail(String email) throws SQLException, ClassNotFoundException {\n        Connection con = null;\n        PreparedStatement stmt = null;\n        ResultSet rs = null;\n\n        try {\n            con = ConnectionFactory.getConnection();\n            stmt = con.prepareStatement(stmtBuscarEmail + \"'%\" + email + \"%' and perfil = 1 and inativo=false order by nome\");\n            rs = stmt.executeQuery();\n            return montaListaClientes(rs);\n        } catch (SQLException e) {\n            throw new RuntimeException(e);\n        } finally {\n            try {\n                rs.close();\n            } catch (Exception ex) {\n                System.out.println(\"Erro ao fechar result set.Erro: \" + ex.getMessage());\n            }\n            try {\n                stmt.close();\n            } catch (SQLException ex) {\n                System.out.println(\"Erro ao fechar statement. Ex = \" + ex.getMessage());\n            }\n            try {\n                con.close();\n            } catch (SQLException ex) {\n                System.out.println(\"Erro ao fechar a conexao. Ex = \" + ex.getMessage());\n            }\n        }\n    }",
    "abstract_func_before": "public List<Cliente> buscarClienteEmail(String VAR_0) throws SQLException, ClassNotFoundException {\n        Connection VAR_1 = null;\n        PreparedStatement VAR_2 = null;\n        ResultSet VAR_3 = null;\n\n        try {\n            VAR_1 = VAR_4.getConnection();\n            VAR_2 = VAR_1.prepareStatement(VAR_5 + \"'%\" + VAR_0 + \"%' and perfil = 1 and inativo=false order by nome\");\n            VAR_3 = VAR_2.executeQuery();\n            return montaListaClientes(VAR_3);\n        } catch (SQLException VAR_6) {\n            throw new RuntimeException(VAR_6);\n        } finally {\n            try {\n                VAR_3.close();\n            } catch (Exception VAR_7) {\n                VAR_8.out.println(\"Erro ao fechar result set.Erro: \" + VAR_7.getMessage());\n            }\n            try {\n                VAR_2.close();\n            } catch (SQLException VAR_7) {\n                VAR_8.out.println(\"Erro ao fechar statement. Ex = \" + VAR_7.getMessage());\n            }\n            try {\n                VAR_1.close();\n            } catch (SQLException VAR_7) {\n                VAR_8.out.println(\"Erro ao fechar a conexao. Ex = \" + VAR_7.getMessage());\n            }\n        }\n    }",
    "func_graph_path_before": "evandro-machado/Trabalho-Web2/f59ac954625d0a4f6d34f069a2e26686a7a20aeb/ClienteDAO.java/vul/before/4.json",
    "func": "public List<Cliente> buscarClienteEmail(String email) throws SQLException, ClassNotFoundException {\n        Connection con = null;\n        PreparedStatement stmt = null;\n        ResultSet rs = null;\n\n        try {\n            con = ConnectionFactory.getConnection();\n            email = \"%\"+email+\"%\";\n            stmt = con.prepareStatement(stmtBuscarEmailCliente);\n            stmt.setString(1,email);\n            rs = stmt.executeQuery();\n            return montaListaClientes(rs);\n        } catch (SQLException e) {\n            throw new RuntimeException(e);\n        } finally {\n            try {\n                rs.close();\n            } catch (Exception ex) {\n                System.out.println(\"Erro ao fechar result set.Erro: \" + ex.getMessage());\n            }\n            try {\n                stmt.close();\n            } catch (SQLException ex) {\n                System.out.println(\"Erro ao fechar statement. Ex = \" + ex.getMessage());\n            }\n            try {\n                con.close();\n            } catch (SQLException ex) {\n                System.out.println(\"Erro ao fechar a conexao. Ex = \" + ex.getMessage());\n            }\n        }\n    }",
    "abstract_func": "public List<Cliente> buscarClienteEmail(String VAR_0) throws SQLException, ClassNotFoundException {\n        Connection VAR_1 = null;\n        PreparedStatement VAR_2 = null;\n        ResultSet VAR_3 = null;\n\n        try {\n            VAR_1 = VAR_4.getConnection();\n            VAR_0 = \"%\"+VAR_0+\"%\";\n            VAR_2 = VAR_1.prepareStatement(VAR_5);\n            VAR_2.setString(1,VAR_0);\n            VAR_3 = VAR_2.executeQuery();\n            return montaListaClientes(VAR_3);\n        } catch (SQLException VAR_6) {\n            throw new RuntimeException(VAR_6);\n        } finally {\n            try {\n                VAR_3.close();\n            } catch (Exception VAR_7) {\n                VAR_8.out.println(\"Erro ao fechar result set.Erro: \" + VAR_7.getMessage());\n            }\n            try {\n                VAR_2.close();\n            } catch (SQLException VAR_7) {\n                VAR_8.out.println(\"Erro ao fechar statement. Ex = \" + VAR_7.getMessage());\n            }\n            try {\n                VAR_1.close();\n            } catch (SQLException VAR_7) {\n                VAR_8.out.println(\"Erro ao fechar a conexao. Ex = \" + VAR_7.getMessage());\n            }\n        }\n    }",
    "func_graph_path": "evandro-machado/Trabalho-Web2/f59ac954625d0a4f6d34f069a2e26686a7a20aeb/ClienteDAO.java/vul/after/4.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -5,7 +5,9 @@\n \n         try {\n             con = ConnectionFactory.getConnection();\n-            stmt = con.prepareStatement(stmtBuscarEmail + \"'%\" + email + \"%' and perfil = 1 and inativo=false order by nome\");\n+            email = \"%\"+email+\"%\";\n+            stmt = con.prepareStatement(stmtBuscarEmailCliente);\n+            stmt.setString(1,email);\n             rs = stmt.executeQuery();\n             return montaListaClientes(rs);\n         } catch (SQLException e) {",
    "diff_line_info": {
        "deleted_lines": [
            "            stmt = con.prepareStatement(stmtBuscarEmail + \"'%\" + email + \"%' and perfil = 1 and inativo=false order by nome\");"
        ],
        "added_lines": [
            "            email = \"%\"+email+\"%\";",
            "            stmt = con.prepareStatement(stmtBuscarEmailCliente);",
            "            stmt.setString(1,email);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}