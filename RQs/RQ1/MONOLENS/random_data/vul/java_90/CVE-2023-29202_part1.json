{
    "cve_id": "CVE-2023-29202",
    "cwe_ids": [
        "CWE-79"
    ],
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H",
    "cvss_is_v3": true,
    "repo_name": "xwiki/xwiki-platform",
    "commit_msg": "XWIKI-19671: Filter the feed's content in the RSS macro",
    "commit_hash": "5c7ebe47c2897e92d8f04fe2e15027e84dc3ec03",
    "git_url": "https://github.com/xwiki/xwiki-platform/commit/5c7ebe47c2897e92d8f04fe2e15027e84dc3ec03",
    "file_path": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-macros/xwiki-platform-rendering-macro-rss/src/main/java/org/xwiki/rendering/internal/macro/rss/RssMacro.java",
    "func_name": "generateEntries",
    "func_before": "private void generateEntries(Block parentBlock, SyndFeed feed, RssMacroParameters parameters)\n        throws MacroExecutionException\n    {\n        int maxElements = parameters.getCount();\n        int count = 0;\n\n        for (Object item : feed.getEntries()) {\n            ++count;\n            if (count > maxElements) {\n                break;\n            }\n            SyndEntry entry = (SyndEntry) item;\n\n            ResourceReference titleResourceReference = new ResourceReference(entry.getLink(), ResourceType.URL);\n            Block titleBlock = new LinkBlock(parsePlainText(entry.getTitle()), titleResourceReference, true);\n            ParagraphBlock paragraphTitleBlock = new ParagraphBlock(Collections.singletonList(titleBlock));\n            paragraphTitleBlock.setParameter(CLASS_ATTRIBUTE, \"rssitemtitle\");\n            parentBlock.addChild(paragraphTitleBlock);\n\n            if (parameters.isContent() && entry.getDescription() != null) {\n                // We are wrapping the feed entry content in a HTML macro, not considering what the declared content\n                // is, because some feed will declare text while they actually contain HTML.\n                // See http://stuffthathappens.com/blog/2007/10/29/i-hate-rss/\n                // A case where doing this might hurt is if a feed declares \"text\" and has any XML inside it does\n                // not want to be interpreted as such, but displayed as is instead. But this certainly is too rare\n                // compared to mis-formed feeds that say text while they want to say HTML.\n                Block html = new RawBlock(entry.getDescription().getValue(), Syntax.XHTML_1_0);\n                parentBlock.addChild(new GroupBlock(Arrays.asList(html), Collections.singletonMap(CLASS_ATTRIBUTE,\n                    \"rssitemdescription\")));\n            }\n        }\n    }",
    "abstract_func_before": "private void generateEntries(Block VAR_0, SyndFeed VAR_1, RssMacroParameters VAR_2)\n        throws MacroExecutionException\n    {\n        int VAR_3 = VAR_2.getCount();\n        int VAR_4 = 0;\n\n        for (Object VAR_5 : VAR_1.getEntries()) {\n            ++VAR_4;\n            if (VAR_4 > VAR_3) {\n                break;\n            }\n            SyndEntry VAR_6 = (SyndEntry) VAR_5;\n\n            ResourceReference VAR_7 = new ResourceReference(VAR_6.getLink(), VAR_8.URL);\n            Block VAR_9 = new LinkBlock(parsePlainText(VAR_6.getTitle()), VAR_7, true);\n            ParagraphBlock VAR_10 = new ParagraphBlock(VAR_11.singletonList(VAR_9));\n            VAR_10.setParameter(VAR_12, \"rssitemtitle\");\n            VAR_0.addChild(VAR_10);\n\n            if (VAR_2.isContent() && VAR_6.getDescription() != null) {\n                /* COMMENT_0 */\n                /* COMMENT_1 */\n                /* COMMENT_2 */\n                /* COMMENT_3 */\n                /* COMMENT_4 */\n                /* COMMENT_5 */\n                Block VAR_13 = new RawBlock(VAR_6.getDescription().getValue(), VAR_14.XHTML_1_0);\n                VAR_0.addChild(new GroupBlock(VAR_15.asList(VAR_13), VAR_11.singletonMap(VAR_12,\n                    \"rssitemdescription\")));\n            }\n        }\n    }",
    "func_graph_path_before": "xwiki/xwiki-platform/5c7ebe47c2897e92d8f04fe2e15027e84dc3ec03/RssMacro.java/vul/before/0.json",
    "func": "private void generateEntries(Block parentBlock, SyndFeed feed, RssMacroParameters parameters)\n        throws MacroExecutionException\n    {\n        int maxElements = parameters.getCount();\n        int count = 0;\n\n        for (Object item : feed.getEntries()) {\n            ++count;\n            if (count > maxElements) {\n                break;\n            }\n            SyndEntry entry = (SyndEntry) item;\n\n            ResourceReference titleResourceReference = new ResourceReference(entry.getLink(), ResourceType.URL);\n            Block titleBlock = new LinkBlock(parsePlainText(entry.getTitle()), titleResourceReference, true);\n            ParagraphBlock paragraphTitleBlock = new ParagraphBlock(Collections.singletonList(titleBlock));\n            paragraphTitleBlock.setParameter(CLASS_ATTRIBUTE, \"rssitemtitle\");\n            parentBlock.addChild(paragraphTitleBlock);\n\n            if (parameters.isContent() && entry.getDescription() != null) {\n                // We are wrapping the feed entry content in a HTML macro, not considering what the declared content\n                // is, because some feed will declare text while they actually contain HTML.\n                // See http://stuffthathappens.com/blog/2007/10/29/i-hate-rss/\n                // A case where doing this might hurt is if a feed declares \"text\" and has any XML inside it does\n                // not want to be interpreted as such, but displayed as is instead. But this certainly is too rare\n                // compared to mis-formed feeds that say text while they want to say HTML.\n                Block html = new RawBlock(cleanHTML(entry.getDescription().getValue()), Syntax.HTML_5_0);\n                parentBlock.addChild(new GroupBlock(Arrays.asList(html), Collections.singletonMap(CLASS_ATTRIBUTE,\n                    \"rssitemdescription\")));\n            }\n        }\n    }",
    "abstract_func": "private void generateEntries(Block VAR_0, SyndFeed VAR_1, RssMacroParameters VAR_2)\n        throws MacroExecutionException\n    {\n        int VAR_3 = VAR_2.getCount();\n        int VAR_4 = 0;\n\n        for (Object VAR_5 : VAR_1.getEntries()) {\n            ++VAR_4;\n            if (VAR_4 > VAR_3) {\n                break;\n            }\n            SyndEntry VAR_6 = (SyndEntry) VAR_5;\n\n            ResourceReference VAR_7 = new ResourceReference(VAR_6.getLink(), VAR_8.URL);\n            Block VAR_9 = new LinkBlock(parsePlainText(VAR_6.getTitle()), VAR_7, true);\n            ParagraphBlock VAR_10 = new ParagraphBlock(VAR_11.singletonList(VAR_9));\n            VAR_10.setParameter(VAR_12, \"rssitemtitle\");\n            VAR_0.addChild(VAR_10);\n\n            if (VAR_2.isContent() && VAR_6.getDescription() != null) {\n                /* COMMENT_0 */\n                /* COMMENT_1 */\n                /* COMMENT_2 */\n                /* COMMENT_3 */\n                /* COMMENT_4 */\n                /* COMMENT_5 */\n                Block VAR_13 = new RawBlock(cleanHTML(VAR_6.getDescription().getValue()), VAR_14.HTML_5_0);\n                VAR_0.addChild(new GroupBlock(VAR_15.asList(VAR_13), VAR_11.singletonMap(VAR_12,\n                    \"rssitemdescription\")));\n            }\n        }\n    }",
    "func_graph_path": "xwiki/xwiki-platform/5c7ebe47c2897e92d8f04fe2e15027e84dc3ec03/RssMacro.java/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -24,7 +24,7 @@\n                 // A case where doing this might hurt is if a feed declares \"text\" and has any XML inside it does\n                 // not want to be interpreted as such, but displayed as is instead. But this certainly is too rare\n                 // compared to mis-formed feeds that say text while they want to say HTML.\n-                Block html = new RawBlock(entry.getDescription().getValue(), Syntax.XHTML_1_0);\n+                Block html = new RawBlock(cleanHTML(entry.getDescription().getValue()), Syntax.HTML_5_0);\n                 parentBlock.addChild(new GroupBlock(Arrays.asList(html), Collections.singletonMap(CLASS_ATTRIBUTE,\n                     \"rssitemdescription\")));\n             }",
    "diff_line_info": {
        "deleted_lines": [
            "                Block html = new RawBlock(entry.getDescription().getValue(), Syntax.XHTML_1_0);"
        ],
        "added_lines": [
            "                Block html = new RawBlock(cleanHTML(entry.getDescription().getValue()), Syntax.HTML_5_0);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}