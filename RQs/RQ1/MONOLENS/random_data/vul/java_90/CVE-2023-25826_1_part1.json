{
    "cve_id": "CVE-2023-25826",
    "cwe_ids": [
        "CWE-78"
    ],
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cvss_is_v3": true,
    "repo_name": "OpenTSDB/opentsdb",
    "commit_msg": "Improved fix for #2261.\nRegular expressions wouldn't catch the newlines or possibly other\ncontrol characters. Now we'll use the TAG validation code to make\nsure the inputs are only plain ASCII printables first.\nFixes CVE-2018-12972, CVE-2020-35476",
    "commit_hash": "26be40a5e5b6ce8b0b1e4686c4b0d7911e5d8a25",
    "git_url": "https://github.com/OpenTSDB/opentsdb/commit/26be40a5e5b6ce8b0b1e4686c4b0d7911e5d8a25",
    "file_path": "test/tsd/TestGraphHandler.java",
    "func_name": "setLabelParams",
    "func_before": "@Test\n  public void setLabelParams() throws Exception {\n    assertPlotParam(\"ylabel\", \"This is good\");\n    assertPlotParam(\"ylabel\", \" and so Is this - _ yay\");\n    assertInvalidPlotParam(\"ylabel\", \"[33:system(%20\");\n    assertInvalidPlotParam(\"title\", \"[33:system(%20\");\n    assertInvalidPlotParam(\"y2label\", \"[33:system(%20\");\n  }",
    "abstract_func_before": "@Test\n  public void setLabelParams() throws Exception {\n    assertPlotParam(\"ylabel\", \"This is good\");\n    assertPlotParam(\"ylabel\", \" and so Is this - _ yay\");\n    assertInvalidPlotParam(\"ylabel\", \"[33:system(%20\");\n    assertInvalidPlotParam(\"title\", \"[33:system(%20\");\n    assertInvalidPlotParam(\"y2label\", \"[33:system(%20\");\n  }",
    "func_graph_path_before": "OpenTSDB/opentsdb/26be40a5e5b6ce8b0b1e4686c4b0d7911e5d8a25/TestGraphHandler.java/vul/before/2.json",
    "func": "@Test\n  public void setLabelParams() throws Exception {\n    assertPlotParam(\"ylabel\", \"This is good\");\n    assertPlotParam(\"ylabel\", \" and so Is this - _ yay\");\n    assertInvalidPlotParam(\"ylabel\", \"system(%20no%0anewlines\");\n    assertInvalidPlotParam(\"title\", \"system(%20no%0anewlines\");\n    assertInvalidPlotParam(\"y2label\", \"system(%20no%0anewlines\");\n  }",
    "abstract_func": "@Test\n  public void setLabelParams() throws Exception {\n    assertPlotParam(\"ylabel\", \"This is good\");\n    assertPlotParam(\"ylabel\", \" and so Is this - _ yay\");\n    assertInvalidPlotParam(\"ylabel\", \"system(%20no%0anewlines\");\n    assertInvalidPlotParam(\"title\", \"system(%20no%0anewlines\");\n    assertInvalidPlotParam(\"y2label\", \"system(%20no%0anewlines\");\n  }",
    "func_graph_path": "OpenTSDB/opentsdb/26be40a5e5b6ce8b0b1e4686c4b0d7911e5d8a25/TestGraphHandler.java/vul/after/2.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -2,7 +2,7 @@\n   public void setLabelParams() throws Exception {\n     assertPlotParam(\"ylabel\", \"This is good\");\n     assertPlotParam(\"ylabel\", \" and so Is this - _ yay\");\n-    assertInvalidPlotParam(\"ylabel\", \"[33:system(%20\");\n-    assertInvalidPlotParam(\"title\", \"[33:system(%20\");\n-    assertInvalidPlotParam(\"y2label\", \"[33:system(%20\");\n+    assertInvalidPlotParam(\"ylabel\", \"system(%20no%0anewlines\");\n+    assertInvalidPlotParam(\"title\", \"system(%20no%0anewlines\");\n+    assertInvalidPlotParam(\"y2label\", \"system(%20no%0anewlines\");\n   }",
    "diff_line_info": {
        "deleted_lines": [
            "    assertInvalidPlotParam(\"ylabel\", \"[33:system(%20\");",
            "    assertInvalidPlotParam(\"title\", \"[33:system(%20\");",
            "    assertInvalidPlotParam(\"y2label\", \"[33:system(%20\");"
        ],
        "added_lines": [
            "    assertInvalidPlotParam(\"ylabel\", \"system(%20no%0anewlines\");",
            "    assertInvalidPlotParam(\"title\", \"system(%20no%0anewlines\");",
            "    assertInvalidPlotParam(\"y2label\", \"system(%20no%0anewlines\");"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/OpenTSDB/opentsdb/pull/2275",
    "description": "Regular expressions wouldn't catch the newlines or possibly other control characters. Now we'll use the TAG validation code to make sure the inputs are only plain ASCII printables first. Fixes CVE-2018-12972, CVE-2020-35476"
}