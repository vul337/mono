{
    "cve_id": "CVE-2016-1000346",
    "cwe_ids": [
        "CWE-320"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
    "cvss_is_v3": false,
    "repo_name": "bcgit/bc-java",
    "commit_msg": "Added TLS validation check for DH keys\nAdded further agreement result checks",
    "commit_hash": "1127131c89021612c6eefa26dbe5714c194e7495",
    "git_url": "https://github.com/bcgit/bc-java/commit/1127131c89021612c6eefa26dbe5714c194e7495",
    "file_path": "core/src/main/java/org/bouncycastle/crypto/agreement/DHBasicAgreement.java",
    "func_name": "calculateAgreement",
    "func_before": "public BigInteger calculateAgreement(\n        CipherParameters   pubKey)\n    {\n        DHPublicKeyParameters   pub = (DHPublicKeyParameters)pubKey;\n\n        if (!pub.getParameters().equals(dhParams))\n        {\n            throw new IllegalArgumentException(\"Diffie-Hellman public key has wrong parameters.\");\n        }\n\n        return pub.getY().modPow(key.getX(), dhParams.getP());\n    }",
    "abstract_func_before": "public BigInteger calculateAgreement(\n        CipherParameters   VAR_0)\n    {\n        DHPublicKeyParameters   VAR_1 = (DHPublicKeyParameters)VAR_0;\n\n        if (!VAR_1.getParameters().equals(VAR_2))\n        {\n            throw new IllegalArgumentException(\"Diffie-Hellman public key has wrong parameters.\");\n        }\n\n        return VAR_1.getY().modPow(VAR_3.getX(), VAR_2.getP());\n    }",
    "func_graph_path_before": "bcgit/bc-java/1127131c89021612c6eefa26dbe5714c194e7495/DHBasicAgreement.java/vul/before/0.json",
    "func": "public BigInteger calculateAgreement(\n        CipherParameters   pubKey)\n    {\n        DHPublicKeyParameters   pub = (DHPublicKeyParameters)pubKey;\n\n        if (!pub.getParameters().equals(dhParams))\n        {\n            throw new IllegalArgumentException(\"Diffie-Hellman public key has wrong parameters.\");\n        }\n\n        BigInteger result = pub.getY().modPow(key.getX(), dhParams.getP());\n        if (result.compareTo(ONE) == 0)\n        {\n            throw new IllegalStateException(\"Shared key can't be 1\");\n        }\n\n        return result;\n    }",
    "abstract_func": "public BigInteger calculateAgreement(\n        CipherParameters   VAR_0)\n    {\n        DHPublicKeyParameters   VAR_1 = (DHPublicKeyParameters)VAR_0;\n\n        if (!VAR_1.getParameters().equals(VAR_2))\n        {\n            throw new IllegalArgumentException(\"Diffie-Hellman public key has wrong parameters.\");\n        }\n\n        BigInteger VAR_3 = VAR_1.getY().modPow(VAR_4.getX(), VAR_2.getP());\n        if (VAR_3.compareTo(VAR_5) == 0)\n        {\n            throw new IllegalStateException(\"Shared key can't be 1\");\n        }\n\n        return VAR_3;\n    }",
    "func_graph_path": "bcgit/bc-java/1127131c89021612c6eefa26dbe5714c194e7495/DHBasicAgreement.java/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -8,5 +8,11 @@\n             throw new IllegalArgumentException(\"Diffie-Hellman public key has wrong parameters.\");\n         }\n \n-        return pub.getY().modPow(key.getX(), dhParams.getP());\n+        BigInteger result = pub.getY().modPow(key.getX(), dhParams.getP());\n+        if (result.compareTo(ONE) == 0)\n+        {\n+            throw new IllegalStateException(\"Shared key can't be 1\");\n+        }\n+\n+        return result;\n     }",
    "diff_line_info": {
        "deleted_lines": [
            "        return pub.getY().modPow(key.getX(), dhParams.getP());"
        ],
        "added_lines": [
            "        BigInteger result = pub.getY().modPow(key.getX(), dhParams.getP());",
            "        if (result.compareTo(ONE) == 0)",
            "        {",
            "            throw new IllegalStateException(\"Shared key can't be 1\");",
            "        }",
            "",
            "        return result;"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}