{
    "cve_id": "CVE-2011-4718",
    "cwe_ids": [
        "CWE-264"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "php/php-src",
    "commit_msg": "Strict session",
    "commit_hash": "25e8fcc88fa20dc9d4c47184471003f436927cde",
    "git_url": "https://github.com/php/php-src/commit/25e8fcc88fa20dc9d4c47184471003f436927cde",
    "file_path": "ext/session/session.c",
    "func_name": "php_session_start",
    "func_before": "PHPAPI void php_session_start(TSRMLS_D) /* {{{ */\n{\n\tzval **ppid;\n\tzval **data;\n\tchar *p, *value;\n\tint nrand;\n\tint lensess;\n\n\tif (PS(use_only_cookies)) {\n\t\tPS(apply_trans_sid) = 0;\n\t} else {\n\t\tPS(apply_trans_sid) = PS(use_trans_sid);\n\t}\n\n\tswitch (PS(session_status)) {\n\t\tcase php_session_active:\n\t\t\tphp_error(E_NOTICE, \"A session had already been started - ignoring session_start()\");\n\t\t\treturn;\n\t\t\tbreak;\n\n\t\tcase php_session_disabled:\n\t\t\tvalue = zend_ini_string(\"session.save_handler\", sizeof(\"session.save_handler\"), 0);\n\t\t\tif (!PS(mod) && value) {\n\t\t\t\tPS(mod) = _php_find_ps_module(value TSRMLS_CC);\n\t\t\t\tif (!PS(mod)) {\n\t\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Cannot find save handler '%s' - session startup failed\", value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = zend_ini_string(\"session.serialize_handler\", sizeof(\"session.serialize_handler\"), 0);\n\t\t\tif (!PS(serializer) && value) {\n\t\t\t\tPS(serializer) = _php_find_ps_serializer(value TSRMLS_CC);\n\t\t\t\tif (!PS(serializer)) {\n\t\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Cannot find serialization handler '%s' - session startup failed\", value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tPS(session_status) = php_session_none;\n\t\t\t/* fallthrough */\n\n\t\tdefault:\n\t\tcase php_session_none:\n\t\t\tPS(define_sid) = 1;\n\t\t\tPS(send_cookie) = 1;\n\t}\n\n\tlensess = strlen(PS(session_name));\n\n\t/* Cookies are preferred, because initially\n\t * cookie and get variables will be available. */\n\n\tif (!PS(id)) {\n\t\tif (PS(use_cookies) && zend_hash_find(&EG(symbol_table), \"_COOKIE\", sizeof(\"_COOKIE\"), (void **) &data) == SUCCESS &&\n\t\t\t\tZ_TYPE_PP(data) == IS_ARRAY &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(data), PS(session_name), lensess + 1, (void **) &ppid) == SUCCESS\n\t\t) {\n\t\t\tPPID2SID;\n\t\t\tPS(apply_trans_sid) = 0;\n\t\t\tPS(send_cookie) = 0;\n\t\t\tPS(define_sid) = 0;\n\t\t}\n\n\t\tif (!PS(use_only_cookies) && !PS(id) &&\n\t\t\t\tzend_hash_find(&EG(symbol_table), \"_GET\", sizeof(\"_GET\"), (void **) &data) == SUCCESS &&\n\t\t\t\tZ_TYPE_PP(data) == IS_ARRAY &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(data), PS(session_name), lensess + 1, (void **) &ppid) == SUCCESS\n\t\t) {\n\t\t\tPPID2SID;\n\t\t\tPS(send_cookie) = 0;\n\t\t}\n\n\t\tif (!PS(use_only_cookies) && !PS(id) &&\n\t\t\t\tzend_hash_find(&EG(symbol_table), \"_POST\", sizeof(\"_POST\"), (void **) &data) == SUCCESS &&\n\t\t\t\tZ_TYPE_PP(data) == IS_ARRAY &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(data), PS(session_name), lensess + 1, (void **) &ppid) == SUCCESS\n\t\t) {\n\t\t\tPPID2SID;\n\t\t\tPS(send_cookie) = 0;\n\t\t}\n\t}\n\n\t/* Check the REQUEST_URI symbol for a string of the form\n\t * '<session-name>=<session-id>' to allow URLs of the form\n\t * http://yoursite/<session-name>=<session-id>/script.php */\n\n\tif (!PS(use_only_cookies) && !PS(id) && PG(http_globals)[TRACK_VARS_SERVER] &&\n\t\t\tzend_hash_find(Z_ARRVAL_P(PG(http_globals)[TRACK_VARS_SERVER]), \"REQUEST_URI\", sizeof(\"REQUEST_URI\"), (void **) &data) == SUCCESS &&\n\t\t\tZ_TYPE_PP(data) == IS_STRING &&\n\t\t\t(p = strstr(Z_STRVAL_PP(data), PS(session_name))) &&\n\t\t\tp[lensess] == '='\n\t) {\n\t\tchar *q;\n\n\t\tp += lensess + 1;\n\t\tif ((q = strpbrk(p, \"/?\\\\\"))) {\n\t\t\tPS(id) = estrndup(p, q - p);\n\t\t\tPS(send_cookie) = 0;\n\t\t}\n\t}\n\n\t/* Check whether the current request was referred to by\n\t * an external site which invalidates the previously found id. */\n\n\tif (PS(id) &&\n\t\t\tPS(extern_referer_chk)[0] != '\\0' &&\n\t\t\tPG(http_globals)[TRACK_VARS_SERVER] &&\n\t\t\tzend_hash_find(Z_ARRVAL_P(PG(http_globals)[TRACK_VARS_SERVER]), \"HTTP_REFERER\", sizeof(\"HTTP_REFERER\"), (void **) &data) == SUCCESS &&\n\t\t\tZ_TYPE_PP(data) == IS_STRING &&\n\t\t\tZ_STRLEN_PP(data) != 0 &&\n\t\t\tstrstr(Z_STRVAL_PP(data), PS(extern_referer_chk)) == NULL\n\t) {\n\t\tefree(PS(id));\n\t\tPS(id) = NULL;\n\t\tPS(send_cookie) = 1;\n\t\tif (PS(use_trans_sid) && !PS(use_only_cookies)) {\n\t\t\tPS(apply_trans_sid) = 1;\n\t\t}\n\t}\n\n\tphp_session_initialize(TSRMLS_C);\n\n\tif (!PS(use_cookies) && PS(send_cookie)) {\n\t\tif (PS(use_trans_sid) && !PS(use_only_cookies)) {\n\t\t\tPS(apply_trans_sid) = 1;\n\t\t}\n\t\tPS(send_cookie) = 0;\n\t}\n\n\tphp_session_reset_id(TSRMLS_C);\n\n\tPS(session_status) = php_session_active;\n\n\tphp_session_cache_limiter(TSRMLS_C);\n\n\tif ((PS(mod_data) || PS(mod_user_implemented)) && PS(gc_probability) > 0) {\n\t\tint nrdels = -1;\n\n\t\tnrand = (int) ((float) PS(gc_divisor) * php_combined_lcg(TSRMLS_C));\n\t\tif (nrand < PS(gc_probability)) {\n\t\t\tPS(mod)->s_gc(&PS(mod_data), PS(gc_maxlifetime), &nrdels TSRMLS_CC);\n#ifdef SESSION_DEBUG\n\t\t\tif (nrdels != -1) {\n\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_NOTICE, \"purged %d expired session objects\", nrdels);\n\t\t\t}\n#endif\n\t\t}\n\t}\n}",
    "abstract_func_before": "PHPAPI VAR_0 php_session_start(TSRMLS_D) /* COMMENT_0 */\n{\n\tzval **VAR_1;\n\tzval **VAR_2;\n\tchar *VAR_3, *VAR_4;\n\tint VAR_5;\n\tint VAR_6;\n\n\tif (PS(VAR_7)) {\n\t\tPS(VAR_8) = 0;\n\t} else {\n\t\tPS(VAR_8) = PS(VAR_9);\n\t}\n\n\tswitch (PS(VAR_10)) {\n\t\tcase VAR_11:\n\t\t\tphp_error(VAR_12, \"A session had already been started - ignoring session_start()\");\n\t\t\treturn;\n\t\t\tbreak;\n\n\t\tcase VAR_13:\n\t\t\tVAR_4 = zend_ini_string(\"session.save_handler\", sizeof(\"session.save_handler\"), 0);\n\t\t\tif (!PS(VAR_14) && VAR_4) {\n\t\t\t\tPS(VAR_14) = _php_find_ps_module(VAR_4 VAR_15);\n\t\t\t\tif (!PS(VAR_14)) {\n\t\t\t\t\tVAR_16(NULL VAR_15, VAR_17, \"Cannot find save handler '%s' - session startup failed\", VAR_4);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tVAR_4 = zend_ini_string(\"session.serialize_handler\", sizeof(\"session.serialize_handler\"), 0);\n\t\t\tif (!PS(VAR_18) && VAR_4) {\n\t\t\t\tPS(VAR_18) = _php_find_ps_serializer(VAR_4 VAR_15);\n\t\t\t\tif (!PS(VAR_18)) {\n\t\t\t\t\tVAR_16(NULL VAR_15, VAR_17, \"Cannot find serialization handler '%s' - session startup failed\", VAR_4);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tPS(VAR_10) = VAR_19;\n\t\t\t/* COMMENT_1 */\n\n\t\tdefault:\n\t\tcase VAR_19:\n\t\t\tPS(VAR_20) = 1;\n\t\t\tPS(VAR_21) = 1;\n\t}\n\n\tVAR_6 = strlen(PS(VAR_22));\n\n\t/* COMMENT_2 */\n                                                  \n\n\tif (!PS(VAR_23)) {\n\t\tif (PS(VAR_24) && zend_hash_find(&EG(VAR_25), \"_COOKIE\", sizeof(\"_COOKIE\"), (void **) &VAR_2) == VAR_26 &&\n\t\t\t\tZ_TYPE_PP(VAR_2) == VAR_27 &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(VAR_2), PS(VAR_22), VAR_6 + 1, (void **) &VAR_1) == VAR_26\n\t\t) {\n\t\t\tVAR_28;\n\t\t\tPS(VAR_8) = 0;\n\t\t\tPS(VAR_21) = 0;\n\t\t\tPS(VAR_20) = 0;\n\t\t}\n\n\t\tif (!PS(VAR_7) && !PS(VAR_23) &&\n\t\t\t\tzend_hash_find(&EG(VAR_25), \"_GET\", sizeof(\"_GET\"), (void **) &VAR_2) == VAR_26 &&\n\t\t\t\tZ_TYPE_PP(VAR_2) == VAR_27 &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(VAR_2), PS(VAR_22), VAR_6 + 1, (void **) &VAR_1) == VAR_26\n\t\t) {\n\t\t\tVAR_28;\n\t\t\tPS(VAR_21) = 0;\n\t\t}\n\n\t\tif (!PS(VAR_7) && !PS(VAR_23) &&\n\t\t\t\tzend_hash_find(&EG(VAR_25), \"_POST\", sizeof(\"_POST\"), (void **) &VAR_2) == VAR_26 &&\n\t\t\t\tZ_TYPE_PP(VAR_2) == VAR_27 &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(VAR_2), PS(VAR_22), VAR_6 + 1, (void **) &VAR_1) == VAR_26\n\t\t) {\n\t\t\tVAR_28;\n\t\t\tPS(VAR_21) = 0;\n\t\t}\n\t}\n\n\t/* COMMENT_4 */\n                                                           \n                                                             \n\n\tif (!PS(VAR_7) && !PS(VAR_23) && PG(VAR_29)[VAR_30] &&\n\t\t\tzend_hash_find(Z_ARRVAL_P(PG(VAR_29)[VAR_30]), \"REQUEST_URI\", sizeof(\"REQUEST_URI\"), (void **) &VAR_2) == VAR_26 &&\n\t\t\tZ_TYPE_PP(VAR_2) == VAR_31 &&\n\t\t\t(VAR_3 = strstr(Z_STRVAL_PP(VAR_2), PS(VAR_22))) &&\n\t\t\tVAR_3[VAR_6] == '='\n\t) {\n\t\tchar *VAR_32;\n\n\t\tVAR_3 += VAR_6 + 1;\n\t\tif ((VAR_32 = strpbrk(VAR_3, \"/?\\\\\"))) {\n\t\t\tPS(VAR_23) = estrndup(VAR_3, VAR_32 - VAR_3);\n\t\t\tPS(VAR_21) = 0;\n\t\t}\n\t}\n\n\t/* COMMENT_7 */\n                                                                  \n\n\tif (PS(VAR_23) &&\n\t\t\tPS(VAR_33)[0] != '\\0' &&\n\t\t\tPG(VAR_29)[VAR_30] &&\n\t\t\tzend_hash_find(Z_ARRVAL_P(PG(VAR_29)[VAR_30]), \"HTTP_REFERER\", sizeof(\"HTTP_REFERER\"), (void **) &VAR_2) == VAR_26 &&\n\t\t\tZ_TYPE_PP(VAR_2) == VAR_31 &&\n\t\t\tZ_STRLEN_PP(VAR_2) != 0 &&\n\t\t\tstrstr(Z_STRVAL_PP(VAR_2), PS(VAR_33)) == NULL\n\t) {\n\t\tefree(PS(VAR_23));\n\t\tPS(VAR_23) = NULL;\n\t\tPS(VAR_21) = 1;\n\t\tif (PS(VAR_9) && !PS(VAR_7)) {\n\t\t\tPS(VAR_8) = 1;\n\t\t}\n\t}\n\n\tphp_session_initialize(VAR_34);\n\n\tif (!PS(VAR_24) && PS(VAR_21)) {\n\t\tif (PS(VAR_9) && !PS(VAR_7)) {\n\t\t\tPS(VAR_8) = 1;\n\t\t}\n\t\tPS(VAR_21) = 0;\n\t}\n\n\tphp_session_reset_id(VAR_34);\n\n\tPS(VAR_10) = VAR_11;\n\n\tphp_session_cache_limiter(VAR_34);\n\n\tif ((PS(VAR_35) || PS(VAR_36)) && PS(VAR_37) > 0) {\n\t\tint VAR_38 = -1;\n\n\t\tVAR_5 = (int) ((float) PS(VAR_39) * php_combined_lcg(VAR_34));\n\t\tif (VAR_5 < PS(VAR_37)) {\n\t\t\tPS(VAR_14)->s_gc(&PS(VAR_35), PS(VAR_40), &VAR_38 VAR_15);\n#ifdef VAR_41\n\t\t\tif (VAR_38 != -1) {\n\t\t\t\tVAR_16(NULL VAR_15, VAR_12, \"purged %d expired session objects\", VAR_38);\n\t\t\t}\n#endif\n\t\t}\n\t}\n}",
    "func_graph_path_before": null,
    "func": "PHPAPI void php_session_start(TSRMLS_D) /* {{{ */\n{\n\tzval **ppid;\n\tzval **data;\n\tchar *p, *value;\n\tint nrand;\n\tint lensess;\n\n\tif (PS(use_only_cookies)) {\n\t\tPS(apply_trans_sid) = 0;\n\t} else {\n\t\tPS(apply_trans_sid) = PS(use_trans_sid);\n\t}\n\n\tswitch (PS(session_status)) {\n\t\tcase php_session_active:\n\t\t\tphp_error(E_NOTICE, \"A session had already been started - ignoring session_start()\");\n\t\t\treturn;\n\t\t\tbreak;\n\n\t\tcase php_session_disabled:\n\t\t\tvalue = zend_ini_string(\"session.save_handler\", sizeof(\"session.save_handler\"), 0);\n\t\t\tif (!PS(mod) && value) {\n\t\t\t\tPS(mod) = _php_find_ps_module(value TSRMLS_CC);\n\t\t\t\tif (!PS(mod)) {\n\t\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Cannot find save handler '%s' - session startup failed\", value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = zend_ini_string(\"session.serialize_handler\", sizeof(\"session.serialize_handler\"), 0);\n\t\t\tif (!PS(serializer) && value) {\n\t\t\t\tPS(serializer) = _php_find_ps_serializer(value TSRMLS_CC);\n\t\t\t\tif (!PS(serializer)) {\n\t\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Cannot find serialization handler '%s' - session startup failed\", value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tPS(session_status) = php_session_none;\n\t\t\t/* fallthrough */\n\n\t\tdefault:\n\t\tcase php_session_none:\n\t\t\tPS(define_sid) = 1;\n\t\t\tPS(send_cookie) = 1;\n\t}\n\n\tlensess = strlen(PS(session_name));\n\n\t/* Cookies are preferred, because initially\n\t * cookie and get variables will be available. */\n\n\tif (!PS(id)) {\n\t\tif (PS(use_cookies) && zend_hash_find(&EG(symbol_table), \"_COOKIE\", sizeof(\"_COOKIE\"), (void **) &data) == SUCCESS &&\n\t\t\t\tZ_TYPE_PP(data) == IS_ARRAY &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(data), PS(session_name), lensess + 1, (void **) &ppid) == SUCCESS\n\t\t) {\n\t\t\tPPID2SID;\n\t\t\tPS(apply_trans_sid) = 0;\n\t\t\tPS(send_cookie) = 0;\n\t\t\tPS(define_sid) = 0;\n\t\t}\n\n\t\tif (!PS(use_only_cookies) && !PS(id) &&\n\t\t\t\tzend_hash_find(&EG(symbol_table), \"_GET\", sizeof(\"_GET\"), (void **) &data) == SUCCESS &&\n\t\t\t\tZ_TYPE_PP(data) == IS_ARRAY &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(data), PS(session_name), lensess + 1, (void **) &ppid) == SUCCESS\n\t\t) {\n\t\t\tPPID2SID;\n\t\t\tPS(send_cookie) = 0;\n\t\t}\n\n\t\tif (!PS(use_only_cookies) && !PS(id) &&\n\t\t\t\tzend_hash_find(&EG(symbol_table), \"_POST\", sizeof(\"_POST\"), (void **) &data) == SUCCESS &&\n\t\t\t\tZ_TYPE_PP(data) == IS_ARRAY &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(data), PS(session_name), lensess + 1, (void **) &ppid) == SUCCESS\n\t\t) {\n\t\t\tPPID2SID;\n\t\t\tPS(send_cookie) = 0;\n\t\t}\n\t}\n\n\t/* Check the REQUEST_URI symbol for a string of the form\n\t * '<session-name>=<session-id>' to allow URLs of the form\n\t * http://yoursite/<session-name>=<session-id>/script.php */\n\n\tif (!PS(use_only_cookies) && !PS(id) && PG(http_globals)[TRACK_VARS_SERVER] &&\n\t\t\tzend_hash_find(Z_ARRVAL_P(PG(http_globals)[TRACK_VARS_SERVER]), \"REQUEST_URI\", sizeof(\"REQUEST_URI\"), (void **) &data) == SUCCESS &&\n\t\t\tZ_TYPE_PP(data) == IS_STRING &&\n\t\t\t(p = strstr(Z_STRVAL_PP(data), PS(session_name))) &&\n\t\t\tp[lensess] == '='\n\t) {\n\t\tchar *q;\n\n\t\tp += lensess + 1;\n\t\tif ((q = strpbrk(p, \"/?\\\\\"))) {\n\t\t\tPS(id) = estrndup(p, q - p);\n\t\t\tPS(send_cookie) = 0;\n\t\t}\n\t}\n\n\t/* Check whether the current request was referred to by\n\t * an external site which invalidates the previously found id. */\n\n\tif (PS(id) &&\n\t\t\tPS(extern_referer_chk)[0] != '\\0' &&\n\t\t\tPG(http_globals)[TRACK_VARS_SERVER] &&\n\t\t\tzend_hash_find(Z_ARRVAL_P(PG(http_globals)[TRACK_VARS_SERVER]), \"HTTP_REFERER\", sizeof(\"HTTP_REFERER\"), (void **) &data) == SUCCESS &&\n\t\t\tZ_TYPE_PP(data) == IS_STRING &&\n\t\t\tZ_STRLEN_PP(data) != 0 &&\n\t\t\tstrstr(Z_STRVAL_PP(data), PS(extern_referer_chk)) == NULL\n\t) {\n\t\tefree(PS(id));\n\t\tPS(id) = NULL;\n\t\tPS(send_cookie) = 1;\n\t\tif (PS(use_trans_sid) && !PS(use_only_cookies)) {\n\t\t\tPS(apply_trans_sid) = 1;\n\t\t}\n\t}\n\n\t/* Finally check session id for dangarous characters\n\t * Security note: session id may be embedded in HTML pages.*/\n\tif (PS(id) && strpbrk(PS(id), \"\\r\\n\\t <>'\\\"\\\\\")) {\n\t\tefree(PS(id));\n\t\tPS(id) = NULL;\n\t}\n\n\tphp_session_initialize(TSRMLS_C);\n\tphp_session_cache_limiter(TSRMLS_C);\n\n\tif ((PS(mod_data) || PS(mod_user_implemented)) && PS(gc_probability) > 0) {\n\t\tint nrdels = -1;\n\n\t\tnrand = (int) ((float) PS(gc_divisor) * php_combined_lcg(TSRMLS_C));\n\t\tif (nrand < PS(gc_probability)) {\n\t\t\tPS(mod)->s_gc(&PS(mod_data), PS(gc_maxlifetime), &nrdels TSRMLS_CC);\n#ifdef SESSION_DEBUG\n\t\t\tif (nrdels != -1) {\n\t\t\t\tphp_error_docref(NULL TSRMLS_CC, E_NOTICE, \"purged %d expired session objects\", nrdels);\n\t\t\t}\n#endif\n\t\t}\n\t}\n}",
    "abstract_func": "PHPAPI VAR_0 php_session_start(TSRMLS_D) /* COMMENT_0 */\n{\n\tzval **VAR_1;\n\tzval **VAR_2;\n\tchar *VAR_3, *VAR_4;\n\tint VAR_5;\n\tint VAR_6;\n\n\tif (PS(VAR_7)) {\n\t\tPS(VAR_8) = 0;\n\t} else {\n\t\tPS(VAR_8) = PS(VAR_9);\n\t}\n\n\tswitch (PS(VAR_10)) {\n\t\tcase VAR_11:\n\t\t\tphp_error(VAR_12, \"A session had already been started - ignoring session_start()\");\n\t\t\treturn;\n\t\t\tbreak;\n\n\t\tcase VAR_13:\n\t\t\tVAR_4 = zend_ini_string(\"session.save_handler\", sizeof(\"session.save_handler\"), 0);\n\t\t\tif (!PS(VAR_14) && VAR_4) {\n\t\t\t\tPS(VAR_14) = _php_find_ps_module(VAR_4 VAR_15);\n\t\t\t\tif (!PS(VAR_14)) {\n\t\t\t\t\tVAR_16(NULL VAR_15, VAR_17, \"Cannot find save handler '%s' - session startup failed\", VAR_4);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tVAR_4 = zend_ini_string(\"session.serialize_handler\", sizeof(\"session.serialize_handler\"), 0);\n\t\t\tif (!PS(VAR_18) && VAR_4) {\n\t\t\t\tPS(VAR_18) = _php_find_ps_serializer(VAR_4 VAR_15);\n\t\t\t\tif (!PS(VAR_18)) {\n\t\t\t\t\tVAR_16(NULL VAR_15, VAR_17, \"Cannot find serialization handler '%s' - session startup failed\", VAR_4);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tPS(VAR_10) = VAR_19;\n\t\t\t/* COMMENT_1 */\n\n\t\tdefault:\n\t\tcase VAR_19:\n\t\t\tPS(VAR_20) = 1;\n\t\t\tPS(VAR_21) = 1;\n\t}\n\n\tVAR_6 = strlen(PS(VAR_22));\n\n\t/* COMMENT_2 */\n                                                  \n\n\tif (!PS(VAR_23)) {\n\t\tif (PS(VAR_24) && zend_hash_find(&EG(VAR_25), \"_COOKIE\", sizeof(\"_COOKIE\"), (void **) &VAR_2) == VAR_26 &&\n\t\t\t\tZ_TYPE_PP(VAR_2) == VAR_27 &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(VAR_2), PS(VAR_22), VAR_6 + 1, (void **) &VAR_1) == VAR_26\n\t\t) {\n\t\t\tVAR_28;\n\t\t\tPS(VAR_8) = 0;\n\t\t\tPS(VAR_21) = 0;\n\t\t\tPS(VAR_20) = 0;\n\t\t}\n\n\t\tif (!PS(VAR_7) && !PS(VAR_23) &&\n\t\t\t\tzend_hash_find(&EG(VAR_25), \"_GET\", sizeof(\"_GET\"), (void **) &VAR_2) == VAR_26 &&\n\t\t\t\tZ_TYPE_PP(VAR_2) == VAR_27 &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(VAR_2), PS(VAR_22), VAR_6 + 1, (void **) &VAR_1) == VAR_26\n\t\t) {\n\t\t\tVAR_28;\n\t\t\tPS(VAR_21) = 0;\n\t\t}\n\n\t\tif (!PS(VAR_7) && !PS(VAR_23) &&\n\t\t\t\tzend_hash_find(&EG(VAR_25), \"_POST\", sizeof(\"_POST\"), (void **) &VAR_2) == VAR_26 &&\n\t\t\t\tZ_TYPE_PP(VAR_2) == VAR_27 &&\n\t\t\t\tzend_hash_find(Z_ARRVAL_PP(VAR_2), PS(VAR_22), VAR_6 + 1, (void **) &VAR_1) == VAR_26\n\t\t) {\n\t\t\tVAR_28;\n\t\t\tPS(VAR_21) = 0;\n\t\t}\n\t}\n\n\t/* COMMENT_4 */\n                                                           \n                                                             \n\n\tif (!PS(VAR_7) && !PS(VAR_23) && PG(VAR_29)[VAR_30] &&\n\t\t\tzend_hash_find(Z_ARRVAL_P(PG(VAR_29)[VAR_30]), \"REQUEST_URI\", sizeof(\"REQUEST_URI\"), (void **) &VAR_2) == VAR_26 &&\n\t\t\tZ_TYPE_PP(VAR_2) == VAR_31 &&\n\t\t\t(VAR_3 = strstr(Z_STRVAL_PP(VAR_2), PS(VAR_22))) &&\n\t\t\tVAR_3[VAR_6] == '='\n\t) {\n\t\tchar *VAR_32;\n\n\t\tVAR_3 += VAR_6 + 1;\n\t\tif ((VAR_32 = strpbrk(VAR_3, \"/?\\\\\"))) {\n\t\t\tPS(VAR_23) = estrndup(VAR_3, VAR_32 - VAR_3);\n\t\t\tPS(VAR_21) = 0;\n\t\t}\n\t}\n\n\t/* COMMENT_7 */\n                                                                  \n\n\tif (PS(VAR_23) &&\n\t\t\tPS(VAR_33)[0] != '\\0' &&\n\t\t\tPG(VAR_29)[VAR_30] &&\n\t\t\tzend_hash_find(Z_ARRVAL_P(PG(VAR_29)[VAR_30]), \"HTTP_REFERER\", sizeof(\"HTTP_REFERER\"), (void **) &VAR_2) == VAR_26 &&\n\t\t\tZ_TYPE_PP(VAR_2) == VAR_31 &&\n\t\t\tZ_STRLEN_PP(VAR_2) != 0 &&\n\t\t\tstrstr(Z_STRVAL_PP(VAR_2), PS(VAR_33)) == NULL\n\t) {\n\t\tefree(PS(VAR_23));\n\t\tPS(VAR_23) = NULL;\n\t\tPS(VAR_21) = 1;\n\t\tif (PS(VAR_9) && !PS(VAR_7)) {\n\t\t\tPS(VAR_8) = 1;\n\t\t}\n\t}\n\n\t/* COMMENT_9 */\n                                                              \n\tif (PS(VAR_23) && strpbrk(PS(VAR_23), \"\\r\\n\\t <>'\\\"\\\\\")) {\n\t\tefree(PS(VAR_23));\n\t\tPS(VAR_23) = NULL;\n\t}\n\n\tphp_session_initialize(VAR_34);\n\tphp_session_cache_limiter(VAR_34);\n\n\tif ((PS(VAR_35) || PS(VAR_36)) && PS(VAR_37) > 0) {\n\t\tint VAR_38 = -1;\n\n\t\tVAR_5 = (int) ((float) PS(VAR_39) * php_combined_lcg(VAR_34));\n\t\tif (VAR_5 < PS(VAR_37)) {\n\t\t\tPS(VAR_14)->s_gc(&PS(VAR_35), PS(VAR_40), &VAR_38 VAR_15);\n#ifdef VAR_41\n\t\t\tif (VAR_38 != -1) {\n\t\t\t\tVAR_16(NULL VAR_15, VAR_12, \"purged %d expired session objects\", VAR_38);\n\t\t\t}\n#endif\n\t\t}\n\t}\n}",
    "func_graph_path": null,
    "diff_func": "--- func_before\n+++ func_after\n@@ -117,19 +117,14 @@\n \t\t}\n \t}\n \n-\tphp_session_initialize(TSRMLS_C);\n-\n-\tif (!PS(use_cookies) && PS(send_cookie)) {\n-\t\tif (PS(use_trans_sid) && !PS(use_only_cookies)) {\n-\t\t\tPS(apply_trans_sid) = 1;\n-\t\t}\n-\t\tPS(send_cookie) = 0;\n+\t/* Finally check session id for dangarous characters\n+\t * Security note: session id may be embedded in HTML pages.*/\n+\tif (PS(id) && strpbrk(PS(id), \"\\r\\n\\t <>'\\\"\\\\\")) {\n+\t\tefree(PS(id));\n+\t\tPS(id) = NULL;\n \t}\n \n-\tphp_session_reset_id(TSRMLS_C);\n-\n-\tPS(session_status) = php_session_active;\n-\n+\tphp_session_initialize(TSRMLS_C);\n \tphp_session_cache_limiter(TSRMLS_C);\n \n \tif ((PS(mod_data) || PS(mod_user_implemented)) && PS(gc_probability) > 0) {",
    "diff_line_info": {
        "deleted_lines": [
            "\tphp_session_initialize(TSRMLS_C);",
            "",
            "\tif (!PS(use_cookies) && PS(send_cookie)) {",
            "\t\tif (PS(use_trans_sid) && !PS(use_only_cookies)) {",
            "\t\t\tPS(apply_trans_sid) = 1;",
            "\t\t}",
            "\t\tPS(send_cookie) = 0;",
            "\tphp_session_reset_id(TSRMLS_C);",
            "",
            "\tPS(session_status) = php_session_active;",
            ""
        ],
        "added_lines": [
            "\t/* Finally check session id for dangarous characters",
            "\t * Security note: session id may be embedded in HTML pages.*/",
            "\tif (PS(id) && strpbrk(PS(id), \"\\r\\n\\t <>'\\\"\\\\\")) {",
            "\t\tefree(PS(id));",
            "\t\tPS(id) = NULL;",
            "\tphp_session_initialize(TSRMLS_C);"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/php/php-src/pull/401",
    "description": "Improvement of https://github.com/php/php-src/pull/368\n"
}