{
    "cve_id": "CVE-2022-30767",
    "cwe_ids": [
        "CWE-120"
    ],
    "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "u-boot",
    "commit_msg": "CVE-2019-14196: nfs: fix unbounded memcpy with a failed length check at nfs_lookup_reply\n\nThis patch adds a check to rpc_pkt.u.reply.data at nfs_lookup_reply.\n\nSigned-off-by: Cheng Liu <liucheng32@huawei.com>\nReported-by: Ferm\u00edn Serna <fermin@semmle.com>\nAcked-by: Joe Hershberger <joe.hershberger@ni.com>",
    "commit_hash": "5d14ee4e53a81055d34ba280cb8fd90330f22a96",
    "git_url": "https://github.com/u-boot/u-boot/commit/5d14ee4e53a81055d34ba280cb8fd90330f22a96",
    "file_path": "net/nfs.c",
    "func_name": "nfs_lookup_reply",
    "func_before": "static int nfs_lookup_reply(uchar *pkt, unsigned len)\n{\n\tstruct rpc_t rpc_pkt;\n\n\tdebug(\"%s\\n\", __func__);\n\n\tmemcpy(&rpc_pkt.u.data[0], pkt, len);\n\n\tif (ntohl(rpc_pkt.u.reply.id) > rpc_id)\n\t\treturn -NFS_RPC_ERR;\n\telse if (ntohl(rpc_pkt.u.reply.id) < rpc_id)\n\t\treturn -NFS_RPC_DROP;\n\n\tif (rpc_pkt.u.reply.rstatus  ||\n\t    rpc_pkt.u.reply.verifier ||\n\t    rpc_pkt.u.reply.astatus  ||\n\t    rpc_pkt.u.reply.data[0]) {\n\t\tswitch (ntohl(rpc_pkt.u.reply.astatus)) {\n\t\tcase NFS_RPC_SUCCESS: /* Not an error */\n\t\t\tbreak;\n\t\tcase NFS_RPC_PROG_MISMATCH:\n\t\t\t/* Remote can't support NFS version */\n\t\t\tswitch (ntohl(rpc_pkt.u.reply.data[0])) {\n\t\t\t/* Minimal supported NFS version */\n\t\t\tcase 3:\n\t\t\t\tdebug(\"*** Warning: NFS version not supported: Requested: V%d, accepted: min V%d - max V%d\\n\",\n\t\t\t\t      (supported_nfs_versions & NFSV2_FLAG) ?\n\t\t\t\t\t\t2 : 3,\n\t\t\t\t      ntohl(rpc_pkt.u.reply.data[0]),\n\t\t\t\t      ntohl(rpc_pkt.u.reply.data[1]));\n\t\t\t\tdebug(\"Will retry with NFSv3\\n\");\n\t\t\t\t/* Clear NFSV2_FLAG from supported versions */\n\t\t\t\tsupported_nfs_versions &= ~NFSV2_FLAG;\n\t\t\t\treturn -NFS_RPC_PROG_MISMATCH;\n\t\t\tcase 4:\n\t\t\tdefault:\n\t\t\t\tputs(\"*** ERROR: NFS version not supported\");\n\t\t\t\tdebug(\": Requested: V%d, accepted: min V%d - max V%d\\n\",\n\t\t\t\t      (supported_nfs_versions & NFSV2_FLAG) ?\n\t\t\t\t\t\t2 : 3,\n\t\t\t\t      ntohl(rpc_pkt.u.reply.data[0]),\n\t\t\t\t      ntohl(rpc_pkt.u.reply.data[1]));\n\t\t\t\tputs(\"\\n\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase NFS_RPC_PROG_UNAVAIL:\n\t\tcase NFS_RPC_PROC_UNAVAIL:\n\t\tcase NFS_RPC_GARBAGE_ARGS:\n\t\tcase NFS_RPC_SYSTEM_ERR:\n\t\tdefault: /* Unknown error on 'accept state' flag */\n\t\t\tdebug(\"*** ERROR: accept state error (%d)\\n\",\n\t\t\t      ntohl(rpc_pkt.u.reply.astatus));\n\t\t\tbreak;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tif (supported_nfs_versions & NFSV2_FLAG) {\n\t\tmemcpy(filefh, rpc_pkt.u.reply.data + 1, NFS_FHSIZE);\n\t} else {  /* NFSV3_FLAG */\n\t\tfilefh3_length = ntohl(rpc_pkt.u.reply.data[1]);\n\t\tif (filefh3_length > NFS3_FHSIZE)\n\t\t\tfilefh3_length  = NFS3_FHSIZE;\n\t\tmemcpy(filefh, rpc_pkt.u.reply.data + 2, filefh3_length);\n\t}\n\n\treturn 0;\n}",
    "abstract_func_before": "static int nfs_lookup_reply(uchar *VAR_0, unsigned VAR_1)\n{\n\tstruct rpc_t VAR_2;\n\n\tdebug(\"%s\\n\", VAR_3);\n\n\tmemcpy(&VAR_2.u.data[0], VAR_0, VAR_1);\n\n\tif (ntohl(VAR_2.u.reply.id) > VAR_4)\n\t\treturn -VAR_5;\n\telse if (ntohl(VAR_2.u.reply.id) < VAR_4)\n\t\treturn -VAR_6;\n\n\tif (VAR_2.u.reply.rstatus  ||\n\t    VAR_2.u.reply.verifier ||\n\t    VAR_2.u.reply.astatus  ||\n\t    VAR_2.u.reply.data[0]) {\n\t\tswitch (ntohl(VAR_2.u.reply.astatus)) {\n\t\tcase VAR_7: /* COMMENT_0 */\n\t\t\tbreak;\n\t\tcase VAR_8:\n\t\t\t/* COMMENT_1 */\n\t\t\tswitch (ntohl(VAR_2.u.reply.data[0])) {\n\t\t\t/* COMMENT_2 */\n\t\t\tcase 3:\n\t\t\t\tdebug(\"*** Warning: NFS version not supported: Requested: V%d, accepted: min V%d - max V%d\\n\",\n\t\t\t\t      (VAR_9 & VAR_10) ?\n\t\t\t\t\t\t2 : 3,\n\t\t\t\t      ntohl(VAR_2.u.reply.data[0]),\n\t\t\t\t      ntohl(VAR_2.u.reply.data[1]));\n\t\t\t\tdebug(\"Will retry with NFSv3\\n\");\n\t\t\t\t/* COMMENT_3 */\n\t\t\t\tVAR_9 &= ~VAR_10;\n\t\t\t\treturn -VAR_8;\n\t\t\tcase 4:\n\t\t\tdefault:\n\t\t\t\tputs(\"*** ERROR: NFS version not supported\");\n\t\t\t\tdebug(\": Requested: V%d, accepted: min V%d - max V%d\\n\",\n\t\t\t\t      (VAR_9 & VAR_10) ?\n\t\t\t\t\t\t2 : 3,\n\t\t\t\t      ntohl(VAR_2.u.reply.data[0]),\n\t\t\t\t      ntohl(VAR_2.u.reply.data[1]));\n\t\t\t\tputs(\"\\n\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase VAR_11:\n\t\tcase VAR_12:\n\t\tcase VAR_13:\n\t\tcase VAR_14:\n\t\tdefault: /* COMMENT_4 */\n\t\t\tdebug(\"*** ERROR: accept state error (%d)\\n\",\n\t\t\t      ntohl(VAR_2.u.reply.astatus));\n\t\t\tbreak;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tif (VAR_9 & VAR_10) {\n\t\tmemcpy(VAR_15, VAR_2.u.reply.data + 1, VAR_16);\n\t} else {  /* COMMENT_5 */\n\t\tVAR_17 = ntohl(VAR_2.u.reply.data[1]);\n\t\tif (VAR_17 > VAR_18)\n\t\t\tVAR_17  = VAR_18;\n\t\tmemcpy(VAR_15, VAR_2.u.reply.data + 2, VAR_17);\n\t}\n\n\treturn 0;\n}",
    "func_graph_path_before": "u-boot/5d14ee4e53a81055d34ba280cb8fd90330f22a96/nfs.c/vul/before/0.json",
    "func": "static int nfs_lookup_reply(uchar *pkt, unsigned len)\n{\n\tstruct rpc_t rpc_pkt;\n\n\tdebug(\"%s\\n\", __func__);\n\n\tmemcpy(&rpc_pkt.u.data[0], pkt, len);\n\n\tif (ntohl(rpc_pkt.u.reply.id) > rpc_id)\n\t\treturn -NFS_RPC_ERR;\n\telse if (ntohl(rpc_pkt.u.reply.id) < rpc_id)\n\t\treturn -NFS_RPC_DROP;\n\n\tif (rpc_pkt.u.reply.rstatus  ||\n\t    rpc_pkt.u.reply.verifier ||\n\t    rpc_pkt.u.reply.astatus  ||\n\t    rpc_pkt.u.reply.data[0]) {\n\t\tswitch (ntohl(rpc_pkt.u.reply.astatus)) {\n\t\tcase NFS_RPC_SUCCESS: /* Not an error */\n\t\t\tbreak;\n\t\tcase NFS_RPC_PROG_MISMATCH:\n\t\t\t/* Remote can't support NFS version */\n\t\t\tswitch (ntohl(rpc_pkt.u.reply.data[0])) {\n\t\t\t/* Minimal supported NFS version */\n\t\t\tcase 3:\n\t\t\t\tdebug(\"*** Warning: NFS version not supported: Requested: V%d, accepted: min V%d - max V%d\\n\",\n\t\t\t\t      (supported_nfs_versions & NFSV2_FLAG) ?\n\t\t\t\t\t\t2 : 3,\n\t\t\t\t      ntohl(rpc_pkt.u.reply.data[0]),\n\t\t\t\t      ntohl(rpc_pkt.u.reply.data[1]));\n\t\t\t\tdebug(\"Will retry with NFSv3\\n\");\n\t\t\t\t/* Clear NFSV2_FLAG from supported versions */\n\t\t\t\tsupported_nfs_versions &= ~NFSV2_FLAG;\n\t\t\t\treturn -NFS_RPC_PROG_MISMATCH;\n\t\t\tcase 4:\n\t\t\tdefault:\n\t\t\t\tputs(\"*** ERROR: NFS version not supported\");\n\t\t\t\tdebug(\": Requested: V%d, accepted: min V%d - max V%d\\n\",\n\t\t\t\t      (supported_nfs_versions & NFSV2_FLAG) ?\n\t\t\t\t\t\t2 : 3,\n\t\t\t\t      ntohl(rpc_pkt.u.reply.data[0]),\n\t\t\t\t      ntohl(rpc_pkt.u.reply.data[1]));\n\t\t\t\tputs(\"\\n\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase NFS_RPC_PROG_UNAVAIL:\n\t\tcase NFS_RPC_PROC_UNAVAIL:\n\t\tcase NFS_RPC_GARBAGE_ARGS:\n\t\tcase NFS_RPC_SYSTEM_ERR:\n\t\tdefault: /* Unknown error on 'accept state' flag */\n\t\t\tdebug(\"*** ERROR: accept state error (%d)\\n\",\n\t\t\t      ntohl(rpc_pkt.u.reply.astatus));\n\t\t\tbreak;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tif (supported_nfs_versions & NFSV2_FLAG) {\n\t\tif (((uchar *)&(rpc_pkt.u.reply.data[0]) - (uchar *)(&rpc_pkt) + NFS_FHSIZE) > len)\n\t\t\treturn -NFS_RPC_DROP;\n\t\tmemcpy(filefh, rpc_pkt.u.reply.data + 1, NFS_FHSIZE);\n\t} else {  /* NFSV3_FLAG */\n\t\tfilefh3_length = ntohl(rpc_pkt.u.reply.data[1]);\n\t\tif (filefh3_length > NFS3_FHSIZE)\n\t\t\tfilefh3_length  = NFS3_FHSIZE;\n\t\tif (((uchar *)&(rpc_pkt.u.reply.data[0]) - (uchar *)(&rpc_pkt) + filefh3_length) > len)\n\t\t\treturn -NFS_RPC_DROP;\n\t\tmemcpy(filefh, rpc_pkt.u.reply.data + 2, filefh3_length);\n\t}\n\n\treturn 0;\n}",
    "abstract_func": "static int nfs_lookup_reply(uchar *VAR_0, unsigned VAR_1)\n{\n\tstruct rpc_t VAR_2;\n\n\tdebug(\"%s\\n\", VAR_3);\n\n\tmemcpy(&VAR_2.u.data[0], VAR_0, VAR_1);\n\n\tif (ntohl(VAR_2.u.reply.id) > VAR_4)\n\t\treturn -VAR_5;\n\telse if (ntohl(VAR_2.u.reply.id) < VAR_4)\n\t\treturn -VAR_6;\n\n\tif (VAR_2.u.reply.rstatus  ||\n\t    VAR_2.u.reply.verifier ||\n\t    VAR_2.u.reply.astatus  ||\n\t    VAR_2.u.reply.data[0]) {\n\t\tswitch (ntohl(VAR_2.u.reply.astatus)) {\n\t\tcase VAR_7: /* COMMENT_0 */\n\t\t\tbreak;\n\t\tcase VAR_8:\n\t\t\t/* COMMENT_1 */\n\t\t\tswitch (ntohl(VAR_2.u.reply.data[0])) {\n\t\t\t/* COMMENT_2 */\n\t\t\tcase 3:\n\t\t\t\tdebug(\"*** Warning: NFS version not supported: Requested: V%d, accepted: min V%d - max V%d\\n\",\n\t\t\t\t      (VAR_9 & VAR_10) ?\n\t\t\t\t\t\t2 : 3,\n\t\t\t\t      ntohl(VAR_2.u.reply.data[0]),\n\t\t\t\t      ntohl(VAR_2.u.reply.data[1]));\n\t\t\t\tdebug(\"Will retry with NFSv3\\n\");\n\t\t\t\t/* COMMENT_3 */\n\t\t\t\tVAR_9 &= ~VAR_10;\n\t\t\t\treturn -VAR_8;\n\t\t\tcase 4:\n\t\t\tdefault:\n\t\t\t\tputs(\"*** ERROR: NFS version not supported\");\n\t\t\t\tdebug(\": Requested: V%d, accepted: min V%d - max V%d\\n\",\n\t\t\t\t      (VAR_9 & VAR_10) ?\n\t\t\t\t\t\t2 : 3,\n\t\t\t\t      ntohl(VAR_2.u.reply.data[0]),\n\t\t\t\t      ntohl(VAR_2.u.reply.data[1]));\n\t\t\t\tputs(\"\\n\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase VAR_11:\n\t\tcase VAR_12:\n\t\tcase VAR_13:\n\t\tcase VAR_14:\n\t\tdefault: /* COMMENT_4 */\n\t\t\tdebug(\"*** ERROR: accept state error (%d)\\n\",\n\t\t\t      ntohl(VAR_2.u.reply.astatus));\n\t\t\tbreak;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tif (VAR_9 & VAR_10) {\n\t\tif (((uchar *)&(VAR_2.u.reply.data[0]) - (uchar *)(&VAR_2) + VAR_15) > VAR_1)\n\t\t\treturn -VAR_6;\n\t\tmemcpy(VAR_16, VAR_2.u.reply.data + 1, VAR_15);\n\t} else {  /* COMMENT_5 */\n\t\tVAR_17 = ntohl(VAR_2.u.reply.data[1]);\n\t\tif (VAR_17 > VAR_18)\n\t\t\tVAR_17  = VAR_18;\n\t\tif (((uchar *)&(VAR_2.u.reply.data[0]) - (uchar *)(&VAR_2) + VAR_17) > VAR_1)\n\t\t\treturn -VAR_6;\n\t\tmemcpy(VAR_16, VAR_2.u.reply.data + 2, VAR_17);\n\t}\n\n\treturn 0;\n}",
    "func_graph_path": "u-boot/5d14ee4e53a81055d34ba280cb8fd90330f22a96/nfs.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -56,11 +56,15 @@\n \t}\n \n \tif (supported_nfs_versions & NFSV2_FLAG) {\n+\t\tif (((uchar *)&(rpc_pkt.u.reply.data[0]) - (uchar *)(&rpc_pkt) + NFS_FHSIZE) > len)\n+\t\t\treturn -NFS_RPC_DROP;\n \t\tmemcpy(filefh, rpc_pkt.u.reply.data + 1, NFS_FHSIZE);\n \t} else {  /* NFSV3_FLAG */\n \t\tfilefh3_length = ntohl(rpc_pkt.u.reply.data[1]);\n \t\tif (filefh3_length > NFS3_FHSIZE)\n \t\t\tfilefh3_length  = NFS3_FHSIZE;\n+\t\tif (((uchar *)&(rpc_pkt.u.reply.data[0]) - (uchar *)(&rpc_pkt) + filefh3_length) > len)\n+\t\t\treturn -NFS_RPC_DROP;\n \t\tmemcpy(filefh, rpc_pkt.u.reply.data + 2, filefh3_length);\n \t}\n ",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "\t\tif (((uchar *)&(rpc_pkt.u.reply.data[0]) - (uchar *)(&rpc_pkt) + NFS_FHSIZE) > len)",
            "\t\t\treturn -NFS_RPC_DROP;",
            "\t\tif (((uchar *)&(rpc_pkt.u.reply.data[0]) - (uchar *)(&rpc_pkt) + filefh3_length) > len)",
            "\t\t\treturn -NFS_RPC_DROP;"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}