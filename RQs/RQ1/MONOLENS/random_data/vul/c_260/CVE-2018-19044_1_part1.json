{
    "cve_id": "CVE-2018-19044",
    "cwe_ids": [
        "CWE-200",
        "CWE-59"
    ],
    "cvss_vector": "AV:L/AC:M/Au:N/C:N/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "acassen/keepalived",
    "commit_msg": "When opening files for write, ensure they aren't symbolic links\n\nIssue #1048 identified that if, for example, a non privileged user\ncreated a symbolic link from /etc/keepalvied.data to /etc/passwd,\nwriting to /etc/keepalived.data (which could be invoked via DBus)\nwould cause /etc/passwd to be overwritten.\n\nThis commit stops keepalived writing to pathnames where the ultimate\ncomponent is a symbolic link, by setting O_NOFOLLOW whenever opening\na file for writing.\n\nThis might break some setups, where, for example, /etc/keepalived.data\nwas a symbolic link to /home/fred/keepalived.data. If this was the case,\ninstead create a symbolic link from /home/fred/keepalived.data to\n/tmp/keepalived.data, so that the file is still accessible via\n/home/fred/keepalived.data.\n\nThere doesn't appear to be a way around this backward incompatibility,\nsince even checking if the pathname is a symbolic link prior to opening\nfor writing would create a race condition.\n\nSigned-off-by: Quentin Armitage <quentin@armitage.org.uk>",
    "commit_hash": "04f2d32871bb3b11d7dc024039952f2fe2750306",
    "git_url": "https://github.com/acassen/keepalived/commit/04f2d32871bb3b11d7dc024039952f2fe2750306",
    "file_path": "keepalived/vrrp/vrrp_print.c",
    "func_name": "vrrp_print_stats",
    "func_before": "void\nvrrp_print_stats(void)\n{\n\tFILE *file;\n\tfile = fopen (stats_file, \"w\");\n\n\tif (!file) {\n\t\tlog_message(LOG_INFO, \"Can't open %s (%d: %s)\",\n\t\t\tstats_file, errno, strerror(errno));\n\t\treturn;\n\t}\n\n\tlist l = vrrp_data->vrrp;\n\telement e;\n\tvrrp_t *vrrp;\n\n\tfor (e = LIST_HEAD(l); e; ELEMENT_NEXT(e)) {\n\t\tvrrp = ELEMENT_DATA(e);\n\t\tfprintf(file, \"VRRP Instance: %s\\n\", vrrp->iname);\n\t\tfprintf(file, \"  Advertisements:\\n\");\n\t\tfprintf(file, \"    Received: %\" PRIu64 \"\\n\", vrrp->stats->advert_rcvd);\n\t\tfprintf(file, \"    Sent: %d\\n\", vrrp->stats->advert_sent);\n\t\tfprintf(file, \"  Became master: %d\\n\", vrrp->stats->become_master);\n\t\tfprintf(file, \"  Released master: %d\\n\",\n\t\t\tvrrp->stats->release_master);\n\t\tfprintf(file, \"  Packet Errors:\\n\");\n\t\tfprintf(file, \"    Length: %\" PRIu64 \"\\n\", vrrp->stats->packet_len_err);\n\t\tfprintf(file, \"    TTL: %\" PRIu64 \"\\n\", vrrp->stats->ip_ttl_err);\n\t\tfprintf(file, \"    Invalid Type: %\" PRIu64 \"\\n\",\n\t\t\tvrrp->stats->invalid_type_rcvd);\n\t\tfprintf(file, \"    Advertisement Interval: %\" PRIu64 \"\\n\",\n\t\t\tvrrp->stats->advert_interval_err);\n\t\tfprintf(file, \"    Address List: %\" PRIu64 \"\\n\",\n\t\t\tvrrp->stats->addr_list_err);\n\t\tfprintf(file, \"  Authentication Errors:\\n\");\n\t\tfprintf(file, \"    Invalid Type: %d\\n\",\n\t\t\tvrrp->stats->invalid_authtype);\n#ifdef _WITH_VRRP_AUTH_\n\t\tfprintf(file, \"    Type Mismatch: %d\\n\",\n\t\t\tvrrp->stats->authtype_mismatch);\n\t\tfprintf(file, \"    Failure: %d\\n\",\n\t\t\tvrrp->stats->auth_failure);\n#endif\n\t\tfprintf(file, \"  Priority Zero:\\n\");\n\t\tfprintf(file, \"    Received: %\" PRIu64 \"\\n\", vrrp->stats->pri_zero_rcvd);\n\t\tfprintf(file, \"    Sent: %\" PRIu64 \"\\n\", vrrp->stats->pri_zero_sent);\n\t}\n\tfclose(file);\n}",
    "abstract_func_before": "void\nvrrp_print_stats(void)\n{\n\tFILE *VAR_0;\n\tVAR_0 = fopen (VAR_1, \"w\");\n\n\tif (!VAR_0) {\n\t\tlog_message(VAR_2, \"Can't open %s (%d: %s)\",\n\t\t\tVAR_1, VAR_3, strerror(VAR_3));\n\t\treturn;\n\t}\n\n\tlist VAR_4 = VAR_5->vrrp;\n\telement VAR_6;\n\tvrrp_t *VAR_7;\n\n\tfor (VAR_6 = LIST_HEAD(VAR_4); VAR_6; ELEMENT_NEXT(VAR_6)) {\n\t\tVAR_7 = ELEMENT_DATA(VAR_6);\n\t\tfprintf(VAR_0, \"VRRP Instance: %s\\n\", VAR_7->iname);\n\t\tfprintf(VAR_0, \"  Advertisements:\\n\");\n\t\tfprintf(VAR_0, \"    Received: %\" VAR_8 \"\\n\", VAR_7->stats->advert_rcvd);\n\t\tfprintf(VAR_0, \"    Sent: %d\\n\", VAR_7->stats->advert_sent);\n\t\tfprintf(VAR_0, \"  Became master: %d\\n\", VAR_7->stats->become_master);\n\t\tfprintf(VAR_0, \"  Released master: %d\\n\",\n\t\t\tVAR_7->stats->release_master);\n\t\tfprintf(VAR_0, \"  Packet Errors:\\n\");\n\t\tfprintf(VAR_0, \"    Length: %\" VAR_8 \"\\n\", VAR_7->stats->packet_len_err);\n\t\tfprintf(VAR_0, \"    TTL: %\" VAR_8 \"\\n\", VAR_7->stats->ip_ttl_err);\n\t\tfprintf(VAR_0, \"    Invalid Type: %\" VAR_8 \"\\n\",\n\t\t\tVAR_7->stats->invalid_type_rcvd);\n\t\tfprintf(VAR_0, \"    Advertisement Interval: %\" VAR_8 \"\\n\",\n\t\t\tVAR_7->stats->advert_interval_err);\n\t\tfprintf(VAR_0, \"    Address List: %\" VAR_8 \"\\n\",\n\t\t\tVAR_7->stats->addr_list_err);\n\t\tfprintf(VAR_0, \"  Authentication Errors:\\n\");\n\t\tfprintf(VAR_0, \"    Invalid Type: %d\\n\",\n\t\t\tVAR_7->stats->invalid_authtype);\n#ifdef VAR_9\n\t\tfprintf(VAR_0, \"    Type Mismatch: %d\\n\",\n\t\t\tVAR_7->stats->authtype_mismatch);\n\t\tfprintf(VAR_0, \"    Failure: %d\\n\",\n\t\t\tVAR_7->stats->auth_failure);\n#endif\n\t\tfprintf(VAR_0, \"  Priority Zero:\\n\");\n\t\tfprintf(VAR_0, \"    Received: %\" VAR_8 \"\\n\", VAR_7->stats->pri_zero_rcvd);\n\t\tfprintf(VAR_0, \"    Sent: %\" VAR_8 \"\\n\", VAR_7->stats->pri_zero_sent);\n\t}\n\tfclose(VAR_0);\n}",
    "func_graph_path_before": "acassen/keepalived/04f2d32871bb3b11d7dc024039952f2fe2750306/vrrp_print.c/vul/before/1.json",
    "func": "void\nvrrp_print_stats(void)\n{\n\tFILE *file = fopen_safe(stats_file, \"w\");\n\telement e;\n\tvrrp_t *vrrp;\n\n\tif (!file) {\n\t\tlog_message(LOG_INFO, \"Can't open %s (%d: %s)\",\n\t\t\tstats_file, errno, strerror(errno));\n\t\treturn;\n\t}\n\n\n\tLIST_FOREACH(vrrp_data->vrrp, vrrp, e) {\n\t\tfprintf(file, \"VRRP Instance: %s\\n\", vrrp->iname);\n\t\tfprintf(file, \"  Advertisements:\\n\");\n\t\tfprintf(file, \"    Received: %\" PRIu64 \"\\n\", vrrp->stats->advert_rcvd);\n\t\tfprintf(file, \"    Sent: %d\\n\", vrrp->stats->advert_sent);\n\t\tfprintf(file, \"  Became master: %d\\n\", vrrp->stats->become_master);\n\t\tfprintf(file, \"  Released master: %d\\n\", vrrp->stats->release_master);\n\t\tfprintf(file, \"  Packet Errors:\\n\");\n\t\tfprintf(file, \"    Length: %\" PRIu64 \"\\n\", vrrp->stats->packet_len_err);\n\t\tfprintf(file, \"    TTL: %\" PRIu64 \"\\n\", vrrp->stats->ip_ttl_err);\n\t\tfprintf(file, \"    Invalid Type: %\" PRIu64 \"\\n\",\n\t\t\tvrrp->stats->invalid_type_rcvd);\n\t\tfprintf(file, \"    Advertisement Interval: %\" PRIu64 \"\\n\",\n\t\t\tvrrp->stats->advert_interval_err);\n\t\tfprintf(file, \"    Address List: %\" PRIu64 \"\\n\",\n\t\t\tvrrp->stats->addr_list_err);\n\t\tfprintf(file, \"  Authentication Errors:\\n\");\n\t\tfprintf(file, \"    Invalid Type: %d\\n\",\n\t\t\tvrrp->stats->invalid_authtype);\n#ifdef _WITH_VRRP_AUTH_\n\t\tfprintf(file, \"    Type Mismatch: %d\\n\",\n\t\t\tvrrp->stats->authtype_mismatch);\n\t\tfprintf(file, \"    Failure: %d\\n\",\n\t\t\tvrrp->stats->auth_failure);\n#endif\n\t\tfprintf(file, \"  Priority Zero:\\n\");\n\t\tfprintf(file, \"    Received: %\" PRIu64 \"\\n\", vrrp->stats->pri_zero_rcvd);\n\t\tfprintf(file, \"    Sent: %\" PRIu64 \"\\n\", vrrp->stats->pri_zero_sent);\n\t}\n\tfclose(file);\n}",
    "abstract_func": "void\nvrrp_print_stats(void)\n{\n\tFILE *VAR_0 = fopen_safe(VAR_1, \"w\");\n\telement VAR_2;\n\tvrrp_t *VAR_3;\n\n\tif (!VAR_0) {\n\t\tlog_message(VAR_4, \"Can't open %s (%d: %s)\",\n\t\t\tVAR_1, VAR_5, strerror(VAR_5));\n\t\treturn;\n\t}\n\n\n\tLIST_FOREACH(VAR_6->vrrp, VAR_3, VAR_2) {\n\t\tfprintf(VAR_0, \"VRRP Instance: %s\\n\", VAR_3->iname);\n\t\tfprintf(VAR_0, \"  Advertisements:\\n\");\n\t\tfprintf(VAR_0, \"    Received: %\" VAR_7 \"\\n\", VAR_3->stats->advert_rcvd);\n\t\tfprintf(VAR_0, \"    Sent: %d\\n\", VAR_3->stats->advert_sent);\n\t\tfprintf(VAR_0, \"  Became master: %d\\n\", VAR_3->stats->become_master);\n\t\tfprintf(VAR_0, \"  Released master: %d\\n\", VAR_3->stats->release_master);\n\t\tfprintf(VAR_0, \"  Packet Errors:\\n\");\n\t\tfprintf(VAR_0, \"    Length: %\" VAR_7 \"\\n\", VAR_3->stats->packet_len_err);\n\t\tfprintf(VAR_0, \"    TTL: %\" VAR_7 \"\\n\", VAR_3->stats->ip_ttl_err);\n\t\tfprintf(VAR_0, \"    Invalid Type: %\" VAR_7 \"\\n\",\n\t\t\tVAR_3->stats->invalid_type_rcvd);\n\t\tfprintf(VAR_0, \"    Advertisement Interval: %\" VAR_7 \"\\n\",\n\t\t\tVAR_3->stats->advert_interval_err);\n\t\tfprintf(VAR_0, \"    Address List: %\" VAR_7 \"\\n\",\n\t\t\tVAR_3->stats->addr_list_err);\n\t\tfprintf(VAR_0, \"  Authentication Errors:\\n\");\n\t\tfprintf(VAR_0, \"    Invalid Type: %d\\n\",\n\t\t\tVAR_3->stats->invalid_authtype);\n#ifdef VAR_8\n\t\tfprintf(VAR_0, \"    Type Mismatch: %d\\n\",\n\t\t\tVAR_3->stats->authtype_mismatch);\n\t\tfprintf(VAR_0, \"    Failure: %d\\n\",\n\t\t\tVAR_3->stats->auth_failure);\n#endif\n\t\tfprintf(VAR_0, \"  Priority Zero:\\n\");\n\t\tfprintf(VAR_0, \"    Received: %\" VAR_7 \"\\n\", VAR_3->stats->pri_zero_rcvd);\n\t\tfprintf(VAR_0, \"    Sent: %\" VAR_7 \"\\n\", VAR_3->stats->pri_zero_sent);\n\t}\n\tfclose(VAR_0);\n}",
    "func_graph_path": "acassen/keepalived/04f2d32871bb3b11d7dc024039952f2fe2750306/vrrp_print.c/vul/after/1.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,8 +1,9 @@\n void\n vrrp_print_stats(void)\n {\n-\tFILE *file;\n-\tfile = fopen (stats_file, \"w\");\n+\tFILE *file = fopen_safe(stats_file, \"w\");\n+\telement e;\n+\tvrrp_t *vrrp;\n \n \tif (!file) {\n \t\tlog_message(LOG_INFO, \"Can't open %s (%d: %s)\",\n@@ -10,19 +11,14 @@\n \t\treturn;\n \t}\n \n-\tlist l = vrrp_data->vrrp;\n-\telement e;\n-\tvrrp_t *vrrp;\n \n-\tfor (e = LIST_HEAD(l); e; ELEMENT_NEXT(e)) {\n-\t\tvrrp = ELEMENT_DATA(e);\n+\tLIST_FOREACH(vrrp_data->vrrp, vrrp, e) {\n \t\tfprintf(file, \"VRRP Instance: %s\\n\", vrrp->iname);\n \t\tfprintf(file, \"  Advertisements:\\n\");\n \t\tfprintf(file, \"    Received: %\" PRIu64 \"\\n\", vrrp->stats->advert_rcvd);\n \t\tfprintf(file, \"    Sent: %d\\n\", vrrp->stats->advert_sent);\n \t\tfprintf(file, \"  Became master: %d\\n\", vrrp->stats->become_master);\n-\t\tfprintf(file, \"  Released master: %d\\n\",\n-\t\t\tvrrp->stats->release_master);\n+\t\tfprintf(file, \"  Released master: %d\\n\", vrrp->stats->release_master);\n \t\tfprintf(file, \"  Packet Errors:\\n\");\n \t\tfprintf(file, \"    Length: %\" PRIu64 \"\\n\", vrrp->stats->packet_len_err);\n \t\tfprintf(file, \"    TTL: %\" PRIu64 \"\\n\", vrrp->stats->ip_ttl_err);",
    "diff_line_info": {
        "deleted_lines": [
            "\tFILE *file;",
            "\tfile = fopen (stats_file, \"w\");",
            "\tlist l = vrrp_data->vrrp;",
            "\telement e;",
            "\tvrrp_t *vrrp;",
            "\tfor (e = LIST_HEAD(l); e; ELEMENT_NEXT(e)) {",
            "\t\tvrrp = ELEMENT_DATA(e);",
            "\t\tfprintf(file, \"  Released master: %d\\n\",",
            "\t\t\tvrrp->stats->release_master);"
        ],
        "added_lines": [
            "\tFILE *file = fopen_safe(stats_file, \"w\");",
            "\telement e;",
            "\tvrrp_t *vrrp;",
            "\tLIST_FOREACH(vrrp_data->vrrp, vrrp, e) {",
            "\t\tfprintf(file, \"  Released master: %d\\n\", vrrp->stats->release_master);"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/acassen/keepalived/pull/1051",
    "description": "Issue #1048 identified these problems which are now fixed."
}