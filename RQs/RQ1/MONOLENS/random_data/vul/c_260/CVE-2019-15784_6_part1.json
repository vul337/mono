{
    "cve_id": "CVE-2019-15784",
    "cwe_ids": [
        "CWE-129"
    ],
    "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "Haivision/srt",
    "commit_msg": "[core] CSndUList initial size is reduced to 512 elements",
    "commit_hash": "64875fa98ff6afd2f21a9727970fb4333efe95de",
    "git_url": "https://github.com/Haivision/srt/commit/64875fa98ff6afd2f21a9727970fb4333efe95de",
    "file_path": "srtcore/queue.cpp",
    "func_name": "CSndUList::update",
    "func_before": "void CSndUList::update(const CUDT* u, EReschedule reschedule)\n{\n   CGuard listguard(m_ListLock);\n\n   CSNode* n = u->m_pSNode;\n\n   if (n->m_iHeapLoc >= 0)\n   {\n      if (!reschedule) // EReschedule to bool conversion, predicted.\n         return;\n\n      if (n->m_iHeapLoc == 0)\n      {\n         n->m_llTimeStamp_tk = 1;\n         m_pTimer->interrupt();\n         return;\n      }\n\n      remove_(u);\n      insert_norealloc(1, u);\n      return;\n   }\n\n   insert_(1, u);\n}",
    "abstract_func_before": "void CSndUList::update(const CUDT* VAR_0, EReschedule VAR_1)\n{\n   CGuard listguard(m_ListLock);\n\n   CSNode* VAR_2 = VAR_0->m_pSNode;\n\n   if (VAR_2->m_iHeapLoc >= 0)\n   {\n      if (!VAR_1) /* COMMENT_0 */\n         return;\n\n      if (VAR_2->m_iHeapLoc == 0)\n      {\n         VAR_2->m_llTimeStamp_tk = 1;\n         VAR_3->interrupt();\n         return;\n      }\n\n      remove_(VAR_0);\n      insert_norealloc(1, VAR_0);\n      return;\n   }\n\n   insert_(1, VAR_0);\n}",
    "func_graph_path_before": "Haivision/srt/64875fa98ff6afd2f21a9727970fb4333efe95de/queue.cpp/vul/before/4.json",
    "func": "void CSndUList::update(const CUDT* u, EReschedule reschedule)\n{\n   CGuard listguard(m_ListLock);\n\n   CSNode* n = u->m_pSNode;\n\n   if (n->m_iHeapLoc >= 0)\n   {\n      if (!reschedule) // EReschedule to bool conversion, predicted.\n         return;\n\n      if (n->m_iHeapLoc == 0)\n      {\n         n->m_llTimeStamp_tk = 1;\n         m_pTimer->interrupt();\n         return;\n      }\n\n      remove_(u);\n      insert_norealloc_(1, u);\n      return;\n   }\n\n   insert_(1, u);\n}",
    "abstract_func": "void CSndUList::update(const CUDT* VAR_0, EReschedule VAR_1)\n{\n   CGuard listguard(m_ListLock);\n\n   CSNode* VAR_2 = VAR_0->m_pSNode;\n\n   if (VAR_2->m_iHeapLoc >= 0)\n   {\n      if (!VAR_1) /* COMMENT_0 */\n         return;\n\n      if (VAR_2->m_iHeapLoc == 0)\n      {\n         VAR_2->m_llTimeStamp_tk = 1;\n         VAR_3->interrupt();\n         return;\n      }\n\n      remove_(VAR_0);\n      insert_norealloc_(1, VAR_0);\n      return;\n   }\n\n   insert_(1, VAR_0);\n}",
    "func_graph_path": "Haivision/srt/64875fa98ff6afd2f21a9727970fb4333efe95de/queue.cpp/vul/after/4.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -17,7 +17,7 @@\n       }\n \n       remove_(u);\n-      insert_norealloc(1, u);\n+      insert_norealloc_(1, u);\n       return;\n    }\n ",
    "diff_line_info": {
        "deleted_lines": [
            "      insert_norealloc(1, u);"
        ],
        "added_lines": [
            "      insert_norealloc_(1, u);"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/Haivision/srt/pull/811",
    "description": "This is a rework of #724 (closes #724).\r\nThe default size of `CSndUList` was 4096 elements. The list is a heap of SRT sockets, that are to be processed in the sender's thread.\r\nIt is very unlikely to have mare than 4096 SRT connections, that is why checking if there is a place to insert a new socket is not required most of the time. However, if there is no place, then there will be an overflow and out-of-border operations.\r\nThis PR fixes this.\r\n\r\n- [x] `CSndUList::update(...)` increases list size if required.\r\n- [x] Reduced default size of the `CSndUList` from 4096 to 512.\r\n- [x] `CSndUList::remove_(...)` now uses `std::swap`\r\n- [x] `CSndUList::insert_norealloc_(...)` now uses `std::swap`"
}