{
    "cve_id": "CVE-2020-14928",
    "cwe_ids": [
        "CWE-74"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
    "cvss_is_v3": false,
    "repo_name": "GNOME/evolution-data-server",
    "commit_msg": "I#226 - CVE-2020-14928: Response Injection via STARTTLS in SMTP and POP3\n\nCloses https://gitlab.gnome.org/GNOME/evolution-data-server/-/issues/226",
    "commit_hash": "ba82be72cfd427b5d72ff21f929b3a6d8529c4df",
    "git_url": "https://github.com/GNOME/evolution-data-server/commit/ba82be72cfd427b5d72ff21f929b3a6d8529c4df",
    "file_path": "src/camel/providers/pop3/camel-pop3-store.c",
    "func_name": "connect_to_server",
    "func_before": "static gboolean\nconnect_to_server (CamelService *service,\n                   GCancellable *cancellable,\n                   GError **error)\n{\n\tCamelPOP3Store *store = CAMEL_POP3_STORE (service);\n\tCamelNetworkSettings *network_settings;\n\tCamelNetworkSecurityMethod method;\n\tCamelSettings *settings;\n\tCamelStream *stream = NULL;\n\tCamelPOP3Engine *pop3_engine = NULL;\n\tCamelPOP3Command *pc;\n\tGIOStream *base_stream;\n\tGIOStream *tls_stream;\n\tgboolean disable_extensions;\n\tgboolean success = TRUE;\n\tgchar *host;\n\tguint32 flags = 0;\n\tgint ret;\n\tGError *local_error = NULL;\n\n\tsettings = camel_service_ref_settings (service);\n\n\tnetwork_settings = CAMEL_NETWORK_SETTINGS (settings);\n\thost = camel_network_settings_dup_host (network_settings);\n\tmethod = camel_network_settings_get_security_method (network_settings);\n\n\tdisable_extensions = camel_pop3_settings_get_disable_extensions (\n\t\tCAMEL_POP3_SETTINGS (settings));\n\n\tg_object_unref (settings);\n\n\tbase_stream = camel_network_service_connect_sync (\n\t\tCAMEL_NETWORK_SERVICE (service), cancellable, error);\n\n\tif (base_stream != NULL) {\n\t\tstream = camel_stream_new (base_stream);\n\t\tg_object_unref (base_stream);\n\t} else {\n\t\tsuccess = FALSE;\n\t\tgoto exit;\n\t}\n\n\t/* parent class connect initialization */\n\tif (CAMEL_SERVICE_CLASS (camel_pop3_store_parent_class)->\n\t\tconnect_sync (service, cancellable, error) == FALSE) {\n\t\tg_object_unref (stream);\n\t\tsuccess = FALSE;\n\t\tgoto exit;\n\t}\n\n\tif (disable_extensions)\n\t\tflags |= CAMEL_POP3_ENGINE_DISABLE_EXTENSIONS;\n\n\tif (!(pop3_engine = camel_pop3_engine_new (stream, flags, cancellable, &local_error)) ||\n\t    local_error != NULL) {\n\t\tif (local_error)\n\t\t\tg_propagate_error (error, local_error);\n\t\telse\n\t\t\tg_set_error (\n\t\t\t\terror, CAMEL_ERROR, CAMEL_ERROR_GENERIC,\n\t\t\t\t_(\"Failed to read a valid greeting from POP server %s\"),\n\t\t\t\thost);\n\t\tg_object_unref (stream);\n\t\tsuccess = FALSE;\n\t\tgoto exit;\n\t}\n\n\tif (method != CAMEL_NETWORK_SECURITY_METHOD_STARTTLS_ON_STANDARD_PORT) {\n\t\tg_object_unref (stream);\n\t\tgoto exit;\n\t}\n\n\tif (!(pop3_engine->capa & CAMEL_POP3_CAP_STLS)) {\n\t\tg_set_error (\n\t\t\terror, CAMEL_ERROR, CAMEL_ERROR_GENERIC,\n\t\t\t_(\"Failed to connect to POP server %s in secure mode: %s\"),\n\t\t\thost, _(\"STLS not supported by server\"));\n\t\tgoto stls_exception;\n\t}\n\n\tpc = camel_pop3_engine_command_new (\n\t\tpop3_engine, 0, NULL, NULL,\n\t\tcancellable, error, \"STLS\\r\\n\");\n\twhile (camel_pop3_engine_iterate (pop3_engine, NULL, cancellable, NULL) > 0)\n\t\t;\n\n\tret = pc->state == CAMEL_POP3_COMMAND_OK;\n\tcamel_pop3_engine_command_free (pop3_engine, pc);\n\n\tif (ret == FALSE) {\n\t\tgchar *tmp;\n\n\t\ttmp = get_valid_utf8_error ((gchar *) pop3_engine->line);\n\t\tg_set_error (\n\t\t\terror, CAMEL_ERROR, CAMEL_ERROR_GENERIC,\n\t\t\t/* Translators: Last %s is an optional\n\t\t\t * explanation beginning with \": \" separator. */\n\t\t\t_(\"Failed to connect to POP server %s in secure mode%s\"),\n\t\t\thost, (tmp != NULL) ? tmp : \"\");\n\t\tg_free (tmp);\n\t\tgoto stls_exception;\n\t}\n\n\t/* Okay, now toggle SSL/TLS mode */\n\tbase_stream = camel_stream_ref_base_stream (stream);\n\ttls_stream = camel_network_service_starttls (\n\t\tCAMEL_NETWORK_SERVICE (service), base_stream, error);\n\tg_object_unref (base_stream);\n\n\tif (tls_stream != NULL) {\n\t\tcamel_stream_set_base_stream (stream, tls_stream);\n\t\tg_object_unref (tls_stream);\n\t} else {\n\t\tg_prefix_error (\n\t\t\terror,\n\t\t\t_(\"Failed to connect to POP server %s in secure mode: \"),\n\t\t\thost);\n\t\tgoto stls_exception;\n\t}\n\n\tg_clear_object (&stream);\n\n\t/* rfc2595, section 4 states that after a successful STLS\n\t * command, the client MUST discard prior CAPA responses */\n\tif (!camel_pop3_engine_reget_capabilities (pop3_engine, cancellable, error))\n\t\tgoto exception;\n\n\tgoto exit;\n\nstls_exception:\n\t/* As soon as we send a STLS command, all hope\n\t * is lost of a clean QUIT if problems arise. */\n\t/* if (clean_quit) {\n\t\t/ * try to disconnect cleanly * /\n\t\tpc = camel_pop3_engine_command_new (\n\t\t\tpop3_engine, 0, NULL, NULL,\n\t\t\tcancellable, NULL, \"QUIT\\r\\n\");\n\t\twhile (camel_pop3_engine_iterate (pop3_engine, NULL, cancellable, NULL) > 0)\n\t\t\t;\n\t\tcamel_pop3_engine_command_free (pop3_engine, pc);\n\t}*/\n\nexception:\n\tg_clear_object (&stream);\n\tg_clear_object (&pop3_engine);\n\n\tsuccess = FALSE;\n\nexit:\n\tg_free (host);\n\n\tg_mutex_lock (&store->priv->property_lock);\n\tif (pop3_engine != NULL)\n\t\tstore->priv->engine = g_object_ref (pop3_engine);\n\tg_mutex_unlock (&store->priv->property_lock);\n\n\tg_clear_object (&pop3_engine);\n\n\treturn success;\n}",
    "abstract_func_before": "static gboolean\nconnect_to_server (CamelService *VAR_0,\n                   GCancellable *VAR_1,\n                   GError **VAR_2)\n{\n\tCamelPOP3Store *VAR_3 = CAMEL_POP3_STORE (VAR_0);\n\tCamelNetworkSettings *VAR_4;\n\tCamelNetworkSecurityMethod VAR_5;\n\tCamelSettings *VAR_6;\n\tCamelStream *VAR_7 = NULL;\n\tCamelPOP3Engine *VAR_8 = NULL;\n\tCamelPOP3Command *VAR_9;\n\tGIOStream *VAR_10;\n\tGIOStream *VAR_11;\n\tgboolean VAR_12;\n\tgboolean VAR_13 = TRUE;\n\tgchar *VAR_14;\n\tguint32 VAR_15 = 0;\n\tgint VAR_16;\n\tGError *VAR_17 = NULL;\n\n\tVAR_6 = camel_service_ref_settings (VAR_0);\n\n\tVAR_4 = CAMEL_NETWORK_SETTINGS (VAR_6);\n\tVAR_14 = camel_network_settings_dup_host (VAR_4);\n\tVAR_5 = camel_network_settings_get_security_method (VAR_4);\n\n\tVAR_12 = camel_pop3_settings_get_disable_extensions (\n\t\tCAMEL_POP3_SETTINGS (VAR_6));\n\n\tg_object_unref (VAR_6);\n\n\tVAR_10 = camel_network_service_connect_sync (\n\t\tCAMEL_NETWORK_SERVICE (VAR_0), VAR_1, VAR_2);\n\n\tif (VAR_10 != NULL) {\n\t\tVAR_7 = camel_stream_new (VAR_10);\n\t\tg_object_unref (VAR_10);\n\t} else {\n\t\tVAR_13 = FALSE;\n\t\tgoto exit;\n\t}\n\n\t/* COMMENT_0 */\n\tif (CAMEL_SERVICE_CLASS (VAR_18)->\n\t\tconnect_sync (VAR_0, VAR_1, VAR_2) == FALSE) {\n\t\tg_object_unref (VAR_7);\n\t\tVAR_13 = FALSE;\n\t\tgoto exit;\n\t}\n\n\tif (VAR_12)\n\t\tVAR_15 |= VAR_19;\n\n\tif (!(VAR_8 = camel_pop3_engine_new (VAR_7, VAR_15, VAR_1, &VAR_17)) ||\n\t    VAR_17 != NULL) {\n\t\tif (VAR_17)\n\t\t\tg_propagate_error (VAR_2, VAR_17);\n\t\telse\n\t\t\tg_set_error (\n\t\t\t\tVAR_2, VAR_20, VAR_21,\n\t\t\t\t_(\"Failed to read a valid greeting from POP server %s\"),\n\t\t\t\tVAR_14);\n\t\tg_object_unref (VAR_7);\n\t\tVAR_13 = FALSE;\n\t\tgoto exit;\n\t}\n\n\tif (VAR_5 != VAR_22) {\n\t\tg_object_unref (VAR_7);\n\t\tgoto exit;\n\t}\n\n\tif (!(VAR_8->capa & VAR_23)) {\n\t\tg_set_error (\n\t\t\tVAR_2, VAR_20, VAR_21,\n\t\t\t_(\"Failed to connect to POP server %s in secure mode: %s\"),\n\t\t\tVAR_14, _(\"STLS not supported by server\"));\n\t\tgoto stls_exception;\n\t}\n\n\tVAR_9 = camel_pop3_engine_command_new (\n\t\tVAR_8, 0, NULL, NULL,\n\t\tVAR_1, VAR_2, \"STLS\\r\\n\");\n\twhile (camel_pop3_engine_iterate (VAR_8, NULL, VAR_1, NULL) > 0)\n\t\t;\n\n\tVAR_16 = VAR_9->state == VAR_24;\n\tcamel_pop3_engine_command_free (VAR_8, VAR_9);\n\n\tif (VAR_16 == FALSE) {\n\t\tgchar *VAR_25;\n\n\t\tVAR_25 = get_valid_utf8_error ((gchar *) VAR_8->line);\n\t\tg_set_error (\n\t\t\tVAR_2, VAR_20, VAR_21,\n\t\t\t/* COMMENT_1 */\n                                                   \n\t\t\t_(\"Failed to connect to POP server %s in secure mode%s\"),\n\t\t\tVAR_14, (VAR_25 != NULL) ? VAR_25 : \"\");\n\t\tg_free (VAR_25);\n\t\tgoto stls_exception;\n\t}\n\n\t/* COMMENT_3 */\n\tVAR_10 = camel_stream_ref_base_stream (VAR_7);\n\tVAR_11 = camel_network_service_starttls (\n\t\tCAMEL_NETWORK_SERVICE (VAR_0), VAR_10, VAR_2);\n\tg_object_unref (VAR_10);\n\n\tif (VAR_11 != NULL) {\n\t\tcamel_stream_set_base_stream (VAR_7, VAR_11);\n\t\tg_object_unref (VAR_11);\n\t} else {\n\t\tg_prefix_error (\n\t\t\tVAR_2,\n\t\t\t_(\"Failed to connect to POP server %s in secure mode: \"),\n\t\t\tVAR_14);\n\t\tgoto stls_exception;\n\t}\n\n\tg_clear_object (&VAR_7);\n\n\t/* COMMENT_4 */\n                                                            \n\tif (!camel_pop3_engine_reget_capabilities (VAR_8, VAR_1, VAR_2))\n\t\tgoto exception;\n\n\tgoto exit;\n\nstls_exception:\n\t/* COMMENT_6 */\n                                                 \n\t/* COMMENT_8 */\n                                   \n                                      \n                              \n                                  \n                                                                              \n    \n                                                   \n    \n\nexception:\n\tg_clear_object (&VAR_7);\n\tg_clear_object (&VAR_8);\n\n\tVAR_13 = FALSE;\n\nexit:\n\tg_free (VAR_14);\n\n\tg_mutex_lock (&VAR_3->priv->property_lock);\n\tif (VAR_8 != NULL)\n\t\tVAR_3->priv->engine = g_object_ref (VAR_8);\n\tg_mutex_unlock (&VAR_3->priv->property_lock);\n\n\tg_clear_object (&VAR_8);\n\n\treturn VAR_13;\n}",
    "func_graph_path_before": "GNOME/evolution-data-server/ba82be72cfd427b5d72ff21f929b3a6d8529c4df/camel-pop3-store.c/vul/before/0.json",
    "func": "static gboolean\nconnect_to_server (CamelService *service,\n                   GCancellable *cancellable,\n                   GError **error)\n{\n\tCamelPOP3Store *store = CAMEL_POP3_STORE (service);\n\tCamelNetworkSettings *network_settings;\n\tCamelNetworkSecurityMethod method;\n\tCamelSettings *settings;\n\tCamelStream *stream = NULL;\n\tCamelPOP3Engine *pop3_engine = NULL;\n\tCamelPOP3Command *pc;\n\tGIOStream *base_stream;\n\tGIOStream *tls_stream;\n\tgboolean disable_extensions;\n\tgboolean success = TRUE;\n\tgchar *host;\n\tguint32 flags = 0;\n\tgint ret;\n\tGError *local_error = NULL;\n\n\tsettings = camel_service_ref_settings (service);\n\n\tnetwork_settings = CAMEL_NETWORK_SETTINGS (settings);\n\thost = camel_network_settings_dup_host (network_settings);\n\tmethod = camel_network_settings_get_security_method (network_settings);\n\n\tdisable_extensions = camel_pop3_settings_get_disable_extensions (\n\t\tCAMEL_POP3_SETTINGS (settings));\n\n\tg_object_unref (settings);\n\n\tbase_stream = camel_network_service_connect_sync (\n\t\tCAMEL_NETWORK_SERVICE (service), cancellable, error);\n\n\tif (base_stream != NULL) {\n\t\tstream = camel_stream_new (base_stream);\n\t\tg_object_unref (base_stream);\n\t} else {\n\t\tsuccess = FALSE;\n\t\tgoto exit;\n\t}\n\n\t/* parent class connect initialization */\n\tif (CAMEL_SERVICE_CLASS (camel_pop3_store_parent_class)->\n\t\tconnect_sync (service, cancellable, error) == FALSE) {\n\t\tg_object_unref (stream);\n\t\tsuccess = FALSE;\n\t\tgoto exit;\n\t}\n\n\tif (disable_extensions)\n\t\tflags |= CAMEL_POP3_ENGINE_DISABLE_EXTENSIONS;\n\n\tif (!(pop3_engine = camel_pop3_engine_new (stream, flags, cancellable, &local_error)) ||\n\t    local_error != NULL) {\n\t\tif (local_error)\n\t\t\tg_propagate_error (error, local_error);\n\t\telse\n\t\t\tg_set_error (\n\t\t\t\terror, CAMEL_ERROR, CAMEL_ERROR_GENERIC,\n\t\t\t\t_(\"Failed to read a valid greeting from POP server %s\"),\n\t\t\t\thost);\n\t\tg_object_unref (stream);\n\t\tsuccess = FALSE;\n\t\tgoto exit;\n\t}\n\n\tif (method != CAMEL_NETWORK_SECURITY_METHOD_STARTTLS_ON_STANDARD_PORT) {\n\t\tg_object_unref (stream);\n\t\tgoto exit;\n\t}\n\n\tif (!(pop3_engine->capa & CAMEL_POP3_CAP_STLS)) {\n\t\tg_set_error (\n\t\t\terror, CAMEL_ERROR, CAMEL_ERROR_GENERIC,\n\t\t\t_(\"Failed to connect to POP server %s in secure mode: %s\"),\n\t\t\thost, _(\"STLS not supported by server\"));\n\t\tgoto stls_exception;\n\t}\n\n\tpc = camel_pop3_engine_command_new (\n\t\tpop3_engine, 0, NULL, NULL,\n\t\tcancellable, error, \"STLS\\r\\n\");\n\twhile (camel_pop3_engine_iterate (pop3_engine, NULL, cancellable, NULL) > 0)\n\t\t;\n\n\tret = pc->state == CAMEL_POP3_COMMAND_OK;\n\tcamel_pop3_engine_command_free (pop3_engine, pc);\n\n\tif (ret == FALSE) {\n\t\tgchar *tmp;\n\n\t\ttmp = get_valid_utf8_error ((gchar *) pop3_engine->line);\n\t\tg_set_error (\n\t\t\terror, CAMEL_ERROR, CAMEL_ERROR_GENERIC,\n\t\t\t/* Translators: Last %s is an optional\n\t\t\t * explanation beginning with \": \" separator. */\n\t\t\t_(\"Failed to connect to POP server %s in secure mode%s\"),\n\t\t\thost, (tmp != NULL) ? tmp : \"\");\n\t\tg_free (tmp);\n\t\tgoto stls_exception;\n\t}\n\n\t/* Okay, now toggle SSL/TLS mode */\n\tbase_stream = camel_stream_ref_base_stream (stream);\n\ttls_stream = camel_network_service_starttls (\n\t\tCAMEL_NETWORK_SERVICE (service), base_stream, error);\n\tg_object_unref (base_stream);\n\n\tif (tls_stream != NULL) {\n\t\tcamel_stream_set_base_stream (stream, tls_stream);\n\t\t/* Truncate any left cached input from the insecure part of the session */\n\t\tcamel_pop3_stream_truncate (pop3_engine->stream);\n\t\tg_object_unref (tls_stream);\n\t} else {\n\t\tg_prefix_error (\n\t\t\terror,\n\t\t\t_(\"Failed to connect to POP server %s in secure mode: \"),\n\t\t\thost);\n\t\tgoto stls_exception;\n\t}\n\n\tg_clear_object (&stream);\n\n\t/* rfc2595, section 4 states that after a successful STLS\n\t * command, the client MUST discard prior CAPA responses */\n\tif (!camel_pop3_engine_reget_capabilities (pop3_engine, cancellable, error))\n\t\tgoto exception;\n\n\tgoto exit;\n\nstls_exception:\n\t/* As soon as we send a STLS command, all hope\n\t * is lost of a clean QUIT if problems arise. */\n\t/* if (clean_quit) {\n\t\t/ * try to disconnect cleanly * /\n\t\tpc = camel_pop3_engine_command_new (\n\t\t\tpop3_engine, 0, NULL, NULL,\n\t\t\tcancellable, NULL, \"QUIT\\r\\n\");\n\t\twhile (camel_pop3_engine_iterate (pop3_engine, NULL, cancellable, NULL) > 0)\n\t\t\t;\n\t\tcamel_pop3_engine_command_free (pop3_engine, pc);\n\t}*/\n\nexception:\n\tg_clear_object (&stream);\n\tg_clear_object (&pop3_engine);\n\n\tsuccess = FALSE;\n\nexit:\n\tg_free (host);\n\n\tg_mutex_lock (&store->priv->property_lock);\n\tif (pop3_engine != NULL)\n\t\tstore->priv->engine = g_object_ref (pop3_engine);\n\tg_mutex_unlock (&store->priv->property_lock);\n\n\tg_clear_object (&pop3_engine);\n\n\treturn success;\n}",
    "abstract_func": "static gboolean\nconnect_to_server (CamelService *VAR_0,\n                   GCancellable *VAR_1,\n                   GError **VAR_2)\n{\n\tCamelPOP3Store *VAR_3 = CAMEL_POP3_STORE (VAR_0);\n\tCamelNetworkSettings *VAR_4;\n\tCamelNetworkSecurityMethod VAR_5;\n\tCamelSettings *VAR_6;\n\tCamelStream *VAR_7 = NULL;\n\tCamelPOP3Engine *VAR_8 = NULL;\n\tCamelPOP3Command *VAR_9;\n\tGIOStream *VAR_10;\n\tGIOStream *VAR_11;\n\tgboolean VAR_12;\n\tgboolean VAR_13 = TRUE;\n\tgchar *VAR_14;\n\tguint32 VAR_15 = 0;\n\tgint VAR_16;\n\tGError *VAR_17 = NULL;\n\n\tVAR_6 = camel_service_ref_settings (VAR_0);\n\n\tVAR_4 = CAMEL_NETWORK_SETTINGS (VAR_6);\n\tVAR_14 = camel_network_settings_dup_host (VAR_4);\n\tVAR_5 = camel_network_settings_get_security_method (VAR_4);\n\n\tVAR_12 = camel_pop3_settings_get_disable_extensions (\n\t\tCAMEL_POP3_SETTINGS (VAR_6));\n\n\tg_object_unref (VAR_6);\n\n\tVAR_10 = camel_network_service_connect_sync (\n\t\tCAMEL_NETWORK_SERVICE (VAR_0), VAR_1, VAR_2);\n\n\tif (VAR_10 != NULL) {\n\t\tVAR_7 = camel_stream_new (VAR_10);\n\t\tg_object_unref (VAR_10);\n\t} else {\n\t\tVAR_13 = FALSE;\n\t\tgoto exit;\n\t}\n\n\t/* COMMENT_0 */\n\tif (CAMEL_SERVICE_CLASS (VAR_18)->\n\t\tconnect_sync (VAR_0, VAR_1, VAR_2) == FALSE) {\n\t\tg_object_unref (VAR_7);\n\t\tVAR_13 = FALSE;\n\t\tgoto exit;\n\t}\n\n\tif (VAR_12)\n\t\tVAR_15 |= VAR_19;\n\n\tif (!(VAR_8 = camel_pop3_engine_new (VAR_7, VAR_15, VAR_1, &VAR_17)) ||\n\t    VAR_17 != NULL) {\n\t\tif (VAR_17)\n\t\t\tg_propagate_error (VAR_2, VAR_17);\n\t\telse\n\t\t\tg_set_error (\n\t\t\t\tVAR_2, VAR_20, VAR_21,\n\t\t\t\t_(\"Failed to read a valid greeting from POP server %s\"),\n\t\t\t\tVAR_14);\n\t\tg_object_unref (VAR_7);\n\t\tVAR_13 = FALSE;\n\t\tgoto exit;\n\t}\n\n\tif (VAR_5 != VAR_22) {\n\t\tg_object_unref (VAR_7);\n\t\tgoto exit;\n\t}\n\n\tif (!(VAR_8->capa & VAR_23)) {\n\t\tg_set_error (\n\t\t\tVAR_2, VAR_20, VAR_21,\n\t\t\t_(\"Failed to connect to POP server %s in secure mode: %s\"),\n\t\t\tVAR_14, _(\"STLS not supported by server\"));\n\t\tgoto stls_exception;\n\t}\n\n\tVAR_9 = camel_pop3_engine_command_new (\n\t\tVAR_8, 0, NULL, NULL,\n\t\tVAR_1, VAR_2, \"STLS\\r\\n\");\n\twhile (camel_pop3_engine_iterate (VAR_8, NULL, VAR_1, NULL) > 0)\n\t\t;\n\n\tVAR_16 = VAR_9->state == VAR_24;\n\tcamel_pop3_engine_command_free (VAR_8, VAR_9);\n\n\tif (VAR_16 == FALSE) {\n\t\tgchar *VAR_25;\n\n\t\tVAR_25 = get_valid_utf8_error ((gchar *) VAR_8->line);\n\t\tg_set_error (\n\t\t\tVAR_2, VAR_20, VAR_21,\n\t\t\t/* COMMENT_1 */\n                                                   \n\t\t\t_(\"Failed to connect to POP server %s in secure mode%s\"),\n\t\t\tVAR_14, (VAR_25 != NULL) ? VAR_25 : \"\");\n\t\tg_free (VAR_25);\n\t\tgoto stls_exception;\n\t}\n\n\t/* COMMENT_3 */\n\tVAR_10 = camel_stream_ref_base_stream (VAR_7);\n\tVAR_11 = camel_network_service_starttls (\n\t\tCAMEL_NETWORK_SERVICE (VAR_0), VAR_10, VAR_2);\n\tg_object_unref (VAR_10);\n\n\tif (VAR_11 != NULL) {\n\t\tcamel_stream_set_base_stream (VAR_7, VAR_11);\n\t\t/* COMMENT_4 */\n\t\tcamel_pop3_stream_truncate (VAR_8->stream);\n\t\tg_object_unref (VAR_11);\n\t} else {\n\t\tg_prefix_error (\n\t\t\tVAR_2,\n\t\t\t_(\"Failed to connect to POP server %s in secure mode: \"),\n\t\t\tVAR_14);\n\t\tgoto stls_exception;\n\t}\n\n\tg_clear_object (&VAR_7);\n\n\t/* COMMENT_5 */\n                                                            \n\tif (!camel_pop3_engine_reget_capabilities (VAR_8, VAR_1, VAR_2))\n\t\tgoto exception;\n\n\tgoto exit;\n\nstls_exception:\n\t/* COMMENT_7 */\n                                                 \n\t/* COMMENT_9 */\n                                   \n                                      \n                              \n                                  \n                                                                              \n    \n                                                   \n    \n\nexception:\n\tg_clear_object (&VAR_7);\n\tg_clear_object (&VAR_8);\n\n\tVAR_13 = FALSE;\n\nexit:\n\tg_free (VAR_14);\n\n\tg_mutex_lock (&VAR_3->priv->property_lock);\n\tif (VAR_8 != NULL)\n\t\tVAR_3->priv->engine = g_object_ref (VAR_8);\n\tg_mutex_unlock (&VAR_3->priv->property_lock);\n\n\tg_clear_object (&VAR_8);\n\n\treturn VAR_13;\n}",
    "func_graph_path": "GNOME/evolution-data-server/ba82be72cfd427b5d72ff21f929b3a6d8529c4df/camel-pop3-store.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -110,6 +110,8 @@\n \n \tif (tls_stream != NULL) {\n \t\tcamel_stream_set_base_stream (stream, tls_stream);\n+\t\t/* Truncate any left cached input from the insecure part of the session */\n+\t\tcamel_pop3_stream_truncate (pop3_engine->stream);\n \t\tg_object_unref (tls_stream);\n \t} else {\n \t\tg_prefix_error (",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "\t\t/* Truncate any left cached input from the insecure part of the session */",
            "\t\tcamel_pop3_stream_truncate (pop3_engine->stream);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}