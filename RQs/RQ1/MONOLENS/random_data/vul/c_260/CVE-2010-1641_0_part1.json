{
    "cve_id": "CVE-2010-1641",
    "cwe_ids": [
        "CWE-264"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "We should be checking for the ownership of the file for which\nflags are being set, rather than just for write access.\n\nReported-by: Dan Rosenberg <dan.j.rosenberg@gmail.com>\nSigned-off-by: Steven Whitehouse <swhiteho@redhat.com>\n",
    "commit_hash": "7df0e0397b9a18358573274db9fdab991941062f",
    "git_url": "http://git.kernel.org/?p=linux/kernel/git/torvalds/linux.git;a=commit;h=7df0e0397b9a18358573274db9fdab991941062f",
    "file_path": "fs/gfs2/file.c",
    "func_name": "gfs2_set_flags",
    "func_before": "static int gfs2_set_flags(struct file *filp, u32 __user *ptr)\n{\n\tstruct inode *inode = filp->f_path.dentry->d_inode;\n\tu32 fsflags, gfsflags;\n\tif (get_user(fsflags, ptr))\n\t\treturn -EFAULT;\n\tgfsflags = fsflags_cvt(fsflags_to_gfs2, fsflags);\n\tif (!S_ISDIR(inode->i_mode)) {\n\t\tif (gfsflags & GFS2_DIF_INHERIT_JDATA)\n\t\t\tgfsflags ^= (GFS2_DIF_JDATA | GFS2_DIF_INHERIT_JDATA);\n\t\treturn do_gfs2_set_flags(filp, gfsflags, ~0);\n\t}\n\treturn do_gfs2_set_flags(filp, gfsflags, ~GFS2_DIF_JDATA);\n}",
    "abstract_func_before": "static int gfs2_set_flags(struct file *VAR_0, u32 __user *VAR_1)\n{\n\tstruct inode *inode = VAR_0->f_path.dentry->d_inode;\n\tu32 VAR_2, VAR_3;\n\tif (get_user(VAR_2, VAR_1))\n\t\treturn -VAR_4;\n\tVAR_3 = fsflags_cvt(VAR_5, VAR_2);\n\tif (!S_ISDIR(inode->i_mode)) {\n\t\tif (VAR_3 & VAR_6)\n\t\t\tVAR_3 ^= (VAR_7 | VAR_6);\n\t\treturn do_gfs2_set_flags(VAR_0, VAR_3, ~0);\n\t}\n\treturn do_gfs2_set_flags(VAR_0, VAR_3, ~VAR_7);\n}",
    "func_graph_path_before": null,
    "func": "static int gfs2_set_flags(struct file *filp, u32 __user *ptr)\n{\n\tstruct inode *inode = filp->f_path.dentry->d_inode;\n\tu32 fsflags, gfsflags;\n\n\tif (get_user(fsflags, ptr))\n\t\treturn -EFAULT;\n\n\tgfsflags = fsflags_cvt(fsflags_to_gfs2, fsflags);\n\tif (!S_ISDIR(inode->i_mode)) {\n\t\tif (gfsflags & GFS2_DIF_INHERIT_JDATA)\n\t\t\tgfsflags ^= (GFS2_DIF_JDATA | GFS2_DIF_INHERIT_JDATA);\n\t\treturn do_gfs2_set_flags(filp, gfsflags, ~0);\n\t}\n\treturn do_gfs2_set_flags(filp, gfsflags, ~GFS2_DIF_JDATA);\n}",
    "abstract_func": "static int gfs2_set_flags(struct file *VAR_0, u32 __user *VAR_1)\n{\n\tstruct inode *inode = VAR_0->f_path.dentry->d_inode;\n\tu32 VAR_2, VAR_3;\n\n\tif (get_user(VAR_2, VAR_1))\n\t\treturn -VAR_4;\n\n\tVAR_3 = fsflags_cvt(VAR_5, VAR_2);\n\tif (!S_ISDIR(inode->i_mode)) {\n\t\tif (VAR_3 & VAR_6)\n\t\t\tVAR_3 ^= (VAR_7 | VAR_6);\n\t\treturn do_gfs2_set_flags(VAR_0, VAR_3, ~0);\n\t}\n\treturn do_gfs2_set_flags(VAR_0, VAR_3, ~VAR_7);\n}",
    "func_graph_path": null,
    "diff_func": "--- func_before\n+++ func_after\n@@ -2,8 +2,10 @@\n {\n \tstruct inode *inode = filp->f_path.dentry->d_inode;\n \tu32 fsflags, gfsflags;\n+\n \tif (get_user(fsflags, ptr))\n \t\treturn -EFAULT;\n+\n \tgfsflags = fsflags_cvt(fsflags_to_gfs2, fsflags);\n \tif (!S_ISDIR(inode->i_mode)) {\n \t\tif (gfsflags & GFS2_DIF_INHERIT_JDATA)",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "",
            ""
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}