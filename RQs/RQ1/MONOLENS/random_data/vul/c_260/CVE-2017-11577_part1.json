{
    "cve_id": "CVE-2017-11577",
    "cwe_ids": [
        "CWE-125"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "fontforge",
    "commit_msg": "Fix out of bounds read in getsid\n\nCloses #3088",
    "commit_hash": "3245d354865def9d712bdffe61fa211ad6aa4081",
    "git_url": "https://github.com/fontforge/fontforge/commit/3245d354865def9d712bdffe61fa211ad6aa4081",
    "file_path": "fontforge/parsettf.c",
    "func_name": "getsid",
    "func_before": "static const char *getsid(int sid,char **strings,int scnt,struct ttfinfo *info) {\n    if ( sid==-1 )\nreturn( NULL );\n    else if ( sid<nStdStrings )\nreturn( cffnames[sid] );\n    else if ( sid-nStdStrings>scnt ) {\n\tLogError( _(\"Bad sid %d (must be less than %d)\\n\"), sid, scnt+nStdStrings );\n\tif ( info!=NULL ) info->bad_cff = true;\nreturn( NULL );\n    } else\nreturn( strings[sid-nStdStrings]);\n}",
    "abstract_func_before": "static const char *getsid(int VAR_0,char **VAR_1,int VAR_2,struct ttfinfo *VAR_3) {\n    if ( VAR_0==-1 )\nreturn( NULL );\n    else if ( VAR_0<VAR_4 )\nreturn( VAR_5[VAR_0] );\n    else if ( VAR_0-VAR_4>VAR_2 ) {\n\tLogError( _(\"Bad sid %d (must be less than %d)\\n\"), VAR_0, VAR_2+VAR_4 );\n\tif ( VAR_3!=NULL ) VAR_3->bad_cff = true;\nreturn( NULL );\n    } else\nreturn( VAR_1[VAR_0-VAR_4]);\n}",
    "func_graph_path_before": "fontforge/3245d354865def9d712bdffe61fa211ad6aa4081/parsettf.c/vul/before/0.json",
    "func": "static const char *getsid(int sid,char **strings,int scnt,struct ttfinfo *info) {\n    if ( sid==-1 ) // Default value, indicating it's not present\nreturn( NULL );\n    else if (sid < 0) {\n        LogError(_(\"Bad sid %d (0 <= sid < %d)\\n\"), sid, scnt+nStdStrings);\n        if (info != NULL)\n            info->bad_cff = true;\n        return NULL;\n    }\n    else if ( sid<nStdStrings )\nreturn( cffnames[sid] );\n    else if ( sid-nStdStrings>scnt ) {\n\tLogError( _(\"Bad sid %d (must be less than %d)\\n\"), sid, scnt+nStdStrings );\n\tif ( info!=NULL ) info->bad_cff = true;\nreturn( NULL );\n    } else\nreturn( strings[sid-nStdStrings]);\n}",
    "abstract_func": "static const char *getsid(int VAR_0,char **VAR_1,int VAR_2,struct ttfinfo *VAR_3) {\n    if ( VAR_0==-1 ) /* COMMENT_0 */\nreturn( NULL );\n    else if (VAR_0 < 0) {\n        LogError(_(\"Bad sid %d (0 <= sid < %d)\\n\"), VAR_0, VAR_2+VAR_4);\n        if (VAR_3 != NULL)\n            VAR_3->bad_cff = true;\n        return NULL;\n    }\n    else if ( VAR_0<VAR_4 )\nreturn( VAR_5[VAR_0] );\n    else if ( VAR_0-VAR_4>VAR_2 ) {\n\tLogError( _(\"Bad sid %d (must be less than %d)\\n\"), VAR_0, VAR_2+VAR_4 );\n\tif ( VAR_3!=NULL ) VAR_3->bad_cff = true;\nreturn( NULL );\n    } else\nreturn( VAR_1[VAR_0-VAR_4]);\n}",
    "func_graph_path": "fontforge/3245d354865def9d712bdffe61fa211ad6aa4081/parsettf.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,12 @@\n static const char *getsid(int sid,char **strings,int scnt,struct ttfinfo *info) {\n-    if ( sid==-1 )\n+    if ( sid==-1 ) // Default value, indicating it's not present\n return( NULL );\n+    else if (sid < 0) {\n+        LogError(_(\"Bad sid %d (0 <= sid < %d)\\n\"), sid, scnt+nStdStrings);\n+        if (info != NULL)\n+            info->bad_cff = true;\n+        return NULL;\n+    }\n     else if ( sid<nStdStrings )\n return( cffnames[sid] );\n     else if ( sid-nStdStrings>scnt ) {",
    "diff_line_info": {
        "deleted_lines": [
            "    if ( sid==-1 )"
        ],
        "added_lines": [
            "    if ( sid==-1 ) // Default value, indicating it's not present",
            "    else if (sid < 0) {",
            "        LogError(_(\"Bad sid %d (0 <= sid < %d)\\n\"), sid, scnt+nStdStrings);",
            "        if (info != NULL)",
            "            info->bad_cff = true;",
            "        return NULL;",
            "    }"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/fontforge/fontforge/pull/3124",
    "description": "So the long and the short of it is that FontForge was not designed with security in mind. I would not be surprised at all if a simple permutation on the test cases resulted in another buffer overflow/out of bounds read/etc. There's just too many cases to cover.\r\n\r\nAnyway, this fixes most of the *specific* test cases as listed in #3123. I've avoided #3097 and #3098 which involves changing the codegen around the unicode library. For any other issue in that list where there isn't a specific commit, it's probably been fixed as a side effect of one of the other commits."
}