{
    "cve_id": "CVE-2010-1643",
    "cwe_ids": [
        "CWE-Other"
    ],
    "cvss_vector": "AV:L/AC:M/Au:N/C:C/I:C/A:C",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "Junjiro R.  Okajima reported a problem where knfsd crashes if you are\nusing it to export shmemfs objects and run strict overcommit.  In this\nsituation the current->mm based modifier to the overcommit goes through a\nNULL pointer.\n\nWe could simply check for NULL and skip the modifier but we've caught\nother real bugs in the past from mm being NULL here - cases where we did\nneed a valid mm set up (eg the exec bug about a year ago).\n\nTo preserve the checks and get the logic we want shuffle the checking\naround and add a new helper to the vm_ security wrappers\n\nAlso fix a current->mm reference in nommu that should use the passed mm\n\n[akpm@linux-foundation.org: coding-style fixes]\n[akpm@linux-foundation.org: fix build]\nReported-by: Junjiro R. Okajima <hooanon05@yahoo.co.jp>\nAcked-by: James Morris <jmorris@namei.org>\nSigned-off-by: Alan Cox <alan@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\n",
    "commit_hash": "731572d39fcd3498702eda4600db4c43d51e0b26",
    "git_url": "http://git.kernel.org/?p=linux/kernel/git/torvalds/linux.git;a=commit;h=731572d39fcd3498702eda4600db4c43d51e0b26",
    "file_path": "mm/shmem.c",
    "func_name": "shmem_acct_block",
    "func_before": "static inline int shmem_acct_block(unsigned long flags)\n{\n\treturn (flags & VM_ACCOUNT)?\n\t\t0: security_vm_enough_memory(VM_ACCT(PAGE_CACHE_SIZE));\n}",
    "abstract_func_before": "static inline int shmem_acct_block(unsigned long VAR_0)\n{\n\treturn (VAR_0 & VAR_1)?\n\t\t0: security_vm_enough_memory(VM_ACCT(VAR_2));\n}",
    "func_graph_path_before": "torvalds/linux/731572d39fcd3498702eda4600db4c43d51e0b26/shmem.c/vul/before/0.json",
    "func": "static inline int shmem_acct_block(unsigned long flags)\n{\n\treturn (flags & VM_ACCOUNT) ?\n\t\t0 : security_vm_enough_memory_kern(VM_ACCT(PAGE_CACHE_SIZE));\n}",
    "abstract_func": "static inline int shmem_acct_block(unsigned long VAR_0)\n{\n\treturn (VAR_0 & VAR_1) ?\n\t\t0 : security_vm_enough_memory_kern(VM_ACCT(VAR_2));\n}",
    "func_graph_path": "torvalds/linux/731572d39fcd3498702eda4600db4c43d51e0b26/shmem.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,5 @@\n static inline int shmem_acct_block(unsigned long flags)\n {\n-\treturn (flags & VM_ACCOUNT)?\n-\t\t0: security_vm_enough_memory(VM_ACCT(PAGE_CACHE_SIZE));\n+\treturn (flags & VM_ACCOUNT) ?\n+\t\t0 : security_vm_enough_memory_kern(VM_ACCT(PAGE_CACHE_SIZE));\n }",
    "diff_line_info": {
        "deleted_lines": [
            "\treturn (flags & VM_ACCOUNT)?",
            "\t\t0: security_vm_enough_memory(VM_ACCT(PAGE_CACHE_SIZE));"
        ],
        "added_lines": [
            "\treturn (flags & VM_ACCOUNT) ?",
            "\t\t0 : security_vm_enough_memory_kern(VM_ACCT(PAGE_CACHE_SIZE));"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}