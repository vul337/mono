{
    "cve_id": "CVE-2017-7487",
    "cwe_ids": [
        "CWE-416"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "ipx: call ipxitf_put() in ioctl error path\n\nWe should call ipxitf_put() if the copy_to_user() fails.\n\nReported-by: \u674e\u5f3a <liqiang6-s@360.cn>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "commit_hash": "ee0d8d8482345ff97a75a7d747efc309f13b0d80",
    "git_url": "https://github.com/torvalds/linux/commit/ee0d8d8482345ff97a75a7d747efc309f13b0d80",
    "file_path": "net/ipx/af_ipx.c",
    "func_name": "ipxitf_ioctl",
    "func_before": "static int ipxitf_ioctl(unsigned int cmd, void __user *arg)\n{\n\tint rc = -EINVAL;\n\tstruct ifreq ifr;\n\tint val;\n\n\tswitch (cmd) {\n\tcase SIOCSIFADDR: {\n\t\tstruct sockaddr_ipx *sipx;\n\t\tstruct ipx_interface_definition f;\n\n\t\trc = -EFAULT;\n\t\tif (copy_from_user(&ifr, arg, sizeof(ifr)))\n\t\t\tbreak;\n\t\tsipx = (struct sockaddr_ipx *)&ifr.ifr_addr;\n\t\trc = -EINVAL;\n\t\tif (sipx->sipx_family != AF_IPX)\n\t\t\tbreak;\n\t\tf.ipx_network = sipx->sipx_network;\n\t\tmemcpy(f.ipx_device, ifr.ifr_name,\n\t\t\tsizeof(f.ipx_device));\n\t\tmemcpy(f.ipx_node, sipx->sipx_node, IPX_NODE_LEN);\n\t\tf.ipx_dlink_type = sipx->sipx_type;\n\t\tf.ipx_special = sipx->sipx_special;\n\n\t\tif (sipx->sipx_action == IPX_DLTITF)\n\t\t\trc = ipxitf_delete(&f);\n\t\telse\n\t\t\trc = ipxitf_create(&f);\n\t\tbreak;\n\t}\n\tcase SIOCGIFADDR: {\n\t\tstruct sockaddr_ipx *sipx;\n\t\tstruct ipx_interface *ipxif;\n\t\tstruct net_device *dev;\n\n\t\trc = -EFAULT;\n\t\tif (copy_from_user(&ifr, arg, sizeof(ifr)))\n\t\t\tbreak;\n\t\tsipx = (struct sockaddr_ipx *)&ifr.ifr_addr;\n\t\tdev  = __dev_get_by_name(&init_net, ifr.ifr_name);\n\t\trc   = -ENODEV;\n\t\tif (!dev)\n\t\t\tbreak;\n\t\tipxif = ipxitf_find_using_phys(dev,\n\t\t\t\t\t   ipx_map_frame_type(sipx->sipx_type));\n\t\trc = -EADDRNOTAVAIL;\n\t\tif (!ipxif)\n\t\t\tbreak;\n\n\t\tsipx->sipx_family\t= AF_IPX;\n\t\tsipx->sipx_network\t= ipxif->if_netnum;\n\t\tmemcpy(sipx->sipx_node, ipxif->if_node,\n\t\t\tsizeof(sipx->sipx_node));\n\t\trc = -EFAULT;\n\t\tif (copy_to_user(arg, &ifr, sizeof(ifr)))\n\t\t\tbreak;\n\t\tipxitf_put(ipxif);\n\t\trc = 0;\n\t\tbreak;\n\t}\n\tcase SIOCAIPXITFCRT:\n\t\trc = -EFAULT;\n\t\tif (get_user(val, (unsigned char __user *) arg))\n\t\t\tbreak;\n\t\trc = 0;\n\t\tipxcfg_auto_create_interfaces = val;\n\t\tbreak;\n\tcase SIOCAIPXPRISLT:\n\t\trc = -EFAULT;\n\t\tif (get_user(val, (unsigned char __user *) arg))\n\t\t\tbreak;\n\t\trc = 0;\n\t\tipxcfg_set_auto_select(val);\n\t\tbreak;\n\t}\n\n\treturn rc;\n}",
    "abstract_func_before": "static int ipxitf_ioctl(unsigned int VAR_0, void __user *VAR_1)\n{\n\tint VAR_2 = -VAR_3;\n\tstruct ifreq VAR_4;\n\tint VAR_5;\n\n\tswitch (VAR_0) {\n\tcase VAR_6: {\n\t\tstruct sockaddr_ipx *VAR_7;\n\t\tstruct ipx_interface_definition VAR_8;\n\n\t\tVAR_2 = -VAR_9;\n\t\tif (copy_from_user(&VAR_4, VAR_1, sizeof(VAR_4)))\n\t\t\tbreak;\n\t\tVAR_7 = (struct sockaddr_ipx *)&VAR_4.ifr_addr;\n\t\tVAR_2 = -VAR_3;\n\t\tif (VAR_7->sipx_family != VAR_10)\n\t\t\tbreak;\n\t\tVAR_8.ipx_network = VAR_7->sipx_network;\n\t\tmemcpy(VAR_8.ipx_device, VAR_4.ifr_name,\n\t\t\tsizeof(VAR_8.ipx_device));\n\t\tmemcpy(VAR_8.ipx_node, VAR_7->sipx_node, VAR_11);\n\t\tVAR_8.ipx_dlink_type = VAR_7->sipx_type;\n\t\tVAR_8.ipx_special = VAR_7->sipx_special;\n\n\t\tif (VAR_7->sipx_action == VAR_12)\n\t\t\tVAR_2 = ipxitf_delete(&VAR_8);\n\t\telse\n\t\t\tVAR_2 = ipxitf_create(&VAR_8);\n\t\tbreak;\n\t}\n\tcase VAR_13: {\n\t\tstruct sockaddr_ipx *VAR_7;\n\t\tstruct ipx_interface *VAR_14;\n\t\tstruct net_device *VAR_15;\n\n\t\tVAR_2 = -VAR_9;\n\t\tif (copy_from_user(&VAR_4, VAR_1, sizeof(VAR_4)))\n\t\t\tbreak;\n\t\tVAR_7 = (struct sockaddr_ipx *)&VAR_4.ifr_addr;\n\t\tVAR_15  = __dev_get_by_name(&VAR_16, VAR_4.ifr_name);\n\t\tVAR_2   = -VAR_17;\n\t\tif (!VAR_15)\n\t\t\tbreak;\n\t\tVAR_14 = ipxitf_find_using_phys(VAR_15,\n\t\t\t\t\t   ipx_map_frame_type(VAR_7->sipx_type));\n\t\tVAR_2 = -VAR_18;\n\t\tif (!VAR_14)\n\t\t\tbreak;\n\n\t\tVAR_7->sipx_family\t= VAR_10;\n\t\tVAR_7->sipx_network\t= VAR_14->if_netnum;\n\t\tmemcpy(VAR_7->sipx_node, VAR_14->if_node,\n\t\t\tsizeof(VAR_7->sipx_node));\n\t\tVAR_2 = -VAR_9;\n\t\tif (copy_to_user(VAR_1, &VAR_4, sizeof(VAR_4)))\n\t\t\tbreak;\n\t\tipxitf_put(VAR_14);\n\t\tVAR_2 = 0;\n\t\tbreak;\n\t}\n\tcase VAR_19:\n\t\tVAR_2 = -VAR_9;\n\t\tif (get_user(VAR_5, (unsigned char __user *) VAR_1))\n\t\t\tbreak;\n\t\tVAR_2 = 0;\n\t\tVAR_20 = VAR_5;\n\t\tbreak;\n\tcase VAR_21:\n\t\tVAR_2 = -VAR_9;\n\t\tif (get_user(VAR_5, (unsigned char __user *) VAR_1))\n\t\t\tbreak;\n\t\tVAR_2 = 0;\n\t\tipxcfg_set_auto_select(VAR_5);\n\t\tbreak;\n\t}\n\n\treturn VAR_2;\n}",
    "func_graph_path_before": null,
    "func": "static int ipxitf_ioctl(unsigned int cmd, void __user *arg)\n{\n\tint rc = -EINVAL;\n\tstruct ifreq ifr;\n\tint val;\n\n\tswitch (cmd) {\n\tcase SIOCSIFADDR: {\n\t\tstruct sockaddr_ipx *sipx;\n\t\tstruct ipx_interface_definition f;\n\n\t\trc = -EFAULT;\n\t\tif (copy_from_user(&ifr, arg, sizeof(ifr)))\n\t\t\tbreak;\n\t\tsipx = (struct sockaddr_ipx *)&ifr.ifr_addr;\n\t\trc = -EINVAL;\n\t\tif (sipx->sipx_family != AF_IPX)\n\t\t\tbreak;\n\t\tf.ipx_network = sipx->sipx_network;\n\t\tmemcpy(f.ipx_device, ifr.ifr_name,\n\t\t\tsizeof(f.ipx_device));\n\t\tmemcpy(f.ipx_node, sipx->sipx_node, IPX_NODE_LEN);\n\t\tf.ipx_dlink_type = sipx->sipx_type;\n\t\tf.ipx_special = sipx->sipx_special;\n\n\t\tif (sipx->sipx_action == IPX_DLTITF)\n\t\t\trc = ipxitf_delete(&f);\n\t\telse\n\t\t\trc = ipxitf_create(&f);\n\t\tbreak;\n\t}\n\tcase SIOCGIFADDR: {\n\t\tstruct sockaddr_ipx *sipx;\n\t\tstruct ipx_interface *ipxif;\n\t\tstruct net_device *dev;\n\n\t\trc = -EFAULT;\n\t\tif (copy_from_user(&ifr, arg, sizeof(ifr)))\n\t\t\tbreak;\n\t\tsipx = (struct sockaddr_ipx *)&ifr.ifr_addr;\n\t\tdev  = __dev_get_by_name(&init_net, ifr.ifr_name);\n\t\trc   = -ENODEV;\n\t\tif (!dev)\n\t\t\tbreak;\n\t\tipxif = ipxitf_find_using_phys(dev,\n\t\t\t\t\t   ipx_map_frame_type(sipx->sipx_type));\n\t\trc = -EADDRNOTAVAIL;\n\t\tif (!ipxif)\n\t\t\tbreak;\n\n\t\tsipx->sipx_family\t= AF_IPX;\n\t\tsipx->sipx_network\t= ipxif->if_netnum;\n\t\tmemcpy(sipx->sipx_node, ipxif->if_node,\n\t\t\tsizeof(sipx->sipx_node));\n\t\trc = 0;\n\t\tif (copy_to_user(arg, &ifr, sizeof(ifr)))\n\t\t\trc = -EFAULT;\n\t\tipxitf_put(ipxif);\n\t\tbreak;\n\t}\n\tcase SIOCAIPXITFCRT:\n\t\trc = -EFAULT;\n\t\tif (get_user(val, (unsigned char __user *) arg))\n\t\t\tbreak;\n\t\trc = 0;\n\t\tipxcfg_auto_create_interfaces = val;\n\t\tbreak;\n\tcase SIOCAIPXPRISLT:\n\t\trc = -EFAULT;\n\t\tif (get_user(val, (unsigned char __user *) arg))\n\t\t\tbreak;\n\t\trc = 0;\n\t\tipxcfg_set_auto_select(val);\n\t\tbreak;\n\t}\n\n\treturn rc;\n}",
    "abstract_func": "static int ipxitf_ioctl(unsigned int VAR_0, void __user *VAR_1)\n{\n\tint VAR_2 = -VAR_3;\n\tstruct ifreq VAR_4;\n\tint VAR_5;\n\n\tswitch (VAR_0) {\n\tcase VAR_6: {\n\t\tstruct sockaddr_ipx *VAR_7;\n\t\tstruct ipx_interface_definition VAR_8;\n\n\t\tVAR_2 = -VAR_9;\n\t\tif (copy_from_user(&VAR_4, VAR_1, sizeof(VAR_4)))\n\t\t\tbreak;\n\t\tVAR_7 = (struct sockaddr_ipx *)&VAR_4.ifr_addr;\n\t\tVAR_2 = -VAR_3;\n\t\tif (VAR_7->sipx_family != VAR_10)\n\t\t\tbreak;\n\t\tVAR_8.ipx_network = VAR_7->sipx_network;\n\t\tmemcpy(VAR_8.ipx_device, VAR_4.ifr_name,\n\t\t\tsizeof(VAR_8.ipx_device));\n\t\tmemcpy(VAR_8.ipx_node, VAR_7->sipx_node, VAR_11);\n\t\tVAR_8.ipx_dlink_type = VAR_7->sipx_type;\n\t\tVAR_8.ipx_special = VAR_7->sipx_special;\n\n\t\tif (VAR_7->sipx_action == VAR_12)\n\t\t\tVAR_2 = ipxitf_delete(&VAR_8);\n\t\telse\n\t\t\tVAR_2 = ipxitf_create(&VAR_8);\n\t\tbreak;\n\t}\n\tcase VAR_13: {\n\t\tstruct sockaddr_ipx *VAR_7;\n\t\tstruct ipx_interface *VAR_14;\n\t\tstruct net_device *VAR_15;\n\n\t\tVAR_2 = -VAR_9;\n\t\tif (copy_from_user(&VAR_4, VAR_1, sizeof(VAR_4)))\n\t\t\tbreak;\n\t\tVAR_7 = (struct sockaddr_ipx *)&VAR_4.ifr_addr;\n\t\tVAR_15  = __dev_get_by_name(&VAR_16, VAR_4.ifr_name);\n\t\tVAR_2   = -VAR_17;\n\t\tif (!VAR_15)\n\t\t\tbreak;\n\t\tVAR_14 = ipxitf_find_using_phys(VAR_15,\n\t\t\t\t\t   ipx_map_frame_type(VAR_7->sipx_type));\n\t\tVAR_2 = -VAR_18;\n\t\tif (!VAR_14)\n\t\t\tbreak;\n\n\t\tVAR_7->sipx_family\t= VAR_10;\n\t\tVAR_7->sipx_network\t= VAR_14->if_netnum;\n\t\tmemcpy(VAR_7->sipx_node, VAR_14->if_node,\n\t\t\tsizeof(VAR_7->sipx_node));\n\t\tVAR_2 = 0;\n\t\tif (copy_to_user(VAR_1, &VAR_4, sizeof(VAR_4)))\n\t\t\tVAR_2 = -VAR_9;\n\t\tipxitf_put(VAR_14);\n\t\tbreak;\n\t}\n\tcase VAR_19:\n\t\tVAR_2 = -VAR_9;\n\t\tif (get_user(VAR_5, (unsigned char __user *) VAR_1))\n\t\t\tbreak;\n\t\tVAR_2 = 0;\n\t\tVAR_20 = VAR_5;\n\t\tbreak;\n\tcase VAR_21:\n\t\tVAR_2 = -VAR_9;\n\t\tif (get_user(VAR_5, (unsigned char __user *) VAR_1))\n\t\t\tbreak;\n\t\tVAR_2 = 0;\n\t\tipxcfg_set_auto_select(VAR_5);\n\t\tbreak;\n\t}\n\n\treturn VAR_2;\n}",
    "func_graph_path": null,
    "diff_func": "--- func_before\n+++ func_after\n@@ -52,11 +52,10 @@\n \t\tsipx->sipx_network\t= ipxif->if_netnum;\n \t\tmemcpy(sipx->sipx_node, ipxif->if_node,\n \t\t\tsizeof(sipx->sipx_node));\n-\t\trc = -EFAULT;\n+\t\trc = 0;\n \t\tif (copy_to_user(arg, &ifr, sizeof(ifr)))\n-\t\t\tbreak;\n+\t\t\trc = -EFAULT;\n \t\tipxitf_put(ipxif);\n-\t\trc = 0;\n \t\tbreak;\n \t}\n \tcase SIOCAIPXITFCRT:",
    "diff_line_info": {
        "deleted_lines": [
            "\t\trc = -EFAULT;",
            "\t\t\tbreak;",
            "\t\trc = 0;"
        ],
        "added_lines": [
            "\t\trc = 0;",
            "\t\t\trc = -EFAULT;"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}