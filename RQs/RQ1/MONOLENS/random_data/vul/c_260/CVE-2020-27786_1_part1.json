{
    "cve_id": "CVE-2020-27786",
    "cwe_ids": [
        "CWE-416"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "The rawmidi core allows user to resize the runtime buffer via ioctl,\nand this may lead to UAF when performed during concurrent reads or\nwrites: the read/write functions unlock the runtime lock temporarily\nduring copying form/to user-space, and that's the race window.\n\nThis patch fixes the hole by introducing a reference counter for the\nruntime buffer read/write access and returns -EBUSY error when the\nresize is performed concurrently against read/write.\n\nNote that the ref count field is a simple integer instead of\nrefcount_t here, since the all contexts accessing the buffer is\nbasically protected with a spinlock, hence we need no expensive atomic\nops.  Also, note that this busy check is needed only against read /\nwrite functions, and not in receive/transmit callbacks; the race can\nhappen only at the spinlock hole mentioned in the above, while the\nwhole function is protected for receive / transmit callbacks.\n\nReported-by: butt3rflyh4ck <butterflyhuangxx@gmail.com>\nCc: <stable@vger.kernel.org>\nLink: https://lore.kernel.org/r/CAFcO6XMWpUVK_yzzCpp8_XP7+=oUpQvuBeCbMffEDkpe8jWrfg@mail.gmail.com\nLink: https://lore.kernel.org/r/s5heerw3r5z.wl-tiwai@suse.de\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\n",
    "commit_hash": "c1f6e3c818dd734c30f6a7eeebf232ba2cf3181d",
    "git_url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?h=c1f6e3c818dd734c30f6a7eeebf232ba2cf3181d",
    "file_path": "sound/core/rawmidi.c",
    "func_name": "resize_runtime_buffer",
    "func_before": "static int resize_runtime_buffer(struct snd_rawmidi_runtime *runtime,\n\t\t\t\t struct snd_rawmidi_params *params,\n\t\t\t\t bool is_input)\n{\n\tchar *newbuf, *oldbuf;\n\n\tif (params->buffer_size < 32 || params->buffer_size > 1024L * 1024L)\n\t\treturn -EINVAL;\n\tif (params->avail_min < 1 || params->avail_min > params->buffer_size)\n\t\treturn -EINVAL;\n\tif (params->buffer_size != runtime->buffer_size) {\n\t\tnewbuf = kvzalloc(params->buffer_size, GFP_KERNEL);\n\t\tif (!newbuf)\n\t\t\treturn -ENOMEM;\n\t\tspin_lock_irq(&runtime->lock);\n\t\toldbuf = runtime->buffer;\n\t\truntime->buffer = newbuf;\n\t\truntime->buffer_size = params->buffer_size;\n\t\t__reset_runtime_ptrs(runtime, is_input);\n\t\tspin_unlock_irq(&runtime->lock);\n\t\tkvfree(oldbuf);\n\t}\n\truntime->avail_min = params->avail_min;\n\treturn 0;\n}",
    "abstract_func_before": "static int resize_runtime_buffer(struct snd_rawmidi_runtime *VAR_0,\n\t\t\t\t struct snd_rawmidi_params *VAR_1,\n\t\t\t\t bool VAR_2)\n{\n\tchar *VAR_3, *VAR_4;\n\n\tif (VAR_1->buffer_size < 32 || VAR_1->buffer_size > 1024L * 1024L)\n\t\treturn -VAR_5;\n\tif (VAR_1->avail_min < 1 || VAR_1->avail_min > VAR_1->buffer_size)\n\t\treturn -VAR_5;\n\tif (VAR_1->buffer_size != VAR_0->buffer_size) {\n\t\tVAR_3 = kvzalloc(VAR_1->buffer_size, VAR_6);\n\t\tif (!VAR_3)\n\t\t\treturn -VAR_7;\n\t\tspin_lock_irq(&VAR_0->lock);\n\t\tVAR_4 = VAR_0->buffer;\n\t\tVAR_0->buffer = VAR_3;\n\t\tVAR_0->buffer_size = VAR_1->buffer_size;\n\t\t__reset_runtime_ptrs(VAR_0, VAR_2);\n\t\tspin_unlock_irq(&VAR_0->lock);\n\t\tkvfree(VAR_4);\n\t}\n\tVAR_0->avail_min = VAR_1->avail_min;\n\treturn 0;\n}",
    "func_graph_path_before": "torvalds/linux/c1f6e3c818dd734c30f6a7eeebf232ba2cf3181d/rawmidi.c/vul/before/2.json",
    "func": "static int resize_runtime_buffer(struct snd_rawmidi_runtime *runtime,\n\t\t\t\t struct snd_rawmidi_params *params,\n\t\t\t\t bool is_input)\n{\n\tchar *newbuf, *oldbuf;\n\n\tif (params->buffer_size < 32 || params->buffer_size > 1024L * 1024L)\n\t\treturn -EINVAL;\n\tif (params->avail_min < 1 || params->avail_min > params->buffer_size)\n\t\treturn -EINVAL;\n\tif (params->buffer_size != runtime->buffer_size) {\n\t\tnewbuf = kvzalloc(params->buffer_size, GFP_KERNEL);\n\t\tif (!newbuf)\n\t\t\treturn -ENOMEM;\n\t\tspin_lock_irq(&runtime->lock);\n\t\tif (runtime->buffer_ref) {\n\t\t\tspin_unlock_irq(&runtime->lock);\n\t\t\tkvfree(newbuf);\n\t\t\treturn -EBUSY;\n\t\t}\n\t\toldbuf = runtime->buffer;\n\t\truntime->buffer = newbuf;\n\t\truntime->buffer_size = params->buffer_size;\n\t\t__reset_runtime_ptrs(runtime, is_input);\n\t\tspin_unlock_irq(&runtime->lock);\n\t\tkvfree(oldbuf);\n\t}\n\truntime->avail_min = params->avail_min;\n\treturn 0;\n}",
    "abstract_func": "static int resize_runtime_buffer(struct snd_rawmidi_runtime *VAR_0,\n\t\t\t\t struct snd_rawmidi_params *VAR_1,\n\t\t\t\t bool VAR_2)\n{\n\tchar *VAR_3, *VAR_4;\n\n\tif (VAR_1->buffer_size < 32 || VAR_1->buffer_size > 1024L * 1024L)\n\t\treturn -VAR_5;\n\tif (VAR_1->avail_min < 1 || VAR_1->avail_min > VAR_1->buffer_size)\n\t\treturn -VAR_5;\n\tif (VAR_1->buffer_size != VAR_0->buffer_size) {\n\t\tVAR_3 = kvzalloc(VAR_1->buffer_size, VAR_6);\n\t\tif (!VAR_3)\n\t\t\treturn -VAR_7;\n\t\tspin_lock_irq(&VAR_0->lock);\n\t\tif (VAR_0->buffer_ref) {\n\t\t\tspin_unlock_irq(&VAR_0->lock);\n\t\t\tkvfree(VAR_3);\n\t\t\treturn -VAR_8;\n\t\t}\n\t\tVAR_4 = VAR_0->buffer;\n\t\tVAR_0->buffer = VAR_3;\n\t\tVAR_0->buffer_size = VAR_1->buffer_size;\n\t\t__reset_runtime_ptrs(VAR_0, VAR_2);\n\t\tspin_unlock_irq(&VAR_0->lock);\n\t\tkvfree(VAR_4);\n\t}\n\tVAR_0->avail_min = VAR_1->avail_min;\n\treturn 0;\n}",
    "func_graph_path": "torvalds/linux/c1f6e3c818dd734c30f6a7eeebf232ba2cf3181d/rawmidi.c/vul/after/2.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -13,6 +13,11 @@\n \t\tif (!newbuf)\n \t\t\treturn -ENOMEM;\n \t\tspin_lock_irq(&runtime->lock);\n+\t\tif (runtime->buffer_ref) {\n+\t\t\tspin_unlock_irq(&runtime->lock);\n+\t\t\tkvfree(newbuf);\n+\t\t\treturn -EBUSY;\n+\t\t}\n \t\toldbuf = runtime->buffer;\n \t\truntime->buffer = newbuf;\n \t\truntime->buffer_size = params->buffer_size;",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "\t\tif (runtime->buffer_ref) {",
            "\t\t\tspin_unlock_irq(&runtime->lock);",
            "\t\t\tkvfree(newbuf);",
            "\t\t\treturn -EBUSY;",
            "\t\t}"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}