{
    "cve_id": "CVE-2024-24258",
    "cwe_ids": [
        "CWE-401"
    ],
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cvss_is_v3": true,
    "repo_name": "freeglut",
    "commit_msg": "Plug memory leak that happens upon error.\n\nIf fgStructure.CurrentMenu is set when glutAddMenuEntry() or\nglutAddSubMenu() is called the allocated menuEntry variable will\nleak. This commit postpones allocating menuEntry until after the\nerror checks, thereby plugging the memory leak.\n\nThis fixes CVE-2024-24258 and CVE-2024-24259.",
    "commit_hash": "a3810f4e9540286e2d4b8cc97c82ec484de45b9e",
    "git_url": "https://github.com/freeglut/freeglut/commit/a3810f4e9540286e2d4b8cc97c82ec484de45b9e",
    "file_path": "src/fg_menu.c",
    "func_name": "glutAddMenuEntry",
    "func_before": "void FGAPIENTRY glutAddMenuEntry( const char* label, int value )\n{\n    SFG_MenuEntry* menuEntry;\n    FREEGLUT_EXIT_IF_NOT_INITIALISED ( \"glutAddMenuEntry\" );\n    menuEntry = (SFG_MenuEntry *)calloc( sizeof(SFG_MenuEntry), 1 );\n\n    freeglut_return_if_fail( fgStructure.CurrentMenu );\n    if (fgState.ActiveMenus)\n        fgError(\"Menu manipulation not allowed while menus in use.\");\n\n    menuEntry->Text = strdup( label );\n    menuEntry->ID   = value;\n\n    /* Have the new menu entry attached to the current menu */\n    fgListAppend( &fgStructure.CurrentMenu->Entries, &menuEntry->Node );\n\n    fghCalculateMenuBoxSize( );\n}",
    "abstract_func_before": "void VAR_0 glutAddMenuEntry( const char* VAR_1, int VAR_2 )\n{\n    SFG_MenuEntry* VAR_3;\n    FREEGLUT_EXIT_IF_NOT_INITIALISED ( \"glutAddMenuEntry\" );\n    VAR_3 = (SFG_MenuEntry *)calloc( sizeof(SFG_MenuEntry), 1 );\n\n    freeglut_return_if_fail( VAR_4.CurrentMenu );\n    if (VAR_5.ActiveMenus)\n        fgError(\"Menu manipulation not allowed while menus in use.\");\n\n    VAR_3->Text = strdup( VAR_1 );\n    VAR_3->ID   = VAR_2;\n\n    /* COMMENT_0 */\n    fgListAppend( &VAR_4.CurrentMenu->Entries, &VAR_3->Node );\n\n    fghCalculateMenuBoxSize( );\n}",
    "func_graph_path_before": null,
    "func": "void FGAPIENTRY glutAddMenuEntry( const char* label, int value )\n{\n    SFG_MenuEntry* menuEntry;\n    FREEGLUT_EXIT_IF_NOT_INITIALISED ( \"glutAddMenuEntry\" );\n\n    freeglut_return_if_fail( fgStructure.CurrentMenu );\n    if (fgState.ActiveMenus)\n        fgError(\"Menu manipulation not allowed while menus in use.\");\n\n    menuEntry = (SFG_MenuEntry *)calloc( sizeof(SFG_MenuEntry), 1 );\n    menuEntry->Text = strdup( label );\n    menuEntry->ID   = value;\n\n    /* Have the new menu entry attached to the current menu */\n    fgListAppend( &fgStructure.CurrentMenu->Entries, &menuEntry->Node );\n\n    fghCalculateMenuBoxSize( );\n}",
    "abstract_func": "void VAR_0 glutAddMenuEntry( const char* VAR_1, int VAR_2 )\n{\n    SFG_MenuEntry* VAR_3;\n    FREEGLUT_EXIT_IF_NOT_INITIALISED ( \"glutAddMenuEntry\" );\n\n    freeglut_return_if_fail( VAR_4.CurrentMenu );\n    if (VAR_5.ActiveMenus)\n        fgError(\"Menu manipulation not allowed while menus in use.\");\n\n    VAR_3 = (SFG_MenuEntry *)calloc( sizeof(SFG_MenuEntry), 1 );\n    VAR_3->Text = strdup( VAR_1 );\n    VAR_3->ID   = VAR_2;\n\n    /* COMMENT_0 */\n    fgListAppend( &VAR_4.CurrentMenu->Entries, &VAR_3->Node );\n\n    fghCalculateMenuBoxSize( );\n}",
    "func_graph_path": null,
    "diff_func": "--- func_before\n+++ func_after\n@@ -2,12 +2,12 @@\n {\n     SFG_MenuEntry* menuEntry;\n     FREEGLUT_EXIT_IF_NOT_INITIALISED ( \"glutAddMenuEntry\" );\n-    menuEntry = (SFG_MenuEntry *)calloc( sizeof(SFG_MenuEntry), 1 );\n \n     freeglut_return_if_fail( fgStructure.CurrentMenu );\n     if (fgState.ActiveMenus)\n         fgError(\"Menu manipulation not allowed while menus in use.\");\n \n+    menuEntry = (SFG_MenuEntry *)calloc( sizeof(SFG_MenuEntry), 1 );\n     menuEntry->Text = strdup( label );\n     menuEntry->ID   = value;\n ",
    "diff_line_info": {
        "deleted_lines": [
            "    menuEntry = (SFG_MenuEntry *)calloc( sizeof(SFG_MenuEntry), 1 );"
        ],
        "added_lines": [
            "    menuEntry = (SFG_MenuEntry *)calloc( sizeof(SFG_MenuEntry), 1 );"
        ]
    },
    "is_vul": true,
    "pr_url": "https://github.com/freeglut/freeglut/pull/155",
    "description": "If fgStructure.CurrentMenu is set when glutAddMenuEntry() or glutAddSubMenu() is called the allocated menuEntry variable will leak. This commit postpones allocating menuEntry until after the error checks, thereby plugging the memory leak.\r\n\r\nThis fixes CVE-2024-24258 and CVE-2024-24259."
}