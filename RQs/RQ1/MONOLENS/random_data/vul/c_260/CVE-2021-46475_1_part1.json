{
    "cve_id": "CVE-2021-46475",
    "cwe_ids": [
        "CWE-Other",
        "CWE-787"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
    "cvss_is_v3": false,
    "repo_name": "pcmacdon/jsish",
    "commit_msg": "Fix issue #65.  Sanitize other inputs.  And no, was not fixed by the fix to issue #64\n\nFossilOrigin-Name: 18c3a7084f0cdf0aaf9dd27a591d6ed75f33b00be55439bd6d2acb979a6f1207",
    "commit_hash": "e362c0a34c814bebb78f5ec2fc3747475d1ed259",
    "git_url": "https://github.com/pcmacdon/jsish/commit/e362c0a34c814bebb78f5ec2fc3747475d1ed259",
    "file_path": "src/jsiArray.c",
    "func_name": "jsi_ArrayIndexSubCmd",
    "func_before": "static Jsi_RC jsi_ArrayIndexSubCmd(Jsi_Interp *interp, Jsi_Value *args, Jsi_Value *_this,Jsi_Value **ret, Jsi_Func *funcPtr, int op) {\n    int istart = 0, n, i = 0, dir=1, idx=-1;\n    Jsi_Value *seq = Jsi_ValueArrayIndex(interp, args, 0),\n        *start = Jsi_ValueArrayIndex(interp, args, 1);\n    Jsi_Obj *obj = _this->d.obj;\n    if (_this->vt != JSI_VT_OBJECT || !Jsi_ObjIsArray(interp, _this->d.obj))\n        return Jsi_LogError(\"expected array object\");\n\n    if (!seq) {\n        goto bail;\n    }\n    \n    n = jsi_SizeOfArray(interp, obj);    \n    if (n == 0) {\n        goto bail;\n    }\n    Jsi_Number nstart;\n    if (op == 2) {\n        istart = n-1;\n    }\n    if (start && Jsi_GetNumberFromValue(interp,start, &nstart)==JSI_OK) {\n        istart = (int)nstart;\n        if (istart > n)\n            goto bail;\n        if (istart < 0)\n            istart = (n+istart);\n        if (istart<0)\n            goto bail;\n    }\n    if (op == 2) {\n        istart = n-1;\n        dir = -1;\n    }\n    Jsi_ObjListifyArray(interp, obj);\n    for (i = istart; ; i+=dir)\n    {\n        if ((dir>0 && i>=n) || (dir<0 && i<0) || i>=(int)obj->arrCnt)\n            break;\n        if (obj->arr[i] && Jsi_ValueCmp(interp, obj->arr[i], seq, JSI_CMP_EXACT)==0) {\n            idx = i;\n            break;\n        }\n    }\nbail:\n    if (op == 3)\n        Jsi_ValueMakeBool(interp, ret, (idx!=-1));\n    else\n        Jsi_ValueMakeNumber(interp, ret, idx);\n    return JSI_OK;\n}",
    "abstract_func_before": "static Jsi_RC jsi_ArrayIndexSubCmd(Jsi_Interp *VAR_0, Jsi_Value *VAR_1, Jsi_Value *VAR_2,Jsi_Value **VAR_3, Jsi_Func *VAR_4, int VAR_5) {\n    int VAR_6 = 0, VAR_7, VAR_8 = 0, VAR_9=1, VAR_10=-1;\n    Jsi_Value *VAR_11 = Jsi_ValueArrayIndex(VAR_0, VAR_1, 0),\n        *VAR_12 = Jsi_ValueArrayIndex(VAR_0, VAR_1, 1);\n    Jsi_Obj *VAR_13 = VAR_2->d.obj;\n    if (VAR_2->vt != VAR_14 || !Jsi_ObjIsArray(VAR_0, VAR_2->d.obj))\n        return Jsi_LogError(\"expected array object\");\n\n    if (!VAR_11) {\n        goto bail;\n    }\n    \n    VAR_7 = jsi_SizeOfArray(VAR_0, VAR_13);    \n    if (VAR_7 == 0) {\n        goto bail;\n    }\n    Jsi_Number VAR_15;\n    if (VAR_5 == 2) {\n        VAR_6 = VAR_7-1;\n    }\n    if (VAR_12 && Jsi_GetNumberFromValue(VAR_0,VAR_12, &VAR_15)==VAR_16) {\n        VAR_6 = (int)VAR_15;\n        if (VAR_6 > VAR_7)\n            goto bail;\n        if (VAR_6 < 0)\n            VAR_6 = (VAR_7+VAR_6);\n        if (VAR_6<0)\n            goto bail;\n    }\n    if (VAR_5 == 2) {\n        VAR_6 = VAR_7-1;\n        VAR_9 = -1;\n    }\n    Jsi_ObjListifyArray(VAR_0, VAR_13);\n    for (VAR_8 = VAR_6; ; VAR_8+=VAR_9)\n    {\n        if ((VAR_9>0 && VAR_8>=VAR_7) || (VAR_9<0 && VAR_8<0) || VAR_8>=(int)VAR_13->arrCnt)\n            break;\n        if (VAR_13->arr[VAR_8] && Jsi_ValueCmp(VAR_0, VAR_13->arr[VAR_8], VAR_11, VAR_17)==0) {\n            VAR_10 = VAR_8;\n            break;\n        }\n    }\nbail:\n    if (VAR_5 == 3)\n        Jsi_ValueMakeBool(VAR_0, VAR_3, (VAR_10!=-1));\n    else\n        Jsi_ValueMakeNumber(VAR_0, VAR_3, VAR_10);\n    return VAR_16;\n}",
    "func_graph_path_before": "pcmacdon/jsish/e362c0a34c814bebb78f5ec2fc3747475d1ed259/jsiArray.c/vul/before/2.json",
    "func": "static Jsi_RC jsi_ArrayIndexSubCmd(Jsi_Interp *interp, Jsi_Value *args, Jsi_Value *_this,Jsi_Value **ret, Jsi_Func *funcPtr, int op) {\n    int istart = 0, n, i = 0, dir=1, idx=-1;\n    Jsi_Value *seq = Jsi_ValueArrayIndex(interp, args, 0),\n        *start = Jsi_ValueArrayIndex(interp, args, 1);\n    Jsi_Obj *obj = _this->d.obj;\n    if (_this->vt != JSI_VT_OBJECT || !Jsi_ObjIsArray(interp, _this->d.obj))\n        return Jsi_LogError(\"expected array object\");\n\n    if (!seq) {\n        goto bail;\n    }\n    \n    n = jsi_SizeOfArray(interp, obj);    \n    if (n == 0) {\n        goto bail;\n    }\n    Jsi_Number nstart;\n    if (op == 2) {\n        istart = n-1;\n    }\n    if (start) {\n        if (Jsi_GetNumberFromValue(interp,start, &nstart)!=JSI_OK) return JSI_ERROR;\n        istart = (int)nstart;\n        if (istart > n)\n            goto bail;\n        if (istart < 0)\n            istart = (n+istart);\n        if (istart<0)\n            goto bail;\n    }\n    if (op == 2) {\n        istart = n-1;\n        dir = -1;\n    }\n    Jsi_ObjListifyArray(interp, obj);\n    for (i = istart; ; i+=dir)\n    {\n        if ((dir>0 && i>=n) || (dir<0 && i<0) || i>=(int)obj->arrCnt)\n            break;\n        if (obj->arr[i] && Jsi_ValueCmp(interp, obj->arr[i], seq, JSI_CMP_EXACT)==0) {\n            idx = i;\n            break;\n        }\n    }\nbail:\n    if (op == 3)\n        Jsi_ValueMakeBool(interp, ret, (idx!=-1));\n    else\n        Jsi_ValueMakeNumber(interp, ret, idx);\n    return JSI_OK;\n}",
    "abstract_func": "static Jsi_RC jsi_ArrayIndexSubCmd(Jsi_Interp *VAR_0, Jsi_Value *VAR_1, Jsi_Value *VAR_2,Jsi_Value **VAR_3, Jsi_Func *VAR_4, int VAR_5) {\n    int VAR_6 = 0, VAR_7, VAR_8 = 0, VAR_9=1, VAR_10=-1;\n    Jsi_Value *VAR_11 = Jsi_ValueArrayIndex(VAR_0, VAR_1, 0),\n        *VAR_12 = Jsi_ValueArrayIndex(VAR_0, VAR_1, 1);\n    Jsi_Obj *VAR_13 = VAR_2->d.obj;\n    if (VAR_2->vt != VAR_14 || !Jsi_ObjIsArray(VAR_0, VAR_2->d.obj))\n        return Jsi_LogError(\"expected array object\");\n\n    if (!VAR_11) {\n        goto bail;\n    }\n    \n    VAR_7 = jsi_SizeOfArray(VAR_0, VAR_13);    \n    if (VAR_7 == 0) {\n        goto bail;\n    }\n    Jsi_Number VAR_15;\n    if (VAR_5 == 2) {\n        VAR_6 = VAR_7-1;\n    }\n    if (VAR_12) {\n        if (Jsi_GetNumberFromValue(VAR_0,VAR_12, &VAR_15)!=VAR_16) return VAR_17;\n        VAR_6 = (int)VAR_15;\n        if (VAR_6 > VAR_7)\n            goto bail;\n        if (VAR_6 < 0)\n            VAR_6 = (VAR_7+VAR_6);\n        if (VAR_6<0)\n            goto bail;\n    }\n    if (VAR_5 == 2) {\n        VAR_6 = VAR_7-1;\n        VAR_9 = -1;\n    }\n    Jsi_ObjListifyArray(VAR_0, VAR_13);\n    for (VAR_8 = VAR_6; ; VAR_8+=VAR_9)\n    {\n        if ((VAR_9>0 && VAR_8>=VAR_7) || (VAR_9<0 && VAR_8<0) || VAR_8>=(int)VAR_13->arrCnt)\n            break;\n        if (VAR_13->arr[VAR_8] && Jsi_ValueCmp(VAR_0, VAR_13->arr[VAR_8], VAR_11, VAR_18)==0) {\n            VAR_10 = VAR_8;\n            break;\n        }\n    }\nbail:\n    if (VAR_5 == 3)\n        Jsi_ValueMakeBool(VAR_0, VAR_3, (VAR_10!=-1));\n    else\n        Jsi_ValueMakeNumber(VAR_0, VAR_3, VAR_10);\n    return VAR_16;\n}",
    "func_graph_path": "pcmacdon/jsish/e362c0a34c814bebb78f5ec2fc3747475d1ed259/jsiArray.c/vul/after/2.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -18,7 +18,8 @@\n     if (op == 2) {\n         istart = n-1;\n     }\n-    if (start && Jsi_GetNumberFromValue(interp,start, &nstart)==JSI_OK) {\n+    if (start) {\n+        if (Jsi_GetNumberFromValue(interp,start, &nstart)!=JSI_OK) return JSI_ERROR;\n         istart = (int)nstart;\n         if (istart > n)\n             goto bail;",
    "diff_line_info": {
        "deleted_lines": [
            "    if (start && Jsi_GetNumberFromValue(interp,start, &nstart)==JSI_OK) {"
        ],
        "added_lines": [
            "    if (start) {",
            "        if (Jsi_GetNumberFromValue(interp,start, &nstart)!=JSI_OK) return JSI_ERROR;"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}