{
    "cve_id": "CVE-2013-4512",
    "cwe_ids": [
        "CWE-119"
    ],
    "cvss_vector": "AV:L/AC:M/Au:N/C:N/I:N/A:C",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "uml: check length in exitcode_proc_write()\n\nWe don't cap the size of buffer from the user so we could write past the\nend of the array here.  Only root can write to this file.\n\nReported-by: Nico Golde <nico@ngolde.de>\nReported-by: Fabian Yamaguchi <fabs@goesec.de>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "commit_hash": "201f99f170df14ba52ea4c52847779042b7a623b",
    "git_url": "https://github.com/torvalds/linux/commit/201f99f170df14ba52ea4c52847779042b7a623b",
    "file_path": "arch/um/kernel/exitcode.c",
    "func_name": "exitcode_proc_write",
    "func_before": "static ssize_t exitcode_proc_write(struct file *file,\n\t\tconst char __user *buffer, size_t count, loff_t *pos)\n{\n\tchar *end, buf[sizeof(\"nnnnn\\0\")];\n\tint tmp;\n\n\tif (copy_from_user(buf, buffer, count))\n\t\treturn -EFAULT;\n\n\ttmp = simple_strtol(buf, &end, 0);\n\tif ((*end != '\\0') && !isspace(*end))\n\t\treturn -EINVAL;\n\n\tuml_exitcode = tmp;\n\treturn count;\n}",
    "abstract_func_before": "static ssize_t exitcode_proc_write(struct file *file,\n\t\tconst char __user *VAR_0, size_t VAR_1, loff_t *VAR_2)\n{\n\tchar *VAR_3, VAR_4[sizeof(\"nnnnn\\0\")];\n\tint VAR_5;\n\n\tif (copy_from_user(VAR_4, VAR_0, VAR_1))\n\t\treturn -VAR_6;\n\n\tVAR_5 = simple_strtol(VAR_4, &VAR_3, 0);\n\tif ((*VAR_3 != '\\0') && !isspace(*VAR_3))\n\t\treturn -VAR_7;\n\n\tVAR_8 = VAR_5;\n\treturn VAR_1;\n}",
    "func_graph_path_before": null,
    "func": "static ssize_t exitcode_proc_write(struct file *file,\n\t\tconst char __user *buffer, size_t count, loff_t *pos)\n{\n\tchar *end, buf[sizeof(\"nnnnn\\0\")];\n\tsize_t size;\n\tint tmp;\n\n\tsize = min(count, sizeof(buf));\n\tif (copy_from_user(buf, buffer, size))\n\t\treturn -EFAULT;\n\n\ttmp = simple_strtol(buf, &end, 0);\n\tif ((*end != '\\0') && !isspace(*end))\n\t\treturn -EINVAL;\n\n\tuml_exitcode = tmp;\n\treturn count;\n}",
    "abstract_func": "static ssize_t exitcode_proc_write(struct file *file,\n\t\tconst char __user *VAR_0, size_t VAR_1, loff_t *VAR_2)\n{\n\tchar *VAR_3, VAR_4[sizeof(\"nnnnn\\0\")];\n\tsize_t VAR_5;\n\tint VAR_6;\n\n\tVAR_5 = min(VAR_1, sizeof(VAR_4));\n\tif (copy_from_user(VAR_4, VAR_0, VAR_5))\n\t\treturn -VAR_7;\n\n\tVAR_6 = simple_strtol(VAR_4, &VAR_3, 0);\n\tif ((*VAR_3 != '\\0') && !isspace(*VAR_3))\n\t\treturn -VAR_8;\n\n\tVAR_9 = VAR_6;\n\treturn VAR_1;\n}",
    "func_graph_path": null,
    "diff_func": "--- func_before\n+++ func_after\n@@ -2,9 +2,11 @@\n \t\tconst char __user *buffer, size_t count, loff_t *pos)\n {\n \tchar *end, buf[sizeof(\"nnnnn\\0\")];\n+\tsize_t size;\n \tint tmp;\n \n-\tif (copy_from_user(buf, buffer, count))\n+\tsize = min(count, sizeof(buf));\n+\tif (copy_from_user(buf, buffer, size))\n \t\treturn -EFAULT;\n \n \ttmp = simple_strtol(buf, &end, 0);",
    "diff_line_info": {
        "deleted_lines": [
            "\tif (copy_from_user(buf, buffer, count))"
        ],
        "added_lines": [
            "\tsize_t size;",
            "\tsize = min(count, sizeof(buf));",
            "\tif (copy_from_user(buf, buffer, size))"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}