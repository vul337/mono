{
    "cve_id": "CVE-2011-0064",
    "cwe_ids": [
        "CWE-Other"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
    "cvss_is_v3": false,
    "repo_name": "harfbuzz",
    "commit_msg": "",
    "commit_hash": "a6a79df5fe2ed2cd307e7a991346faee164e70d9",
    "git_url": "http://cgit.freedesktop.org/harfbuzz/commit/?id=a6a79df5fe2ed2cd307e7a991346faee164e70d9",
    "file_path": "src/hb-buffer.cc",
    "func_name": "_hb_buffer_add_output_glyph",
    "func_before": "void\n_hb_buffer_add_output_glyph (hb_buffer_t *buffer,\n\t\t\t     hb_codepoint_t glyph_index,\n\t\t\t     unsigned short component,\n\t\t\t     unsigned short lig_id)\n{\n  hb_internal_glyph_info_t *info;\n\n  if (buffer->out_info != buffer->info)\n  {\n    hb_buffer_ensure (buffer, buffer->out_len + 1);\n    buffer->out_info[buffer->out_len] = buffer->info[buffer->i];\n  }\n  else if (buffer->out_len != buffer->i)\n    buffer->out_info[buffer->out_len] = buffer->info[buffer->i];\n\n  info = &buffer->out_info[buffer->out_len];\n  info->codepoint = glyph_index;\n  if (component != 0xFFFF)\n    info->component = component;\n  if (lig_id != 0xFFFF)\n    info->lig_id = lig_id;\n  info->gproperty = HB_BUFFER_GLYPH_PROPERTIES_UNKNOWN;\n\n  buffer->i++;\n  buffer->out_len++;\n}",
    "abstract_func_before": "void\n_hb_buffer_add_output_glyph (hb_buffer_t *VAR_0,\n\t\t\t     hb_codepoint_t VAR_1,\n\t\t\t     unsigned short VAR_2,\n\t\t\t     unsigned short VAR_3)\n{\n  hb_internal_glyph_info_t *VAR_4;\n\n  if (VAR_0->out_info != VAR_0->info)\n  {\n    hb_buffer_ensure (VAR_0, VAR_0->out_len + 1);\n    VAR_0->out_info[VAR_0->out_len] = VAR_0->info[VAR_0->i];\n  }\n  else if (VAR_0->out_len != VAR_0->i)\n    VAR_0->out_info[VAR_0->out_len] = VAR_0->info[VAR_0->i];\n\n  VAR_4 = &VAR_0->out_info[VAR_0->out_len];\n  VAR_4->codepoint = VAR_1;\n  if (VAR_2 != 0xFFFF)\n    VAR_4->component = VAR_2;\n  if (VAR_3 != 0xFFFF)\n    VAR_4->lig_id = VAR_3;\n  VAR_4->gproperty = VAR_5;\n\n  VAR_0->i++;\n  VAR_0->out_len++;\n}",
    "func_graph_path_before": "harfbuzz/a6a79df5fe2ed2cd307e7a991346faee164e70d9/hb-buffer.cc/vul/before/2.json",
    "func": "void\n_hb_buffer_add_output_glyph (hb_buffer_t *buffer,\n\t\t\t     hb_codepoint_t glyph_index,\n\t\t\t     unsigned short component,\n\t\t\t     unsigned short lig_id)\n{\n  hb_internal_glyph_info_t *info;\n\n  if (buffer->out_info != buffer->info)\n  {\n    if (unlikely (!hb_buffer_ensure (buffer, buffer->out_len + 1))) return;\n    buffer->out_info[buffer->out_len] = buffer->info[buffer->i];\n  }\n  else if (buffer->out_len != buffer->i)\n    buffer->out_info[buffer->out_len] = buffer->info[buffer->i];\n\n  info = &buffer->out_info[buffer->out_len];\n  info->codepoint = glyph_index;\n  if (component != 0xFFFF)\n    info->component = component;\n  if (lig_id != 0xFFFF)\n    info->lig_id = lig_id;\n  info->gproperty = HB_BUFFER_GLYPH_PROPERTIES_UNKNOWN;\n\n  buffer->i++;\n  buffer->out_len++;\n}",
    "abstract_func": "void\n_hb_buffer_add_output_glyph (hb_buffer_t *VAR_0,\n\t\t\t     hb_codepoint_t VAR_1,\n\t\t\t     unsigned short VAR_2,\n\t\t\t     unsigned short VAR_3)\n{\n  hb_internal_glyph_info_t *VAR_4;\n\n  if (VAR_0->out_info != VAR_0->info)\n  {\n    if (unlikely (!hb_buffer_ensure (VAR_0, VAR_0->out_len + 1))) return;\n    VAR_0->out_info[VAR_0->out_len] = VAR_0->info[VAR_0->i];\n  }\n  else if (VAR_0->out_len != VAR_0->i)\n    VAR_0->out_info[VAR_0->out_len] = VAR_0->info[VAR_0->i];\n\n  VAR_4 = &VAR_0->out_info[VAR_0->out_len];\n  VAR_4->codepoint = VAR_1;\n  if (VAR_2 != 0xFFFF)\n    VAR_4->component = VAR_2;\n  if (VAR_3 != 0xFFFF)\n    VAR_4->lig_id = VAR_3;\n  VAR_4->gproperty = VAR_5;\n\n  VAR_0->i++;\n  VAR_0->out_len++;\n}",
    "func_graph_path": "harfbuzz/a6a79df5fe2ed2cd307e7a991346faee164e70d9/hb-buffer.cc/vul/after/2.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -8,7 +8,7 @@\n \n   if (buffer->out_info != buffer->info)\n   {\n-    hb_buffer_ensure (buffer, buffer->out_len + 1);\n+    if (unlikely (!hb_buffer_ensure (buffer, buffer->out_len + 1))) return;\n     buffer->out_info[buffer->out_len] = buffer->info[buffer->i];\n   }\n   else if (buffer->out_len != buffer->i)",
    "diff_line_info": {
        "deleted_lines": [
            "    hb_buffer_ensure (buffer, buffer->out_len + 1);"
        ],
        "added_lines": [
            "    if (unlikely (!hb_buffer_ensure (buffer, buffer->out_len + 1))) return;"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}