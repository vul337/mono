{
    "cve_id": "CVE-2022-1116",
    "cwe_ids": [
        "CWE-190"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "There is a bunch of cases where we can grab req->fs but not put it, this\ncan be used to cause a controllable overflow with further implications.\nRelease req->fs in the request free path and make sure we zero the field\nto be sure we don't do it twice.\n\nFixes: cac68d12c531 (\"io_uring: grab ->fs as part of async offload\")\nReported-by: Bing-Jhong Billy Jheng <billy@starlabs.sg>\nSigned-off-by: Pavel Begunkov <asml.silence@gmail.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n",
    "commit_hash": "1a623d361ffe5cecd4244a02f449528416360038",
    "git_url": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/fs/io_uring.c?h=v5.4.189&h=1a623d361ffe5cecd4244a02f449528416360038",
    "file_path": "fs/io_uring.c",
    "func_name": "__io_free_req",
    "func_before": "static void __io_free_req(struct io_kiocb *req)\n{\n\tif (req->file && !(req->flags & REQ_F_FIXED_FILE))\n\t\tfput(req->file);\n\tpercpu_ref_put(&req->ctx->refs);\n\tkmem_cache_free(req_cachep, req);\n}",
    "abstract_func_before": "static void __io_free_req(struct io_kiocb *VAR_0)\n{\n\tif (VAR_0->file && !(VAR_0->flags & VAR_1))\n\t\tfput(VAR_0->file);\n\tpercpu_ref_put(&VAR_0->ctx->refs);\n\tkmem_cache_free(VAR_2, VAR_0);\n}",
    "func_graph_path_before": "torvalds/linux/1a623d361ffe5cecd4244a02f449528416360038/io_uring.c/vul/before/1.json",
    "func": "static void __io_free_req(struct io_kiocb *req)\n{\n\tio_req_put_fs(req);\n\tif (req->file && !(req->flags & REQ_F_FIXED_FILE))\n\t\tfput(req->file);\n\tpercpu_ref_put(&req->ctx->refs);\n\tkmem_cache_free(req_cachep, req);\n}",
    "abstract_func": "static void __io_free_req(struct io_kiocb *VAR_0)\n{\n\tio_req_put_fs(VAR_0);\n\tif (VAR_0->file && !(VAR_0->flags & VAR_1))\n\t\tfput(VAR_0->file);\n\tpercpu_ref_put(&VAR_0->ctx->refs);\n\tkmem_cache_free(VAR_2, VAR_0);\n}",
    "func_graph_path": "torvalds/linux/1a623d361ffe5cecd4244a02f449528416360038/io_uring.c/vul/after/1.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,6 @@\n static void __io_free_req(struct io_kiocb *req)\n {\n+\tio_req_put_fs(req);\n \tif (req->file && !(req->flags & REQ_F_FIXED_FILE))\n \t\tfput(req->file);\n \tpercpu_ref_put(&req->ctx->refs);",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "\tio_req_put_fs(req);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}