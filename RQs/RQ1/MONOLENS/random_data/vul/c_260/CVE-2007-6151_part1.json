{
    "cve_id": "CVE-2007-6151",
    "cwe_ids": [
        "CWE-119"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "Fix possible memory overrun issue in the isdn ioctl code.\n\nFound by ADLAB <adlab@venustech.com.cn>\n\nSigned-off-by: Karsten Keil <kkeil@suse.de>\nCc: ADLAB <adlab@venustech.com.cn>\nCc: <stable@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\n",
    "commit_hash": "eafe1aa37e6ec2d56f14732b5240c4dd09f0613a",
    "git_url": "http://git.kernel.org/?p=linux/kernel/git/torvalds/linux.git;a=commitdiff;h=eafe1aa37e6ec2d56f14732b5240c4dd09f0613a",
    "file_path": "drivers/isdn/i4l/isdn_common.c",
    "func_name": "isdn_ioctl",
    "func_before": "static int\nisdn_ioctl(struct inode *inode, struct file *file, uint cmd, ulong arg)\n{\n\tuint minor = iminor(inode);\n\tisdn_ctrl c;\n\tint drvidx;\n\tint chidx;\n\tint ret;\n\tint i;\n\tchar __user *p;\n\tchar *s;\n\tunion iocpar {\n\t\tchar name[10];\n\t\tchar bname[22];\n\t\tisdn_ioctl_struct iocts;\n\t\tisdn_net_ioctl_phone phone;\n\t\tisdn_net_ioctl_cfg cfg;\n\t} iocpar;\n\tvoid __user *argp = (void __user *)arg;\n\n#define name  iocpar.name\n#define bname iocpar.bname\n#define iocts iocpar.iocts\n#define phone iocpar.phone\n#define cfg   iocpar.cfg\n\n\tif (minor == ISDN_MINOR_STATUS) {\n\t\tswitch (cmd) {\n\t\t\tcase IIOCGETDVR:\n\t\t\t\treturn (TTY_DV +\n\t\t\t\t\t(NET_DV << 8) +\n\t\t\t\t\t(INF_DV << 16));\n\t\t\tcase IIOCGETCPS:\n\t\t\t\tif (arg) {\n\t\t\t\t\tulong __user *p = argp;\n\t\t\t\t\tint i;\n\t\t\t\t\tif (!access_ok(VERIFY_WRITE, p,\n\t\t\t\t\t\t\tsizeof(ulong) * ISDN_MAX_CHANNELS * 2))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tfor (i = 0; i < ISDN_MAX_CHANNELS; i++) {\n\t\t\t\t\t\tput_user(dev->ibytes[i], p++);\n\t\t\t\t\t\tput_user(dev->obytes[i], p++);\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tbreak;\n#ifdef CONFIG_NETDEVICES\n\t\t\tcase IIOCNETGPN:\n\t\t\t\t/* Get peer phone number of a connected \n\t\t\t\t * isdn network interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&phone, argp, sizeof(phone)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\treturn isdn_net_getpeer(&phone, argp);\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n#endif\n\t\t\tdefault:\n\t\t\t\treturn -EINVAL;\n\t\t}\n\t}\n\tif (!dev->drivers)\n\t\treturn -ENODEV;\n\tif (minor <= ISDN_MINOR_BMAX) {\n\t\tdrvidx = isdn_minor2drv(minor);\n\t\tif (drvidx < 0)\n\t\t\treturn -ENODEV;\n\t\tchidx = isdn_minor2chan(minor);\n\t\tif (!(dev->drv[drvidx]->flags & DRV_FLAG_RUNNING))\n\t\t\treturn -ENODEV;\n\t\treturn 0;\n\t}\n\tif (minor <= ISDN_MINOR_CTRLMAX) {\n/*\n * isdn net devices manage lots of configuration variables as linked lists.\n * Those lists must only be manipulated from user space. Some of the ioctl's\n * service routines access user space and are not atomic. Therefor, ioctl's\n * manipulating the lists and ioctl's sleeping while accessing the lists\n * are serialized by means of a semaphore.\n */\n\t\tswitch (cmd) {\n\t\t\tcase IIOCNETDWRSET:\n\t\t\t\tprintk(KERN_INFO \"INFO: ISDN_DW_ABC_EXTENSION not enabled\\n\");\n\t\t\t\treturn(-EINVAL);\n\t\t\tcase IIOCNETLCR:\n\t\t\t\tprintk(KERN_INFO \"INFO: ISDN_ABC_LCR_SUPPORT not enabled\\n\");\n\t\t\t\treturn -ENODEV;\n#ifdef CONFIG_NETDEVICES\n\t\t\tcase IIOCNETAIF:\n\t\t\t\t/* Add a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\ts = name;\n\t\t\t\t} else {\n\t\t\t\t\ts = NULL;\n\t\t\t\t}\n\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\tif( ret ) return ret;\n\t\t\t\tif ((s = isdn_net_new(s, NULL))) {\n\t\t\t\t\tif (copy_to_user(argp, s, strlen(s) + 1)){\n\t\t\t\t\t\tret = -EFAULT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret = 0;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tret = -ENODEV;\n\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\treturn ret;\n\t\t\tcase IIOCNETASL:\n\t\t\t\t/* Add a slave to a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(bname, argp, sizeof(bname) - 1))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\tif( ret ) return ret;\n\t\t\t\tif ((s = isdn_net_newslave(bname))) {\n\t\t\t\t\tif (copy_to_user(argp, s, strlen(s) + 1)){\n\t\t\t\t\t\tret = -EFAULT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret = 0;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tret = -ENODEV;\n\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\treturn ret;\n\t\t\tcase IIOCNETDIF:\n\t\t\t\t/* Delete a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\t\tif( ret ) return ret;\n\t\t\t\t\tret = isdn_net_rm(name);\n\t\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETSCF:\n\t\t\t\t/* Set configurable parameters of a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&cfg, argp, sizeof(cfg)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\treturn isdn_net_setcfg(&cfg);\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETGCF:\n\t\t\t\t/* Get configurable parameters of a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&cfg, argp, sizeof(cfg)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tif (!(ret = isdn_net_getcfg(&cfg))) {\n\t\t\t\t\t\tif (copy_to_user(argp, &cfg, sizeof(cfg)))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t}\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETANM:\n\t\t\t\t/* Add a phone-number to a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&phone, argp, sizeof(phone)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\t\tif( ret ) return ret;\n\t\t\t\t\tret = isdn_net_addphone(&phone);\n\t\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETGNM:\n\t\t\t\t/* Get list of phone-numbers of a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&phone, argp, sizeof(phone)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\t\tif( ret ) return ret;\n\t\t\t\t\tret = isdn_net_getphones(&phone, argp);\n\t\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETDNM:\n\t\t\t\t/* Delete a phone-number of a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&phone, argp, sizeof(phone)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\t\tif( ret ) return ret;\n\t\t\t\t\tret = isdn_net_delphone(&phone);\n\t\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETDIL:\n\t\t\t\t/* Force dialing of a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\treturn isdn_net_force_dial(name);\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n#ifdef CONFIG_ISDN_PPP\n\t\t\tcase IIOCNETALN:\n\t\t\t\tif (!arg)\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\treturn -EFAULT;\n\t\t\t\treturn isdn_ppp_dial_slave(name);\n\t\t\tcase IIOCNETDLN:\n\t\t\t\tif (!arg)\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\treturn -EFAULT;\n\t\t\t\treturn isdn_ppp_hangup_slave(name);\n#endif\n\t\t\tcase IIOCNETHUP:\n\t\t\t\t/* Force hangup of a network-interface */\n\t\t\t\tif (!arg)\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\treturn -EFAULT;\n\t\t\t\treturn isdn_net_force_hangup(name);\n\t\t\t\tbreak;\n#endif                          /* CONFIG_NETDEVICES */\n\t\t\tcase IIOCSETVER:\n\t\t\t\tdev->net_verbose = arg;\n\t\t\t\tprintk(KERN_INFO \"isdn: Verbose-Level is %d\\n\", dev->net_verbose);\n\t\t\t\treturn 0;\n\t\t\tcase IIOCSETGST:\n\t\t\t\tif (arg)\n\t\t\t\t\tdev->global_flags |= ISDN_GLOBAL_STOPPED;\n\t\t\t\telse\n\t\t\t\t\tdev->global_flags &= ~ISDN_GLOBAL_STOPPED;\n\t\t\t\tprintk(KERN_INFO \"isdn: Global Mode %s\\n\",\n\t\t\t\t       (dev->global_flags & ISDN_GLOBAL_STOPPED) ? \"stopped\" : \"running\");\n\t\t\t\treturn 0;\n\t\t\tcase IIOCSETBRJ:\n\t\t\t\tdrvidx = -1;\n\t\t\t\tif (arg) {\n\t\t\t\t\tint i;\n\t\t\t\t\tchar *p;\n\t\t\t\t\tif (copy_from_user(&iocts, argp,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tif (strlen(iocts.drvid)) {\n\t\t\t\t\t\tif ((p = strchr(iocts.drvid, ',')))\n\t\t\t\t\t\t\t*p = 0;\n\t\t\t\t\t\tdrvidx = -1;\n\t\t\t\t\t\tfor (i = 0; i < ISDN_MAX_DRIVERS; i++)\n\t\t\t\t\t\t\tif (!(strcmp(dev->drvid[i], iocts.drvid))) {\n\t\t\t\t\t\t\t\tdrvidx = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (drvidx == -1)\n\t\t\t\t\treturn -ENODEV;\n\t\t\t\tif (iocts.arg)\n\t\t\t\t\tdev->drv[drvidx]->flags |= DRV_FLAG_REJBUS;\n\t\t\t\telse\n\t\t\t\t\tdev->drv[drvidx]->flags &= ~DRV_FLAG_REJBUS;\n\t\t\t\treturn 0;\n\t\t\tcase IIOCSIGPRF:\n\t\t\t\tdev->profd = current;\n\t\t\t\treturn 0;\n\t\t\t\tbreak;\n\t\t\tcase IIOCGETPRF:\n\t\t\t\t/* Get all Modem-Profiles */\n\t\t\t\tif (arg) {\n\t\t\t\t\tchar __user *p = argp;\n\t\t\t\t\tint i;\n\n\t\t\t\t\tif (!access_ok(VERIFY_WRITE, argp,\n\t\t\t\t\t(ISDN_MODEM_NUMREG + ISDN_MSNLEN + ISDN_LMSNLEN)\n\t\t\t\t\t\t   * ISDN_MAX_CHANNELS))\n\t\t\t\t\t\treturn -EFAULT;\n\n\t\t\t\t\tfor (i = 0; i < ISDN_MAX_CHANNELS; i++) {\n\t\t\t\t\t\tif (copy_to_user(p, dev->mdm.info[i].emu.profile,\n\t\t\t\t\t\t      ISDN_MODEM_NUMREG))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_MODEM_NUMREG;\n\t\t\t\t\t\tif (copy_to_user(p, dev->mdm.info[i].emu.pmsn, ISDN_MSNLEN))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_MSNLEN;\n\t\t\t\t\t\tif (copy_to_user(p, dev->mdm.info[i].emu.plmsn, ISDN_LMSNLEN))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_LMSNLEN;\n\t\t\t\t\t}\n\t\t\t\t\treturn (ISDN_MODEM_NUMREG + ISDN_MSNLEN + ISDN_LMSNLEN) * ISDN_MAX_CHANNELS;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tbreak;\n\t\t\tcase IIOCSETPRF:\n\t\t\t\t/* Set all Modem-Profiles */\n\t\t\t\tif (arg) {\n\t\t\t\t\tchar __user *p = argp;\n\t\t\t\t\tint i;\n\n\t\t\t\t\tif (!access_ok(VERIFY_READ, argp,\n\t\t\t\t\t(ISDN_MODEM_NUMREG + ISDN_MSNLEN + ISDN_LMSNLEN)\n\t\t\t\t\t\t   * ISDN_MAX_CHANNELS))\n\t\t\t\t\t\treturn -EFAULT;\n\n\t\t\t\t\tfor (i = 0; i < ISDN_MAX_CHANNELS; i++) {\n\t\t\t\t\t\tif (copy_from_user(dev->mdm.info[i].emu.profile, p,\n\t\t\t\t\t\t     ISDN_MODEM_NUMREG))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_MODEM_NUMREG;\n\t\t\t\t\t\tif (copy_from_user(dev->mdm.info[i].emu.plmsn, p, ISDN_LMSNLEN))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_LMSNLEN;\n\t\t\t\t\t\tif (copy_from_user(dev->mdm.info[i].emu.pmsn, p, ISDN_MSNLEN))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_MSNLEN;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tbreak;\n\t\t\tcase IIOCSETMAP:\n\t\t\tcase IIOCGETMAP:\n\t\t\t\t/* Set/Get MSN->EAZ-Mapping for a driver */\n\t\t\t\tif (arg) {\n\n\t\t\t\t\tif (copy_from_user(&iocts, argp,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tif (strlen(iocts.drvid)) {\n\t\t\t\t\t\tdrvidx = -1;\n\t\t\t\t\t\tfor (i = 0; i < ISDN_MAX_DRIVERS; i++)\n\t\t\t\t\t\t\tif (!(strcmp(dev->drvid[i], iocts.drvid))) {\n\t\t\t\t\t\t\t\tdrvidx = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tdrvidx = 0;\n\t\t\t\t\tif (drvidx == -1)\n\t\t\t\t\t\treturn -ENODEV;\n\t\t\t\t\tif (cmd == IIOCSETMAP) {\n\t\t\t\t\t\tint loop = 1;\n\n\t\t\t\t\t\tp = (char __user *) iocts.arg;\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\twhile (loop) {\n\t\t\t\t\t\t\tint j = 0;\n\n\t\t\t\t\t\t\twhile (1) {\n\t\t\t\t\t\t\t\tif (!access_ok(VERIFY_READ, p, 1))\n\t\t\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\t\t\tget_user(bname[j], p++);\n\t\t\t\t\t\t\t\tswitch (bname[j]) {\n\t\t\t\t\t\t\t\t\tcase '\\0':\n\t\t\t\t\t\t\t\t\t\tloop = 0;\n\t\t\t\t\t\t\t\t\t\t/* Fall through */\n\t\t\t\t\t\t\t\t\tcase ',':\n\t\t\t\t\t\t\t\t\t\tbname[j] = '\\0';\n\t\t\t\t\t\t\t\t\t\tstrcpy(dev->drv[drvidx]->msn2eaz[i], bname);\n\t\t\t\t\t\t\t\t\t\tj = ISDN_MSNLEN;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (j >= ISDN_MSNLEN)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (++i > 9)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp = (char __user *) iocts.arg;\n\t\t\t\t\t\tfor (i = 0; i < 10; i++) {\n\t\t\t\t\t\t\tsprintf(bname, \"%s%s\",\n\t\t\t\t\t\t\t\tstrlen(dev->drv[drvidx]->msn2eaz[i]) ?\n\t\t\t\t\t\t\t\tdev->drv[drvidx]->msn2eaz[i] : \"_\",\n\t\t\t\t\t\t\t\t(i < 9) ? \",\" : \"\\0\");\n\t\t\t\t\t\t\tif (copy_to_user(p, bname, strlen(bname) + 1))\n\t\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\t\tp += strlen(bname);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCDBGVAR:\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_to_user(argp, &dev, sizeof(ulong)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif ((cmd & IIOCDRVCTL) == IIOCDRVCTL)\n\t\t\t\t\tcmd = ((cmd >> _IOC_NRSHIFT) & _IOC_NRMASK) & ISDN_DRVIOCTL_MASK;\n\t\t\t\telse\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tif (arg) {\n\t\t\t\t\tint i;\n\t\t\t\t\tchar *p;\n\t\t\t\t\tif (copy_from_user(&iocts, argp, sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tif (strlen(iocts.drvid)) {\n\t\t\t\t\t\tif ((p = strchr(iocts.drvid, ',')))\n\t\t\t\t\t\t\t*p = 0;\n\t\t\t\t\t\tdrvidx = -1;\n\t\t\t\t\t\tfor (i = 0; i < ISDN_MAX_DRIVERS; i++)\n\t\t\t\t\t\t\tif (!(strcmp(dev->drvid[i], iocts.drvid))) {\n\t\t\t\t\t\t\t\tdrvidx = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tdrvidx = 0;\n\t\t\t\t\tif (drvidx == -1)\n\t\t\t\t\t\treturn -ENODEV;\n\t\t\t\t\tif (!access_ok(VERIFY_WRITE, argp,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tc.driver = drvidx;\n\t\t\t\t\tc.command = ISDN_CMD_IOCTL;\n\t\t\t\t\tc.arg = cmd;\n\t\t\t\t\tmemcpy(c.parm.num, &iocts.arg, sizeof(ulong));\n\t\t\t\t\tret = isdn_command(&c);\n\t\t\t\t\tmemcpy(&iocts.arg, c.parm.num, sizeof(ulong));\n\t\t\t\t\tif (copy_to_user(argp, &iocts, sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t}\n\t}\n#ifdef CONFIG_ISDN_PPP\n\tif (minor <= ISDN_MINOR_PPPMAX)\n\t\treturn (isdn_ppp_ioctl(minor - ISDN_MINOR_PPP, file, cmd, arg));\n#endif\n\treturn -ENODEV;\n\n#undef name\n#undef bname\n#undef iocts\n#undef phone\n#undef cfg\n}",
    "abstract_func_before": "static int\nisdn_ioctl(struct inode *inode, struct file *file, uint VAR_0, ulong VAR_1)\n{\n\tuint VAR_2 = iminor(inode);\n\tisdn_ctrl VAR_3;\n\tint VAR_4;\n\tint VAR_5;\n\tint VAR_6;\n\tint VAR_7;\n\tchar __user *VAR_8;\n\tchar *VAR_9;\n\tunion iocpar {\n\t\tchar name[10];\n\t\tchar bname[22];\n\t\tisdn_ioctl_struct iocts;\n\t\tisdn_net_ioctl_phone phone;\n\t\tisdn_net_ioctl_cfg cfg;\n\t} iocpar;\n\tvoid __user *VAR_10 = (void __user *)VAR_1;\n\n#define VAR_11  iocpar.name\n#define VAR_12 iocpar.bname\n#define VAR_13 iocpar.iocts\n#define VAR_14 iocpar.phone\n#define VAR_15   iocpar.cfg\n\n\tif (VAR_2 == VAR_16) {\n\t\tswitch (VAR_0) {\n\t\t\tcase VAR_17:\n\t\t\t\treturn (VAR_18 +\n\t\t\t\t\t(VAR_19 << 8) +\n\t\t\t\t\t(VAR_20 << 16));\n\t\t\tcase VAR_21:\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tulong __user *VAR_8 = VAR_10;\n\t\t\t\t\tint VAR_7;\n\t\t\t\t\tif (!access_ok(VAR_22, VAR_8,\n\t\t\t\t\t\t\tsizeof(ulong) * VAR_23 * 2))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_23; VAR_7++) {\n\t\t\t\t\t\tput_user(VAR_25->ibytes[VAR_7], VAR_8++);\n\t\t\t\t\t\tput_user(VAR_25->obytes[VAR_7], VAR_8++);\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tbreak;\n#ifdef VAR_27\n\t\t\tcase VAR_28:\n\t\t\t\t/* COMMENT_0 */\n                                \n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_14, VAR_10, sizeof(VAR_14)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\treturn isdn_net_getpeer(&VAR_14, VAR_10);\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n#endif\n\t\t\tdefault:\n\t\t\t\treturn -VAR_26;\n\t\t}\n\t}\n\tif (!VAR_25->drivers)\n\t\treturn -VAR_29;\n\tif (VAR_2 <= VAR_30) {\n\t\tVAR_4 = isdn_minor2drv(VAR_2);\n\t\tif (VAR_4 < 0)\n\t\t\treturn -VAR_29;\n\t\tVAR_5 = isdn_minor2chan(VAR_2);\n\t\tif (!(VAR_25->drv[VAR_4]->flags & VAR_31))\n\t\t\treturn -VAR_29;\n\t\treturn 0;\n\t}\n\tif (VAR_2 <= VAR_32) {\n/* COMMENT_2 */\n                                                                           \n                                                                            \n                                                                           \n                                                                        \n                                          \n   \n\t\tswitch (VAR_0) {\n\t\t\tcase VAR_33:\n\t\t\t\tprintk(KERN_INFO \"INFO: ISDN_DW_ABC_EXTENSION not enabled\\n\");\n\t\t\t\treturn(-VAR_26);\n\t\t\tcase VAR_34:\n\t\t\t\tprintk(KERN_INFO \"INFO: ISDN_ABC_LCR_SUPPORT not enabled\\n\");\n\t\t\t\treturn -VAR_29;\n#ifdef VAR_27\n\t\t\tcase VAR_35:\n\t\t\t\t/* COMMENT_9 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_9 = VAR_11;\n\t\t\t\t} else {\n\t\t\t\t\tVAR_9 = NULL;\n\t\t\t\t}\n\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\tif ((VAR_9 = isdn_net_new(VAR_9, NULL))) {\n\t\t\t\t\tif (copy_to_user(VAR_10, VAR_9, strlen(VAR_9) + 1)){\n\t\t\t\t\t\tVAR_6 = -VAR_24;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tVAR_6 = 0;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tVAR_6 = -VAR_29;\n\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\treturn VAR_6;\n\t\t\tcase VAR_36:\n\t\t\t\t/* COMMENT_10 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(VAR_12, VAR_10, sizeof(VAR_12) - 1))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\tif ((VAR_9 = isdn_net_newslave(VAR_12))) {\n\t\t\t\t\tif (copy_to_user(VAR_10, VAR_9, strlen(VAR_9) + 1)){\n\t\t\t\t\t\tVAR_6 = -VAR_24;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tVAR_6 = 0;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tVAR_6 = -VAR_29;\n\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\treturn VAR_6;\n\t\t\tcase VAR_37:\n\t\t\t\t/* COMMENT_11 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\t\tVAR_6 = isdn_net_rm(VAR_11);\n\t\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_38:\n\t\t\t\t/* COMMENT_12 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_15, VAR_10, sizeof(VAR_15)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\treturn isdn_net_setcfg(&VAR_15);\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_39:\n\t\t\t\t/* COMMENT_13 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_15, VAR_10, sizeof(VAR_15)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tif (!(VAR_6 = isdn_net_getcfg(&VAR_15))) {\n\t\t\t\t\t\tif (copy_to_user(VAR_10, &VAR_15, sizeof(VAR_15)))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t}\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_40:\n\t\t\t\t/* COMMENT_14 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_14, VAR_10, sizeof(VAR_14)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\t\tVAR_6 = isdn_net_addphone(&VAR_14);\n\t\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_41:\n\t\t\t\t/* COMMENT_15 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_14, VAR_10, sizeof(VAR_14)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\t\tVAR_6 = isdn_net_getphones(&VAR_14, VAR_10);\n\t\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_42:\n\t\t\t\t/* COMMENT_16 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_14, VAR_10, sizeof(VAR_14)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\t\tVAR_6 = isdn_net_delphone(&VAR_14);\n\t\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_43:\n\t\t\t\t/* COMMENT_17 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\treturn isdn_net_force_dial(VAR_11);\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n#ifdef VAR_44\n\t\t\tcase VAR_45:\n\t\t\t\tif (!VAR_1)\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\treturn -VAR_24;\n\t\t\t\treturn isdn_ppp_dial_slave(VAR_11);\n\t\t\tcase VAR_46:\n\t\t\t\tif (!VAR_1)\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\treturn -VAR_24;\n\t\t\t\treturn isdn_ppp_hangup_slave(VAR_11);\n#endif\n\t\t\tcase VAR_47:\n\t\t\t\t/* COMMENT_18 */\n\t\t\t\tif (!VAR_1)\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\treturn -VAR_24;\n\t\t\t\treturn isdn_net_force_hangup(VAR_11);\n\t\t\t\tbreak;\n#endif                          /* COMMENT_19 */\n\t\t\tcase VAR_48:\n\t\t\t\tVAR_25->net_verbose = VAR_1;\n\t\t\t\tprintk(KERN_INFO \"isdn: Verbose-Level is %d\\n\", VAR_25->net_verbose);\n\t\t\t\treturn 0;\n\t\t\tcase VAR_49:\n\t\t\t\tif (VAR_1)\n\t\t\t\t\tVAR_25->global_flags |= VAR_50;\n\t\t\t\telse\n\t\t\t\t\tVAR_25->global_flags &= ~VAR_50;\n\t\t\t\tprintk(KERN_INFO \"isdn: Global Mode %s\\n\",\n\t\t\t\t       (VAR_25->global_flags & VAR_50) ? \"stopped\" : \"running\");\n\t\t\t\treturn 0;\n\t\t\tcase VAR_51:\n\t\t\t\tVAR_4 = -1;\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tint VAR_7;\n\t\t\t\t\tchar *VAR_8;\n\t\t\t\t\tif (copy_from_user(&VAR_13, VAR_10,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tif (strlen(VAR_13.drvid)) {\n\t\t\t\t\t\tif ((VAR_8 = strchr(VAR_13.drvid, ',')))\n\t\t\t\t\t\t\t*VAR_8 = 0;\n\t\t\t\t\t\tVAR_4 = -1;\n\t\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_52; VAR_7++)\n\t\t\t\t\t\t\tif (!(strcmp(VAR_25->drvid[VAR_7], VAR_13.drvid))) {\n\t\t\t\t\t\t\t\tVAR_4 = VAR_7;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (VAR_4 == -1)\n\t\t\t\t\treturn -VAR_29;\n\t\t\t\tif (VAR_13.arg)\n\t\t\t\t\tVAR_25->drv[VAR_4]->flags |= VAR_53;\n\t\t\t\telse\n\t\t\t\t\tVAR_25->drv[VAR_4]->flags &= ~VAR_53;\n\t\t\t\treturn 0;\n\t\t\tcase VAR_54:\n\t\t\t\tVAR_25->profd = VAR_55;\n\t\t\t\treturn 0;\n\t\t\t\tbreak;\n\t\t\tcase VAR_56:\n\t\t\t\t/* COMMENT_20 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tchar __user *VAR_8 = VAR_10;\n\t\t\t\t\tint VAR_7;\n\n\t\t\t\t\tif (!access_ok(VAR_22, VAR_10,\n\t\t\t\t\t(VAR_57 + VAR_58 + VAR_59)\n\t\t\t\t\t\t   * VAR_23))\n\t\t\t\t\t\treturn -VAR_24;\n\n\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_23; VAR_7++) {\n\t\t\t\t\t\tif (copy_to_user(VAR_8, VAR_25->mdm.info[VAR_7].emu.profile,\n\t\t\t\t\t\t      VAR_57))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_57;\n\t\t\t\t\t\tif (copy_to_user(VAR_8, VAR_25->mdm.info[VAR_7].emu.pmsn, VAR_58))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_58;\n\t\t\t\t\t\tif (copy_to_user(VAR_8, VAR_25->mdm.info[VAR_7].emu.plmsn, VAR_59))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_59;\n\t\t\t\t\t}\n\t\t\t\t\treturn (VAR_57 + VAR_58 + VAR_59) * VAR_23;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tbreak;\n\t\t\tcase VAR_60:\n\t\t\t\t/* COMMENT_21 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tchar __user *VAR_8 = VAR_10;\n\t\t\t\t\tint VAR_7;\n\n\t\t\t\t\tif (!access_ok(VAR_61, VAR_10,\n\t\t\t\t\t(VAR_57 + VAR_58 + VAR_59)\n\t\t\t\t\t\t   * VAR_23))\n\t\t\t\t\t\treturn -VAR_24;\n\n\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_23; VAR_7++) {\n\t\t\t\t\t\tif (copy_from_user(VAR_25->mdm.info[VAR_7].emu.profile, VAR_8,\n\t\t\t\t\t\t     VAR_57))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_57;\n\t\t\t\t\t\tif (copy_from_user(VAR_25->mdm.info[VAR_7].emu.plmsn, VAR_8, VAR_59))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_59;\n\t\t\t\t\t\tif (copy_from_user(VAR_25->mdm.info[VAR_7].emu.pmsn, VAR_8, VAR_58))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_58;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tbreak;\n\t\t\tcase VAR_62:\n\t\t\tcase VAR_63:\n\t\t\t\t/* COMMENT_22 */\n\t\t\t\tif (VAR_1) {\n\n\t\t\t\t\tif (copy_from_user(&VAR_13, VAR_10,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tif (strlen(VAR_13.drvid)) {\n\t\t\t\t\t\tVAR_4 = -1;\n\t\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_52; VAR_7++)\n\t\t\t\t\t\t\tif (!(strcmp(VAR_25->drvid[VAR_7], VAR_13.drvid))) {\n\t\t\t\t\t\t\t\tVAR_4 = VAR_7;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tVAR_4 = 0;\n\t\t\t\t\tif (VAR_4 == -1)\n\t\t\t\t\t\treturn -VAR_29;\n\t\t\t\t\tif (VAR_0 == VAR_62) {\n\t\t\t\t\t\tint VAR_64 = 1;\n\n\t\t\t\t\t\tVAR_8 = (char __user *) VAR_13.arg;\n\t\t\t\t\t\tVAR_7 = 0;\n\t\t\t\t\t\twhile (VAR_64) {\n\t\t\t\t\t\t\tint VAR_65 = 0;\n\n\t\t\t\t\t\t\twhile (1) {\n\t\t\t\t\t\t\t\tif (!access_ok(VAR_61, VAR_8, 1))\n\t\t\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\t\t\tget_user(VAR_12[VAR_65], VAR_8++);\n\t\t\t\t\t\t\t\tswitch (VAR_12[VAR_65]) {\n\t\t\t\t\t\t\t\t\tcase '\\0':\n\t\t\t\t\t\t\t\t\t\tVAR_64 = 0;\n\t\t\t\t\t\t\t\t\t\t/* COMMENT_23 */\n\t\t\t\t\t\t\t\t\tcase ',':\n\t\t\t\t\t\t\t\t\t\tVAR_12[VAR_65] = '\\0';\n\t\t\t\t\t\t\t\t\t\tstrcpy(VAR_25->drv[VAR_4]->msn2eaz[VAR_7], VAR_12);\n\t\t\t\t\t\t\t\t\t\tVAR_65 = VAR_58;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tVAR_65++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (VAR_65 >= VAR_58)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (++VAR_7 > 9)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tVAR_8 = (char __user *) VAR_13.arg;\n\t\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < 10; VAR_7++) {\n\t\t\t\t\t\t\tsprintf(VAR_12, \"%s%s\",\n\t\t\t\t\t\t\t\tstrlen(VAR_25->drv[VAR_4]->msn2eaz[VAR_7]) ?\n\t\t\t\t\t\t\t\tVAR_25->drv[VAR_4]->msn2eaz[VAR_7] : \"_\",\n\t\t\t\t\t\t\t\t(VAR_7 < 9) ? \",\" : \"\\0\");\n\t\t\t\t\t\t\tif (copy_to_user(VAR_8, VAR_12, strlen(VAR_12) + 1))\n\t\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\t\tVAR_8 += strlen(VAR_12);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_66:\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_to_user(VAR_10, &VAR_25, sizeof(ulong)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif ((VAR_0 & VAR_67) == VAR_67)\n\t\t\t\t\tVAR_0 = ((VAR_0 >> VAR_68) & VAR_69) & VAR_70;\n\t\t\t\telse\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tint VAR_7;\n\t\t\t\t\tchar *VAR_8;\n\t\t\t\t\tif (copy_from_user(&VAR_13, VAR_10, sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tif (strlen(VAR_13.drvid)) {\n\t\t\t\t\t\tif ((VAR_8 = strchr(VAR_13.drvid, ',')))\n\t\t\t\t\t\t\t*VAR_8 = 0;\n\t\t\t\t\t\tVAR_4 = -1;\n\t\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_52; VAR_7++)\n\t\t\t\t\t\t\tif (!(strcmp(VAR_25->drvid[VAR_7], VAR_13.drvid))) {\n\t\t\t\t\t\t\t\tVAR_4 = VAR_7;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tVAR_4 = 0;\n\t\t\t\t\tif (VAR_4 == -1)\n\t\t\t\t\t\treturn -VAR_29;\n\t\t\t\t\tif (!access_ok(VAR_22, VAR_10,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_3.driver = VAR_4;\n\t\t\t\t\tVAR_3.command = VAR_71;\n\t\t\t\t\tVAR_3.arg = VAR_0;\n\t\t\t\t\tmemcpy(VAR_3.parm.num, &VAR_13.arg, sizeof(ulong));\n\t\t\t\t\tVAR_6 = isdn_command(&VAR_3);\n\t\t\t\t\tmemcpy(&VAR_13.arg, VAR_3.parm.num, sizeof(ulong));\n\t\t\t\t\tif (copy_to_user(VAR_10, &VAR_13, sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t}\n\t}\n#ifdef VAR_44\n\tif (VAR_2 <= VAR_72)\n\t\treturn (isdn_ppp_ioctl(VAR_2 - VAR_73, file, VAR_0, VAR_1));\n#endif\n\treturn -VAR_29;\n\n#undef name\n#undef bname\n#undef iocts\n#undef phone\n#undef cfg\n}",
    "func_graph_path_before": "torvalds/linux/eafe1aa37e6ec2d56f14732b5240c4dd09f0613a/isdn_common.c/vul/before/0.json",
    "func": "static int\nisdn_ioctl(struct inode *inode, struct file *file, uint cmd, ulong arg)\n{\n\tuint minor = iminor(inode);\n\tisdn_ctrl c;\n\tint drvidx;\n\tint chidx;\n\tint ret;\n\tint i;\n\tchar __user *p;\n\tchar *s;\n\tunion iocpar {\n\t\tchar name[10];\n\t\tchar bname[22];\n\t\tisdn_ioctl_struct iocts;\n\t\tisdn_net_ioctl_phone phone;\n\t\tisdn_net_ioctl_cfg cfg;\n\t} iocpar;\n\tvoid __user *argp = (void __user *)arg;\n\n#define name  iocpar.name\n#define bname iocpar.bname\n#define iocts iocpar.iocts\n#define phone iocpar.phone\n#define cfg   iocpar.cfg\n\n\tif (minor == ISDN_MINOR_STATUS) {\n\t\tswitch (cmd) {\n\t\t\tcase IIOCGETDVR:\n\t\t\t\treturn (TTY_DV +\n\t\t\t\t\t(NET_DV << 8) +\n\t\t\t\t\t(INF_DV << 16));\n\t\t\tcase IIOCGETCPS:\n\t\t\t\tif (arg) {\n\t\t\t\t\tulong __user *p = argp;\n\t\t\t\t\tint i;\n\t\t\t\t\tif (!access_ok(VERIFY_WRITE, p,\n\t\t\t\t\t\t\tsizeof(ulong) * ISDN_MAX_CHANNELS * 2))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tfor (i = 0; i < ISDN_MAX_CHANNELS; i++) {\n\t\t\t\t\t\tput_user(dev->ibytes[i], p++);\n\t\t\t\t\t\tput_user(dev->obytes[i], p++);\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tbreak;\n#ifdef CONFIG_NETDEVICES\n\t\t\tcase IIOCNETGPN:\n\t\t\t\t/* Get peer phone number of a connected \n\t\t\t\t * isdn network interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&phone, argp, sizeof(phone)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\treturn isdn_net_getpeer(&phone, argp);\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n#endif\n\t\t\tdefault:\n\t\t\t\treturn -EINVAL;\n\t\t}\n\t}\n\tif (!dev->drivers)\n\t\treturn -ENODEV;\n\tif (minor <= ISDN_MINOR_BMAX) {\n\t\tdrvidx = isdn_minor2drv(minor);\n\t\tif (drvidx < 0)\n\t\t\treturn -ENODEV;\n\t\tchidx = isdn_minor2chan(minor);\n\t\tif (!(dev->drv[drvidx]->flags & DRV_FLAG_RUNNING))\n\t\t\treturn -ENODEV;\n\t\treturn 0;\n\t}\n\tif (minor <= ISDN_MINOR_CTRLMAX) {\n/*\n * isdn net devices manage lots of configuration variables as linked lists.\n * Those lists must only be manipulated from user space. Some of the ioctl's\n * service routines access user space and are not atomic. Therefor, ioctl's\n * manipulating the lists and ioctl's sleeping while accessing the lists\n * are serialized by means of a semaphore.\n */\n\t\tswitch (cmd) {\n\t\t\tcase IIOCNETDWRSET:\n\t\t\t\tprintk(KERN_INFO \"INFO: ISDN_DW_ABC_EXTENSION not enabled\\n\");\n\t\t\t\treturn(-EINVAL);\n\t\t\tcase IIOCNETLCR:\n\t\t\t\tprintk(KERN_INFO \"INFO: ISDN_ABC_LCR_SUPPORT not enabled\\n\");\n\t\t\t\treturn -ENODEV;\n#ifdef CONFIG_NETDEVICES\n\t\t\tcase IIOCNETAIF:\n\t\t\t\t/* Add a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\ts = name;\n\t\t\t\t} else {\n\t\t\t\t\ts = NULL;\n\t\t\t\t}\n\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\tif( ret ) return ret;\n\t\t\t\tif ((s = isdn_net_new(s, NULL))) {\n\t\t\t\t\tif (copy_to_user(argp, s, strlen(s) + 1)){\n\t\t\t\t\t\tret = -EFAULT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret = 0;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tret = -ENODEV;\n\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\treturn ret;\n\t\t\tcase IIOCNETASL:\n\t\t\t\t/* Add a slave to a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(bname, argp, sizeof(bname) - 1))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\tif( ret ) return ret;\n\t\t\t\tif ((s = isdn_net_newslave(bname))) {\n\t\t\t\t\tif (copy_to_user(argp, s, strlen(s) + 1)){\n\t\t\t\t\t\tret = -EFAULT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret = 0;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tret = -ENODEV;\n\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\treturn ret;\n\t\t\tcase IIOCNETDIF:\n\t\t\t\t/* Delete a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\t\tif( ret ) return ret;\n\t\t\t\t\tret = isdn_net_rm(name);\n\t\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETSCF:\n\t\t\t\t/* Set configurable parameters of a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&cfg, argp, sizeof(cfg)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\treturn isdn_net_setcfg(&cfg);\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETGCF:\n\t\t\t\t/* Get configurable parameters of a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&cfg, argp, sizeof(cfg)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tif (!(ret = isdn_net_getcfg(&cfg))) {\n\t\t\t\t\t\tif (copy_to_user(argp, &cfg, sizeof(cfg)))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t}\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETANM:\n\t\t\t\t/* Add a phone-number to a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&phone, argp, sizeof(phone)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\t\tif( ret ) return ret;\n\t\t\t\t\tret = isdn_net_addphone(&phone);\n\t\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETGNM:\n\t\t\t\t/* Get list of phone-numbers of a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&phone, argp, sizeof(phone)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\t\tif( ret ) return ret;\n\t\t\t\t\tret = isdn_net_getphones(&phone, argp);\n\t\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETDNM:\n\t\t\t\t/* Delete a phone-number of a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(&phone, argp, sizeof(phone)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tret = mutex_lock_interruptible(&dev->mtx);\n\t\t\t\t\tif( ret ) return ret;\n\t\t\t\t\tret = isdn_net_delphone(&phone);\n\t\t\t\t\tmutex_unlock(&dev->mtx);\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCNETDIL:\n\t\t\t\t/* Force dialing of a network-interface */\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\treturn isdn_net_force_dial(name);\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n#ifdef CONFIG_ISDN_PPP\n\t\t\tcase IIOCNETALN:\n\t\t\t\tif (!arg)\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\treturn -EFAULT;\n\t\t\t\treturn isdn_ppp_dial_slave(name);\n\t\t\tcase IIOCNETDLN:\n\t\t\t\tif (!arg)\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\treturn -EFAULT;\n\t\t\t\treturn isdn_ppp_hangup_slave(name);\n#endif\n\t\t\tcase IIOCNETHUP:\n\t\t\t\t/* Force hangup of a network-interface */\n\t\t\t\tif (!arg)\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tif (copy_from_user(name, argp, sizeof(name)))\n\t\t\t\t\treturn -EFAULT;\n\t\t\t\treturn isdn_net_force_hangup(name);\n\t\t\t\tbreak;\n#endif                          /* CONFIG_NETDEVICES */\n\t\t\tcase IIOCSETVER:\n\t\t\t\tdev->net_verbose = arg;\n\t\t\t\tprintk(KERN_INFO \"isdn: Verbose-Level is %d\\n\", dev->net_verbose);\n\t\t\t\treturn 0;\n\t\t\tcase IIOCSETGST:\n\t\t\t\tif (arg)\n\t\t\t\t\tdev->global_flags |= ISDN_GLOBAL_STOPPED;\n\t\t\t\telse\n\t\t\t\t\tdev->global_flags &= ~ISDN_GLOBAL_STOPPED;\n\t\t\t\tprintk(KERN_INFO \"isdn: Global Mode %s\\n\",\n\t\t\t\t       (dev->global_flags & ISDN_GLOBAL_STOPPED) ? \"stopped\" : \"running\");\n\t\t\t\treturn 0;\n\t\t\tcase IIOCSETBRJ:\n\t\t\t\tdrvidx = -1;\n\t\t\t\tif (arg) {\n\t\t\t\t\tint i;\n\t\t\t\t\tchar *p;\n\t\t\t\t\tif (copy_from_user(&iocts, argp,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tiocts.drvid[sizeof(iocts.drvid)-1] = 0;\n\t\t\t\t\tif (strlen(iocts.drvid)) {\n\t\t\t\t\t\tif ((p = strchr(iocts.drvid, ',')))\n\t\t\t\t\t\t\t*p = 0;\n\t\t\t\t\t\tdrvidx = -1;\n\t\t\t\t\t\tfor (i = 0; i < ISDN_MAX_DRIVERS; i++)\n\t\t\t\t\t\t\tif (!(strcmp(dev->drvid[i], iocts.drvid))) {\n\t\t\t\t\t\t\t\tdrvidx = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (drvidx == -1)\n\t\t\t\t\treturn -ENODEV;\n\t\t\t\tif (iocts.arg)\n\t\t\t\t\tdev->drv[drvidx]->flags |= DRV_FLAG_REJBUS;\n\t\t\t\telse\n\t\t\t\t\tdev->drv[drvidx]->flags &= ~DRV_FLAG_REJBUS;\n\t\t\t\treturn 0;\n\t\t\tcase IIOCSIGPRF:\n\t\t\t\tdev->profd = current;\n\t\t\t\treturn 0;\n\t\t\t\tbreak;\n\t\t\tcase IIOCGETPRF:\n\t\t\t\t/* Get all Modem-Profiles */\n\t\t\t\tif (arg) {\n\t\t\t\t\tchar __user *p = argp;\n\t\t\t\t\tint i;\n\n\t\t\t\t\tif (!access_ok(VERIFY_WRITE, argp,\n\t\t\t\t\t(ISDN_MODEM_NUMREG + ISDN_MSNLEN + ISDN_LMSNLEN)\n\t\t\t\t\t\t   * ISDN_MAX_CHANNELS))\n\t\t\t\t\t\treturn -EFAULT;\n\n\t\t\t\t\tfor (i = 0; i < ISDN_MAX_CHANNELS; i++) {\n\t\t\t\t\t\tif (copy_to_user(p, dev->mdm.info[i].emu.profile,\n\t\t\t\t\t\t      ISDN_MODEM_NUMREG))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_MODEM_NUMREG;\n\t\t\t\t\t\tif (copy_to_user(p, dev->mdm.info[i].emu.pmsn, ISDN_MSNLEN))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_MSNLEN;\n\t\t\t\t\t\tif (copy_to_user(p, dev->mdm.info[i].emu.plmsn, ISDN_LMSNLEN))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_LMSNLEN;\n\t\t\t\t\t}\n\t\t\t\t\treturn (ISDN_MODEM_NUMREG + ISDN_MSNLEN + ISDN_LMSNLEN) * ISDN_MAX_CHANNELS;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tbreak;\n\t\t\tcase IIOCSETPRF:\n\t\t\t\t/* Set all Modem-Profiles */\n\t\t\t\tif (arg) {\n\t\t\t\t\tchar __user *p = argp;\n\t\t\t\t\tint i;\n\n\t\t\t\t\tif (!access_ok(VERIFY_READ, argp,\n\t\t\t\t\t(ISDN_MODEM_NUMREG + ISDN_MSNLEN + ISDN_LMSNLEN)\n\t\t\t\t\t\t   * ISDN_MAX_CHANNELS))\n\t\t\t\t\t\treturn -EFAULT;\n\n\t\t\t\t\tfor (i = 0; i < ISDN_MAX_CHANNELS; i++) {\n\t\t\t\t\t\tif (copy_from_user(dev->mdm.info[i].emu.profile, p,\n\t\t\t\t\t\t     ISDN_MODEM_NUMREG))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_MODEM_NUMREG;\n\t\t\t\t\t\tif (copy_from_user(dev->mdm.info[i].emu.plmsn, p, ISDN_LMSNLEN))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_LMSNLEN;\n\t\t\t\t\t\tif (copy_from_user(dev->mdm.info[i].emu.pmsn, p, ISDN_MSNLEN))\n\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\tp += ISDN_MSNLEN;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tbreak;\n\t\t\tcase IIOCSETMAP:\n\t\t\tcase IIOCGETMAP:\n\t\t\t\t/* Set/Get MSN->EAZ-Mapping for a driver */\n\t\t\t\tif (arg) {\n\n\t\t\t\t\tif (copy_from_user(&iocts, argp,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tiocts.drvid[sizeof(iocts.drvid)-1] = 0;\n\t\t\t\t\tif (strlen(iocts.drvid)) {\n\t\t\t\t\t\tdrvidx = -1;\n\t\t\t\t\t\tfor (i = 0; i < ISDN_MAX_DRIVERS; i++)\n\t\t\t\t\t\t\tif (!(strcmp(dev->drvid[i], iocts.drvid))) {\n\t\t\t\t\t\t\t\tdrvidx = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tdrvidx = 0;\n\t\t\t\t\tif (drvidx == -1)\n\t\t\t\t\t\treturn -ENODEV;\n\t\t\t\t\tif (cmd == IIOCSETMAP) {\n\t\t\t\t\t\tint loop = 1;\n\n\t\t\t\t\t\tp = (char __user *) iocts.arg;\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\twhile (loop) {\n\t\t\t\t\t\t\tint j = 0;\n\n\t\t\t\t\t\t\twhile (1) {\n\t\t\t\t\t\t\t\tif (!access_ok(VERIFY_READ, p, 1))\n\t\t\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\t\t\tget_user(bname[j], p++);\n\t\t\t\t\t\t\t\tswitch (bname[j]) {\n\t\t\t\t\t\t\t\t\tcase '\\0':\n\t\t\t\t\t\t\t\t\t\tloop = 0;\n\t\t\t\t\t\t\t\t\t\t/* Fall through */\n\t\t\t\t\t\t\t\t\tcase ',':\n\t\t\t\t\t\t\t\t\t\tbname[j] = '\\0';\n\t\t\t\t\t\t\t\t\t\tstrcpy(dev->drv[drvidx]->msn2eaz[i], bname);\n\t\t\t\t\t\t\t\t\t\tj = ISDN_MSNLEN;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (j >= ISDN_MSNLEN)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (++i > 9)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp = (char __user *) iocts.arg;\n\t\t\t\t\t\tfor (i = 0; i < 10; i++) {\n\t\t\t\t\t\t\tsnprintf(bname, sizeof(bname), \"%s%s\",\n\t\t\t\t\t\t\t\tstrlen(dev->drv[drvidx]->msn2eaz[i]) ?\n\t\t\t\t\t\t\t\tdev->drv[drvidx]->msn2eaz[i] : \"_\",\n\t\t\t\t\t\t\t\t(i < 9) ? \",\" : \"\\0\");\n\t\t\t\t\t\t\tif (copy_to_user(p, bname, strlen(bname) + 1))\n\t\t\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\t\t\tp += strlen(bname);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\tcase IIOCDBGVAR:\n\t\t\t\tif (arg) {\n\t\t\t\t\tif (copy_to_user(argp, &dev, sizeof(ulong)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif ((cmd & IIOCDRVCTL) == IIOCDRVCTL)\n\t\t\t\t\tcmd = ((cmd >> _IOC_NRSHIFT) & _IOC_NRMASK) & ISDN_DRVIOCTL_MASK;\n\t\t\t\telse\n\t\t\t\t\treturn -EINVAL;\n\t\t\t\tif (arg) {\n\t\t\t\t\tint i;\n\t\t\t\t\tchar *p;\n\t\t\t\t\tif (copy_from_user(&iocts, argp, sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tiocts.drvid[sizeof(iocts.drvid)-1] = 0;\n\t\t\t\t\tif (strlen(iocts.drvid)) {\n\t\t\t\t\t\tif ((p = strchr(iocts.drvid, ',')))\n\t\t\t\t\t\t\t*p = 0;\n\t\t\t\t\t\tdrvidx = -1;\n\t\t\t\t\t\tfor (i = 0; i < ISDN_MAX_DRIVERS; i++)\n\t\t\t\t\t\t\tif (!(strcmp(dev->drvid[i], iocts.drvid))) {\n\t\t\t\t\t\t\t\tdrvidx = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tdrvidx = 0;\n\t\t\t\t\tif (drvidx == -1)\n\t\t\t\t\t\treturn -ENODEV;\n\t\t\t\t\tif (!access_ok(VERIFY_WRITE, argp,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\tc.driver = drvidx;\n\t\t\t\t\tc.command = ISDN_CMD_IOCTL;\n\t\t\t\t\tc.arg = cmd;\n\t\t\t\t\tmemcpy(c.parm.num, &iocts.arg, sizeof(ulong));\n\t\t\t\t\tret = isdn_command(&c);\n\t\t\t\t\tmemcpy(&iocts.arg, c.parm.num, sizeof(ulong));\n\t\t\t\t\tif (copy_to_user(argp, &iocts, sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -EFAULT;\n\t\t\t\t\treturn ret;\n\t\t\t\t} else\n\t\t\t\t\treturn -EINVAL;\n\t\t}\n\t}\n#ifdef CONFIG_ISDN_PPP\n\tif (minor <= ISDN_MINOR_PPPMAX)\n\t\treturn (isdn_ppp_ioctl(minor - ISDN_MINOR_PPP, file, cmd, arg));\n#endif\n\treturn -ENODEV;\n\n#undef name\n#undef bname\n#undef iocts\n#undef phone\n#undef cfg\n}",
    "abstract_func": "static int\nisdn_ioctl(struct inode *inode, struct file *file, uint VAR_0, ulong VAR_1)\n{\n\tuint VAR_2 = iminor(inode);\n\tisdn_ctrl VAR_3;\n\tint VAR_4;\n\tint VAR_5;\n\tint VAR_6;\n\tint VAR_7;\n\tchar __user *VAR_8;\n\tchar *VAR_9;\n\tunion iocpar {\n\t\tchar name[10];\n\t\tchar bname[22];\n\t\tisdn_ioctl_struct iocts;\n\t\tisdn_net_ioctl_phone phone;\n\t\tisdn_net_ioctl_cfg cfg;\n\t} iocpar;\n\tvoid __user *VAR_10 = (void __user *)VAR_1;\n\n#define VAR_11  iocpar.name\n#define VAR_12 iocpar.bname\n#define VAR_13 iocpar.iocts\n#define VAR_14 iocpar.phone\n#define VAR_15   iocpar.cfg\n\n\tif (VAR_2 == VAR_16) {\n\t\tswitch (VAR_0) {\n\t\t\tcase VAR_17:\n\t\t\t\treturn (VAR_18 +\n\t\t\t\t\t(VAR_19 << 8) +\n\t\t\t\t\t(VAR_20 << 16));\n\t\t\tcase VAR_21:\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tulong __user *VAR_8 = VAR_10;\n\t\t\t\t\tint VAR_7;\n\t\t\t\t\tif (!access_ok(VAR_22, VAR_8,\n\t\t\t\t\t\t\tsizeof(ulong) * VAR_23 * 2))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_23; VAR_7++) {\n\t\t\t\t\t\tput_user(VAR_25->ibytes[VAR_7], VAR_8++);\n\t\t\t\t\t\tput_user(VAR_25->obytes[VAR_7], VAR_8++);\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tbreak;\n#ifdef VAR_27\n\t\t\tcase VAR_28:\n\t\t\t\t/* COMMENT_0 */\n                                \n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_14, VAR_10, sizeof(VAR_14)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\treturn isdn_net_getpeer(&VAR_14, VAR_10);\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n#endif\n\t\t\tdefault:\n\t\t\t\treturn -VAR_26;\n\t\t}\n\t}\n\tif (!VAR_25->drivers)\n\t\treturn -VAR_29;\n\tif (VAR_2 <= VAR_30) {\n\t\tVAR_4 = isdn_minor2drv(VAR_2);\n\t\tif (VAR_4 < 0)\n\t\t\treturn -VAR_29;\n\t\tVAR_5 = isdn_minor2chan(VAR_2);\n\t\tif (!(VAR_25->drv[VAR_4]->flags & VAR_31))\n\t\t\treturn -VAR_29;\n\t\treturn 0;\n\t}\n\tif (VAR_2 <= VAR_32) {\n/* COMMENT_2 */\n                                                                           \n                                                                            \n                                                                           \n                                                                        \n                                          \n   \n\t\tswitch (VAR_0) {\n\t\t\tcase VAR_33:\n\t\t\t\tprintk(KERN_INFO \"INFO: ISDN_DW_ABC_EXTENSION not enabled\\n\");\n\t\t\t\treturn(-VAR_26);\n\t\t\tcase VAR_34:\n\t\t\t\tprintk(KERN_INFO \"INFO: ISDN_ABC_LCR_SUPPORT not enabled\\n\");\n\t\t\t\treturn -VAR_29;\n#ifdef VAR_27\n\t\t\tcase VAR_35:\n\t\t\t\t/* COMMENT_9 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_9 = VAR_11;\n\t\t\t\t} else {\n\t\t\t\t\tVAR_9 = NULL;\n\t\t\t\t}\n\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\tif ((VAR_9 = isdn_net_new(VAR_9, NULL))) {\n\t\t\t\t\tif (copy_to_user(VAR_10, VAR_9, strlen(VAR_9) + 1)){\n\t\t\t\t\t\tVAR_6 = -VAR_24;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tVAR_6 = 0;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tVAR_6 = -VAR_29;\n\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\treturn VAR_6;\n\t\t\tcase VAR_36:\n\t\t\t\t/* COMMENT_10 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(VAR_12, VAR_10, sizeof(VAR_12) - 1))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\tif ((VAR_9 = isdn_net_newslave(VAR_12))) {\n\t\t\t\t\tif (copy_to_user(VAR_10, VAR_9, strlen(VAR_9) + 1)){\n\t\t\t\t\t\tVAR_6 = -VAR_24;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tVAR_6 = 0;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tVAR_6 = -VAR_29;\n\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\treturn VAR_6;\n\t\t\tcase VAR_37:\n\t\t\t\t/* COMMENT_11 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\t\tVAR_6 = isdn_net_rm(VAR_11);\n\t\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_38:\n\t\t\t\t/* COMMENT_12 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_15, VAR_10, sizeof(VAR_15)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\treturn isdn_net_setcfg(&VAR_15);\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_39:\n\t\t\t\t/* COMMENT_13 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_15, VAR_10, sizeof(VAR_15)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tif (!(VAR_6 = isdn_net_getcfg(&VAR_15))) {\n\t\t\t\t\t\tif (copy_to_user(VAR_10, &VAR_15, sizeof(VAR_15)))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t}\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_40:\n\t\t\t\t/* COMMENT_14 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_14, VAR_10, sizeof(VAR_14)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\t\tVAR_6 = isdn_net_addphone(&VAR_14);\n\t\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_41:\n\t\t\t\t/* COMMENT_15 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_14, VAR_10, sizeof(VAR_14)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\t\tVAR_6 = isdn_net_getphones(&VAR_14, VAR_10);\n\t\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_42:\n\t\t\t\t/* COMMENT_16 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(&VAR_14, VAR_10, sizeof(VAR_14)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_6 = mutex_lock_interruptible(&VAR_25->mtx);\n\t\t\t\t\tif( VAR_6 ) return VAR_6;\n\t\t\t\t\tVAR_6 = isdn_net_delphone(&VAR_14);\n\t\t\t\t\tmutex_unlock(&VAR_25->mtx);\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_43:\n\t\t\t\t/* COMMENT_17 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\treturn isdn_net_force_dial(VAR_11);\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n#ifdef VAR_44\n\t\t\tcase VAR_45:\n\t\t\t\tif (!VAR_1)\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\treturn -VAR_24;\n\t\t\t\treturn isdn_ppp_dial_slave(VAR_11);\n\t\t\tcase VAR_46:\n\t\t\t\tif (!VAR_1)\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\treturn -VAR_24;\n\t\t\t\treturn isdn_ppp_hangup_slave(VAR_11);\n#endif\n\t\t\tcase VAR_47:\n\t\t\t\t/* COMMENT_18 */\n\t\t\t\tif (!VAR_1)\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tif (copy_from_user(VAR_11, VAR_10, sizeof(VAR_11)))\n\t\t\t\t\treturn -VAR_24;\n\t\t\t\treturn isdn_net_force_hangup(VAR_11);\n\t\t\t\tbreak;\n#endif                          /* COMMENT_19 */\n\t\t\tcase VAR_48:\n\t\t\t\tVAR_25->net_verbose = VAR_1;\n\t\t\t\tprintk(KERN_INFO \"isdn: Verbose-Level is %d\\n\", VAR_25->net_verbose);\n\t\t\t\treturn 0;\n\t\t\tcase VAR_49:\n\t\t\t\tif (VAR_1)\n\t\t\t\t\tVAR_25->global_flags |= VAR_50;\n\t\t\t\telse\n\t\t\t\t\tVAR_25->global_flags &= ~VAR_50;\n\t\t\t\tprintk(KERN_INFO \"isdn: Global Mode %s\\n\",\n\t\t\t\t       (VAR_25->global_flags & VAR_50) ? \"stopped\" : \"running\");\n\t\t\t\treturn 0;\n\t\t\tcase VAR_51:\n\t\t\t\tVAR_4 = -1;\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tint VAR_7;\n\t\t\t\t\tchar *VAR_8;\n\t\t\t\t\tif (copy_from_user(&VAR_13, VAR_10,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_13.drvid[sizeof(VAR_13.drvid)-1] = 0;\n\t\t\t\t\tif (strlen(VAR_13.drvid)) {\n\t\t\t\t\t\tif ((VAR_8 = strchr(VAR_13.drvid, ',')))\n\t\t\t\t\t\t\t*VAR_8 = 0;\n\t\t\t\t\t\tVAR_4 = -1;\n\t\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_52; VAR_7++)\n\t\t\t\t\t\t\tif (!(strcmp(VAR_25->drvid[VAR_7], VAR_13.drvid))) {\n\t\t\t\t\t\t\t\tVAR_4 = VAR_7;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (VAR_4 == -1)\n\t\t\t\t\treturn -VAR_29;\n\t\t\t\tif (VAR_13.arg)\n\t\t\t\t\tVAR_25->drv[VAR_4]->flags |= VAR_53;\n\t\t\t\telse\n\t\t\t\t\tVAR_25->drv[VAR_4]->flags &= ~VAR_53;\n\t\t\t\treturn 0;\n\t\t\tcase VAR_54:\n\t\t\t\tVAR_25->profd = VAR_55;\n\t\t\t\treturn 0;\n\t\t\t\tbreak;\n\t\t\tcase VAR_56:\n\t\t\t\t/* COMMENT_20 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tchar __user *VAR_8 = VAR_10;\n\t\t\t\t\tint VAR_7;\n\n\t\t\t\t\tif (!access_ok(VAR_22, VAR_10,\n\t\t\t\t\t(VAR_57 + VAR_58 + VAR_59)\n\t\t\t\t\t\t   * VAR_23))\n\t\t\t\t\t\treturn -VAR_24;\n\n\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_23; VAR_7++) {\n\t\t\t\t\t\tif (copy_to_user(VAR_8, VAR_25->mdm.info[VAR_7].emu.profile,\n\t\t\t\t\t\t      VAR_57))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_57;\n\t\t\t\t\t\tif (copy_to_user(VAR_8, VAR_25->mdm.info[VAR_7].emu.pmsn, VAR_58))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_58;\n\t\t\t\t\t\tif (copy_to_user(VAR_8, VAR_25->mdm.info[VAR_7].emu.plmsn, VAR_59))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_59;\n\t\t\t\t\t}\n\t\t\t\t\treturn (VAR_57 + VAR_58 + VAR_59) * VAR_23;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tbreak;\n\t\t\tcase VAR_60:\n\t\t\t\t/* COMMENT_21 */\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tchar __user *VAR_8 = VAR_10;\n\t\t\t\t\tint VAR_7;\n\n\t\t\t\t\tif (!access_ok(VAR_61, VAR_10,\n\t\t\t\t\t(VAR_57 + VAR_58 + VAR_59)\n\t\t\t\t\t\t   * VAR_23))\n\t\t\t\t\t\treturn -VAR_24;\n\n\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_23; VAR_7++) {\n\t\t\t\t\t\tif (copy_from_user(VAR_25->mdm.info[VAR_7].emu.profile, VAR_8,\n\t\t\t\t\t\t     VAR_57))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_57;\n\t\t\t\t\t\tif (copy_from_user(VAR_25->mdm.info[VAR_7].emu.plmsn, VAR_8, VAR_59))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_59;\n\t\t\t\t\t\tif (copy_from_user(VAR_25->mdm.info[VAR_7].emu.pmsn, VAR_8, VAR_58))\n\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\tVAR_8 += VAR_58;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tbreak;\n\t\t\tcase VAR_62:\n\t\t\tcase VAR_63:\n\t\t\t\t/* COMMENT_22 */\n\t\t\t\tif (VAR_1) {\n\n\t\t\t\t\tif (copy_from_user(&VAR_13, VAR_10,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_13.drvid[sizeof(VAR_13.drvid)-1] = 0;\n\t\t\t\t\tif (strlen(VAR_13.drvid)) {\n\t\t\t\t\t\tVAR_4 = -1;\n\t\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_52; VAR_7++)\n\t\t\t\t\t\t\tif (!(strcmp(VAR_25->drvid[VAR_7], VAR_13.drvid))) {\n\t\t\t\t\t\t\t\tVAR_4 = VAR_7;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tVAR_4 = 0;\n\t\t\t\t\tif (VAR_4 == -1)\n\t\t\t\t\t\treturn -VAR_29;\n\t\t\t\t\tif (VAR_0 == VAR_62) {\n\t\t\t\t\t\tint VAR_64 = 1;\n\n\t\t\t\t\t\tVAR_8 = (char __user *) VAR_13.arg;\n\t\t\t\t\t\tVAR_7 = 0;\n\t\t\t\t\t\twhile (VAR_64) {\n\t\t\t\t\t\t\tint VAR_65 = 0;\n\n\t\t\t\t\t\t\twhile (1) {\n\t\t\t\t\t\t\t\tif (!access_ok(VAR_61, VAR_8, 1))\n\t\t\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\t\t\tget_user(VAR_12[VAR_65], VAR_8++);\n\t\t\t\t\t\t\t\tswitch (VAR_12[VAR_65]) {\n\t\t\t\t\t\t\t\t\tcase '\\0':\n\t\t\t\t\t\t\t\t\t\tVAR_64 = 0;\n\t\t\t\t\t\t\t\t\t\t/* COMMENT_23 */\n\t\t\t\t\t\t\t\t\tcase ',':\n\t\t\t\t\t\t\t\t\t\tVAR_12[VAR_65] = '\\0';\n\t\t\t\t\t\t\t\t\t\tstrcpy(VAR_25->drv[VAR_4]->msn2eaz[VAR_7], VAR_12);\n\t\t\t\t\t\t\t\t\t\tVAR_65 = VAR_58;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tVAR_65++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (VAR_65 >= VAR_58)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (++VAR_7 > 9)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tVAR_8 = (char __user *) VAR_13.arg;\n\t\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < 10; VAR_7++) {\n\t\t\t\t\t\t\tsnprintf(VAR_12, sizeof(VAR_12), \"%s%s\",\n\t\t\t\t\t\t\t\tstrlen(VAR_25->drv[VAR_4]->msn2eaz[VAR_7]) ?\n\t\t\t\t\t\t\t\tVAR_25->drv[VAR_4]->msn2eaz[VAR_7] : \"_\",\n\t\t\t\t\t\t\t\t(VAR_7 < 9) ? \",\" : \"\\0\");\n\t\t\t\t\t\t\tif (copy_to_user(VAR_8, VAR_12, strlen(VAR_12) + 1))\n\t\t\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\t\t\tVAR_8 += strlen(VAR_12);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\tcase VAR_66:\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tif (copy_to_user(VAR_10, &VAR_25, sizeof(ulong)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif ((VAR_0 & VAR_67) == VAR_67)\n\t\t\t\t\tVAR_0 = ((VAR_0 >> VAR_68) & VAR_69) & VAR_70;\n\t\t\t\telse\n\t\t\t\t\treturn -VAR_26;\n\t\t\t\tif (VAR_1) {\n\t\t\t\t\tint VAR_7;\n\t\t\t\t\tchar *VAR_8;\n\t\t\t\t\tif (copy_from_user(&VAR_13, VAR_10, sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_13.drvid[sizeof(VAR_13.drvid)-1] = 0;\n\t\t\t\t\tif (strlen(VAR_13.drvid)) {\n\t\t\t\t\t\tif ((VAR_8 = strchr(VAR_13.drvid, ',')))\n\t\t\t\t\t\t\t*VAR_8 = 0;\n\t\t\t\t\t\tVAR_4 = -1;\n\t\t\t\t\t\tfor (VAR_7 = 0; VAR_7 < VAR_52; VAR_7++)\n\t\t\t\t\t\t\tif (!(strcmp(VAR_25->drvid[VAR_7], VAR_13.drvid))) {\n\t\t\t\t\t\t\t\tVAR_4 = VAR_7;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tVAR_4 = 0;\n\t\t\t\t\tif (VAR_4 == -1)\n\t\t\t\t\t\treturn -VAR_29;\n\t\t\t\t\tif (!access_ok(VAR_22, VAR_10,\n\t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\tVAR_3.driver = VAR_4;\n\t\t\t\t\tVAR_3.command = VAR_71;\n\t\t\t\t\tVAR_3.arg = VAR_0;\n\t\t\t\t\tmemcpy(VAR_3.parm.num, &VAR_13.arg, sizeof(ulong));\n\t\t\t\t\tVAR_6 = isdn_command(&VAR_3);\n\t\t\t\t\tmemcpy(&VAR_13.arg, VAR_3.parm.num, sizeof(ulong));\n\t\t\t\t\tif (copy_to_user(VAR_10, &VAR_13, sizeof(isdn_ioctl_struct)))\n\t\t\t\t\t\treturn -VAR_24;\n\t\t\t\t\treturn VAR_6;\n\t\t\t\t} else\n\t\t\t\t\treturn -VAR_26;\n\t\t}\n\t}\n#ifdef VAR_44\n\tif (VAR_2 <= VAR_72)\n\t\treturn (isdn_ppp_ioctl(VAR_2 - VAR_73, file, VAR_0, VAR_1));\n#endif\n\treturn -VAR_29;\n\n#undef name\n#undef bname\n#undef iocts\n#undef phone\n#undef cfg\n}",
    "func_graph_path": "torvalds/linux/eafe1aa37e6ec2d56f14732b5240c4dd09f0613a/isdn_common.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -246,6 +246,7 @@\n \t\t\t\t\tif (copy_from_user(&iocts, argp,\n \t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n \t\t\t\t\t\treturn -EFAULT;\n+\t\t\t\t\tiocts.drvid[sizeof(iocts.drvid)-1] = 0;\n \t\t\t\t\tif (strlen(iocts.drvid)) {\n \t\t\t\t\t\tif ((p = strchr(iocts.drvid, ',')))\n \t\t\t\t\t\t\t*p = 0;\n@@ -330,6 +331,7 @@\n \t\t\t\t\tif (copy_from_user(&iocts, argp,\n \t\t\t\t\t     sizeof(isdn_ioctl_struct)))\n \t\t\t\t\t\treturn -EFAULT;\n+\t\t\t\t\tiocts.drvid[sizeof(iocts.drvid)-1] = 0;\n \t\t\t\t\tif (strlen(iocts.drvid)) {\n \t\t\t\t\t\tdrvidx = -1;\n \t\t\t\t\t\tfor (i = 0; i < ISDN_MAX_DRIVERS; i++)\n@@ -374,7 +376,7 @@\n \t\t\t\t\t} else {\n \t\t\t\t\t\tp = (char __user *) iocts.arg;\n \t\t\t\t\t\tfor (i = 0; i < 10; i++) {\n-\t\t\t\t\t\t\tsprintf(bname, \"%s%s\",\n+\t\t\t\t\t\t\tsnprintf(bname, sizeof(bname), \"%s%s\",\n \t\t\t\t\t\t\t\tstrlen(dev->drv[drvidx]->msn2eaz[i]) ?\n \t\t\t\t\t\t\t\tdev->drv[drvidx]->msn2eaz[i] : \"_\",\n \t\t\t\t\t\t\t\t(i < 9) ? \",\" : \"\\0\");\n@@ -404,6 +406,7 @@\n \t\t\t\t\tchar *p;\n \t\t\t\t\tif (copy_from_user(&iocts, argp, sizeof(isdn_ioctl_struct)))\n \t\t\t\t\t\treturn -EFAULT;\n+\t\t\t\t\tiocts.drvid[sizeof(iocts.drvid)-1] = 0;\n \t\t\t\t\tif (strlen(iocts.drvid)) {\n \t\t\t\t\t\tif ((p = strchr(iocts.drvid, ',')))\n \t\t\t\t\t\t\t*p = 0;",
    "diff_line_info": {
        "deleted_lines": [
            "\t\t\t\t\t\t\tsprintf(bname, \"%s%s\","
        ],
        "added_lines": [
            "\t\t\t\t\tiocts.drvid[sizeof(iocts.drvid)-1] = 0;",
            "\t\t\t\t\tiocts.drvid[sizeof(iocts.drvid)-1] = 0;",
            "\t\t\t\t\t\t\tsnprintf(bname, sizeof(bname), \"%s%s\",",
            "\t\t\t\t\tiocts.drvid[sizeof(iocts.drvid)-1] = 0;"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}