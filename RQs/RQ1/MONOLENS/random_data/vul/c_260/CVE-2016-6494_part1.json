{
    "cve_id": "CVE-2016-6494",
    "cwe_ids": [
        "CWE-200"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
    "cvss_is_v3": false,
    "repo_name": "mongodb/mongo",
    "commit_msg": "SERVER-25335 avoid group and other permissions when creating .dbshell history file",
    "commit_hash": "035cf2afc04988b22cb67f4ebfd77e9b344cb6e0",
    "git_url": "https://github.com/mongodb/mongo/commit/035cf2afc04988b22cb67f4ebfd77e9b344cb6e0",
    "file_path": "src/mongo/shell/linenoise.cpp",
    "func_name": "linenoiseHistorySave",
    "func_before": "int linenoiseHistorySave(const char* filename) {\n    FILE* fp = fopen(filename, \"wt\");\n    if (fp == NULL) {\n        return -1;\n    }\n\n    for (int j = 0; j < historyLen; ++j) {\n        if (history[j][0] != '\\0') {\n            fprintf(fp, \"%s\\n\", history[j]);\n        }\n    }\n    fclose(fp);\n    return 0;\n}",
    "abstract_func_before": "int linenoiseHistorySave(const char* VAR_0) {\n    FILE* VAR_1 = fopen(VAR_0, \"wt\");\n    if (VAR_1 == NULL) {\n        return -1;\n    }\n\n    for (int VAR_2 = 0; VAR_2 < VAR_3; ++VAR_2) {\n        if (VAR_4[VAR_2][0] != '\\0') {\n            fprintf(VAR_1, \"%s\\n\", VAR_4[VAR_2]);\n        }\n    }\n    fclose(VAR_1);\n    return 0;\n}",
    "func_graph_path_before": "mongodb/mongo/035cf2afc04988b22cb67f4ebfd77e9b344cb6e0/linenoise.cpp/vul/before/0.json",
    "func": "int linenoiseHistorySave(const char* filename) {\n    FILE* fp;\n#if _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE\n    int fd = open(filename, O_CREAT, S_IRUSR | S_IWUSR);\n    if (fd == -1) {\n        // report errno somehow?\n        return -1;\n    }\n    fp = fdopen(fd, \"wt\");\n#else\n    fp = fopen(filename, \"wt\");\n#endif  // _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE\n    if (fp == NULL) {\n        return -1;\n    }\n\n    for (int j = 0; j < historyLen; ++j) {\n        if (history[j][0] != '\\0') {\n            fprintf(fp, \"%s\\n\", history[j]);\n        }\n    }\n    fclose(fp);  // Also causes fd to be closed.\n    return 0;\n}",
    "abstract_func": "int linenoiseHistorySave(const char* VAR_0) {\n    FILE* VAR_1;\n#if VAR_2 >= 1 || VAR_3 || VAR_4\n    int VAR_5 = open(VAR_0, VAR_6, VAR_7 | VAR_8);\n    if (VAR_5 == -1) {\n        /* COMMENT_0 */\n        return -1;\n    }\n    VAR_1 = fdopen(VAR_5, \"wt\");\n#else\n    VAR_1 = fopen(VAR_0, \"wt\");\n#endif  /* COMMENT_1 */\n    if (VAR_1 == NULL) {\n        return -1;\n    }\n\n    for (int VAR_9 = 0; VAR_9 < VAR_10; ++VAR_9) {\n        if (VAR_11[VAR_9][0] != '\\0') {\n            fprintf(VAR_1, \"%s\\n\", VAR_11[VAR_9]);\n        }\n    }\n    fclose(VAR_1);  /* COMMENT_2 */\n    return 0;\n}",
    "func_graph_path": "mongodb/mongo/035cf2afc04988b22cb67f4ebfd77e9b344cb6e0/linenoise.cpp/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,5 +1,15 @@\n int linenoiseHistorySave(const char* filename) {\n-    FILE* fp = fopen(filename, \"wt\");\n+    FILE* fp;\n+#if _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE\n+    int fd = open(filename, O_CREAT, S_IRUSR | S_IWUSR);\n+    if (fd == -1) {\n+        // report errno somehow?\n+        return -1;\n+    }\n+    fp = fdopen(fd, \"wt\");\n+#else\n+    fp = fopen(filename, \"wt\");\n+#endif  // _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE\n     if (fp == NULL) {\n         return -1;\n     }\n@@ -9,6 +19,6 @@\n             fprintf(fp, \"%s\\n\", history[j]);\n         }\n     }\n-    fclose(fp);\n+    fclose(fp);  // Also causes fd to be closed.\n     return 0;\n }",
    "diff_line_info": {
        "deleted_lines": [
            "    FILE* fp = fopen(filename, \"wt\");",
            "    fclose(fp);"
        ],
        "added_lines": [
            "    FILE* fp;",
            "#if _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE",
            "    int fd = open(filename, O_CREAT, S_IRUSR | S_IWUSR);",
            "    if (fd == -1) {",
            "        // report errno somehow?",
            "        return -1;",
            "    }",
            "    fp = fdopen(fd, \"wt\");",
            "#else",
            "    fp = fopen(filename, \"wt\");",
            "#endif  // _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE",
            "    fclose(fp);  // Also causes fd to be closed."
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}