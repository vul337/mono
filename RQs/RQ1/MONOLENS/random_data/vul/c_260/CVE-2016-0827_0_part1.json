{
    "cve_id": "CVE-2016-0827",
    "cwe_ids": [
        "CWE-189"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
    "cvss_is_v3": false,
    "repo_name": "android",
    "commit_msg": "fix possible overflow in effect wrappers.\n\nAdd checks on parameter size field in effect command handlers\nto avoid overflow leading to invalid comparison with min allowed\nsize for command and reply buffers.\n\nBug: 26347509.\nChange-Id: I20e6a9b6de8e5172b957caa1ac9410b9752efa4d\n(cherry picked from commit ad1bd92a49d78df6bc6e75bee68c517c1326f3cf)\n",
    "commit_hash": "9e29523b9537983b4c4b205ff868d0b3bca0383b",
    "git_url": "https://android.googlesource.com/platform/frameworks/av/+/9e29523b9537983b4c4b205ff868d0b3bca0383b",
    "file_path": "media/libeffects/lvm/wrapper/Reverb/EffectReverb.cpp",
    "func_name": "Reverb_command",
    "func_before": "int Reverb_command(effect_handle_t  self,\n                              uint32_t            cmdCode,\n                              uint32_t            cmdSize,\n                              void                *pCmdData,\n                              uint32_t            *replySize,\n                              void                *pReplyData){\n    android::ReverbContext * pContext = (android::ReverbContext *) self;\n    int retsize;\n    LVREV_ControlParams_st    ActiveParams;              /* Current control Parameters */\n    LVREV_ReturnStatus_en     LvmStatus=LVREV_SUCCESS;     /* Function call status */\n\n\n    if (pContext == NULL){\n        ALOGV(\"\\tLVM_ERROR : Reverb_command ERROR pContext == NULL\");\n        return -EINVAL;\n    }\n\n    //ALOGV(\"\\tReverb_command INPUTS are: command %d cmdSize %d\",cmdCode, cmdSize);\n\n    switch (cmdCode){\n        case EFFECT_CMD_INIT:\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_INIT start\");\n\n            if (pReplyData == NULL || replySize == NULL || *replySize != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_INIT: ERROR\");\n                return -EINVAL;\n            }\n            *(int *) pReplyData = 0;\n            break;\n\n        case EFFECT_CMD_SET_CONFIG:\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_SET_CONFIG start\");\n            if (pCmdData == NULL || cmdSize != sizeof(effect_config_t) ||\n                    pReplyData == NULL || replySize == NULL || *replySize != sizeof(int)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_CONFIG: ERROR\");\n                return -EINVAL;\n            }\n            *(int *) pReplyData = android::Reverb_setConfig(pContext,\n                                                            (effect_config_t *) pCmdData);\n            break;\n\n        case EFFECT_CMD_GET_CONFIG:\n            if (pReplyData == NULL || replySize == NULL || *replySize != sizeof(effect_config_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_GET_CONFIG: ERROR\");\n                return -EINVAL;\n            }\n\n            android::Reverb_getConfig(pContext, (effect_config_t *)pReplyData);\n            break;\n\n        case EFFECT_CMD_RESET:\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_RESET start\");\n            Reverb_setConfig(pContext, &pContext->config);\n            break;\n\n        case EFFECT_CMD_GET_PARAM:{\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_GET_PARAM start\");\n            effect_param_t *p = (effect_param_t *)pCmdData;\n\n            if (pCmdData == NULL || cmdSize < sizeof(effect_param_t) ||\n                    cmdSize < (sizeof(effect_param_t) + p->psize) ||\n                    pReplyData == NULL || replySize == NULL ||\n                    *replySize < (sizeof(effect_param_t) + p->psize)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_GET_PARAM: ERROR\");\n                return -EINVAL;\n            }\n\n            memcpy(pReplyData, pCmdData, sizeof(effect_param_t) + p->psize);\n\n            p = (effect_param_t *)pReplyData;\n\n            int voffset = ((p->psize - 1) / sizeof(int32_t) + 1) * sizeof(int32_t);\n\n            p->status = android::Reverb_getParameter(pContext,\n                                                         (void *)p->data,\n                                                         (size_t  *)&p->vsize,\n                                                          p->data + voffset);\n\n            *replySize = sizeof(effect_param_t) + voffset + p->vsize;\n\n            //ALOGV(\"\\tReverb_command EFFECT_CMD_GET_PARAM \"\n            //        \"*pCmdData %d, *replySize %d, *pReplyData %d \",\n            //        *(int32_t *)((char *)pCmdData + sizeof(effect_param_t)),\n            //        *replySize,\n            //        *(int16_t *)((char *)pReplyData + sizeof(effect_param_t) + voffset));\n\n        } break;\n        case EFFECT_CMD_SET_PARAM:{\n\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_SET_PARAM start\");\n            //ALOGV(\"\\tReverb_command EFFECT_CMD_SET_PARAM param %d, *replySize %d, value %d \",\n            //        *(int32_t *)((char *)pCmdData + sizeof(effect_param_t)),\n            //        *replySize,\n            //        *(int16_t *)((char *)pCmdData + sizeof(effect_param_t) + sizeof(int32_t)));\n\n            if (pCmdData == NULL || (cmdSize < (sizeof(effect_param_t) + sizeof(int32_t))) ||\n                    pReplyData == NULL ||  replySize == NULL || *replySize != sizeof(int32_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_PARAM: ERROR\");\n                return -EINVAL;\n            }\n\n            effect_param_t *p = (effect_param_t *) pCmdData;\n\n            if (p->psize != sizeof(int32_t)){\n                ALOGV(\"\\t4LVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_PARAM: ERROR, psize is not sizeof(int32_t)\");\n                return -EINVAL;\n            }\n\n            //ALOGV(\"\\tn5Reverb_command cmdSize is %d\\n\"\n            //        \"\\tsizeof(effect_param_t) is  %d\\n\"\n            //        \"\\tp->psize is %d\\n\"\n            //        \"\\tp->vsize is %d\"\n            //        \"\\n\",\n            //        cmdSize, sizeof(effect_param_t), p->psize, p->vsize );\n\n            *(int *)pReplyData = android::Reverb_setParameter(pContext,\n                                                             (void *)p->data,\n                                                              p->data + p->psize);\n        } break;\n\n        case EFFECT_CMD_ENABLE:\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_ENABLE start\");\n\n            if (pReplyData == NULL || *replySize != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_ENABLE: ERROR\");\n                return -EINVAL;\n            }\n            if(pContext->bEnabled == LVM_TRUE){\n                 ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                         \"EFFECT_CMD_ENABLE: ERROR-Effect is already enabled\");\n                 return -EINVAL;\n             }\n            *(int *)pReplyData = 0;\n            pContext->bEnabled = LVM_TRUE;\n            /* Get the current settings */\n            LvmStatus = LVREV_GetControlParameters(pContext->hInstance, &ActiveParams);\n            LVM_ERROR_CHECK(LvmStatus, \"LVREV_GetControlParameters\", \"EFFECT_CMD_ENABLE\")\n            pContext->SamplesToExitCount =\n                    (ActiveParams.T60 * pContext->config.inputCfg.samplingRate)/1000;\n            // force no volume ramp for first buffer processed after enabling the effect\n            pContext->volumeMode = android::REVERB_VOLUME_FLAT;\n            //ALOGV(\"\\tEFFECT_CMD_ENABLE SamplesToExitCount = %d\", pContext->SamplesToExitCount);\n            break;\n        case EFFECT_CMD_DISABLE:\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_DISABLE start\");\n\n            if (pReplyData == NULL || *replySize != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_DISABLE: ERROR\");\n                return -EINVAL;\n            }\n            if(pContext->bEnabled == LVM_FALSE){\n                 ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                         \"EFFECT_CMD_DISABLE: ERROR-Effect is not yet enabled\");\n                 return -EINVAL;\n             }\n            *(int *)pReplyData = 0;\n            pContext->bEnabled = LVM_FALSE;\n            break;\n\n        case EFFECT_CMD_SET_VOLUME:\n            if (pCmdData == NULL ||\n                cmdSize != 2 * sizeof(uint32_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_VOLUME: ERROR\");\n                return -EINVAL;\n            }\n\n\n            if (pReplyData != NULL) { // we have volume control\n                pContext->leftVolume = (LVM_INT16)((*(uint32_t *)pCmdData + (1 << 11)) >> 12);\n                pContext->rightVolume = (LVM_INT16)((*((uint32_t *)pCmdData + 1) + (1 << 11)) >> 12);\n                *(uint32_t *)pReplyData = (1 << 24);\n                *((uint32_t *)pReplyData + 1) = (1 << 24);\n                if (pContext->volumeMode == android::REVERB_VOLUME_OFF) {\n                    // force no volume ramp for first buffer processed after getting volume control\n                    pContext->volumeMode = android::REVERB_VOLUME_FLAT;\n                }\n            } else { // we don't have volume control\n                pContext->leftVolume = REVERB_UNIT_VOLUME;\n                pContext->rightVolume = REVERB_UNIT_VOLUME;\n                pContext->volumeMode = android::REVERB_VOLUME_OFF;\n            }\n            ALOGV(\"EFFECT_CMD_SET_VOLUME left %d, right %d mode %d\",\n                    pContext->leftVolume, pContext->rightVolume,  pContext->volumeMode);\n            break;\n\n        case EFFECT_CMD_SET_DEVICE:\n        case EFFECT_CMD_SET_AUDIO_MODE:\n        //ALOGV(\"\\tReverb_command cmdCode Case: \"\n        //        \"EFFECT_CMD_SET_DEVICE/EFFECT_CMD_SET_VOLUME/EFFECT_CMD_SET_AUDIO_MODE start\");\n            break;\n\n        default:\n            ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                    \"DEFAULT start %d ERROR\",cmdCode);\n            return -EINVAL;\n    }\n\n    //ALOGV(\"\\tReverb_command end\\n\\n\");\n    return 0;\n}",
    "abstract_func_before": "int Reverb_command(effect_handle_t  VAR_0,\n                              uint32_t            VAR_1,\n                              uint32_t            VAR_2,\n                              void                *VAR_3,\n                              uint32_t            *VAR_4,\n                              void                *VAR_5){\n    android::ReverbContext * VAR_6 = (android::ReverbContext *) VAR_0;\n    int VAR_7;\n    LVREV_ControlParams_st    VAR_8;              /* COMMENT_0 */\n    LVREV_ReturnStatus_en     VAR_9=VAR_10;     /* COMMENT_1 */\n\n\n    if (VAR_6 == NULL){\n        ALOGV(\"\\tLVM_ERROR : Reverb_command ERROR pContext == NULL\");\n        return -VAR_11;\n    }\n\n    /* COMMENT_2 */\n\n    switch (VAR_1){\n        case VAR_12:\n            /* COMMENT_3 */\n            /* COMMENT_4 */\n\n            if (VAR_5 == NULL || VAR_4 == NULL || *VAR_4 != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_INIT: ERROR\");\n                return -VAR_11;\n            }\n            *(int *) VAR_5 = 0;\n            break;\n\n        case VAR_13:\n            /* COMMENT_3 */\n            /* COMMENT_5 */\n            if (VAR_3 == NULL || VAR_2 != sizeof(VAR_14) ||\n                    VAR_5 == NULL || VAR_4 == NULL || *VAR_4 != sizeof(int)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_CONFIG: ERROR\");\n                return -VAR_11;\n            }\n            *(int *) VAR_5 = android::Reverb_setConfig(VAR_6,\n                                                            (effect_config_t *) VAR_3);\n            break;\n\n        case VAR_15:\n            if (VAR_5 == NULL || VAR_4 == NULL || *VAR_4 != sizeof(effect_config_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_GET_CONFIG: ERROR\");\n                return -VAR_11;\n            }\n\n            android::Reverb_getConfig(VAR_6, (effect_config_t *)VAR_5);\n            break;\n\n        case VAR_16:\n            /* COMMENT_3 */\n            /* COMMENT_6 */\n            Reverb_setConfig(VAR_6, &VAR_6->config);\n            break;\n\n        case VAR_17:{\n            /* COMMENT_3 */\n            /* COMMENT_7 */\n            effect_param_t *VAR_18 = (effect_param_t *)VAR_3;\n\n            if (VAR_3 == NULL || VAR_2 < sizeof(effect_param_t) ||\n                    VAR_2 < (sizeof(effect_param_t) + VAR_18->psize) ||\n                    VAR_5 == NULL || VAR_4 == NULL ||\n                    *VAR_4 < (sizeof(effect_param_t) + VAR_18->psize)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_GET_PARAM: ERROR\");\n                return -VAR_11;\n            }\n\n            memcpy(VAR_5, VAR_3, sizeof(effect_param_t) + VAR_18->psize);\n\n            VAR_18 = (effect_param_t *)VAR_5;\n\n            int VAR_19 = ((VAR_18->psize - 1) / sizeof(int32_t) + 1) * sizeof(int32_t);\n\n            VAR_18->status = android::Reverb_getParameter(VAR_6,\n                                                         (void *)VAR_18->data,\n                                                         (size_t  *)&VAR_18->vsize,\n                                                          VAR_18->data + VAR_19);\n\n            *VAR_4 = sizeof(effect_param_t) + VAR_19 + VAR_18->vsize;\n\n            /* COMMENT_8 */\n            /* COMMENT_9 */\n            /* COMMENT_10 */\n            /* COMMENT_11 */\n            /* COMMENT_12 */\n\n        } break;\n        case VAR_20:{\n\n            /* COMMENT_3 */\n            /* COMMENT_13 */\n            /* COMMENT_14 */\n            /* COMMENT_10 */\n            /* COMMENT_11 */\n            /* COMMENT_15 */\n\n            if (VAR_3 == NULL || (VAR_2 < (sizeof(effect_param_t) + sizeof(int32_t))) ||\n                    VAR_5 == NULL ||  VAR_4 == NULL || *VAR_4 != sizeof(int32_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_PARAM: ERROR\");\n                return -VAR_11;\n            }\n\n            effect_param_t *VAR_18 = (effect_param_t *) VAR_3;\n\n            if (VAR_18->psize != sizeof(int32_t)){\n                ALOGV(\"\\t4LVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_PARAM: ERROR, psize is not sizeof(int32_t)\");\n                return -VAR_11;\n            }\n\n            /* COMMENT_16 */\n            /* COMMENT_17 */\n            /* COMMENT_18 */\n            /* COMMENT_19 */\n            /* COMMENT_20 */\n            /* COMMENT_21 */\n\n            *(int *)VAR_5 = android::Reverb_setParameter(VAR_6,\n                                                             (void *)VAR_18->data,\n                                                              VAR_18->data + VAR_18->psize);\n        } break;\n\n        case VAR_21:\n            /* COMMENT_3 */\n            /* COMMENT_22 */\n\n            if (VAR_5 == NULL || *VAR_4 != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_ENABLE: ERROR\");\n                return -VAR_11;\n            }\n            if(VAR_6->bEnabled == VAR_22){\n                 ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                         \"EFFECT_CMD_ENABLE: ERROR-Effect is already enabled\");\n                 return -VAR_11;\n             }\n            *(int *)VAR_5 = 0;\n            VAR_6->bEnabled = VAR_22;\n            /* COMMENT_23 */\n            VAR_9 = LVREV_GetControlParameters(VAR_6->hInstance, &VAR_8);\n            LVM_ERROR_CHECK(VAR_9, \"LVREV_GetControlParameters\", \"EFFECT_CMD_ENABLE\")\n            VAR_6->SamplesToExitCount =\n                    (VAR_8.T60 * VAR_6->config.inputCfg.samplingRate)/1000;\n            /* COMMENT_24 */\n            VAR_6->volumeMode = android::REVERB_VOLUME_FLAT;\n            /* COMMENT_25 */\n            break;\n        case VAR_23:\n            /* COMMENT_3 */\n            /* COMMENT_26 */\n\n            if (VAR_5 == NULL || *VAR_4 != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_DISABLE: ERROR\");\n                return -VAR_11;\n            }\n            if(VAR_6->bEnabled == VAR_24){\n                 ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                         \"EFFECT_CMD_DISABLE: ERROR-Effect is not yet enabled\");\n                 return -VAR_11;\n             }\n            *(int *)VAR_5 = 0;\n            VAR_6->bEnabled = VAR_24;\n            break;\n\n        case VAR_25:\n            if (VAR_3 == NULL ||\n                VAR_2 != 2 * sizeof(uint32_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_VOLUME: ERROR\");\n                return -VAR_11;\n            }\n\n\n            if (VAR_5 != NULL) { /* COMMENT_27 */\n                VAR_6->leftVolume = (VAR_26)((*(uint32_t *)VAR_3 + (1 << 11)) >> 12);\n                VAR_6->rightVolume = (VAR_26)((*((uint32_t *)VAR_3 + 1) + (1 << 11)) >> 12);\n                *(uint32_t *)VAR_5 = (1 << 24);\n                *((uint32_t *)VAR_5 + 1) = (1 << 24);\n                if (VAR_6->volumeMode == android::REVERB_VOLUME_OFF) {\n                    /* COMMENT_28 */\n                    VAR_6->volumeMode = android::REVERB_VOLUME_FLAT;\n                }\n            } else { /* COMMENT_29 */\n                VAR_6->leftVolume = VAR_27;\n                VAR_6->rightVolume = VAR_27;\n                VAR_6->volumeMode = android::REVERB_VOLUME_OFF;\n            }\n            ALOGV(\"EFFECT_CMD_SET_VOLUME left %d, right %d mode %d\",\n                    VAR_6->leftVolume, VAR_6->rightVolume,  VAR_6->volumeMode);\n            break;\n\n        case VAR_28:\n        case VAR_29:\n        /* COMMENT_3 */\n        /* COMMENT_30 */\n            break;\n\n        default:\n            ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                    \"DEFAULT start %d ERROR\",VAR_1);\n            return -VAR_11;\n    }\n\n    /* COMMENT_31 */\n    return 0;\n}",
    "func_graph_path_before": "android/9e29523b9537983b4c4b205ff868d0b3bca0383b/EffectReverb.cpp/vul/before/0.json",
    "func": "int Reverb_command(effect_handle_t  self,\n                              uint32_t            cmdCode,\n                              uint32_t            cmdSize,\n                              void                *pCmdData,\n                              uint32_t            *replySize,\n                              void                *pReplyData){\n    android::ReverbContext * pContext = (android::ReverbContext *) self;\n    int retsize;\n    LVREV_ControlParams_st    ActiveParams;              /* Current control Parameters */\n    LVREV_ReturnStatus_en     LvmStatus=LVREV_SUCCESS;     /* Function call status */\n\n\n    if (pContext == NULL){\n        ALOGV(\"\\tLVM_ERROR : Reverb_command ERROR pContext == NULL\");\n        return -EINVAL;\n    }\n\n    //ALOGV(\"\\tReverb_command INPUTS are: command %d cmdSize %d\",cmdCode, cmdSize);\n\n    switch (cmdCode){\n        case EFFECT_CMD_INIT:\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_INIT start\");\n\n            if (pReplyData == NULL || replySize == NULL || *replySize != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_INIT: ERROR\");\n                return -EINVAL;\n            }\n            *(int *) pReplyData = 0;\n            break;\n\n        case EFFECT_CMD_SET_CONFIG:\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_SET_CONFIG start\");\n            if (pCmdData == NULL || cmdSize != sizeof(effect_config_t) ||\n                    pReplyData == NULL || replySize == NULL || *replySize != sizeof(int)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_CONFIG: ERROR\");\n                return -EINVAL;\n            }\n            *(int *) pReplyData = android::Reverb_setConfig(pContext,\n                                                            (effect_config_t *) pCmdData);\n            break;\n\n        case EFFECT_CMD_GET_CONFIG:\n            if (pReplyData == NULL || replySize == NULL || *replySize != sizeof(effect_config_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_GET_CONFIG: ERROR\");\n                return -EINVAL;\n            }\n\n            android::Reverb_getConfig(pContext, (effect_config_t *)pReplyData);\n            break;\n\n        case EFFECT_CMD_RESET:\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_RESET start\");\n            Reverb_setConfig(pContext, &pContext->config);\n            break;\n\n        case EFFECT_CMD_GET_PARAM:{\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_GET_PARAM start\");\n            effect_param_t *p = (effect_param_t *)pCmdData;\n            if (SIZE_MAX - sizeof(effect_param_t) < (size_t)p->psize) {\n                android_errorWriteLog(0x534e4554, \"26347509\");\n                return -EINVAL;\n            }\n            if (pCmdData == NULL || cmdSize < sizeof(effect_param_t) ||\n                    cmdSize < (sizeof(effect_param_t) + p->psize) ||\n                    pReplyData == NULL || replySize == NULL ||\n                    *replySize < (sizeof(effect_param_t) + p->psize)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_GET_PARAM: ERROR\");\n                return -EINVAL;\n            }\n\n            memcpy(pReplyData, pCmdData, sizeof(effect_param_t) + p->psize);\n\n            p = (effect_param_t *)pReplyData;\n\n            int voffset = ((p->psize - 1) / sizeof(int32_t) + 1) * sizeof(int32_t);\n\n            p->status = android::Reverb_getParameter(pContext,\n                                                         (void *)p->data,\n                                                         (size_t  *)&p->vsize,\n                                                          p->data + voffset);\n\n            *replySize = sizeof(effect_param_t) + voffset + p->vsize;\n\n            //ALOGV(\"\\tReverb_command EFFECT_CMD_GET_PARAM \"\n            //        \"*pCmdData %d, *replySize %d, *pReplyData %d \",\n            //        *(int32_t *)((char *)pCmdData + sizeof(effect_param_t)),\n            //        *replySize,\n            //        *(int16_t *)((char *)pReplyData + sizeof(effect_param_t) + voffset));\n\n        } break;\n        case EFFECT_CMD_SET_PARAM:{\n\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_SET_PARAM start\");\n            //ALOGV(\"\\tReverb_command EFFECT_CMD_SET_PARAM param %d, *replySize %d, value %d \",\n            //        *(int32_t *)((char *)pCmdData + sizeof(effect_param_t)),\n            //        *replySize,\n            //        *(int16_t *)((char *)pCmdData + sizeof(effect_param_t) + sizeof(int32_t)));\n\n            if (pCmdData == NULL || (cmdSize < (sizeof(effect_param_t) + sizeof(int32_t))) ||\n                    pReplyData == NULL ||  replySize == NULL || *replySize != sizeof(int32_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_PARAM: ERROR\");\n                return -EINVAL;\n            }\n\n            effect_param_t *p = (effect_param_t *) pCmdData;\n\n            if (p->psize != sizeof(int32_t)){\n                ALOGV(\"\\t4LVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_PARAM: ERROR, psize is not sizeof(int32_t)\");\n                return -EINVAL;\n            }\n\n            //ALOGV(\"\\tn5Reverb_command cmdSize is %d\\n\"\n            //        \"\\tsizeof(effect_param_t) is  %d\\n\"\n            //        \"\\tp->psize is %d\\n\"\n            //        \"\\tp->vsize is %d\"\n            //        \"\\n\",\n            //        cmdSize, sizeof(effect_param_t), p->psize, p->vsize );\n\n            *(int *)pReplyData = android::Reverb_setParameter(pContext,\n                                                             (void *)p->data,\n                                                              p->data + p->psize);\n        } break;\n\n        case EFFECT_CMD_ENABLE:\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_ENABLE start\");\n\n            if (pReplyData == NULL || *replySize != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_ENABLE: ERROR\");\n                return -EINVAL;\n            }\n            if(pContext->bEnabled == LVM_TRUE){\n                 ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                         \"EFFECT_CMD_ENABLE: ERROR-Effect is already enabled\");\n                 return -EINVAL;\n             }\n            *(int *)pReplyData = 0;\n            pContext->bEnabled = LVM_TRUE;\n            /* Get the current settings */\n            LvmStatus = LVREV_GetControlParameters(pContext->hInstance, &ActiveParams);\n            LVM_ERROR_CHECK(LvmStatus, \"LVREV_GetControlParameters\", \"EFFECT_CMD_ENABLE\")\n            pContext->SamplesToExitCount =\n                    (ActiveParams.T60 * pContext->config.inputCfg.samplingRate)/1000;\n            // force no volume ramp for first buffer processed after enabling the effect\n            pContext->volumeMode = android::REVERB_VOLUME_FLAT;\n            //ALOGV(\"\\tEFFECT_CMD_ENABLE SamplesToExitCount = %d\", pContext->SamplesToExitCount);\n            break;\n        case EFFECT_CMD_DISABLE:\n            //ALOGV(\"\\tReverb_command cmdCode Case: \"\n            //        \"EFFECT_CMD_DISABLE start\");\n\n            if (pReplyData == NULL || *replySize != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_DISABLE: ERROR\");\n                return -EINVAL;\n            }\n            if(pContext->bEnabled == LVM_FALSE){\n                 ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                         \"EFFECT_CMD_DISABLE: ERROR-Effect is not yet enabled\");\n                 return -EINVAL;\n             }\n            *(int *)pReplyData = 0;\n            pContext->bEnabled = LVM_FALSE;\n            break;\n\n        case EFFECT_CMD_SET_VOLUME:\n            if (pCmdData == NULL ||\n                cmdSize != 2 * sizeof(uint32_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_VOLUME: ERROR\");\n                return -EINVAL;\n            }\n\n\n            if (pReplyData != NULL) { // we have volume control\n                pContext->leftVolume = (LVM_INT16)((*(uint32_t *)pCmdData + (1 << 11)) >> 12);\n                pContext->rightVolume = (LVM_INT16)((*((uint32_t *)pCmdData + 1) + (1 << 11)) >> 12);\n                *(uint32_t *)pReplyData = (1 << 24);\n                *((uint32_t *)pReplyData + 1) = (1 << 24);\n                if (pContext->volumeMode == android::REVERB_VOLUME_OFF) {\n                    // force no volume ramp for first buffer processed after getting volume control\n                    pContext->volumeMode = android::REVERB_VOLUME_FLAT;\n                }\n            } else { // we don't have volume control\n                pContext->leftVolume = REVERB_UNIT_VOLUME;\n                pContext->rightVolume = REVERB_UNIT_VOLUME;\n                pContext->volumeMode = android::REVERB_VOLUME_OFF;\n            }\n            ALOGV(\"EFFECT_CMD_SET_VOLUME left %d, right %d mode %d\",\n                    pContext->leftVolume, pContext->rightVolume,  pContext->volumeMode);\n            break;\n\n        case EFFECT_CMD_SET_DEVICE:\n        case EFFECT_CMD_SET_AUDIO_MODE:\n        //ALOGV(\"\\tReverb_command cmdCode Case: \"\n        //        \"EFFECT_CMD_SET_DEVICE/EFFECT_CMD_SET_VOLUME/EFFECT_CMD_SET_AUDIO_MODE start\");\n            break;\n\n        default:\n            ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                    \"DEFAULT start %d ERROR\",cmdCode);\n            return -EINVAL;\n    }\n\n    //ALOGV(\"\\tReverb_command end\\n\\n\");\n    return 0;\n}",
    "abstract_func": "int Reverb_command(effect_handle_t  VAR_0,\n                              uint32_t            VAR_1,\n                              uint32_t            VAR_2,\n                              void                *VAR_3,\n                              uint32_t            *VAR_4,\n                              void                *VAR_5){\n    android::ReverbContext * VAR_6 = (android::ReverbContext *) VAR_0;\n    int VAR_7;\n    LVREV_ControlParams_st    VAR_8;              /* COMMENT_0 */\n    LVREV_ReturnStatus_en     VAR_9=VAR_10;     /* COMMENT_1 */\n\n\n    if (VAR_6 == NULL){\n        ALOGV(\"\\tLVM_ERROR : Reverb_command ERROR pContext == NULL\");\n        return -VAR_11;\n    }\n\n    /* COMMENT_2 */\n\n    switch (VAR_1){\n        case VAR_12:\n            /* COMMENT_3 */\n            /* COMMENT_4 */\n\n            if (VAR_5 == NULL || VAR_4 == NULL || *VAR_4 != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_INIT: ERROR\");\n                return -VAR_11;\n            }\n            *(int *) VAR_5 = 0;\n            break;\n\n        case VAR_13:\n            /* COMMENT_3 */\n            /* COMMENT_5 */\n            if (VAR_3 == NULL || VAR_2 != sizeof(VAR_14) ||\n                    VAR_5 == NULL || VAR_4 == NULL || *VAR_4 != sizeof(int)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_CONFIG: ERROR\");\n                return -VAR_11;\n            }\n            *(int *) VAR_5 = android::Reverb_setConfig(VAR_6,\n                                                            (effect_config_t *) VAR_3);\n            break;\n\n        case VAR_15:\n            if (VAR_5 == NULL || VAR_4 == NULL || *VAR_4 != sizeof(effect_config_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_GET_CONFIG: ERROR\");\n                return -VAR_11;\n            }\n\n            android::Reverb_getConfig(VAR_6, (effect_config_t *)VAR_5);\n            break;\n\n        case VAR_16:\n            /* COMMENT_3 */\n            /* COMMENT_6 */\n            Reverb_setConfig(VAR_6, &VAR_6->config);\n            break;\n\n        case VAR_17:{\n            /* COMMENT_3 */\n            /* COMMENT_7 */\n            effect_param_t *VAR_18 = (effect_param_t *)VAR_3;\n            if (VAR_19 - sizeof(effect_param_t) < (size_t)VAR_18->psize) {\n                android_errorWriteLog(0x534e4554, \"26347509\");\n                return -VAR_11;\n            }\n            if (VAR_3 == NULL || VAR_2 < sizeof(effect_param_t) ||\n                    VAR_2 < (sizeof(effect_param_t) + VAR_18->psize) ||\n                    VAR_5 == NULL || VAR_4 == NULL ||\n                    *VAR_4 < (sizeof(effect_param_t) + VAR_18->psize)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_GET_PARAM: ERROR\");\n                return -VAR_11;\n            }\n\n            memcpy(VAR_5, VAR_3, sizeof(effect_param_t) + VAR_18->psize);\n\n            VAR_18 = (effect_param_t *)VAR_5;\n\n            int VAR_20 = ((VAR_18->psize - 1) / sizeof(int32_t) + 1) * sizeof(int32_t);\n\n            VAR_18->status = android::Reverb_getParameter(VAR_6,\n                                                         (void *)VAR_18->data,\n                                                         (size_t  *)&VAR_18->vsize,\n                                                          VAR_18->data + VAR_20);\n\n            *VAR_4 = sizeof(effect_param_t) + VAR_20 + VAR_18->vsize;\n\n            /* COMMENT_8 */\n            /* COMMENT_9 */\n            /* COMMENT_10 */\n            /* COMMENT_11 */\n            /* COMMENT_12 */\n\n        } break;\n        case VAR_21:{\n\n            /* COMMENT_3 */\n            /* COMMENT_13 */\n            /* COMMENT_14 */\n            /* COMMENT_10 */\n            /* COMMENT_11 */\n            /* COMMENT_15 */\n\n            if (VAR_3 == NULL || (VAR_2 < (sizeof(effect_param_t) + sizeof(int32_t))) ||\n                    VAR_5 == NULL ||  VAR_4 == NULL || *VAR_4 != sizeof(int32_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_PARAM: ERROR\");\n                return -VAR_11;\n            }\n\n            effect_param_t *VAR_18 = (effect_param_t *) VAR_3;\n\n            if (VAR_18->psize != sizeof(int32_t)){\n                ALOGV(\"\\t4LVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_PARAM: ERROR, psize is not sizeof(int32_t)\");\n                return -VAR_11;\n            }\n\n            /* COMMENT_16 */\n            /* COMMENT_17 */\n            /* COMMENT_18 */\n            /* COMMENT_19 */\n            /* COMMENT_20 */\n            /* COMMENT_21 */\n\n            *(int *)VAR_5 = android::Reverb_setParameter(VAR_6,\n                                                             (void *)VAR_18->data,\n                                                              VAR_18->data + VAR_18->psize);\n        } break;\n\n        case VAR_22:\n            /* COMMENT_3 */\n            /* COMMENT_22 */\n\n            if (VAR_5 == NULL || *VAR_4 != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_ENABLE: ERROR\");\n                return -VAR_11;\n            }\n            if(VAR_6->bEnabled == VAR_23){\n                 ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                         \"EFFECT_CMD_ENABLE: ERROR-Effect is already enabled\");\n                 return -VAR_11;\n             }\n            *(int *)VAR_5 = 0;\n            VAR_6->bEnabled = VAR_23;\n            /* COMMENT_23 */\n            VAR_9 = LVREV_GetControlParameters(VAR_6->hInstance, &VAR_8);\n            LVM_ERROR_CHECK(VAR_9, \"LVREV_GetControlParameters\", \"EFFECT_CMD_ENABLE\")\n            VAR_6->SamplesToExitCount =\n                    (VAR_8.T60 * VAR_6->config.inputCfg.samplingRate)/1000;\n            /* COMMENT_24 */\n            VAR_6->volumeMode = android::REVERB_VOLUME_FLAT;\n            /* COMMENT_25 */\n            break;\n        case VAR_24:\n            /* COMMENT_3 */\n            /* COMMENT_26 */\n\n            if (VAR_5 == NULL || *VAR_4 != sizeof(int)){\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_DISABLE: ERROR\");\n                return -VAR_11;\n            }\n            if(VAR_6->bEnabled == VAR_25){\n                 ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                         \"EFFECT_CMD_DISABLE: ERROR-Effect is not yet enabled\");\n                 return -VAR_11;\n             }\n            *(int *)VAR_5 = 0;\n            VAR_6->bEnabled = VAR_25;\n            break;\n\n        case VAR_26:\n            if (VAR_3 == NULL ||\n                VAR_2 != 2 * sizeof(uint32_t)) {\n                ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                        \"EFFECT_CMD_SET_VOLUME: ERROR\");\n                return -VAR_11;\n            }\n\n\n            if (VAR_5 != NULL) { /* COMMENT_27 */\n                VAR_6->leftVolume = (VAR_27)((*(uint32_t *)VAR_3 + (1 << 11)) >> 12);\n                VAR_6->rightVolume = (VAR_27)((*((uint32_t *)VAR_3 + 1) + (1 << 11)) >> 12);\n                *(uint32_t *)VAR_5 = (1 << 24);\n                *((uint32_t *)VAR_5 + 1) = (1 << 24);\n                if (VAR_6->volumeMode == android::REVERB_VOLUME_OFF) {\n                    /* COMMENT_28 */\n                    VAR_6->volumeMode = android::REVERB_VOLUME_FLAT;\n                }\n            } else { /* COMMENT_29 */\n                VAR_6->leftVolume = VAR_28;\n                VAR_6->rightVolume = VAR_28;\n                VAR_6->volumeMode = android::REVERB_VOLUME_OFF;\n            }\n            ALOGV(\"EFFECT_CMD_SET_VOLUME left %d, right %d mode %d\",\n                    VAR_6->leftVolume, VAR_6->rightVolume,  VAR_6->volumeMode);\n            break;\n\n        case VAR_29:\n        case VAR_30:\n        /* COMMENT_3 */\n        /* COMMENT_30 */\n            break;\n\n        default:\n            ALOGV(\"\\tLVM_ERROR : Reverb_command cmdCode Case: \"\n                    \"DEFAULT start %d ERROR\",VAR_1);\n            return -VAR_11;\n    }\n\n    /* COMMENT_31 */\n    return 0;\n}",
    "func_graph_path": "android/9e29523b9537983b4c4b205ff868d0b3bca0383b/EffectReverb.cpp/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -63,7 +63,10 @@\n             //ALOGV(\"\\tReverb_command cmdCode Case: \"\n             //        \"EFFECT_CMD_GET_PARAM start\");\n             effect_param_t *p = (effect_param_t *)pCmdData;\n-\n+            if (SIZE_MAX - sizeof(effect_param_t) < (size_t)p->psize) {\n+                android_errorWriteLog(0x534e4554, \"26347509\");\n+                return -EINVAL;\n+            }\n             if (pCmdData == NULL || cmdSize < sizeof(effect_param_t) ||\n                     cmdSize < (sizeof(effect_param_t) + p->psize) ||\n                     pReplyData == NULL || replySize == NULL ||",
    "diff_line_info": {
        "deleted_lines": [
            ""
        ],
        "added_lines": [
            "            if (SIZE_MAX - sizeof(effect_param_t) < (size_t)p->psize) {",
            "                android_errorWriteLog(0x534e4554, \"26347509\");",
            "                return -EINVAL;",
            "            }"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}