{
    "cve_id": "CVE-2016-5155",
    "cwe_ids": [
        "CWE-254"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
    "cvss_is_v3": false,
    "repo_name": "chromium",
    "commit_msg": "binding: Moves the check for the first access to the initial document into BindingSecurity.\n\nChecks the access to the initial document and reports it not only at\nsecurityCheck() in V8Window.cpp but also at every call to\nBindingSecurity::shouldAllowAccessTo() because V8 only calls back\nsecurityCheck() on property lookups, and not for function invocation.\n\nBindingSecurity::shouldAllowAccessTo() is called with every possible\ncross-origin window, which means every possible new window.  Thus,\nshouldAllowAccessTo() should be the right place to check the access\nto the initial document.\n\nBUG=630662\nTBR=benwells@chromium.org\n\nReview-Url: https://codereview.chromium.org/2209303002\nCr-Commit-Position: refs/heads/master@{#412195}\n",
    "commit_hash": "b8dcfeb065bbfd777cdc5f5433da9a87f25e6ec6",
    "git_url": "https://chromium.googlesource.com/chromium/src/+/b8dcfeb065bbfd777cdc5f5433da9a87f25e6ec6",
    "file_path": "third_party/WebKit/Source/bindings/core/v8/BindingSecurity.cpp",
    "func_name": "BindingSecurity::shouldAllowAccessTo",
    "func_before": "bool BindingSecurity::shouldAllowAccessTo(v8::Isolate* isolate, const LocalDOMWindow* accessingWindow, const Location* target, SecurityReportingOption reportingOption)\n{\n    ASSERT(target);\n    const Frame* frame = target->frame();\n    if (!frame || !frame->securityContext())\n        return false;\n    return canAccessFrame(isolate, accessingWindow, frame->securityContext()->getSecurityOrigin(), frame->domWindow(), reportingOption);\n}",
    "abstract_func_before": "bool BindingSecurity::shouldAllowAccessTo(v8::Isolate* VAR_0, const LocalDOMWindow* VAR_1, const Location* VAR_2, SecurityReportingOption VAR_3)\n{\n    ASSERT(VAR_2);\n    const Frame* VAR_4 = VAR_2->frame();\n    if (!VAR_4 || !VAR_4->securityContext())\n        return false;\n    return canAccessFrame(VAR_0, VAR_1, VAR_4->securityContext()->getSecurityOrigin(), VAR_4->domWindow(), VAR_3);\n}",
    "func_graph_path_before": "chromium/b8dcfeb065bbfd777cdc5f5433da9a87f25e6ec6/BindingSecurity.cpp/vul/before/7.json",
    "func": "bool BindingSecurity::shouldAllowAccessTo(v8::Isolate* isolate, const LocalDOMWindow* accessingWindow, const Location* target, SecurityReportingOption reportingOption)\n{\n    ASSERT(target);\n    const Frame* frame = target->frame();\n    if (!frame || !frame->securityContext())\n        return false;\n    return canAccessFrame(accessingWindow, frame->securityContext()->getSecurityOrigin(), frame->domWindow(), reportingOption);\n}",
    "abstract_func": "bool BindingSecurity::shouldAllowAccessTo(v8::Isolate* VAR_0, const LocalDOMWindow* VAR_1, const Location* VAR_2, SecurityReportingOption VAR_3)\n{\n    ASSERT(VAR_2);\n    const Frame* VAR_4 = VAR_2->frame();\n    if (!VAR_4 || !VAR_4->securityContext())\n        return false;\n    return canAccessFrame(VAR_1, VAR_4->securityContext()->getSecurityOrigin(), VAR_4->domWindow(), VAR_3);\n}",
    "func_graph_path": "chromium/b8dcfeb065bbfd777cdc5f5433da9a87f25e6ec6/BindingSecurity.cpp/vul/after/7.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -4,5 +4,5 @@\n     const Frame* frame = target->frame();\n     if (!frame || !frame->securityContext())\n         return false;\n-    return canAccessFrame(isolate, accessingWindow, frame->securityContext()->getSecurityOrigin(), frame->domWindow(), reportingOption);\n+    return canAccessFrame(accessingWindow, frame->securityContext()->getSecurityOrigin(), frame->domWindow(), reportingOption);\n }",
    "diff_line_info": {
        "deleted_lines": [
            "    return canAccessFrame(isolate, accessingWindow, frame->securityContext()->getSecurityOrigin(), frame->domWindow(), reportingOption);"
        ],
        "added_lines": [
            "    return canAccessFrame(accessingWindow, frame->securityContext()->getSecurityOrigin(), frame->domWindow(), reportingOption);"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}