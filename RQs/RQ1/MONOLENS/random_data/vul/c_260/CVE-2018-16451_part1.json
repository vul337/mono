{
    "cve_id": "CVE-2018-16451",
    "cwe_ids": [
        "CWE-125"
    ],
    "cvss_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
    "cvss_is_v3": false,
    "repo_name": "the-tcpdump-group/tcpdump",
    "commit_msg": "(for 4.9.3) SMB: Add two missing bounds checks",
    "commit_hash": "96480ab95308cd9234b4f09b175ebf60e17792c6",
    "git_url": "https://github.com/the-tcpdump-group/tcpdump/commit/96480ab95308cd9234b4f09b175ebf60e17792c6",
    "file_path": "print-smb.c",
    "func_name": "print_trans",
    "func_before": "static void\nprint_trans(netdissect_options *ndo,\n            const u_char *words, const u_char *data1, const u_char *buf, const u_char *maxbuf)\n{\n    u_int bcc;\n    const char *f1, *f2, *f3, *f4;\n    const u_char *data, *param;\n    const u_char *w = words + 1;\n    int datalen, paramlen;\n\n    if (request) {\n\tND_TCHECK2(w[12 * 2], 2);\n\tparamlen = EXTRACT_LE_16BITS(w + 9 * 2);\n\tparam = buf + EXTRACT_LE_16BITS(w + 10 * 2);\n\tdatalen = EXTRACT_LE_16BITS(w + 11 * 2);\n\tdata = buf + EXTRACT_LE_16BITS(w + 12 * 2);\n\tf1 = \"TotParamCnt=[d] \\nTotDataCnt=[d] \\nMaxParmCnt=[d] \\nMaxDataCnt=[d]\\nMaxSCnt=[d] \\nTransFlags=[w] \\nRes1=[w] \\nRes2=[w] \\nRes3=[w]\\nParamCnt=[d] \\nParamOff=[d] \\nDataCnt=[d] \\nDataOff=[d] \\nSUCnt=[d]\\n\";\n\tf2 = \"|Name=[S]\\n\";\n\tf3 = \"|Param \";\n\tf4 = \"|Data \";\n    } else {\n\tND_TCHECK2(w[7 * 2], 2);\n\tparamlen = EXTRACT_LE_16BITS(w + 3 * 2);\n\tparam = buf + EXTRACT_LE_16BITS(w + 4 * 2);\n\tdatalen = EXTRACT_LE_16BITS(w + 6 * 2);\n\tdata = buf + EXTRACT_LE_16BITS(w + 7 * 2);\n\tf1 = \"TotParamCnt=[d] \\nTotDataCnt=[d] \\nRes1=[d]\\nParamCnt=[d] \\nParamOff=[d] \\nRes2=[d] \\nDataCnt=[d] \\nDataOff=[d] \\nRes3=[d]\\nLsetup=[d]\\n\";\n\tf2 = \"|Unknown \";\n\tf3 = \"|Param \";\n\tf4 = \"|Data \";\n    }\n\n    smb_fdata(ndo, words + 1, f1, min(words + 1 + 2 * words[0], maxbuf),\n        unicodestr);\n\n    ND_TCHECK2(*data1, 2);\n    bcc = EXTRACT_LE_16BITS(data1);\n    ND_PRINT((ndo, \"smb_bcc=%u\\n\", bcc));\n    if (bcc > 0) {\n\tsmb_fdata(ndo, data1 + 2, f2, maxbuf - (paramlen + datalen), unicodestr);\n\n\tif (strcmp((const char *)(data1 + 2), \"\\\\MAILSLOT\\\\BROWSE\") == 0) {\n\t    print_browse(ndo, param, paramlen, data, datalen);\n\t    return;\n\t}\n\n\tif (strcmp((const char *)(data1 + 2), \"\\\\PIPE\\\\LANMAN\") == 0) {\n\t    print_ipc(ndo, param, paramlen, data, datalen);\n\t    return;\n\t}\n\n\tif (paramlen)\n\t    smb_fdata(ndo, param, f3, min(param + paramlen, maxbuf), unicodestr);\n\tif (datalen)\n\t    smb_fdata(ndo, data, f4, min(data + datalen, maxbuf), unicodestr);\n    }\n    return;\ntrunc:\n    ND_PRINT((ndo, \"%s\", tstr));\n}",
    "abstract_func_before": "static void\nprint_trans(netdissect_options *VAR_0,\n            const u_char *VAR_1, const u_char *VAR_2, const u_char *VAR_3, const u_char *VAR_4)\n{\n    u_int VAR_5;\n    const char *VAR_6, *VAR_7, *VAR_8, *VAR_9;\n    const u_char *VAR_10, *VAR_11;\n    const u_char *VAR_12 = VAR_1 + 1;\n    int VAR_13, VAR_14;\n\n    if (VAR_15) {\n\tND_TCHECK2(VAR_12[12 * 2], 2);\n\tVAR_14 = EXTRACT_LE_16BITS(VAR_12 + 9 * 2);\n\tVAR_11 = VAR_3 + EXTRACT_LE_16BITS(VAR_12 + 10 * 2);\n\tVAR_13 = EXTRACT_LE_16BITS(VAR_12 + 11 * 2);\n\tVAR_10 = VAR_3 + EXTRACT_LE_16BITS(VAR_12 + 12 * 2);\n\tVAR_6 = \"TotParamCnt=[d] \\nTotDataCnt=[d] \\nMaxParmCnt=[d] \\nMaxDataCnt=[d]\\nMaxSCnt=[d] \\nTransFlags=[w] \\nRes1=[w] \\nRes2=[w] \\nRes3=[w]\\nParamCnt=[d] \\nParamOff=[d] \\nDataCnt=[d] \\nDataOff=[d] \\nSUCnt=[d]\\n\";\n\tVAR_7 = \"|Name=[S]\\n\";\n\tVAR_8 = \"|Param \";\n\tVAR_9 = \"|Data \";\n    } else {\n\tND_TCHECK2(VAR_12[7 * 2], 2);\n\tVAR_14 = EXTRACT_LE_16BITS(VAR_12 + 3 * 2);\n\tVAR_11 = VAR_3 + EXTRACT_LE_16BITS(VAR_12 + 4 * 2);\n\tVAR_13 = EXTRACT_LE_16BITS(VAR_12 + 6 * 2);\n\tVAR_10 = VAR_3 + EXTRACT_LE_16BITS(VAR_12 + 7 * 2);\n\tVAR_6 = \"TotParamCnt=[d] \\nTotDataCnt=[d] \\nRes1=[d]\\nParamCnt=[d] \\nParamOff=[d] \\nRes2=[d] \\nDataCnt=[d] \\nDataOff=[d] \\nRes3=[d]\\nLsetup=[d]\\n\";\n\tVAR_7 = \"|Unknown \";\n\tVAR_8 = \"|Param \";\n\tVAR_9 = \"|Data \";\n    }\n\n    smb_fdata(VAR_0, VAR_1 + 1, VAR_6, min(VAR_1 + 1 + 2 * VAR_1[0], VAR_4),\n        VAR_16);\n\n    ND_TCHECK2(*VAR_2, 2);\n    VAR_5 = EXTRACT_LE_16BITS(VAR_2);\n    ND_PRINT((VAR_0, \"smb_bcc=%u\\n\", VAR_5));\n    if (VAR_5 > 0) {\n\tsmb_fdata(VAR_0, VAR_2 + 2, VAR_7, VAR_4 - (VAR_14 + VAR_13), VAR_16);\n\n\tif (strcmp((const char *)(VAR_2 + 2), \"\\\\MAILSLOT\\\\BROWSE\") == 0) {\n\t    print_browse(VAR_0, VAR_11, VAR_14, VAR_10, VAR_13);\n\t    return;\n\t}\n\n\tif (strcmp((const char *)(VAR_2 + 2), \"\\\\PIPE\\\\LANMAN\") == 0) {\n\t    print_ipc(VAR_0, VAR_11, VAR_14, VAR_10, VAR_13);\n\t    return;\n\t}\n\n\tif (VAR_14)\n\t    smb_fdata(VAR_0, VAR_11, VAR_8, min(VAR_11 + VAR_14, VAR_4), VAR_16);\n\tif (VAR_13)\n\t    smb_fdata(VAR_0, VAR_10, VAR_9, min(VAR_10 + VAR_13, VAR_4), VAR_16);\n    }\n    return;\ntrunc:\n    ND_PRINT((VAR_0, \"%s\", VAR_17));\n}",
    "func_graph_path_before": "the-tcpdump-group/tcpdump/96480ab95308cd9234b4f09b175ebf60e17792c6/print-smb.c/vul/before/0.json",
    "func": "static void\nprint_trans(netdissect_options *ndo,\n            const u_char *words, const u_char *data1, const u_char *buf, const u_char *maxbuf)\n{\n    u_int bcc;\n    const char *f1, *f2, *f3, *f4;\n    const u_char *data, *param;\n    const u_char *w = words + 1;\n    int datalen, paramlen;\n\n    if (request) {\n\tND_TCHECK2(w[12 * 2], 2);\n\tparamlen = EXTRACT_LE_16BITS(w + 9 * 2);\n\tparam = buf + EXTRACT_LE_16BITS(w + 10 * 2);\n\tdatalen = EXTRACT_LE_16BITS(w + 11 * 2);\n\tdata = buf + EXTRACT_LE_16BITS(w + 12 * 2);\n\tf1 = \"TotParamCnt=[d] \\nTotDataCnt=[d] \\nMaxParmCnt=[d] \\nMaxDataCnt=[d]\\nMaxSCnt=[d] \\nTransFlags=[w] \\nRes1=[w] \\nRes2=[w] \\nRes3=[w]\\nParamCnt=[d] \\nParamOff=[d] \\nDataCnt=[d] \\nDataOff=[d] \\nSUCnt=[d]\\n\";\n\tf2 = \"|Name=[S]\\n\";\n\tf3 = \"|Param \";\n\tf4 = \"|Data \";\n    } else {\n\tND_TCHECK2(w[7 * 2], 2);\n\tparamlen = EXTRACT_LE_16BITS(w + 3 * 2);\n\tparam = buf + EXTRACT_LE_16BITS(w + 4 * 2);\n\tdatalen = EXTRACT_LE_16BITS(w + 6 * 2);\n\tdata = buf + EXTRACT_LE_16BITS(w + 7 * 2);\n\tf1 = \"TotParamCnt=[d] \\nTotDataCnt=[d] \\nRes1=[d]\\nParamCnt=[d] \\nParamOff=[d] \\nRes2=[d] \\nDataCnt=[d] \\nDataOff=[d] \\nRes3=[d]\\nLsetup=[d]\\n\";\n\tf2 = \"|Unknown \";\n\tf3 = \"|Param \";\n\tf4 = \"|Data \";\n    }\n\n    smb_fdata(ndo, words + 1, f1, min(words + 1 + 2 * words[0], maxbuf),\n        unicodestr);\n\n    ND_TCHECK2(*data1, 2);\n    bcc = EXTRACT_LE_16BITS(data1);\n    ND_PRINT((ndo, \"smb_bcc=%u\\n\", bcc));\n    if (bcc > 0) {\n\tsmb_fdata(ndo, data1 + 2, f2, maxbuf - (paramlen + datalen), unicodestr);\n#define MAILSLOT_BROWSE_STR \"\\\\MAILSLOT\\\\BROWSE\"\n\tND_TCHECK2(*(data1 + 2), strlen(MAILSLOT_BROWSE_STR) + 1);\n\tif (strcmp((const char *)(data1 + 2), MAILSLOT_BROWSE_STR) == 0) {\n\t    print_browse(ndo, param, paramlen, data, datalen);\n\t    return;\n\t}\n#undef MAILSLOT_BROWSE_STR\n\n#define PIPE_LANMAN_STR \"\\\\PIPE\\\\LANMAN\"\n\tND_TCHECK2(*(data1 + 2), strlen(PIPE_LANMAN_STR) + 1);\n\tif (strcmp((const char *)(data1 + 2), PIPE_LANMAN_STR) == 0) {\n\t    print_ipc(ndo, param, paramlen, data, datalen);\n\t    return;\n\t}\n#undef PIPE_LANMAN_STR\n\n\tif (paramlen)\n\t    smb_fdata(ndo, param, f3, min(param + paramlen, maxbuf), unicodestr);\n\tif (datalen)\n\t    smb_fdata(ndo, data, f4, min(data + datalen, maxbuf), unicodestr);\n    }\n    return;\ntrunc:\n    ND_PRINT((ndo, \"%s\", tstr));\n}",
    "abstract_func": "static void\nprint_trans(netdissect_options *VAR_0,\n            const u_char *VAR_1, const u_char *VAR_2, const u_char *VAR_3, const u_char *VAR_4)\n{\n    u_int VAR_5;\n    const char *VAR_6, *VAR_7, *VAR_8, *VAR_9;\n    const u_char *VAR_10, *VAR_11;\n    const u_char *VAR_12 = VAR_1 + 1;\n    int VAR_13, VAR_14;\n\n    if (VAR_15) {\n\tND_TCHECK2(VAR_12[12 * 2], 2);\n\tVAR_14 = EXTRACT_LE_16BITS(VAR_12 + 9 * 2);\n\tVAR_11 = VAR_3 + EXTRACT_LE_16BITS(VAR_12 + 10 * 2);\n\tVAR_13 = EXTRACT_LE_16BITS(VAR_12 + 11 * 2);\n\tVAR_10 = VAR_3 + EXTRACT_LE_16BITS(VAR_12 + 12 * 2);\n\tVAR_6 = \"TotParamCnt=[d] \\nTotDataCnt=[d] \\nMaxParmCnt=[d] \\nMaxDataCnt=[d]\\nMaxSCnt=[d] \\nTransFlags=[w] \\nRes1=[w] \\nRes2=[w] \\nRes3=[w]\\nParamCnt=[d] \\nParamOff=[d] \\nDataCnt=[d] \\nDataOff=[d] \\nSUCnt=[d]\\n\";\n\tVAR_7 = \"|Name=[S]\\n\";\n\tVAR_8 = \"|Param \";\n\tVAR_9 = \"|Data \";\n    } else {\n\tND_TCHECK2(VAR_12[7 * 2], 2);\n\tVAR_14 = EXTRACT_LE_16BITS(VAR_12 + 3 * 2);\n\tVAR_11 = VAR_3 + EXTRACT_LE_16BITS(VAR_12 + 4 * 2);\n\tVAR_13 = EXTRACT_LE_16BITS(VAR_12 + 6 * 2);\n\tVAR_10 = VAR_3 + EXTRACT_LE_16BITS(VAR_12 + 7 * 2);\n\tVAR_6 = \"TotParamCnt=[d] \\nTotDataCnt=[d] \\nRes1=[d]\\nParamCnt=[d] \\nParamOff=[d] \\nRes2=[d] \\nDataCnt=[d] \\nDataOff=[d] \\nRes3=[d]\\nLsetup=[d]\\n\";\n\tVAR_7 = \"|Unknown \";\n\tVAR_8 = \"|Param \";\n\tVAR_9 = \"|Data \";\n    }\n\n    smb_fdata(VAR_0, VAR_1 + 1, VAR_6, min(VAR_1 + 1 + 2 * VAR_1[0], VAR_4),\n        VAR_16);\n\n    ND_TCHECK2(*VAR_2, 2);\n    VAR_5 = EXTRACT_LE_16BITS(VAR_2);\n    ND_PRINT((VAR_0, \"smb_bcc=%u\\n\", VAR_5));\n    if (VAR_5 > 0) {\n\tsmb_fdata(VAR_0, VAR_2 + 2, VAR_7, VAR_4 - (VAR_14 + VAR_13), VAR_16);\n#define VAR_17 \"\\\\MAILSLOT\\\\BROWSE\"\n\tND_TCHECK2(*(VAR_2 + 2), strlen(VAR_17) + 1);\n\tif (strcmp((const char *)(VAR_2 + 2), VAR_17) == 0) {\n\t    print_browse(VAR_0, VAR_11, VAR_14, VAR_10, VAR_13);\n\t    return;\n\t}\n#undef MAILSLOT_BROWSE_STR\n\n#define VAR_18 \"\\\\PIPE\\\\LANMAN\"\n\tND_TCHECK2(*(VAR_2 + 2), strlen(VAR_18) + 1);\n\tif (strcmp((const char *)(VAR_2 + 2), VAR_18) == 0) {\n\t    print_ipc(VAR_0, VAR_11, VAR_14, VAR_10, VAR_13);\n\t    return;\n\t}\n#undef PIPE_LANMAN_STR\n\n\tif (VAR_14)\n\t    smb_fdata(VAR_0, VAR_11, VAR_8, min(VAR_11 + VAR_14, VAR_4), VAR_16);\n\tif (VAR_13)\n\t    smb_fdata(VAR_0, VAR_10, VAR_9, min(VAR_10 + VAR_13, VAR_4), VAR_16);\n    }\n    return;\ntrunc:\n    ND_PRINT((VAR_0, \"%s\", VAR_19));\n}",
    "func_graph_path": "the-tcpdump-group/tcpdump/96480ab95308cd9234b4f09b175ebf60e17792c6/print-smb.c/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -38,16 +38,21 @@\n     ND_PRINT((ndo, \"smb_bcc=%u\\n\", bcc));\n     if (bcc > 0) {\n \tsmb_fdata(ndo, data1 + 2, f2, maxbuf - (paramlen + datalen), unicodestr);\n-\n-\tif (strcmp((const char *)(data1 + 2), \"\\\\MAILSLOT\\\\BROWSE\") == 0) {\n+#define MAILSLOT_BROWSE_STR \"\\\\MAILSLOT\\\\BROWSE\"\n+\tND_TCHECK2(*(data1 + 2), strlen(MAILSLOT_BROWSE_STR) + 1);\n+\tif (strcmp((const char *)(data1 + 2), MAILSLOT_BROWSE_STR) == 0) {\n \t    print_browse(ndo, param, paramlen, data, datalen);\n \t    return;\n \t}\n+#undef MAILSLOT_BROWSE_STR\n \n-\tif (strcmp((const char *)(data1 + 2), \"\\\\PIPE\\\\LANMAN\") == 0) {\n+#define PIPE_LANMAN_STR \"\\\\PIPE\\\\LANMAN\"\n+\tND_TCHECK2(*(data1 + 2), strlen(PIPE_LANMAN_STR) + 1);\n+\tif (strcmp((const char *)(data1 + 2), PIPE_LANMAN_STR) == 0) {\n \t    print_ipc(ndo, param, paramlen, data, datalen);\n \t    return;\n \t}\n+#undef PIPE_LANMAN_STR\n \n \tif (paramlen)\n \t    smb_fdata(ndo, param, f3, min(param + paramlen, maxbuf), unicodestr);",
    "diff_line_info": {
        "deleted_lines": [
            "",
            "\tif (strcmp((const char *)(data1 + 2), \"\\\\MAILSLOT\\\\BROWSE\") == 0) {",
            "\tif (strcmp((const char *)(data1 + 2), \"\\\\PIPE\\\\LANMAN\") == 0) {"
        ],
        "added_lines": [
            "#define MAILSLOT_BROWSE_STR \"\\\\MAILSLOT\\\\BROWSE\"",
            "\tND_TCHECK2(*(data1 + 2), strlen(MAILSLOT_BROWSE_STR) + 1);",
            "\tif (strcmp((const char *)(data1 + 2), MAILSLOT_BROWSE_STR) == 0) {",
            "#undef MAILSLOT_BROWSE_STR",
            "#define PIPE_LANMAN_STR \"\\\\PIPE\\\\LANMAN\"",
            "\tND_TCHECK2(*(data1 + 2), strlen(PIPE_LANMAN_STR) + 1);",
            "\tif (strcmp((const char *)(data1 + 2), PIPE_LANMAN_STR) == 0) {",
            "#undef PIPE_LANMAN_STR"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}