{
    "cve_id": "CVE-2008-7061",
    "cwe_ids": [
        "CWE-399"
    ],
    "cvss_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
    "cvss_is_v3": false,
    "repo_name": "chromium",
    "commit_msg": "Set an upper limit to the number of characters that can appear in a tooltip string.\n\nB=1368905\n\nReview URL: http://codereview.chromium.org/2409\n\ngit-svn-id: svn://svn.chromium.org/chrome/trunk/src@2042 0039d316-1c4b-4281-b951-d872f2087c98",
    "commit_hash": "3413dd8e6353804a0931fc86f842194a6891be90",
    "git_url": "https://github.com/chromium/chromium/commit/3413dd8e6353804a0931fc86f842194a6891be90",
    "file_path": "chrome/browser/render_widget_host_hwnd.cc",
    "func_name": "RenderWidgetHostHWND::SetTooltipText",
    "func_before": "void RenderWidgetHostHWND::SetTooltipText(const std::wstring& tooltip_text) {\n  if (tooltip_text != tooltip_text_) {\n    tooltip_text_ = tooltip_text;\n    // Need to check if the tooltip is already showing so that we don't\n    // immediately show the tooltip with no delay when we move the mouse from\n    // a region with no tooltip to a region with a tooltip.\n    if (::IsWindow(tooltip_hwnd_) && tooltip_showing_) {\n      ::SendMessage(tooltip_hwnd_, TTM_POP, 0, 0);\n      ::SendMessage(tooltip_hwnd_, TTM_POPUP, 0, 0);\n    }\n  } else {\n    // Make sure the tooltip gets closed after TTN_POP gets sent. For some\n    // reason this doesn't happen automatically, so moving the mouse around\n    // within the same link/image/etc doesn't cause the tooltip to re-appear.\n    if (!tooltip_showing_) {\n      if (::IsWindow(tooltip_hwnd_))\n        ::SendMessage(tooltip_hwnd_, TTM_POP, 0, 0);\n    }\n  }\n}",
    "abstract_func_before": "void RenderWidgetHostHWND::SetTooltipText(const std::wstring& VAR_0) {\n  if (VAR_0 != VAR_1) {\n    VAR_1 = VAR_0;\n    /* COMMENT_0 */\n    /* COMMENT_1 */\n    /* COMMENT_2 */\n    if (::IsWindow(VAR_2) && VAR_3) {\n      ::SendMessage(VAR_2, VAR_4, 0, 0);\n      ::SendMessage(VAR_2, VAR_5, 0, 0);\n    }\n  } else {\n    /* COMMENT_3 */\n    /* COMMENT_4 */\n    /* COMMENT_5 */\n    if (!VAR_3) {\n      if (::IsWindow(VAR_2))\n        ::SendMessage(VAR_2, VAR_4, 0, 0);\n    }\n  }\n}",
    "func_graph_path_before": "chromium/3413dd8e6353804a0931fc86f842194a6891be90/render_widget_host_hwnd.cc/vul/before/0.json",
    "func": "void RenderWidgetHostHWND::SetTooltipText(const std::wstring& tooltip_text) {\n  if (tooltip_text != tooltip_text_) {\n    tooltip_text_ = tooltip_text;\n\n    // Clamp the tooltip length to kMaxTooltipLength so that we don't\n    // accidentally DOS the user with a mega tooltip (since Windows doesn't seem\n    // to do this itself).\n    if (tooltip_text_.length() > kMaxTooltipLength)\n      tooltip_text_ = tooltip_text_.substr(0, kMaxTooltipLength);\n\n    // Need to check if the tooltip is already showing so that we don't\n    // immediately show the tooltip with no delay when we move the mouse from\n    // a region with no tooltip to a region with a tooltip.\n    if (::IsWindow(tooltip_hwnd_) && tooltip_showing_) {\n      ::SendMessage(tooltip_hwnd_, TTM_POP, 0, 0);\n      ::SendMessage(tooltip_hwnd_, TTM_POPUP, 0, 0);\n    }\n  } else {\n    // Make sure the tooltip gets closed after TTN_POP gets sent. For some\n    // reason this doesn't happen automatically, so moving the mouse around\n    // within the same link/image/etc doesn't cause the tooltip to re-appear.\n    if (!tooltip_showing_) {\n      if (::IsWindow(tooltip_hwnd_))\n        ::SendMessage(tooltip_hwnd_, TTM_POP, 0, 0);\n    }\n  }\n}",
    "abstract_func": "void RenderWidgetHostHWND::SetTooltipText(const std::wstring& VAR_0) {\n  if (VAR_0 != VAR_1) {\n    VAR_1 = VAR_0;\n\n    /* COMMENT_0 */\n    /* COMMENT_1 */\n    /* COMMENT_2 */\n    if (VAR_1.length() > VAR_2)\n      VAR_1 = VAR_1.substr(0, VAR_2);\n\n    /* COMMENT_3 */\n    /* COMMENT_4 */\n    /* COMMENT_5 */\n    if (::IsWindow(VAR_3) && VAR_4) {\n      ::SendMessage(VAR_3, VAR_5, 0, 0);\n      ::SendMessage(VAR_3, VAR_6, 0, 0);\n    }\n  } else {\n    /* COMMENT_6 */\n    /* COMMENT_7 */\n    /* COMMENT_8 */\n    if (!VAR_4) {\n      if (::IsWindow(VAR_3))\n        ::SendMessage(VAR_3, VAR_5, 0, 0);\n    }\n  }\n}",
    "func_graph_path": "chromium/3413dd8e6353804a0931fc86f842194a6891be90/render_widget_host_hwnd.cc/vul/after/0.json",
    "diff_func": "--- func_before\n+++ func_after\n@@ -1,6 +1,13 @@\n void RenderWidgetHostHWND::SetTooltipText(const std::wstring& tooltip_text) {\n   if (tooltip_text != tooltip_text_) {\n     tooltip_text_ = tooltip_text;\n+\n+    // Clamp the tooltip length to kMaxTooltipLength so that we don't\n+    // accidentally DOS the user with a mega tooltip (since Windows doesn't seem\n+    // to do this itself).\n+    if (tooltip_text_.length() > kMaxTooltipLength)\n+      tooltip_text_ = tooltip_text_.substr(0, kMaxTooltipLength);\n+\n     // Need to check if the tooltip is already showing so that we don't\n     // immediately show the tooltip with no delay when we move the mouse from\n     // a region with no tooltip to a region with a tooltip.",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "",
            "    // Clamp the tooltip length to kMaxTooltipLength so that we don't",
            "    // accidentally DOS the user with a mega tooltip (since Windows doesn't seem",
            "    // to do this itself).",
            "    if (tooltip_text_.length() > kMaxTooltipLength)",
            "      tooltip_text_ = tooltip_text_.substr(0, kMaxTooltipLength);",
            ""
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}