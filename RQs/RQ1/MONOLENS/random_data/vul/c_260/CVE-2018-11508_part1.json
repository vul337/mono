{
    "cve_id": "CVE-2018-11508",
    "cwe_ids": [
        "CWE-200"
    ],
    "cvss_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
    "cvss_is_v3": false,
    "repo_name": "torvalds/linux",
    "commit_msg": "compat: fix 4-byte infoleak via uninitialized struct field\n\nCommit 3a4d44b61625 (\"ntp: Move adjtimex related compat syscalls to\nnative counterparts\") removed the memset() in compat_get_timex().  Since\nthen, the compat adjtimex syscall can invoke do_adjtimex() with an\nuninitialized ->tai.\n\nIf do_adjtimex() doesn't write to ->tai (e.g.  because the arguments are\ninvalid), compat_put_timex() then copies the uninitialized ->tai field\nto userspace.\n\nFix it by adding the memset() back.\n\nFixes: 3a4d44b61625 (\"ntp: Move adjtimex related compat syscalls to native counterparts\")\nSigned-off-by: Jann Horn <jannh@google.com>\nAcked-by: Kees Cook <keescook@chromium.org>\nAcked-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "commit_hash": "0a0b98734479aa5b3c671d5190e86273372cab95",
    "git_url": "https://github.com/torvalds/linux/commit/0a0b98734479aa5b3c671d5190e86273372cab95",
    "file_path": "kernel/compat.c",
    "func_name": "compat_get_timex",
    "func_before": "int compat_get_timex(struct timex *txc, const struct compat_timex __user *utp)\n{\n\tstruct compat_timex tx32;\n\n\tif (copy_from_user(&tx32, utp, sizeof(struct compat_timex)))\n\t\treturn -EFAULT;\n\n\ttxc->modes = tx32.modes;\n\ttxc->offset = tx32.offset;\n\ttxc->freq = tx32.freq;\n\ttxc->maxerror = tx32.maxerror;\n\ttxc->esterror = tx32.esterror;\n\ttxc->status = tx32.status;\n\ttxc->constant = tx32.constant;\n\ttxc->precision = tx32.precision;\n\ttxc->tolerance = tx32.tolerance;\n\ttxc->time.tv_sec = tx32.time.tv_sec;\n\ttxc->time.tv_usec = tx32.time.tv_usec;\n\ttxc->tick = tx32.tick;\n\ttxc->ppsfreq = tx32.ppsfreq;\n\ttxc->jitter = tx32.jitter;\n\ttxc->shift = tx32.shift;\n\ttxc->stabil = tx32.stabil;\n\ttxc->jitcnt = tx32.jitcnt;\n\ttxc->calcnt = tx32.calcnt;\n\ttxc->errcnt = tx32.errcnt;\n\ttxc->stbcnt = tx32.stbcnt;\n\n\treturn 0;\n}",
    "abstract_func_before": "int compat_get_timex(struct timex *VAR_0, const struct compat_timex __user *VAR_1)\n{\n\tstruct compat_timex VAR_2;\n\n\tif (copy_from_user(&VAR_2, VAR_1, sizeof(struct compat_timex)))\n\t\treturn -VAR_3;\n\n\tVAR_0->modes = VAR_2.modes;\n\tVAR_0->offset = VAR_2.offset;\n\tVAR_0->freq = VAR_2.freq;\n\tVAR_0->maxerror = VAR_2.maxerror;\n\tVAR_0->esterror = VAR_2.esterror;\n\tVAR_0->status = VAR_2.status;\n\tVAR_0->constant = VAR_2.constant;\n\tVAR_0->precision = VAR_2.precision;\n\tVAR_0->tolerance = VAR_2.tolerance;\n\tVAR_0->time.tv_sec = VAR_2.time.tv_sec;\n\tVAR_0->time.tv_usec = VAR_2.time.tv_usec;\n\tVAR_0->tick = VAR_2.tick;\n\tVAR_0->ppsfreq = VAR_2.ppsfreq;\n\tVAR_0->jitter = VAR_2.jitter;\n\tVAR_0->shift = VAR_2.shift;\n\tVAR_0->stabil = VAR_2.stabil;\n\tVAR_0->jitcnt = VAR_2.jitcnt;\n\tVAR_0->calcnt = VAR_2.calcnt;\n\tVAR_0->errcnt = VAR_2.errcnt;\n\tVAR_0->stbcnt = VAR_2.stbcnt;\n\n\treturn 0;\n}",
    "func_graph_path_before": null,
    "func": "int compat_get_timex(struct timex *txc, const struct compat_timex __user *utp)\n{\n\tstruct compat_timex tx32;\n\n\tmemset(txc, 0, sizeof(struct timex));\n\tif (copy_from_user(&tx32, utp, sizeof(struct compat_timex)))\n\t\treturn -EFAULT;\n\n\ttxc->modes = tx32.modes;\n\ttxc->offset = tx32.offset;\n\ttxc->freq = tx32.freq;\n\ttxc->maxerror = tx32.maxerror;\n\ttxc->esterror = tx32.esterror;\n\ttxc->status = tx32.status;\n\ttxc->constant = tx32.constant;\n\ttxc->precision = tx32.precision;\n\ttxc->tolerance = tx32.tolerance;\n\ttxc->time.tv_sec = tx32.time.tv_sec;\n\ttxc->time.tv_usec = tx32.time.tv_usec;\n\ttxc->tick = tx32.tick;\n\ttxc->ppsfreq = tx32.ppsfreq;\n\ttxc->jitter = tx32.jitter;\n\ttxc->shift = tx32.shift;\n\ttxc->stabil = tx32.stabil;\n\ttxc->jitcnt = tx32.jitcnt;\n\ttxc->calcnt = tx32.calcnt;\n\ttxc->errcnt = tx32.errcnt;\n\ttxc->stbcnt = tx32.stbcnt;\n\n\treturn 0;\n}",
    "abstract_func": "int compat_get_timex(struct timex *VAR_0, const struct compat_timex __user *VAR_1)\n{\n\tstruct compat_timex VAR_2;\n\n\tmemset(VAR_0, 0, sizeof(struct timex));\n\tif (copy_from_user(&VAR_2, VAR_1, sizeof(struct compat_timex)))\n\t\treturn -VAR_3;\n\n\tVAR_0->modes = VAR_2.modes;\n\tVAR_0->offset = VAR_2.offset;\n\tVAR_0->freq = VAR_2.freq;\n\tVAR_0->maxerror = VAR_2.maxerror;\n\tVAR_0->esterror = VAR_2.esterror;\n\tVAR_0->status = VAR_2.status;\n\tVAR_0->constant = VAR_2.constant;\n\tVAR_0->precision = VAR_2.precision;\n\tVAR_0->tolerance = VAR_2.tolerance;\n\tVAR_0->time.tv_sec = VAR_2.time.tv_sec;\n\tVAR_0->time.tv_usec = VAR_2.time.tv_usec;\n\tVAR_0->tick = VAR_2.tick;\n\tVAR_0->ppsfreq = VAR_2.ppsfreq;\n\tVAR_0->jitter = VAR_2.jitter;\n\tVAR_0->shift = VAR_2.shift;\n\tVAR_0->stabil = VAR_2.stabil;\n\tVAR_0->jitcnt = VAR_2.jitcnt;\n\tVAR_0->calcnt = VAR_2.calcnt;\n\tVAR_0->errcnt = VAR_2.errcnt;\n\tVAR_0->stbcnt = VAR_2.stbcnt;\n\n\treturn 0;\n}",
    "func_graph_path": null,
    "diff_func": "--- func_before\n+++ func_after\n@@ -2,6 +2,7 @@\n {\n \tstruct compat_timex tx32;\n \n+\tmemset(txc, 0, sizeof(struct timex));\n \tif (copy_from_user(&tx32, utp, sizeof(struct compat_timex)))\n \t\treturn -EFAULT;\n ",
    "diff_line_info": {
        "deleted_lines": [],
        "added_lines": [
            "\tmemset(txc, 0, sizeof(struct timex));"
        ]
    },
    "is_vul": true,
    "pr_url": null,
    "description": "no more info"
}